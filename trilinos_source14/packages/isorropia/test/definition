PACKAGE_NAME=Isorropria

#
# FRAMEWORK group
#

(FRAMEWORK, IsorropiaTests) {
   DIRS = geometric;
   ARGS = --f=geometric/brack_3D.coords;
   COMM = SERIAL, MPI;
}

(INSTALL, IsorropiaTests) {
   DIRS = geometric;
   ARGS = --f=geometric/brack_3D.coords;
   COMM = SERIAL, MPI;
}

(FRAMEWORK, IsorropiaTests) {
   DIRS = geometric;
   ARGS = --f=geometric/hammond_2D.coords;
   COMM = SERIAL, MPI;
}

(INSTALL, IsorropiaTests) {
   DIRS = geometric;
   ARGS = --f=geometric/hammond_2D.coords;
   COMM = SERIAL, MPI;
}

(FRAMEWORK, IsorropiaTests) {
   DIRS = geometric;
   ARGS = --f=geometric/simple.coords;
   COMM = SERIAL, MPI;
}

(INSTALL, IsorropiaTests) {
   DIRS = geometric;
   ARGS = --f=geometric/simple.coords;
   COMM = SERIAL, MPI;
}

(FRAMEWORK, IsorropiaTests) {
   DIRS = utest,
          rebalance_1d_default,
          zoltan;
   ARGS = --v;
   COMM = SERIAL, MPI;
}

(INSTALL, IsorropiaTests) {
   DIRS = utest,
          rebalance_1d_default,
          zoltan;
   ARGS = --v;
   COMM = SERIAL, MPI;
}

(FRAMEWORK, IsorropiaTests) {
   DIRS = mtx;
   ARGS = --v --f=mtx/simple.mtx;
   COMM = SERIAL, MPI;
}


(INSTALL, IsorropiaTests) {
   DIRS = mtx;
   ARGS = --v --f=mtx/simple.mtx;
   COMM = SERIAL, MPI;
}

(FRAMEWORK, IsorropiaTests) {
   DIRS = mtx;
   ARGS = --v --f=mtx/felix.mtx;
   COMM = SERIAL, MPI;
}


(INSTALL, IsorropiaTests) {
   DIRS = mtx;
   ARGS = --v --f=mtx/felix.mtx;
   COMM = SERIAL, MPI;
}

(FRAMEWORK, IsorropiaTests) {
   DIRS = mtx;
   ARGS = --v --f=mtx/simple_25X50.mtx;
   COMM = SERIAL, MPI;
}


(INSTALL, IsorropiaTests) {
   DIRS = mtx;
   ARGS = --v --f=mtx/simple_25X50.mtx;
   COMM = SERIAL, MPI;
}

(FRAMEWORK, IsorropiaTests) {
   DIRS = mtx;
   ARGS = --v --f=mtx/simple_50X25.mtx;
   COMM = SERIAL, MPI;
}

(INSTALL, IsorropiaTests) {
   DIRS = mtx;
   ARGS = --v --f=mtx/simple_50X25.mtx;
   COMM = SERIAL, MPI;
}

(FRAMEWORK, IsorropiaTests) {
   DIRS = probing;
   ARGS = --v;
   COMM = SERIAL, MPI;
}

(INSTALL, IsorropiaTests) {
   DIRS = probing;
   ARGS = --v;
   COMM = SERIAL, MPI;
}

