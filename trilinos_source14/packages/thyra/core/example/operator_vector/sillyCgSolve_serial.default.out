
***
*** Running silly CG solver using scalar type = 'float' ...
***

Constructing tridiagonal matrix A of dimension = 500 and diagonal multiplier = 1.001 ...

Testing the constructed linear operator A ...
  
  *** Entering LinearOpTester<float,float>::check(op,...) ...
  
  describe op:
    ExampleTridiagSerialLinearOp<float>
  
  Checking the domain and range spaces ... passed!
  
  this->check_linear_properties()==true: Checking the linear properties of the forward linear operator ... passed!
  
  (this->check_linear_properties()&&this->check_adjoint())==false: Skipping the check of the linear properties of the adjoint operator!
  
  this->check_adjoint()==false: Skipping check for the agreement of the adjoint and forward operators!
  
  this->check_for_symmetry()==false: Skipping check of symmetry ...
  
  Congratulations, this LinearOpBase object seems to check out!
  
  *** Leaving LinearOpTester<float,float>::check(...)

Testing the linear operator used with the solve ...
  
  *** Entering LinearOpTester<float,float>::check(op,...) ...
  
  describe op:
    ExampleTridiagSerialLinearOp<float>
  
  Checking the domain and range spaces ... passed!
  
  this->check_linear_properties()==true: Checking the linear properties of the forward linear operator ... passed!
  
  (this->check_linear_properties()&&this->check_adjoint())==false: Skipping the check of the linear properties of the adjoint operator!
  
  this->check_adjoint()==false: Skipping check for the agreement of the adjoint and forward operators!
  
  this->check_for_symmetry()==true: Performing check of symmetry ... passed!
  
  Congratulations, this LinearOpBase object seems to check out!
  
  *** Leaving LinearOpTester<float,float>::check(...)

Solving the linear system with sillyCgSolve(...) ...
  
  Starting CG solver ...
  
  describe A:
    ExampleTridiagSerialLinearOp<float>
  
  describe b:
    Thyra::DefaultSpmdVector<float>{spmdSpace=Thyra::DefaultSpmdVectorSpace<float>{globalDim=500,localSubDim=500,localOffset=0,comm=NULL}}
  
  describe x:
    Thyra::DefaultSpmdVector<float>{spmdSpace=Thyra::DefaultSpmdVectorSpace<float>{globalDim=500,localSubDim=500,localOffset=0,comm=NULL}}
  
  Iter = 0, ||b-A*x||/||b-A*x0|| = 1.000000e+00
  Iter = 31, ||b-A*x||/||b-A*x0|| = 3.172036e-01
  Iter = 62, ||b-A*x||/||b-A*x0|| = 4.875921e-02
  Iter = 93, ||b-A*x||/||b-A*x0|| = 1.090156e-02
  Iter = 124, ||b-A*x||/||b-A*x0|| = 2.477392e-03
  Iter = 155, ||b-A*x||/||b-A*x0|| = 8.997882e-04
  Iter = 186, ||b-A*x||/||b-A*x0|| = 1.621065e-04
  Iter = 202, ||b-A*x||/||b-A*x0|| = 9.563828e-05

Checking the residual ourselves ...
  
  ||b-A*x||/||b|| = 1.328952e-03/1.270762e+01 = 1.045792e-04 <= 10.0*tolerance = 9.999999e-04: passed

Total time = 1.059710e-01 sec

***
*** Running silly CG solver using scalar type = 'double' ...
***

Constructing tridiagonal matrix A of dimension = 500 and diagonal multiplier = 1.001000e+00 ...

Testing the constructed linear operator A ...
  
  *** Entering LinearOpTester<double,double>::check(op,...) ...
  
  describe op:
    ExampleTridiagSerialLinearOp<double>
  
  Checking the domain and range spaces ... passed!
  
  this->check_linear_properties()==true: Checking the linear properties of the forward linear operator ... passed!
  
  (this->check_linear_properties()&&this->check_adjoint())==false: Skipping the check of the linear properties of the adjoint operator!
  
  this->check_adjoint()==false: Skipping check for the agreement of the adjoint and forward operators!
  
  this->check_for_symmetry()==false: Skipping check of symmetry ...
  
  Congratulations, this LinearOpBase object seems to check out!
  
  *** Leaving LinearOpTester<double,double>::check(...)

Testing the linear operator used with the solve ...
  
  *** Entering LinearOpTester<double,double>::check(op,...) ...
  
  describe op:
    ExampleTridiagSerialLinearOp<double>
  
  Checking the domain and range spaces ... passed!
  
  this->check_linear_properties()==true: Checking the linear properties of the forward linear operator ... passed!
  
  (this->check_linear_properties()&&this->check_adjoint())==false: Skipping the check of the linear properties of the adjoint operator!
  
  this->check_adjoint()==false: Skipping check for the agreement of the adjoint and forward operators!
  
  this->check_for_symmetry()==true: Performing check of symmetry ... passed!
  
  Congratulations, this LinearOpBase object seems to check out!
  
  *** Leaving LinearOpTester<double,double>::check(...)

Solving the linear system with sillyCgSolve(...) ...
  
  Starting CG solver ...
  
  describe A:
    ExampleTridiagSerialLinearOp<double>
  
  describe b:
    Thyra::DefaultSpmdVector<double>{spmdSpace=Thyra::DefaultSpmdVectorSpace<double>{globalDim=500,localSubDim=500,localOffset=0,comm=NULL}}
  
  describe x:
    Thyra::DefaultSpmdVector<double>{spmdSpace=Thyra::DefaultSpmdVectorSpace<double>{globalDim=500,localSubDim=500,localOffset=0,comm=NULL}}
  
  Iter = 0, ||b-A*x||/||b-A*x0|| = 1.000000e+00
  Iter = 31, ||b-A*x||/||b-A*x0|| = 3.172143e-01
  Iter = 62, ||b-A*x||/||b-A*x0|| = 4.876230e-02
  Iter = 93, ||b-A*x||/||b-A*x0|| = 1.090262e-02
  Iter = 124, ||b-A*x||/||b-A*x0|| = 2.477719e-03
  Iter = 155, ||b-A*x||/||b-A*x0|| = 8.999423e-04
  Iter = 186, ||b-A*x||/||b-A*x0|| = 1.621384e-04
  Iter = 202, ||b-A*x||/||b-A*x0|| = 9.565884e-05

Checking the residual ourselves ...
  
  ||b-A*x||/||b|| = 1.215596e-03/1.270762e+01 = 9.565884e-05 <= 10.0*tolerance = 1.000000e-03: passed

Total time = 7.277300e-02 sec

***
*** Running silly CG solver using scalar type = 'std::complex<float>' ...
***

Constructing tridiagonal matrix A of dimension = 500 and diagonal multiplier = (1.001000e+00,0.000000e+00) ...

Testing the constructed linear operator A ...
  
  *** Entering LinearOpTester<std::complex<float>,std::complex<float>>::check(op,...) ...
  
  describe op:
    ExampleTridiagSerialLinearOp<std::complex<float>>
  
  Checking the domain and range spaces ... passed!
  
  this->check_linear_properties()==true: Checking the linear properties of the forward linear operator ... passed!
  
  (this->check_linear_properties()&&this->check_adjoint())==false: Skipping the check of the linear properties of the adjoint operator!
  
  this->check_adjoint()==false: Skipping check for the agreement of the adjoint and forward operators!
  
  this->check_for_symmetry()==false: Skipping check of symmetry ...
  
  Congratulations, this LinearOpBase object seems to check out!
  
  *** Leaving LinearOpTester<std::complex<float>,std::complex<float>>::check(...)

Testing the linear operator used with the solve ...
  
  *** Entering LinearOpTester<std::complex<float>,std::complex<float>>::check(op,...) ...
  
  describe op:
    ExampleTridiagSerialLinearOp<std::complex<float>>
  
  Checking the domain and range spaces ... passed!
  
  this->check_linear_properties()==true: Checking the linear properties of the forward linear operator ... passed!
  
  (this->check_linear_properties()&&this->check_adjoint())==false: Skipping the check of the linear properties of the adjoint operator!
  
  this->check_adjoint()==false: Skipping check for the agreement of the adjoint and forward operators!
  
  this->check_for_symmetry()==true: Performing check of symmetry ... passed!
  
  Congratulations, this LinearOpBase object seems to check out!
  
  *** Leaving LinearOpTester<std::complex<float>,std::complex<float>>::check(...)

Solving the linear system with sillyCgSolve(...) ...
  
  Starting CG solver ...
  
  describe A:
    ExampleTridiagSerialLinearOp<std::complex<float>>
  
  describe b:
    Thyra::DefaultSpmdVector<std::complex<float> >{spmdSpace=Thyra::DefaultSpmdVectorSpace<std::complex<float> >{globalDim=500,localSubDim=500,localOffset=0,comm=NULL}}
  
  describe x:
    Thyra::DefaultSpmdVector<std::complex<float> >{spmdSpace=Thyra::DefaultSpmdVectorSpace<std::complex<float> >{globalDim=500,localSubDim=500,localOffset=0,comm=NULL}}
  
  Iter = 0, ||b-A*x||/||b-A*x0|| = 1.000000e+00
  Iter = 31, ||b-A*x||/||b-A*x0|| = 3.578966e-01
  Iter = 62, ||b-A*x||/||b-A*x0|| = 6.437085e-02
  Iter = 93, ||b-A*x||/||b-A*x0|| = 1.508294e-02
  Iter = 124, ||b-A*x||/||b-A*x0|| = 3.664481e-03
  Iter = 155, ||b-A*x||/||b-A*x0|| = 9.545431e-04
  Iter = 186, ||b-A*x||/||b-A*x0|| = 2.053422e-04
  Iter = 202, ||b-A*x||/||b-A*x0|| = 9.788808e-05

Checking the residual ourselves ...
  
  ||b-A*x||/||b|| = 1.907002e-03/1.818107e+01 = 1.048894e-04 <= 10.0*tolerance = 9.999999e-04: passed

Total time = 2.331660e-01 sec

***
*** Running silly CG solver using scalar type = 'std::complex<double>' ...
***

Constructing tridiagonal matrix A of dimension = 500 and diagonal multiplier = (1.001000e+00,0.000000e+00) ...

Testing the constructed linear operator A ...
  
  *** Entering LinearOpTester<std::complex<double>,std::complex<double>>::check(op,...) ...
  
  describe op:
    ExampleTridiagSerialLinearOp<std::complex<double>>
  
  Checking the domain and range spaces ... passed!
  
  this->check_linear_properties()==true: Checking the linear properties of the forward linear operator ... passed!
  
  (this->check_linear_properties()&&this->check_adjoint())==false: Skipping the check of the linear properties of the adjoint operator!
  
  this->check_adjoint()==false: Skipping check for the agreement of the adjoint and forward operators!
  
  this->check_for_symmetry()==false: Skipping check of symmetry ...
  
  Congratulations, this LinearOpBase object seems to check out!
  
  *** Leaving LinearOpTester<std::complex<double>,std::complex<double>>::check(...)

Testing the linear operator used with the solve ...
  
  *** Entering LinearOpTester<std::complex<double>,std::complex<double>>::check(op,...) ...
  
  describe op:
    ExampleTridiagSerialLinearOp<std::complex<double>>
  
  Checking the domain and range spaces ... passed!
  
  this->check_linear_properties()==true: Checking the linear properties of the forward linear operator ... passed!
  
  (this->check_linear_properties()&&this->check_adjoint())==false: Skipping the check of the linear properties of the adjoint operator!
  
  this->check_adjoint()==false: Skipping check for the agreement of the adjoint and forward operators!
  
  this->check_for_symmetry()==true: Performing check of symmetry ... passed!
  
  Congratulations, this LinearOpBase object seems to check out!
  
  *** Leaving LinearOpTester<std::complex<double>,std::complex<double>>::check(...)

Solving the linear system with sillyCgSolve(...) ...
  
  Starting CG solver ...
  
  describe A:
    ExampleTridiagSerialLinearOp<std::complex<double>>
  
  describe b:
    Thyra::DefaultSpmdVector<std::complex<double> >{spmdSpace=Thyra::DefaultSpmdVectorSpace<std::complex<double> >{globalDim=500,localSubDim=500,localOffset=0,comm=NULL}}
  
  describe x:
    Thyra::DefaultSpmdVector<std::complex<double> >{spmdSpace=Thyra::DefaultSpmdVectorSpace<std::complex<double> >{globalDim=500,localSubDim=500,localOffset=0,comm=NULL}}
  
  Iter = 0, ||b-A*x||/||b-A*x0|| = 1.000000e+00
  Iter = 31, ||b-A*x||/||b-A*x0|| = 3.579080e-01
  Iter = 62, ||b-A*x||/||b-A*x0|| = 6.437509e-02
  Iter = 93, ||b-A*x||/||b-A*x0|| = 1.508444e-02
  Iter = 124, ||b-A*x||/||b-A*x0|| = 3.664968e-03
  Iter = 155, ||b-A*x||/||b-A*x0|| = 9.546967e-04
  Iter = 186, ||b-A*x||/||b-A*x0|| = 2.053825e-04
  Iter = 202, ||b-A*x||/||b-A*x0|| = 9.790892e-05

Checking the residual ourselves ...
  
  ||b-A*x||/||b|| = 1.780089e-03/1.818107e+01 = 9.790892e-05 <= 10.0*tolerance = 1.000000e-03: passed

Total time = 1.999250e-01 sec

Congratulations! All of the tests checked out!
