Here are some examples for using the run the test coverage.

On bandito, i need the new gcc lib in my path setenv LD_LIBRARY_PATH
/opt/gcc-3.4.4/lib

cd ~cgbaker/Trilinos/CODE_COV
<run config script and make>
cd ~cgbaker/Trilinos
./commonTools/test/coverage/testcoverage    \
   --trilinos-dir=/home/cgbaker/Trilinos    \
   --build-dir=CODE_COV                     \
   --with-gcov=/opt/gcc-3.4.4/bin/gcov      \
   --with-package=anasazi                   \
   --with-package=epetra                    \
   --with-package=teuchos                   \
   --with-package=triutils                  \
   --run-tests

For directory summaries, same as above but without the --with-packages
./commonTools/test/coverage/testcoverage    \
   --trilinos-dir=/home/cgbaker/Trilinos    \
   --build-dir=CODE_COV                     \
   --with-gcov=/opt/gcc-3.4.4/bin/gcov
      
For specific directory summaries, try
./commonTools/test/coverage/testcoverage    \
   --trilinos-dir=/home/cgbaker/Trilinos    \
   --build-dir=CODE_COV                     \
   --with-gcov=/opt/gcc-3.4.4/bin/gcov      \
   --with-package=anasazi                   \
   --with-package=epetra                    \
   --with-package=teuchos                   \
   --with-package=triutils                  \
   --without-files                          \
   --with-directories


For line-by-line code listing with coverage information, add the --with-report
flag, which will be passed on to gcovmerge. This creates an HTML file called
coverage.html. This file contains the contents of each source file analyzed by
gcovmerge, so it may be very large.

Tests only need be run once per compile. Afterwards, just neglect the
--run-tests option.

For help on testcoverage, type `testcoverage --help`
