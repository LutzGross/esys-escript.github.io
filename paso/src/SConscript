
########################################################
#
# Copyright (c) 2003-2010 by University of Queensland
# Earth Systems Science Computational Center (ESSCC)
# http://www.uq.edu.au/esscc
#
# Primary Business: Queensland, Australia
# Licensed under the Open Software License version 3.0
# http://www.opensource.org/licenses/osl-3.0.php
#
########################################################


import os
Import('*')

local_env = clone_env(env_mpi)

# And just for blocktimer cancer.....
local_env.Append(LIBS = ['esysUtils'])

lib_name = 'paso'

sources = """
	BiCGStab.c
	BlockOps.c
	Coupler.c
	Coarsening.c
	Distribution.c
	Functions.c
	GMRES.c
	GMRES2.c
	MKL.c
	NewtonGMRES.c
	Options_getPackage.c
	Options_getSolver.c
	Options_setDefaults.c
	PCG.c
	Paso.c
	PasoUtil.c
	Paso_MPI.c
	Pattern.c
	Pattern_getSubpattern.c
	Pattern_mis.c
	Pattern_reduceBandwidth.c
	Pattern_unrollBlocks.c
	SharedComponents.c
	Solver.c
	Transport.c
	Transport_solve.c
	FCTSolver.c
	FCTSolver_util.c
	ReactiveSolver.c
	Solver_Function.c
	Smoother.c
	ILU.c
	RILU.c
	AMG.c
	AMLI.c
	SchurComplement.c
	Preconditioner.c
	SparseMatrix.c
	SparseMatrix_MatrixVector.c
	SparseMatrix_addAbsRow.c
	SparseMatrix_addRow.c
	SparseMatrix_getSubmatrix.c
	SparseMatrix_AMGcomponents.c
	SparseMatrix_nullifyRowsAndCols.c
	SparseMatrix_saveHB.c
	SparseMatrix_setValues.c
        SparseMatrix_invMain.c
	SystemMatrix.c
	SystemMatrixPattern.c
	SystemMatrixPattern_unrollBlocks.c
	SystemMatrix_MatrixVector.c
	SystemMatrix_borrowNormalization.c
	SystemMatrix_getSystemMatrixTypeId.c
	SystemMatrix_loadMM.c
        SystemMatrix_MIS.c
	SystemMatrix_nullifyRows.c
	SystemMatrix_nullifyRowsAndCols.c
	SystemMatrix_rowSum.c
	SystemMatrix_saveHB.c
	SystemMatrix_saveMM.c
	SystemMatrix_setValues.c
	TFQMR.c
	MINRES.c
	UMFPACK.c
	mmio.c
	performance.c
	solve.c
""".split()
headers = """
	Common.h
	Coupler.h
	Coarsening.h
	Distribution.h
	Functions.h
	MKL.h
	Options.h
	Paso.h
	PasoUtil.h
	Paso_MPI.h
	Pattern.h
	Preconditioner.h
	SharedComponents.h
	Solver.h
	Transport.h
	FCTSolver.h
	ReactiveSolver.h
	SparseMatrix.h
	SystemMatrix.h
        SystemMatrix_MIS.h
	SystemMatrixPattern.h
	UMFPACK.h
	mmio.h
	mpi_C.h
	BlockOps.h
	performance.h
""".split()

if IS_WINDOWS_PLATFORM :
  local_env.Append(CPPDEFINES = ['PASO_EXPORTS'])

if local_env['share_paso'] :
  lib = local_env.SharedLibrary(lib_name, sources)
else:
  lib = local_env.StaticLibrary(lib_name, sources)

env.Alias('target_paso_a', lib)

include_path = Dir('paso', local_env['incinstall'])
solvers_include_path = Dir('Solvers', include_path)

tmp1 = local_env.Install(include_path, headers )
env.Alias('target_install_paso_headers', [tmp1])

tmp2 = local_env.Install(local_env['libinstall'], lib)
env.Alias('target_install_paso_a', [tmp2])
 
