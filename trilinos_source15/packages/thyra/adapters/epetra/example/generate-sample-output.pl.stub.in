#!/usr/bin/perl -w
#
# This script generates sample output from any different programs in
# epetra/thyrs that is then automatically written into the source tree
# whenever the test harness is run.  This output is then read into the doxygen
# documentation.
#
# This script must be run from
#
#  TRILINOS_BUILD_DIR/packages/epetra/test
#
# and it will be when run by the test harness.
#

#
# Things you do *NOT* have to change!
#

use strict;

my $abs_top_srcdir = "@abs_top_srcdir@";

sub run_cmnd {
  my $cmnd = shift;
  my $output = shift;
  my $total_cmnd = "$cmnd 2>&1 | tee $output";
  print "\nRunning command:\n\n$total_cmnd\n";
  system($total_cmnd);
}

#
# Things you change for your package
#

# sillyCgSolve_epetra.cpp

run_cmnd(
  "../adapters/epetra/example/sillyCgSolve_epetra.exe"
  ,"$abs_top_srcdir/adapters/epetra/example/sillyCgSolve_epetra.default.out"
  );
run_cmnd(
  "../adapters/epetra/example/sillyCgSolve_epetra.exe --echo-command-line --help"
  ,"$abs_top_srcdir/adapters/epetra/example/sillyCgSolve_epetra.help.out"
  );

# sillyPowerMethod_epetra.cpp

run_cmnd(
  "../adapters/epetra/example/sillyPowerMethod_epetra.exe"
  ,"$abs_top_srcdir/adapters/epetra/example/sillyPowerMethod_epetra.default.out"
  );
run_cmnd(
  "../adapters/epetra/example/sillyPowerMethod_epetra.exe --echo-command-line --help"
  ,"$abs_top_srcdir/adapters/epetra/example/sillyPowerMethod_epetra.help.out"
  );
