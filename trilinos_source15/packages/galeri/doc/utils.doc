/*! \page gl_Utils Utilities

<!-- ---------------------------------------------------------------- -->
\section gl_GalleryVbrMatrix Creating an Epetra_VbrMatrix

An Epetra_CrsMatrix can be "extended" to form an Epetra_VbrMatrix. This may be
useful to test a package using a block matrix. Let CrsMatrix be an already
filled \c Epetra_CrsMatrix*, and \c NumPDEs the dimension of each block in the
resulting VBR matrix. The creation of the Epetra_VbrMatrix is performed by the
following code:
\verbatim
#include "Galeri_Utils.h"
...
Epetra_VbrMatrix* VbrMatrix = 0;
VbrMatrix = Galeri.Create(CrsMatrix, NumDPEs);
\endverbatim

<!-- ---------------------------------------------------------------- -->
\section gl_Coord Creating the Coordinates of a Cartesian Grid

Given a Cartesian grid, it is possible to create an Epetra_MultiVector,
  containing the coordinates of each node. Simply do:
\verbatim
#include "Galeri_Utils.h"
...
string CoordType = "2D";
Epetra_Map* Map; // already created
Teuchos::ParameterList List;
List.set("nx", 10);
List.set("ny", 10);
List.set("lx", 1.0); // length of X-axis
List.set("ly", 1.0); // length of Y-axis

Epetra_MultiVector* Coord = 0;
Coord = Galeri.CreateCartesianCoordinates(CoordType, Map, List);
\endverbatim
Other valid values for \c CoordType are \c "1D" and \c "3D".

*/

