# $Id:$
"""
test for util operations for overloaded operations with tagged data

@remark: use see L{test_util}
@var __author__: name of author
@var __licence__: licence agreement
@var __url__: url entry point on documentation
@var __version__: version
@var __date__: date of the version
"""

__author__="Lutz Gross, l.gross@uq.edu.au"
__licence__="contact: esys@access.uq.edu.au"
__url__="http://www.iservo.edu.au/esys/escript"
__version__="$Revision:$"
__date__="$Date:$"

import unittest
import numarray
from esys.escript import *
from esys.escript.test_util_base  import Test_util_base

class Test_util_overloaded_binary_with_tagged_data(Test_util_base):
   """
   test for the overloaded operation +,*,-,** with tagged data
   """
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_add_overloaded_float_rank0_taggedData_rank0(self):
      arg0=1.50451915133
      arg1=Data(2.72325184184,self.functionspace)
      arg1.setTaggedValue(1,-1.53110709808)
      res=arg0+arg1
      ref=Data(4.22777099317,self.functionspace)
      ref.setTaggedValue(1,-0.0265879467509)
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_add_overloaded_float_rank0_taggedData_rank1(self):
      arg0=4.85605770106
      arg1=Data(numarray.array([-4.3395065978127692, 0.60570049803379078]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([3.6501698136790175, 0.70663115395075415]))
      res=arg0+arg1
      ref=Data(numarray.array([0.51655110324225273, 5.4617581990888127]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([8.5062275147340394, 5.562688855005776]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_add_overloaded_float_rank0_taggedData_rank2(self):
      arg0=-0.780040057582
      arg1=Data(numarray.array([[-0.43060722082989589, 4.9082210391037382, 3.0578289131250784, 3.7154492608955145, -2.3626698799747436], [-0.57744974579734798, 2.4341887960972821, 4.392772957150715, 1.1127940295848067, 0.44760835221981043], [-1.2193145533313352, -4.152462252060988, -4.2706830150788546, 4.5776144799277265, 0.65256256561792725], [-3.5327414050156101, 2.3429801833558228, 1.4911702077299269, 2.8354223660854627, -0.26430257253103662]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[0.62130507833962412, -0.60045590874861698, 3.6234790358177822, -3.2788882822646626, -1.7438996590963152], [1.6721327727259316, 2.5390633030555261, 0.2829910346978437, 4.4539799434081377, 4.8840434912316528], [1.0851664329233426, -4.1944097108842797, 4.48550041534744, -0.7995182652802324, 3.135820962425024], [-4.5233071721581997, -1.5517102324890244, 4.3016103217286847, 1.7505119284463921, -1.705700729131002]]))
      res=arg0+arg1
      ref=Data(numarray.array([[-1.2106472784119626, 4.1281809815216715, 2.2777888555430117, 2.9354092033134478, -3.1427099375568104], [-1.3574898033794147, 1.6541487385152154, 3.6127328995686483, 0.33275397200273993, -0.3324317053622563], [-1.9993546109134019, -4.9325023096430547, -5.0507230726609214, 3.7975744223456598, -0.12747749196413949], [-4.3127814625976768, 1.5629401257737561, 0.71113015014786018, 2.055382308503396, -1.0443426301131034]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[-0.15873497924244262, -1.3804959663306837, 2.8434389782357155, -4.0589283398467293, -2.5239397166783819], [0.8920927151438649, 1.7590232454734593, -0.49704902288422304, 3.673939885826071, 4.1040034336495861], [0.30512637534127585, -4.9744497684663465, 3.7054603577653733, -1.5795583228622991, 2.3557809048429572], [-5.3033472297402664, -2.3317502900710911, 3.521570264146618, 0.9704718708643254, -2.4857407867130688]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_add_overloaded_float_rank0_taggedData_rank3(self):
      arg0=-1.25914761233
      arg1=Data(numarray.array([[[0.19880757909490221, 4.8460446335920828], [-3.1936192381699593, -1.1635220076802821]], [[1.4494533624381942, 2.5120339844502562], [-0.35838448192140149, 1.4590384789751418]], [[1.0904907042678804, -0.067519620819761705], [4.1431187422890794, 4.5472209967452688]], [[-2.5307687929933698, 3.6280121891219128], [1.8967142492061004, -4.9774431504202123]], [[-2.7027107601548082, 4.0579406806771487], [4.7102647693500383, 1.8455023011836724]], [[-0.15878543942385726, -4.674729135281984], [2.4553707998877892, -1.5005871755549594]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[-4.4150211333004101, -4.6483235818952746], [-2.8399942762013075, 4.5545530874004285]], [[-1.0494102272714168, 0.38330716008635868], [0.47865871849273134, 1.9327811922167619]], [[-3.0520059219429161, 4.7770058078546924], [0.42240461921480588, -3.8976847108053612]], [[-0.29672647979847788, -2.6943000503383074], [1.1002722489088104, -3.3713019279768011]], [[2.2759639615152256, 2.2169706569433547], [0.66018965728197632, 1.7904065463009822]], [[-3.4048208571366354, -0.72965243796581802], [-4.2087531569166874, -4.3094586983873393]]]))
      res=arg0+arg1
      ref=Data(numarray.array([[[-1.0603400332361872, 3.5868970212609934], [-4.4527668505010487, -2.4226696200113715]], [[0.19030575010710482, 1.2528863721191668], [-1.6175320942524909, 0.19989086664405242]], [[-0.16865690806320899, -1.3266672331508511], [2.88397112995799, 3.2880733844141794]], [[-3.7899164053244592, 2.3688645767908234], [0.63756663687501103, -6.2365907627513018]], [[-3.9618583724858976, 2.7987930683460593], [3.4511171570189489, 0.58635468885258302]], [[-1.4179330517549467, -5.9338767476130734], [1.1962231875566998, -2.7597347878860488]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[-5.6741687456314995, -5.907471194226364], [-4.0991418885323974, 3.2954054750693391]], [[-2.3085578396025062, -0.87584045224473073], [-0.78048889383835807, 0.67363357988567252]], [[-4.3111535342740055, 3.517858195523603], [-0.83674299311628353, -5.1568323231364506]], [[-1.5558740921295673, -3.9534476626693968], [-0.15887536342227904, -4.6304495403078905]], [[1.0168163491841362, 0.95782304461226531], [-0.59895795504911309, 0.53125893396989277]], [[-4.6639684694677248, -1.9888000502969074], [-5.4679007692477768, -5.5686063107184287]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_add_overloaded_float_rank0_taggedData_rank4(self):
      arg0=0.258837220901
      arg1=Data(numarray.array([[[[3.8062917703913275, 1.5925302766342977, 2.375938618782051, 4.8408768651589646], [2.3442481475157093, -2.7496872132044894, 0.42271389992884512, -4.6454317947654209], [0.25224402422534897, 4.4179040454873881, -4.1624635493109476, -2.8403555046960669]], [[-1.7402014581620042, -0.39647776942146074, 1.6582392346191055, 0.95100047115282837], [-2.5115869863610718, -4.0631674532788677, -3.3491982210982729, -0.79371461870273752], [-3.8811105449584025, -4.7756827547949623, -3.0355606009359448, -3.4495126246826024]]], [[[0.54052831056647754, 1.3131371291603413, 1.5109369820155161, -4.5038693330152828], [-2.7757717507070034, -3.4702732547886708, -4.0345723932511053, -1.5176135064856702], [0.20132378821251606, -1.3011996084005704, -3.3627285656617367, -3.8790318668262955]], [[-2.8343704701651595, -3.2040830091023831, 1.7955913209143679, -1.1120062362187557], [2.4678677745222242, 4.6779889710192393, -2.9039968423280191, 4.5620672547251822], [-2.9707917064914815, 0.40203349974764357, -4.1595643750239395, -4.8398423972146425]]], [[[0.90209465588452176, 0.25241726058184, 0.82206430484315174, 0.23910272220713846], [1.1998005688428934, 2.7432470837000986, 3.405738144982422, 2.2153056603059262], [4.2665609582282773, -2.4440559784399052, -0.21844804372131499, -2.6740342714550636]], [[-0.35286002435519581, -3.2544391698145017, 1.6101760802462861, 2.852727295232742], [3.3031205880381211, -4.0910259111112541, -3.572261502523383, -1.6576439736314965], [-4.0708535566068971, 0.89830610466834404, -2.1444076751959695, -4.5363920893045249]]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[[3.1767399278718287, -4.6569253000973454, -3.0756556601909657, -1.1833991361679908], [1.0050292771371456, 4.4691598561558283, -1.7916826017675005, -4.7342403422875856], [-0.7786507136749119, 1.6960644379951892, 3.3133891953253585, 1.7522779008527145]], [[4.3662508335717725, -0.48897498526348748, -3.8147567535836204, 1.6120397979566716], [-3.1407449215468439, 3.783252247124409, 0.53165610812556174, -4.8767350509416021], [3.3399571491607158, -3.5835576415323525, -4.7823600282016088, -3.9888663220494758]]], [[[-0.70505421666153545, -0.96931454128354222, 3.5579576363997862, -4.8922170382559234], [-1.0101891756408499, 4.0449327618070345, 1.4287287933352335, 2.7932127127424602], [-1.1844659178082537, -3.1172167429375932, 3.7586512122849509, -1.9672827094129763]], [[-0.19893429465188639, -4.5909962617427658, 4.8074518840957854, 0.3484829166820882], [-4.6647394483178628, -2.4786438939387256, 3.3568201792741235, -2.64715841657718], [-1.2323878832119703, 4.4122940094846452, 4.1747597400695202, 1.495047169558279]]], [[[-1.2345115692788191, 2.7793548546816895, -4.1091272044165015, 0.99053747681914128], [1.9767217399787373, 0.56366188553849472, -2.4759659981403725, -0.57675651539819661], [-2.3169645738968283, 1.2766938617838406, 4.2235507133142391, -1.8551394597968351]], [[-4.7213055834195528, 4.5081688737256265, 2.9347524827688005, 0.84567000788663726], [4.9663286321498799, -2.4877697764151128, 3.1377121807484567, -3.4121462498955077], [-0.99483360775740248, -1.9631730125917768, 0.015480068819933024, -3.8237441774442193]]]]))
      res=arg0+arg1
      ref=Data(numarray.array([[[[4.0651289912922941, 1.8513674975352643, 2.6347758396830177, 5.0997140860599313], [2.6030853684166759, -2.4908499923035228, 0.68155112082981173, -4.3865945738644543], [0.51108124512631559, 4.6767412663883547, -3.903626328409981, -2.5815182837951003]], [[-1.4813642372610376, -0.13764054852049412, 1.9170764555200721, 1.209837692053795], [-2.2527497654601052, -3.8043302323779011, -3.0903610001973063, -0.5348773978017709], [-3.6222733240574359, -4.5168455338939957, -2.7767233800349782, -3.1906754037816358]]], [[[0.79936553146744416, 1.5719743500613079, 1.7697742029164827, -4.2450321121143162], [-2.5169345298060368, -3.2114360338877042, -3.7757351723501387, -1.2587762855847036], [0.46016100911348268, -1.0423623874996037, -3.1038913447607701, -3.6201946459253289]], [[-2.5755332492641929, -2.9452457882014165, 2.0544285418153345, -0.8531690153177891], [2.7267049954231908, 4.9368261919202059, -2.6451596214270525, 4.8209044756261488], [-2.7119544855905149, 0.66087072064861019, -3.9007271541229729, -4.5810051763136759]]], [[[1.1609318767854884, 0.51125448148280661, 1.0809015257441184, 0.49793994310810508], [1.45863778974386, 3.0020843046010652, 3.6645753658833886, 2.4741428812068929], [4.5253981791292439, -2.1852187575389386, 0.040389177179651625, -2.4151970505540969]], [[-0.094022803454229198, -2.995601948913535, 1.8690133011472527, 3.1115645161337087], [3.5619578089390878, -3.8321886902102875, -3.3134242816224164, -1.3988067527305299], [-3.8120163357059305, 1.1571433255693107, -1.8855704542950029, -4.2775548684035583]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[3.4355771487727953, -4.3980880791963788, -2.8168184392899991, -0.92456191526702414], [1.2638664980381122, 4.727997077056795, -1.5328453808665339, -4.475403121386619], [-0.51981349277394528, 1.9549016588961559, 3.5722264162263251, 2.0111151217536811]], [[4.6250880544727391, -0.23013776436252087, -3.5559195326826538, 1.8708770188576382], [-2.8819077006458773, 4.0420894680253756, 0.79049332902652836, -4.6178978300406355], [3.5987943700616825, -3.3247204206313858, -4.5235228073006422, -3.7300291011485092]]], [[[-0.44621699576056884, -0.71047732038257561, 3.8167948573007529, -4.6333798173549567], [-0.75135195473988325, 4.3037699827080012, 1.6875660142362001, 3.0520499336434268], [-0.92562869690728711, -2.8583795220366266, 4.0174884331859175, -1.7084454885120097]], [[0.059902926249080224, -4.3321590408417991, 5.066289104996752, 0.60732013758305481], [-4.4059022274168962, -2.219806673037759, 3.6156574001750901, -2.3883211956762134], [-0.97355066231100373, 4.6711312303856118, 4.4335969609704868, 1.7538843904592456]]], [[[-0.9756743483778525, 3.0381920755826561, -3.8502899835155349, 1.2493746977201079], [2.235558960879704, 0.82249910643946134, -2.2171287772394059, -0.31791929449723], [-2.0581273529958617, 1.5355310826848072, 4.4823879342152058, -1.5963022388958685]], [[-4.4624683625185861, 4.7670060946265931, 3.1935897036697671, 1.1045072287876039], [5.2251658530508465, -2.2289325555141462, 3.3965494016494233, -3.1533090289945411], [-0.73599638685643587, -1.7043357916908102, 0.27431728972089964, -3.5649069565432527]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_add_overloaded_constData_rank0_taggedData_rank0(self):
      arg0=Data(-4.66455045755,self.functionspace)
      arg1=Data(-2.99001630489,self.functionspace)
      arg1.setTaggedValue(1,1.71689552484)
      res=arg0+arg1
      ref=Data(-7.65456676244,self.functionspace)
      ref.setTaggedValue(1,-2.94765493271)
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_add_overloaded_constData_rank0_taggedData_rank1(self):
      arg0=Data(0.370498134707,self.functionspace)
      arg1=Data(numarray.array([-2.6887132164569882, 1.5445437459391336]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([-3.4873445431549221, -0.71518467757424187]))
      res=arg0+arg1
      ref=Data(numarray.array([-2.3182150817500586, 1.9150418806460632]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([-3.1168464084479925, -0.34468654286731226]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_add_overloaded_constData_rank0_taggedData_rank2(self):
      arg0=Data(4.19816380923,self.functionspace)
      arg1=Data(numarray.array([[-4.7192788556165777, 0.96664005764470229, -3.5536084501834408, -4.0765460640065072, -1.661066134307092], [-1.8698305076456467, 1.3585630353673768, -2.9520256153421887, -4.0115384815141901, 4.1648807596676622], [0.52651496482039839, 4.5335182579006243, 1.5182681645431, -2.0386298757410359, 1.3497292187808991], [3.3327260230683571, -0.49979354291428546, 2.1074572526054176, -2.3550325002712693, 2.273541867139822]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[2.0517873872737935, 0.38787431151255269, 3.5863158456115105, 2.3662852559311744, 4.0659321476022274], [-3.1739511723873095, -1.2814654983823082, 1.0017851807449105, -3.5533612778457471, -2.2221538754612635], [0.84394690277536544, -3.1120306326191924, 0.27412555780823489, -2.035372239239428, -0.66379142365820076], [3.9021924769148715, 3.0731542562026597, -1.1750835017113772, -3.8392491786372251, -1.8483038189693612]]))
      res=arg0+arg1
      ref=Data(numarray.array([[-0.52111504638209638, 5.1648038668791836, 0.64455535905104044, 0.12161774522797408, 2.5370976749273892], [2.3283333015888346, 5.5567268446018581, 1.2461381938922926, 0.18662532772029117, 8.3630445689021435], [4.7246787740548797, 8.7316820671351056, 5.7164319737775813, 2.1595339334934454, 5.5478930280153804], [7.5308898323028384, 3.6983702663201958, 6.3056210618398989, 1.843131308963212, 6.4717056763743033]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[6.2499511965082748, 4.586038120747034, 7.7844796548459918, 6.5644490651656557, 8.2640959568367087], [1.0242126368471718, 2.9166983108521731, 5.1999489899793918, 0.64480253138873422, 1.9760099337732178], [5.0421107120098467, 1.0861331766152889, 4.4722893670427162, 2.1627915699950533, 3.5343723855762805], [8.1003562861493528, 7.271318065437141, 3.0230803075231041, 0.35891463059725615, 2.34985999026512]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_add_overloaded_constData_rank0_taggedData_rank3(self):
      arg0=Data(3.89946370173,self.functionspace)
      arg1=Data(numarray.array([[[-2.958761930822206, 3.1298083647148758], [1.0740766505503316, -0.56319010720496898]], [[-1.7943140652533938, 3.690403381090702], [0.36937042492057159, 3.2658468930198374]], [[1.8835789033218173, -1.4148302296368787], [-3.5673817752537063, -2.2485863527891392]], [[0.16128627738663681, 3.0703162517774825], [3.7378380068614732, 3.9111432927270524]], [[-2.1021476970927955, 3.0961226816017913], [0.68225570534855073, 3.1886903197536505]], [[-3.2791062855901467, 1.0997870451532412], [-3.4354171329994623, -4.2682463123274079]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[-2.0234674745266847, -3.7749655132841555], [-2.1362659699809128, 2.474175793074985]], [[2.5297943416808, -2.1243559170453974], [-3.4313241405664572, 0.34198337719133054]], [[-3.9325455447252953, 4.7074989384395032], [3.9514592903761727, 0.92749369879626808]], [[2.3893484525653763, -2.9348922671770907], [3.4801665184590522, 1.4061197053956462]], [[3.2979060909501019, -3.4211971590117596], [-2.634829438986559, -2.6073070108817142]], [[-2.1869149767885343, 4.8263853115242767], [0.23104772756879122, 2.7034659990243881]]]))
      res=arg0+arg1
      ref=Data(numarray.array([[[0.94070177090306473, 7.0292720664401465], [4.9735403522756023, 3.3362735945203017]], [[2.1051496364718769, 7.5898670828159727], [4.2688341266458423, 7.1653105947451081]], [[5.783042605047088, 2.484633472088392], [0.33208192647156443, 1.6508773489361315]], [[4.0607499791119075, 6.9697799535027531], [7.6373017085867438, 7.8106069944523231]], [[1.7973160046324752, 6.995586383327062], [4.5817194070738214, 7.0881540214789212]], [[0.62035741613512396, 4.9992507468785119], [0.46404656872580841, -0.36878261060213724]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[1.8759962271985859, 0.12449818844111515], [1.7631977317443579, 6.3736394948002557]], [[6.4292580434060707, 1.7751077846798733], [0.4681395611588135, 4.2414470789166012]], [[-0.033081843000024591, 8.6069626401647739], [7.8509229921014434, 4.8269574005215388]], [[6.288812154290647, 0.96457143454817995], [7.3796302201843229, 5.3055834071209169]], [[7.1973697926753726, 0.4782665427135111], [1.2646342627387117, 1.2921566908435564]], [[1.7125487249367364, 8.7258490132495474], [4.1305114292940619, 6.6029297007496588]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_add_overloaded_constData_rank0_taggedData_rank4(self):
      arg0=Data(4.13858568877,self.functionspace)
      arg1=Data(numarray.array([[[[0.13175013949509395, 1.3587679164977704, 1.230138204659478, 1.6198580303286221], [1.5153336575053098, -4.2526602333060337, -2.3168164343901312, 1.3904766393917001], [-4.7958861831605004, 1.2701544083884784, -1.6823608322632033, -1.7201124691387335]], [[4.6468317780236443, 4.4127955763926092, 0.31673493242051265, -2.8905384569080228], [-2.7913299715813524, -0.3374615600001647, -0.01446183703812487, 1.2161604506861723], [-0.91940202299142371, -1.9567662570206745, 0.031137893828368846, -2.5209323098234182]]], [[[-0.031722186835536625, -1.1948269447712869, 3.9794746474538361, 0.98566305681893951], [2.2904104445616404, -4.0514518037958602, -4.7984963012094486, 3.2249867504024508], [1.0109233879894894, 2.2623268701952393, -1.4339465114083092, 2.0614584017864592]], [[4.3344566195583063, 1.6406524222057639, 1.5922292351054921, 3.3529595245331709], [-0.15022125891499183, -3.6179617746160773, 4.2196942009020848, 1.4409116931856261], [4.4422587441753301, 2.0033045455934273, 3.7037373472747142, -2.504798746956578]]], [[[-3.3600706973199337, 1.6542963995949487, -3.3948661029138405, -0.97633586924857152], [3.2449158099150548, -1.0094062333732468, -1.9883401045866114, -2.8575077660346269], [3.8328322929814416, -0.36894673930713928, -2.1777279139379679, 3.9748750412071558]], [[0.71205519166902143, 2.7874466298425258, -4.3775332948678507, 2.7582637172786972], [3.0658466748756403, -3.7775671377240618, -4.3030172803829023, -4.1024191753816339], [3.4660156077327304, -1.5408899094499242, -0.45273239596408921, 4.1942719729845308]]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[[1.7078293929986188, 1.597184054166445, 0.53172139995994705, 0.37598767762412866], [-4.7153868472501923, -4.836115964305848, 3.3382192795335737, 0.32916380702422288], [-1.042832518792137, -2.5933137193252485, -4.9571485633186949, 2.38472674259289]], [[-2.5277161336880551, 2.3036719277395008, 1.8451909915911973, -1.7104640528407842], [4.789616256307923, 4.615854384167438, 1.4240273080754857, -1.5109891694225466], [3.5444680569850604, 3.2153528591575338, -1.8778645807771688, -3.4211520168783571]]], [[[2.0279600181836734, 1.3913400074142395, 4.7266972207219258, -0.041751739987586411], [4.4694412096063054, -0.20301014054466915, -1.4400390824000087, -1.3937378294351612], [-4.2164692430070074, 0.32301335083063698, -0.38037743922377842, 3.394970950833363]], [[-0.42098850226019113, 3.4618707762478937, -3.2891591601163315, -4.6415242845849694], [3.7322526190152701, -0.37586050159968831, 1.0289109951324695, 0.37112092161696086], [-4.6466108515169324, -3.4039550614647771, 0.38514840891958535, -4.1255144542454589]]], [[[4.4409907142382679, -4.0885450651543387, 2.5510413569729584, 2.0454434817263518], [4.4376165821152895, -2.6852229033020136, 0.21782034539436257, 2.4970368184639957], [-3.0162244468929513, -2.38809874101951, 3.8343147304687317, 0.52050559575242428]], [[2.5529377889837477, 0.38395922477480493, -3.9715068749558267, 2.6328023561731193], [0.60295943010967434, -1.3993044422742642, 4.7889894291480886, 0.3603777140784814], [-2.6294316083078542, 2.4753104938309303, 0.45790305184353119, 2.1547344969887909]]]]))
      res=arg0+arg1
      ref=Data(numarray.array([[[[4.2703358282612038, 5.4973536052638803, 5.3687238934255879, 5.758443719094732], [5.6539193462714197, -0.11407454453992383, 1.8217692543759787, 5.52906232815781], [-0.65730049439439053, 5.4087400971545883, 2.4562248565029066, 2.4184732196273764]], [[8.7854174667897542, 8.5513812651587191, 4.4553206211866225, 1.2480472318580871], [1.3472557171847575, 3.8011241287659452, 4.124123851727985, 5.3547461394522822], [3.2191836657746862, 2.1818194317454354, 4.1697235825944787, 1.6176533789426917]]], [[[4.1068635019305733, 2.943758743994823, 8.1180603362199459, 5.1242487455850494], [6.4289961333277503, 0.087133884970249653, -0.65991061244333871, 7.3635724391685606], [5.1495090767555993, 6.4009125589613491, 2.7046391773578007, 6.2000440905525691]], [[8.4730423083244162, 5.7792381109718738, 5.730814923871602, 7.4915452132992808], [3.9883644298511181, 0.52062391415003262, 8.3582798896681947, 5.5794973819517359], [8.5808444329414399, 6.1418902343595372, 7.842323036040824, 1.6337869418095319]]], [[[0.7785149914461762, 5.7928820883610586, 0.74371958585226938, 3.1622498195175384], [7.3835014986811647, 3.1291794553928631, 2.1502455841794985, 1.281077922731483], [7.9714179817475515, 3.7696389494589706, 1.9608577748281419, 8.1134607299732657]], [[4.8506408804351313, 6.9260323186086357, -0.23894760610174082, 6.8968494060448071], [7.2044323636417502, 0.36101855104204805, -0.16443159161679244, 0.036166513384475962], [7.6046012964988403, 2.5976957793161857, 3.6858532928020207, 8.3328576617506407]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[5.8464150817647287, 5.7357697429325549, 4.6703070887260569, 4.5145733663902385], [-0.57680115848408242, -0.69753027553973812, 7.4768049682996836, 4.4677494957903328], [3.0957531699739729, 1.5452719694408614, -0.81856287455258503, 6.5233124313589999]], [[1.6108695550780547, 6.4422576165056107, 5.9837766803573071, 2.4281216359253257], [8.9282019450740329, 8.7544400729335479, 5.5626129968415956, 2.6275965193435633], [7.6830537457511703, 7.3539385479236437, 2.2607211079889411, 0.71743367188775276]]], [[[6.1665457069497833, 5.5299256961803493, 8.8652829094880357, 4.0968339487785235], [8.6080268983724153, 3.9355755482214407, 2.6985466063661012, 2.7448478593309487], [-0.077883554240897546, 4.4615990395967469, 3.7582082495423315, 7.5335566395994729]], [[3.7175971865059187, 7.6004564650140036, 0.84942652864977841, -0.50293859581885947], [7.8708383077813799, 3.7627251871664216, 5.1674966838985794, 4.5097066103830707], [-0.50802516275082255, 0.73463062730133277, 4.5237340976856952, 0.013071234520650954]]], [[[8.5795764030043777, 0.050040623611771196, 6.6896270457390683, 6.1840291704924617], [8.5762022708813994, 1.4533627854640963, 4.3564060341604725, 6.6356225072301056], [1.1223612418731586, 1.7504869477465999, 7.9729004192348416, 4.6590912845185342]], [[6.6915234777498576, 4.5225449135409148, 0.16707881381028322, 6.7713880449392292], [4.7415451188757842, 2.7392812464918457, 8.9275751179141984, 4.4989634028445913], [1.5091540804582557, 6.6138961825970402, 4.5964887406096411, 6.2933201857549008]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_add_overloaded_constData_rank1_taggedData_rank0(self):
      arg0=Data(numarray.array([4.5897569702707663, 3.4489828945022865]),self.functionspace)
      arg1=Data(0.812494849561,self.functionspace)
      arg1.setTaggedValue(1,-0.798066999908)
      res=arg0+arg1
      ref=Data(numarray.array([5.4022518198315126, 4.2614777440630327]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([3.7916899703627909, 2.650915894594311]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_add_overloaded_constData_rank1_taggedData_rank1(self):
      arg0=Data(numarray.array([4.1004534466760507, -4.3530930416109834]),self.functionspace)
      arg1=Data(numarray.array([1.197002325888791, -3.123782523761276]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([-3.6778967700359919, 1.2367952159033369]))
      res=arg0+arg1
      ref=Data(numarray.array([5.2974557725648417, -7.4768755653722589]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([0.4225566766400588, -3.1162978257076466]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_add_overloaded_constData_rank2_taggedData_rank0(self):
      arg0=Data(numarray.array([[-1.3415049980194151, 1.3459186798218408, 1.9114294317354288, 2.9179835052428356, -2.3044429511392064], [-1.9007005643963581, -4.3338357233493765, 0.94077516828007823, 4.0387790864748414, -1.2725002850564615], [4.243575031818219, 0.64089360532133988, -1.8118570052736027, -4.1902989094547962, -2.957929628039182], [4.3122818225512596, -1.947482103007653, -1.9434128036289944, -2.7112973647894343, 3.3719312192315645]]),self.functionspace)
      arg1=Data(3.38131858631,self.functionspace)
      arg1.setTaggedValue(1,-2.24010374318)
      res=arg0+arg1
      ref=Data(numarray.array([[2.0398135882931143, 4.7272372661343702, 5.2927480180479582, 6.299302091555365, 1.0768756351733231], [1.4806180219161713, -0.95251713703684704, 4.3220937545926077, 7.4200976727873709, 2.108818301256068], [7.6248936181307485, 4.0222121916338693, 1.5694615810389267, -0.80898032314226676, 0.42338895827334744], [7.693600408863789, 1.4338364833048765, 1.4379057826835351, 0.67002122152309518, 6.7532498055440939]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[-3.581608741203584, -0.89418506336232806, -0.32867431144874004, 0.67787976205866673, -4.5445466943233752], [-4.1408043075805274, -6.5739394665335453, -1.2993285749040906, 1.7986753432906726, -3.5126040282406303], [2.0034712886340502, -1.599210137862829, -4.0519607484577715, -6.430402652638965, -5.1980333712233513], [2.0721780793670908, -4.1875858461918218, -4.1835165468131628, -4.9514011079736031, 1.1318274760473956]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_add_overloaded_constData_rank2_taggedData_rank2(self):
      arg0=Data(numarray.array([[-2.6226681875421876, -0.43563964563251734, -1.4626141982483021, 1.0662819329818385, -0.69420446751041176], [-1.2707395630813445, 1.3375857552296422, -4.5642260803519559, -1.1361520399586924, -0.68323132594976776], [-3.0170524494571516, -4.9703645483246675, -2.4863945922654676, 4.9784873698674375, 1.8479915169807821], [1.5490113944965085, -1.0077428228109255, 1.5359630073957211, -4.7057403097533301, 4.0675177351019869]]),self.functionspace)
      arg1=Data(numarray.array([[-0.040763387896243231, 0.60676905546922022, -3.3009918603427013, 0.3984414318528362, 1.4046712983461234], [4.612933819098787, 4.0243208678834339, 2.8784202902614089, 1.4754979228393053, 1.8208651871692805], [-2.9887385211383197, 4.0131064195259167, -2.9346520178259738, 2.5683381317973151, 2.9637756504799819], [1.6083685448216078, -1.7585502037053713, -1.47587346390329, 2.056837208721614, -4.2067142370058583]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[4.2084992139808168, 4.1492653597313272, 0.41940775480631309, -1.3432384465213651, 3.7094693015752451], [0.17022165623481023, 4.9532436500597985, -1.0113318446498187, 4.2710146112490364, -4.0530763504693477], [1.8658547298935266, 0.19133091000646729, -4.1563396395827423, 0.62695789643655431, 3.543936176447259], [1.0428723192529255, 4.2374508021339281, -3.0218647799829155, -4.433868685270081, 4.4695313555926024]]))
      res=arg0+arg1
      ref=Data(numarray.array([[-2.6634315754384308, 0.17112940983670288, -4.7636060585910034, 1.4647233648346747, 0.7104668308357116], [3.3421942560174425, 5.3619066231130761, -1.685805790090547, 0.33934588288061285, 1.1376338612195127], [-6.0057909705954717, -0.95725812879875072, -5.421046610091441, 7.5468255016647525, 4.811767167460764], [3.1573799393181163, -2.7662930265162968, 0.060089543492431119, -2.6489031010317161, -0.13919650190387145]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[1.5858310264386293, 3.7136257140988098, -1.043206443441989, -0.27695651353952666, 3.0152648340648334], [-1.1005179068465343, 6.2908294052894407, -5.5755579250017746, 3.134862571290344, -4.7363076764191154], [-1.1511977195636249, -4.7790336383182002, -6.6427342318482099, 5.6054452663039918, 5.3919276934280411], [2.5918837137494339, 3.2297079793230026, -1.4859017725871944, -9.1396089950234121, 8.5370490906945893]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_add_overloaded_constData_rank3_taggedData_rank0(self):
      arg0=Data(numarray.array([[[2.0861950273295804, 2.4920761560019047], [-4.0767262373503979, -1.7275341661236698]], [[4.6406069429505195, 4.0345928257798782], [0.37803900859143447, 2.4445371923229517]], [[1.85363770864444, 3.6585915234726212], [2.0214578834221006, 0.56085179178200306]], [[2.402010491646239, 4.6824728700135161], [0.6414001733226975, 0.94107549517639644]], [[2.3300385491886431, 4.4807079902307159], [-0.92067660734824752, 3.0509292574928253]], [[1.2602889332645431, -1.9292487970408709], [0.086280004211073624, -1.510551626961151]]]),self.functionspace)
      arg1=Data(-0.0456895613642,self.functionspace)
      arg1.setTaggedValue(1,-4.19507957525)
      res=arg0+arg1
      ref=Data(numarray.array([[[2.040505465965424, 2.4463865946377483], [-4.1224157987145542, -1.7732237274878262]], [[4.5949173815863631, 3.9889032644157218], [0.33234944722727811, 2.3988476309587954]], [[1.8079481472802836, 3.6129019621084648], [1.9757683220579443, 0.5151622304178467]], [[2.3563209302820827, 4.6367833086493597], [0.59571061195854114, 0.89538593381224008]], [[2.2843489878244867, 4.4350184288665595], [-0.96636616871240388, 3.0052396961286689]], [[1.2145993719003867, -1.9749383584050273], [0.040590442846917263, -1.5562411883253073]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[-2.1088845479219822, -1.7030034192496579], [-8.2718058126019613, -5.9226137413752324]], [[0.44552736769895684, -0.1604867494716844], [-3.8170405666601281, -1.7505423829286109]], [[-2.3414418666071226, -0.53648805177894143], [-2.173621691829462, -3.6342277834695595]], [[-1.7930690836053236, 0.48739329476195348], [-3.5536794019288651, -3.2540040800751662]], [[-1.8650410260629195, 0.28562841497915326], [-5.1157561825998101, -1.1441503177587373]], [[-2.9347906419870196, -6.1243283722924335], [-4.108799571040489, -5.7056312022127136]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_add_overloaded_constData_rank3_taggedData_rank3(self):
      arg0=Data(numarray.array([[[0.12269628182933001, 1.4672076166497297], [-1.7618606919578217, -0.41822274378038404]], [[-3.4777278267882261, 0.91150063442493234], [-3.2215653702862177, -4.7251769553640743]], [[-3.6955005566118668, -4.0386807920581376], [0.20974179785768499, 4.971379194453883]], [[-4.6416039854065438, -2.4174671355821378], [-0.93956661100576255, -4.5631114286217205]], [[-2.4447858378665765, -3.8232081969915432], [0.73666084872135418, -1.0254596806300853]], [[-2.257416342898372, -2.4415592322477275], [-3.9887385162301858, 0.4695282522578168]]]),self.functionspace)
      arg1=Data(numarray.array([[[-4.5676240214260098, 0.41306837628522963], [4.9465358871512777, 2.2848713951104838]], [[4.362008173640664, 3.9502909364101217], [2.071996380966926, 3.7834488332881868]], [[-0.49584216533182879, -3.4801056681326905], [4.9917325907476382, 1.4377979885864516]], [[2.886717011735934, -2.6277020978762042], [4.6176020186796425, 4.7990380634049767]], [[-0.52564559772442099, 4.7895678381879687], [1.5708429802060175, -3.0844085844104274]], [[-1.2250025565880893, 4.6458577871452373], [-4.4222951788247409, 4.0433895321815427]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[-0.1370599544392892, -2.8015059749984528], [-1.9961054277296473, -0.36073771651563291]], [[1.3182553792598579, -4.0991476254507635], [-0.44276061226265018, 1.6680349385432987]], [[-3.4001027933348835, -4.8109813236985541], [-2.0495682790514227, 1.8167133342381812]], [[-3.7963346870977945, -4.5535645028017635], [-1.1522389797685193, 1.3511939157749344]], [[-4.8040131382947049, 0.90793035526919397], [1.484793978312382, -1.5421914315510179]], [[1.3343050159588525, 2.4655013863417548], [-0.32507168642112561, 4.3599790448251685]]]))
      res=arg0+arg1
      ref=Data(numarray.array([[[-4.4449277395966797, 1.8802759929349593], [3.184675195193456, 1.8666486513300997]], [[0.88428034685243784, 4.8617915708350541], [-1.1495689893192917, -0.94172812207588752]], [[-4.1913427219436956, -7.5187864601908281], [5.2014743886053232, 6.4091771830403346]], [[-1.7548869736706099, -5.045169233458342], [3.6780354076738799, 0.23592663478325626]], [[-2.9704314355909975, 0.96635964119642548], [2.3075038289273717, -4.1098682650405127]], [[-3.4824188994864613, 2.2042985548975098], [-8.4110336950549272, 4.5129177844393595]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[-0.014363672609959188, -1.3342983583487231], [-3.757966119687469, -0.77896046029601695]], [[-2.1594724475283682, -3.1876469910258312], [-3.6643259825488679, -3.0571420168207757]], [[-7.0956033499467503, -8.8496621157566917], [-1.8398264811937377, 6.7880925286920641]], [[-8.4379386725043375, -6.9710316383839013], [-2.0918055907742819, -3.2119175128467861]], [[-7.2487989761612814, -2.9152778417223493], [2.2214548270337362, -2.5676511121811032]], [[-0.92311132693951947, 0.023942154094027224], [-4.313810202651311, 4.8295072970829853]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_add_overloaded_constData_rank4_taggedData_rank0(self):
      arg0=Data(numarray.array([[[[-2.1127878043948121, -2.6734038420995878, -3.7174721921481515, -2.8921743181221125], [0.2764377633408408, 3.9296684147946799, -4.9171677374972944, -4.9642653378267347], [-0.61947409364464079, -4.015974028229059, -0.18805511679418441, 1.5629814684169734]], [[-4.0866231608688022, 3.2830805381014763, -4.2608142895301615, 0.15599594849717491], [1.1040385772304564, -1.5708094985664434, -4.9568379032803538, 1.241738387463192], [1.3931769799891995, -2.5248595019765432, 2.8757000225849128, -4.3771668987515238]]], [[[-1.2735518422958148, -4.1105568099668019, 0.48891138673857082, 1.4980039331184702], [0.35357088368984879, 2.5316174846688497, -4.1543988785548382, -4.1135564535496218], [-3.9584256991852951, -2.1520765455378479, 2.3736171509491202, -4.6215845057314446]], [[-2.0397394988533204, 2.2745130371463276, 2.8688375760074738, -4.2614754860809034], [4.0992062066155928, -3.4288780684757336, 4.1516896671562513, 0.75074434486774599], [-3.193022825807692, -0.53192123868369112, 3.0812135258882254, 0.39050867400707112]]], [[[-4.2892765756816296, -4.9695959583850904, 3.9513254018501112, -3.3406585194566842], [4.5700536659667463, 4.6852713683538294, -0.36959280283832463, -0.9385962664742884], [-4.9454116885258355, 0.89580928044739849, 3.0409142595966561, 2.2367353588478478]], [[-4.0564078271004345, -4.0254892597622485, -4.8815665092731431, 4.0704491239176814], [-3.2284258591070278, -1.8775365569400213, 3.4160847683724587, 0.86462311694064553], [-3.9639979460065278, 0.33482686945185947, -4.5669429197924236, 2.3298939078133687]]]]),self.functionspace)
      arg1=Data(-0.392470993711,self.functionspace)
      arg1.setTaggedValue(1,-4.1075693295)
      res=arg0+arg1
      ref=Data(numarray.array([[[[-2.5052587981061238, -3.0658748358108996, -4.1099431858594633, -3.2846453118334242], [-0.11603323037047097, 3.5371974210833681, -5.3096387312086062, -5.3567363315380465], [-1.0119450873559526, -4.4084450219403708, -0.58052611050549618, 1.1705104747056616]], [[-4.479094154580114, 2.8906095443901645, -4.6532852832414733, -0.23647504521413687], [0.71156758351914462, -1.9632804922777551, -5.3493088969916656, 0.84926739375188021], [1.0007059862778878, -2.917330495687855, 2.483229028873601, -4.7696378924628355]]], [[[-1.6660228360071265, -4.5030278036781137, 0.096440393027259042, 1.1055329394071585], [-0.038900110021462986, 2.1391464909575379, -4.54686987226615, -4.5060274472609336], [-4.3508966928966064, -2.5445475392491597, 1.9811461572378084, -5.0140554994427564]], [[-2.4322104925646322, 1.8820420434350158, 2.476366582296162, -4.6539464797922152], [3.706735212904281, -3.8213490621870454, 3.7592186734449395, 0.35827335115643422], [-3.5854938195190038, -0.9243922323950029, 2.6887425321769136, -0.0019623197042406559]]], [[[-4.6817475693929413, -5.3620669520964022, 3.5588544081387994, -3.733129513167996], [4.1775826722554346, 4.2928003746425176, -0.76206379654963641, -1.3310672601856002], [-5.3378826822371472, 0.50333828673608672, 2.6484432658853443, 1.844264365136536]], [[-4.4488788208117462, -4.4179602534735603, -5.2740375029844548, 3.6779781302063697], [-3.6208968528183396, -2.2700075506513331, 3.0236137746611469, 0.47215212322933375], [-4.3564689397178391, -0.057644124259452312, -4.9594139135037354, 1.9374229141020569]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[-6.2203571338967052, -6.7809731716014809, -7.8250415216500446, -6.9997436476240056], [-3.8311315661610523, -0.17790091470721325, -9.0247370669991867, -9.071834667328627], [-4.7270434231465339, -8.1235433577309522, -4.2956244462960775, -2.5445878610849197]], [[-8.1941924903706962, -0.82448879140041686, -8.3683836190320555, -3.9515733810047182], [-3.0035307522714367, -5.678378828068336, -9.0644072327822478, -2.8658309420387011], [-2.7143923495126936, -6.6324288314784363, -1.2318693069169804, -8.4847362282534178]]], [[[-5.3811211717977079, -8.2181261394686942, -3.6186579427633223, -2.6095653963834229], [-3.7539984458120443, -1.5759518448330434, -8.2619682080567323, -8.2211257830515159], [-8.0659950286871887, -6.259645875039741, -1.7339521785527729, -8.7291538352333369]], [[-6.1473088283552135, -1.8330562923555656, -1.2387317534944193, -8.3690448155827966], [-0.008363122886300367, -7.5364473979776267, 0.044120337654358188, -3.3568249846341471], [-7.3005921553095856, -4.6394905681855843, -1.0263558036136677, -3.717060655494822]]], [[[-8.3968459051835218, -9.0771652878869844, -0.15624392765178197, -7.4482278489585774], [0.46248433646485321, 0.57770203885193627, -4.4771621323402178, -5.0461655959761815], [-9.0529810180277295, -3.2117600490544946, -1.0666550699052371, -1.8708339706540453]], [[-8.1639771566023285, -8.1330585892641416, -8.9891358387750362, -0.037120205584211696], [-7.335995188608921, -5.9851058864419144, -0.69148456112943446, -3.2429462125612476], [-8.0715672755084213, -3.7727424600500337, -8.6745122492943167, -1.7776754216885244]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_add_overloaded_constData_rank4_taggedData_rank4(self):
      arg0=Data(numarray.array([[[[-3.8003570791748298, 4.8039102010737356, -0.9012319374709632, -2.714251428030491], [-0.13737907408573857, -2.5873579113483403, -0.056424615348640295, 2.5619294488986437], [-1.2194985042398065, 3.6964005336565648, 0.01956618682329303, -3.8152983947862182]], [[-4.5942303653681336, 1.2221344064392001, -3.1401340907797506, 3.0332806597492041], [-0.30067217703961013, -1.8502913620814132, 4.6304390527587529, -2.9091770278724027], [-2.915704726643499, -0.58894436293405761, -1.6459855274088921, 4.2171038502583507]]], [[[-1.661264209710259, -3.5924830185239909, -3.926714691053216, 4.6488313215887835], [0.83917305781474383, -1.747805522640109, -2.3037471044809568, -4.723628872515131], [-1.3382488286504115, -4.476446065957167, -0.99674404736242117, -4.3661969295354117]], [[1.0598595170076077, -0.19226332818609659, 1.2647338833662918, 2.6316764694963517], [3.8022221337176685, 3.3216545470545302, 1.6558043870946477, -3.192283503714922], [4.6471912279344192, -2.2585314149952729, -3.3396046798740664, 2.9535871562084974]]], [[[2.4927259412055687, -1.7682078466809212, -3.8436595638128401, 1.8856569517823241], [-3.5778072979055366, -1.4520098978531992, -1.8690036465447903, -2.1824703474806597], [-2.9494885498413606, -4.8915793099194635, -3.4081990339500292, -0.8325694914483126]], [[3.7007217572430982, -0.85098659594840331, 3.5872717949533595, 0.5736466573049519], [-0.26908808722230049, -3.7092505231319697, -2.7143082150073807, -2.5313662195555042], [-2.4795935752348308, 2.9266176041709162, 4.384995828125648, -0.63102761878910663]]]]),self.functionspace)
      arg1=Data(numarray.array([[[[-3.2508426969032245, -1.0024100704270476, 3.4982723131945033, -1.9964708455849953], [-0.17088222487315718, -4.1965255167604374, -3.7888777373790661, -2.4246951783662607], [1.1505367855332729, 0.28395927321886116, -1.7554266087733303, 0.94491437841475978]], [[-0.89427035290860957, 1.8691557996484756, -1.9158166741239491, -1.5451752659177087], [-4.6771609087788333, 3.4028194286871418, -3.5294614439386374, 4.0704745267453557], [-1.0631533489506384, -4.9816737586177524, -2.4923293159836248, -3.7317207478568291]]], [[[-0.37541928486144993, -3.9155448396414849, -3.4686214797886672, 2.5161469033474919], [2.934519412599137, 2.4688331676196551, 0.37822121190445301, 4.6859180214754375], [0.78377840608527816, 2.7151033454639864, -4.6497212398777554, -2.3740861584197459]], [[-3.0821070954331709, 1.0016455130728072, 4.8011875842658664, 0.64487679809045062], [-3.0532069302855316, 3.3985897915071916, -2.7489875284261869, -1.0364823343231322], [-0.49636722863105032, 0.29453601459294632, -3.8802708526396454, 0.77885118565126987]]], [[[-4.7626905454198702, 0.90176813974784054, 4.9948206097093522, -3.1295052840376449], [1.2834126334200455, 3.3715963540365195, 2.691170782305595, 1.648946257595143], [-2.4182052053755179, 3.2858262338086952, -4.7506720266598901, -1.1427747305253986]], [[2.3960188186004681, -1.9529728608578023, 3.5793004760451623, 3.5066349819851972], [0.015787978368537736, 4.9429338610678588, -4.6168224651124508, 3.0778272166624312], [4.8412694957514155, 0.49646030889916126, 4.8390734364274763, 3.7965138490932322]]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[[-4.0512216409646857, -2.2488251354790876, 2.5741189624243601, -3.1464509962959553], [3.5415207508726958, -0.11521243824542182, -4.4855498595431964, -0.12427356351934904], [1.1501777533571165, -1.3551735389474553, -3.9489356911688231, 0.29907845937935384]], [[4.670218220299132, -3.5990452055623399, -0.40586052741102385, 1.7019941790632975], [-3.7963057399912046, 1.3670161485907508, 0.037023966175839362, 4.6917488690819038], [1.1524780921030517, 2.8803462050022404, 3.2171956094985568, 4.4310334421540123]]], [[[-0.74645446908803592, 1.487833202764878, 4.2525680945504511, 1.4866479997013213], [-3.105845513592703, -1.3728295712031069, -0.29708694386510448, -2.4105997731600115], [-1.841124729214505, -3.3249823745199869, -3.0105601297540776, 0.45738474091793258]], [[3.4778516956290044, 1.5583028940067232, -4.9202667144405607, 0.7768547421186609], [4.3208195532293594, -1.4519944496992023, -3.1798996962547554, -0.62587527866007164], [-0.74085414403452354, 0.7874909108666337, 2.2525577786747597, -2.23785743903401]]], [[[4.3433251772547781, 4.365892846063538, 2.4671798191855299, 1.1895325637549146], [-0.52970986057913017, 4.2827660014035924, -3.8150353293719927, 4.709830625622887], [-0.75876286632995615, -0.22282821598760449, -2.8025089483451913, 0.50702160519610828]], [[-0.63931412488187611, 3.0113958705998272, -3.8428191253982069, -0.44348303745008], [1.3044314495288791, 0.85661911039063199, 3.0504178786209266, 0.98856020664162081], [1.8826398310117467, -1.0396561564326445, 2.0962423161913426, -1.0118098533838027]]]]))
      res=arg0+arg1
      ref=Data(numarray.array([[[[-7.0511997760780538, 3.801500130646688, 2.5970403757235401, -4.7107222736154863], [-0.30826129895889576, -6.7838834281087781, -3.8453023527277064, 0.13723427053238302], [-0.06896171870653367, 3.980359806875426, -1.7358604219500373, -2.8703840163714585]], [[-5.4885007182767431, 3.0912902060876757, -5.0559507649036997, 1.4881053938314954], [-4.9778330858184434, 1.5525280666057286, 1.1009776088201155, 1.161297498872953], [-3.9788580755941374, -5.57061812155181, -4.138314843392517, 0.4853831024015216]]], [[[-2.0366834945717089, -7.5080278581654758, -7.3953361708418832, 7.1649782249362755], [3.7736924704138808, 0.72102764497954608, -1.9255258925765038, -0.037710851039693516], [-0.55447042256513335, -1.7613427204931806, -5.6464652872401766, -6.7402830879551576]], [[-2.0222475784255631, 0.80938218488671065, 6.0659214676321582, 3.2765532675868023], [0.7490152034321369, 6.7202443385617219, -1.0931831413315392, -4.2287658380380542], [4.1508239993033689, -1.9639954004023266, -7.2198755325137114, 3.7324383418597673]]], [[[-2.2699646042143016, -0.8664397069330807, 1.151161045896512, -1.2438483322553209], [-2.2943946644854911, 1.9195864561833202, 0.82216713576080469, -0.53352408988551669], [-5.3676937552168784, -1.6057530761107683, -8.1588710606099184, -1.9753442219737112]], [[6.0967405758435662, -2.8039594568062056, 7.1665722709985218, 4.0802816392901491], [-0.25330010885376275, 1.2336833379358891, -7.3311306801198315, 0.54646099710692697], [2.3616759205165847, 3.4230779130700775, 9.2240692645531244, 3.1654862303041256]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[-7.851578720139516, 2.555085065594648, 1.6728870249533969, -5.8607024243264458], [3.4041416767869572, -2.7025703495937621, -4.5419744748918367, 2.4376558853792947], [-0.069320750882690074, 2.3412269947091096, -3.9293695043455301, -3.5162199354068644]], [[0.075987854930998466, -2.3769107991231397, -3.5459946181907744, 4.7352748388125017], [-4.0969779170308147, -0.48327521349066238, 4.6674630189345923, 1.7825718412095011], [-1.7632266345404473, 2.2914018420681828, 1.5712100820896646, 8.648137292412363]]], [[[-2.4077186787982949, -2.1046498157591129, 0.32585340349723513, 6.1354793212901049], [-2.2666724557779592, -3.1206350938432159, -2.6008340483460612, -7.134228645675142], [-3.1793735578649165, -7.8014284404771539, -4.0073041771164988, -3.9088121886174791]], [[4.5377112126366121, 1.3660395658206266, -3.655532831074269, 3.4085312116150126], [8.1230416869470279, 1.8696600973553279, -1.5240953091601077, -3.8181587823749936], [3.9063370838998956, -1.4710405041286392, -1.0870469011993067, 0.71572971717448741]]], [[[6.8360511184603467, 2.5976849993826168, -1.3764797446273103, 3.0751895155372386], [-4.1075171584846668, 2.8307561035503932, -5.6840389759167831, 2.5273602781422273], [-3.7082514161713167, -5.114407525907068, -6.2107079822952205, -0.32554788625220432]], [[3.061407632361222, 2.1604092746514238, -0.25554733044484745, 0.1301636198548719], [1.0353433623065786, -2.8526314127413377, 0.33610966361354588, -1.5428060129138834], [-0.59695374422308412, 1.8869614477382717, 6.4812381443169906, -1.6428374721729093]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_add_overloaded_taggedData_rank0_float_rank0(self):
      arg0=Data(2.29296097295,self.functionspace)
      arg0.setTaggedValue(1,-0.865149407705)
      arg1=1.84752327157
      res=arg0+arg1
      ref=Data(4.14048424452,self.functionspace)
      ref.setTaggedValue(1,0.982373863864)
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_add_overloaded_taggedData_rank0_array_rank0(self):
      arg0=Data(3.03165079659,self.functionspace)
      arg0.setTaggedValue(1,-2.13856118931)
      arg1=numarray.array(3.16421773497)
      res=arg0+arg1
      ref=Data(6.19586853156,self.functionspace)
      ref.setTaggedValue(1,1.02565654566)
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_add_overloaded_taggedData_rank0_array_rank1(self):
      arg0=Data(-3.39036425876,self.functionspace)
      arg0.setTaggedValue(1,-1.9982705161)
      arg1=numarray.array([0.20395812629873866, -3.6283864462390367])
      res=arg0+arg1
      ref=Data(numarray.array([-3.1864061324580195, -7.0187507049957949]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([-1.7943123898010662, -5.626656962338842]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_add_overloaded_taggedData_rank0_array_rank2(self):
      arg0=Data(-2.4360484545,self.functionspace)
      arg0.setTaggedValue(1,4.51542461912)
      arg1=numarray.array([[2.1081715059736279, 1.5276320644975154, -3.5919376793793631, 2.49668285250495, 2.0560683812000384], [-1.8968708676974897, -1.3909914778934382, -3.8972446549153341, 4.4648337345436762, -3.4134205109734883], [4.813110307018281, 2.5414393459775635, -3.7296494961802864, 3.5859706166020082, 4.7695162754414113], [1.5733478639386531, -4.8511134286581665, 3.5242887252078354, -2.4340148304684419, -3.5714922585679201]])
      res=arg0+arg1
      ref=Data(numarray.array([[-0.32787694852410354, -0.90841639000021601, -6.0279861338770946, 0.060634398007218593, -0.37998007329769301], [-4.3329193221952211, -3.8270399323911697, -6.3332931094130656, 2.0287852800459447, -5.8494689654712193], [2.3770618525205496, 0.10539089147983205, -6.1656979506780178, 1.1499221621042768, 2.3334678209436799], [-0.86270059055907833, -7.287161883155898, 1.088240270710104, -4.8700632849661734, -6.0075407130656515]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[6.6235961250938011, 6.0430566836176887, 0.92348693974081009, 7.0121074716251233, 6.5714930003202117], [2.6185537514226835, 3.124433141226735, 0.61817996420483912, 8.9802583536638494, 1.1020041081466849], [9.3285349261384543, 7.0568639650977367, 0.78577512293988683, 8.1013952357221815, 9.2849408945615846], [6.0887724830588263, -0.33568880953799329, 8.0397133443280087, 2.0814097886517313, 0.94393236055225316]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_add_overloaded_taggedData_rank0_array_rank3(self):
      arg0=Data(-3.24208975985,self.functionspace)
      arg0.setTaggedValue(1,2.62527982452)
      arg1=numarray.array([[[-0.41404840239016316, 1.7801109686638803], [-1.2039450965390741, -2.3347839202577081]], [[-3.5114328978873468, 2.1533305358449084], [-4.6106167476145608, -0.62953884006243932]], [[-1.4956222356435731, 3.7031850577772545], [-3.2630348889887628, 2.3059455186166176]], [[4.8324963451520286, 2.942652657805878], [-3.5862292403076612, -3.9654056615935951]], [[-0.50974622785371348, -1.1838710587598564], [-2.8798848007442124, 1.5559414527111812]], [[2.5767525820163169, 3.0650856225295975], [3.1433748459083439, -2.1130873478359726]]])
      res=arg0+arg1
      ref=Data(numarray.array([[[-3.6561381622414144, -1.461978791187371], [-4.4460348563903249, -5.5768736801089593]], [[-6.7535226577385981, -1.0887592240063428], [-7.852706507465812, -3.8716285999136906]], [[-4.7377119954948244, 0.46109529792600323], [-6.5051246488400141, -0.93614424123463369]], [[1.5904065853007774, -0.29943710204537322], [-6.8283190001589125, -7.2074954214448468]], [[-3.7518359877049647, -4.4259608186111077], [-6.1219745605954632, -1.68614830714007]], [[-0.6653371778349344, -0.17700413732165377], [-0.098714913942907323, -5.3551771076872239]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[2.2112314221260982, 4.4053907931801417], [1.4213347279771873, 0.29049590425855332]], [[-0.8861530733710854, 4.7786103603611698], [-1.9853369230982993, 1.9957409844538221]], [[1.1296575888726883, 6.3284648822935159], [-0.63775506447250141, 4.931225343132879]], [[7.45777616966829, 5.5679324823221394], [-0.96094941579139981, -1.3401258370773337]], [[2.1155335966625479, 1.441408765756405], [-0.25460497622795097, 4.1812212772274426]], [[5.2020324065325783, 5.6903654470458589], [5.7686546704246053, 0.51219247668028878]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_add_overloaded_taggedData_rank0_array_rank4(self):
      arg0=Data(-2.19530486292,self.functionspace)
      arg0.setTaggedValue(1,-2.52768715312)
      arg1=numarray.array([[[[0.38393400062398442, -2.6147123620008395, 4.8241838964862076, -1.1882915245803547], [-4.8584169558915544, -4.2515286929515366, -3.3859152328281192, -2.0952380674002469], [0.61629231289259589, -1.9596662627806283, 0.4856917994251031, -1.5260646850614537]], [[-4.5619792635413425, 3.5356801539889666, -1.2989305375592961, -0.70326837185152513], [1.5284830556150446, -3.2136918579264586, 1.4558473460696941, 2.1187716690776579], [1.9160649368111882, -2.9242831605548969, 3.0296911633727355, -4.4653077280479092]]], [[[4.8996679916559458, 0.88461077080015027, -0.27560328112553911, -4.3227022752991759], [0.41423872610300982, 1.1100151635069704, -1.9738227060660538, -2.6025963782287374], [0.77693900848882702, -1.7199330644894273, 1.9446959337570879, -0.16278879482562836]], [[4.2852363930005097, 4.7709650025354264, -2.6703711254031282, 4.1494469236895721], [1.3543103275247157, -3.3369007278217633, -3.3113027260158736, -2.3541119413122216], [-0.99647461479252719, 1.5894087520747844, 0.54302955182696167, 1.1042832544674379]]], [[[-1.4721726792199084, 3.6742560454540119, -0.046524751054013436, 0.21301683274857908], [-0.18494596344052727, -4.8879168863640698, 1.4217501368556835, 3.6166116051506467], [3.5834284464806814, -2.6687331265922145, 2.7545281197211366, 0.29769138648064519]], [[-1.7029022954648418, -2.5974944149521271, 3.9562327933765697, 1.1432944512268648], [-2.0064742753156506, -4.6283696182621981, 0.52662000619486449, -4.0178647609846019], [3.7212667864529632, 1.1699706335673135, 2.0951843835822892, 1.0356135330496885]]]])
      res=arg0+arg1
      ref=Data(numarray.array([[[[-1.8113708622929359, -4.8100172249177593, 2.6288790335692873, -3.383596387497275], [-7.0537218188084747, -6.4468335558684569, -5.5812200957450395, -4.2905429303171676], [-1.5790125500243244, -4.1549711256975481, -1.7096130634918172, -3.7213695479783739]], [[-6.7572841264582628, 1.3403752910720463, -3.4942354004762164, -2.8985732347684454], [-0.66682180730187568, -5.4089967208433789, -0.73945751684722616, -0.076533193839262381], [-0.27923992610573212, -5.1195880234718167, 0.83438630045581519, -6.6606125909648295]]], [[[2.7043631287390255, -1.31069409211677, -2.4709081440424594, -6.5180071382160962], [-1.7810661368139105, -1.0852896994099499, -4.1691275689829741, -4.7979012411456576], [-1.4183658544280933, -3.9152379274063476, -0.25060892915983235, -2.3580936577425486]], [[2.0899315300835895, 2.5756601396185062, -4.8656759883200484, 1.9541420607726518], [-0.84099453539220459, -5.532205590738684, -5.5066075889327939, -4.5494168042291419], [-3.1917794777094475, -0.6058961108421359, -1.6522753110899586, -1.0910216084494824]]], [[[-3.6674775421368286, 1.4789511825370916, -2.2418296139709337, -1.9822880301683412], [-2.3802508263574476, -7.0832217492809901, -0.77355472606123676, 1.4213067422337264], [1.3881235835637611, -4.8640379895091348, 0.55922325680421636, -1.8976134764362751]], [[-3.8982071583817621, -4.7927992778690474, 1.7609279304596495, -1.0520104116900555], [-4.2017791382325704, -6.8236744811791183, -1.6686848567220558, -6.2131696239015222], [1.5259619235360429, -1.0253342293496068, -0.10012047933463109, -1.1596913298672318]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[-2.143753152496318, -5.1423995151211415, 2.2964967433659051, -3.7159786777006572], [-7.3861041090118569, -6.779215846071839, -5.9136023859484217, -4.6229252205205498], [-1.9113948402277066, -4.4873534159009303, -2.0419953536951994, -4.0537518381817561]], [[-7.089666416661645, 1.0079930008686642, -3.8266176906795986, -3.2309555249718276], [-0.99920409750525785, -5.7413790110467611, -1.0718398070506083, -0.40891548404264455], [-0.61162221630911429, -5.4519703136751989, 0.50200401025243302, -6.9929948811682117]]], [[[2.3719808385356433, -1.6430763823201522, -2.8032904342458416, -6.8503894284194784], [-2.1134484270172926, -1.4176719896133321, -4.5015098591863563, -5.1302835313490398], [-1.7507481446314754, -4.2476202176097297, -0.58299121936321452, -2.6904759479459308]], [[1.7575492398802073, 2.243277849415124, -5.1980582785234306, 1.6217597705692697], [-1.1733768255955868, -5.8645878809420662, -5.8389898791361761, -4.881799094432524], [-3.5241617679128296, -0.93827840104551807, -1.9846576012933408, -1.4234038986528645]]], [[[-3.9998598323402108, 1.1465688923337094, -2.5742119041743159, -2.3146703203717234], [-2.7126331165608297, -7.4156040394843723, -1.1059370162646189, 1.0889244520303443], [1.0557412933603789, -5.196420279712517, 0.22684096660083419, -2.2299957666396573]], [[-4.2305894485851443, -5.1251815680724295, 1.4285456402562673, -1.3843927018934377], [-4.5341614284359526, -7.1560567713825005, -2.001067146925438, -6.5455519141049043], [1.1935796333326607, -1.357716519552989, -0.43250276953801325, -1.4920736200706139]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_add_overloaded_taggedData_rank0_constData_rank0(self):
      arg0=Data(3.86230529087,self.functionspace)
      arg0.setTaggedValue(1,1.18808616797)
      arg1=Data(2.05080033163,self.functionspace)
      res=arg0+arg1
      ref=Data(5.9131056225,self.functionspace)
      ref.setTaggedValue(1,3.2388864996)
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_add_overloaded_taggedData_rank0_constData_rank1(self):
      arg0=Data(3.67849774954,self.functionspace)
      arg0.setTaggedValue(1,-4.11303757292)
      arg1=Data(numarray.array([1.8331631361731038, -2.954600680409345]),self.functionspace)
      res=arg0+arg1
      ref=Data(numarray.array([5.5116608857128035, 0.72389706913035479]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([-2.2798744367464749, -7.0676382533289237]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_add_overloaded_taggedData_rank0_constData_rank2(self):
      arg0=Data(2.7324622393,self.functionspace)
      arg0.setTaggedValue(1,-4.50382859082)
      arg1=Data(numarray.array([[3.3641860429263062, -1.8077339556933514, -1.2834744556811017, -4.4787445140634405, -0.27698598603725344], [-1.2127736585101703, -3.4779249046318683, 2.0899273379433154, 3.4999307572361626, -0.47171298019905628], [-0.24400762141580135, -2.7594431028750286, 0.34535610045476872, 0.85446598867582235, 1.2445562714632903], [-1.9601875932982784, -2.9526655521925105, -4.1058310669425326, -1.5162723691050051, -0.55946914666192527]]),self.functionspace)
      res=arg0+arg1
      ref=Data(numarray.array([[6.096648282228764, 0.92472828360910642, 1.4489877836213561, -1.7462822747609827, 2.4554762532652044], [1.5196885807922875, -0.74546266532941052, 4.8223895772457732, 6.2323929965386204, 2.2607492591034015], [2.4884546178866565, -0.02698086357257079, 3.0778183397572265, 3.5869282279782801, 3.9770185107657481], [0.77227464600417939, -0.22020331289005268, -1.3733688276400748, 1.2161898701974527, 2.1729930926405325]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[-1.1396425478896504, -6.3115625465093075, -5.7873030464970583, -8.9825731048793962, -4.78081457685321], [-5.7166022493261268, -7.9817534954478244, -2.4139012528726411, -1.0038978335797939, -4.9755415710150128], [-4.7478362122317579, -7.2632716936909851, -4.1584724903611878, -3.6493626021401342, -3.2592723193526663], [-6.464016184114235, -7.4564941430084666, -8.6096596577584883, -6.0201009599209616, -5.0632977374778818]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_add_overloaded_taggedData_rank0_constData_rank3(self):
      arg0=Data(2.19032016387,self.functionspace)
      arg0.setTaggedValue(1,-2.56680802473)
      arg1=Data(numarray.array([[[-3.9751171199690436, 4.8899184336489103], [-3.9690433069117983, 1.6926749155014509]], [[1.4258065830516582, -4.4135341836058659], [1.8500348031722673, -1.1915908985412393]], [[3.544916706225667, -2.776918511293518], [4.9193199901841584, 3.1529485219215143]], [[-3.7019570594296858, -4.8151732460070686], [-4.1507319417463107, -0.34538259128676607]], [[1.8900885748804575, -4.230946658400395], [-1.6413217851779405, 0.16987378532215747]], [[1.4069100800246268, 3.9494846877176126], [3.7590990052833391, 3.9137483255036276]]]),self.functionspace)
      res=arg0+arg1
      ref=Data(numarray.array([[[-1.784796956098651, 7.080238597519303], [-1.7787231430414057, 3.8829950793718435]], [[3.6161267469220508, -2.2232140197354733], [4.04035496704266, 0.99872926532915329]], [[5.7352368700960596, -0.58659834742312533], [7.1096401540545511, 5.3432686857919069]], [[-1.5116368955592931, -2.624853082136676], [-1.960411777875918, 1.8449375725836266]], [[4.0804087387508501, -2.0406264945300023], [0.54899837869245216, 2.3601939491925501]], [[3.5972302438950194, 6.1398048515880053], [5.9494191691537317, 6.1040684893740202]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[-6.5419251447033178, 2.3231104089146362], [-6.5358513316460725, -0.87413310923282328]], [[-1.141001441682616, -6.9803422083401401], [-0.71677322156200685, -3.7583989232755135]], [[0.97810868149139285, -5.3437265360277921], [2.3525119654498843, 0.58614049718724015]], [[-6.2687650841639595, -7.3819812707413428], [-6.7175399664805848, -2.9121906160210402]], [[-0.67671944985381671, -6.7977546831346691], [-4.2081298099122151, -2.3969342394121167]], [[-1.1598979447096474, 1.3826766629833385], [1.1922909805490649, 1.3469403007693534]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_add_overloaded_taggedData_rank0_constData_rank4(self):
      arg0=Data(-4.51699258956,self.functionspace)
      arg0.setTaggedValue(1,-1.9314688415)
      arg1=Data(numarray.array([[[[-4.6121210823866949, -0.39911898335550067, 1.0220065408994135, -3.2218202106106064], [-4.4798179661148883, 1.6143909899455444, -2.3591942868887896, -2.9651695050083071], [-3.8395108579430892, -1.1467597560894651, -1.8053166109441077, -3.8527182892474032]], [[4.3553230739546791, -1.8189069903443835, 2.7530356959031845, 4.8870107409366597], [-2.9869746864590274, 4.6069455536235466, -2.2979092144214155, -4.7536745870998223], [2.7714827290157151, -4.8302972276294343, 0.85624201495125618, -2.4558344865559869]]], [[[0.49954928283636946, 2.2844233040722539, -2.4563680004188804, -4.3546980978260494], [4.496792018950849, 0.63856672806402415, -4.9019667438169936, 4.4200698743379512], [0.3509823037673776, 3.8629058866223751, 3.9690404219111493, 2.7242082796739417]], [[0.55407991883350682, 4.8933550440969764, 3.1042639625705473, 1.5801801735882108], [3.358785928282531, -1.1342388303370043, 0.94125142292867814, -2.7267726407066739], [-2.2057107224085848, -0.71140132170168435, 0.83804467851579911, -3.4878274475552251]]], [[[0.54558900719122949, 4.7734486675017749, 0.30998287401196656, -3.4865707041166907], [-0.45750091834826456, 2.8340184453393551, -3.4634119343162881, -3.5403928817814165], [0.55810424653144697, -3.5771474761557887, 0.0016539868301510552, 3.1961208949540154]], [[-0.99132469275235646, -2.7321990677958894, 2.3084406702263518, 4.788854508284718], [3.7243726115726581, -1.9281248799270445, -3.5895232826834467, -4.4406635256688363], [-4.8095798476927962, -3.9675427987674583, -0.48206923849554961, 4.9910922710559742]]]]),self.functionspace)
      res=arg0+arg1
      ref=Data(numarray.array([[[[-9.1291136719436636, -4.9161115729124694, -3.4949860486575552, -7.7388128001675751], [-8.9968105556718569, -2.9026015996114243, -6.8761868764457583, -7.4821620945652754], [-8.3565034475000584, -5.6637523456464338, -6.3223092005010759, -8.3697108788043728]], [[-0.16166951560228959, -6.3358995799013522, -1.7639568936537842, 0.37001815137969096], [-7.5039672760159961, 0.089952964066577934, -6.8149018039783842, -9.2706671766567901], [-1.7455098605412536, -9.3472898171864038, -3.6607505746057125, -6.9728270761129556]]], [[[-4.0174433067205992, -2.2325692854847148, -6.9733605899758491, -8.871690687383019], [-0.020200570606119683, -3.8784258614929445, -9.4189593333739623, -0.096922715219017519], [-4.1660102857895911, -0.65408670293459359, -0.54795216764581944, -1.7927843098830269]], [[-3.9629126707234619, 0.37636245454000772, -1.4127286269864214, -2.9368124159687579], [-1.1582066612744377, -5.651231419893973, -3.5757411666282906, -7.2437652302636426], [-6.722703311965553, -5.228393911258653, -3.6789479110411696, -8.0048200371121929]]], [[[-3.9714035823657392, 0.25645607794480618, -4.2070097155450021, -8.0035632936736594], [-4.9744935079052333, -1.6829741442176136, -7.9804045238732568, -8.0573854713383852], [-3.9588883430255217, -8.0941400657127573, -4.5153386027268176, -1.3208716946029533]], [[-5.5083172823093252, -7.2491916573528581, -2.2085519193306169, 0.27186191872774934], [-0.79261997798431061, -6.4451174694840132, -8.1065158722404149, -8.9576561152258058], [-9.3265724372497658, -8.4845353883244279, -4.9990618280525183, 0.4740996814990055]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[-6.5435899238906536, -2.3305878248594589, -0.9094623006045448, -5.1532890521145642], [-6.411286807618847, -0.31707785155841384, -4.2906631283927474, -4.8966383465122654], [-5.7709796994470475, -3.0782285975934234, -3.7367854524480659, -5.784187130751361]], [[2.4238542324507208, -3.7503758318483418, 0.82156685439922628, 2.9555418994327014], [-4.9184435279629852, 2.6754767121195884, -4.2293780559253733, -6.6851434286037801], [0.84001388751175687, -6.7617660691333921, -1.0752268265527021, -4.3873033280599447]]], [[[-1.4319195586675888, 0.35295446256829566, -4.3878368419228391, -6.2861669393300073], [2.5653231774468908, -1.2929021134399341, -6.8334355853209523, 2.4886010328339929], [-1.5804865377365807, 1.9314370451184169, 2.037571580407191, 0.79273943816998349]], [[-1.3773889226704514, 2.9618862025930182, 1.172795121066589, -0.35128866791574742], [1.4273170867785727, -3.0657076718409626, -0.99021741857528012, -4.6582414822106326], [-4.137179563912543, -2.6428701632056426, -1.0934241629881591, -5.4192962890591829]]], [[[-1.3858798343127288, 2.8419798259978166, -1.6214859674919917, -5.4180395456206494], [-2.3889697598522228, 0.90254960383539684, -5.3948807758202459, -5.4718617232853752], [-1.3733645949725113, -5.5086163176597474, -1.9298148546738072, 1.2646520534500572]], [[-2.9227935342563147, -4.6636679092998481, 0.37697182872239354, 2.8573856667807598], [1.7929037700686998, -3.8595937214310028, -5.5209921241874049, -6.3721323671727941], [-6.741048689196754, -5.8990116402714161, -2.4135380799995079, 3.0596234295520159]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_add_overloaded_taggedData_rank0_taggedData_rank0(self):
      arg0=Data(1.06708017249,self.functionspace)
      arg0.setTaggedValue(1,-3.25402063702)
      arg1=Data(3.25656129909,self.functionspace)
      arg1.setTaggedValue(1,4.18992375174)
      res=arg0+arg1
      ref=Data(4.32364147158,self.functionspace)
      ref.setTaggedValue(1,0.935903114728)
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_add_overloaded_taggedData_rank0_taggedData_rank1(self):
      arg0=Data(1.13367068898,self.functionspace)
      arg0.setTaggedValue(1,4.8318093292)
      arg1=Data(numarray.array([3.5486323025573778, -3.9595252320239371]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([-1.0212988849549043, 1.0947512998903388]))
      res=arg0+arg1
      ref=Data(numarray.array([4.682302991536087, -2.825854543045228]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([3.8105104442471212, 5.9265606290923643]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_add_overloaded_taggedData_rank0_taggedData_rank2(self):
      arg0=Data(4.05203768321,self.functionspace)
      arg0.setTaggedValue(1,2.99934891978)
      arg1=Data(numarray.array([[4.0109727121693535, -3.3123747036063866, -0.65378998028351365, -0.35226199859120033, -2.7572843697414138], [4.9956655041848723, -0.52363648179708377, 3.0308238090085062, -0.65374074249569603, -1.8312194682127378], [-4.0547465724550946, -2.1425959490010813, 3.6853966663310445, 1.29599873905227, -4.2870260966385585], [0.97570023159799746, -2.4295885899745651, 2.3547450346064194, -1.9262018603048023, -3.5168056866523143]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[1.9020762439355519, 0.58831211015719376, 0.10478411615355832, -1.8221758784968278, -3.0312868921401148], [0.037363898105802207, -2.7440657037866978, 0.81830228900701574, 2.7443631180739736, -0.39768901470796614], [4.0097173958047012, 1.8501996956563289, -2.3414143509717134, 0.91838369541387799, 0.59960873643829338], [-3.0057595650064162, 1.0215009286287717, 4.7967180404588881, 1.3855216718432262, -2.0978337313153483]]))
      res=arg0+arg1
      ref=Data(numarray.array([[8.0630103953776899, 0.73966297960194982, 3.3982477029248228, 3.6997756846171361, 1.2947533134669227], [9.0477031873932088, 3.5284012014112527, 7.0828614922168427, 3.3982969407126404, 2.2208182149955986], [-0.0027088892467581616, 1.9094417342072552, 7.7374343495393809, 5.3480364222606065, -0.23498841343022203], [5.0277379148063339, 1.6224490932337714, 6.4067827178147558, 2.1258358229035341, 0.53523199655602216]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[4.9014251637164747, 3.5876610299381166, 3.1041330359344812, 1.1771730412840951, -0.031937972359191935], [3.0367128178867251, 0.2552832159942251, 3.8176512087879386, 5.7437120378548965, 2.6016599050729567], [7.0090663155856241, 4.8495486154372518, 0.65793456880920953, 3.9177326151948009, 3.5989576562192163], [-0.0064106452254932833, 4.0208498484096946, 7.7960669602398109, 4.384870591624149, 0.90151518846557455]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_add_overloaded_taggedData_rank0_taggedData_rank3(self):
      arg0=Data(3.12009271362,self.functionspace)
      arg0.setTaggedValue(1,3.99467141204)
      arg1=Data(numarray.array([[[3.3288751112597943, 3.2288364226226065], [-4.27743713114298, -4.442729193623367]], [[4.5455517418177553, -2.0690283359018968], [-0.082854446843692031, 2.2659297408978514]], [[0.76045293122690438, 0.53338980129996738], [-4.2717178158989064, -3.5128239879426149]], [[-3.576563246865605, 4.4557168791105219], [-3.0564832230809493, -2.2774467938837395]], [[3.0182590083997773, -1.2942577764404284], [4.1939707887791382, 0.099513539962120312]], [[0.047346570263790966, 1.3536116492480819], [-3.9155684845507377, -2.4106487782682704]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[4.3824375423470112, -3.0548925346523461], [-2.2027484362284913, 4.9046875731599719]], [[-3.3913827366940872, 0.62004007366019565], [-2.8047455003075319, 4.1933603818190139]], [[4.3888182133246172, 0.43417544351516213], [-3.9814144765755834, 3.7079574744230399]], [[2.6849666718347613, 2.7377998782056565], [-0.44184043133623518, 4.2701294690757265]], [[-2.5727508790835674, -4.5792308970455329], [-4.2503187020974629, -2.422324104904563]], [[2.8687560027339636, -4.3606027447498192], [3.8522492880998378, -4.8958542589689369]]]))
      res=arg0+arg1
      ref=Data(numarray.array([[[6.4489678248748774, 6.3489291362376896], [-1.1573444175278969, -1.3226364800082839]], [[7.6656444554328385, 1.0510643777131863], [3.0372382667713911, 5.3860224545129345]], [[3.8805456448419875, 3.6534825149150505], [-1.1516251022838233, -0.39273127432753174]], [[-0.45647053325052189, 7.5758095927256051], [0.063609490534133784, 0.84264591973134362]], [[6.1383517220148605, 1.8258349371746547], [7.3140635023942213, 3.2196062535772034]], [[3.1674392838788741, 4.473704362863165], [-0.79547577093565458, 0.70944393534681272]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[8.3771089543902697, 0.93977887739091237], [1.7919229758147672, 8.8993589852032304]], [[0.6032886753491713, 4.6147114857034541], [1.1899259117357266, 8.1880317938622724]], [[8.3834896253678757, 4.4288468555584206], [0.013256935467675035, 7.7026288864662984]], [[6.6796380838780198, 6.732471290248915], [3.5528309807070233, 8.264800881118985]], [[1.4219205329596911, -0.58455948500227439], [-0.25564729005420439, 1.5723473071386955]], [[6.8634274147772221, -0.36593133270656075], [7.8469207001430963, -0.9011828469256784]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_add_overloaded_taggedData_rank0_taggedData_rank4(self):
      arg0=Data(2.15814625848,self.functionspace)
      arg0.setTaggedValue(1,-1.54003280216)
      arg1=Data(numarray.array([[[[0.77780005294718713, -1.8382701985491856, 2.8100456369937827, -0.65810303243679069], [-2.1502736112542364, -1.4510218903103098, -1.5455760408573758, -1.4977089764499252], [-2.5953726210537633, -4.6546473323104536, -0.54591572151648293, 2.5113871518187194]], [[4.6959353612419346, 3.3929207698716883, 2.4231508860787923, 2.1568247294679228], [0.6083428437426841, 1.8094573710100095, 0.02078668160692132, -4.8695311945788653], [-1.6274091057385895, 2.2743846291290595, -3.9917322493800667, 1.2104668018060059]]], [[[4.3578682288142652, -1.2148719293193899, 1.6151062451585769, 2.5389231571768907], [2.0847460368699489, -2.6371013066373292, -4.3128248972532282, -3.0862601028789016], [4.0056188040004201, -1.9978831797736527, -2.4500282498142676, -3.8325019614790445]], [[2.4697811385291022, 1.0560478923301559, -3.2230874470411464, -1.9841475766189243], [-3.3269063240286201, 4.9754981707012451, -4.4072017166499027, -0.91796175383308753], [-4.7344459695107091, -4.621147653927002, -3.0867207598129074, 0.8965523811884113]]], [[[3.5445124209697223, -3.0199283387289344, -1.528283508837732, -4.786148180744048], [-0.35470208273686055, -4.3474467871167235, -0.10276294298889344, -3.3058859932770277], [1.5664759758131472, 4.1975423480902805, 4.2621171908026447, -3.5242591731006967]], [[4.4604848904395418, -0.70395998272948201, 4.2306795259333043, 2.0541522282931366], [0.55995884155478493, -0.75426183047508388, -1.9599710043821581, -1.6294664185384833], [1.2524026757554871, 2.1411345566794449, -2.4133729721536277, 1.9717912124502925]]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[[-4.7359919800579018, 4.2877861963492876, 3.3360222421510439, -0.44502880337905815], [-4.0811223509556829, -2.7223067630246334, 2.4296395934435164, 2.5736676638070097], [-0.11127098696252347, 2.8074971386955347, 2.6525779943222707, 3.3888428826645498]], [[2.5151122596628293, -3.5825231259309067, -0.84037584988397551, -2.9457005983983708], [4.37344391291915, -3.3756222178332482, -0.54012114472092598, 2.2744302346921472], [4.8295754080945503, 3.5280915927913021, 2.5435630360725048, 3.5794559102558523]]], [[[4.9881715999119951, -1.3360108202830503, 0.27231734407299424, 0.093541956761064249], [-3.7030315282506709, -1.720443027344094, 2.9082251077274073, -1.6486380943156895], [-3.6430509796093915, -0.50281057430209941, -2.1489577359826906, -2.326140037132717]], [[-0.44208092369812846, 0.54251358359656976, -1.9506879824973442, -4.8923447980001384], [2.6740432644895096, 0.96759509048760162, -4.4888456526637857, -4.5703420233074539], [-2.1168450502607286, 2.728347633438208, 0.060457837844900553, 0.79597703415686105]]], [[[-3.5708016875179305, 2.9229444002153757, 1.6915457329603578, 4.4351993450760645], [1.7044185662286804, -3.9080889584190581, -4.5785323214991633, -3.7550313887910471], [4.0955914016162005, -0.81735560297289211, -3.6317111111680767, 4.9265087581458182]], [[3.3543634551075687, -4.4178680501476189, 0.50223464800697037, 1.612344692779426], [-1.5335820692975766, -0.92638120941575863, 3.6344592515716183, 0.580472109300187], [-4.0159977836528249, 0.15919761767340557, -3.3482184838181994, -3.3711951688903827]]]]))
      res=arg0+arg1
      ref=Data(numarray.array([[[[2.9359463114245807, 0.319876059928208, 4.9681918954711763, 1.5000432260406029], [0.0078726472231571698, 0.70712436816708379, 0.61257021762001784, 0.66043728202746843], [-0.43722636257636971, -2.49650107383306, 1.6122305369609107, 4.669533410296113]], [[6.8540816197193282, 5.5510670283490819, 4.5812971445561859, 4.3149709879453164], [2.7664891022200777, 3.9676036294874031, 2.1789329400843149, -2.7113849361014717], [0.53073715273880406, 4.4325308876064531, -1.833585990902673, 3.3686130602833995]]], [[[6.5160144872916588, 0.94327432915800369, 3.7732525036359705, 4.6970694156542843], [4.2428922953473425, -0.47895504815993561, -2.1546786387758345, -0.92811384440150801], [6.1637650624778137, 0.1602630787037409, -0.29188199133687398, -1.6743557030016509]], [[4.6279273970064958, 3.2141941508075496, -1.0649411885637527, 0.17399868185846934], [-1.1687600655512265, 7.1336444291786387, -2.2490554581725091, 1.2401845046443061], [-2.5762997110333155, -2.4630013954496084, -0.92857450133551378, 3.0546986396658049]]], [[[5.7026586794471159, -0.86178208025154079, 0.6298627496396616, -2.6280019222666544], [1.8034441757405331, -2.1893005286393299, 2.0553833154885002, -1.1477397347996341], [3.7246222342905408, 6.3556886065676741, 6.4202634492800383, -1.3661129146233031]], [[6.6186311489169354, 1.4541862757479116, 6.3888257844106979, 4.2122984867705302], [2.7181051000321785, 1.4038844280023097, 0.19817525409523551, 0.52867983993891032], [3.4105489342328807, 4.2992808151568385, -0.25522671367623406, 4.1299374709276861]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[-6.2760247822162274, 2.747753394190962, 1.7959894399927183, -1.9850616055373838], [-5.6211551531140085, -4.262339565182959, 0.88960679128519082, 1.0336348616486841], [-1.6513037891208491, 1.2674643365372091, 1.1125451921639451, 1.8488100805062242]], [[0.97507945750450364, -5.1225559280892323, -2.3804086520423011, -4.4857334005566969], [2.8334111107608244, -4.9156550199915738, -2.0801539468792516, 0.73439743253382161], [3.2895426059362247, 1.9880587906329765, 1.0035302339141792, 2.0394231080975267]]], [[[3.4481387977536695, -2.8760436224413759, -1.2677154580853314, -1.4464908453972614], [-5.2430643304089966, -3.2604758295024197, 1.3681923055690817, -3.1886708964740151], [-5.1830837817677171, -2.042843376460425, -3.6889905381410162, -3.8661728392910426]], [[-1.9821137258564541, -0.99751921856175585, -3.4907207846556698, -6.432377600158464], [1.134010462331184, -0.57243771167072399, -6.0288784548221113, -6.1103748254657795], [-3.6568778524190542, 1.1883148312798824, -1.4795749643134251, -0.74405576800146456]]], [[[-5.1108344896762556, 1.3829115980570501, 0.15151293080203221, 2.8951665429177389], [0.16438576407035477, -5.4481217605773837, -6.1185651236574889, -5.2950641909493728], [2.5555585994578749, -2.3573884051312177, -5.1717439133264023, 3.3864759559874926]], [[1.8143306529492431, -5.9579008523059445, -1.0377981541513552, 0.072311890621100439], [-3.0736148714559022, -2.4664140115740842, 2.0944264494132927, -0.95956069285813861], [-5.5560305858111505, -1.38083518448492, -4.8882512859765246, -4.9112279710487083]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_add_overloaded_taggedData_rank0_expandedData_rank0(self):
      arg0=Data(-4.63468002965,self.functionspace)
      arg0.setTaggedValue(1,1.14356055602)
      arg1=Data(-4.65964295112,self.functionspace)
      arg1.setTaggedValue(1,-4.7660123087)
      arg1.expand()
      res=arg0+arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*(-9.29432298077)+(1.-msk_ref)*(-3.62245175268)
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_add_overloaded_taggedData_rank0_expandedData_rank1(self):
      arg0=Data(-4.01450571576,self.functionspace)
      arg0.setTaggedValue(1,-4.79948070273)
      arg1=Data(numarray.array([-1.4945676498042371, 4.1636484610154358]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([2.9957636820561273, 0.014275220903869013]))
      arg1.expand()
      res=arg0+arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([-5.5090733655635802, 0.14914274525609272])+(1.-msk_ref)*numarray.array([-1.8037170206697795, -4.7852054818220378])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_add_overloaded_taggedData_rank0_expandedData_rank2(self):
      arg0=Data(-3.08759004952,self.functionspace)
      arg0.setTaggedValue(1,-4.07326584633)
      arg1=Data(numarray.array([[-3.8440802942459351, 0.88599006342616082, -2.8336927986832161, -4.7384929433468779, -4.0673014725646546], [1.7716479746027858, -2.7545291447892764, -4.8623255165868153, 3.5684412287608787, -3.2808927507342456], [0.35044628569508962, -3.7369045820769187, -0.32354208711663279, 0.91717888748089571, 1.267897144188459], [0.13581192877645165, 3.3970653631389105, 0.65945030380393543, -3.0329169703593828, 1.5109917182520052]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[-1.6273366897325858, 1.6242521101541367, -0.80676284755454475, -1.6069618658885654, -1.0788495762977179], [-1.2440133192838223, -1.2245262816512206, 1.136458628155613, 3.3710510861186389, -2.5234305665624279], [-1.5268581953041673, -4.8285404364668754, -4.1367972745599779, 2.6562968470356179, -1.4664095591971824], [-0.80564004575783876, 4.5332607444869986, -1.5579578106602341, 3.4148196223228453, 0.4401427283465642]]))
      arg1.expand()
      res=arg0+arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[-6.9316703437696958, -2.2015999860975999, -5.9212828482069764, -7.8260829928706386, -7.1548915220884153], [-1.3159420749209749, -5.8421191943130371, -7.949915566110576, 0.48085117923711795, -6.3684828002580058], [-2.7371437638286711, -6.8244946316006789, -3.4111321366403935, -2.170411162042865, -1.8196929053353017], [-2.9517781207473091, 0.30947531361514979, -2.4281397457198253, -6.1205070198831439, -1.5765983312717555]])+(1.-msk_ref)*numarray.array([[-5.7006025360634585, -2.4490137361767363, -4.8800286938854178, -5.6802277122194385, -5.152115422628591], [-5.3172791656146954, -5.2977921279820936, -2.93680721817526, -0.70221476021223417, -6.5966964128933014], [-5.6001240416350404, -8.9018062827977484, -8.210063120890851, -1.4169689992952552, -5.5396754055280555], [-4.8789058920887118, 0.45999489815612549, -5.6312236569911072, -0.65844622400802777, -3.6331231179843089]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_add_overloaded_taggedData_rank0_expandedData_rank3(self):
      arg0=Data(1.63167315478,self.functionspace)
      arg0.setTaggedValue(1,2.64313681569)
      arg1=Data(numarray.array([[[3.5334428304641676, 1.3448302882853946], [-1.7150552323119617, 2.2920488201700726]], [[-2.9862367264684297, 2.0373955638738908], [2.5290307264649243, -4.3808795762986534]], [[1.6103243035130141, 0.74719893397661163], [2.9015732099646216, -2.4448771982405582]], [[2.7477489691732533, -3.4418842879887745], [-1.8345470547207188, -1.5100089248910775]], [[-4.6075046600131788, -4.6490151849699659], [-0.16476620232660277, 2.6496236687303263]], [[-4.6647269931052673, 1.7702333145101843], [1.5712821220566049, -0.7508154357640926]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[1.6886237093282404, -0.23175646823888929], [0.85841863308994881, -2.5932811961296665]], [[1.6386382570817055, -4.1684829457584982], [0.63215378656443022, -2.5684567044235562]], [[-4.6521563239928696, 3.4268278211702281], [2.7498874453882038, 1.5931865656880086]], [[1.0738958310620896, -3.6839761141127028], [-3.1756281291393695, -1.7426866362281879]], [[-2.3556188316851721, -3.7576159053131231], [-3.7150188217025484, 3.7066885523068436]], [[4.6360179917754412, -3.4602983191359549], [-1.2433685887379262, -0.30651291778588963]]]))
      arg1.expand()
      res=arg0+arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[[5.1651159852439346, 2.9765034430651616], [-0.083382077532194732, 3.9237219749498395]], [[-1.3545635716886628, 3.6690687186536577], [4.1607038812446913, -2.7492064215188865]], [[3.2419974582927811, 2.3788720887563786], [4.5332463647443886, -0.81320404346079123]], [[4.3794221239530202, -1.8102111332090076], [-0.20287389994095184, 0.12166422988868941]], [[-2.9758315052334119, -3.017342030190199], [1.4669069524531642, 4.2812968235100932]], [[-3.0330538383255004, 3.4019064692899512], [3.2029552768363718, 0.88085771901567433]]])+(1.-msk_ref)*numarray.array([[[4.3317605250229523, 2.4113803474558226], [3.5015554487846607, 0.049855619565045473]], [[4.2817750727764174, -1.5253461300637863], [3.2752906022591421, 0.074680111271155702]], [[-2.0090195082981577, 6.06996463686494], [5.3930242610829158, 4.2363233813827206]], [[3.7170326467568016, -1.0408392984179908], [-0.53249131344465761, 0.90045017946652406]], [[0.28751798400953987, -1.1144790896184111], [-1.0718820060078365, 6.3498253680015555]], [[7.2791548074701531, -0.81716150344124294], [1.3997682269567857, 2.3366238979088223]]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_add_overloaded_taggedData_rank0_expandedData_rank4(self):
      arg0=Data(0.992473939243,self.functionspace)
      arg0.setTaggedValue(1,-1.037051364)
      arg1=Data(numarray.array([[[[-3.7528037800257996, 3.0722001030772574, 3.844311442589559, -2.4972694662129911], [-4.4728102728435033, 0.82818983681654323, -0.3972546627607132, 0.93595044805815419], [-0.58164237903709726, 4.9941207762144906, 2.6765854525000048, 1.125129814972591]], [[-2.4615801620204381, 4.3728792389646909, 0.65377634851031186, -4.1445737599419852], [2.9042843598417925, -0.39456021501178284, -3.6375703795869341, 0.4364281599640929], [-4.1110858230442284, -3.6510182664681166, -2.6222582929342684, 1.2119932766749404]]], [[[-2.827547406038704, -3.3943097060358851, 0.46338629741950044, 3.646342157966707], [2.0683435895541677, 1.6357810515153854, 1.9501369424726427, 1.7586361176709868], [-4.6055825014138572, -2.7021944088022787, 4.5160538390164913, -0.6515211590136154]], [[-1.6577009983290147, 0.74153690934879446, -3.5188883222272804, -3.1580483724287389], [0.280149774405829, -3.3842996329151855, -0.9655712177669562, -1.0977386984372028], [-1.6087159489947789, -4.2301987770776597, 2.0642471241094986, 3.7815603426115967]]], [[[0.78810996983231263, 1.1713150153718574, 0.48373756798196332, 0.32802865245343682], [-4.2602436248986253, 2.6815635506192663, -2.749303435729388, 1.5113175928058986], [4.0386932510584224, -2.7660006446367005, -3.8899026980541276, -2.8478500989409197]], [[-4.4201889577523721, 4.3370720480505369, -1.183106794306763, -2.753346380339762], [2.6759596440025799, 1.9298136613277137, -1.7777245668218522, 3.4346965652205288], [4.1697038349452935, -3.3432034263924648, 0.95038013386971976, -0.65446331432793681]]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[[2.0789104434484473, -4.508777400348567, 1.5331083546332334, 4.49336212858152], [1.8802207328030187, -4.9436312011442958, 0.95995390941115755, 1.0409397140712962], [4.4029806285991455, -3.0508353519497589, -1.4319920162676967, 4.9324859166792496]], [[-0.80321564842726545, -0.31379127954498109, 4.8077178833583769, -0.44518932196249672], [3.1138068395754708, 3.9312599291722865, -2.1753619070696049, -4.3496776617454689], [-1.9317238107094825, 3.7498607559317403, -4.8409100962982947, -3.4067761660017215]]], [[[-1.6530285997714733, -3.3014759260717632, 0.77334729141762182, -1.6425686289050088], [3.3938981157540375, -2.9780304165754012, 0.16193154805455467, -3.9008003597439656], [1.2224442501270545, -2.341507950209909, -3.2027558874601425, 1.1725104185480788]], [[2.0639107295459134, 1.6561771765853468, 2.4027523947915554, -3.5099301386055703], [-0.88931997894950499, -2.5704542848111291, -0.9665448709263309, 1.7051997753467312], [4.6367791768868933, -2.4669021358046725, -1.6153774579581026, -4.1453553191414851]]], [[[2.4407751157254607, 2.79182158971678, -2.7425933984344186, -2.9283084218787003], [-1.6452839946246556, -2.7502841719075741, -0.082291147475465287, 1.3415023360316187], [-4.2509674661666601, 1.9941709432672905, 0.38029069702154583, 1.4827772847029141]], [[2.4884780660954249, 3.8913177374430621, -0.48481698674975604, 0.063994223713578435], [4.2954488325747491, -4.04061057745737, 3.2654677239706196, 2.3177058434320053], [-1.4208522341319494, 1.3867401579820982, -0.23356359719482889, 0.82529852322257735]]]]))
      arg1.expand()
      res=arg0+arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[[[-2.760329840783089, 4.0646740423199681, 4.8367853818322697, -1.5047955269702804], [-3.4803363336007926, 1.8206637760592539, 0.59521927648199746, 1.9284243873008649], [0.4108315602056134, 5.9865947154572012, 3.6690593917427154, 2.1176037542153017]], [[-1.4691062227777274, 5.3653531782074015, 1.6462502877530225, -3.1520998206992745], [3.8967582990845031, 0.59791372423092781, -2.6450964403442234, 1.4289020992068036], [-3.1186118838015178, -2.6585443272254059, -1.6297843536915577, 2.204467215917651]]], [[[-1.8350734667959934, -2.4018357667931745, 1.4558602366622111, 4.6388160972094177], [3.0608175287968784, 2.6282549907580961, 2.9426108817153533, 2.7511100569136975], [-3.6131085621711465, -1.709720469559568, 5.5085277782592019, 0.34095278022909525]], [[-0.66522705908630408, 1.7340108485915051, -2.5264143829845698, -2.1655744331860283], [1.2726237136485397, -2.3918256936724749, 0.026902721475754454, -0.10526475919449219], [-0.61624200975206822, -3.237724837834949, 3.0567210633522093, 4.7740342818543073]]], [[[1.7805839090750233, 2.1637889546145681, 1.476211507224674, 1.3205025916961475], [-3.2677696856559146, 3.674037489861977, -1.7568294964866773, 2.5037915320486093], [5.031167190301133, -1.7735267053939898, -2.8974287588114169, -1.855376159698209]], [[-3.4277150185096614, 5.3295459872932476, -0.19063285506405236, -1.7608724410970513], [3.6684335832452906, 2.9222876005704244, -0.78525062757914155, 4.4271705044632395], [5.1621777741880042, -2.3507294871497542, 1.9428540731124304, 0.33801062491477385]]]])+(1.-msk_ref)*numarray.array([[[[1.0418590794461204, -5.5458287643508939, 0.49605699063090647, 3.4563107645791931], [0.84316936880069182, -5.9806825651466227, -0.077097454591169345, 0.0038883500689692596], [3.3659292645968186, -4.0878867159520862, -2.4690433802700236, 3.8954345526769227]], [[-1.8402670124295923, -1.350842643547308, 3.77066651935605, -1.4822406859648236], [2.0767554755731439, 2.8942085651699596, -3.2124132710719318, -5.3867290257477958], [-2.9687751747118094, 2.7128093919294134, -5.8779614603006216, -4.4438275300040484]]], [[[-2.6900799637738002, -4.3385272900740901, -0.26370407258470507, -2.6796199929073357], [2.3568467517517107, -4.0150817805777281, -0.87511981594777222, -4.9378517237462924], [0.1853928861247276, -3.3785593142122359, -4.2398072514624694, 0.13545905454575191]], [[1.0268593655435865, 0.61912581258301991, 1.3657010307892286, -4.5469815026078972], [-1.9263713429518319, -3.607505648813456, -2.0035962349286578, 0.66814841134440428], [3.5997278128845664, -3.5039534998069994, -2.6524288219604295, -5.182406683143812]]], [[[1.4037237517231338, 1.7547702257144531, -3.7796447624367455, -3.9653597858810272], [-2.6823353586269825, -3.787335535909901, -1.1193425114777922, 0.30445097202929183], [-5.288018830168987, 0.9571195792649636, -0.65676066698078106, 0.44572592070058725]], [[1.451426702093098, 2.8542663734407352, -1.5218683507520829, -0.97305714028874846], [3.2583974685724222, -5.0776619414596968, 2.2284163599682927, 1.2806544794296784], [-2.4579035981342763, 0.34968879397977126, -1.2706149611971558, -0.21175284077974954]]]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_add_overloaded_taggedData_rank1_float_rank0(self):
      arg0=Data(numarray.array([0.77060031153569675, -1.3817994380303675]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([1.6634127860225503, -2.7078568290675706]))
      arg1=3.86062100315
      res=arg0+arg1
      ref=Data(numarray.array([4.6312213146824686, 2.4788215651164043]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([5.5240337891693221, 1.1527641740792012]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_add_overloaded_taggedData_rank1_array_rank0(self):
      arg0=Data(numarray.array([0.8330368484658992, -3.8536117424482876]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([-2.3219104272463884, -0.16998894311123447]))
      arg1=numarray.array(-3.41743191676)
      res=arg0+arg1
      ref=Data(numarray.array([-2.5843950682962324, -7.2710436592104193]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([-5.7393423440085201, -3.5874208598733661]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_add_overloaded_taggedData_rank1_array_rank1(self):
      arg0=Data(numarray.array([-0.82388051485507408, 2.114226584227139]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([4.453631118191856, -2.1394222743677727]))
      arg1=numarray.array([4.9078106479825809, -4.8863294229071252])
      res=arg0+arg1
      ref=Data(numarray.array([4.0839301331275069, -2.7721028386799862]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([9.3614417661744369, -7.0257516972748979]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_add_overloaded_taggedData_rank1_constData_rank0(self):
      arg0=Data(numarray.array([-3.6902347666151303, -0.58660523369265949]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([-0.44136073280632893, 0.85453049881865795]))
      arg1=Data(-4.03256730928,self.functionspace)
      res=arg0+arg1
      ref=Data(numarray.array([-7.7228020758964639, -4.6191725429739936]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([-4.473928042087663, -3.1780368104626762]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_add_overloaded_taggedData_rank1_constData_rank1(self):
      arg0=Data(numarray.array([-2.3236410413581385, 1.1424547463624464]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([1.7315293100419948, 2.9472023907502862]))
      arg1=Data(numarray.array([0.24526033511790857, -0.62856457346454153]),self.functionspace)
      res=arg0+arg1
      ref=Data(numarray.array([-2.07838070624023, 0.51389017289790484]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([1.9767896451599034, 2.3186378172857447]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_add_overloaded_taggedData_rank1_taggedData_rank0(self):
      arg0=Data(numarray.array([3.250804124545235, -4.7072533845050515]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([4.8151288535086021, 1.6749423702866508]))
      arg1=Data(-1.76802800894,self.functionspace)
      arg1.setTaggedValue(1,0.0791226334447)
      res=arg0+arg1
      ref=Data(numarray.array([1.482776115604735, -6.4752813934455515]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([4.8942514869532605, 1.7540650037313092]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_add_overloaded_taggedData_rank1_taggedData_rank1(self):
      arg0=Data(numarray.array([3.77276028340113, 4.1683610081694074]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([-3.7893460722139438, 1.6567058129165879]))
      arg1=Data(numarray.array([-0.43505674793302695, 1.0770635472649905]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([-0.27397524975019394, 2.5332381590653208]))
      res=arg0+arg1
      ref=Data(numarray.array([3.3377035354681031, 5.2454245554343979]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([-4.0633213219641373, 4.1899439719819087]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_add_overloaded_taggedData_rank1_expandedData_rank0(self):
      arg0=Data(numarray.array([-1.8155390835633369, -4.7505185696184622]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([1.4996755999113409, 2.3303341570595428]))
      arg1=Data(3.30044094165,self.functionspace)
      arg1.setTaggedValue(1,-0.696765436453)
      arg1.expand()
      res=arg0+arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([1.4849018580868396, -1.4500776279682857])+(1.-msk_ref)*numarray.array([0.80291016345810284, 1.6335687206063048])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_add_overloaded_taggedData_rank1_expandedData_rank1(self):
      arg0=Data(numarray.array([-2.0881112217928557, 3.2182191824441464]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([3.9673343175705948, 3.6406271121742666]))
      arg1=Data(numarray.array([4.1668427726605373, 3.2532073033389075]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([1.1775322453437855, 4.813387928423996]))
      arg1.expand()
      res=arg0+arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([2.0787315508676816, 6.4714264857830539])+(1.-msk_ref)*numarray.array([5.1448665629143804, 8.4540150405982626])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_add_overloaded_taggedData_rank2_float_rank0(self):
      arg0=Data(numarray.array([[1.386017414613514, -2.6231033049796491, 4.1399139685583908, -0.4757835738745344, -0.61334801364286129], [-3.8767016009847644, -1.6792352087895104, -0.95761952002154782, 1.1610341120860461, 3.4637568772172447], [-1.7853768713915863, 0.35745707386269476, 3.7798020283050562, -3.9919450276392543, 3.1640627937763064], [2.9013425069641361, -2.8869815673409507, -4.312642079255081, -4.9524261759161403, -1.8116853894426921]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[-2.5356642364263884, -3.0570803163456386, -4.6171329170636088, 1.9734766655043776, 1.3166736709207738], [-1.7765368820484162, 3.9569210044414262, -1.9541458254032404, 2.5822803597859618, 2.4896901790436416], [3.3049498054625701, 0.76686506584124547, -2.6786032665790271, 2.6474811802420275, 3.3463506827302432], [-1.3139676283316692, -0.82038525203303791, -2.872733478437338, -0.12661190695077096, -2.8155829413606206]]))
      arg1=-0.216609625179
      res=arg0+arg1
      ref=Data(numarray.array([[1.1694077894347013, -2.8397129301584618, 3.923304343379578, -0.69239319905334717, -0.82995763882167406], [-4.0933112261635767, -1.8958448339683232, -1.1742291452003606, 0.94442448690723335, 3.2471472520384319], [-2.0019864965703991, 0.14084744868388199, 3.5631924031262434, -4.2085546528180675, 2.9474531685974936], [2.6847328817853233, -3.1035911925197635, -4.5292517044338938, -5.1690358010949531, -2.0282950146215049]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[-2.7522738616052012, -3.2736899415244514, -4.8337425422424216, 1.7568670403255648, 1.100064045741961], [-1.993146507227229, 3.7403113792626135, -2.1707554505820532, 2.3656707346071491, 2.2730805538648289], [3.0883401802837573, 0.5502554406624327, -2.8952128917578399, 2.4308715550632147, 3.1297410575514304], [-1.530577253510482, -1.0369948772118507, -3.0893431036161507, -0.34322153212958373, -3.0321925665394334]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_add_overloaded_taggedData_rank2_array_rank0(self):
      arg0=Data(numarray.array([[2.4137267936710236, -1.7997061421593341, -4.3052651661982146, 1.422565293989992, 1.3119752649866125], [-1.867490006105438, 3.4459978054658507, 3.3903338466998747, -2.7244221932931776, -4.9994433194947332], [2.887482695252567, -1.2425761277091008, 4.3966556575758293, -0.80645263643906517, -4.4144393270588109], [4.2850786693861949, 1.6079208854026508, 1.5947218470081435, 3.5128021603521589, -4.2079688653726057]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[1.459759384010888, -1.9479503872148651, 3.5309699220761104, 3.0359150905241492, -3.1457670377866931], [1.3682366622215465, 0.50922176186034473, 0.95246664873011611, -1.6386073301391599, -1.9215088718744666], [-3.5382218714137545, 0.051369530298007504, 3.7079476159772717, 1.9237179458203642, -3.173801338946467], [0.74824107325503775, -0.86187078329955646, -4.0404653917936519, 1.9417938026751607, 3.0054838548030745]]))
      arg1=numarray.array(3.0741666769)
      res=arg0+arg1
      ref=Data(numarray.array([[5.4878934705717777, 1.27446053474142, -1.2310984892974606, 4.4967319708907461, 4.3861419418873666], [1.206676670795316, 6.5201644823666047, 6.4645005236006288, 0.34974448360757648, -1.9252766425939791], [5.961649372153321, 1.8315905491916533, 7.4708223344765834, 2.2677140404616889, -1.3402726501580569], [7.3592453462869489, 4.6820875623034048, 4.6688885239088975, 6.5869688372529129, -1.1338021884718517]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[4.5339260609116421, 1.1262162896858889, 6.6051365989768644, 6.1100817674249033, -0.071600360885939018], [4.4424033391223006, 3.5833884387610988, 4.0266333256308702, 1.4355593467615941, 1.1526578050262875], [-0.46405519451300048, 3.1255362071987616, 6.7821142928780258, 4.9978846227211182, -0.099634662045712918], [3.8224077501557918, 2.2122958936011976, -0.96629871489289787, 5.0159604795759147, 6.0796505317038285]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_add_overloaded_taggedData_rank2_array_rank2(self):
      arg0=Data(numarray.array([[1.2506390651794561, -0.81212430724736251, 2.105991202484951, 4.8892117700344286, -0.0050442144267703881], [-3.8820044898664197, 1.3406927502362631, -0.23088072914886837, -0.38035879572400599, 1.2942940423142701], [-4.5802823766916632, 0.49821714750866253, 4.2560215108958648, -4.6716137548953709, 1.0230637798676661], [-3.0502712063126713, -3.2098377736123842, 2.4503144503949628, 4.4188362288635155, -3.4130650656038961]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[-0.58366893823899346, -0.30578291202832286, -0.70518265514781131, -4.5433921860219613, 4.4223880923402685], [-4.3895956831875038, -1.5410087563236963, 3.2510935557298453, -1.5749788082821792, 0.83922854502163169], [0.010854086788042672, -4.9929781682524697, -3.0946822958514852, -4.8579683590423244, 4.9755727587445708], [-4.4925003399736605, -1.6488568907328292, -4.9543455366941869, -4.9154233168876873, 1.9139071819041575]]))
      arg1=numarray.array([[-3.2676629202056806, -2.584733409576232, 4.5922217778649639, 0.24306513744928182, 1.7499931410105738], [3.5198734053410359, -4.2999142549125882, 2.8381096319323484, 4.2641555681844761, -4.0435985738597804], [-2.7255609991860164, -1.4958445671148599, 1.0485609110046656, -2.2929896081868817, -2.9438760379556816], [4.4201220490292439, 0.99062584324820335, 1.7945690505804581, -1.1140220053731751, -0.021807228780941657]])
      res=arg0+arg1
      ref=Data(numarray.array([[-2.0170238550262245, -3.3968577168235945, 6.6982129803499149, 5.1322769074837105, 1.7449489265838034], [-0.36213108452538378, -2.9592215046763251, 2.6072289027834801, 3.8837967724604701, -2.7493045315455102], [-7.3058433758776795, -0.99762741960619739, 5.3045824219005304, -6.9646033630822526, -1.9208122580880156], [1.3698508427165725, -2.2192119303641809, 4.2448835009754209, 3.3048142234903404, -3.4348722943848378]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[-3.8513318584446741, -2.8905163216045549, 3.8870391227171526, -4.3003270485726794, 6.1723812333508423], [-0.86972227784646794, -5.8409230112362849, 6.0892031876621937, 2.6891767599022969, -3.2043700288381487], [-2.7147069123979737, -6.4888227353673296, -2.0461213848468196, -7.1509579672292061, 2.0316967207888892], [-0.072378290944416612, -0.6582310474846258, -3.1597764861137287, -6.0294453222608624, 1.8920999531232159]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_add_overloaded_taggedData_rank2_constData_rank0(self):
      arg0=Data(numarray.array([[3.2502711739066772, 3.2753975916638893, 3.0532889358162603, 3.1034472492746978, 0.052087591586211346], [0.3118677005964372, 4.1867697777823274, 4.9732669856910903, -2.8913821270923865, 4.3506736027981177], [-4.6860528744832539, -3.4816077401156855, -4.050480862180895, -3.0253108061921274, 4.3701610891655633], [-1.8781144439384989, -3.2927924838989853, 0.13729260877135019, -2.6590842182483412, -3.8264934109034687]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[-2.5126373635568386, -4.0203532509495528, 1.9451568388068647, 2.4982439625427251, 2.9930450949074183], [-2.5812279189579614, -3.749322717853306, 4.4612126484341932, 1.3961025240678806, -3.8192483460549722], [-4.9184023616989752, -1.884407900259506, 3.2580704584995797, 2.0881656141612464, 3.1255171708748826], [-2.5882910223927782, 4.0479258279003485, 4.5180373392458577, 0.89432107783419745, 2.5875919720936968]]))
      arg1=Data(-1.32485890265,self.functionspace)
      res=arg0+arg1
      ref=Data(numarray.array([[1.9254122712609725, 1.9505386890181846, 1.7284300331705555, 1.7785883466289931, -1.2727713110594934], [-1.0129912020492675, 2.8619108751366227, 3.6484080830453856, -4.2162410297380912, 3.0258147001524129], [-6.0109117771289586, -4.8064666427613902, -5.3753397648265997, -4.3501697088378322, 3.0453021865198586], [-3.2029733465842036, -4.61765138654469, -1.1875662938743545, -3.9839431208940459, -5.1513523135491734]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[-3.8374962662025434, -5.3452121535952575, 0.62029793616116002, 1.1733850598970204, 1.6681861922617136], [-3.9060868216036662, -5.0741816204990107, 3.1363537457884885, 0.071243621422175885, -5.1441072487006769], [-6.2432612643446799, -3.2092668029052107, 1.9332115558538749, 0.76330671151554164, 1.8006582682291778], [-3.9131499250384829, 2.7230669252546438, 3.193178436600153, -0.43053782481150726, 1.2627330694479921]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_add_overloaded_taggedData_rank2_constData_rank2(self):
      arg0=Data(numarray.array([[4.4929441538499244, 0.76193006655289963, -3.6013136757956854, 3.5435545395461094, 4.6801677558118886], [-0.50863290555282781, -4.9812485221410361, 4.8716203583858455, -0.15520714654011591, 3.452894058218277], [-2.7745470074273104, 1.3053804084041101, -0.64948784175483443, 4.3919626388781534, -2.0707892516302664], [0.87150750288468792, 1.7804985374774942, 2.3087331960876654, -1.9056365362023397, 0.51051839622696082]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[-3.1324888331494991, -3.5699394355850878, -3.0678800115448732, -0.3644669804906151, -3.9828541815822427], [-2.6636704756502603, 0.06436393161746512, -1.7408779765126727, 0.91575332404404364, 0.91622940428564892], [4.4774322156401869, -2.7257448457653934, 3.4237112377253567, -3.0344203953362312, -3.0359056845343702], [-4.0585903966166175, 2.9772620147258335, 3.8956599105893766, 3.8436466421257407, -2.4231294458602815]]))
      arg1=Data(numarray.array([[-4.6808035192748845, 0.41480396326348057, 2.5020316812530554, -0.65741734172914068, 4.6963871561039721], [0.18380341233428688, 2.5396208452698055, -1.2543606017962086, -2.0770288834594339, 1.0772324852437016], [-1.4521523688895757, -3.4076521920397829, -1.5600849021061594, -4.1373563737852281, 2.2625941689331288], [1.5040586623691752, 0.81395372076508465, 1.9361886507462316, -4.118885441779403, 0.221244016978277]]),self.functionspace)
      res=arg0+arg1
      ref=Data(numarray.array([[-0.18785936542496007, 1.1767340298163802, -1.09928199454263, 2.8861371978169688, 9.3765549119158607], [-0.32482949321854093, -2.4416276768712306, 3.6172597565896369, -2.2322360299995498, 4.5301265434619786], [-4.2266993763168861, -2.1022717836356728, -2.2095727438609938, 0.25460626509292528, 0.19180491730286242], [2.3755661652538631, 2.5944522582425789, 4.244921846833897, -6.0245219779817427, 0.73176241320523783]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[-7.8132923524243836, -3.1551354723216072, -0.5658483302918178, -1.0218843222197558, 0.71353297452172937], [-2.4798670633159734, 2.6039847768872706, -2.9952385783088813, -1.1612755594153903, 1.9934618895293506], [3.0252798467506112, -6.1333970378051763, 1.8636263356191973, -7.1717767691214593, -0.77331151560124134], [-2.5545317342474423, 3.7912157354909182, 5.8318485613356081, -0.27523879965366227, -2.2018854288820044]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_add_overloaded_taggedData_rank2_taggedData_rank0(self):
      arg0=Data(numarray.array([[-1.5969664428610941, -3.2419841195939281, -2.9076578064597189, -2.663828637524861, -0.49007057704686918], [-0.73550009313364662, 2.4813542932190549, -2.4501659858142699, 2.9561483677548086, -1.5272511879848425], [-1.2709683653380441, -4.43899272012131, -3.5574532003475969, 2.4970287876685493, 0.4238165463937662], [1.3508619199672944, -1.2951957666490319, 1.9550173863352462, 2.1322019832699501, 3.280542130798235]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[4.6589854912149171, 1.5511453854096926, 4.965722583293072, 0.40914248208395421, 3.1262650987087408], [1.8333709579258421, -1.0804912813756076, -2.4738467577704073, 4.6775561610173995, -1.4554092041385038], [-4.235651383182538, -1.51389228517673, 4.7363198261615729, -3.8384727366907931, -1.1276673590418538], [-4.5417407083761097, 2.4944134708644761, 3.1122535744006861, -4.7532602042912266, -0.70506740860247952]]))
      arg1=Data(4.06929400439,self.functionspace)
      arg1.setTaggedValue(1,-1.27259899399)
      res=arg0+arg1
      ref=Data(numarray.array([[2.472327561531205, 0.82730988479837109, 1.1616361979325802, 1.4054653668674382, 3.57922342734543], [3.3337939112586525, 6.550648297611354, 1.6191280185780292, 7.0254423721471078, 2.5420428164074567], [2.798325639054255, -0.36969871572901081, 0.51184080404470222, 6.5663227920608485, 4.4931105507860654], [5.4201559243595936, 2.7740982377432672, 6.0243113907275454, 6.2014959876622493, 7.3498361351905341]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[3.386386497222615, 0.27854639141739046, 3.6931235893007699, -0.86345651190834793, 1.8536661047164387], [0.56077196393354001, -2.3530902753679097, -3.7464457517627094, 3.4049571670250973, -2.728008198130806], [-5.5082503771748401, -2.7864912791690322, 3.4637208321692707, -5.1110717306830953, -2.4002663530341559], [-5.8143397023684118, 1.2218144768721739, 1.8396545804083839, -6.0258591982835288, -1.9776664025947817]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_add_overloaded_taggedData_rank2_taggedData_rank2(self):
      arg0=Data(numarray.array([[-2.7360673699569205, 1.2813661236117664, 2.6181299621874201, -4.5835559155379793, -0.59706551109364803], [-2.1154300756810418, 2.4637685424667488, 0.63920743759821086, -1.0304928260655464, -3.0388241860196241], [-4.1804742653319753, 0.6265873235154098, 4.1438730590828747, 1.849159394466878, 3.6496665209304968], [2.8275694342930962, -4.9054452894236142, 2.5745677599446983, 4.3161246638088855, 4.5501700481233502]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[-2.7236826094989421, -0.88947616716594524, -4.4642382826987994, 0.17930131398277283, 1.0115273959196971], [3.9769705807623996, -0.074299515250104697, 4.1143692155325695, 2.2366876970030658, -2.3250367186365315], [-1.4454031669851197, -4.4238920625528246, -2.4576577266829713, 3.4261333775559635, 4.4134638287533328], [-3.1326412064023601, 0.79829173838552148, 2.1440271770141326, -0.53338236178293474, -0.86557615032601642]]))
      arg1=Data(numarray.array([[-0.34303101101440525, -3.0437444667922242, 1.7963357003006442, 4.641240443255148, 2.3121754708917299], [0.24577874602811445, -3.4121443132010674, -2.4780610072246922, 3.2029389228011116, -2.6107739248212125], [-0.80894957852706195, 1.685116172854749, 0.98006258074479735, -1.5668088640997455, 4.5294248564398192], [4.5451471347708114, -2.3164981697303144, 2.4194654332001155, 4.12271616233609, 2.5345931657528089]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[0.13923134421935401, -2.093025836240745, 0.2383924930725172, 1.9334391571212448, -2.0297150413850664], [0.58917596374259418, 1.5141919749518173, -1.742979285515859, 2.2212871451907557, -2.3728597502891411], [-2.1854792436148793, 1.2704115116701509, -3.5210504563312295, -2.5225278742388313, 0.48400984500320376], [1.5022249811374566, 3.7240252724976308, -2.3046587086938422, -3.1465250919681012, 1.1149804764495732]]))
      res=arg0+arg1
      ref=Data(numarray.array([[-3.0790983809713257, -1.7623783431804578, 4.4144656624880643, 0.057684527717168699, 1.7151099597980819], [-1.8696513296529274, -0.94837577073431856, -1.8388535696264814, 2.1724460967355652, -5.6495981108408362], [-4.9894238438590373, 2.3117034963701588, 5.1239356398276721, 0.28235053036713254, 8.179091377370316], [7.3727165690639076, -7.2219434591539287, 4.9940331931448139, 8.4388408261449754, 7.0847632138761591]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[-2.5844512652795881, -2.9825020034066902, -4.2258457896262822, 2.1127404711040176, -1.0181876454653693], [4.5661465445049938, 1.4398924597017126, 2.3713899300167105, 4.4579748421938215, -4.6978964689256726], [-3.6308824105999991, -3.1534805508826738, -5.9787081830142004, 0.90360550331713219, 4.8974736737565365], [-1.6304162252649035, 4.5223170108831523, -0.16063153167970956, -3.6799074537510359, 0.24940432612355679]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_add_overloaded_taggedData_rank2_expandedData_rank0(self):
      arg0=Data(numarray.array([[3.3576395108597357, 0.079713165091237492, -2.6235923382139359, -2.4807258180332816, -4.8370100240939191], [-0.5398609461216104, 1.880841302085507, 3.1363957779485592, -2.9098856610703172, -4.6277814188713133], [-3.0338075061550054, 3.1245825256445681, -1.4594132431522064, -1.459261449706891, 1.1852708370783631], [4.9187832984000064, 3.9954625802675601, 0.87526688509385853, 0.077022043938886675, -3.827320331241737]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[0.90743867327562278, -0.37083095320971715, -4.4522087231605321, -0.082706136946488762, 0.53865736074087245], [-1.247002155185152, -1.8859527986403943, -1.4542237645525455, -4.2286317889507465, 3.9126875182879424], [3.3235710528580977, 2.8887880357286093, -2.7944378032785555, -1.8479879876981586, -0.59871595592754723], [3.9369222314456351, -0.13778647296883584, 4.2599185492697718, -2.096145057917572, -1.3163660993963342]]))
      arg1=Data(2.09640121669,self.functionspace)
      arg1.setTaggedValue(1,3.46900141878)
      arg1.expand()
      res=arg0+arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[5.4540407275500078, 2.1761143817815096, -0.52719112152366376, -0.3843246013430095, -2.740608807403647], [1.5565402705686617, 3.9772425187757792, 5.2327969946388313, -0.81348444438004508, -2.5313802021810412], [-0.93740628946473326, 5.2209837423348402, 0.63698797353806569, 0.63713976698338115, 3.2816720537686352], [7.0151845150902785, 6.0918637969578322, 2.9716681017841307, 2.1734232606291588, -1.7309191145514649]])+(1.-msk_ref)*numarray.array([[4.3764400920563293, 3.0981704655709894, -0.98320730437982551, 3.3862952818342178, 4.007658779521579], [2.2219992635955546, 1.5830486201403122, 2.014777654228161, -0.75963037017003998, 7.3816889370686489], [6.7925724716388043, 6.3577894545093159, 0.67456361550215105, 1.6210134310825479, 2.8702854628531593], [7.4059236502263417, 3.3312149458118707, 7.7289199680504783, 1.3728563608631346, 2.1526353193843724]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_add_overloaded_taggedData_rank2_expandedData_rank2(self):
      arg0=Data(numarray.array([[-4.1064984952518904, -2.5817913277651172, 1.070919986237393, -1.9117883202469499, 2.5967941151396978], [2.7118184129118648, 4.2744441954963239, 2.5256592712367727, 4.3910740288571368, -0.81749389358698643], [3.8318241411112126, -4.1533353343123878, -3.4061675616762876, -3.2448939320059655, -1.610901735482928], [3.2338835693575607, -0.31809141540401686, -4.7534320077399776, -1.2412351366339225, 0.6532662566750318]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[-0.40824575124749529, -1.1397163699023203, 4.3190911430696115, 4.6534260983827291, -4.3545886555451307], [-1.5915630931214961, 1.8930546282940952, 0.2688051310628321, -0.47170297113425885, -4.3407392420432416], [3.6309440228956191, -2.9357231326721989, -0.1783352163025862, -0.57435606905517922, -0.43100972576898045], [2.3487562956081289, -3.1045804777101704, 3.4505268527573953, -0.61355607556301095, 3.168156501374618]]))
      arg1=Data(numarray.array([[2.4607689719589088, -0.99212543029652789, -4.851919296706444, 1.0162795867954477, 4.466136877963427], [3.9784857577676753, -4.3613136494122271, 0.74369268877859085, 2.3950886713274544, -4.9923265580599585], [-0.56506422921060384, -3.0930047243706591, 2.5908424730857584, 4.5603160077698419, 2.423946547489491], [-0.93743775047951594, -0.3673394818316309, -2.7773248295488195, 1.798394956797825, 1.8256162509613905]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[-4.5533463764192907, -2.5680501286088098, -2.1595429923626455, -2.7191228050860241, -2.7088788101250261], [3.7258720533049789, 1.284927684183641, -1.1675681000724514, 0.69945198751573212, -4.9965536747752903], [-2.522137040044564, -3.5846235768258961, 4.2167459240643232, -3.2345633958568532, -3.1123818128654279], [-1.5173196493114371, 4.2228271484661324, -0.97650304976789037, 4.2862261537218433, 2.4227338308583484]]))
      arg1.expand()
      res=arg0+arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[-1.6457295232929816, -3.5739167580616451, -3.7809993104690509, -0.89550873345150217, 7.0629309931031248], [6.6903041706795401, -0.086869453915903172, 3.2693519600153635, 6.7861627001845912, -5.8098204516469449], [3.2667599119006088, -7.2463400586830469, -0.81532508859052921, 1.3154220757638764, 0.81304481200656298], [2.2964458188780448, -0.68543089723564776, -7.5307568372887967, 0.55715982016390253, 2.4788825076364223]])+(1.-msk_ref)*numarray.array([[-4.961592127666786, -3.70776649851113, 2.159548150706966, 1.934303293296705, -7.0634674656701568], [2.1343089601834828, 3.1779823124777362, -0.89876296900961927, 0.22774901638147327, -9.3372929168185319], [1.1088069828510552, -6.5203467094980949, 4.0384107077617371, -3.8089194649120324, -3.5433915386344084], [0.83143664629669178, 1.118246670755962, 2.474023802989505, 3.6726700781588324, 5.5908903322329664]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_add_overloaded_taggedData_rank3_float_rank0(self):
      arg0=Data(numarray.array([[[-1.2997878184398806, -1.2757776752263328], [-0.65735390665819349, -0.15144535875971332]], [[-1.8284156635868642, 3.9061628403768758], [1.0946776903405722, -1.4680134418913218]], [[-0.12619686336832103, -0.900530098453034], [-4.0957109781348606, -1.2811650332192626]], [[-3.3769583942459755, 1.1610757349701473], [-2.2121718663533327, 0.22865265651723199]], [[-3.9930636796669425, -2.3455436184607481], [-1.2328786986274709, -2.9643499384056069]], [[0.65263245468386089, 4.8724244596949013], [4.3333122178432699, -4.8825328594467896]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[-1.2720075505394899, -1.7304994593212895], [2.1606764296864265, 1.2437847274545586]], [[2.8635205231903837, -3.5966141698322729], [0.98503937600877123, 3.9749742799690289]], [[1.0901011372250924, -4.6495372464590021], [-3.1258189450265226, 2.8715761147792565]], [[4.417553202393071, -1.057695667510834], [4.6763256344107678, 1.3550277772429284]], [[1.2148338989634366, 1.671510325227513], [-1.8038190400917009, 3.0780814772040532]], [[1.6741066406160163, 3.9250458753936961], [0.82880372228847676, 1.213470068514809]]]))
      arg1=-1.55127288174
      res=arg0+arg1
      ref=Data(numarray.array([[[-2.8510607001811232, -2.8270505569675755], [-2.2086267883994362, -1.702718240500956]], [[-3.3796885453281069, 2.3548899586356331], [-0.45659519140067051, -3.0192863236325644]], [[-1.6774697451095637, -2.4518029801942767], [-5.6469838598761033, -2.8324379149605052]], [[-4.9282312759872182, -0.3901971467710954], [-3.7634447480945754, -1.3226202252240107]], [[-5.5443365614081852, -3.8968165002019908], [-2.7841515803687136, -4.5156228201468496]], [[-0.89864042705738179, 3.3211515779536587], [2.7820393361020272, -6.4338057411880323]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[-2.8232804322807326, -3.2817723410625321], [0.60940354794518381, -0.30748815428668408]], [[1.3122476414491411, -5.147887051573516], [-0.56623350573247144, 2.4237013982277862]], [[-0.46117174451615028, -6.2008101282002448], [-4.6770918267677652, 1.3203032330380138]], [[2.8662803206518284, -2.6089685492520767], [3.1250527526695251, -0.19624510449831423]], [[-0.33643898277780604, 0.1202374434862703], [-3.3550919218329436, 1.5268085954628106]], [[0.12283375887477366, 2.3737729936524534], [-0.72246915945276591, -0.33780281322643368]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_add_overloaded_taggedData_rank3_array_rank0(self):
      arg0=Data(numarray.array([[[2.4427920649917194, 2.80217002888058], [-4.3925867488504515, 3.5898352354801837]], [[0.81567382374813402, -4.8665560856352119], [-4.1561296525194589, 1.5306689879249333]], [[-1.9015553918776495, 1.1522594478647292], [3.7040048522405051, 3.8976929980497523]], [[-0.82497889582516226, -2.6736276545664159], [-1.2814412837197442, -3.035891431715779]], [[2.4520443258674876, -0.15207139022792493], [2.8256275406494966, 0.22466824419197806]], [[1.0590111629700436, 4.9794941950448806], [-3.2362531545901363, -4.7347310059144707]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[-0.63728168544871711, 4.2451706888736442], [-3.5110777047073647, 0.76629595651110183]], [[2.3489491111837886, 1.0215957806707827], [-3.459269509284153, -1.1952162872723617]], [[3.4315918746214429, -1.5013203994548352], [1.1160231840663934, 2.4567420615775895]], [[2.6513553422863412, -4.5382970231648443], [3.6512015372741828, 2.5341634160287088]], [[1.1959413388746052, 3.9743703993780688], [-3.4989354736232969, -2.8155121097950198]], [[2.8809398518858966, -4.6999882891913298], [-3.3336277982940343, -3.1929419534633263]]]))
      arg1=numarray.array(-1.63203584107)
      res=arg0+arg1
      ref=Data(numarray.array([[[0.8107562239205417, 1.1701341878094023], [-6.0246225899216288, 1.957799394409006]], [[-0.8163620173230437, -6.4985919267063892], [-5.7881654935906361, -0.10136685314624438]], [[-3.5335912329488273, -0.47977639320644849], [2.0719690111693274, 2.2656571569785746]], [[-2.45701473689634, -4.3056634956375941], [-2.9134771247909219, -4.6679272727869563]], [[0.82000848479630983, -1.7841072312991026], [1.1935916995783189, -1.4073675968791997]], [[-0.57302467810113411, 3.3474583539737028], [-4.868288995661314, -6.366766846985648]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[-2.2693175265198948, 2.6131348478024665], [-5.143113545778542, -0.86573988456007589]], [[0.71691327011261086, -0.610440060400395], [-5.0913053503553307, -2.8272521283435395]], [[1.7995560335502652, -3.1333562405260129], [-0.51601265700478427, 0.82470622050641174]], [[1.0193195012151635, -6.1703328642360216], [2.0191656962030051, 0.90212757495753104]], [[-0.43609450219657253, 2.3423345583068911], [-5.1309713146944746, -4.4475479508661975]], [[1.2489040108147189, -6.3320241302625071], [-4.9656636393652125, -4.8249777945345045]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_add_overloaded_taggedData_rank3_array_rank3(self):
      arg0=Data(numarray.array([[[0.31917310763958895, -3.5515451495799621], [-3.718971091595936, 1.5386433092095917]], [[2.3357357923776609, 4.5645794968830931], [2.1186400866631914, -0.51755282637387801]], [[-1.1071675171380324, 2.8068684530417958], [0.94189546205659624, 1.1910362805300565]], [[3.4468679467165924, 1.006131044842288], [-3.5462192516382252, -0.41561960499380568]], [[-2.0651391129052921, -3.8762786749366498], [0.44047838236076586, 4.0704313697496808]], [[3.0083402167960127, 4.3879696887221318], [1.9259203465021359, -4.9981755932897869]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[-0.77637009857172856, 0.94781626387318152], [4.4914773288916585, -1.8241112102418677]], [[4.9952740743939135, -0.47141930443296687], [1.1478215759652564, 1.9029209110237204]], [[2.8078916833095899, -2.0842274466071684], [1.1783007597484243, -1.1498187669628592]], [[-1.4196212623658075, -4.2820956196071265], [3.337409137923963, 1.6177366753773903]], [[2.7756440510587899, -3.382984690251555], [-4.1798305502190969, -2.6150479858595341]], [[3.5217312097872604, 4.1836069146853205], [-0.52039453105849365, 1.6466546455411146]]]))
      arg1=numarray.array([[[1.3469197096068548, 4.3476759743611808], [-2.9491253550464416, 0.1297037958924534]], [[-4.4172410740793886, 1.1568230611126129], [-1.8137906109459601, 4.8447805060491191]], [[2.3601993829840584, 3.7374735496880582], [4.528666004046606, -1.2474994690367525]], [[2.1247834581673173, -3.0630841688534929], [3.0851375677735771, -3.1251781301121651]], [[1.7649956230261266, 2.467546423340039], [2.8342627622713215, 0.48744502296701953]], [[-3.5213033924689761, 4.6465127879738155], [2.2018400068809747, -3.9708346903513734]]])
      res=arg0+arg1
      ref=Data(numarray.array([[[1.6660928172464438, 0.79613082478121866], [-6.6680964466423776, 1.6683471051020451]], [[-2.0815052817017277, 5.721402557995706], [0.30484947571723131, 4.3272276796752411]], [[1.253031865846026, 6.544342002729854], [5.4705614661032023, -0.05646318850669596]], [[5.5716514048839096, -2.0569531240112049], [-0.4610816838646481, -3.5407977351059707]], [[-0.3001434898791655, -1.4087322515966108], [3.2747411446320873, 4.5578763927167003]], [[-0.51296317567296335, 9.0344824766959473], [4.1277603533831106, -8.9690102836411612]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[0.57054961103512625, 5.2954922382343623], [1.5423519738452169, -1.6944074143494143]], [[0.57803300031452487, 0.68540375667964604], [-0.6659690349807037, 6.7477014170728395]], [[5.1680910662936483, 1.6532461030808898], [5.7069667637950303, -2.3973182359996117]], [[0.70516219580150974, -7.3451797884606194], [6.42254670569754, -1.5074414547347748]], [[4.5406396740849164, -0.91543826691151597], [-1.3455677879477754, -2.1276029628925146]], [[0.00042781731828434033, 8.830119702659136], [1.6814454758224811, -2.3241800448102587]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_add_overloaded_taggedData_rank3_constData_rank0(self):
      arg0=Data(numarray.array([[[-2.8210454777698404, -3.4217707115382625], [2.1171931397381574, 2.6950906491858699]], [[4.4063672073366149, -4.1150624825312665], [-0.20619185189900513, 3.6298688570246167]], [[-0.5123674843738435, -1.2876695824800102], [-3.4007350435993313, -1.7224417342800757]], [[-1.2022562263835326, -3.0205104949494963], [1.0804079954631698, 1.6798514610394264]], [[-3.9750150243167512, -3.6717642006321203], [-1.0074759955485932, -0.0027274770069656284]], [[-0.50402170304039373, -0.82562381306776178], [0.017163887092507046, 0.24298818691586277]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[0.52779485824058359, -4.9422201372698114], [-0.58929488689681797, -1.9977706922011604]], [[3.725646291123466, 0.66681409512529299], [1.4886149904608637, -1.0996317910519684]], [[3.3456204986696285, -1.5747030524647441], [0.10490442714460979, 4.2301071863566282]], [[4.0344462421951235, -1.4476621231960007], [3.1870510385249133, -3.2366025935356202]], [[4.0806287044527245, -1.6326612932604965], [-3.7889698613359912, -4.4314145203076825]], [[-2.5133034554522649, -3.4737658986451123], [2.0813742995032589, -4.8764170297129343]]]))
      arg1=Data(2.73803499699,self.functionspace)
      res=arg0+arg1
      ref=Data(numarray.array([[[-0.083010480779381446, -0.68373571454780357], [4.8552281367286163, 5.4331256461763289]], [[7.1444022043270738, -1.3770274855408076], [2.5318431450914538, 6.3679038540150756]], [[2.2256675126166154, 1.4503654145104488], [-0.66270004660887238, 1.0155932627103832]], [[1.5357787706069264, -0.28247549795903737], [3.8184429924536287, 4.4178864580298853]], [[-1.2369800273262923, -0.93372920364166134], [1.7305590014418657, 2.7353075199834933]], [[2.2340132939500652, 1.9124111839226972], [2.755198884082966, 2.9810231839063217]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[3.2658298552310425, -2.2041851402793524], [2.148740110093641, 0.7402643047892985]], [[6.4636812881139249, 3.4048490921157519], [4.2266499874513226, 1.6384032059384905]], [[6.0836554956600875, 1.1633319445257149], [2.8429394241350687, 6.9681421833470871]], [[6.7724812391855824, 1.2903728737944582], [5.9250860355153723, -0.49856759654516125]], [[6.8186637014431835, 1.1053737037299625], [-1.0509348643455323, -1.6933795233172235]], [[0.22473154153819408, -0.73573090165465338], [4.8194092964937179, -2.1383820327224754]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_add_overloaded_taggedData_rank3_constData_rank3(self):
      arg0=Data(numarray.array([[[-0.47096700853224327, -1.9522286296005733], [-1.0658047271834858, -3.4096964985517975]], [[0.96949518882925378, 1.6475269299751059], [-0.62090212768980102, 2.3702548578783418]], [[1.1612999891474374, 0.72067991486352589], [-2.1597864609168926, 3.7014615272065594]], [[-4.6650533012636757, -0.72559395941643068], [1.7091966692212166, -4.3919239471813709]], [[-0.59417459256082061, 1.0243089267292333], [-1.6973527467734693, 0.29098597486111366]], [[0.54197662904973853, -1.6867380691844036], [1.6548783566133993, 0.28778280143183199]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[-1.8748672080092965, 4.3617879277745804], [1.9081086899666211, -3.4258603348943284]], [[3.1528090589516733, -4.2885134261580218], [4.1159665261035343, 4.1530718731948149]], [[0.81108614452451544, -3.9712442140485669], [4.64723189223443, -2.7753268821800638]], [[-0.88602857435270721, 4.8742258990691809], [1.7280166668429864, 3.7191126262019782]], [[-2.5529612680445735, -4.3162019941407106], [-1.7065042564276132, 1.6649865182845183]], [[3.1076813152331368, -0.47645773433606298], [-4.834709528117072, -3.0732299970931196]]]))
      arg1=Data(numarray.array([[[0.38081686149340932, -0.12561401029626662], [-0.47267367652429826, 0.85723849547148046]], [[-4.2277778979663214, 0.29910480673373918], [4.059679115529768, -1.5899700933256398]], [[3.7286730317778058, 0.019079665982769001], [0.65683454127360541, -4.6363980749491844]], [[-2.0410322297090779, 1.00239030504056], [-2.8483396779950967, -2.9681138872934665]], [[-4.7675870663356834, -1.301532912831973], [-0.5015722378248082, 4.247977439406128]], [[4.5670566525874463, 0.91288837003611434], [-3.7080840440083698, 2.0202635489539622]]]),self.functionspace)
      res=arg0+arg1
      ref=Data(numarray.array([[[-0.09015014703883395, -2.0778426398968399], [-1.5384784037077841, -2.552458003080317]], [[-3.2582827091370676, 1.946631736708845], [3.438776987839967, 0.78028476455270201]], [[4.8899730209252432, 0.7397595808462949], [-1.5029519196432872, -0.93493654774262502]], [[-6.7060855309727536, 0.27679634562412936], [-1.1391430087738801, -7.3600378344748378]], [[-5.361761658896504, -0.27722398610273968], [-2.1989249845982775, 4.5389634142672417]], [[5.1090332816371848, -0.77384969914828927], [-2.0532056873949704, 2.3080463503857942]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[-1.4940503465158872, 4.2361739174783137], [1.4354350134423228, -2.5686218394228479]], [[-1.0749688390146481, -3.9894086194242826], [8.1756456416333023, 2.5631017798691751]], [[4.5397591763023213, -3.9521645480657979], [5.3040664335080354, -7.4117249571292483]], [[-2.9270608040617851, 5.8766162041097409], [-1.1203230111521103, 0.75099873890851176]], [[-7.3205483343802573, -5.6177349069726841], [-2.2080764942524214, 5.9129639576906463]], [[7.6747379678205832, 0.43643063570005136], [-8.5427935721254418, -1.0529664481391574]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_add_overloaded_taggedData_rank3_taggedData_rank0(self):
      arg0=Data(numarray.array([[[-2.77213374577719, 3.8175247853740437], [-4.3578721765707087, 3.0005484157113713]], [[-4.6386603451262696, -3.8563761317763499], [-1.4852241554726362, 0.38857004951119656]], [[2.9222332691377826, 1.6923051930588748], [0.30085877388243087, 2.1522074406521785]], [[-3.4464086791036941, -0.63552745300504654], [-4.8700187583105752, -4.5753181764286532]], [[0.65918512755418668, -0.38289184193305914], [-1.3338342635044609, -3.0717881242821266]], [[-0.39784573416263669, 2.7401013994849812], [1.6971148789255555, -1.1822905596970621]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[1.8943785565648668, -2.4747326244629173], [-0.23157835576301, -2.1863096808838058]], [[3.084915267753491, -3.8041276142005644], [-3.7077539164197248, -2.2281312895796801]], [[-3.5271540745576244, -0.30969872820660171], [4.3522864510595376, 1.3338960268806357]], [[0.65947508204485317, 1.9330005623286706], [-1.0132685477999583, -0.66208052775642923]], [[-4.7530716871765497, -0.76936405181359646], [-3.444003775274076, -4.4656040487057735]], [[0.383854720217645, -4.3199032543230329], [0.98492701990625786, 2.8611845972002117]]]))
      arg1=Data(1.08370007113,self.functionspace)
      arg1.setTaggedValue(1,-1.61546335612)
      res=arg0+arg1
      ref=Data(numarray.array([[[-1.6884336746471669, 4.9012248565040668], [-3.2741721054406856, 4.0842484868413944]], [[-3.5549602739962465, -2.7726760606463268], [-0.40152408434261311, 1.4722701206412196]], [[4.0059333402678057, 2.7760052641888979], [1.384558845012454, 3.2359075117822016]], [[-2.362708607973671, 0.44817261812497655], [-3.7863186871805521, -3.4916181052986301]], [[1.7428851986842098, 0.70080822919696395], [-0.25013419237443779, -1.9880880531521035]], [[0.6858543369673864, 3.8238014706150043], [2.7808149500555785, -0.098590488567039003]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[0.27891520044604867, -4.0901959805817354], [-1.8470417118818281, -3.8017730370026239]], [[1.4694519116346729, -5.4195909703193825], [-5.3232172725385425, -3.8435946456984982]], [[-5.1426174306764425, -1.9251620843254198], [2.7368230949407195, -0.2815673292381824]], [[-0.95598827407396492, 0.31753720620985249], [-2.6287319039187764, -2.2775438838752473]], [[-6.3685350432953678, -2.3848274079324145], [-5.0594671313928945, -6.0810674048245916]], [[-1.2316086359011731, -5.935366610441851], [-0.63053633621256022, 1.2457212410813936]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_add_overloaded_taggedData_rank3_taggedData_rank3(self):
      arg0=Data(numarray.array([[[3.0999704341790579, -2.1368850512830209], [-4.1614101762320432, -0.28811741134597924]], [[-3.036719027857866, 1.9451406831243423], [4.5539526177848426, -3.4072595450593415]], [[1.8259798226800594, -3.8017735745557646], [-4.7269662575423084, -4.1499666999210501]], [[1.7934785241410642, -4.6873007226520453], [2.3569452131701496, -2.9689095593087433]], [[-2.7425902126600654, -3.4952895783077773], [0.22564261641125327, 3.5916579754992668]], [[-4.5128373012219161, -2.2233808100865504], [-4.5956375124314857, -1.4657958530898529]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[2.1961737709455766, 4.5561492238051997], [1.3323004328555212, 2.5760714767847857]], [[3.7761790525397583, -3.2598311484246754], [-3.4866875984314727, -3.7474259334034321]], [[3.1210107314646081, 2.3762836994400951], [3.0966860416753264, -1.9773787652223018]], [[-1.0741225554644593, -1.3214351024114102], [-4.5798839978418195, 1.7205169612568403]], [[-1.3160891100365379, 4.8106693608424909], [2.0146140171185811, -0.37205085081784883]], [[-3.7863403761557723, 4.2179799987051538], [2.4737687017551107, -4.3943704465839319]]]))
      arg1=Data(numarray.array([[[3.7930028184928855, 0.74521751208453857], [4.4847095846025393, -1.7830762197802699]], [[-2.5057973764886055, -2.9563522299729317], [2.7529593815263258, 0.48292843407461739]], [[-3.0458552313152545, 4.2713334489390178], [-4.9127772710577853, 3.1175552007676774]], [[-0.2743949745927079, -3.3774907685127999], [-0.89006146507890449, -3.0975301132793378]], [[-0.82350018133067504, -4.2749920154045284], [-2.0284520439069418, 3.2413268838608218]], [[1.1253521343375859, 4.3890827253584401], [-3.3978743559562128, -3.5124546051556194]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[-2.3628721681361862, 3.8974683231077023], [0.76235716341701032, 2.5412583826555233]], [[-2.773278329515807, 3.4959019739944672], [2.6845044210467686, -4.9074297296405778]], [[-1.2434917807453951, -3.0537165935820787], [-1.5874774764708919, 0.3750357775252251]], [[-0.77245416605846717, -4.2340919743151426], [-0.017802906555869136, -2.1823946035944806]], [[3.6542664252022519, -1.1250262117533127], [-4.9641003807321615, -3.4471856385372202]], [[4.2428404046751709, 0.1351522794648643], [-0.82248359553912831, 2.5308594813065657]]]))
      res=arg0+arg1
      ref=Data(numarray.array([[[6.8929732526719434, -1.3916675391984823], [0.32329940837049609, -2.0711936311262491]], [[-5.5425164043464719, -1.0112115468485894], [7.3069119993111684, -2.9243311109847241]], [[-1.2198754086351951, 0.4695598743832532], [-9.6397435286000928, -1.0324114991533726]], [[1.5190835495483563, -8.0647914911648453], [1.4668837480912451, -6.0664396725880811]], [[-3.5660903939907405, -7.7702815937123058], [-1.8028094274956885, 6.8329848593600886]], [[-3.3874851668843302, 2.1657019152718897], [-7.9935118683876984, -4.9782504582454727]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[-0.16669839719060953, 8.453617546912902], [2.0946575962725316, 5.1173298594403089]], [[1.0029007230239513, 0.23607082556979186], [-0.80218317738470413, -8.6548556630440103]], [[1.8775189507192129, -0.6774328941419836], [1.5092085652044345, -1.6023429876970767]], [[-1.8465767215229265, -5.5555270767265528], [-4.5976869043976887, -0.46187764233764028]], [[2.3381773151657139, 3.6856431490891781], [-2.9494863636135804, -3.819236489355069]], [[0.45650002851939853, 4.3531322781700181], [1.6512851062159823, -1.8635109652773663]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_add_overloaded_taggedData_rank3_expandedData_rank0(self):
      arg0=Data(numarray.array([[[-1.3458184728197056, -4.1114751126701288], [-3.6045681069514659, 4.5806213213322273]], [[4.7239945126027472, 4.8588256785970394], [2.9504811980717776, -3.8539131451192468]], [[4.0728056138639204, 4.6876161203799995], [-4.8648382531748968, 2.60299615049259]], [[4.0499624144867443, -1.8705326646228979], [-4.5137216106750619, 3.612363945651154]], [[0.55893281778826065, 0.077924603172351503], [-1.4184375288520021, -1.3443492271526059]], [[-3.1393174376436352, 3.4724333511279522], [-1.5776418446925145, 2.4734391212870976]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[-1.8904372043887854, -4.5190956411614884], [4.5734968239898439, 1.0082590467907497]], [[3.8636750869329113, 3.9753055079778292], [3.6817316456165035, -2.2852953305529211]], [[-3.2057768482574458, -3.0762564976518258], [3.4829401591047322, 0.34248983143272849]], [[2.8151134382597567, -1.4178792410543095], [-2.8304335165614161, -4.7381849088962147]], [[-0.68136449721731918, 2.3501860858438821], [-3.2348502809261737, 4.5616086950336996]], [[0.33619385608899499, -2.6984211096433608], [-1.7513895835664259, 3.4613766908350989]]]))
      arg1=Data(-2.95834976602,self.functionspace)
      arg1.setTaggedValue(1,-1.20958161923)
      arg1.expand()
      res=arg0+arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[[-4.3041682388437552, -7.0698248786941784], [-6.5629178729755155, 1.6222715553081777]], [[1.7656447465786975, 1.9004759125729898], [-0.0078685679522720875, -6.8122629111432964]], [[1.1144558478398707, 1.7292663543559499], [-7.8231880191989465, -0.35535361553145961]], [[1.0916126484626947, -4.8288824306469476], [-7.4720713766991116, 0.6540141796271044]], [[-2.399416948235789, -2.8804251628516981], [-4.3767872948760518, -4.3026989931766551]], [[-6.0976672036676849, 0.51408358510390251], [-4.5359916107165645, -0.484910644736952]]])+(1.-msk_ref)*numarray.array([[[-3.1000188236147102, -5.7286772603874132], [3.3639152047639191, -0.20132257243517504]], [[2.6540934677069865, 2.7657238887519044], [2.4721500263905787, -3.4948769497788459]], [[-4.4153584674833706, -4.2858381168777502], [2.2733585398788074, -0.86709178779319629]], [[1.6055318190338319, -2.6274608602802343], [-4.0400151357873408, -5.9477665281221395]], [[-1.890946116443244, 1.1406044666179573], [-4.4444319001520984, 3.3520270758077748]], [[-0.87338776313692978, -3.9080027288692856], [-2.9609712027923507, 2.2517950716091741]]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_add_overloaded_taggedData_rank3_expandedData_rank3(self):
      arg0=Data(numarray.array([[[0.48926485996388269, -4.2191465750376889], [-4.744994863225438, 4.7046031899712801]], [[-2.8802960414294931, -2.4397652993130245], [-2.3767544016720201, 2.4899243773104516]], [[-0.69880406189109756, 4.9221904063963127], [-4.4442326066637925, -0.2423584515896291]], [[1.1873033499824093, -1.0359438602577908], [4.2099858094002389, -1.5188077642735309]], [[2.9762396657235834, 4.3565192054045294], [1.219861957512971, 1.4186261054086193]], [[4.3881045375767531, -3.9515704899784074], [1.1881691193434287, -2.9515833814121994]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[-2.9106692115097141, 1.1448509156703413], [-3.5747488270547203, 4.3467479963579088]], [[1.9209411370244993, -4.4198148135632334], [-2.5439015312858881, 1.3155452706180606]], [[4.882640318602391, 0.34062975670052342], [0.2675381340109908, 4.2282940767774946]], [[4.3446095982723918, 1.2060888712992277], [-2.8602079679237544, -4.5554211184908189]], [[4.5197831670681712, -4.2971679069891131], [3.6540620189148285, 4.6439542912634053]], [[1.6231944870566544, 4.6979308382991469], [-0.19481446900334376, 1.9492126729664037]]]))
      arg1=Data(numarray.array([[[2.245745493494093, -2.0932114202393137], [3.5219400155970852, -1.0913747330679024]], [[1.2517416754427471, 2.7925988721213093], [-3.0719773913271564, -4.9990692573699933]], [[-1.9652009035875997, -3.1559304476140495], [0.02098892529537455, -0.25642222230972767]], [[0.55579717516428229, 4.2674028872779584], [4.9489668916843392, 1.7091559277184496]], [[-1.0997466757887455, 3.7830842865513592], [3.8155570798943668, -0.37081868296405851]], [[-0.86365585363381214, -3.3797412393172843], [-3.2312119408856352, 3.3812609513235756]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[2.4170980236834101, -1.4418678544662491], [3.2265265882639937, 3.7842533566507583]], [[-1.8863396046980343, -3.6268725404156674], [-1.1549271336130018, 0.44272481604552549]], [[-0.33548547307548304, -0.10639012269721082], [-0.63541902485729196, 1.1408369737290194]], [[-1.9207718677721619, -1.1024972053357009], [-3.0868443868761175, 2.3061615690186024]], [[-3.564701225801775, -1.2916378277150353], [-1.5425736650453423, 3.879975564160695]], [[-0.74759224895991316, 2.2399027760878099], [4.7240453344637139, -2.0896612148746141]]]))
      arg1.expand()
      res=arg0+arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[[2.7350103534579757, -6.3123579952770026], [-1.2230548476283527, 3.6132284569033777]], [[-1.6285543659867461, 0.35283357280828476], [-5.4487317929991761, -2.5091448800595417]], [[-2.6640049654786973, 1.7662599587822632], [-4.4232436813684179, -0.49878067389935676]], [[1.7431005251466916, 3.2314590270201675], [9.1589527010845782, 0.19034816344491867]], [[1.8764929899348379, 8.1396034919558886], [5.0354190374073378, 1.0478074224445608]], [[3.524448683942941, -7.3313117292956917], [-2.0430428215422065, 0.42967756991137618]]])+(1.-msk_ref)*numarray.array([[[-0.49357118782630405, -0.29701693879590785], [-0.34822223879072656, 8.1310013530086671]], [[0.034601532326465012, -8.0466873539788999], [-3.69882866489889, 1.7582700866635861]], [[4.547154845526908, 0.2342396340033126], [-0.36788089084630116, 5.369131050506514]], [[2.4238377305002299, 0.10359166596352676], [-5.9470523547998724, -2.2492595494722165]], [[0.95508194126639623, -5.5888057347041489], [2.1114883538694862, 8.5239298554241003]], [[0.8756022380967412, 6.9378336143869568], [4.5292308654603701, -0.14044854190821043]]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_add_overloaded_taggedData_rank4_float_rank0(self):
      arg0=Data(numarray.array([[[[-2.4529918809417106, -4.2922716314173073, -4.7156912115011096, -4.9665561982246746], [-1.4801764375397228, -4.4380184594221186, -0.77360067331613269, -0.62622465894651036], [-1.0383450397120608, 4.3040588789471954, 1.8106404043363975, 3.3893757878301294]], [[-1.992289067921309, -3.1704484515550044, 2.7872361600501936, -4.3322042469760804], [3.3604551208120839, 4.5663459688482622, -1.1238907281506529, 3.2787783020231913], [0.37186673546918136, -2.7641073556156828, -2.9035982677677898, 3.4758479506814339]]], [[[-3.6715006002612363, -0.73535868535250515, -0.27862633060145559, -1.0849832854789812], [-1.7022039443705039, 2.6060508744937936, -3.6536519425931813, -4.4081965675132473], [0.25471824064491599, -4.8782858092956758, 2.2337084769842255, 1.7096031580788216]], [[-2.2800898096116939, 3.658070109038098, -0.64746211000437448, -2.5044787022167636], [-2.6363559628733837, 0.36216711358316278, -4.784316045543763, -3.0624579975364155], [2.287328835683617, 3.4578710762326086, 4.5781909364892712, -0.58253946841442605]]], [[[2.4432878816470822, 4.022871516449646, -1.245913498225375, -3.9051739614761392], [1.7066164592051036, -3.1983290935319211, -3.6728950000164931, -2.2473670296312633], [1.8958706148145694, -1.0284070864612218, -3.8956053902818399, 0.018998278733047158]], [[-0.26980316811500504, 2.8297007469536295, 1.094475544130554, -3.981764683657488], [-3.500356503088037, 4.171864849032481, -2.9012065649260022, -2.7283607393157738], [0.60051307561372358, -2.0886052678452236, 1.2447330012264244, 3.0604213102691027]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[4.6721490384002102, 2.7851789029326524, 4.5054527711787866, 3.9375455613431978], [2.9257854596657591, 0.82402496914787804, 2.7017427533937264, 0.41822359843216272], [-3.7659685225025186, -2.6058944363342693, 2.1359178881116865, 3.1808871103282819]], [[0.45581546580998999, -0.10662460000334306, -3.4919407799771562, -0.17355947876977584], [0.03952563899673045, -2.6072367334090685, -2.5370380281116733, -3.8483713943551812], [-4.010882400107123, -3.4482767288174623, -1.1815070692881005, 4.7423057544944598]]], [[[-3.3134550400559935, 2.1408457597292552, -3.4582025350264045, -4.5821067638126909], [-2.8683575747100418, 2.2751475609698915, 1.7742294946693047, 4.2185654465528852], [3.0758297909260701, 4.6772884924460438, -3.9614574660248749, -0.5111517395111056]], [[0.95962586866565402, 0.00843194395573299, 2.5356218891094695, 3.7087356801306459], [2.3738352824593445, -4.2325312189114284, -0.014371828530438613, -4.907829300190504], [-0.55877429015129731, -3.949423986219569, 3.843079130599067, 1.3423867592639551]]], [[[0.77407506136274673, 3.8197454797177119, -4.1508734783832555, 3.5956050476759103], [4.4484484321893323, -0.56814010775082302, -1.2446933884228697, -0.70841810762899993], [4.8091159200619913, -3.5828505478333539, -3.4733836136848772, 3.2289915076176143]], [[-3.8201817000007141, 3.5381725656161844, -2.2292796342354624, 4.0231422110513453], [-4.1117126981322283, -0.13568148027115701, -2.3319889682031869, -1.5673291164601331], [4.304323986562391, 0.27776805927176884, 1.3068734997189786, -4.9815181925099932]]]]))
      arg1=3.50847335696
      res=arg0+arg1
      ref=Data(numarray.array([[[[1.0554814760232061, -0.78379827445239059, -1.2072178545361929, -1.458082841259758], [2.0282969194251939, -0.9295451024572019, 2.734872683648784, 2.8822486980184063], [2.4701283172528559, 7.8125322359121121, 5.3191137613013142, 6.8978491447950461]], [[1.5161842890436077, 0.33802490540991226, 6.2957095170151103, -0.82373089001116373], [6.8689284777770006, 8.0748193258131788, 2.3845826288142637, 6.787251658988108], [3.8803400924340981, 0.74436600134923392, 0.60487508919712685, 6.9843213076463506]]], [[[-0.16302724329631957, 2.7731146716124115, 3.2298470263634611, 2.4234900714859355], [1.8062694125944128, 6.1145242314587103, -0.14517858562826458, -0.8997232105483306], [3.7631915976098327, -1.3698124523307591, 5.7421818339491422, 5.2180765150437383]], [[1.2283835473532227, 7.1665434660030147, 2.8610112469605422, 1.0039946547481531], [0.87211739409153299, 3.8706404705480795, -1.2758426885788463, 0.44601535942850123], [5.7958021926485337, 6.9663444331975253, 8.0866642934541879, 2.9259338885504906]]], [[[5.9517612386119989, 7.5313448734145627, 2.2625598587395417, -0.39670060451122247], [5.2150898161700203, 0.31014426343299561, -0.16442164305157636, 1.2611063273336534], [5.4043439717794861, 2.4800662705036949, -0.38713203331692325, 3.5274716356979638]], [[3.2386701888499116, 6.3381741039185462, 4.6029489010954707, -0.47329132669257135], [0.0081168538768796594, 7.6803382059973977, 0.60726679203891454, 0.78011261764914286], [4.1089864325786403, 1.4198680891196931, 4.7532063581913411, 6.5688946672340194]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[8.1806223953651269, 6.293652259897569, 8.0139261281437033, 7.4460189183081145], [6.4342588166306758, 4.3324983261127947, 6.2102161103586431, 3.9266969553970794], [-0.25749516553760188, 0.90257892063064737, 5.6443912450766032, 6.6893604672931986]], [[3.9642888227749067, 3.4018487569615736, 0.01653257698776045, 3.3349138781951408], [3.5479989959616471, 0.90123662355584822, 0.97143532885324335, -0.33989803739026447], [-0.50240904314220636, 0.060196628147454412, 2.3269662876768162, 8.2507791114593765]]], [[[0.19501831690892324, 5.6493191166941719, 0.050270821938512178, -1.0736334068477742], [0.64011578225487487, 5.7836209179348081, 5.2827028516342214, 7.7270388035178019], [6.5843031478909868, 8.1857618494109605, -0.45298410905995823, 2.9973216174538111]], [[4.4680992256305707, 3.5169053009206497, 6.0440952460743862, 7.2172090370955626], [5.8823086394242612, -0.72405786194651167, 3.4941015284344781, -1.3993559432255873], [2.9496990668136194, -0.44095062925465234, 7.3515524875639837, 4.8508601162288718]]], [[[4.2825484183276634, 7.3282188366826286, -0.6424001214183388, 7.104078404640827], [7.956921789154249, 2.9403332492140937, 2.263779968542047, 2.8000552493359168], [8.317589277026908, -0.074377190868437193, 0.035089743280039443, 6.737464864582531]], [[-0.31170834303579742, 7.0466459225811011, 1.2791937227294543, 7.531615568016262], [-0.60323934116731159, 3.3727918766937597, 1.1764843887617298, 1.9411442405047836], [7.8127973435273077, 3.7862414162366855, 4.8153468566838953, -1.4730448355450765]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_add_overloaded_taggedData_rank4_array_rank0(self):
      arg0=Data(numarray.array([[[[-0.46207075677734633, 4.6698653897341345, -3.1705589727730543, -1.3306190935272397], [3.5035371433589511, 2.4668772871461178, -3.2183351553104655, 2.4890776154597125], [2.1590844561338329, -2.3293778519085384, 4.1107294137463697, 1.3689584764976672]], [[3.1136045839093001, -4.9390107738434175, 0.013156994502951491, 2.6683561592866081], [-3.6392387533662895, 0.96405076390185052, -4.0374447373167568, 0.85110065183239048], [-3.6953433190555374, -2.9571838686603646, -4.2771489403203136, -2.3472302939394138]]], [[[2.3131401311130206, 0.44033159636800612, -1.4214592260669754, 1.114858411747722], [-0.044916961278937073, -4.451651772019015, 4.8141790791054717, 1.4473497409062386], [-4.435470371835283, 1.9393919139025648, -1.2373670614327348, -3.6513529895403627]], [[2.9069249098655545, 3.6546254402892124, 0.38527334298935401, 3.1234745684507317], [-4.6742846659384698, 4.5579138997776614, -1.0760665717102116, 3.4502674193106646], [1.4291704303525998, -0.12465720470982067, -1.0631942635238523, -4.7981723992255096]]], [[[1.5733747686267368, 2.317117655927305, 0.57472357542811991, 4.6326736619427944], [0.66382238367749657, -0.23995158565173469, 3.022448130845655, 4.9063918202723205], [3.9445456317199419, -1.5278174221675034, -1.870380291826248, -4.8277303827291993]], [[-4.8743895138728996, -2.3430657752600559, 3.800457954477455, 1.6419712899899332], [-4.576480758273437, 2.2299074197499262, -3.1565674373163812, -3.9162904236934573], [1.4877734138214569, -2.3975739501472946, 1.1375942963439769, 2.010404696238508]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[0.1323050310828231, -2.3887492563951565, -4.1234158314752758, 3.4104899693912785], [-2.572982840387307, 4.4651205636485596, 4.2218665940516864, 3.2040976743486311], [0.90688483880528814, 2.2299154059973088, -0.70335687253032386, -4.4369420060041502]], [[1.3649300492405523, -1.1956713341316982, -2.1701465126700525, 2.7698837035899029], [-1.9527049619445003, -2.5229900614459408, 0.35085346730302902, 2.352886195746084], [4.7003680223167628, -4.3746965447565778, -2.8198916811003825, -1.3116299449720472]]], [[[4.9659903663750278, 4.4242662141239499, -2.1659956690494209, 1.7686638008157027], [-4.1257089059625311, -2.2352834732352802, -0.25112828864904735, -0.48431649850257763], [0.92535523162620059, -3.6070786310331346, 1.1980747042357649, 1.1519098920254844]], [[-3.6070792364213142, -3.4536627959899024, 2.1688256985319923, 4.0071052514082393], [4.8788837876475082, 0.30087592860476953, -0.64959234172727598, -1.5420909024547114], [1.6655700945560952, -3.6933106001531968, -0.50295250260945856, -0.34152943299684857]]], [[[3.4990381386111498, -2.7688576121566513, -1.0294055868305794, 4.9797921269252718], [1.3004419357745869, -1.4492529012743969, -4.0682227606453143, 4.4694454868429307], [-4.6619778264757317, 4.0501370985963661, 1.920306184056467, 2.3137686558171211]], [[1.891053851662754, -4.4134156919544871, 1.8589617637210596, -0.8652874428028916], [-1.3853542382362183, -1.4243866321640541, -4.7588659316730855, -3.4574488800334988], [1.3577642152790883, 0.70851867665501089, -0.81689674898252029, 2.5665335545746277]]]]))
      arg1=numarray.array(2.48395797545)
      res=arg0+arg1
      ref=Data(numarray.array([[[[2.0218872186705195, 7.1538233651820002, -0.68660099732518853, 1.1533388819206261], [5.9874951188068168, 4.9508352625939835, -0.73437717986259976, 4.9730355909075783], [4.6430424315816987, 0.15458012353932737, 6.5946873891942355, 3.852916451945533]], [[5.5975625593571658, -2.4550527983955517, 2.4971149699508173, 5.1523141347344739], [-1.1552807779184238, 3.4480087393497163, -1.553486761868891, 3.3350586272802563], [-1.2113853436076716, -0.47322589321249886, -1.7931909648724478, 0.13672768150845194]]], [[[4.7970981065608864, 2.9242895718158719, 1.0624987493808904, 3.5988163871955878], [2.4390410141689287, -1.9676937965711492, 7.2981370545533375, 3.9313077163541044], [-1.9515123963874172, 4.4233498893504306, 1.246590914015131, -1.1673950140924969]], [[5.3908828853134203, 6.1385834157370782, 2.8692313184372198, 5.6074325438985975], [-2.190326690490604, 7.0418718752255272, 1.4078914037376542, 5.9342253947585304], [3.9131284058004656, 2.3593007707380451, 1.4207637119240135, -2.3142144237776439]]], [[[4.0573327440746025, 4.8010756313751708, 3.0586815508759857, 7.1166316373906602], [3.1477803591253624, 2.2440063897961311, 5.5064061062935208, 7.3903497957201862], [6.4285036071678077, 0.9561405532803624, 0.6135776836216178, -2.3437724072813335]], [[-2.3904315384250339, 0.1408922001878099, 6.2844159299253208, 4.125929265437799], [-2.0925227828255712, 4.713865395197792, -0.67260946186851545, -1.4323324482455915], [3.9717313892693227, 0.08638402530057121, 3.6215522717918427, 4.4943626716863738]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[2.6162630065306889, 0.095208719052709334, -1.63945785602741, 5.8944479448391442], [-0.089024864939441173, 6.9490785390964254, 6.7058245694995522, 5.6880556497964969], [3.3908428142531539, 4.7138733814451745, 1.7806011029175419, -1.9529840305562844]], [[3.8488880246884181, 1.2882866413161675, 0.31381146277781324, 5.2538416790377687], [0.53125301350336551, -0.039032085998075061, 2.8348114427508948, 4.8368441711939498], [7.1843259977646285, -1.890738569308712, -0.33593370565251668, 1.1723280304758186]]], [[[7.4499483418228936, 6.9082241895718157, 0.31796230639844492, 4.2526217762635685], [-1.6417509305146654, 0.24867450221258558, 2.2328296867988184, 1.9996414769452882], [3.4093132070740664, -1.1231206555852689, 3.6820326796836307, 3.6358678674733502]], [[-1.1231212609734484, -0.96970482054203666, 4.652783673979858, 6.491063226856105], [7.362841763095374, 2.7848339040526353, 1.8343656337205898, 0.94186707299315442], [4.149528070003961, -1.209352624705331, 1.9810054728384072, 2.1424285424510172]]], [[[5.9829961140590155, -0.28489963670878549, 1.4545523886172864, 7.4637501023731376], [3.7843999112224527, 1.0347050741734689, -1.5842647851974485, 6.9534034622907965], [-2.1780198510278659, 6.5340950740442318, 4.4042641595043328, 4.7977266312649869]], [[4.3750118271106198, -1.9294577165066213, 4.3429197391689254, 1.6186705326449742], [1.0986037372116475, 1.0595713432838116, -2.2749079562252197, -0.97349090458563303], [3.8417221907269541, 3.1924766521028767, 1.6670612264653455, 5.0504915300224935]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_add_overloaded_taggedData_rank4_array_rank4(self):
      arg0=Data(numarray.array([[[[-1.3180258853817617, 4.4274973030499467, 4.0523231102533703, 4.5902748815255112], [2.1559601758310007, -2.1828151723093079, 4.2265015869584097, 3.9950326499948918], [-1.2098085673782943, -2.7545715510095281, 4.8769522388341144, 0.26866852438456768]], [[-1.9806955320994888, 1.8104279894085531, -0.39762853496196726, 2.7921460326069667], [2.791864700599584, -4.4790099485221653, -2.705958561080072, -4.1679386355484649], [-2.8832978276147969, 4.1507637863510141, -2.9960018011735623, 2.9663193959875631]]], [[[-2.3654690639206741, 1.5336828414544188, 1.4610867306234159, 3.1697086286660188], [-2.8754818130199302, -4.4793581441908126, 4.1501045050252294, 1.7581685285933668], [-4.7498732939497685, -1.1660483079158368, 2.7184637504847728, -2.60626176003665]], [[2.0854990135659026, -2.906199352162655, 2.8509095473230932, -0.33059775891538834], [-2.6203853002349851, 1.1101383438611876, -0.4054203516122632, -0.22934222218146694], [-1.0878665949471156, -0.48215791106113048, 1.0585964834322699, -3.2243478438221693]]], [[[-3.9017884876610931, 1.1927128733419838, 2.1381629017975481, 4.187422311217615], [-1.7490225713627128, -0.7703793421173728, 2.0470983204875548, -1.554077093040005], [2.1736029049098846, -2.8956924955257279, 2.4640200389111904, -4.2945812950549982]], [[-0.23745342950770265, -1.6232273445635901, 4.3637065624608304, 0.85663493697235449], [1.632853526390484, -0.66589756896742536, -3.4840468291056914, -1.5510506940949309], [1.2208727796032628, 0.22912127300815932, 4.9226786747843612, 2.3837199295321829]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[0.88800253969785192, -0.75602202958885911, -0.98413088327408538, 2.3486894488999965], [-1.4865622734515305, 1.2567889146021924, -0.74875541021503533, 3.9547645375504015], [-0.41531751862917776, 4.6063387918737035, -3.9459156135098263, 3.7517614649521907]], [[3.2918275053288735, -1.3406642233528334, -2.90654914373222, -1.3209276396385903], [-2.3761143172462318, 2.1558923180501104, 1.7421185094873328, 2.1811660461082338], [4.5252125974381592, -2.0954459053454046, -0.11141200183876787, 1.396008486419646]]], [[[1.4732832742742099, 1.3687222645618764, 0.083180258143978669, -4.0800865581150534], [2.2613064282935085, 3.2247006313790223, -0.98542178825565685, -2.7900876556151211], [-1.0367512751049732, 0.43906807336941611, 4.7178351127500235, 4.6686990552993546]], [[2.5584010191005735, 4.6311480136461149, -2.1303736175234178, -3.2543007731999971], [2.4642783316561587, -3.5194898118736861, -4.2343923086155133, -2.0945115445853757], [-0.13663371776906708, 3.8528597358706147, -4.9668675228842218, -0.75385476335294133]]], [[[0.64449554956748045, 2.0873257313963904, -2.6127641559793879, -4.0421429294492874], [-1.9396654022058355, -3.0761997221929374, 0.84460482892300437, -4.493799600039182], [-0.72284626269142027, -1.2372897298350916, -0.3165271055821206, 0.22216611976427991]], [[-4.4542080408414044, -0.79651545313163652, -2.724109186694208, 4.1276997067585182], [-1.7241314667264795, -4.2071385857066579, -1.9030902669143543, -1.9742005521782091], [-4.7097199987993381, 0.001126719615230698, -3.0072719422045688, 2.9449798238007672]]]]))
      arg1=numarray.array([[[[-1.9608570956622606, -3.5411557923846679, 0.39301719021199233, 2.631230653607318], [1.1789054291980747, 1.9648532444904934, -4.68209210361338, -2.5068800807653426], [-3.4739560367044477, 2.4719147246416533, 2.5713888809938421, -2.9696461625781034]], [[3.8736125229044021, -2.6570755917937969, 2.4921199136826324, 1.4189857980991096], [2.6300613213212474, -3.6935995210496984, 4.7292759377028215, 0.86833508694746619], [-3.9095941791871578, -4.175616887608494, 3.1816330655045242, -4.623156350177994]]], [[[-3.5597318492173269, -3.9506928145363074, -0.9458912023240309, -4.9143171580870799], [2.0430972756525323, -2.3649235144525038, 2.4648104738749863, -1.3209476687035506], [-2.8041746784465049, 3.5821550752059608, -3.4331029006745686, -2.8733245481895975]], [[-1.1126248013006035, 1.19628059030667, 0.26348265602038534, 2.843833223154669], [1.7584561001326158, -0.7340180688736524, -3.0154533119064597, 3.414358089921528], [0.6750242275291285, -2.4881380127867314, -3.5043477509096399, 1.0914548651152316]]], [[[0.8266769272626453, 0.58419544360662634, -0.11819603883991192, 3.2008931914812937], [-4.1958152320495898, 3.8351978206627315, -0.53155547097190059, -2.9807833581877761], [3.792642706701324, 1.5079892540497841, 4.3890473712025795, 1.438724529923503]], [[-1.7447786535758461, 0.30380450784928215, 1.3103861669415586, -3.8299777136976862], [-0.7192862782938878, 4.0467801021266396, 4.2821659270938923, -4.6144001703290023], [-1.7083028714147472, -4.7709853606005641, -2.3741017143412946, -3.8057883888956399]]]])
      res=arg0+arg1
      ref=Data(numarray.array([[[[-3.2788829810440223, 0.88634151066527878, 4.4453403004653627, 7.2215055351328292], [3.3348656050290755, -0.21796192781881452, -0.4555905166549703, 1.4881525692295492], [-4.6837646040827421, -0.28265682636787481, 7.4483411198279565, -2.7009776381935358]], [[1.8929169908049133, -0.84664760238524384, 2.0944913787206652, 4.2111318307060763], [5.4219260219208314, -8.1726094695718636, 2.0233173766227495, -3.2996035486009987], [-6.7928920068019547, -0.02485310125747997, 0.18563126433096189, -1.6568369541904309]]], [[[-5.925200913138001, -2.4170099730818886, 0.51519552829938497, -1.7446085294210611], [-0.83238453736739793, -6.8442816586433164, 6.6149149789002157, 0.43722085988981618], [-7.5540479723962735, 2.416106767290124, -0.71463915018979574, -5.4795863082262475]], [[0.97287421226529913, -1.709918761855985, 3.1143922033434785, 2.5132354642392807], [-0.86192920010236929, 0.3761202749875352, -3.4208736635187229, 3.1850158677400611], [-0.41284236741798708, -2.9702959238478619, -2.44575126747737, -2.1328929787069377]]], [[[-3.0751115603984478, 1.7769083169486102, 2.0199668629576362, 7.3883155026989087], [-5.9448378034123026, 3.0648184785453587, 1.5155428495156542, -4.5348604512277806], [5.9662456116112086, -1.3877032414759438, 6.8530674101137699, -2.8558567651314952]], [[-1.9822320830835487, -1.3194228367143079, 5.6740927294023891, -2.9733427767253318], [0.91356724809659617, 3.3808825331592143, 0.79811909798820091, -6.1654508644239332], [-0.48743009181148444, -4.5418640875924048, 2.5485769604430666, -1.4220684593634569]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[-1.0728545559644087, -4.297177821973527, -0.59111369306209305, 4.9799201025073145], [-0.30765684425345574, 3.2216421590926858, -5.4308475138284154, 1.4478844567850588], [-3.8892735553336255, 7.0782535165153568, -1.3745267325159842, 0.78211530237408722]], [[7.1654400282332755, -3.9977398151466303, -0.41442923004958754, 0.098058158460519351], [0.25394700407501558, -1.537707202999588, 6.4713944471901543, 3.0495011330557], [0.61561841825100139, -6.2710627929538987, 3.0702210636657563, -3.2271478637583479]]], [[[-2.086448574943117, -2.581970549974431, -0.86271094418005223, -8.9944037162021324], [4.3044037039460408, 0.85977711692651848, 1.4793886856193295, -4.1110353243186717], [-3.8409259535514781, 4.0212231485753769, 1.284732212075455, 1.7953745071097571]], [[1.44577621779997, 5.8274286039527849, -1.8668909615030325, -0.41046755004532809], [4.2227344317887745, -4.253507880747339, -7.249845620521973, 1.3198465453361523], [0.53839050976006142, 1.3647217230838833, -8.4712152737938613, 0.33760010176229027]]], [[[1.4711724768301258, 2.6715211750030168, -2.7309601948192999, -0.84124973796799374], [-6.1354806342554253, 0.75899809846979416, 0.31304935795110378, -7.4745829582269581], [3.0697964440099037, 0.27069952421469257, 4.0725202656204589, 1.6608906496877829]], [[-6.1989866944172505, -0.49271094528235437, -1.4137230197526494, 0.29772199306083191], [-2.4434177450203673, -0.16035848358001825, 2.379075660179538, -6.588600722507211], [-6.4180228702140854, -4.7698586409853334, -5.381373656545863, -0.86080856509487269]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_add_overloaded_taggedData_rank4_constData_rank0(self):
      arg0=Data(numarray.array([[[[-2.5708709288175391, 0.53581714653008561, 1.5360357521615526, 3.3951069767450566], [1.631732366076589, -0.5427283165247907, -4.1885665290237508, -1.7897530714409191], [-3.8687105480477681, -0.39103270374183552, 4.9773978525962015, -1.5678906966200081]], [[-1.0005683385010009, -2.9043747824697563, 0.52026402593778887, 2.3711689398047229], [2.7147649908653868, 4.3288849229920672, 3.2431311550744564, -1.1132028016748805], [3.9299119784057766, 0.62724954538448063, -2.7068757404196955, 1.181410703546721]]], [[[-0.34737446837366726, 4.987848985374665, 3.1973650222296222, -2.6286186197645698], [4.7697186939677731, -1.9224177923759544, -4.0526602572447192, -4.3571373540293141], [3.4866059675370842, -2.6489651106670706, -1.8717782337675626, 1.546373157153587]], [[3.5839002968406248, -1.384604409647574, 0.77445258028805863, 0.38130810244305291], [-3.6940285594614233, 4.8144411720619509, 2.0499133176164372, 2.0909884928187594], [-1.4769885010131603, 4.718520386152635, -4.9705846174160007, -4.8886301302242448]]], [[[-0.0510002896129782, 0.014536311769425048, -2.311437231120177, 0.57574480584209553], [-1.3007980134702999, 0.7917745830722307, -2.6391625354871695, -0.33085679953840774], [-3.9418084807010634, -3.684162035082533, 0.2377992710428849, -0.53538299867439143]], [[0.28649909817135022, -3.8770359804364016, -2.8530785371915082, 0.78157992719722014], [-0.19928069036189822, -2.4240318308100495, -0.70055294248943945, 0.003486010919440119], [3.959215432772929, 3.1979221207054849, -4.0911992648566553, -0.6462422071730316]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[0.41693261177274721, -4.9020932423048089, 4.2088530824741905, 0.99953568795707426], [-4.2440395293604496, -3.4955448152614474, 2.0227037247513842, 2.8364324320081042], [2.692259108861923, 4.925400273320248, 0.70036207432236708, 2.1012385837662118]], [[1.8298810984965028, -4.5775869134782159, -0.38144270148458759, 0.35079862122661787], [-2.1940977888345534, 0.0015419838471322223, 1.0896534350975928, -2.3553944644521652], [2.1790715455306309, 0.89089931264249689, -1.6492115072152833, -3.645084483417115]]], [[[-2.3704484397063541, 1.4384674683145491, -2.3336729429871719, -1.4310707759225281], [2.9384377821646845, 1.8515293306597371, -1.3377054510628508, 4.7857793959119128], [1.2037955735438288, 3.652868648715927, -2.7501542031542914, 2.2786571327611682]], [[3.6883495085690114, -4.9232370846676172, -0.67363766625767507, -4.997957770198532], [3.6557645359812092, 3.6053506753372471, 1.4639322237519998, 3.9081063252140531], [-1.4158862611806509, 2.5871057245553084, 0.37498808076538381, -4.0225794056588615]]], [[[4.0345672933604675, -3.6800976851511003, -4.6100225072463523, 3.6199177196679972], [-0.27709658645554835, -0.86922799724775857, 2.6875848512691727, -0.32499406365029593], [-2.90499641344377, -1.4629445128154206, -4.9827409146946033, 0.91172398342859573]], [[1.5300744301386313, 2.9533568198190894, -2.7451811965834061, -0.081332757254997112], [-0.81834027054480174, -3.1786285020802172, 2.0595238370511204, -3.1723591443001355], [-0.27708852552600671, -3.4361857808835197, -3.3974132118757194, 4.2106883319056578]]]]))
      arg1=Data(-4.97117242623,self.functionspace)
      res=arg0+arg1
      ref=Data(numarray.array([[[[-7.5420433550515629, -4.4353552797039386, -3.4351366740724716, -1.5760654494889677], [-3.3394400601574352, -5.5139007427588149, -9.1597389552577759, -6.7609254976749433], [-8.8398829742817924, -5.3622051299758597, 0.0062254263621772665, -6.5390631228540324]], [[-5.9717407647350251, -7.8755472087037806, -4.4509084002962354, -2.6000034864293013], [-2.2564074353686374, -0.64228750324195705, -1.7280412711595678, -6.0843752279089047], [-1.0412604478282477, -4.3439228808495436, -7.6780481666537197, -3.7897617226873033]]], [[[-5.3185468946076915, 0.016676559140640812, -1.7738074040044021, -7.599791045998594], [-0.20145373226625107, -6.8935902186099787, -9.0238326834787443, -9.3283097802633392], [-1.48456645869694, -7.6201375369010949, -6.8429506600015868, -3.4247992690804372]], [[-1.3872721293933994, -6.3557768358815983, -4.1967198459459656, -4.5898643237909713], [-8.6652009856954475, -0.15673125417207334, -2.921259108617587, -2.8801839334152648], [-6.4481609272471845, -0.2526520400813892, -9.9417570436500249, -9.8598025564582699]]], [[[-5.0221727158470024, -4.9566361144645992, -7.2826096573542012, -4.3954276203919287], [-6.2719704397043241, -4.1793978431617935, -7.6103349617211933, -5.302029225772432], [-8.912980906935088, -8.6553344613165564, -4.7333731551911393, -5.5065554249084157]], [[-4.684673328062674, -8.8482084066704267, -7.8242509634255324, -4.1895924990368041], [-5.1704531165959224, -7.3952042570440737, -5.6717253687234637, -4.9676864153145841], [-1.0119569934610952, -1.7732503055285394, -9.0623716910906786, -5.6174146334070558]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[-4.554239814461277, -9.8732656685388331, -0.76231934375983368, -3.97163673827695], [-9.2152119555944729, -8.4667172414954717, -2.9484687014826401, -2.13473999422592], [-2.2789133173721012, -0.045772152913776232, -4.2708103519116571, -2.8699338424678125]], [[-3.1412913277375214, -9.548759339712241, -5.3526151277186118, -4.6203738050074064], [-7.1652702150685776, -4.969630442386892, -3.8815189911364314, -7.3265668906861894], [-2.7921008807033934, -4.0802731135915273, -6.6203839334493075, -8.6162569096511383]]], [[[-7.3416208659403779, -3.5327049579194751, -7.3048453692211961, -6.4022432021565523], [-2.0327346440693397, -3.1196430955742871, -6.308877877296875, -0.18539303032211141], [-3.7673768526901954, -1.3183037775180972, -7.7213266293883152, -2.692515293472856]], [[-1.2828229176650128, -9.8944095109016423, -5.6448100924916993, -9.9691301964325554], [-1.315407890252815, -1.3658217508967772, -3.5072402024820244, -1.0630661010199711], [-6.3870586874146751, -2.3840667016787158, -4.5961843454686404, -8.9937518318928866]]], [[[-0.93660513287355673, -8.6512701113851236, -9.5811949334803757, -1.351254706566027], [-5.2482690126895726, -5.8404004234817828, -2.2835875749648515, -5.2961664898843201], [-7.8761688396777938, -6.4341169390494448, -9.9539133409286276, -4.0594484428054285]], [[-3.4410979960953929, -2.0178156064149348, -7.7163536228174303, -5.0525051834890213], [-5.789512696778826, -8.1498009283142423, -2.9116485891829038, -8.1435315705341598], [-5.2482609517600309, -8.407358207117543, -8.3685856381097441, -0.76048409432836639]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_add_overloaded_taggedData_rank4_constData_rank4(self):
      arg0=Data(numarray.array([[[[3.1331519622030566, 1.3119133890156967, -3.2392134494651281, -0.01569818056179173], [2.634556632080769, -1.189410178309064, 1.914015632778888, 1.4647992886672521], [-2.2199841553264141, -0.10166420825437594, -4.8324250114128073, 2.4067957844997796]], [[2.8462822657787656, 0.44011683322179529, -4.1076589232352152, -1.3423498632813602], [0.53632410068613634, 0.0070867373485814511, 2.4846431596065042, -3.0396972435073586], [-2.0963056738902139, -0.87930193181326199, 2.1183278730678801, 2.7346792811999157]]], [[[1.0681951676174828, -0.41818912340588632, -4.8476480835060221, -3.3146157083317318], [-3.8083861936585564, 1.4265322003908585, 4.7612563224989977, 0.33388900779590891], [1.7709086691219635, 1.0164110436214449, 0.91720421535314767, -3.892946374145716]], [[-0.21322716600495095, 0.019664103154569901, -2.5389160047351456, -2.6874594544011874], [1.5242890831948088, -2.8188899113562407, -4.2375755921717264, -2.3465708679537944], [-4.5890727168846723, -3.1073959874736845, 2.6256214303516154, 2.306166602974149]]], [[[-0.39742270642111865, 3.7780144318629709, -2.1528178473535831, 0.38956987471308402], [4.2072808591264188, -0.31273624034917979, -2.6254592071622618, -2.1252487243623053], [0.51571349096633412, 0.022274290842354105, 0.62015453029442025, -1.064637557237802]], [[4.6645141713645693, -2.1015608157949028, -1.6892077968270183, 4.8090459955855884], [0.123339918957873, -4.0752931091395421, 4.5803954303973242, -1.126002876662453], [3.0746694309474041, -3.6358444246511268, -1.2950974062337561, 2.7843326629814573]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[4.9227582350105621, 3.6036118955387906, -2.708445126257264, -0.010623154617936947], [3.9376047613219214, 2.353994660542881, 2.3471841350779759, 2.0773573229030653], [-1.143142450361645, -1.3786062401477817, 4.3976570759022806, 4.3735781169914141]], [[-3.3610620753879128, -3.0010619584716736, 0.64095586188100917, -0.12119915059537245], [-3.7982069708990496, -2.4694132998194931, -0.52396914706805209, 4.4213016710158008], [2.7529768001123189, -0.96581203501230384, 0.77711645282180974, -2.1096868341727748]]], [[[-0.89235105065349618, -1.6771008391848028, 2.7651378950555952, -2.7729116554651956], [-2.3362287803320192, -1.9906576742577862, -2.1830603808815665, 1.4573837859578749], [4.4160251954589782, 0.84023453476264631, 3.2257525974331731, -1.9574021443725833]], [[-3.2661887452158744, -4.6851142104549934, 0.82658483006030536, 1.089439663075976], [2.2488299456094722, -3.6873618309339316, 0.73900683253748589, -1.1677601689326709], [1.0896285725439974, 3.6562970341003762, -3.2012161242939707, 4.0200778747597266]]], [[[-3.9207539144034111, 2.6592808898097484, -1.564140703303496, 0.85878875556931877], [2.4733407841500243, 3.3426483456035267, -3.3511808065342477, 2.2157775754136484], [3.7229225805005655, 3.4572070633959182, -3.4277821650720464, -2.1240040336435726]], [[3.5468172315497917, 3.0128640257101509, -4.9995373443318147, -4.8329137141251168], [4.0556325671795879, 1.2780420444496885, 4.6606825048100671, -3.3263939358085293], [3.3914884553245415, -4.6894048812889171, -4.0645164474469446, 2.3415536814852942]]]]))
      arg1=Data(numarray.array([[[[1.6463450974122074, -2.4953937193344977, 4.2733641267117779, 4.5330294346296274], [3.1444543220966743, 0.15056244203574209, 3.1308214912647401, 3.9466546675293763], [3.9989575987236705, 1.2959694095047523, 3.2763312879330879, 1.3003779658425287]], [[3.3695184798944968, 2.195722881116553, -0.88074509562310244, 0.35302477558533329], [3.6987700783165351, -0.30739620781974253, 0.57688786177728968, 0.80022403922436958], [3.6502466700047584, 1.3021084553118376, -4.0179617826950071, -4.6393640417561164]]], [[[-1.499731500376662, -2.405147810094844, -1.4862333895483228, 4.3818154977298267], [-1.6735911082216215, -3.1357887521787928, 2.6673233589095986, 4.4975056851447039], [0.98131927050915113, 3.9906279719071769, 3.9254722688653665, -3.9078676082622419]], [[-2.4806631673946908, -4.310842055095967, 4.3279233073924352, 3.4103293802177301], [3.0090369783976865, -1.6550843346417499, 0.62407465515388783, -4.8401477225380773], [2.208243718706, 4.4163329158494768, 2.481684970533844, -4.8744613593287216]]], [[[-4.0971312364070167, 2.128584318877631, 3.8224151974197262, -3.8623076683567636], [-2.7280491484206237, -3.9114308472374248, -4.5128299957491569, -2.4948564083412608], [3.4052773595518673, -0.6146492343146619, 2.1414392608980855, -3.3746448909504592]], [[1.6739065084581464, 3.1970768469416235, 3.3598674616350124, -1.6991949526555938], [2.9155653699560604, -4.378569739274778, 0.42764140152916053, -3.1546307165838106], [-0.26171465472001199, 2.672547314914727, -1.8219051584334212, -4.0597059773120669]]]]),self.functionspace)
      res=arg0+arg1
      ref=Data(numarray.array([[[[4.7794970596152639, -1.1834803303188011, 1.0341506772466498, 4.5173312540678356], [5.7790109541774433, -1.0388477362733219, 5.0448371240436281, 5.4114539561966284], [1.7789734433972564, 1.1943052012503763, -1.5560937234797194, 3.7071737503423083]], [[6.2158007456732625, 2.6358397143383483, -4.9884040188583176, -0.98932508769602689], [4.2350941790026715, -0.30030947047116108, 3.0615310213837938, -2.239473204282989], [1.5539409961145445, 0.42280652349857561, -1.8996339096271271, -1.9046847605562007]]], [[[-0.43153633275917924, -2.8233369335007303, -6.3338814730543449, 1.0671997893980949], [-5.4819773018801783, -1.7092565517879343, 7.4285796814085963, 4.8313946929406129], [2.7522279396311147, 5.0070390155286217, 4.8426764842185142, -7.8008139824079574]], [[-2.6938903333996418, -4.2911779519413971, 1.7890073026572897, 0.72286992581654275], [4.5333260615924953, -4.4739742459979901, -3.6135009370178386, -7.1867185904918713], [-2.3808289981786723, 1.3089369283757923, 5.1073064008854594, -2.5682947563545726]]], [[[-4.4945539428281354, 5.9065987507406019, 1.6695973500661432, -3.4727377936436796], [1.4792317107057951, -4.2241670875866042, -7.1382892029114187, -4.620105132703566], [3.9209908505182014, -0.59237494347230779, 2.7615937911925057, -4.4392824481882611]], [[6.3384206798227156, 1.0955160311467207, 1.6706596648079941, 3.1098510429299946], [3.0389052889139334, -8.453862848414321, 5.0080368319264847, -4.2806335932462636], [2.8129547762273921, -0.96329710973639981, -3.1170025646671773, -1.2753733143306096]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[6.5691033324227694, 1.1082181762042929, 1.5649190004545139, 4.5224062800116904], [7.0820590834185957, 2.5045571025786231, 5.4780056263427159, 6.0240119904324416], [2.8558151483620255, -0.082636830643029402, 7.6739883638353685, 5.6739560828339428]], [[0.0084564045065840254, -0.80533907735512056, -0.23978923374209327, 0.23182562498996084], [-0.099436892582514425, -2.7768095076392356, 0.052918714709237591, 5.2215257102401704], [6.4032234701170774, 0.33629642029953377, -3.2408453298731974, -6.7490508759288907]]], [[[-2.3920825510301582, -4.0822486492796468, 1.2789045055072723, 1.6089038422646311], [-4.0098198885536407, -5.126446426436579, 0.48426297802803209, 5.9548894711025788], [5.3973444659681293, 4.8308625066698232, 7.1512248662985396, -5.8652697526348252]], [[-5.7468519126105653, -8.9959562655509604, 5.1545081374527406, 4.4997690432937061], [5.2578669240071587, -5.3424461655756819, 1.3630814876913737, -6.0079078914707482], [3.2978722912499974, 8.0726299499498531, -0.71953115376012677, -0.85438348456899504]]], [[[-8.0178851508104287, 4.7878652086873794, 2.2582744941162303, -3.0035189127874449], [-0.2547083642705994, -0.5687825016338981, -7.8640108022834045, -0.27907883292761237], [7.1281999400524327, 2.8425578290812563, -1.2863429041739609, -5.4986489245940318]], [[5.220723740007938, 6.2099408726517744, -1.6396698826968024, -6.5321086667807107], [6.9711979371356483, -3.1005276948250895, 5.0883239063392276, -6.4810246523923398], [3.1297738006045295, -2.0168575663741901, -5.8864216058803658, -1.7181522958267728]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_add_overloaded_taggedData_rank4_taggedData_rank0(self):
      arg0=Data(numarray.array([[[[1.0601531822977677, 4.0726745619023657, 3.6495957472642591, -4.5853746548448457], [4.8031956869743624, 1.2922001324316899, -2.6038108121498285, -1.6853805692426715], [0.59635781747329641, -4.7739890492747978, -2.991829369254396, -0.99026007351987833]], [[4.1004501612408912, -0.71221999944871772, -2.4257763498665632, -4.2477319700162806], [3.7347500468428674, -0.41423651785688165, -0.94677070639313499, 2.6151816677807496], [-0.37477785819362452, 4.7491854335909025, 4.4755854873113048, -3.7922402823612011]]], [[[-2.3375624135978779, 3.6743639421545318, -3.2953137207261305, -4.7343836049299579], [-1.1293147135669335, -2.6145629134141899, -1.7544972255926892, 4.9030233031737218], [-4.9678403571315357, -3.1894934503219705, 4.2473033937755904, -4.1801669702549411]], [[3.8422382434248306, 1.7130957815427017, -4.0127435846118917, -0.0026619250493880031], [-2.9168221244052503, 2.4740021579204416, -2.0539398312727633, -3.1024688730966976], [-0.84232290631693907, 0.055624764862427512, -1.3381599247004794, -0.82758169195057274]]], [[[-4.1263214859140485, -3.6307795610760349, -0.0076760095589829547, -1.218946255623381], [2.5053902771663674, -3.9039324327414926, 2.4384267679153693, -1.0053652842886951], [0.82760324835353138, 0.036949319751261811, -4.1521739644823628, -4.0593244662714687]], [[-4.1015263277201246, -2.3504672175092587, 4.8967336738456702, 1.5712918827128775], [3.1643696304401931, 2.5471229856578992, 1.6225127637431225, -2.8479171224373676], [0.094212258010476724, -3.1221298986331778, 1.5839929906775971, -0.2422789755390955]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[0.33783179069622893, -1.7416762009781186, -2.3752352662009626, 1.0538156387949495], [2.3103445909667544, 4.9379831389624727, -1.1815444628895522, 0.9483596323812673], [-3.1455866789282041, -4.9093114789590642, 2.0831341254654125, -0.37398976668950645]], [[-4.4661822068043353, 2.6239149763920402, 3.1007400255377391, -1.8587358170529935], [-0.21689598075010696, 3.6631674321147205, 3.5158926843530072, -2.0086638209418393], [3.9557509506035782, -3.2177807686526085, 3.0993150985243094, -0.70474975624957548]]], [[[4.804821491853966, -3.8952588296984434, -1.1426442995369013, 3.8146426584851092], [-1.8178876140511524, 1.7791684879288692, -3.2173608676359269, -2.0671894883697775], [4.1853396517114891, -2.3369501503351731, 0.43120754239429981, -0.46623877778020528]], [[1.1562225740765841, -1.338923522434976, -4.0670070817941086, 2.201628633350766], [-0.00028437091238409096, 4.817033338220325, -3.8045904649367834, -1.7330917243963539], [3.2265481370009557, -1.3548091899665939, -1.5553622629183508, 2.9420132778352901]]], [[[-3.3452399358965392, -0.047814239049344565, 4.7566190312827299, 4.0979275750740971], [3.022004721710335, -3.3522097945021745, 3.3811714091977443, 1.8950199314273473], [-4.1201649545047117, -3.3753627897528382, -4.363202023325691, -3.1491085169538158]], [[-4.8912776091420129, -1.7293548927326716, -3.7081326188032051, -4.2779046281308872], [1.1859734840524814, -3.081187929250718, -2.4229874756702219, 3.5596112695803974], [4.9409662334423547, 1.7440276392348366, 1.9629092477137977, -1.7230445817030082]]]]))
      arg1=Data(-1.85688075123,self.functionspace)
      arg1.setTaggedValue(1,-1.92083167105)
      res=arg0+arg1
      ref=Data(numarray.array([[[[-0.79672756893443708, 2.2157938106701609, 1.7927149960320543, -6.4422554060770505], [2.9463149357421576, -0.5646806188005149, -4.4606915633820332, -3.5422613204748763], [-1.2605229337589083, -6.6308698005070026, -4.8487101204866008, -2.8471408247520831]], [[2.2435694100086865, -2.5691007506809225, -4.282657101098768, -6.1046127212484853], [1.8778692956106626, -2.2711172690890864, -2.8036514576253397, 0.75830091654854481], [-2.2316586094258293, 2.8923046823586978, 2.6187047360791, -5.6491210335934063]]], [[[-4.1944431648300826, 1.817483190922327, -5.1521944719583352, -6.5912643561621627], [-2.9861954647991382, -4.4714436646463946, -3.6113779768248939, 3.0461425519415171], [-6.8247211083637405, -5.0463742015541753, 2.3904226425433857, -6.0370477214871459]], [[1.9853574921926258, -0.14378496968950305, -5.8696243358440965, -1.8595426762815928], [-4.7737028756374551, 0.6171214066882369, -3.910820582504968, -4.9593496243289028], [-2.6992036575491438, -1.8012559863697772, -3.1950406759326841, -2.6844624431827775]]], [[[-5.9832022371462532, -5.4876603123082397, -1.8645567607911877, -3.0758270068555857], [0.64850952593416267, -5.7608131839736973, 0.58154601668316452, -2.8622460355208998], [-1.0292775028786734, -1.8199314314809429, -6.0090547157145675, -5.9162052175036735]], [[-5.9584070789523293, -4.2073479687414634, 3.0398529226134654, -0.2855888685193273], [1.3074888792079884, 0.69024223442569443, -0.23436798748908227, -4.7047978736695724], [-1.762668493221728, -4.9790106498653826, -0.27288776055460762, -2.0991597267713002]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[-1.5829998803569181, -3.6625078720312656, -4.2960669372541096, -0.86701603225819746], [0.38951291991360737, 3.0171514679093256, -3.1023761339426992, -0.9724720386718797], [-5.0664183499813511, -6.8301431500122112, 0.16230245441226554, -2.2948214377426535]], [[-6.3870138778574823, 0.70308330533889318, 1.1799083544845921, -3.7795674881061405], [-2.137727651803254, 1.7423357610615735, 1.5950610132998602, -3.9294954919949863], [2.0349192795504312, -5.1386124397057555, 1.1784834274711624, -2.6255814273027225]]], [[[2.883989820800819, -5.8160905007515904, -3.0634759705900483, 1.8938109874319622], [-3.7387192851042994, -0.14166318312427784, -5.1381925386890739, -3.9880211594229245], [2.2645079806583421, -4.2577818213883205, -1.4896241286588472, -2.3870704488333523]], [[-0.76460909697656287, -3.259755193488123, -5.9878387528472556, 0.28079696229761897], [-1.9211160419655311, 2.896201667167178, -5.7254221359899304, -3.653923395449501], [1.3057164659478087, -3.2756408610197409, -3.4761939339714978, 1.0211816067821431]]], [[[-5.2660716069496862, -1.9686459101024916, 2.8357873602295829, 2.1770959040209501], [1.101173050657188, -5.2730414655553215, 1.4603397381445973, -0.025811739625799746], [-6.0409966255578587, -5.2961944608059852, -6.284033694378838, -5.0699401880069628]], [[-6.8121092801951599, -3.6501865637858186, -5.6289642898563521, -6.1987362991840342], [-0.73485818700066563, -5.0020196003038651, -4.3438191467233693, 1.6387795985272504], [3.0201345623892077, -0.17680403181831039, 0.042077576660650706, -3.6438762527561552]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_add_overloaded_taggedData_rank4_taggedData_rank4(self):
      arg0=Data(numarray.array([[[[-1.7990919183368304, 0.93184397396384711, -3.7330585278423802, 4.6907149947481948], [1.2582588875202454, 2.1897390191621238, 0.54483074076905069, -0.12283657170321938], [-3.6466931314993891, 3.7096556826842111, -2.6307798886737075, -2.7149637797948922]], [[-2.349947605764763, 0.28447613909407465, -2.0993400716304214, 3.1956758477293477], [2.1974065966472178, 1.3730307476321171, 0.78701614666569419, -3.6076351467098347], [-4.8186980641756874, -1.9758416393400191, 2.6943224698178492, -0.82203672052128063]]], [[[2.1972761713627325, 3.139218320997772, -3.5987132438121283, -4.2244258583758585], [-4.4096726479599617, -2.0640702496273122, 3.1894070668564787, -1.0761145547937589], [1.5153364154318734, -2.7229445465769162, -3.5080709349001449, 0.17378689776656042]], [[-4.5169909102900876, -2.4754816871957139, 3.873148454381095, 2.0228575477523716], [-4.4699177427705896, 4.8708191331970276, 3.5271580262369291, 0.48503175720727221], [0.26855779864747209, -2.1997779296540978, 3.8010248130325337, 4.1651880321116739]]], [[[3.4607515645929858, 1.5529183069597776, 0.054641037367643364, 2.3691311182312802], [-4.960665137967867, 3.5686665782767513, 0.27576813232611386, -2.5652906093608685], [-3.8353908921177373, -0.86938404303642169, 3.3894256634996545, -3.8536914202267436]], [[1.4853362193091417, -0.53606432985992569, -1.9713315849327895, 4.4402517000376456], [-2.6282155021433784, 0.04973835118059533, -4.8622374887315631, -3.6104233101506678], [-4.1119736416305201, 1.1744302205364301, -1.6687048562530404, -1.8060350265348815]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[4.5846061409465779, -2.9399688578819658, 0.30825711547837109, 2.3573107373453812], [-4.5455942746014024, -2.3545811939649952, -0.33415079495292854, -3.583185346538651], [-2.9933886201094815, -1.2938945826618351, -1.4843026949749061, -2.1523921428095285]], [[3.4322630137240804, -2.7381170276080558, 0.1724980341609772, 1.3395082552409443], [-0.21838018698504857, 3.2450808551347041, -1.9816165055734611, 1.0084038872740075], [-2.4700161314040523, -0.70546991518164592, -3.5475617729209996, -4.6546266494693045]]], [[[4.3602245210617632, -2.9266401106553519, 2.9558169933091545, -3.540231720477812], [1.9246426732334321, -1.3035598362833598, 2.853783811312649, 1.8820758276310396], [4.6934574449949693, 0.83510455661471816, -3.8795376301389748, 2.0833270505986672]], [[4.8734742216206062, 2.473371494381059, -3.3430799353419727, 2.6981490223343183], [-2.7339505937714348, -2.1756456484894873, -0.64539707084804032, -2.0022088914596212], [-3.2533433842042903, -0.49336822108599598, 1.4501619221400119, 3.0094368144300248]]], [[[-4.3768865299997897, -0.61404980791096264, 3.3706224552886841, 4.5591898894702716], [-3.1783866468476951, 3.5723753038884016, -1.3476064062893247, 0.14669844254866327], [1.4487167217365551, 4.256738889596118, 1.6825657424181486, -2.8787583026391648]], [[-4.0947258926848562, 1.8985626248872123, -3.2018335101346684, 2.8749930077782473], [4.8650803974003551, -0.17794687566387335, -4.5963109719060586, -4.646909655331001], [-2.6605573935498148, 2.5769852321341276, -4.5295819718924086, -1.7583310338449087]]]]))
      arg1=Data(numarray.array([[[[4.4656365903094457, -4.9150861484816346, -3.3045248504181979, -4.4528992593777197], [4.0331617479768287, -0.48352162671466026, -3.274836667089839, -1.5801395084402459], [-4.9188357669531255, -1.4829832471079349, -1.3431415309841057, -2.3395734650814424]], [[4.1749401548527061, 2.2110612332190316, 3.1269979635415126, 0.80974070701623724], [3.8129667447467313, -1.8032702733257411, -3.4528040216422804, -4.3718963749644466], [0.39635568268175625, 3.8258517505576695, -1.900625824984016, -4.0924527892973916]]], [[[-0.28406204806047697, -4.8519913675852635, -0.025524852023748323, 2.3268385269563163], [3.6652171909914255, 1.2173070491755533, 3.5817870177953921, -2.8375445910551402], [0.88074433991492818, 3.0191028774442792, 4.9794288579848835, -0.61041237408038462]], [[1.2872095660037175, -3.5846452728087765, -1.6102701820698648, 2.1281719062450613], [-2.3751194002324327, -3.671977417636445, -4.6699550381579176, 1.5445397316548846], [0.31232446087630272, 2.9276048261923755, 2.3156455536056875, 4.9740453582556725]]], [[[4.2075448669960824, 3.6290949233964795, -0.80349349904871481, -3.209057048715561], [-4.5561614792229506, 0.34538810627403027, -0.28392980919979216, -3.5972276911942327], [-0.47879086912418245, -3.8389654556022057, 3.3938679759851951, -0.8446509989207307]], [[-4.9027050630779812, 3.8828776109802625, -4.1016817123081513, 0.55926088418936093], [2.2369503807152755, -0.91038607974924801, 1.0298081300954394, 1.453986780885077], [-0.51898697067416233, -2.7623316264607602, -0.18857368671852814, 2.988515091434123]]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[[-0.31241989554702787, 4.6825336233164077, -4.7431962405480776, 1.570560531825782], [-0.24411786764566301, -4.7990161009499479, -3.0347465925110919, -2.3145821774522881], [1.1421601164562123, -2.2280507594786947, -4.68700782862292, -2.9466655903159533]], [[-2.8533448580007201, 4.6948927387559376, -2.414098617960839, 4.2816869394728965], [3.7174014415796091, 0.51726168781737591, 2.6713923268820903, -2.0286672158710428], [-4.1612504013566367, 4.9503826471738162, 4.5705628160830294, 3.0578420984404069]]], [[[3.1159725239567724, -0.32962099090097396, -2.1963839503787117, -0.87587825251936646], [-0.53359482512976975, -4.8423566099615432, -2.9384468411925049, -3.4414365444039428], [-2.0722391447545476, 1.2640433217746772, -2.1866613497909135, 0.18759767517210779]], [[0.21072876950637998, 0.42953462170173395, -3.5287078002501349, -1.1592519691194769], [-0.22187126677921398, 3.6036975722714377, 1.2203602056005733, -0.19408363115915339], [-3.3153151464697395, -4.7322399510154423, 1.27155787986755, 3.2549029841265167]]], [[[0.99311889379529994, 2.8740902846233487, -4.495107709244758, -2.7127818882019805], [-3.0859386969508638, 1.2639805770466497, -0.28957901167847311, -0.22690859722752421], [-1.3076650762404918, -3.8889612176069823, 1.6952852909518592, 3.8430682444002784]], [[1.9778109086353997, 0.27433873636489103, -2.5576836533759839, 1.8170036890459915], [-3.5455380237002898, -1.6926898420012715, 0.41175235147042244, 1.1768922106298874], [4.5612978880640398, 1.3543112710963126, -4.2549615676374577, 4.4941127949188839]]]]))
      res=arg0+arg1
      ref=Data(numarray.array([[[[2.6665446719726154, -3.9832421745177875, -7.0375833782605781, 0.23781573537047507], [5.2914206354970741, 1.7062173924474635, -2.7300059263207883, -1.7029760801434652], [-8.5655288984525146, 2.2266724355762761, -3.9739214196578132, -5.0545372448763342]], [[1.8249925490879431, 2.4955373723131062, 1.0276578919110912, 4.0054165547455849], [6.0103733413939491, -0.430239525693624, -2.6657878749765862, -7.9795315216742813], [-4.4223423814939311, 1.8500101112176504, 0.79369664483383318, -4.9144895098186723]]], [[[1.9132141233022555, -1.7127730465874915, -3.6242380958358766, -1.8975873314195422], [-0.74445545696853621, -0.8467632004517589, 6.7711940846518708, -3.9136591458488992], [2.3960807553468015, 0.29615833086736298, 1.4713579230847387, -0.4366254763138242]], [[-3.2297813442863701, -6.0601269600044905, 2.2628782723112302, 4.1510294539974328], [-6.8450371430030224, 1.1988417155605826, -1.1427970119209885, 2.0295714888621568], [0.58088225952377481, 0.7278268965382777, 6.1166703666382212, 9.1392333903673464]]], [[[7.6682964315890683, 5.1820132303562572, -0.74885246168107145, -0.83992593048428077], [-9.5168266171908176, 3.9140546845507815, -0.008161676873678303, -6.1625183005551012], [-4.3141817612419198, -4.7083494986386274, 6.7832936394848495, -4.6983424191474743]], [[-3.4173688437688394, 3.3468132811203368, -6.0730132972409407, 4.9995125842270065], [-0.39126512142810288, -0.86064772856865268, -3.8324293586361238, -2.1564365292655907], [-4.6309606123046825, -1.5879014059243302, -1.8572785429715686, 1.1824800648992415]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[4.2721862453995501, 1.7425647654344418, -4.4349391250697066, 3.9278712691711632], [-4.7897121422470654, -7.1535972949149436, -3.3688973874640205, -5.8977675239909395], [-1.8512285036532692, -3.5219453421405298, -6.1713105235978265, -5.0990577331254823]], [[0.57891815572336025, 1.9567757111478818, -2.2416005837998618, 5.6211951947138408], [3.4990212545945605, 3.76234254295208, 0.68977582130862913, -1.0202633285970353], [-6.631266532760689, 4.2449127319921702, 1.0230010431620298, -1.5967845510288976]]], [[[7.4761970450185355, -3.2562611015563259, 0.75943304293044278, -4.4161099729971784], [1.3910478481036623, -6.145916446244903, -0.084663029879855856, -1.5593607167729031], [2.6212183002404217, 2.0991478783893953, -6.0661989799298883, 2.270924725770775]], [[5.0842029911269861, 2.9029061160827929, -6.8717877355921075, 1.5388970532148414], [-2.9558218605506488, 1.4280519237819504, 0.57496313475253302, -2.1962925226187746], [-6.5686585306740302, -5.2256081721014382, 2.7217198020075619, 6.2643397985565414]]], [[[-3.3837676362044897, 2.2600404767123861, -1.1244852539560739, 1.8464080012682911], [-6.2643253437985589, 4.8363558809350513, -1.6371854179677978, -0.080210154678860945], [0.1410516454960633, 0.36777767198913569, 3.3778510333700078, 0.96430994176111362]], [[-2.1169149840494565, 2.1729013612521033, -5.7595171635106528, 4.6919966968242388], [1.3195423737000653, -1.8706367176651448, -4.1845586204356362, -3.4700174447011136], [1.900740494514225, 3.9312965032304401, -8.7845435395298672, 2.7357817610739752]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_add_overloaded_taggedData_rank4_expandedData_rank0(self):
      arg0=Data(numarray.array([[[[-1.9822678236600955, 4.7519319188346589, 1.9525679733009849, 0.89806120397498557], [-1.4759442276593706, -0.01889348557776227, -0.041659617091004186, 1.2158996733355689], [-3.9115826514884544, -1.0110007051318028, 3.6259455645448178, 0.65067680977141862]], [[4.836462464183148, 0.5634478224956343, 0.64779235942283186, -3.5749405256049052], [0.95871040462842316, -2.9408912569945036, 1.671154111231532, -1.6859042910157784], [-1.9016689039927259, -4.0543118027509619, 1.7409191914027611, 1.7992704725411581]]], [[[4.8748059918500228, -3.2109535160850267, 2.5132752885143272, -4.5220721330748717], [-3.5946795904440032, 2.9550986164892308, 2.3366659113342241, -1.830283303410567], [1.8574895822311754, 2.8434038998337288, 4.4101370925668331, 1.2387553366937141]], [[0.39377902972405199, 1.1009795786782419, -1.3165687598999645, -3.3183731093521129], [3.0370904342726526, 3.7020134143909118, 4.6898077548757673, 3.8709642247220248], [3.5187362855296129, -1.9938034359064871, 0.86424334989254259, 0.82622082781977824]]], [[[2.443577520413406, 1.7811103902825129, 4.3104594566205865, -0.46348593998584775], [1.2519131997200761, -2.3803701233648624, 3.2863434910999132, -0.95277586683536253], [-3.7379755865565665, 0.11386770333318452, 0.4419257992398844, 1.5591409014109452]], [[3.1373736276389028, -4.6011668563748511, 0.012935569164921112, 1.8754757728947844], [0.7116556516471757, -4.8795792796619466, 1.7970936720816386, 1.8176893668785628], [0.13378369318859296, -4.1464542122601289, -0.30919253407308567, 3.1936033080149233]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[-2.5752545375698999, 0.21763548830149659, -0.24087248769822267, -3.2114557879599079], [0.57699590546700907, -2.0556364308538377, -1.0610327961222357, -3.993137315515737], [1.9165363873422141, 1.1305158547734537, -4.6727011277065316, 3.2468610218798268]], [[1.2599874644844444, -0.43273449711841305, 4.3863149700246691, 1.8040006747435564], [-2.8611246475076522, 1.2688489416081747, -3.7903974069954027, 0.7240886815771006], [1.5249729830082437, 0.51236318403081071, -3.8271421610901513, -4.1359940246528328]]], [[[-4.6212698824412533, -3.8758222403886644, -0.31455792217787515, 4.2612873845009887], [-3.3314502674753266, 2.8619209963041561, -2.552604395062934, -1.9196994243451537], [2.9204739684380439, 0.69041716540978548, 0.052012334574987662, -2.377187810552126]], [[-3.5289417755246069, -3.0632637531348461, 0.24243420054816767, 3.2989986707593228], [4.5227762932585502, 3.5153693618300927, 3.9778614937690584, -4.2807255734068672], [2.9420271023401234, 4.1408019168701546, 4.0224722423379085, 2.5902491013040665]]], [[[-0.73398250083622241, 3.5873512282657138, 0.76070289110872746, 1.079154802735351], [-4.9455430434738563, 1.8977224230213894, -1.7938713824241139, 0.72234058698535542], [-0.61555738406516802, 2.2510985441163385, -2.5437936118518256, 3.439436712560294]], [[1.0841400617861128, -1.6117980259100206, 3.7870225863291775, 0.88038632923927462], [1.0981013695896946, -3.0404445271306821, 3.3477956146500887, -0.77883732568979802], [-1.9348980004567853, -2.8835451055953421, 2.1220700699769175, -2.572383937263174]]]]))
      arg1=Data(-1.12990383074,self.functionspace)
      arg1.setTaggedValue(1,0.99139756726)
      arg1.expand()
      res=arg0+arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[[[-3.1121716544045164, 3.622028088090238, 0.82266414255656395, -0.23184262676943534], [-2.6058480584037915, -1.1487973163221832, -1.1715634478354251, 0.085995842591148008], [-5.0414864822328749, -2.1409045358762238, 2.4960417338003968, -0.47922702097300229]], [[3.706558633438727, -0.56645600824878661, -0.48211147132158905, -4.7048443563493265], [-0.17119342611599775, -4.0707950877389241, 0.5412502804871111, -2.8158081217601993], [-3.0315727347371468, -5.1842156334953824, 0.61101536065834017, 0.66936664179673722]]], [[[3.7449021611056019, -4.3408573468294476, 1.3833714577699063, -5.651975963819293], [-4.7245834211884237, 1.8251947857448099, 1.2067620805898032, -2.9601871341549879], [0.72758575148675453, 1.7135000690893079, 3.2802332618224121, 0.10885150594929316]], [[-0.73612480102036892, -0.02892425206617899, -2.4464725906443854, -4.4482769400965338], [1.9071866035282317, 2.5721095836464909, 3.5599039241313464, 2.7410603939776039], [2.388832454785192, -3.123707266650908, -0.26566048085187832, -0.30368300292464268]]], [[[1.3136736896689851, 0.65120655953809203, 3.1805556258761656, -1.5933897707302687], [0.12200936897565517, -3.5102739541092833, 2.1564396603554923, -2.0826796975797834], [-4.8678794173009869, -1.0160361274112364, -0.68797803150453651, 0.42923707066652428]], [[2.0074697968944819, -5.7310706871192725, -1.1169682615794998, 0.74557194215036349], [-0.41824817909724521, -6.009483110406368, 0.6671898413372177, 0.68778553613414184], [-0.99612013755582796, -5.2763580430045494, -1.4390963648175066, 2.0636994772705024]]]])+(1.-msk_ref)*numarray.array([[[[-1.5838569703103769, 1.2090330555610196, 0.75052507956130032, -2.2200582207003849], [1.5683934727265321, -1.0642388635943147, -0.069635228862712673, -3.001739748256214], [2.9079339546017371, 2.1219134220329767, -3.6813035604470086, 4.2382585891393498]], [[2.2513850317439674, 0.55866307014110994, 5.3777125372841921, 2.7953982420030794], [-1.8697270802481292, 2.2602465088676977, -2.7989998397358797, 1.7154862488366236], [2.5163705502677667, 1.5037607512903337, -2.8357445938306283, -3.1445964573933098]]], [[[-3.6298723151817303, -2.8844246731291414, 0.67683964508164784, 5.2526849517605116], [-2.3400527002158036, 3.8533185635636791, -1.561206827803411, -0.92830185708563073], [3.9118715356975668, 1.6818147326693085, 1.0434099018345107, -1.385790243292603]], [[-2.5375442082650839, -2.0718661858753231, 1.2338317678076907, 4.2903962380188458], [5.5141738605180732, 4.5067669290896157, 4.9692590610285814, -3.2893280061473442], [3.9334246695996464, 5.1321994841296776, 5.0138698095974314, 3.5816466685635895]]], [[[0.25741506642330059, 4.5787487955252368, 1.7521004583682505, 2.070552369994874], [-3.9541454762143333, 2.8891199902809124, -0.80247381516459093, 1.7137381542448784], [0.37584018319435497, 3.2424961113758615, -1.5523960445923026, 4.430834279819817]], [[2.0755376290456358, -0.62040045865049764, 4.7784201535887005, 1.8717838964987976], [2.0894989368492176, -2.0490469598711591, 4.3391931819096117, 0.21256024156972497], [-0.94350043319726229, -1.8921475383358191, 3.1134676372364405, -1.5809863700036511]]]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_add_overloaded_taggedData_rank4_expandedData_rank4(self):
      arg0=Data(numarray.array([[[[2.7272765192400907, 2.6591477436263746, -1.9677339084308034, 1.6154400570356557], [-4.0240290833984806, -1.5196611865148268, -3.2456886671894472, -3.2320272536713892], [-4.5295490931361311, 4.7353190644761671, -3.3681891780945783, 1.2311718620525536]], [[3.0212175601276243, -4.4264576323217888, 1.2599854067838612, 0.26652531640301991], [-4.7290342820430995, 3.2998142410219735, 0.43982343872097296, -4.1031800264620664], [-3.8533311953775415, 4.6540095368781902, 4.4444412872113741, 3.1659832185014647]]], [[[2.5165398584440091, -3.1822077995078777, -4.3818804918282837, -0.5347978434313756], [-2.9057681205735131, 0.38896972952242237, -3.6235001068953943, 4.8996286196355729], [-4.2498560950204283, -3.8375149408539331, 0.21067427408396533, 2.4488305973470803]], [[3.0118948839306441, -2.2521346297114517, -0.1362863957550946, 3.0729040604076356], [-2.4600203726673788, -1.0820116221675882, 0.28592882406212627, -4.548978701453807], [2.2280965379671036, -3.5052761503293919, 4.3540476914357633, -2.2044615175721427]]], [[[3.6559648209607598, -4.7964030679331078, 0.22369552872524867, -0.87013449962459877], [-3.6542834470984333, 2.5989274472091424, -0.08509633321545973, 1.582056187852662], [4.3865368186502121, -4.7564370606598203, 4.645447269787903, -3.8803351995491466]], [[4.823758822520297, 4.6393697233219235, -2.2813677934859355, 1.8701781174876846], [0.068284150791402709, -3.6552386864603514, -4.290829679596686, 1.946806812169144], [4.0964493240446629, 4.7524157155589126, 3.3615986115746441, 4.7106143316817199]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[1.5583271560856087, -0.57188170650901515, 4.5987935549514507, 1.6229382124856393], [1.0930528088745772, -2.476942681865768, -3.7190197395924249, 2.1198658276210827], [4.84538812867949, -4.5059575453081946, -0.54172262363297463, -4.3002070541233977]], [[0.92036983348850931, -3.9224136869028192, -2.7889876415999248, -3.5084772387743746], [-2.9013345680932465, 0.58589647442178183, -2.0920050799029655, -3.1409900010481442], [-2.7420845956149833, 4.1074046417372365, 1.3867486883914815, 4.5451162756095513]]], [[[3.3683719218586248, 1.5799088089294955, -3.1465858851790331, 4.4703286608278212], [1.4939486272868674, -1.7522211337649707, -2.0619197920695043, 1.5157769907583418], [-2.2077198449407733, 2.4452361243571188, 4.3535191284057948, 4.8304487989957536]], [[-1.1852975050587511, -2.9668147799297353, 2.962820649358453, 1.5283772239661992], [4.8168685753698739, -0.69400978717268025, -3.7156743122177804, -3.6798538189836369], [-4.9895035487123698, -0.17697414292558022, 3.6622532455378689, 0.70896914819390666]]], [[[2.2097366510461942, -3.4354509041832504, -1.3231013787049228, 1.650254486621864], [2.2808153822479031, -1.3407037245690869, -0.56740268309922648, -3.0130984431850316], [2.7248745996878307, -2.0484359960038132, 2.864279632909362, -0.46538263268766578]], [[-3.1303225329853501, 2.2753776981136493, -4.9093928172487233, -3.8618668874772477], [3.4552753549380242, -0.32590259667711674, 3.0088285177260872, 0.1587313961630743], [0.9763965135959296, 3.3021740769130226, -0.49847508158638121, -2.1804151918058801]]]]))
      arg1=Data(numarray.array([[[[-3.9352015837525012, -2.860507758449089, -1.40480970150616, -3.2884906364088593], [-2.6641914531889785, 2.3567927196544725, -3.0647603676776658, -2.657564673520314], [4.3550987899555622, 1.2449618188852707, -1.6245614393033634, 0.740100169122762]], [[2.1792800323083448, 3.9009778255384866, 0.39170775186276963, -1.1084579996773316], [3.7426276863906498, -3.6006174422971169, 3.399054453890475, -0.25946559533034286], [-1.6293504259430502, 0.73697175438579254, 4.5698107938284167, -1.9301486908396424]]], [[[-3.0451206231866337, 0.059522695060061359, 1.1890046142035802, -4.1386620004158985], [-4.7080516265904535, -2.1163299056965466, 4.7817687816767052, -1.5613428930206261], [-2.441703931823842, 1.4256216389912977, 4.1865178116027728, -4.6269972536109769]], [[-3.4688971842932936, -4.4541720815112464, -3.5455264634812877, -3.0894435828611986], [0.10995066174123735, 1.7705183124544259, -2.8551895522553226, -3.9293179424501092], [-4.4981867698670026, -2.2068211647301403, 3.3297516680559678, -2.9777303410918532]]], [[[-1.7089632453448855, 0.98170709248907162, -0.93759768502700158, 3.8705304492417874], [3.2318666551687194, -1.0303297302967938, 1.281933588930249, -2.3094708665372652], [3.633148399675882, 3.0556409313577575, -2.027475399013372, -0.35650894422181345]], [[1.7299822857353062, -1.197810983529485, 0.019592034278305803, -2.0826999972176652], [3.3064900012250238, 1.8275170577207964, 4.4414628502968334, -0.042407266142218347], [-4.5428273658782494, -4.8025574849624642, 4.1085195900166909, 0.59866195183762461]]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[[0.17685229581819506, -2.6418260019332296, 1.8152859574414713, -0.17422650860980582], [-3.0656107510341979, 4.9320158007392347, -2.3739933036036778, -1.727158988720876], [-4.3033749993411243, 3.0297371725772884, 3.6973630604953485, 3.4610253682100343]], [[2.9051779182260384, -2.3439490391761355, 1.6412219506533612, -2.0607558121035821], [4.1058694903700648, -0.24894078631454342, -3.1119594376409321, 2.8885272366579118], [-0.37125406663187199, 3.0534547182012197, 2.2894748907295739, 0.21522805657280308]]], [[[2.2981218187940646, -3.6656246871999132, 4.2545411655242074, 2.2897154559086328], [3.6767534010233476, -3.5560546299506091, -0.9901205486583855, 4.4152870211386563], [4.9020505922163053, -1.6219020776727042, -1.5742379804728932, 1.3916514850663706]], [[-0.70973150607027691, -2.1567765158018579, 0.22119552262824005, -0.34821322131399857], [-3.4877804383375932, -1.7497272583616477, 1.5421358963340595, 1.7443065416113832], [2.5285541017248381, -0.19955258681344645, 2.848375269287347, 2.0512786837871353]]], [[[-3.3843072498095439, -1.5940503647429551, 3.5750742741926658, 4.0691219718682294], [-2.7474692989588947, 4.4842033510677819, -1.7884429081284372, -1.9908286216121973], [-1.1356650955168979, 3.1646135578769279, -4.2652795322719284, -1.0145055587718597]], [[3.5491986069707764, -3.8496376856759418, -2.3580124339985629, 4.8646784843044237], [-3.4700320591409142, -0.37857516050742213, 0.68417599483544844, -0.61110575699124325], [1.1825308970273287, 4.5923941948064968, -3.976110142790886, 0.84623620521280429]]]]))
      arg1.expand()
      res=arg0+arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[[[-1.2079250645124104, -0.20136001482271437, -3.3725436099369634, -1.6730505793732036], [-6.6882205365874592, 0.83713153313964561, -6.3104490348671129, -5.8895919271917032], [-0.17445030318056887, 5.9802808833614378, -4.9927506173979417, 1.9712720311753156]], [[5.2004975924359691, -0.52547980678330219, 1.6516931586466308, -0.8419326832743117], [-0.9864065956524497, -0.30080320127514337, 3.838877892611448, -4.3626456217924092], [-5.4826816213205918, 5.3909812912639827, 9.0142520810397908, 1.2358345276618223]]], [[[-0.52858076474262461, -3.1226851044478163, -3.1928758776247035, -4.6734598438472741], [-7.6138197471639666, -1.7273601761741242, 1.1582686747813109, 3.3382857266149468], [-6.6915600268442699, -2.4118933018626354, 4.3971920856867381, -2.1781666562638966]], [[-0.45700230036264955, -6.7063067112226982, -3.6818128592363824, -0.016539522453562938], [-2.3500697109261415, 0.68850669028683775, -2.5692607281931963, -8.4782966439039171], [-2.270090231899899, -5.7120973150595322, 7.6837993594917311, -5.1821918586639963]]], [[[1.9470015756158743, -3.8146959754440362, -0.71390215630175291, 3.0003959496171886], [-0.42241679192971393, 1.5685977169123486, 1.1968372557147893, -0.72741467868460319], [8.019685218326094, -1.7007961293020628, 2.617971870774531, -4.2368441437709601]], [[6.5537411082556032, 3.4415587397924385, -2.2617757592076297, -0.2125218797299806], [3.3747741520164265, -1.827721628739555, 0.15063317070014737, 1.9043995460269256], [-0.44637804183358654, -0.050141769403551528, 7.470118201591335, 5.3092762835193446]]]])+(1.-msk_ref)*numarray.array([[[[1.7351794519038037, -3.2137077084422447, 6.414079512392922, 1.4487117038758335], [-1.9725579421596207, 2.4550731188734667, -6.0930130431961027, 0.39270683890020663], [0.54201312933836565, -1.4762203727309062, 3.1556404368623738, -0.8391816859133634]], [[3.8255477517145478, -6.2663627260789543, -1.1477656909465637, -5.5692330508779566], [1.2045349222768182, 0.33695568810723842, -5.2039645175438975, -0.25246276439023241], [-3.1133386622468553, 7.1608593599384562, 3.6762235791210554, 4.7603443321823544]]], [[[5.6664937406526894, -2.0857158782704177, 1.1079552803451742, 6.760044116736454], [5.170702028310215, -5.3082757637155797, -3.0520403407278898, 5.9310640118969982], [2.694330747275532, 0.82333404668441457, 2.7792811479329016, 6.2221002840621242]], [[-1.895029011129028, -5.1235912957315932, 3.1840161719866931, 1.1801640026522007], [1.3290881370322807, -2.4437370455343279, -2.173538415883721, -1.9355472773722537], [-2.4609494469875317, -0.37652672973902668, 6.5106285148252159, 2.760247831981042]]], [[[-1.1745705987633497, -5.0295012689262055, 2.2519728954877429, 5.7193764584900935], [-0.46665391671099155, 3.143499626498695, -2.3558455912276637, -5.0039270647972289], [1.5892095041709329, 1.1161775618731147, -1.4009998993625663, -1.4798881914595254]], [[0.41887607398542626, -1.5742599875622925, -7.2674052512472862, 1.002811596827176], [-0.014756704202889992, -0.70447775718453887, 3.6930045125615356, -0.45237436082816895], [2.1589274106232583, 7.8945682717195194, -4.4745852243772672, -1.3341789865930758]]]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_add_overloaded_expandedData_rank0_taggedData_rank0(self):
      arg0=Data(-2.45784045862,self.functionspace)
      arg0.setTaggedValue(1,2.31030870049)
      arg0.expand()
      arg1=Data(4.71282017112,self.functionspace)
      arg1.setTaggedValue(1,-2.25991979071)
      res=arg0+arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*(2.2549797125)+(1.-msk_ref)*(0.0503889097804)
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_add_overloaded_expandedData_rank0_taggedData_rank1(self):
      arg0=Data(-3.34652279676,self.functionspace)
      arg0.setTaggedValue(1,1.53745765087)
      arg0.expand()
      arg1=Data(numarray.array([3.4318238351668242, -2.4405324320070108]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([4.0029001743376895, 0.8331733937495267]))
      res=arg0+arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([0.085301038404434149, -5.7870552287694004])+(1.-msk_ref)*numarray.array([5.5403578252095276, 2.3706310446213648])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_add_overloaded_expandedData_rank0_taggedData_rank2(self):
      arg0=Data(1.3020473667,self.functionspace)
      arg0.setTaggedValue(1,-1.41545525971)
      arg0.expand()
      arg1=Data(numarray.array([[-1.7265053885136048, -1.4712749422840155, -3.9397527194745861, 3.9946837913205648, 3.2536122309452349], [2.6811114679007675, -0.35502412921027648, -2.0171850629782559, 3.4766836568162436, 1.9033728554633011], [-0.38926087127955622, -3.4136043824343307, -1.2239369279432877, -1.6851226164974911, 4.6805851296611714], [-0.78452517138582234, -0.52550491644668007, -1.4976649257548837, -3.0117235953484576, -1.445916954142128]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[2.4203560418898551, -0.15178680088626173, -0.4650356945912808, -4.6364495067205382, 1.9033486051459665], [1.2273854524783046, 0.21092228466745766, 4.8470184150547357, 3.913879288546763, -1.4050943298594443], [0.15549981790659295, 1.669223411329436, -1.1600981262339305, 0.42745663088461683, -0.93765281059660399], [3.2240645611139822, 3.2390127861390656, 3.7189423355380171, -1.8504341549489203, -2.0187445625097675]]))
      res=arg0+arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[-0.42445802181486592, -0.16922757558527657, -2.6377053527758472, 5.2967311580193037, 4.5556595976439738], [3.9831588345995064, 0.9470232374884624, -0.71513769627951707, 4.7787310235149825, 3.20542022216204], [0.91278649541918266, -2.1115570157355918, 0.078110438755451206, -0.38307524979875218, 5.9826324963599102], [0.51752219531291654, 0.77654245025205881, -0.19561755905614486, -1.7096762286497187, -0.14386958744338907]])+(1.-msk_ref)*numarray.array([[1.0049007821792477, -1.5672420605968691, -1.8804909543018882, -6.0519047664311456, 0.48789334543535912], [-0.18806980723230282, -1.2045329750431497, 3.4315631553441284, 2.4984240288361557, -2.8205495895700516], [-1.2599554418040144, 0.2537681516188286, -2.5755533859445379, -0.98799862882599054, -2.3531080703072114], [1.8086093014033748, 1.8235575264284583, 2.3034870758274097, -3.2658894146595276, -3.4341998222203749]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_add_overloaded_expandedData_rank0_taggedData_rank3(self):
      arg0=Data(0.315281958619,self.functionspace)
      arg0.setTaggedValue(1,4.77792091009)
      arg0.expand()
      arg1=Data(numarray.array([[[4.4612381157591621, 1.6766847385633765], [0.55547241809476677, 3.9108329142717704]], [[-4.2625148810224145, 2.4593624806361785], [1.795349158317201, 4.9399022768230889]], [[4.0485392348311553, 4.4029734037448343], [0.53445127507420143, -3.8294024239678159]], [[1.7612024555912518, -0.44610857712610752], [3.7107985081585486, -4.8852486051357866]], [[-1.2990748638147744, 4.6643028470068124], [1.1225809895178305, -2.5642529820575408]], [[2.9058154474972229, 3.4284582491247182], [-4.9949860171650915, 4.1011822172104893]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[1.1817929544003682, -1.084893198888448], [-3.9435086414503995, 3.1166096639915644]], [[-3.9597903752567234, -3.7934860412669389], [4.4675879323673779, -0.9183536179828975]], [[3.4707470880613371, -0.43531931805617763], [1.4983404381224386, -0.70992222772275682]], [[-1.2911879862443354, -4.4064631190639449], [2.6343603975717009, 0.53848635999957395]], [[-2.4633346053218999, 3.1157428164448504], [-1.3456159141155535, -1.6635238716224823]], [[0.85670654879524744, -4.5186020294485978], [-2.023880376756968, -4.4654642289716939]]]))
      res=arg0+arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[[4.7765200743780838, 1.9919666971822982], [0.87075437671368849, 4.2261148728906921]], [[-3.9472329224034928, 2.7746444392551002], [2.1106311169361227, 5.2551842354420106]], [[4.363821193450077, 4.718255362363756], [0.84973323369312315, -3.5141204653488942]], [[2.0764844142101735, -0.1308266185071858], [4.0260804667774703, -4.5699666465168649]], [[-0.98379290519585272, 4.9795848056257341], [1.4378629481367522, -2.2489710234386191]], [[3.2210974061161446, 3.7437402077436399], [-4.6797040585461698, 4.416464175829411]]])+(1.-msk_ref)*numarray.array([[[5.9597138644941428, 3.6930277112053265], [0.83441226864337503, 7.8945305740853389]], [[0.81813053483705112, 0.98443486882683562], [9.2455088424611525, 3.859567292110877]], [[8.2486679981551116, 4.3426015920375969], [6.2762613482162131, 4.0679986823710177]], [[3.4867329238494391, 0.37145779102982956], [7.4122813076654754, 5.3164072700933485]], [[2.3145863047718747, 7.8936637265386249], [3.432304995978221, 3.1143970384712922]], [[5.6346274588890219, 0.25931888064517672], [2.7540405333368065, 0.31245668112208058]]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_add_overloaded_expandedData_rank0_taggedData_rank4(self):
      arg0=Data(-0.626675121515,self.functionspace)
      arg0.setTaggedValue(1,3.05709423837)
      arg0.expand()
      arg1=Data(numarray.array([[[[-2.2040119703487737, 0.22207585226900939, -3.9418794262070769, 2.0859785399087185], [1.7904551067882419, 1.9190078021454715, -0.13723968162950939, -3.2815182493831885], [-0.91571535407697002, 3.0995577411718731, 0.10326371715132865, -1.2257029064659122]], [[-3.4339587435216492, -1.7174314509114286, -3.8212321032447538, 1.3141536610711295], [-3.0867159602503822, -1.328832259691648, 0.00045833706937159491, 3.7279300198570748], [0.7141427717444957, -3.3772016134720029, -4.0342641506650709, -1.2974928280252405]]], [[[-0.03925290280549909, -4.0358075605674912, 2.5240986142622281, -0.9106800040300298], [4.2713554750433751, -2.065335819573674, 3.9574485785983331, 3.1928077430143595], [-3.1332757872420802, -2.5585886089202092, 0.36453095035546923, -2.3244180120835702]], [[-1.8307102339182526, -0.5174914843013676, -4.329919822379118, -2.9965928508652429], [-3.6142489775730979, 3.9342435492751342, -2.904750033176644, -3.5850262587817463], [2.1729113810705956, -4.2032434203199367, -1.6213604268260662, -3.8270575512982408]]], [[[-3.5663986534145176, 0.3601394756264229, 2.1915112832756067, -1.8858770292987579], [-0.35941895324789463, -4.8139117948938415, -3.6559003431824988, 2.2368494410808069], [1.3959636989705739, 4.2049437171968158, 0.50083863087043579, -1.2890449546507088]], [[0.55413677919310089, 3.6679690886311356, 4.1412457734605272, -4.997372949226687], [-1.0508856720949833, -1.9665649518812991, -0.88999850896384824, -2.3477813714010387], [0.0034178612916049289, -0.40189153578178072, -4.2806039766499211, 3.2437347497163689]]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[[-0.99776878669975311, 1.6476931814330831, 2.8134436212555602, -4.557103818579737], [-3.9194236310417963, -0.44874006777794762, -4.0015924911850709, -4.1479737214740631], [4.4143713534846736, 1.2628305661237951, -1.4628196920853656, -1.0526083796531038]], [[4.8722998661963874, -0.016885382913489622, -2.8681215766737953, -3.155053610744126], [1.8931366327126469, 4.3677862809546966, -3.0939100462373723, -2.9519037772918413], [-2.6456837564583537, 2.2433665611851232, -4.195097963023823, 3.3064145489222678]]], [[[-2.3036330080317837, -2.5103773239877336, -2.8401783867137933, -3.7340814752319105], [-4.0465179785957428, -1.6680856153080601, 0.14748528212714618, 1.7351453309708731], [-3.0063672320853563, -3.7939238676857281, 2.2278136033940479, 2.8797022453974979]], [[4.7200475755279676, -3.9124149796924845, -4.8073872954662935, 1.6550061951322173], [1.0558427554413807, 2.8568918144276081, -0.47343170358816078, 4.7025021023732236], [4.8300795973213546, 4.1857494293375481, 1.0533939531371566, -1.9001756817409343]]], [[[-1.7738212126204833, 0.79011696107876794, -1.0395268559811721, 4.8741438965592838], [-2.0735520996350107, 3.5965422597627512, 3.4232317673958885, -3.5727502064729366], [4.2562185560687897, -4.176059848306048, -1.5929478277090716, -3.989642732338968]], [[-3.8259833544798463, -2.3805718022145994, -2.6347056156230462, 2.4050273266781517], [3.6976298148616138, 3.854254396967022, 3.0669052624585316, 0.032625206805732887], [4.6774122914027529, -0.20282020601598383, 0.079177633110205647, 1.7288047845163357]]]]))
      res=arg0+arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[[[-2.8306870918637581, -0.404599269245975, -4.5685545477220613, 1.4593034183937341], [1.1637799852732575, 1.2923326806304871, -0.76391480314449378, -3.9081933708981729], [-1.5423904755919544, 2.4728826196568887, -0.52341140436365574, -1.8523780279808966]], [[-4.0606338650366336, -2.344106572426413, -4.4479072247597387, 0.68747853955614513], [-3.7133910817653666, -1.9555073812066324, -0.6262167844456128, 3.1012548983420904], [0.087467650229511307, -4.0038767349869868, -4.6609392721800553, -1.9241679495402249]]], [[[-0.66592802432048348, -4.6624826820824756, 1.8974234927472438, -1.5373551255450142], [3.6446803535283907, -2.6920109410886583, 3.3307734570833487, 2.5661326214993752], [-3.7599509087570646, -3.1852637304351936, -0.26214417115951516, -2.9510931335985546]], [[-2.457385355433237, -1.144166605816352, -4.9565949438941024, -3.6232679723802272], [-4.2409240990880823, 3.3075684277601498, -3.5314251546916284, -4.2117013802967307], [1.5462362595556112, -4.8299185418349211, -2.2480355483410506, -4.4537326728132252]]], [[[-4.193073774929502, -0.26653564588856149, 1.5648361617606223, -2.5125521508137423], [-0.98609407476287902, -5.4405869164088259, -4.2825754646974836, 1.6101743195658225], [0.76928857745558954, 3.5782685956818314, -0.1258364906445486, -1.9157200761656932]], [[-0.072538342321883498, 3.0412939671161512, 3.5145706519455429, -5.6240480707416713], [-1.6775607936099677, -2.5932400733962835, -1.5166736304788326, -2.9744564929160231], [-0.62325726022337946, -1.0285666572967651, -4.9072790981649055, 2.6170596282013845]]]])+(1.-msk_ref)*numarray.array([[[[2.0593254516723132, 4.7047874198051494, 5.8705378596276265, -1.5000095802076707], [-0.86232939266972997, 2.6083541705941187, -0.94449825281300459, -1.0908794831019968], [7.4714655918567399, 4.3199248044958614, 1.5942745462867007, 2.0044858587189625]], [[7.9293941045684537, 3.0402088554585767, 0.18897266169827098, -0.097959372372059761], [4.9502308710847132, 7.4248805193267629, -0.036815807865306027, 0.10519046108022501], [0.41141048191371254, 5.3004607995571895, -1.1380037246517567, 6.3635087872943341]]], [[[0.75346123034028256, 0.54671691438433268, 0.21691585165827298, -0.67698723685984419], [-0.98942374022367652, 1.3890086230640062, 3.2045795204992125, 4.7922395693429394], [0.050727006286710008, -0.7368296293136618, 5.2849078417661142, 5.9367964837695641]], [[7.7771418139000339, -0.85532074132041824, -1.7502930570942272, 4.7121004335042835], [4.112936993813447, 5.9139860527996744, 2.5836625347839055, 7.7595963407452899], [7.8871738356934209, 7.2428436677096144, 4.1104881915092228, 1.156918556631132]]], [[[1.283273025751583, 3.8472111994508342, 2.0175673823908942, 7.9312381349313501], [0.98354213873705554, 6.6536364981348175, 6.4803260057679548, -0.51565596810087033], [7.313312794440856, -1.1189656099339818, 1.4641464106629947, -0.93254849396690176]], [[-0.76888911610777999, 0.67652243615746688, 0.42238862274902012, 5.462121565050218], [6.7547240532336801, 6.9113486353390883, 6.1239995008305979, 3.0897194451777992], [7.7345065297748192, 2.8542740323560825, 3.1362718714822719, 4.785899022888402]]]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_add_overloaded_expandedData_rank1_taggedData_rank0(self):
      arg0=Data(numarray.array([0.80929201712783261, -3.0232613540115971]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([4.9079126176914869, 1.7942738720511633]))
      arg0.expand()
      arg1=Data(-0.180910647951,self.functionspace)
      arg1.setTaggedValue(1,1.81047511659)
      res=arg0+arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([0.62838136917635179, -3.2041720019630779])+(1.-msk_ref)*numarray.array([6.718387734277651, 3.6047489886373274])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_add_overloaded_expandedData_rank1_taggedData_rank1(self):
      arg0=Data(numarray.array([-3.9207435107391619, -0.18616363765785415]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([-1.3020411507337224, -1.9274563263847377]))
      arg0.expand()
      arg1=Data(numarray.array([2.6409002669088242, -0.16509632064916602]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([-1.1457474088113937, 0.047187044765728103]))
      res=arg0+arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([-1.2798432438303378, -0.35125995830702017])+(1.-msk_ref)*numarray.array([-2.4477885595451161, -1.8802692816190096])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_add_overloaded_expandedData_rank2_taggedData_rank0(self):
      arg0=Data(numarray.array([[-0.70236061896644753, -2.8316337434429686, -2.5230799831500939, -0.27478750881053227, -0.32207917758465854], [-0.72751176042763177, 1.2534020127531598, 2.7850214758180369, 0.7744273344355328, -1.85117007682158], [1.1682965882407093, 4.1219321024378441, 1.8298951431235242, -0.45836701135850078, 4.0375395909036946], [1.2358207568680957, -0.74904193312522072, -2.90501248696027, -1.1549577720689874, 1.0802322344956528]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[-1.135259255437834, -4.0605164126395561, 1.9602014586240548, 1.99013820885272, -1.1636665482056054], [2.4143402295483511, 2.381395234151845, 3.2465414012138343, -4.2126622637372879, -2.985807298859986], [-3.3799959148332737, 2.4924718786761426, -3.1968806678282489, 2.9049273768454409, -3.132726627661083], [-1.9599902064707297, -1.6877144690519552, -2.8522135517282776, -1.7299899908812231, -1.3734312068273677]]))
      arg0.expand()
      arg1=Data(3.05652242336,self.functionspace)
      arg1.setTaggedValue(1,-2.96654705618)
      res=arg0+arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[2.3541618043940966, 0.22488867991757555, 0.53344244021045029, 2.7817349145500119, 2.7344432457758856], [2.3290106629329124, 4.3099244361137039, 5.8415438991785811, 3.8309497577960769, 1.2053523465389642], [4.2248190116012534, 7.1784545257983883, 4.8864175664840683, 2.5981554120020434, 7.0940620142642388], [4.2923431802286398, 2.3074804902353234, 0.1515099364002741, 1.9015646512915567, 4.1367546578561969]])+(1.-msk_ref)*numarray.array([[-4.1018063116145704, -7.0270634688162925, -1.0063455975526812, -0.976408847324016, -4.130213604382341], [-0.55220682662838483, -0.58515182202489102, 0.2799943450370983, -7.1792093199140243, -5.9523543550367215], [-6.3465429710100096, -0.47407517750059336, -6.1634277240049844, -0.061619679331295085, -6.0992736838378185], [-4.9265372626474662, -4.6542615252286907, -5.8187606079050136, -4.6965370470579586, -4.3399782630041042]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_add_overloaded_expandedData_rank2_taggedData_rank2(self):
      arg0=Data(numarray.array([[-4.0115580793347396, -3.9115411000693956, 3.3422015498583431, 3.2471032583186918, 0.075007607652982422], [-2.424844342892686, -0.96964930869070187, 2.6313094080828989, -2.4632679204807326, -0.85914190427453274], [3.1182053239320826, -0.63833050606772268, 2.5635646833134009, -0.29733590393634568, 4.762028519345046], [3.9458513710283309, -4.5852711463383109, 2.1396489207037295, -1.2471322746621416, -2.5133185113433254]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[-0.98651600462453004, 3.3372687384897102, -3.4523962784095783, 0.4908688183780372, -3.4460049101024994], [-4.4862055715577913, -0.71280684687539875, 3.5969814126816111, 3.8189390853205456, -1.386541004551173], [1.3200548644920316, 2.2830021271361032, 3.0891943774822721, -2.1329983975916478, -3.1036293829535677], [1.2714342105214502, -1.3794435044637741, 2.6610639918086481, -2.4262466165940513, 0.60269422760232239]]))
      arg0.expand()
      arg1=Data(numarray.array([[1.0775481350434992, -2.5617765385565394, -3.9385244095842853, 4.7186191248444782, 0.19372823432001862], [-1.5079653848711096, 2.4629539584803615, 4.4790296730645363, -4.0052819904932422, 1.3366594216822358], [2.4530596993840925, -2.8563451472667745, 3.8959844577989209, -2.4355882126877382, 4.7620117137490432], [-3.9847457542944129, -1.2419638119020169, -4.628173872721475, -1.2316129038081316, -2.542915611693374]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[3.2801422551722208, -3.2001379019042728, 1.9386060509276328, -0.6343578038092792, 2.4970640529954551], [3.3339989661476412, 0.13020858986709172, -3.5889649965363732, 4.2746678182879556, -3.1309201312340198], [3.3987174890818821, -0.12045536368415277, -3.7271839724906597, -2.8025546425558079, 3.1377656385129189], [0.41768192493044776, -2.3514163371400922, -0.40411830993402731, -0.18622924410114905, -3.5850464751678004]]))
      res=arg0+arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[-2.9340099442912404, -6.473317638625935, -0.59632285972594223, 7.9657223831631701, 0.26873584197300104], [-3.9328097277637957, 1.4933046497896596, 7.1103390811474352, -6.4685499109739748, 0.4775175174077031], [5.5712650233161751, -3.4946756533344971, 6.4595491411123218, -2.7329241166240839, 9.5240402330940892], [-0.038894383266081967, -5.8272349582403278, -2.4885249520177455, -2.4787451784702732, -5.0562341230366989]])+(1.-msk_ref)*numarray.array([[2.2936262505476908, 0.13713083658543734, -1.5137902274819455, -0.143488985431242, -0.94894085710704434], [-1.1522066054101501, -0.58259825700830703, 0.008016416145237848, 8.0936069036085012, -4.5174611357851928], [4.7187723535739137, 2.1625467634519504, -0.63798959500838759, -4.9355530401474557, 0.034136255559351181], [1.689116135451898, -3.7308598416038663, 2.2569456818746207, -2.6124758606952003, -2.982352247565478]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_add_overloaded_expandedData_rank3_taggedData_rank0(self):
      arg0=Data(numarray.array([[[1.3613762104190652, 1.3843361659253368], [-4.8882025721388933, 2.3768353989384003]], [[-1.5651455508396883, -1.1080692401066794], [3.19018492430558, 2.8815842210053075]], [[0.87225464224080795, 3.6505059346158646], [3.5824501099399484, -2.5770601275617677]], [[-0.78308001983235176, -4.998338383289731], [-2.6029389154959781, -3.1441348974279659]], [[-2.7351228596818791, 2.6420212856489567], [-1.4028160029441206, 3.2376128121254588]], [[0.0023433351289172677, 2.0452237305785905], [-2.4436198400353915, -4.9098269992558317]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[1.6407191815663937, -4.9712820456137061], [2.5677485452510105, -0.38854616011846232]], [[1.1274666373448436, -3.5503229193973187], [-0.27975212822824069, 3.7157570943364249]], [[2.2436838212484433, 1.3050846542375361], [-4.5216280952072641, 0.23229862769504006]], [[3.8565267209400638, -2.0842611242937092], [-1.5286611676183282, 2.3717581363524909]], [[0.19484150706488812, 1.1849044110413836], [-2.3697892585564984, -4.3130582185511193]], [[-0.37362413938585881, 4.4645720254756487], [-0.93847747999767961, 3.3763498356594255]]]))
      arg0.expand()
      arg1=Data(0.877236153856,self.functionspace)
      arg1.setTaggedValue(1,3.39944902862)
      res=arg0+arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[[2.2386123642755074, 2.261572319781779], [-4.0109664182824512, 3.2540715527948425]], [[-0.68790939698324616, -0.23083308625023724], [4.0674210781620221, 3.7588203748617497]], [[1.7494907960972501, 4.5277420884723067], [4.4596862637963905, -1.6998239737053256]], [[0.094156134024090399, -4.1211022294332889], [-1.725702761639536, -2.2668987435715238]], [[-1.8578867058254369, 3.5192574395053988], [-0.52557984908767841, 4.114848965981901]], [[0.87957948898535943, 2.9224598844350327], [-1.5663836861789493, -4.0325908453993895]]])+(1.-msk_ref)*numarray.array([[[5.0401682101872334, -1.5718330169928665], [5.9671975738718501, 3.0109028685023773]], [[4.5269156659656833, -0.15087389077647906], [3.1196969003925989, 7.1152061229572645]], [[5.643132849869283, 4.7045336828583757], [-1.1221790665864244, 3.6317476563158797]], [[7.2559757495609034, 1.3151879043271304], [1.8707878610025115, 5.7712071649733305]], [[3.5942905356857278, 4.5843534396622232], [1.0296597700643413, -0.91360918993027962]], [[3.0258248892349808, 7.8640210540964883], [2.46097154862316, 6.7757988642802651]]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_add_overloaded_expandedData_rank3_taggedData_rank3(self):
      arg0=Data(numarray.array([[[-0.49433211035442781, -3.1765458851202233], [-4.1893284008452403, 4.2517707082428231]], [[-2.1824291577499477, 4.9652666631782942], [-0.8740708277257534, -2.6209817768842436]], [[1.9106108321510762, 2.7906668899216012], [2.9500709780113885, 2.6968994240656361]], [[-1.2814325545684788, 3.9514616844641726], [-1.0113518291487389, 4.1636168724772915]], [[3.6064448093308279, -2.7713757478360601], [2.939428921495626, -3.5601557586759136]], [[-2.4084878771765519, -3.869092458801302], [1.0735422879837673, 3.5276360855231594]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[-0.24197860318896058, 4.0067713139938395], [-4.5255720512712241, -2.3954846037942703]], [[-4.8107535798266765, -0.47762042161175611], [0.29501719287529227, -2.9909445490373878]], [[-3.1808045122862696, -2.5604962735248393], [-2.9056229938036005, -0.33285255602072183]], [[2.8498953423489004, 3.0792398005565911], [1.4992987159092062, 0.22318145473081774]], [[0.5154616895678128, -1.5441935253973837], [4.0106872170360734, 1.627819624898649]], [[2.6946371585565831, 0.63028875672097406], [2.1199068884445662, 4.2261442345706541]]]))
      arg0.expand()
      arg1=Data(numarray.array([[[-4.7299390917499338, 3.5251272477839226], [-1.6631345678465026, -4.2129608920047579]], [[2.3585633451710306, -0.63258988887624312], [4.5316808451203858, 2.3411219579553775]], [[0.049999481040123861, 4.4213584054115547], [1.5777788806916728, 4.4382516213399281]], [[2.5230536746068992, 2.2871490792573628], [4.5151731102077992, -3.9328431151465812]], [[-2.3307881563968227, 1.6236877584919345], [4.9548760146371169, 1.0649177732508743]], [[1.0892879127863067, 3.6475714584078922], [2.480803001738769, 1.115865198388053]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[-4.5168295451453364, -4.9759944775001568], [-4.3122999509575957, 0.57817113141019405]], [[4.8256436296695941, -3.2980771820521273], [-1.9115461324156002, -3.2336020872104312]], [[-2.3147622754959296, 4.0866177069951082], [4.4952728317858757, -3.6588289454448217]], [[2.0631653606906806, 0.36867447796300379], [0.26914745682765062, -2.6399989236996522]], [[-4.5578928544524171, 3.8373599989536906], [-3.0989196371388394, 1.1501446987116672]], [[1.6686999744944764, -1.8061409555768924], [1.9663186665535779, 4.9627344692016973]]]))
      res=arg0+arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[[-5.2242712021043616, 0.34858136266369932], [-5.8524629686917429, 0.038809816238065231]], [[0.17613418742108289, 4.3326767743020511], [3.6576100173946324, -0.27985981892886613]], [[1.9606103131912, 7.2120252953331558], [4.5278498587030613, 7.1351510454055642]], [[1.2416211200384204, 6.2386107637215353], [3.5038212810590603, 0.23077375733071026]], [[1.2756566529340052, -1.1476879893441256], [7.8943049361327429, -2.4952379854250393]], [[-1.3191999643902452, -0.22152100039340983], [3.5543452897225363, 4.6435012839112124]]])+(1.-msk_ref)*numarray.array([[[-4.758808148334297, -0.96922316350631732], [-8.8378720022288206, -1.8173134723840763]], [[0.014890049842917641, -3.7756976036638834], [-1.616528939540308, -6.224546636247819]], [[-5.4955667877821988, 1.5261214334702689], [1.5896498379822752, -3.9916815014655436]], [[4.913060703039581, 3.4479142785195949], [1.7684461727368568, -2.4168174689688344]], [[-4.0424311648846043, 2.2931664735563069], [0.911767579897234, 2.7779643236103162]], [[4.3633371330510595, -1.1758521988559183], [4.0862255549981441, 9.1888787037723514]]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_add_overloaded_expandedData_rank4_taggedData_rank0(self):
      arg0=Data(numarray.array([[[[-2.4670392294058718, -2.1717241516917807, 3.3149797881216347, -0.63156956386832341], [1.8411356708754152, -4.2710445580609067, -4.9016457136475484, 2.3498397075023529], [-3.8611613457679352, -4.7966887572831389, -3.6822657503249081, 4.4339648393893487]], [[-0.35722154387227789, -0.75729799875302461, 1.7556459457049822, 3.7321418993475657], [2.8966627313499824, 2.3214925950484675, -4.2180152634433474, -4.262561307572823], [-0.12493798968600522, -2.6037054443164873, -3.3576044058042043, -4.9740423364133957]]], [[[-2.6782453692939168, -0.41258793353016543, 1.0550093451397906, -2.7153538521757445], [-3.7507591136182592, 1.5862517667809577, -4.8056125125113951, 2.3204066257049067], [0.24151004086578443, 3.0049126605399383, -1.7206116498350585, -2.2714155931801772]], [[3.8122961293074393, -3.2965687415664102, 3.0751008671417228, 0.21840262799808663], [-3.0621265029594404, -4.4538180263260578, -2.1983384619060597, 0.8952051693609171], [2.3311589374421624, 2.0581259782752772, -4.3383532680774683, 2.0910505776362225]]], [[[-0.95797296297193313, -0.51383561763351082, -2.0247725735326947, -1.3631950968466136], [2.0826868449445666, -0.41696113305525806, -4.497826433287285, -0.78294182636422072], [-1.7637079765908514, 2.9527264178147572, 0.51405258722394365, -3.4504391400785019]], [[4.8636798396573919, -1.105829341603294, 1.6065955731858867, 4.6992242901612276], [0.30753189038131179, 0.70097861710806342, 3.9439111486689953, -4.5801498290231741], [3.8878772950275291, 1.342731269940316, 3.8162519888287676, -4.260106052214705]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[2.0083473459413685, -3.2949928452634158, -1.9959950629475163, -3.4084261712842565], [-4.2870982025005642, -4.7150193724018425, 3.9664031071544521, -0.10661388970505481], [-3.6905987841883938, 3.2332213195638246, -0.48443240888530426, -3.034664574850634]], [[-4.5389896736265287, -3.8243670800480292, -4.968675999778382, -1.3980710183170784], [-4.3270437629039087, -1.1680198433843092, 0.15408998012602648, 2.7411686705566476], [-2.700768322316347, 2.1293493224079016, 1.1963627696265631, -2.2786623738313749]]], [[[4.2390004903035834, -1.8857659193087963, -0.49967866382512938, -2.4376331862798759], [-0.65571043092810033, -2.0136112041546941, -1.3833181751640233, 0.76229182116326033], [1.3965577922917936, -4.296139128579302, 4.5661531718371826, 4.343662409846047]], [[0.8809476841802466, -4.117945134933402, 2.3985199189466213, 3.1538007275587496], [-0.99305189944676275, -3.2687725605641536, 2.969337331717278, 3.1876036603472855], [-1.084628238314381, 0.23054877654551298, -2.1994486007823646, 4.2968600406788902]]], [[[3.6114962861852522, 0.7063441206652854, -3.898292706215909, 3.4420251667724404], [2.7781453491755315, 2.9903760203971519, -1.0709754945607211, -4.3563936413693813], [0.67217466929971881, -3.5549569786984794, -2.8177228917486885, 4.7360290638166767]], [[-0.23824265289269952, -1.1933440031154552, 2.2134826854452303, 4.9816465253804747], [-4.522756527654872, -1.1842822842700604, -0.8773402851242853, 4.7433213464057413], [-4.3008962551228258, 0.4466377408854143, -4.2663641086967505, -1.8141139538407125]]]]))
      arg0.expand()
      arg1=Data(-0.493921840889,self.functionspace)
      arg1.setTaggedValue(1,-4.24596595664)
      res=arg0+arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[[[-2.9609610702950793, -2.6656459925809881, 2.8210579472324273, -1.1254914047575308], [1.3472138299862078, -4.7649663989501141, -5.3955675545367558, 1.8559178666131455], [-4.3550831866571427, -5.2906105981723464, -4.1761875912141155, 3.9400429985001413]], [[-0.85114338476148532, -1.251219839642232, 1.2617241048157748, 3.2382200584583583], [2.402740890460775, 1.8275707541592601, -4.7119371043325549, -4.7564831484620305], [-0.61885983057521265, -3.0976272852056947, -3.8515262466934117, -5.4679641773026031]]], [[[-3.1721672101831242, -0.90650977441937286, 0.56108750425058318, -3.209275693064952], [-4.2446809545074666, 1.0923299258917503, -5.2995343534006025, 1.8264847848156993], [-0.25241180002342301, 2.5109908196507309, -2.214533490724266, -2.7653374340693846]], [[3.3183742884182319, -3.7904905824556177, 2.5811790262525154, -0.2755192128911208], [-3.5560483438486479, -4.9477398672152653, -2.6922603027952672, 0.40128332847170967], [1.837237096552955, 1.5642041373860698, -4.8322751089666758, 1.5971287367470151]]], [[[-1.4518948038611406, -1.0077574585227183, -2.5186944144219021, -1.857116937735821], [1.5887650040553591, -0.91088297394446549, -4.9917482741764925, -1.2768636672534281], [-2.2576298174800589, 2.4588045769255498, 0.020130746334736216, -3.9443609809677094]], [[4.3697579987681845, -1.5997511824925015, 1.1126737322966793, 4.2053024492720201], [-0.18638995050789564, 0.20705677621885599, 3.4499893077797879, -5.0740716699123816], [3.3939554541383217, 0.84880942905110857, 3.3223301479395602, -4.7540278931039124]]]])+(1.-msk_ref)*numarray.array([[[[-2.2376186106955638, -7.5409588019003486, -6.2419610195844486, -7.6543921279211888], [-8.5330641591374956, -8.960985329038774, -0.27956284948248022, -4.3525798463419871], [-7.9365647408253261, -1.0127446370731077, -4.7303983655222366, -7.2806305314875663]], [[-8.784955630263461, -8.0703330366849606, -9.2146419564153135, -5.6440369749540107], [-8.5730097195408419, -5.4139858000212415, -4.0918759765109058, -1.5047972860802847], [-6.9467342789532793, -2.1166166342290307, -3.0496031870103693, -6.5246283304683068]]], [[[-0.0069654663333489353, -6.1317318759457287, -4.7456446204620617, -6.6835991429168082], [-4.9016763875650327, -6.2595771607916264, -5.6292841318009561, -3.483674135473672], [-2.8494081643451388, -8.5421050852162352, 0.32018721520025029, 0.097696453209114686]], [[-3.3650182724566857, -8.3639110915703334, -1.847446037690311, -1.0921652290781827], [-5.2390178560836951, -7.5147385172010859, -1.2766286249196543, -1.0583622962896468], [-5.3305941949513134, -4.0154171800914193, -6.4454145574192969, 0.050894084041957832]]], [[[-0.63446967045168012, -3.5396218359716469, -8.1442586628528417, -0.80394078986449191], [-1.4678206074614009, -1.2555899362397804, -5.3169414511976534, -8.6023595980063128], [-3.5737912873372135, -7.8009229353354117, -7.0636888483856204, 0.49006310717974433]], [[-4.4842086095296319, -5.4393099597523875, -2.032483271191702, 0.73568056874354237], [-8.7687224842918035, -5.4302482409069928, -5.1233062417612176, 0.497355389768809], [-8.546862211759759, -3.799328215751518, -8.512330065333682, -6.0600799104776453]]]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_add_overloaded_expandedData_rank4_taggedData_rank4(self):
      arg0=Data(numarray.array([[[[-4.7054781107127974, -1.4116130410076746, 2.714334175205626, 1.9250621125283836], [-4.5468059590885703, 4.9179842285111715, 0.033743125509129612, -0.71232182747602035], [3.2347025724030622, -4.004944945462098, 4.5215230445846686, -2.8576488232783923]], [[-0.5804333785546989, -2.1744146096170978, 1.8122435628275904, 1.8166701356980806], [3.4457810107765301, -4.7141760010833087, -4.5679815731647633, 4.6246918604602953], [0.90794415750508151, 4.5081465366007514, 3.717516097109506, -0.1305193864600307]]], [[[-2.9028984821613522, -1.4138464565433981, 1.365541067767011, 0.39348601233827463], [-1.363317163746375, -4.3256750717726682, -3.4345691090931254, 4.2989770418290334], [-2.3372500742519584, 4.8363057878893212, 3.3968022788164394, -0.13837785112691048]], [[0.64766290881155619, 3.1076336202757489, -1.8044252528487115, -2.5402070277492186], [-3.3941267904706915, 4.3144181832757713, 4.3880286262231643, 4.3163485193123492], [-4.0277567617899814, 3.7335239284341633, -1.1069127234267628, 2.2366323585363244]]], [[[0.14584015602855072, 0.43579836015438822, -4.4009796646991726, 0.25273893761006683], [-4.2098106138810607, 1.7523623238501731, -3.4464752064990032, 0.96757386379993093], [0.17599394257364587, -1.6977529114570764, 0.42045176975052367, -0.23188051189599435]], [[-3.9007247156707447, 0.58924374484124264, -1.29215639690372, 2.9597859831415576], [-3.6154789619537988, 0.67718659825155569, -0.45859334722689482, -0.9168635982010187], [-0.18050555742376417, 0.44702138875273434, 4.6425827755726381, 2.7183898347419619]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[-2.4372489425641364, 0.89694567587970297, -1.3743322216798437, 1.5351393688574593], [2.4169012856644834, -2.5679466025636701, 1.2377139715512886, -4.709612004218612], [1.705624246813592, 3.6310154360026221, 4.0146058539537073, -2.7658583539257586]], [[-3.8411464996918609, 4.834194526145847, -1.2783176271934527, -0.46426689345233996], [-2.3018814310857003, -2.2545943443649277, 0.46239592757490033, 2.924494402530522], [0.96678112834927177, -1.8297145893093147, 3.523768564351176, 0.41439057070577334]]], [[[1.3933082041938558, -1.1715016547469803, -4.4765266133560209, 0.41089405019281511], [-3.2948108505301921, -2.0290960333424932, -2.9275772709955206, 2.1054103413883762], [-2.3651766616621748, -1.6061393387634215, -3.2846191528893143, 4.478642907241623]], [[-2.040482885766528, -3.1420495356307452, -4.8710187828583154, 4.5877755899757435], [4.9411169434284616, -1.7680112260062142, -0.93264792274807906, 1.665205762815023], [-4.6674511105618199, 2.7845375819494382, 0.56908671378237052, -4.3458243472767677]]], [[[3.9108671878375123, -1.2081792206276463, -1.4710258177612201, -2.8127836532183412], [4.445090641367889, -1.4153177942108597, 4.4910411246426563, -4.8555326878166145], [2.970427569864893, 4.150328544271698, -4.9829204756684753, -4.4863195269932579]], [[2.3071472115563516, 2.3512446945872112, 2.4900629727483583, -2.2157497627914022], [-2.8150148015348222, -1.1085485669835138, 3.1851857647582822, 2.5499597943510732], [0.31179086064204586, 3.2422197077768402, 0.8136416125391861, -3.4554147204177053]]]]))
      arg0.expand()
      arg1=Data(numarray.array([[[[2.9319165341354214, -1.1830229990079588, -2.5147038609579564, -0.73241804251354736], [1.5358899950889118, 4.5913636836205303, -2.6633350526879807, 1.0016857219956519], [-2.0707132919920292, -2.2131691830173095, 4.0269638544497806, 2.8000625212547625]], [[-1.5210489031766139, -1.6606361092694186, -1.3884018523686938, 1.1247628455235423], [3.8256187219297217, 3.4751676357835848, 2.9831429461594894, -3.3236453258988066], [0.60032886740104807, -0.99401949114208055, 3.9102144863542598, 4.0928168283069475]]], [[[-4.8633753019535622, 2.9945457364900649, -3.4907335109291369, -3.8315717507052005], [3.8005019867171459, -4.2293311745177222, -2.8990623693543394, 0.11330902535641663], [-1.6801976774973229, -0.10856001195497278, 1.005529481849341, 4.0132800810116223]], [[1.550334744198957, -0.70561280144328631, 4.5995296848949749, -1.9444144256571483], [1.5330371027830783, -0.20500519521782223, 0.53492289156470729, 3.467441465543077], [-2.2160479747528372, -4.5427710210627437, -3.6886933034995986, -3.9306876973570115]]], [[[2.9287841476065175, 0.73117768469728794, -0.32947077132669556, -1.0624405707998177], [-2.3898086943096097, -3.9513293566967511, -0.2878823021803818, -2.4471043217610355], [-4.7431801222810801, -3.6238404805102951, -2.0277903869170268, -4.1279069100541328]], [[1.2998472637072052, -1.8960629918083702, -3.4776604844668082, 2.5749293450379973], [0.67616417091072556, -4.6879370894952519, 4.3237819217077185, 4.1935774669636334], [-3.3266490685983765, 2.9881945924724285, 0.57753415146789866, -2.3896587103693556]]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[[-0.2012934520522025, -2.9201458788401458, -2.8759121049090162, 4.2983485984695733], [0.30097735113351209, -1.1590380729278724, 0.833876439342081, -0.35100511117572619], [1.1879356108592525, 1.1357991021886686, -1.1034194130098216, 3.4197046703623393]], [[-4.3944798112503953, -3.0897847255520352, 4.1216726135889168, 0.28314873938209306], [2.1233133380948512, -0.1142827384533307, 1.5715126215691608, 2.8581110877262041], [0.43529014265034149, -4.0431161990840261, 0.28517150386755574, 1.1630004946746428]]], [[[-0.40090647848700911, -0.033958262665528594, -4.4046266720225402, -1.0174464891618706], [-1.2928092051399309, -3.1377860979606176, 2.8953199135128314, 4.298600537254984], [2.7079316736133929, 0.59649279625180363, 3.4342585300929187, -1.4025729378588334]], [[4.8668497777227806, -4.0730751636431659, -3.1108293386157069, -1.0010286808478797], [1.2255117879225157, -1.7574474629526824, -1.3657737681314064, -2.9904846031384813], [-0.83078235278007995, 2.1535446966353486, -4.8933233652356725, 4.7718296568892367]]], [[[-1.4857526121737976, 3.3637722951763429, 1.7148007856717502, -0.90792789244099303], [-2.4288260081949007, -3.2223337912639272, 3.1839565592321488, -0.82691647771790322], [-1.7756994676030455, 0.17382075500737137, 1.4842870166456779, 2.5875967429437043]], [[-2.7219626333962887, -4.3789117218553306, 0.45213782278823356, -4.6410462583353755], [-4.9255613877949287, -3.4882296997458884, 2.9986183389018786, -4.6623658743604315], [-4.7340321240993024, 1.77401322635549, -3.5218646283090504, 3.2587336617460316]]]]))
      res=arg0+arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[[[-1.773561576577376, -2.5946360400156334, 0.19963031424766964, 1.1926440700148362], [-3.0109159639996586, 9.5093479121317017, -2.629591927178851, 0.28936389451963151], [1.163989280411033, -6.2181141284794075, 8.5484868990344491, -0.057586302023629798]], [[-2.1014822817313128, -3.8350507188865164, 0.42384171045889651, 2.9414329812216229], [7.2713997327062518, -1.2390083652997239, -1.5848386270052739, 1.3010465345614888], [1.5082730249061296, 3.5141270454586708, 7.6277305834637659, 3.9622974418469168]]], [[[-7.7662737841149143, 1.5806992799466668, -2.1251924431621259, -3.4380857383669259], [2.4371848229707709, -8.5550062462903895, -6.3336314784474652, 4.41228606718545], [-4.0174477517492813, 4.7277457759343484, 4.4023317606657804, 3.8749022298847118]], [[2.1979976530105132, 2.4020208188324625, 2.7951044320462635, -4.4846214534063673], [-1.8610896876876133, 4.1094129880579491, 4.9229515177878715, 7.7837899848554262], [-6.2438047365428186, -0.80924709262858041, -4.795606026926361, -1.6940553388206872]]], [[[3.0746243036350682, 1.1669760448516762, -4.7304504360258681, -0.80970163318975086], [-6.59961930819067, -2.198967032846578, -3.734357508679385, -1.4795304579611046], [-4.5671861797074342, -5.3215933919673715, -1.6073386171665032, -4.3597874219501271]], [[-2.6008774519635396, -1.3068192469671276, -4.7698168813705282, 5.5347153281795549], [-2.9393147910430732, -4.0107504912436962, 3.8651885744808236, 3.2767138687626147], [-3.5071546260221407, 3.4352159812251628, 5.2201169270405368, 0.32873112437260632]]]])+(1.-msk_ref)*numarray.array([[[[-2.6385423946163389, -2.0232002029604428, -4.2502443265888594, 5.8334879673270326], [2.7178786367979955, -3.7269846754915426, 2.0715904108933696, -5.0606171153943382], [2.8935598576728445, 4.7668145381912908, 2.9111864409438857, 0.65384631643658064]], [[-8.2356263109422567, 1.7444098005938118, 2.8433549863954641, -0.1811181540702469], [-0.17856809299084908, -2.3688770828182584, 2.0339085491440612, 5.7826054902567261], [1.4020712709996133, -5.8728307883933404, 3.8089400682187318, 1.5773910653804162]]], [[[0.9924017257068467, -1.2054599174125089, -8.8811532853785611, -0.60655243896905553], [-4.587620055670123, -5.1668821313031108, -0.032257357482689208, 6.4040108786433603], [0.34275501195121816, -1.0096465425116179, 0.14963937720360443, 3.0760699693827895]], [[2.8263668919562526, -7.2151246992739111, -7.9818481214740222, 3.5867469091278639], [6.1666287313509773, -3.5254586889588966, -2.2984216908794854, -1.3252788403234583], [-5.4982334633418999, 4.9380822785847869, -4.3242366514533019, 0.42600530961246896]]], [[[2.4251145756637147, 2.1555930745486966, 0.2437749679105301, -3.7207115456593343], [2.0162646331729883, -4.6376515854747868, 7.6749976838748051, -5.6824491655345177], [1.1947281022618474, 4.3241492992790693, -3.4986334590227974, -1.8987227840495535]], [[-0.41481542183993714, -2.0276670272681194, 2.9422007955365919, -6.8567960211267778], [-7.7405761893297509, -4.5967782667294017, 6.1838041036601608, -2.1124060800093583], [-4.4222412634572565, 5.0162329341323302, -2.7082230157698644, -0.19668105867167363]]]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_add_overloaded_Symbol_rank0_taggedData_rank0(self):
      arg0=Symbol(shape=())
      arg1=Data(-4.47375462667,self.functionspace)
      arg1.setTaggedValue(1,-1.31941601768)
      res=arg0+arg1
      s0=numarray.array(1.61261179813)
      sub=res.substitute({arg0:s0})
      ref=Data(-2.86114282854,self.functionspace)
      ref.setTaggedValue(1,0.293195780452)
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_add_overloaded_Symbol_rank0_taggedData_rank1(self):
      arg0=Symbol(shape=())
      arg1=Data(numarray.array([4.231368041965883, -4.4013971070790703]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([-3.6855298770013012, -1.2929884812069514]))
      res=arg0+arg1
      s0=numarray.array(2.84155105109)
      sub=res.substitute({arg0:s0})
      ref=Data(numarray.array([7.0729190930555035, -1.5598460559894498]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([-0.84397882591168072, 1.548562569882669]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_add_overloaded_Symbol_rank0_taggedData_rank2(self):
      arg0=Symbol(shape=())
      arg1=Data(numarray.array([[2.2716923801159581, 2.4614277114154319, 1.0514237712774701, 2.3687515325619426, -4.1002787098015734], [-3.560468173384078, -2.5666832217262394, -1.7342384343440678, -2.284269818337247, -4.915018194315774], [3.3813280983607363, 0.63037776510500354, -2.6011819111781778, -1.5604450665180569, -2.8572305936043172], [-3.3886195588094048, 4.184842923853985, -4.016920709486449, -4.2172825457053289, -1.8762207050868671]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[-3.1342118813199313, -3.2159979934249803, -0.90983248734422695, 0.47440238296968218, 4.5810169136648184], [-1.1043399201793438, -3.7919051368111445, 4.0782893736046315, -2.8351808495937969, -1.928877721758071], [3.4854138289567054, -2.7810235375215289, -2.2992882103363934, -3.0443291947203219, -1.1356385778104428], [-4.4940728118374418, 4.9638782122972405, 1.9515441594983463, 4.1171019138732241, 3.8458241094887899]]))
      res=arg0+arg1
      s0=numarray.array(-2.76880283902)
      sub=res.substitute({arg0:s0})
      ref=Data(numarray.array([[-0.49711045890033745, -0.30737512760086361, -1.7173790677388254, -0.40005130645435294, -6.8690815488178689], [-6.3292710124003735, -5.335486060742535, -4.5030412733603633, -5.0530726573535425, -7.6838210333320696], [0.6125252593444408, -2.138425073911292, -5.3699847501944733, -4.329247905534352, -5.6260334326206127], [-6.1574223978256999, 1.4160400848376895, -6.7857235485027445, -6.9860853847216244, -4.6450235441031626]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[-5.9030147203362269, -5.9848008324412758, -3.6786353263605225, -2.2944004560466134, 1.8122140746485229], [-3.8731427591956393, -6.56070797582744, 1.309486534588336, -5.6039836886100929, -4.6976805607743666], [0.71661098994040984, -5.5498263765378244, -5.0680910493526889, -5.8131320337366175, -3.9044414168267383], [-7.2628756508537373, 2.1950753732809449, -0.81725867951794928, 1.3482990748569286, 1.0770212704724944]]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_add_overloaded_Symbol_rank0_taggedData_rank3(self):
      arg0=Symbol(shape=())
      arg1=Data(numarray.array([[[-0.14784160783232814, -3.4496999219721394], [-1.0172727851296024, -3.8907971892421789]], [[0.38904944161453159, 3.1067797097438437], [1.308243457842245, 3.0479776412962494]], [[-2.6620127843382857, 0.13780775111537391], [3.2423288153768244, -1.5725303627159226]], [[0.31136772074727226, -4.9176534218517363], [-0.72102383872784248, 3.7479849986665634]], [[-3.12917139650007, 4.7234449598742501], [0.080406934435902855, -1.630317680103369]], [[-2.7453370329295601, -2.667315931056363], [1.9424056665979039, -2.1986275254196208]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[0.24545335590413231, -4.882085674625257], [-3.8294686349995457, -3.0357838680061189]], [[0.085951308071958721, -4.2409388804732604], [-1.0386163666377666, -2.3663644324147448]], [[-4.8080777008107445, -2.7683904356552858], [-4.0053000715390175, -2.8442899320375883]], [[-1.8650141447279744, -2.5842078097712138], [-4.5450552440926941, -3.2146903130613458]], [[-3.7463971814362074, -3.3352130581837089], [-2.9035855561500199, -3.4667682478162853]], [[4.7550450317946851, 0.54987906361700034], [3.0735337239611109, -1.3417790452642917]]]))
      res=arg0+arg1
      s0=numarray.array(-4.01740856828)
      sub=res.substitute({arg0:s0})
      ref=Data(numarray.array([[[-4.1652501761088621, -7.4671084902486733], [-5.0346813534061363, -7.9082057575187132]], [[-3.6283591266620023, -0.91062885853269027], [-2.7091651104342889, -0.96943092698028455]], [[-6.6794213526148196, -3.87960081716116], [-0.77507975289970954, -5.5899389309924565]], [[-3.7060408475292617, -8.9350619901282702], [-4.7384324070043764, -0.26942356960997049]], [[-7.1465799647766044, 0.70603639159771614], [-3.9370016338406311, -5.6477262483799029]], [[-6.7627456012060936, -6.6847244993328969], [-2.07500290167863, -6.2160360936961547]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[-3.7719552123724016, -8.8994942429017918], [-7.8468772032760796, -7.0531924362826528]], [[-3.9314572602045752, -8.2583474487497952], [-5.0560249349143005, -6.3837730006912787]], [[-8.8254862690872784, -6.7857990039318192], [-8.0227086398155514, -6.8616985003141222]], [[-5.8824227130045088, -6.6016163780477477], [-8.5624638123692272, -7.2320988813378797]], [[-7.7638057497127413, -7.3526216264602429], [-6.9209941244265538, -7.4841768160928197]], [[0.73763646351815115, -3.4675295046595336], [-0.94387484431542301, -5.3591876135408256]]]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_add_overloaded_Symbol_rank0_taggedData_rank4(self):
      arg0=Symbol(shape=())
      arg1=Data(numarray.array([[[[4.5010485600778143, -2.4394428112844668, 3.0374333449696422, -4.7663889606507226], [2.0654546194828303, -4.696996623108241, 2.5289070867635042, 0.65780415177769846], [-1.7946102912417161, 4.0226702712655378, -2.6307618199832374, -1.9664117380003288]], [[1.4205257504300448, 3.0848116635609912, -4.3309901128921133, 2.5816781560021829], [1.98739592932656, 1.9496431987326268, -0.24515198425166851, -2.6865551451056047], [4.0894349368503597, -4.8776140546557354, 2.9403229977812249, 3.7789156292168506]]], [[[3.75112053814874, -2.3546149287193319, 0.91426838791839682, -1.2211121717905273], [-3.5764088419366424, 0.068153343632031849, 3.6115648933666797, 4.7950609836969029], [4.5482408153883398, 0.85647955953738997, -2.4264114798265659, 3.5297475883542599]], [[-2.6339065403404929, -1.5299846912705894, -1.6453648079685568, 3.1714320975414907], [2.7295303313999248, 1.3588936592292313, 0.70590159398216112, 0.0062376525690446272], [3.1324590592008565, -4.1144165176754788, 4.2193199599318696, -0.49386166187075276]]], [[[1.7782539261723596, -2.6772790432879914, 0.3135123883886255, 2.2809465321644531], [-1.6035391350360562, -3.2457684546816026, 2.3086657670475805, -0.088308827161065473], [-4.2186825129103198, -4.6725179452083196, -2.1800915817091671, -4.8642457652089455]], [[-2.8897872727149041, -0.86448077056544204, -2.9984279005279104, -4.112319799765574], [2.5944099555947613, -2.5402961819962866, -4.5162095208483644, -4.2957042082135253], [1.2309096976525176, 3.3672995882994154, 0.73856013466593495, -3.7303133616580144]]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[[-4.898829233273565, -4.6709148064582244, 2.8181850854931492, -3.53719102963586], [2.8280067628493732, -2.557137413646692, 3.9346010568045351, 1.0033058673338893], [-0.63126901137643365, 2.5357415480493692, 1.9090530570853179, -1.1891908866639089]], [[3.8125800552825346, -4.7743279898028739, -3.1590909808645007, 0.28978622660003772], [-3.2436602973270179, 3.9378620469676964, -0.25687330875900027, -1.2431513240632075], [-2.855073901958034, 0.68704979936070298, -0.38653513939718831, 0.55297574964115626]]], [[[0.26824834873033154, -3.8023350703654746, 2.2494477913661983, -1.8576959511561353], [4.4315401137879569, 0.86172435784696511, -3.879894824877177, -1.4482806063304543], [-0.74897037076889905, 3.6106453948298896, -1.8380526811810229, 1.3476964159836697]], [[3.3781973484724421, 0.73379836493088213, -4.6470796259180824, -1.102781952237013], [4.4452616202956854, -3.8388255181561015, 0.82164194455244122, -2.5674995073874984], [-4.4698560648563053, -1.0877234401319278, -0.39195692973236618, -4.055518011746714]]], [[[2.987000185950083, -2.119241780461242, 2.4612076998963692, -1.12969179310906], [-2.3781079170895456, -3.6251652731224415, -3.8841206078967119, 2.2955183412383224], [2.2178052354192612, -4.2075200116280449, 2.3404730427450504, 0.014812900400232643]], [[2.3282192042257774, -2.550712421353948, -4.9404509187995753, 1.2572697652949341], [-1.3456675897492087, 2.7348699950932023, 1.9239956292187728, 3.7583192048432945], [-2.3072051398261761, -0.83333567597773239, -4.0358836522292503, -4.6401150846497154]]]]))
      res=arg0+arg1
      s0=numarray.array(2.67446531785)
      sub=res.substitute({arg0:s0})
      ref=Data(numarray.array([[[[7.1755138779316248, 0.23502250656934365, 5.7118986628234527, -2.0919236427969121], [4.7399199373366407, -2.0225313052544305, 5.2033724046173147, 3.3322694696315089], [0.87985502661209436, 6.6971355891193483, 0.043703497870573038, 0.70805357985348172]], [[4.0949910682838553, 5.7592769814148017, -1.6565247950383029, 5.2561434738559933], [4.6618612471803704, 4.6241085165864373, 2.429313333602142, -0.012089827251794194], [6.7639002547041702, -2.2031487368019249, 5.6147883156350353, 6.4533809470706611]]], [[[6.4255858560025505, 0.31985038913447861, 3.5887337057722073, 1.4533531460632831], [-0.90194352408283196, 2.7426186614858423, 6.2860302112204902, 7.4695263015507134], [7.2227061332421503, 3.5309448773912004, 0.24805383802724457, 6.2042129062080704]], [[0.040558777513317601, 1.144480626583221, 1.0291005098852537, 5.8458974153953012], [5.4039956492537353, 4.0333589770830418, 3.3803669118359716, 2.6807029704228551], [5.806924377054667, -1.4399511998216683, 6.8937852777856801, 2.1806036559830577]]], [[[4.45271924402617, -0.0028137254341809026, 2.987977706242436, 4.9554118500182636], [1.0709261828177543, -0.5713031368277921, 4.983131084901391, 2.586156490692745], [-1.5442171950565093, -1.9980526273545092, 0.49437373614464342, -2.189780447355135]], [[-0.21532195486109362, 1.8099845472883684, -0.32396258267409994, -1.4378544819117636], [5.2688752734485718, 0.13416913585752388, -1.8417442029945539, -1.6212388903597148], [3.905375015506328, 6.0417649061532259, 3.4130254525197454, -1.0558480438042039]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[-2.2243639154197545, -1.996449488604414, 5.4926504033469596, -0.86272571178204949], [5.5024720807031837, 0.11732790420711847, 6.6090663746583456, 3.6777711851876997], [2.0431963064773768, 5.2102068659031797, 4.5835183749391284, 1.4852744311899015]], [[6.4870453731363451, -2.0998626719490634, -0.48462566301069021, 2.9642515444538482], [-0.56919497947320741, 6.6123273648215068, 2.4175920090948102, 1.431313993790603], [-0.18060858410422354, 3.3615151172145135, 2.2879301784566222, 3.2274410674949667]]], [[[2.942713666584142, -1.1278697525116641, 4.9239131092200088, 0.81676936669767519], [7.1060054316417673, 3.5361896757007756, -1.2054295070233665, 1.2261847115233562], [1.9254949470849114, 6.2851107126837, 0.83641263667278754, 4.0221617338374802]], [[6.0526626663262526, 3.4082636827846926, -1.972614308064272, 1.5716833656167974], [7.1197269381494959, -1.164360200302291, 3.4961072624062517, 0.10696581046631204], [-1.7953907470024948, 1.5867418777218827, 2.2825083881214443, -1.3810526938929035]]], [[[5.6614655038038935, 0.55522353739256847, 5.1356730177501797, 1.5447735247447505], [0.29635740076426487, -0.95069995526863105, -1.2096552900429014, 4.9699836590921329], [4.8922705532730717, -1.5330546937742344, 5.0149383605988609, 2.6892782182540431]], [[5.0026845220795879, 0.12375289649986243, -2.2659856009457648, 3.9317350831487445], [1.3287977281046017, 5.4093353129470128, 4.5984609470725832, 6.432784522697105], [0.36726017802763433, 1.8411296418760781, -1.3614183343754398, -1.965649766795905]]]]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_add_overloaded_Symbol_rank1_taggedData_rank0(self):
      arg0=Symbol(shape=(2,))
      arg1=Data(2.0170735169,self.functionspace)
      arg1.setTaggedValue(1,3.82672695724)
      res=arg0+arg1
      s0=numarray.array([1.00484796599339, 0.2880505540704581])
      sub=res.substitute({arg0:s0})
      ref=Data(numarray.array([3.0219214828921679, 2.305124070969236]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([4.8315749232336422, 4.1147775113107103]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_add_overloaded_Symbol_rank1_taggedData_rank1(self):
      arg0=Symbol(shape=(2,))
      arg1=Data(numarray.array([3.3215394211180378, 3.5981265746593944]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([2.1778784136224694, -2.3764353271397098]))
      res=arg0+arg1
      s0=numarray.array([-3.4742800315482514, 3.4103551574211437])
      sub=res.substitute({arg0:s0})
      ref=Data(numarray.array([-0.15274061043021359, 7.0084817320805382]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([-1.296401617925782, 1.0339198302814339]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_add_overloaded_Symbol_rank2_taggedData_rank0(self):
      arg0=Symbol(shape=(4, 5))
      arg1=Data(-0.986427052024,self.functionspace)
      arg1.setTaggedValue(1,4.5351324783)
      res=arg0+arg1
      s0=numarray.array([[2.0321266643272953, -2.4680764477372739, -4.3060411539602974, -2.7559649217314863, -2.4618535918318041], [-0.21747292814117358, 4.350913546702305, 3.6669815102443994, 0.71166661853854052, -3.1994657496871204], [-1.7898199030315967, 3.4336619398304347, 0.13737652216904461, 0.38886634752835114, -3.1862442896213903], [0.62247301709956915, -0.3939775549812996, 2.0325858192829029, 3.5731701337680697, 4.9760526241675151]])
      sub=res.substitute({arg0:s0})
      ref=Data(numarray.array([[1.0456996123034328, -3.4545034997611364, -5.2924682059841599, -3.7423919737553488, -3.4482806438556666], [-1.2038999801650361, 3.3644864946784425, 2.680554458220537, -0.27476043348532198, -4.1858928017109829], [-2.7762469550554592, 2.4472348878065722, -0.84905052985481788, -0.59756070449551135, -4.1726713416452528], [-0.36395403492429335, -1.3804046070051621, 1.0461587672590404, 2.5867430817442072, 3.9896255721436527]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[6.5672591426281244, 2.0670560305635552, 0.2290913243405317, 1.7791675565693428, 2.073278886469025], [4.3176595501596555, 8.8860460250031341, 8.2021139885452286, 5.2467990968393696, 1.3356667286137087], [2.7453125752692324, 7.9687944181312638, 4.6725090004698737, 4.9239988258291802, 1.3488881886794388], [5.1576054954003983, 4.1411549233195295, 6.567718297583732, 8.1083026120688988, 9.5111851024683443]]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_add_overloaded_Symbol_rank2_taggedData_rank2(self):
      arg0=Symbol(shape=(4, 5))
      arg1=Data(numarray.array([[2.5408811571936649, -2.1334521210261146, -3.9652568099895591, -3.6478783147223384, 2.1114771268028516], [3.8890945494486164, -4.899040480556101, -1.7817100838503555, 2.9407131603888335, -2.974653264828401], [-3.2299050249521732, -3.6281098048078686, -1.3080359502903427, -1.6714823247179798, -0.097718975771847738], [-1.8427361410784737, -3.557728290609151, 4.3307602449437486, 4.3011295472084239, 4.4350229540676622]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[-1.2704267330867083, 1.2361295109524075, 0.9540966315759789, 3.5337541649787489, 4.8836580966415468], [4.1067090622491875, 2.6522349387018798, 2.0355272062841205, -2.2445813788586468, 0.97737671794951986], [-4.2647489562794627, -4.3976922282457078, 0.39840800126256326, -0.66341665836320907, 4.1826246163193694], [-1.305596490949962, 0.064238811217302683, -0.063396358619006499, 2.2946376763409768, 4.6337041214815038]]))
      res=arg0+arg1
      s0=numarray.array([[0.0061599503412477219, 4.3146936147943098, 3.5941315929470505, 0.48494973223811044, 1.0436274104272503], [-3.1651610945212227, -0.76349139958966816, 1.4367481727420301, -4.3009580966562853, -2.9779235142471872], [-2.6915250975807892, 3.3006327198118317, -1.7038120201318274, -1.672784874038312, -1.1339247805382113], [-4.3386946862197275, 3.5721729964814575, 0.76523026977124875, -4.1648368747748705, 4.2172917844542646]])
      sub=res.substitute({arg0:s0})
      ref=Data(numarray.array([[2.5470411075349126, 2.1812414937681952, -0.37112521704250856, -3.1629285824842279, 3.1551045372301019], [0.72393345492739369, -5.6625318801457691, -0.3449619111083253, -1.3602449362674518, -5.9525767790755886], [-5.9214301225329624, -0.32747708499603689, -3.0118479704221701, -3.3442671987562917, -1.2316437563100591], [-6.1814308272982013, 0.014444705872306507, 5.0959905147149973, 0.13629267243355336, 8.6523147385219268]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[-1.2642667827454606, 5.5508231257467173, 4.5482282245230294, 4.0187038972168594, 5.9272855070687971], [0.94154796772796479, 1.8887435391122116, 3.4722753790261507, -6.5455394755149321, -2.0005467962976673], [-6.9562740538602519, -1.0970595084338761, -1.3054040188692642, -2.3362015324015211, 3.0486998357811581], [-5.6442911771696895, 3.6364118076987602, 0.70183391115224225, -1.8701991984338937, 8.8509959059357683]]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_add_overloaded_Symbol_rank3_taggedData_rank0(self):
      arg0=Symbol(shape=(6, 2, 2))
      arg1=Data(4.14158894912,self.functionspace)
      arg1.setTaggedValue(1,1.06697978175)
      res=arg0+arg1
      s0=numarray.array([[[4.6043956675232156, -1.7939819611951213], [2.3413306572512553, 4.2737970814645436]], [[-1.4206860728526092, -4.0638596853371043], [-3.7916815480563271, 4.5662079674933835]], [[-2.7442888086115866, 4.1309855580493053], [4.2577420257990415, -1.8097107655207578]], [[-2.5054995467769015, 1.92691180848038], [1.4885858198441548, 0.67943684407550364]], [[-0.49912977294902738, 2.8970848026790819], [-1.6758640571529062, 1.138492891645301]], [[3.0874944087385323, 2.3401300556494409], [4.4331203054131514, -3.6332015417943317]]])
      sub=res.substitute({arg0:s0})
      ref=Data(numarray.array([[[8.7459846166406692, 2.3476069879223322], [6.4829196063687089, 8.4153860305819972]], [[2.7209028762648444, 0.077729263780349278], [0.3499074010611265, 8.7077969166108371]], [[1.3973001405058669, 8.2725745071667589], [8.3993309749164951, 2.3318781835966957]], [[1.6360894023405521, 6.0685007575978336], [5.6301747689616084, 4.8210257931929572]], [[3.6424591761684262, 7.0386737517965354], [2.4657248919645474, 5.2800818407627546]], [[7.2290833578559859, 6.4817190047668944], [8.574709254530605, 0.50838740732312182]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[5.6713754492735333, -0.72700217944480361], [3.408310439001573, 5.3407768632148613]], [[-0.35370629110229146, -2.9968799035867866], [-2.7247017663060094, 5.6331877492437012]], [[-1.6773090268612689, 5.1979653397996231], [5.3247218075493592, -0.74273098377044011]], [[-1.4385197650265837, 2.9938915902306977], [2.5555656015944725, 1.7464166258258214]], [[0.56785000880129033, 3.9640645844293996], [-0.60888427540258849, 2.2054726733956187]], [[4.15447419048885, 3.4071098373997586], [5.5001000871634691, -2.566221760044014]]]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_add_overloaded_Symbol_rank3_taggedData_rank3(self):
      arg0=Symbol(shape=(6, 2, 2))
      arg1=Data(numarray.array([[[-3.2205119696448303, -2.2490349733904793], [4.7309330578342728, 0.04657431344927776]], [[-0.3936253737986215, -2.2272967031536908], [-0.18189473472768825, 2.1329990369487444]], [[-2.8571323537009574, -2.3391743717247926], [-4.785564927869757, -4.197566087277985]], [[-0.51803357013187057, -4.8885075218534615], [-3.3585297223151986, 3.0552364663746783]], [[-2.0151519611983781, 3.9345436537274772], [-2.7878957958219641, -2.6195705904754907]], [[-4.6622983911161757, 3.0345762238702996], [0.95808145500662167, 2.3032005907590172]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[3.104646508941352, -1.8350669536127073], [-1.8494877036228319, 2.5165921132539548]], [[-4.3449195335208621, -1.4036674978303032], [0.58656847358649422, 3.9825780978594274]], [[-4.9368312337184133, -0.042185221712557563], [-2.4903344676247419, 3.7410025704065433]], [[-2.2093033763679437, 3.7351383406586951], [2.1672851266703494, -1.9415031622540333]], [[-4.4057143358398667, 1.3704466489896756], [0.44171097788911684, 1.3603733891149092]], [[3.7432273916816836, 4.8577379208019238], [2.294252392567973, 4.2678497661549475]]]))
      res=arg0+arg1
      s0=numarray.array([[[0.33409445301712548, 1.0262876775832419], [0.62203428397303817, 0.51066294504137844]], [[-4.1549113652076786, -4.2504735496647204], [-2.0019465032056152, 4.8054738870828242]], [[-4.3658355024726774, 0.2553620331523998], [-0.79889155802600875, -3.3547936760431227]], [[0.40231279215622973, 4.2664467271600302], [-1.7175380098400339, -0.81865406700567434]], [[-0.64588705255776091, 1.6059018168999337], [2.8292560276929528, 0.10018639544890462]], [[2.3376478522877395, 0.023210406810374451], [-1.2986529924243637, -4.0319968926337122]]])
      sub=res.substitute({arg0:s0})
      ref=Data(numarray.array([[[-2.8864175166277048, -1.2227472958072374], [5.3529673418073109, 0.5572372584906562]], [[-4.5485367390063001, -6.4777702528184111], [-2.1838412379333034, 6.9384729240315686]], [[-7.2229678561736348, -2.0838123385723928], [-5.5844564858957657, -7.5523597633211077]], [[-0.11572077797564084, -0.62206079469343134], [-5.0760677321552325, 2.2365823993690039]], [[-2.661039013756139, 5.5404454706274109], [0.041360231870988695, -2.5193841950265861]], [[-2.3246505388284362, 3.057786630680674], [-0.34057153741774204, -1.728796301874695]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[3.4387409619584774, -0.80877927602946542], [-1.2274534196497937, 3.0272550582953333]], [[-8.4998308987285398, -5.654141047495024], [-1.415378029619121, 8.7880519849422516]], [[-9.3026667361910906, 0.21317681143984224], [-3.2892260256507506, 0.38620889436342054]], [[-1.806990584211714, 8.0015850678187252], [0.44974711683031554, -2.7601572292597076]], [[-5.0516013883976276, 2.9763484658896093], [3.2709670055820697, 1.4605597845638139]], [[6.0808752439694231, 4.8809483276122982], [0.99559940014360926, 0.2358528735212353]]]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_add_overloaded_Symbol_rank4_taggedData_rank0(self):
      arg0=Symbol(shape=(3, 2, 3, 4))
      arg1=Data(-3.36975935987,self.functionspace)
      arg1.setTaggedValue(1,3.58602218193)
      res=arg0+arg1
      s0=numarray.array([[[[-3.6605228616502314, 0.78674534918464545, 0.69312789575915001, 2.356131819716019], [0.48601839576294559, -0.8628798777934481, 2.0026054240640327, -2.8438553618805074], [2.18593941055701, 0.25091342560107233, -0.44940571292306508, -1.8489414934427248]], [[-1.6568919674937996, 1.4484497570863928, -1.2264293885684063, -4.7716825946229005], [-1.3057144095360087, -3.9748266764998927, -2.0153241631008232, 0.8906992201061259], [3.1404890626229403, -2.3225000581193034, -4.7546142656597512, 1.0875541812566327]]], [[[-4.9205226888839535, -0.34316300298918989, 0.8558352751277134, -3.4000447507892417], [-3.0159227232102994, -3.1011841180365698, -3.4973942534946834, 2.6602665320705743], [-3.576305734030345, 4.5522646489279559, -1.9313889864968314, -1.7583554713364027]], [[-2.1597288443976992, -0.87844191426882734, 1.6629079858036864, 1.6896187755779879], [4.4293625595362176, -3.3382654120448785, -2.3507247228257433, 0.26479000769794858], [-3.0180130358534916, -1.2605639144806311, -0.98298619931606979, -2.137834133062908]]], [[[-2.0419939573204591, -2.6632590751077245, 4.8052724398948197, 2.322278323818975], [-2.1060352956778869, 2.7184916976977158, 4.6875011554708408, -4.9682643309417891], [-0.28424615713109525, -3.7631316336804597, 0.1225411062888595, 2.4120376904759002]], [[2.7686219370779028, 4.8049949856048499, -1.1346120770786539, -2.9443051480041191], [4.7732765254402914, 1.6848474249715109, -3.1920023076915047, -1.5880107209289274], [-3.5864061777464897, -2.8246690408805364, -3.6011040408748474, 3.7248241863617704]]]])
      sub=res.substitute({arg0:s0})
      ref=Data(numarray.array([[[[-7.0302822215191769, -2.5830140106843, -2.6766314641097955, -1.0136275401529264], [-2.8837409641059999, -4.2326392376623936, -1.3671539358049127, -6.2136147217494528], [-1.1838199493119355, -3.1188459342678732, -3.8191650727920106, -5.2187008533116703]], [[-5.0266513273627451, -1.9213096027825527, -4.5961887484373518, -8.1414419544918459], [-4.6754737694049542, -7.3445860363688382, -5.3850835229697687, -2.4790601397628196], [-0.22927029724600523, -5.6922594179882484, -8.1243736255286976, -2.2822051786123128]]], [[[-8.2902820487528999, -3.7129223628581354, -2.5139240847412321, -6.7698041106581872], [-6.3856820830792449, -6.4709434779055153, -6.8671536133636284, -0.7094928277983712], [-6.9460650938992909, 1.1825052890590104, -5.3011483463657765, -5.1281148312053482]], [[-5.5294882042666451, -4.2482012741377728, -1.7068513740652591, -1.6801405842909576], [1.0596031996672721, -6.7080247719138235, -5.7204840826946892, -3.1049693521709969], [-6.387772395722437, -4.6303232743495766, -4.3527455591850153, -5.5075934929318535]]], [[[-5.4117533171894046, -6.03301843497667, 1.4355130800258742, -1.0474810360499704], [-5.4757946555468324, -0.65126766217122967, 1.3177417956018953, -8.3380236908107346], [-3.6540055170000407, -7.1328909935494051, -3.247218253580086, -0.95772166939304526]], [[-0.60113742279104265, 1.4352356257359045, -4.5043714369475989, -6.3140645078730646], [1.4035171655713459, -1.6849119348974346, -6.5617616675604502, -4.9577700807978733], [-6.9561655376154352, -6.1944284007494819, -6.9708634007437933, 0.35506482649282489]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[-0.074500679717217189, 4.3727675311176597, 4.2791500776921643, 5.9421540016490333], [4.0720405776959598, 2.7231423041395661, 5.588627605997047, 0.74216682005250689], [5.7719615924900243, 3.8369356075340866, 3.1366164690099492, 1.7370806884902894]], [[1.9291302144392146, 5.034471939019407, 2.3595927933646079, -1.1856604126898862], [2.2803077723970056, -0.38880449456687849, 1.5706980188321911, 4.4767214020391402], [6.7265112445559545, 1.2635221238137109, -1.168592083726737, 4.673576363189647]]], [[[-1.3345005069509392, 3.2428591789438244, 4.4418574570607277, 0.18597743114377252], [0.57009945872271484, 0.48483806389644446, 0.088627928438330894, 6.2462887140035885], [0.0097164479026692341, 8.1382868308609702, 1.6546331954361828, 1.8276667105966116]], [[1.4262933375353151, 2.7075802676641869, 5.2489301677367006, 5.2756409575110021], [8.0153847414692319, 0.24775676988813577, 1.235297459107271, 3.8508121896309628], [0.56800914607952269, 2.3254582674523832, 2.6030359826169445, 1.4481880488701062]]], [[[1.5440282246125552, 0.92276310682528973, 8.3912946218278339, 5.9083005057519893], [1.4799868862551273, 6.3045138796307301, 8.273523337403855, -1.3822421490087748], [3.301776024801919, -0.17710945174744541, 3.7085632882218738, 5.9980598724089145]], [[6.3546441190109171, 8.3910171675378642, 2.4514101048543604, 0.64171703392889512], [8.3592987073733056, 5.2708696069045251, 0.39401987424150953, 1.9980114610040869], [-0.00038399581347547951, 0.76135314105247787, -0.015081858941833115, 7.3108463682947846]]]]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_add_overloaded_Symbol_rank4_taggedData_rank4(self):
      arg0=Symbol(shape=(3, 2, 3, 4))
      arg1=Data(numarray.array([[[[3.9920807219193897, -4.5779739122960814, 4.5854534474997717, 3.2053142858372432], [2.8103397320902959, 4.9887764787465052, -0.52104124325955858, -1.8304110130896789], [1.3476486726221824, 1.444586532940364, -2.8874874461741227, 4.7876918056255811]], [[0.32316601458590188, 4.0894528632998917, 4.8402123594565474, 1.8268831354386119], [-2.5011227376476155, 2.130885197340743, 2.3501863571803945, 2.2636248166847359], [4.3454634016962661, -3.6587132104500473, 4.1938822903422803, 4.5927019790778125]]], [[[4.1422390609491586, -3.6002479260604603, -3.6918409940192509, -1.7953734942280111], [-4.8502630024874547, -4.7798365314864171, 3.1688114559185223, 0.88922741455283294], [4.0481876389748201, -2.6381809250897534, -1.9172124638082777, -2.8643429131533757]], [[-4.5492217514143105, 1.4324260350216615, -4.0964979250283395, 1.8344180535783527], [-2.8280504816066743, 3.1267777791151357, -0.39744880561352147, 2.5151034893636552], [-3.2187654237677599, -1.5879534276446639, -2.4844582786538649, 1.0285593253922407]]], [[[2.1483393271306426, -0.82895044643683047, -3.6683933289992976, 3.4020823272421552], [0.68263426813779837, 2.5071012114514977, 1.5932728069205151, -0.24429515277727809], [0.12440513060382585, 0.7222354527954602, 3.0356107482664161, -4.7505779425615025]], [[2.4875772405314853, 4.4158781697482894, -2.6351083580954904, 0.8381210174584508], [-2.2830261919990456, -0.25946831547207871, -1.7069509953536399, -2.2084311793129672], [-0.06039777259593837, -2.4801513242961635, -0.72622140267950819, 3.1327810122509661]]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[[3.273834311258998, 4.9864339157750006, -4.9358871998952321, 3.5071802027851575], [-4.8114572451994375, -0.80304115279530741, 1.5643231640545814, 3.8230682007724059], [0.85299563337592943, -4.158266846305084, 2.4138189279533453, 0.097164865292410418]], [[-3.554337825548143, -0.11973908656716148, -1.0499425985929154, 0.39692971194033078], [1.9813600598024736, -2.3737590093149796, 1.170237744085374, 2.0638229237429382], [1.4105482366566324, 0.29337444922205158, 2.4538711842566121, -0.0047740657967052513]]], [[[-0.19528787703746175, -3.8808419447303399, 1.8708621308065077, -2.5156413982203727], [-3.2540849307678066, 2.7709651374501965, 2.5912058791275232, -3.0678428758626786], [-0.027258602126829956, 4.909027422760591, -0.88633715465297058, -1.1410073309815862]], [[-1.5598004826145182, -0.91564403517654736, -1.8501749804585419, 4.4203317135295013], [3.1407546235218433, 0.7930661561500516, 3.6200305484872271, -2.4175847845505825], [3.4943892757751911, -2.0394617308666163, -0.91659937591484297, 0.80866589463421956]]], [[[0.19341168503424822, -4.7148719793671559, 3.274571842969408, 0.6119360153516773], [-3.2075869313858139, -4.8762549026419686, -3.2736755992803399, -1.8211683266992837], [4.3190197696915202, 4.3180352261041595, -2.5728337833363391, -3.0273355465813347]], [[4.2853943606217797, -4.7972904925433504, -2.0174700804989119, 2.4544152021491943], [-4.016373677783732, -3.939264549765725, 1.0506570273475635, -0.4995582338608715], [-3.0864202192902068, 0.10338454287138976, -1.1620378958229036, -2.7999306270260025]]]]))
      res=arg0+arg1
      s0=numarray.array([[[[-1.9606269781907946, 2.9564445954233642, -2.6927221994669983, 1.8149397934456406], [-0.1240065473763261, -3.2713778582534525, 2.8345053055312972, -1.1855553458400236], [-3.7306436145529043, 0.99040960799143907, 0.96164189944624301, -3.8746836741206057]], [[-1.5458213361044404, 2.0520973187751768, 3.9962581611203287, -0.10154351687472385], [-0.81709600069978183, -3.7391938728220375, -1.7397779297069746, -1.513656766226712], [0.17870995650604371, -3.8847554698278874, 4.7221660788359578, -3.7059099777153914]]], [[[-2.4305965097157154, -0.49488157626753715, -3.639340293226101, -1.2169702277529417], [0.6702208753252954, 4.6593055404785702, 3.6809782027074771, -2.9906651842732668], [-1.6265193079740636, -4.825462221408614, -4.2902897820886299, -3.5917971387811565]], [[-4.0833359290082676, -2.4937585589598266, 1.7123080356591025, 2.0901928325549708], [-3.2067337309200949, 1.8691517018587698, -0.32982822629637276, -4.1793523729656794], [-3.3724315549166537, -0.42338571644645207, 4.5594485247020842, -3.6057443697914215]]], [[[3.1481920082172046, -2.6902148629888325, -0.75464109831149795, -2.4255137650319947], [-3.9512297039705278, -2.3880921546340792, 1.2468121458587254, 0.9373949098822294], [0.55522163251791046, 3.1464345910544331, -0.66815643085783627, -3.5771938122909397]], [[0.68974302974669222, -3.7231991714128956, 3.9850049568812445, -1.4032569743070136], [1.9663650753565101, 1.3119084983627989, -0.3641457290443082, -2.4799503614599363], [-1.0260253244116302, 2.4638209809858633, 1.9864365050313335, 4.3082596098007304]]]])
      sub=res.substitute({arg0:s0})
      ref=Data(numarray.array([[[[2.0314537437285951, -1.6215293168727172, 1.8927312480327734, 5.0202540792828838], [2.6863331847139698, 1.7173986204930527, 2.3134640622717386, -3.0159663589297026], [-2.3829949419307219, 2.4349961409318031, -1.9258455467278797, 0.9130081315049754]], [[-1.2226553215185385, 6.1415501820750684, 8.8364705205768761, 1.7253396185638881], [-3.3182187383473973, -1.6083086754812945, 0.61040842747341983, 0.74996805045802395], [4.5241733582023098, -7.5434686802779343, 8.9160483691782382, 0.88679200136242109]]], [[[1.7116425512334432, -4.0951295023279979, -7.3311812872453519, -3.0123437219809528], [-4.1800421271621593, -0.12053099100784692, 6.8497896586259994, -2.1014377697204338], [2.4216683310007565, -7.4636431464983675, -6.207502245896908, -6.4561400519345327]], [[-8.632557680422579, -1.061332523938165, -2.384189889369237, 3.9246108861333235], [-6.0347842125267697, 4.9959294809739054, -0.72727703190989423, -1.6642488836020242], [-6.5911969786844136, -2.0113391440911159, 2.0749902460482192, -2.5771850443991808]]], [[[5.2965313353478471, -3.519165309425663, -4.423034427310796, 0.97656856221016053], [-3.2685954358327294, 0.11900905681741847, 2.8400849527792404, 0.69309975710495131], [0.67962676312173631, 3.8686700438498933, 2.3674543174085798, -8.3277717548524421]], [[3.1773202702781775, 0.69267899833539381, 1.3498965987857541, -0.56513595684856277], [-0.31666111664253549, 1.0524401828907202, -2.0710967243979481, -4.6883815407729035], [-1.0864230970075686, -0.016330343310300144, 1.2602151023518253, 7.4410406220516965]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[1.3132073330682035, 7.9428785111983649, -7.6286093993622304, 5.3221199962307981], [-4.9354637925757636, -4.0744190110487599, 4.3988284695858786, 2.6375128549323823], [-2.8776479811769748, -3.167857238313645, 3.3754608273995883, -3.7775188088281952]], [[-5.1001591616525834, 1.9323582322080153, 2.9463155625274133, 0.29538619506560693], [1.1642640591026918, -6.1129528821370176, -0.56954018562160069, 0.55016615751622622], [1.5892581931626761, -3.5913810206058359, 7.17603726309257, -3.7106840435120967]]], [[[-2.6258843867531771, -4.3757235209978766, -1.7684781624195933, -3.7326116259733144], [-2.5838640554425112, 7.4302706779287666, 6.2721840818350003, -6.0585080601359458], [-1.6537779101008936, 0.083565201351976981, -5.1766269367416005, -4.7328044697627423]], [[-5.6431364116227858, -3.4094025941363739, -0.13786694479943939, 6.5105245460844721], [-0.065979107398251635, 2.6622178580088214, 3.2902023221908543, -6.5969371575162619], [0.1219577208585374, -2.4628474473130684, 3.6428491487872412, -2.797078475157202]]], [[[3.3416036932514528, -7.4050868423559884, 2.51993074465791, -1.8135777496803174], [-7.1588166353563416, -7.2643470572760478, -2.0268634534216146, -0.88377341681705435], [4.8742414022094307, 7.4644698171585926, -3.2409902141941753, -6.6045293588722744]], [[4.9751373903684719, -8.520489663956246, 1.9675348763823326, 1.0511582278421807], [-2.0500086024272219, -2.6273560514029262, 0.6865112983032553, -2.9795085953208078], [-4.1124455437018366, 2.5672055238572531, 0.82439860920842989, 1.5083289827747279]]]]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_sub_overloaded_float_rank0_taggedData_rank0(self):
      arg0=2.24633892242
      arg1=Data(2.12331690395,self.functionspace)
      arg1.setTaggedValue(1,-3.57945011345)
      res=arg0-arg1
      ref=Data(0.12302201847,self.functionspace)
      ref.setTaggedValue(1,5.82578903587)
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_sub_overloaded_float_rank0_taggedData_rank1(self):
      arg0=4.36937077047
      arg1=Data(numarray.array([-0.8596348478870528, 4.9634041759958727]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([1.7796254796584527, 0.29688626044431388]))
      res=arg0-arg1
      ref=Data(numarray.array([5.2290056183616418, -0.5940334055212837]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([2.5897452908161362, 4.0724845100302751]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_sub_overloaded_float_rank0_taggedData_rank2(self):
      arg0=-3.61750107712
      arg1=Data(numarray.array([[-1.4971895854479502, -4.3382182424687556, -4.746147516186209, 2.7830979159397078, 3.6315907342794382], [-3.8468185460872286, 2.8342418655175532, -0.026796419492885803, -2.9627548546321325, -3.705469064070245], [-4.0382593327174368, -4.0755855410260029, -2.9961923784962172, 4.0269129356067186, -4.0804410511199398], [3.1517955168355059, 4.9670475785543857, 3.1343680969174219, 0.11943878269518127, 0.41324038781581418]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[1.1785908847416771, -4.3645441489070036, 1.6337481333804336, -0.10034452865834709, -2.1875540224321091], [2.3849168435941177, -4.7967726523464451, 1.3872226467081408, 4.5127180252194812, -1.9306808054309901], [-2.9522583030391223, 4.4345991252371793, -3.8122990278625801, 4.1399154587564553, -2.8122237852911702], [-2.5444378920775677, 0.39323904870532811, -0.28112845979059742, 4.337251242767131, -0.46239162049305005]]))
      res=arg0-arg1
      ref=Data(numarray.array([[-2.1203114916712815, 0.7207171653495239, 1.1286464390669773, -6.4005989930589395, -7.24909181139867], [0.22931746896799687, -6.4517429426367849, -3.5907046576263459, -0.65474622248709924, 0.087967986951013266], [0.42075825559820501, 0.45808446390677116, -0.62130869862301452, -7.6444140127259503, 0.46293997400070808], [-6.7692965939547376, -8.5845486556736184, -6.7518691740366537, -3.736939859814413, -4.0307414649350459]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[-4.7960919618609088, 0.74704307178777185, -5.2512492104996653, -3.5171565484608847, -1.4299470546871227], [-6.0024179207133495, 1.1792715752272134, -5.0047237238273725, -8.1302191023387138, -1.6868202716882417], [-0.66524277408010946, -8.0521002023564101, 0.19479795074334838, -7.757416535875687, -0.80527729182806151], [-1.0730631850416641, -4.0107401258245599, -3.3363726173286343, -7.9547523198863628, -3.1551094566261817]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_sub_overloaded_float_rank0_taggedData_rank3(self):
      arg0=-1.81931893096
      arg1=Data(numarray.array([[[-4.7434926794164367, 3.0404560011878594], [-2.5884243950167929, 0.37329702651201391]], [[0.33126396800144065, -3.2881284307415894], [-1.2510206104014978, 4.3904149422069487]], [[3.0552670030174909, -2.7655569610848163], [4.2072012978003244, 0.086014727108176814]], [[1.4980997623462269, -3.783344188558877], [0.14598797174621936, 3.4128042687217217]], [[2.3703197483353167, 0.48125867599148719], [-3.9587282772907972, -1.867708198016762]], [[-0.47788235243159605, -1.9748182761911872], [-2.9383131474487225, 2.732060889687828]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[-1.6924722762250886, 1.50437936350718], [-3.4230909990573966, -1.3705958394745554]], [[0.7861262779488829, 1.7289037456780267], [3.0191345201237834, -2.7628573155436187]], [[-4.4609466717161785, 3.9437622422665815], [-4.9525230015153152, -4.2434856753843881]], [[-3.3328287941537438, -3.1592945368805534], [3.6337692644740009, 1.5774167134124903]], [[0.32077929918608028, 2.708525022489523], [4.152804097840546, 2.9541045856849752]], [[3.9963443256490834, -0.62536733843375902], [1.6310965920678013, 4.1177408597808132]]]))
      res=arg0-arg1
      ref=Data(numarray.array([[[2.924173748461091, -4.8597749321432051], [0.7691054640614472, -2.1926159574673596]], [[-2.1505828989567863, 1.4688094997862438], [-0.56829832055384788, -6.2097338731622944]], [[-4.8745859339728366, 0.94623803012947061], [-6.0265202287556701, -1.9053336580635225]], [[-3.3174186933015726, 1.9640252576035313], [-1.9653069027015651, -5.2321231996770674]], [[-4.1896386792906624, -2.3005776069468329], [2.1394093463354515, 0.04838926706141633]], [[-1.3414365785237496, 0.15549934523584152], [1.1189942164933768, -4.5513798206431737]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[-0.12684665473025714, -3.3236982944625257], [1.6037720681020509, -0.44872309148079026]], [[-2.6054452089042286, -3.5482226766333724], [-4.8384534510791291, 0.94353838458827299]], [[2.6416277407608328, -5.7630811732219271], [3.1332040705599695, 2.4241667444290425]], [[1.5135098631983981, 1.3399756059252077], [-5.4530881954293466, -3.396735644367836]], [[-2.140098230141426, -4.5278439534448687], [-5.9721230287958917, -4.7734235166403209]], [[-5.8156632566044291, -1.1939515925215867], [-3.450415523023147, -5.9370597907361589]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_sub_overloaded_float_rank0_taggedData_rank4(self):
      arg0=-2.35990788127
      arg1=Data(numarray.array([[[[1.4490282451737571, 2.3605192834281858, 0.86968066039672909, 1.5931146382109524], [3.0214271376186055, 0.50478169677473517, -1.6727134436396787, -4.4228851790088992], [-3.3894625264107772, -3.6510232513544505, 0.43690738625072978, 0.93545726357107917]], [[0.44329603471090095, -2.6214395325650752, -2.1052527609772884, -1.4368313432274151], [-1.8619862775452001, 3.9542151143337314, 3.8018899083553688, 3.6103539644974862], [-2.8313827904879729, 4.6045263679305766, 4.5440159813162904, -1.9698756214064881]]], [[[-0.8794560684105992, 2.9372094142722514, -1.9007976599328105, 3.7353687352824352], [-4.2468946588432912, 4.1696963154117412, 2.6428060884485651, 4.5527182041967293], [-4.4338626306741986, 4.66763566368639, -2.4467615047330646, -3.5701378978417675]], [[-0.42054167773123829, -4.7103818614047501, 4.3600139646072549, -4.2188829513157291], [3.4671576591234814, -2.411069602764786, -2.3208999529564212, -1.7918136861741663], [-3.2415044575976868, 4.7168476663607066, -1.773197824333578, 4.897987022168266]]], [[[-2.2865004728494687, 1.3009363510240952, 1.4483142164586855, -4.0167688655453375], [-3.0117026579788408, -0.66045912885668479, 1.5570503715959081, 0.2923747234273506], [3.2623249764746376, -2.5189769096307648, 4.1654673369225321, 1.9158153502212016]], [[4.6460755268725205, 4.0710599159347858, -2.2358353571619514, -2.2147854102227638], [-0.098880866897934183, -3.7113546793396823, 1.0502710938596769, -0.10767157406930483], [4.8755455863454387, -0.77518644176752538, 1.7949360750718402, -2.3673513023258752]]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[[1.1144779753097191, -1.3096324062462106, -4.6546641994473195, -4.0417931125670359], [2.8428722940145512, 1.948567902364954, -4.2092453089473363, -2.9901618819150855], [3.8800758289905897, 4.1780816624682551, 1.2789333796174374, -2.988575730939167]], [[-4.8364462068258192, -2.2253041218685956, -0.83849756549164489, 2.1084940204786822], [1.3896395086263036, 0.046815714473162018, 1.0040852123853075, -3.4699614240370922], [2.1674909919459964, 2.5651115860351181, 3.3915270725589455, 4.600652505220582]]], [[[2.8234551674238091, -4.7166513417043863, 2.854142805899178, -1.6316341984331451], [4.9581182311390073, 4.723600574910531, -0.044209996347966296, 0.59263089022569382], [2.6362996392842408, 1.4273104931599896, -1.8221536972115837, 0.94547031644500734]], [[-0.65051152225504172, -4.310465167883927, 3.9717429215240312, 4.9245829804720014], [0.50820209799610616, 3.8544913057316563, -2.9418779852485821, -2.3497450313556421], [-0.65657711141949715, 0.22281556830768956, -4.4173046617695979, 4.9864207816900965]]], [[[2.243584684090413, 2.2716561925075514, 2.314858500936964, 4.9448131751454518], [4.8579435535668605, -0.38247010453868224, -0.018381968238843527, -3.0270183441609033], [-3.5483983592519164, 2.8978127566849077, 1.953082571423761, -1.1328371836370978]], [[4.8401171037423953, -4.3168782844562639, 4.4270520230403712, 3.9392340955972056], [1.6723405232517834, -3.3767085090388016, 3.8489750880363438, -0.68535604066899491], [-2.1419240758294555, 3.1712701903287837, 0.83280945683256569, -0.40557550977455303]]]]))
      res=arg0-arg1
      ref=Data(numarray.array([[[[-3.808936126440039, -4.7204271646944678, -3.229588541663011, -3.9530225194772344], [-5.3813350188848874, -2.8646895780410171, -0.68719443762660326, 2.0629772977426173], [1.0295546451444952, 1.2911153700881686, -2.7968152675170117, -3.2953651448373611]], [[-2.8032039159771829, 0.2615316512987933, -0.25465512028899351, -0.9230765380388668], [-0.49792160372108185, -6.3141229956000133, -6.1617977896216507, -5.9702618457637682], [0.471474909221691, -6.9644342491968585, -6.9039238625825723, -0.39003225985979384]]], [[[-1.4804518128556827, -5.2971172955385333, -0.45911022133347146, -6.0952766165487171], [1.8869867775770093, -6.5296041966780232, -5.0027139697148471, -6.9126260854630113], [2.0739547494079167, -7.027543544952672, 0.086853623466782715, 1.2102300165754856]], [[-1.9393662035350436, 2.3504739801384682, -6.7199218458735368, 1.8589750700494472], [-5.8270655403897633, 0.051161721498504065, -0.039007928309860773, -0.56809419509211567], [0.88159657633140487, -7.0767555476269886, -0.58671005693270395, -7.2578949034345479]]], [[[-0.073407408416813258, -3.6608442322903771, -3.8082220977249674, 1.6568609842790556], [0.65179477671255892, -1.6994487524095971, -3.91695825286219, -2.6522826046936325], [-5.6222328577409195, 0.15906902836448289, -6.5253752181888141, -4.2757232314874836]], [[-7.0059834081388024, -6.4309677972010677, -0.12407252410433056, -0.14512247104351816], [-2.2610270143683477, 1.3514467980734004, -3.4101789751259588, -2.2522363071969771], [-7.2354534676117206, -1.5847214394987565, -4.1548439563381221, 0.0074434210595932804]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[-3.4743858565760011, -1.0502754750200713, 2.2947563181810375, 1.681885231300754], [-5.2027801752808331, -4.308475783631236, 1.8493374276810544, 0.63025400064880355], [-6.2399837102568716, -6.537989543734537, -3.6388412608837193, 0.62866784967288503]], [[2.4765383255595372, -0.13460375939768632, -1.521410315774637, -4.4684019017449641], [-3.7495473898925855, -2.4067235957394439, -3.3639930936515894, 1.1100535427708103], [-4.5273988732122783, -4.9250194673014001, -5.7514349538252274, -6.9605603864868639]]], [[[-5.183363048690091, 2.3567434604381043, -5.2140506871654599, -0.72827368283313687], [-7.3180261124052892, -7.0835084561768129, -2.3156978849183156, -2.9525387714919757], [-4.9962075205505228, -3.7872183744262715, -0.53775418405469821, -3.3053781977112893]], [[-1.7093963590112402, 1.950557286617645, -6.3316508027903131, -7.2844908617382833], [-2.8681099792623881, -6.2143991869979383, 0.5819701039823002, -0.010162849910639871], [-1.7033307698467848, -2.5827234495739715, 2.057396780503316, -7.3463286629563784]]], [[[-4.6034925653566949, -4.6315640737738333, -4.6747663822032459, -7.3047210564117337], [-7.2178514348331424, -1.9774377767275997, -2.3415259130274384, 0.66711046289462139], [1.1884904779856345, -5.2577206379511896, -4.3129904526900429, -1.2270706976291841]], [[-7.2000249850086773, 1.9569704031899819, -6.7869599043066531, -6.2991419768634875], [-4.0322484045180653, 1.0168006277725197, -6.2088829693026257, -1.674551840597287], [-0.21798380543682638, -5.5311780715950656, -3.1927173380988476, -1.9543323714917289]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_sub_overloaded_constData_rank0_taggedData_rank0(self):
      arg0=Data(1.02809037016,self.functionspace)
      arg1=Data(-0.791181091107,self.functionspace)
      arg1.setTaggedValue(1,-3.70038627455)
      res=arg0-arg1
      ref=Data(1.81927146126,self.functionspace)
      ref.setTaggedValue(1,4.72847664471)
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_sub_overloaded_constData_rank0_taggedData_rank1(self):
      arg0=Data(0.0129868918069,self.functionspace)
      arg1=Data(numarray.array([1.3098988208403224, 1.4483182923512326]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([0.67840096743806733, 2.3936442083617324]))
      res=arg0-arg1
      ref=Data(numarray.array([-1.2969119290334534, -1.4353314005443636]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([-0.66541407563119837, -2.3806573165548635]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_sub_overloaded_constData_rank0_taggedData_rank2(self):
      arg0=Data(-0.0812480403954,self.functionspace)
      arg1=Data(numarray.array([[3.7712418305630031, -4.8971484005214769, -4.8369259312379356, -2.325746346367489, 0.39845660941676009], [-2.9238071941965229, -4.8270989481313773, 3.7843268434582509, -3.4365906356425424, -3.3560960707045417], [1.6931267557626182, -2.8831333485991371, -4.0977632060559364, 4.1883564759729062, -1.5076727028578585], [-3.7331595256322925, 3.7026209875552158, 4.4405981370042298, 2.4415868047073994, 2.0784116901490979]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[4.8509861732696749, 2.9017918975409929, -0.7723392962684823, -3.0499830139961768, 3.4904822817726089], [1.0008665282717661, -1.0770520581464726, 1.7709908453386625, -1.2607955341433676, 3.3163818940717142], [-1.6888199195870057, -4.2346882738893097, 1.0574091718155625, -3.4849277958535971, 3.1682280666210225], [-0.12829543685832689, 2.1672438291221949, -4.2912153519093268, -4.9541883027385829, 4.9746273742365492]]))
      res=arg0-arg1
      ref=Data(numarray.array([[-3.8524898709584283, 4.8159003601260517, 4.7556778908425104, 2.2444983059720638, -0.4797046498121853], [2.8425591538010977, 4.7458509077359521, -3.8655748838536761, 3.3553425952471172, 3.2748480303091165], [-1.7743747961580434, 2.8018853082037118, 4.0165151656605111, -4.2696045163683314, 1.4264246624624333], [3.6519114852368673, -3.7838690279506411, -4.521846177399655, -2.5228348451028246, -2.1596597305445231]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[-4.9322342136651001, -2.9830399379364181, 0.69109125587305709, 2.9687349736007516, -3.5717303221680341], [-1.0821145686671914, 0.99580401775104743, -1.8522388857340877, 1.1795474937479424, -3.3976299344671395], [1.6075718791915805, 4.1534402334938845, -1.1386572122109877, 3.4036797554581719, -3.2494761070164477], [0.047047396462901681, -2.2484918695176201, 4.2099673115139016, 4.8729402623431577, -5.0558754146319744]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_sub_overloaded_constData_rank0_taggedData_rank3(self):
      arg0=Data(3.44000453865,self.functionspace)
      arg1=Data(numarray.array([[[-3.9388746105101511, 1.4831954073571421], [-3.1023759318661757, -1.1839172454640301]], [[0.66794146558085465, 2.6025800491600819], [0.14744126409518543, -1.1543290517588991]], [[4.0958375013525927, 2.6435957916771367], [-3.7500086450772541, 4.1581189413381896]], [[4.2161409721148342, 3.4796037958276571], [-1.933937331361447, -2.2455781965867483]], [[2.6319175595302946, 3.457588897790858], [-0.38187011758422251, 0.092522201476533894]], [[-1.8040619210028641, -4.2794719022397674], [0.76252797907423098, 0.22263766388314377]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[-3.1472858218607156, 3.2754514313462089], [-2.6995560873357691, -4.0404368140687819]], [[-2.3259291209339708, -3.6247326137991118], [4.1102222038009852, 1.9635641777177684]], [[-2.3225803186958185, 1.9328486371072948], [-0.50945128097783599, -0.47060679522847959]], [[-1.8786275652505333, 3.6243179748405119], [1.0713650100376606, -1.6868464763806621]], [[2.882871567183849, 2.7305396448594692], [-4.6527320802468548, 1.9221159768841281]], [[2.7917968308513128, 2.5730963265889875], [0.45869264002980792, -2.1472241774415735]]]))
      res=arg0-arg1
      ref=Data(numarray.array([[[7.3788791491562513, 1.9568091312889582], [6.5423804705122759, 4.6239217841101308]], [[2.7720630730652456, 0.83742448948601833], [3.2925632745509148, 4.5943335904049993]], [[-0.65583296270649249, 0.79640874696896358], [7.1900131837233543, -0.71811440269208937]], [[-0.77613643346873396, -0.039599257181556879], [5.3739418700075472, 5.685582735232849]], [[0.80808697911580563, -0.017584359144757755], [3.8218746562303227, 3.3474823371695663]], [[5.2440664596489643, 7.7194764408858676], [2.6774765595718693, 3.2173668747629565]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[6.5872903605068158, 0.16455310729989137], [6.1395606259818694, 7.4804413527148821]], [[5.765933659580071, 7.0647371524452121], [-0.67021766515488501, 1.4764403609283319]], [[5.7625848573419187, 1.5071559015388054], [3.9494558196239362, 3.9106113338745798]], [[5.3186321038966335, -0.18431343619441165], [2.3686395286084396, 5.1268510150267623]], [[0.55713297146225127, 0.70946489378663102], [8.092736618892955, 1.5178885617619722]], [[0.64820770779478742, 0.86690821205711277], [2.9813118986162923, 5.5872287160876741]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_sub_overloaded_constData_rank0_taggedData_rank4(self):
      arg0=Data(4.97460274863,self.functionspace)
      arg1=Data(numarray.array([[[[-4.9939654358053129, 2.8121895923780276, -3.3132189880007532, 3.2883910500567239], [-3.7668966821996461, -4.7163569658069591, 4.865475483012272, 0.70178121597830678], [-0.78797850297611749, 0.5026508650424022, -0.11218034048783743, 4.8110859443140832]], [[-0.22737228521368102, 0.31330308437283527, -0.23233430891622309, 1.4071716498924705], [4.3178613088512829, 4.5155219035339123, 1.5287773021107265, -4.2045559500897953], [-4.1147557416535232, -4.4072946725614681, 0.31866103551489555, 0.5672702652081929]]], [[[1.8477313057068114, 2.372709118337605, -1.452379027650518, -3.8685846326277487], [2.9606045771913294, -2.7549712378631153, 0.6737510540049696, -2.3611293889411202], [-4.6605145671510577, -2.186091110202061, -3.2002318799712604, 1.6500333799128644]], [[-3.3041893953903676, -2.006991711167716, 0.29364524725016494, 3.494664271449226], [-3.411455440593234, -1.3814323969755717, 0.21466485192673002, -4.2114205453609719], [1.0430098398789962, -0.29160913549397804, 4.7554390307005505, 2.9782292939496067]]], [[[-2.7818092271044339, -0.10587476898033366, 0.083626053133941447, 4.9094043412224337], [-2.6135110784222517, 0.32994502575664875, 3.0600967191960908, 4.4336883375063767], [-1.4094707002186766, 3.5071594943447053, 4.7346697340452533, 2.4212993404080159]], [[4.9668733723745966, -2.8618627588242584, -0.86663188371572808, -0.21063551167715655], [-3.5805670477769658, -3.6648213026105116, 1.1106487824151303, 2.8506957841193969], [-4.4180869040538262, 2.2886269655814404, 3.4061890748233168, -0.76685528936654102]]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[[-4.0783112227489218, 4.1950957573806456, 4.1628770934316979, 4.1560047372684519], [4.6570893725412503, 0.71747291148839043, 1.4400808124530027, 1.8637759059170147], [4.4147878467456305, 0.46126741843091423, -4.0297303517253011, 2.7202250336251499]], [[-2.4166221864765847, 1.8089640972185972, -2.6299310125853603, 0.6245840780532621], [-1.6730139037128899, 1.8264717286533925, 0.74518684445651218, -2.8545127387744982], [-0.7610429982033482, -1.7250893561452409, -0.76151488774043674, -3.0602982250270205]]], [[[-0.24391000630833126, 3.7031222364454948, -1.8026059626186774, 2.6935768774093907], [-3.1279150230919606, 2.7026378705781893, -4.61777217852425, -4.413757664588597], [-3.9929537923619565, 1.647444640842135, 4.3017959650511077, 0.89206851539878329]], [[-0.31324451849494839, 3.8280725186576845, 3.056128734015358, 0.4454572852211669], [-3.5257356135444118, -2.9600105721177563, -4.146701151131273, 3.7344978222617957], [-2.4807880051425126, 2.2631452772119722, -1.7711183470918135, 0.75085178485126391]]], [[[4.6395781393482878, 3.9583438115541831, -1.9692732936234334, -2.5266629403937326], [1.3242465522981162, -3.3286905542266765, -0.6623109616851508, 2.9998719044863993], [-0.3186266244866065, 3.7404850389828663, 2.6258647394991952, 4.3361646526434789]], [[4.2902500691540251, 1.3515071925423792, 1.4971141405134736, 2.5271836341642162], [-3.1289885078146398, -0.81501688109510173, -1.9675782437227198, -4.8653339604630341], [-4.046657308109066, -3.5782875338252706, -0.090828356135278732, -3.1093305846714081]]]]))
      res=arg0-arg1
      ref=Data(numarray.array([[[[9.9685681844332912, 2.1624131562499507, 8.2878217366287323, 1.6862116985712543], [8.7414994308276235, 9.6909597144349373, 0.10912726561570629, 4.2728215326496715], [5.7625812516040957, 4.471951883585576, 5.0867830891158157, 0.16351680431389504]], [[5.2019750338416593, 4.661299664255143, 5.2069370575442013, 3.5674310987355078], [0.6567414397766953, 0.45908084509406599, 3.4458254465172518, 9.1791586987177745], [9.0893584902815014, 9.3818974211894464, 4.6559417131130827, 4.4073324834197853]]], [[[3.1268714429211668, 2.6018936302903732, 6.4269817762784962, 8.8431873812557278], [2.0139981714366488, 7.7295739864910935, 4.3008516946230086, 7.3357321375690985], [9.635117315779036, 7.1606938588300393, 8.174834628599239, 3.3245693687151139]], [[8.2787921440183467, 6.9815944597956943, 4.6809575013778133, 1.4799384771787523], [8.3860581892212132, 6.35603514560355, 4.7599378967012482, 9.1860232939889492], [3.931592908748982, 5.2662118841219563, 0.21916371792742773, 1.9963734546783716]]], [[[7.7564119757324121, 5.0804775176083119, 4.8909766954940368, 0.065198407405544501], [7.58811382705023, 4.6446577228713295, 1.9145060294318874, 0.54091441112160155], [6.3840734488466548, 1.4674432542832729, 0.23993301458272498, 2.5533034082199624]], [[0.007729376253381659, 7.8364655074522371, 5.8412346323437063, 5.1852382603051348], [8.5551697964049431, 8.639424051238489, 3.8639539662128479, 2.1239069645085813], [9.3926896526818044, 2.6859757830465378, 1.5684136738046615, 5.7414580379945193]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[9.0529139713768991, 0.77950699124733269, 0.81172565519628037, 0.81859801135952637], [0.31751337608672792, 4.2571298371395878, 3.5345219361749756, 3.1108268427109635], [0.55981490188234773, 4.513335330197064, 9.0043331003532785, 2.2543777150028284]], [[7.3912249351045629, 3.1656386514093811, 7.6045337612133386, 4.3500186705747161], [6.6476166523408686, 3.1481310199745858, 4.2294159041714661, 7.8291154874024764], [5.7356457468313264, 6.6996921047732192, 5.736117636368415, 8.0349009736549988]]], [[[5.2185127549363095, 1.2714805121824835, 6.7772087112466561, 2.2810258712185876], [8.1025177717199384, 2.271964878049789, 9.5923749271522283, 9.3883604132165743], [8.9675565409899356, 3.3271581077858432, 0.67280678357687052, 4.082534233229195]], [[5.2878472671229266, 1.1465302299702937, 1.9184740146126202, 4.5291454634068113], [8.5003383621723891, 7.9346133207457346, 9.1213038997592513, 1.2401049263661825], [7.4553907537704909, 2.711457471416006, 6.7457210957197917, 4.2237509637767143]]], [[[0.33502460927969047, 1.0162589370737951, 6.9438760422514116, 7.5012656890217109], [3.6503561963298621, 8.3032933028546552, 5.636913710313129, 1.974730844141579], [5.2932293731145847, 1.2341177096451119, 2.3487380091287831, 0.6384380959844993]], [[0.68435267947395317, 3.6230955560855991, 3.4774886081145047, 2.447419114463762], [8.103591256442618, 5.78961962972308, 6.9421809923506981, 9.8399367090910133], [9.0212600567370451, 8.552890282453248, 5.065431104763257, 8.0839333332993863]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_sub_overloaded_constData_rank1_taggedData_rank0(self):
      arg0=Data(numarray.array([-0.79901038736793328, 2.6255255493107992]),self.functionspace)
      arg1=Data(-1.58758117759,self.functionspace)
      arg1.setTaggedValue(1,1.70642894705)
      res=arg0-arg1
      ref=Data(numarray.array([0.78857079022078391, 4.2131067268995164]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([-2.5054393344144543, 0.91909660226427814]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_sub_overloaded_constData_rank1_taggedData_rank1(self):
      arg0=Data(numarray.array([1.0797249744752113, 1.3178333885770313]),self.functionspace)
      arg1=Data(numarray.array([0.25021284632176677, 4.3877975913201368]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([-2.2185901691982957, 4.7563957983664356]))
      res=arg0-arg1
      ref=Data(numarray.array([0.82951212815344455, -3.0699642027431056]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([3.298315143673507, -3.4385624097894043]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_sub_overloaded_constData_rank2_taggedData_rank0(self):
      arg0=Data(numarray.array([[-4.8787391783131007, -3.8470588922147164, -0.19444963496452505, -3.5305645297945984, 0.26950949151662762], [0.36577826024208093, 0.66607224318265246, 3.1821242393966802, -0.4809469911610833, 0.095270811015792489], [0.80254201804662451, -2.9257712286386339, -2.4023882810966359, -4.2785292458633961, -4.3163400282394502], [-1.7337230594936202, -1.5191423984004979, 0.65547710341808507, 2.9089252042771445, -0.65587650991568047]]),self.functionspace)
      arg1=Data(3.0324779868,self.functionspace)
      arg1.setTaggedValue(1,-4.09906381745)
      res=arg0-arg1
      ref=Data(numarray.array([[-7.9112171651180709, -6.8795368790196871, -3.2269276217694953, -6.5630425165995687, -2.7629684952883427], [-2.6666997265628893, -2.3664057436223178, 0.14964625259170994, -3.5134249779660536, -2.9372071757891778], [-2.2299359687583458, -5.9582492154436046, -5.4348662679016062, -7.3110072326683664, -7.3488180150444204], [-4.7662010462985904, -4.5516203852054682, -2.3770008833868852, -0.12355278252782576, -3.6883544967206507]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[-0.77967536086561395, 0.25200492523277029, 3.9046141824829617, 0.56849928765288826, 4.3685733089641143], [4.4648420776895676, 4.7651360606301392, 7.2811880568441669, 3.6181168262864034, 4.1943346284632792], [4.9016058354941112, 1.1732925888088528, 1.6966755363508508, -0.1794654284159094, -0.21727621079196346], [2.3653407579538666, 2.5799214190469888, 4.7545409208655718, 7.0079890217246312, 3.4431873075318062]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_sub_overloaded_constData_rank2_taggedData_rank2(self):
      arg0=Data(numarray.array([[0.98905346764633162, 1.3732248609436306, 4.397429151220507, -2.1129094157822639, 4.3837047847887156], [4.5116511446458798, -0.67040467095014833, -2.9903032062327917, 1.5075577468246992, 1.7401774884837762], [0.66639756874447986, 1.4708216135024177, 2.9889520580811002, -3.1085299934775534, -2.804748217043854], [4.8129148276455833, 4.5328088209804172, -2.6567224088936148, 2.6162044585469166, 3.9074765378289769]]),self.functionspace)
      arg1=Data(numarray.array([[-4.1696250451578054, 4.2290989594734913, -0.76289244885488738, -4.4131471239015898, 1.8589554494474205], [4.1102411375854828, -2.4563968045845117, -0.65743961033977971, -1.507073795796563, 3.0994379254382274], [3.376505682443419, -2.5007430025299113, 0.3294329804708962, -3.9447846538174614, -3.3161406293886078], [4.773267482001323, 0.95507869873370943, -3.5479426661416333, -4.9926441756825755, -2.5687760491529019]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[3.1749293660570785, -2.6958238484112149, -0.96353826041844481, -3.6729701793790346, -1.6796272716534775], [1.7424657771105103, -1.586088605322221, 2.0613762968625213, -1.9943430386097214, 0.25088816671456904], [-4.5765209786996923, 2.6045227458177047, 3.255421072957386, -0.90993339191823086, -3.144682517667424], [-1.8717645915890535, -1.4516156344177333, 4.1114902476456372, 4.5373004945801636, 3.2704894931398165]]))
      res=arg0-arg1
      ref=Data(numarray.array([[5.158678512804137, -2.8558740985298607, 5.1603216000753944, 2.3002377081193259, 2.5247493353412951], [0.40141000706039698, 1.7859921336343634, -2.332863595893012, 3.0146315426212622, -1.3592604369544512], [-2.7101081136989391, 3.971564616032329, 2.659519077610204, 0.83625466033990792, 0.51139241234475374], [0.039647345644260312, 3.5777301222467077, 0.89122025724801857, 7.6088486342294921, 6.4762525869818788]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[-2.1858758984107469, 4.0690487093548455, 5.3609674116389519, 1.5600607635967707, 6.0633320564421931], [2.7691853675353695, 0.91568393437207263, -5.051679503095313, 3.5019007854344206, 1.4892893217692071], [5.2429185474441722, -1.133701132315287, -0.26646901487628583, -2.1985966015593226, 0.33993430062357], [6.6846794192346373, 5.98442445539815, -6.7682126565392515, -1.921096036033247, 0.63698704468916034]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_sub_overloaded_constData_rank3_taggedData_rank0(self):
      arg0=Data(numarray.array([[[4.236932874534812, 0.36231717567629129], [-2.7021996462745657, 1.2918971009948619]], [[-1.8810105350153572, 0.99785564605686083], [2.4630012062774416, -2.6240283895118042]], [[3.8683487796304217, 2.8288868071202433], [-3.0128087934781744, 2.9990955503788932]], [[-0.44413018146576633, -3.1280754100888397], [3.6361909927794915, 3.7794623229626065]], [[0.627202122716505, 0.222859782853984], [0.62533976690390247, -0.026241189025421718]], [[-2.4586528943705277, -2.8344522287970997], [3.0528657653021511, 4.711670793694001]]]),self.functionspace)
      arg1=Data(0.533961288905,self.functionspace)
      arg1.setTaggedValue(1,3.52203863285)
      res=arg0-arg1
      ref=Data(numarray.array([[[3.7029715856295562, -0.17164411322896456], [-3.2361609351798215, 0.75793581208960603]], [[-2.414971823920613, 0.46389435715160499], [1.9290399173721857, -3.15798967841706]], [[3.3343874907251658, 2.2949255182149875], [-3.5467700823834303, 2.4651342614736373]], [[-0.97809147037102218, -3.6620366989940956], [3.1022297038742357, 3.2455010340573507]], [[0.093240833811249146, -0.31110150605127185], [0.091378477998646623, -0.56020247793067757]], [[-2.9926141832757835, -3.3684135177023555], [2.5189044763968953, 4.1777095047887451]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[0.71489424168651006, -3.1597214571720107], [-6.2242382791228676, -2.2301415318534401]], [[-5.4030491678636592, -2.5241829867914412], [-1.0590374265708604, -6.1460670223601062]], [[0.34631014678211969, -0.69315182572805867], [-6.5348474263264764, -0.52294308246940879]], [[-3.9661688143140683, -6.6501140429371421], [0.11415235993118955, 0.25742369011430455]], [[-2.894836510131797, -3.299178849994318], [-2.8966988659443995, -3.5482798218737237]], [[-5.9806915272188297, -6.3564908616454012], [-0.46917286754615084, 1.189632160845699]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_sub_overloaded_constData_rank3_taggedData_rank3(self):
      arg0=Data(numarray.array([[[-3.0640096190446311, 4.7017226581116613], [0.7835284279388155, -0.39745635348845898]], [[3.3394629033960559, -2.6398055740667816], [1.8101359197249147, -4.6424820498580548]], [[1.7990719378793596, 0.34596976722902362], [-0.14975504354193792, 1.1840728911924137]], [[2.5830929041789386, 0.51945706960248472], [-1.8880859777705039, 3.4885645256457121]], [[-0.62662328640254827, -2.6611938699196225], [-1.3239809568400087, -0.99933881412536785]], [[3.5044044929634506, 1.7999656430608777], [-1.5980186230745463, 4.7128813082795311]]]),self.functionspace)
      arg1=Data(numarray.array([[[-2.0341188021233325, 1.1017493104773823], [2.8349335939877038, 4.9429070168874514]], [[4.7581711560376938, 4.1060652658105887], [-0.7764640406994836, 0.25851573919548709]], [[-4.3750026272939646, 3.8326337762192146], [-2.6194779336500371, -3.3761892152605997]], [[4.4103575905452495, 2.3471047022411717], [-1.0191389412099507, -4.3536825783894866]], [[2.0873855516463999, 1.3544036667691026], [-2.9054129900167167, -3.5681986840949431]], [[-0.24703412063181585, -3.0673636292773496], [-0.99786809352444106, -0.072707306487659551]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[-3.326278190258396, 3.3963170583122935], [0.67107252485796032, 0.79211696655970609]], [[4.6618300492243971, 3.8467191542733588], [-4.2630503121038421, -1.0700913416381139]], [[3.8777523597532735, 2.2939322713976331], [4.6626206688494225, -2.6259991574282426]], [[-3.8959499665788542, 0.17593723058782373], [-3.1998135800875382, 0.50213444837038779]], [[-1.2351921485003881, 2.7135281131869675], [4.5286463874414711, -3.7466543137362707]], [[-4.3514670070612782, 4.529842779179889], [-3.3269370565727687, 3.2318630247675415]]]))
      res=arg0-arg1
      ref=Data(numarray.array([[[-1.0298908169212986, 3.599973347634279], [-2.0514051660488883, -5.3403633703759104]], [[-1.4187082526416379, -6.7458708398773704], [2.5865999604243983, -4.9009977890535419]], [[6.1740745651733242, -3.486664008990191], [2.4697228901080992, 4.5602621064530133]], [[-1.8272646863663109, -1.827647632638687], [-0.86894703656055317, 7.8422471040351986]], [[-2.7140088380489482, -4.0155975366887251], [1.581432033176708, 2.5688598699695753]], [[3.7514386135952664, 4.8673292723382273], [-0.60015052955010528, 4.7855886147671907]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[0.2622685712137649, 1.3054055997993679], [0.11245590308085518, -1.1895733200481651]], [[-1.3223671458283413, -6.4865247283401404], [6.0731862318287568, -3.5723907082199409]], [[-2.0786804218739139, -1.9479625041686095], [-4.8123757123913604, 3.8100720486206563]], [[6.4790428707577927, 0.34351983901466099], [1.3117276023170343, 2.9864300772753243]], [[0.60856886209783978, -5.37472198310659], [-5.8526273442814798, 2.7473154996109028]], [[7.8558715000247288, -2.7298771361190113], [1.7289184334982224, 1.4810182835119896]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_sub_overloaded_constData_rank4_taggedData_rank0(self):
      arg0=Data(numarray.array([[[[4.7645334673911215, -1.6640716365214692, -1.8498911578421673, -4.1099760509780818], [-4.1033162336762832, 2.1614516321025254, -3.7994551617676664, 0.21838858365096847], [-0.10956684632366542, 2.4514696582435036, -2.0755268534803295, -4.2205971477663056]], [[2.5039023219008216, -3.0920842447864239, 0.10113919198296095, 1.7327288166909156], [2.928438884474339, 4.4925008594251015, 0.0083800973706171789, 3.9720226048327163], [4.2182309555189299, -0.32880078406276425, -2.1291997709672184, 4.6723526688860559]]], [[[1.2822136429831534, -2.9845140214724273, -2.0374290275397011, 0.50431688950829923], [0.87204172192047658, 0.22090731215247494, -3.8301554380534562, -2.1743564629110725], [3.2703775353546529, -3.3477412383077123, 3.4894735027581962, -3.2915124649598204]], [[-4.1373042110105365, 4.7488108534899816, 3.0184563239275484, -3.2438026613473001], [-1.6480135433215182, -3.607789345939393, -4.9634324636707117, -1.8846586837493362], [4.359293636505857, -4.5807352655461662, 3.407245466585632, -2.0177313457288557]]], [[[-2.9727877945150105, -0.79959466384059397, 4.170877062070188, 4.7449158045847], [-2.1572441453156244, 1.7811334193717663, 1.0689606688558513, -2.5167434518635048], [-3.3147284837478153, -4.9553709385185929, -2.0347599526162199, -2.7940901065872046]], [[-0.71075650333327633, 3.6453052020442041, 4.2781623057903069, 4.6013084425621003], [2.6804504967028109, -4.2006549155601061, -4.099482464131694, -0.32570685423412815], [4.7512293350713648, 1.312420965253299, -0.91741803710156589, 3.8457976599770873]]]]),self.functionspace)
      arg1=Data(4.94528770508,self.functionspace)
      arg1.setTaggedValue(1,-3.32077577255)
      res=arg0-arg1
      ref=Data(numarray.array([[[[-0.18075423768472731, -6.609359341597318, -6.7951788629180161, -9.0552637560539306], [-9.048603938752132, -2.7838360729733234, -8.7447428668435148, -4.7268991214248803], [-5.0548545513995142, -2.4938180468323452, -7.0208145585561788, -9.1658848528421544]], [[-2.4413853831750272, -8.0373719498622727, -4.8441485130928879, -3.2125588883849332], [-2.0168488206015098, -0.45278684565074734, -4.9369076077052316, -0.97326510024313251], [-0.7270567495569189, -5.2740884891386131, -7.0744874760430676, -0.27293503618979287]]], [[[-3.6630740620926954, -7.9298017265482761, -6.9827167326155504, -4.4409708155675496], [-4.0732459831553722, -4.7243803929233739, -8.775443143129305, -7.1196441679869213], [-1.6749101697211959, -8.2930289433835611, -1.4558142023176526, -8.2368001700356697]], [[-9.0825919160863862, -0.19647685158586725, -1.9268313811483004, -8.189090366423148], [-6.593301248397367, -8.5530770510152418, -9.9087201687465605, -6.829946388825185], [-0.58599406856999181, -9.5260229706220159, -1.5380422384902168, -6.9630190508047045]]], [[[-7.9180754995908593, -5.7448823689164428, -0.77441064300566076, -0.20037190049114884], [-7.1025318503914736, -3.1641542857040825, -3.8763270362199975, -7.4620311569393536], [-8.2600161888236645, -9.9006586435944417, -6.9800476576920687, -7.7393778116630534]], [[-5.6560442084091251, -1.2999825030316448, -0.66712539928554193, -0.34397926251374855], [-2.2648372083730379, -9.1459426206359549, -9.044770169207542, -5.270994559309977], [-0.194058370004484, -3.6328667398225498, -5.8627057421774147, -1.0994900450987615]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[8.0853092399406705, 1.6567041360280799, 1.4708846147073817, -0.7892002784285328], [-0.78254046112673414, 5.4822274046520745, -0.47867938921811737, 3.5391643562005175], [3.2112089262258836, 5.7722454307930526, 1.2452489190692195, -0.89982137521675654]], [[5.8246780944503707, 0.22869152776312518, 3.42191496453251, 5.0535045892404646], [6.249214657023888, 7.8132766319746505, 3.3291558699201662, 7.2927983773822653], [7.5390067280684789, 2.9919749884867848, 1.1915760015823307, 7.993128441435605]]], [[[4.6029894155327025, 0.33626175107712175, 1.2833467450098479, 3.8250926620578483], [4.1928174944700256, 3.541683084702024, -0.50937966550390712, 1.1464193096384765], [6.591153307904202, -0.026965465758163276, 6.8102492753077453, 0.029263307589728615]], [[-0.81652843846098744, 8.0695866260395306, 6.3392320964770974, 0.076973111202248923], [1.6727622292280309, -0.28701357338984401, -1.6426566911211626, 1.4361170888002128], [7.680069409055406, -1.2599594929966171, 6.728021239135181, 1.3030444268206933]]], [[[0.34798797803453851, 2.5211811087089551, 7.4916528346197371, 8.065691577134249], [1.1635316272339247, 5.1019091919213153, 4.3897364414054003, 0.80403232068604424], [0.0060472888017337745, -1.6345951659690439, 1.2860158199333291, 0.52668566596234445]], [[2.6100192692162727, 6.9660809745937531, 7.5989380783398559, 7.9220842151116493], [6.0012262692523599, -0.87987914301055703, -0.77870669158214501, 2.9950689183154209], [8.0720051076209138, 4.633196737802848, 2.4033577354479831, 7.1665734325266364]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_sub_overloaded_constData_rank4_taggedData_rank4(self):
      arg0=Data(numarray.array([[[[4.3104751456554879, -2.7607367678134342, -4.7122072217303712, 1.5331789224919845], [3.868573041826588, 4.9903113202139124, 3.7025310195034269, -0.59308369710770492], [-3.0181183265579756, -0.94828795768009577, 3.8425928028384266, 2.2609715480342238]], [[1.3677657268465273, -0.44152065083012726, 2.3894950476542682, -1.2268812079846425], [4.8469265421239456, 1.2078602620300058, 4.2112950542370537, 0.69932729706676167], [3.8574554227969617, -2.3840030772030305, -2.4834200277652108, 1.6929044341032053]]], [[[-2.273054474607199, -2.4962635869053242, 3.3003203501298053, -3.2778371949870957], [0.10921044861611495, -4.8001004010585921, -3.5477788121465661, 3.5774954532517196], [-3.9346256580553032, -1.9913899200545924, 3.0080527216347672, -1.0331868148431225]], [[1.9503654682714808, 0.74389775415694448, 4.9631943042802398, 1.350519840904453], [4.9177285132168809, -4.1893796843768261, 0.55529670950590138, 1.5409995671036159], [2.2272395923616619, 4.4385726760719031, 3.9749207464654983, -4.4364918239866649]]], [[[0.17461987769469012, -2.6773901970389558, -3.7575141867485673, -1.1724207778542253], [-1.9705466137367535, -2.1093977134476951, -3.6499303698222074, -1.4470116472923458], [-2.4211615178889048, 0.48585393227154849, -3.9413355262439085, -1.7705915625955848]], [[0.60628108698177385, -1.0162839511458435, -4.4374767994295823, -2.1953657644216475], [0.87085879598093818, 2.7633543977937558, -4.8766223050745472, 1.7658080074974771], [0.089646894193396776, 4.4906177638767701, -2.4102246078300347, -3.5493027309928991]]]]),self.functionspace)
      arg1=Data(numarray.array([[[[3.3644440626127583, 1.6791499948339785, 0.17453132971140306, 3.5197475469092492], [3.7856674660475207, 2.5269060744232705, 1.2471255348413637, -0.45505571814686441], [2.4514923792397925, 2.1778866546442455, 3.3809437126012192, 2.0913291102559786]], [[1.9975118729855783, 2.2518441184243922, -0.99676771660712404, 3.1697502324553852], [-1.602912704607875, 3.3009303565870933, -1.6799613658895671, 3.2986132022149164], [4.244303243465458, 0.13215454314040453, -3.2932057059489228, 0.86217973494882028]]], [[[-0.025948795150369186, 1.6233063307977469, -2.9300756887142954, 2.6988064043430784], [-1.5451098245533679, -4.7443682500895505, 4.278254864682113, 4.7084155756140493], [-3.7516032923286047, 2.3599878033465647, -1.5786012987434872, -4.0324504744519816]], [[-0.56558825233137178, 1.9802451340055143, -0.98020837055452947, -2.6414566901878853], [3.7241277031827629, 2.606747648116424, -1.4722493621330601, -2.775670923969924], [-1.168235598161762, -0.028943572901726, -3.3854351660711721, -3.9761371126622533]]], [[[2.4843499566660068, -4.8132040710658082, 1.1648004257740769, 3.3188972148342177], [-1.1627428024579656, 4.305469992929762, -2.3594919785545434, -0.68057089668826087], [-3.9720534932879725, -1.7050451881167881, 2.758726671671468, -3.9951750732745586]], [[1.1109454689296951, 2.9085521233466629, -3.3146578602898158, 3.3821909297528734], [2.3376002373317917, -4.0463967681392248, -0.96316673173395451, 3.062381431287859], [2.9126837503075906, -3.3111284363596214, -4.903849679783967, -2.8970076302315881]]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[[0.801148565810891, -3.843453574294613, 4.8404862482054618, -1.3329252720503391], [-3.0235816319906617, -1.8103811986492646, -0.62529761823082897, 1.8164747180800003], [4.4465638190752959, 2.7083405303057102, 1.9270344218625457, 2.4568367922473788]], [[0.74821662608906969, -2.4545974189863684, 2.6779743609490394, 1.0505675148390399], [-3.8618991961171822, -0.73311076168038003, -1.8106572170792457, -1.7704171289252049], [0.28255973844341575, -4.9932662703881245, -2.1854710524075438, -2.1477470537912611]]], [[[-2.2883082608821095, -2.6812279078991641, -3.5896288405889329, -4.6960851070251604], [-1.2182562055106958, -4.6475200113742723, 0.31975965492226166, -2.2634472887339419], [-0.67638149909951828, -1.3276458626412388, -3.7955528530005358, 0.46118466593714214]], [[1.8987185969808191, 1.2465753491271681, 3.0550701896955204, -4.2399817856397659], [0.26279598537741933, -0.62786312848506309, 3.8454442689260997, -4.83367461227735], [-3.1412308139006075, 3.9244079100182976, 2.9556978128980855, 3.2491442414188239]]], [[[-4.0303930464513629, -3.9352365571459114, -2.8256980118828245, 1.2259341665479937], [2.1191481695886996, -2.0500673419885596, -1.7238581327460367, -1.4121816398564766], [2.9768430924271474, -0.70172743500396884, -2.0194146489618059, 1.329748802073297]], [[-2.0315936621558484, -1.6579282957203931, 1.1320549735163254, 3.9403244520749023], [4.1494126815767629, 3.6309050029024768, -0.89515385026624195, 2.3904595946015679], [-0.92321253354858168, -1.192789115995283, -2.6172141919396674, -4.0458897422666915]]]]))
      res=arg0-arg1
      ref=Data(numarray.array([[[[0.94603108304272965, -4.4398867626474132, -4.8867385514417743, -1.9865686244172647], [0.08290557577906732, 2.4634052457906419, 2.4554054846620632, -0.13802797896084051], [-5.4696107057977681, -3.1261746123243412, 0.46164909023720746, 0.16964243777824528]], [[-0.629746146139051, -2.6933647692545195, 3.3862627642613923, -4.3966314404400277], [6.4498392467318206, -2.0930700945570875, 5.8912564201266209, -2.5992859051481547], [-0.38684782066849621, -2.516157620343435, 0.80978567818371205, 0.83072469915438507]]], [[[-2.2471056794568298, -4.1195699177030711, 6.2303960388441002, -5.9766435993301741], [1.6543202731694828, -0.055732150969041605, -7.8260336768286791, -1.1309201223623297], [-0.1830223657266985, -4.351377723401157, 4.5866540203782549, 2.9992636596088591]], [[2.5159537206028526, -1.2363473798485698, 5.9434026748347693, 3.9919765310923383], [1.193600810034118, -6.7961273324932501, 2.0275460716389615, 4.3166704910735394], [3.3954751905234239, 4.4675162489736291, 7.3603559125366704, -0.46035471132441153]]], [[[-2.3097300789713167, 2.1358138740268524, -4.9223146125226442, -4.491317992688443], [-0.80780381127878798, -6.4148677063774571, -1.290438391267664, -0.7664407506040849], [1.5508919753990678, 2.1908991203883366, -6.7000621979153765, 2.2245835106789738]], [[-0.50466438194792129, -3.9248360744925064, -1.1228189391397665, -5.5775566941745209], [-1.4667414413508535, 6.8097511659329806, -3.9134555733405927, -1.2965734237903819], [-2.8230368561141939, 7.8017462002363915, 2.4936250719539323, -0.65229510076131092]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[3.5093265798445969, 1.0827168064811787, -9.5526934699358321, 2.8661041945423236], [6.8921546738172497, 6.800692518863177, 4.3278286377342559, -2.4095584151877052], [-7.4646821456332715, -3.656628487985806, 1.9155583809758809, -0.19586524421315499]], [[0.61954910075745762, 2.0130767681562411, -0.28847931329477117, -2.2774487228236824], [8.7088257382411278, 1.9409710237103859, 6.0219522713162998, 2.4697444259919665], [3.574895684353546, 2.609263193185094, -0.29794897535766696, 3.8406514878944664]]], [[[0.015253786274910475, 0.18496432099383986, 6.8899491907187382, 1.4182479120380647], [1.3274666541268108, -0.15258038968431986, -3.8675384670688278, 5.8409427419856614], [-3.2582441589557849, -0.66374405741335352, 6.803605574635303, -1.4943714807802646]], [[0.0516468712906617, -0.50267759497022357, 1.9081241145847194, 5.5905016265442189], [4.6549325278394615, -3.561516555891763, -3.2901475594201983, 6.3746741793809658], [5.3684704062622695, 0.5141647660536055, 1.0192229335674128, -7.6856360654054887]]], [[[4.205012924146053, 1.2578463601069556, -0.93181617486574275, -2.398354944402219], [-4.0896947833254531, -0.059330371459135556, -1.9260722370761707, -0.03483000743586917], [-5.3980046103160522, 1.1875813672755173, -1.9219208772821026, -3.1003403646688819]], [[2.6378747491376222, 0.64164434457454966, -5.5695317729459077, -6.1356902164965499], [-3.2785538855958247, -0.86755060510872095, -3.9814684548083052, -0.62465158710409074], [1.0128594277419785, 5.6834068798720532, 0.20698958410963275, 0.49658701127379246]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_sub_overloaded_taggedData_rank0_float_rank0(self):
      arg0=Data(1.71003252331,self.functionspace)
      arg0.setTaggedValue(1,-2.5807346363)
      arg1=-0.844104189763
      res=arg0-arg1
      ref=Data(2.55413671308,self.functionspace)
      ref.setTaggedValue(1,-1.73663044653)
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_sub_overloaded_taggedData_rank0_array_rank0(self):
      arg0=Data(-0.451380315905,self.functionspace)
      arg0.setTaggedValue(1,3.21861125061)
      arg1=numarray.array(3.32611031515)
      res=arg0-arg1
      ref=Data(-3.77749063105,self.functionspace)
      ref.setTaggedValue(1,-0.107499064539)
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_sub_overloaded_taggedData_rank0_array_rank1(self):
      arg0=Data(1.40176626623,self.functionspace)
      arg0.setTaggedValue(1,2.04348712993)
      arg1=numarray.array([-3.2765781149232973, -4.699220621572092])
      res=arg0-arg1
      ref=Data(numarray.array([4.6783443811523968, 6.1009868878011915]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([5.3200652448562922, 6.7427077515050868]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_sub_overloaded_taggedData_rank0_array_rank2(self):
      arg0=Data(-3.37995853633,self.functionspace)
      arg0.setTaggedValue(1,1.54248653088)
      arg1=numarray.array([[2.4698251551733028, -0.64735384648264205, -4.6862775683054192, -3.3915873689973983, -2.2870449580280994], [-2.1349753970928154, 1.6236140681686431, -1.2664478821894098, -4.4812444888764809, -1.4943763722457049], [1.9421567854898081, -2.2626541565198366, -4.9921430651918328, 2.0575958115930657, -3.5036869486684008], [-3.899527379973009, 0.6574322107215016, 0.97530743947579168, -0.10169084138355267, 1.7779645010962568]])
      res=arg0-arg1
      ref=Data(numarray.array([[-5.8497836914998764, -2.7326046898439316, 1.3063190319788456, 0.011628832670824707, -1.0929135782984742], [-1.2449831392337583, -5.0035726044952167, -2.1135106541371638, 1.1012859525499072, -1.8855821640808688], [-5.3221153218163817, -1.117304379806737, 1.6121845288652592, -5.4375543479196393, 0.12372841234182719], [0.51956884364643541, -4.0373907470480752, -4.3552659758023653, -3.2782676949430209, -5.1579230374228304]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[-0.92733862429497194, 2.1898403773609729, 6.2287640991837501, 4.9340738998757292, 3.8295314889064302], [3.6774619279711462, -0.081127537290312191, 2.8089344130677407, 6.0237310197548117, 3.0368629031240357], [-0.3996702546114772, 3.8051406873981675, 6.5346295960701637, -0.51510928071473483, 5.0461734795467317], [5.4420139108513403, 0.88505432015682928, 0.56717909140253919, 1.6441773722618835, -0.23547797021792594]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_sub_overloaded_taggedData_rank0_array_rank3(self):
      arg0=Data(-0.538125230827,self.functionspace)
      arg0.setTaggedValue(1,-2.88588950751)
      arg1=numarray.array([[[-4.3397959186930537, -2.325704490575097], [-0.23287889770386005, 3.4477826257883741]], [[2.6511811180695544, -3.4472350508590024], [4.0841375138191829, 2.4562181941546593]], [[2.5281780669519263, 4.877589928366076], [0.72338654723613338, -0.47389742926744738]], [[0.88024667177481142, -2.7048192913663325], [1.7012949461824309, -2.6551989837148926]], [[-1.1134143412764343, -2.5593636480143056], [-4.9321858334230946, 1.8987790675956964]], [[0.025806261074618142, 0.81430896125168939], [-2.5676891986715611, -1.1829645868017469]]])
      res=arg0-arg1
      ref=Data(numarray.array([[[3.8016706878663555, 1.7875792597483988], [-0.30524633312283811, -3.9859078566150723]], [[-3.1893063488962525, 2.9091098200323042], [-4.622262744645881, -2.9943434249813574]], [[-3.0663032977786244, -5.4157151591927741], [-1.2615117780628315, -0.064227801559250786]], [[-1.4183719026015096, 2.1666940605396343], [-2.2394201770091291, 2.1170737528881944]], [[0.57528911044973619, 2.0212384171876074], [4.3940606025963964, -2.4369042984223945]], [[-0.56393149190131631, -1.3524341920783876], [2.0295639678448629, 0.64483935597504871]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[1.4539064111874258, -0.56018501693053091], [-2.6530106098017678, -6.3336721332940016]], [[-5.5370706255751827, 0.5613455433533745], [-6.9700270213248103, -5.3421077016602876]], [[-5.4140675744575546, -7.7634794358717034], [-3.6092760547417613, -2.4119920782381805]], [[-3.7661361792804393, -0.18107021613929541], [-4.5871844536880584, -0.23069052379073529]], [[-1.7724751662291935, -0.32652585949132229], [2.0462963259174667, -4.7846685751013247]], [[-2.911695768580246, -3.7001984687573173], [-0.3182003088340668, -1.702924920703881]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_sub_overloaded_taggedData_rank0_array_rank4(self):
      arg0=Data(3.76364777204,self.functionspace)
      arg0.setTaggedValue(1,0.815129527037)
      arg1=numarray.array([[[[2.6498297799370985, 3.9476585386223828, 2.4282752360723521, -0.65033259761532847], [1.8759255251046429, 0.16510404195789974, 1.0817021684022974, 2.9780808694961891], [-2.0135435850116732, 0.056895278903279944, 0.24183815601845371, 0.5514309864474809]], [[-2.0797876820774297, -1.6893727085233734, 3.0561523856224611, 2.8880499802198836], [4.9578197799682684, 2.9799608118773939, 3.0975143214553196, 4.82650681155671], [-3.0609422784376195, -3.6192588989695542, 3.9263189626107948, -4.5802292247771899]]], [[[-0.57810216994370922, -3.9569081351752677, -0.12291733942454819, 0.29316433310018208], [1.805683470267577, 0.68153808006859684, 3.4414052738296093, -2.2582860698105467], [0.48121599243841295, 0.18575954313812559, -4.8387104279071513, 4.8449818517421779]], [[-0.42045608992668271, -1.8105279418131115, -4.9012217461557679, -0.31734868295748164], [-4.1824940846963221, 0.98697677383539251, -3.034027878914094, -1.6615215754131576], [-4.5411693032812783, -3.2983848717299411, -0.56960354264920721, -0.86015136866716801]]], [[[-1.3491647854481794, 3.2315180265311376, 2.2584848114034894, 2.0915800021198603], [-4.2614682597183631, -3.6322337583906741, -4.8365935452764752, 3.1114418050720243], [1.5415572200081131, 3.2535703624015646, -0.61099457720896222, 1.3266361509927114]], [[0.60814479680330624, 0.85545252579860609, -4.1851091357405927, 4.5339718557570201], [1.0054663612576658, 3.8507598660410896, -1.0153737686191002, 1.8092606691504134], [-4.977404388689175, 0.43878965902429901, -3.5087714184634731, -1.8411601868237346]]]])
      res=arg0-arg1
      ref=Data(numarray.array([[[[1.1138179920982232, -0.18401076658706117, 1.3353725359629696, 4.4139803696506501], [1.8877222469306787, 3.5985437300774219, 2.6819456036330243, 0.78556690253913253], [5.7771913570469948, 3.7067524931320417, 3.5218096160168679, 3.2122167855878407]], [[5.8434354541127513, 5.4530204805586955, 0.70749538641286058, 0.87559779181543806], [-1.1941720079329468, 0.78368696015792771, 0.66613345058000206, -1.0628590395213884], [6.8245900504729411, 7.3829066710048759, -0.16267119057547319, 8.3438769968125115]]], [[[4.3417499419790309, 7.7205559072105894, 3.8865651114598698, 3.4704834389351396], [1.9579643017677446, 3.0821096919667248, 0.32224249820571238, 6.0219338418458683], [3.2824317795969087, 3.577888228897196, 8.6023581999424721, -1.0813340797068562]], [[4.1841038619620043, 5.5741757138484331, 8.6648695181910895, 4.0809964549928033], [7.9461418567316437, 2.7766709981999291, 6.7976756509494152, 5.4251693474484792], [8.3048170753165991, 7.0620326437652627, 4.3332513146845288, 4.6237991407024897]]], [[[5.1128125574835011, 0.53212974550418402, 1.5051629606318322, 1.6720677699154614], [8.0251160317536847, 7.3958815304259957, 8.6002413173117969, 0.65220596696329736], [2.2220905520272085, 0.51007740963375703, 4.3746423492442839, 2.4370116210426103]], [[3.1555029752320154, 2.9081952462367155, 7.9487569077759144, -0.77032408372169847], [2.7581814107776559, -0.087112094005767915, 4.7790215406544219, 1.9543871028849082], [8.7410521607244966, 3.3248581130110226, 7.2724191904987947, 5.6048079588590562]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[-1.8347002529003476, -3.1325290115856319, -1.6131457090356012, 1.4654621246520794], [-1.060795998067892, 0.65002548507885116, -0.26657264136554648, -2.1629513424594382], [2.8286731120484241, 0.75823424813347096, 0.57329137101829719, 0.26369854058927]], [[2.8949172091141806, 2.5045022355601243, -2.2410228585857102, -2.0729204531831327], [-4.1426902529315175, -2.164831284840643, -2.2823847944185687, -4.0113772845199591], [3.8760718054743704, 4.4343884260063051, -3.1111894355740439, 5.3953587518139408]]], [[[1.3932316969804601, 4.7720376622120186, 0.93804686646129909, 0.52196519393656882], [-0.99055394323082613, 0.13359144696815406, -2.6262757467928584, 3.0734155968472976], [0.33391353459833795, 0.62936998389862531, 5.6538399549439022, -4.029852324705427]], [[1.2355856169634336, 2.6256574688498624, 5.7163512731925188, 1.1324782099942325], [4.997623611733073, -0.17184724679864161, 3.8491574059508449, 2.4766511024499085], [5.3562988303180292, 4.113514398766692, 1.3847330696859581, 1.6752808957039189]]], [[[2.1642943124849303, -2.4163884994943867, -1.4433552843667385, -1.2764504750831094], [5.076597786755114, 4.447363285427425, 5.6517230723132261, -2.2963122780352734], [-0.72642769297136223, -2.4384408353648137, 1.4261241042457131, -0.51150662395596047]], [[0.20698473023344466, -0.040322998761855189, 5.0002386627773436, -3.7188423287202692], [-0.19033683422091485, -3.0356303390043387, 1.8305032956558511, -0.99413114211366249], [5.7925339157259259, 0.37633986801245189, 4.323900945500224, 2.6562897138604855]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_sub_overloaded_taggedData_rank0_constData_rank0(self):
      arg0=Data(0.267698109761,self.functionspace)
      arg0.setTaggedValue(1,0.050947023036)
      arg1=Data(-1.97500370619,self.functionspace)
      res=arg0-arg1
      ref=Data(2.24270181595,self.functionspace)
      ref.setTaggedValue(1,2.02595072923)
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_sub_overloaded_taggedData_rank0_constData_rank1(self):
      arg0=Data(4.56674556359,self.functionspace)
      arg0.setTaggedValue(1,-4.52928613326)
      arg1=Data(numarray.array([2.5216603006223712, 4.6894057811765588]),self.functionspace)
      res=arg0-arg1
      ref=Data(numarray.array([2.0450852629716048, -0.12266021758258283]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([-7.050946433886339, -9.2186919144405266]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_sub_overloaded_taggedData_rank0_constData_rank2(self):
      arg0=Data(-0.167243699323,self.functionspace)
      arg0.setTaggedValue(1,-2.46352803976)
      arg1=Data(numarray.array([[4.6542448318061922, 2.6995505547257199, 2.7102016501744206, -0.15273216412903334, 4.5819767355203744], [0.66005610153358951, -3.2013279411816442, 2.171862567171309, 4.0033350301234591, 3.799249245665747], [-4.0620850485446001, -3.8153702776938712, -0.4359511838975525, -2.0683173454619208, 4.3770806856171518], [-2.4665656429848126, -1.2819192345945285, -0.38154628978331129, 0.93355701252648782, -1.5845736194272808]]),self.functionspace)
      res=arg0-arg1
      ref=Data(numarray.array([[-4.8214885311293667, -2.8667942540488944, -2.8774453494975951, -0.014511535194141167, -4.7492204348435489], [-0.82729980085676402, 3.0340842418584697, -2.3391062664944835, -4.1705787294466337, -3.9664929449889215], [3.8948413492214256, 3.6481265783706966, 0.26870748457437799, 1.9010736461387463, -4.5443243849403263], [2.2993219436616381, 1.114675535271354, 0.21430259046013678, -1.1008007118496623, 1.4173299201041063]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[-7.1177728715640862, -5.1630785944836139, -5.1737296899323146, -2.3107958756288607, -7.0455047752782685], [-3.1235841412914835, 0.73779990142375018, -4.635390606929203, -6.4668630698813532, -6.262777285423641], [1.598557008786706, 1.3518422379359771, -2.0275768558603415, -0.39521069429597322, -6.8406087253750458], [0.0030376032269185949, -1.1816088051633655, -2.0819817499745827, -3.3970850522843818, -0.87895442033061322]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_sub_overloaded_taggedData_rank0_constData_rank3(self):
      arg0=Data(-4.65253696389,self.functionspace)
      arg0.setTaggedValue(1,2.86500945645)
      arg1=Data(numarray.array([[[-4.264379056296951, -3.9913025952341141], [-1.6726952880310106, 4.3173580709434258]], [[-0.64386879846191469, -1.7363592860084784], [0.52500637197845279, 3.778635019053862]], [[-3.0944216355168619, -3.0997038973128044], [2.1936081635110147, 2.1351426969377743]], [[-1.9883478593255175, -4.7933187615525332], [-4.9399393113387333, 0.78546734930798046]], [[2.9360183805889308, 4.488666079729386], [2.1713919702383189, -4.7957276504776143]], [[-1.3383618495475091, 0.76405075629438901], [2.921505010857393, 4.1287171356156307]]]),self.functionspace)
      res=arg0-arg1
      ref=Data(numarray.array([[[-0.38815790758935442, -0.66123436865219132], [-2.9798416758552948, -8.9698950348297313]], [[-4.0086681654243908, -2.916177677877827], [-5.1775433358647582, -8.4311719829401675]], [[-1.5581153283694436, -1.5528330665735011], [-6.8461451273973202, -6.7876796608240797]], [[-2.6641891045607879, 0.14078179766622778], [0.28740234745242788, -5.4380043131942859]], [[-7.5885553444752363, -9.1412030436156915], [-6.8239289341246243, 0.14319068659130885]], [[-3.3141751143387963, -5.4165877201806945], [-7.5740419747436984, -8.7812540995019361]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[7.1293885127470986, 6.8563120516842613], [4.5377047444811582, -1.4523486144932782]], [[3.5088782549120623, 4.601368742458626], [2.3400030844716948, -0.91362556260371441]], [[5.9594310919670095, 5.964713353762952], [0.67140129293913287, 0.72986675951237334]], [[4.8533573157756651, 7.6583282180026808], [7.8049487677888809, 2.0795421071421671]], [[-0.071008924138783236, -1.6236566232792384], [0.69361748621182873, 7.6607371069277619]], [[4.2033713059976563, 2.1009587001557586], [-0.056495554407245407, -1.2637076791654831]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_sub_overloaded_taggedData_rank0_constData_rank4(self):
      arg0=Data(-3.54835004425,self.functionspace)
      arg0.setTaggedValue(1,-1.59020961265)
      arg1=Data(numarray.array([[[[4.9737863631272337, 3.9512098829181763, 3.4733837492965112, -4.6212192525155071], [-2.4644600059461941, -3.2067827474379729, 0.29251545563854719, -4.2079699988499861], [4.7955912839437111, 3.6889992007518551, -3.9279621045548172, 4.0444978689765883]], [[-3.9343062324754619, 4.5408830600522414, 4.9987649273814601, -2.9953814759228403], [-4.3007122550027574, -2.9881542076986447, 3.1779818640737716, -2.5073362095484875], [-2.5925976356292546, -4.7579626040340646, -1.6708963556821397, -4.053457733314545]]], [[[-2.0866984628487275, 2.7757901879703963, -4.7346424224476138, -4.5582572556802177], [0.067705745275526752, 1.5357197681123411, -1.2800822812006283, 4.4504837558828427], [-1.8495207355725651, 3.5239692817094124, 2.8817584161802765, -0.13236330920306827]], [[0.83601473572533447, -1.671106482360798, -0.17306575484707309, 1.5156410088238337], [-4.1646864066350755, 2.3683177323815041, 0.072761312731732808, -1.4611666923921431], [-4.3816186518888154, 3.6671834370077363, 4.4849142768771202, 1.6069030013683676]]], [[[-1.0218709572493734, -3.7514854095267971, 3.8288398425423136, -1.8777543395841958], [3.3473645170472128, -3.5848342007156688, -4.6345092686379736, 2.3467116215570138], [-3.7268495146538694, 0.77616814815380053, -3.2775695615673941, -2.788111461539188]], [[3.8526016320550198, 0.69622468672735227, -0.21826602245438487, 3.7758035262098666], [-0.8771213387128407, 1.6423606928402146, 2.3167802459656519, -0.64900142442344677], [0.19569743332784029, -4.1684508140525187, -0.026339972751976859, -2.9310913341966072]]]]),self.functionspace)
      res=arg0-arg1
      ref=Data(numarray.array([[[[-8.522136407372777, -7.4995599271637206, -7.0217337935420554, 1.0728692082699629], [-1.0838900382993502, -0.34156729680757136, -3.8408654998840914, 0.65961995460444189], [-8.3439413281892563, -7.2373492449973993, 0.37961206030927297, -7.5928479132221325]], [[0.38595618822991762, -8.0892331042977865, -8.5471149716270034, -0.55296856832270391], [0.75236221075721321, -0.56019583654689953, -6.7263319083193158, -1.0410138346970568], [-0.95575240861628963, 1.2096125597885203, -1.8774536885634046, 0.50510768906900072]]], [[[-1.4616515813968167, -6.3241402322159406, 1.1862923782020696, 1.0099072114346734], [-3.616055789521071, -5.0840698123578854, -2.268267763044916, -7.998833800128387], [-1.6988293086729791, -7.0723193259549566, -6.4301084604258207, -3.415986735042476]], [[-4.3843647799708787, -1.8772435618847463, -3.3752842893984711, -5.0639910530693779], [0.61633636238953127, -5.9166677766270483, -3.621111356977277, -2.0871833518534011], [0.83326860764327115, -7.2155334812532805, -8.0332643211226653, -5.1552530456139118]]], [[[-2.5264790869961709, 0.20313536528125287, -7.3771898867878578, -1.6705957046613484], [-6.8957145612927571, 0.036484156470124596, 1.0861592243924294, -5.8950616658025581], [0.17849947040832514, -4.3245181923993448, -0.27078048267815014, -0.76023858270635625]], [[-7.4009516763005641, -4.2445747309728965, -3.3300840217911594, -7.3241535704554108], [-2.6712287055327035, -5.1907107370857588, -5.8651302902111961, -2.8993486198220975], [-3.7440474775733845, 0.62010076980697448, -3.5220100714935674, -0.61725871004893706]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[-6.5639959757738362, -5.5414194955647789, -5.0635933619431137, 3.0310096398689046], [0.87425039329959153, 1.6165731347913703, -1.8827250682851497, 2.6177603862033836], [-6.3858008965903137, -5.2792088133984576, 2.3377524919082147, -5.6347074816231908]], [[2.3440966198288593, -6.1310926726988439, -6.5889745400280626, 1.4051718632762378], [2.7105026423561549, 1.3979445950520422, -4.7681914767203741, 0.91712659690188492], [1.0023880229826521, 3.167752991387462, 0.080686743035537134, 2.4632481206679424]]], [[[0.49648885020212496, -4.3659998006169989, 3.1444328098010113, 2.9680476430336151], [-1.6579153579221293, -3.1259293807589437, -0.31012733144597426, -6.0406933685294453], [0.25931112292596259, -5.1141788943560149, -4.471968028826879, -1.4578463034435343]], [[-2.426224348371937, 0.080896869714195407, -1.4171438577995294, -3.1058506214704362], [2.574476793988473, -3.9585273450281067, -1.6629709253783354, -0.1290429202544594], [2.7914090392422128, -5.2573930496543388, -6.0751238895237227, -3.1971126140149702]]], [[[-0.56833865539722916, 2.1612757968801946, -5.4190494551889161, 0.28754472693759325], [-4.9375741296938154, 1.9946245880690663, 3.0442996559913711, -3.9369212342036164], [2.1366399020072668, -2.3663777608004031, 1.6873599489207916, 1.1979018488925854]], [[-5.4428112447016224, -2.2864342993739548, -1.3719435901922177, -5.3660131388564691], [-0.71308827393376184, -3.2325703054868171, -3.9069898586122545, -0.94120818822315577], [-1.7859070459744428, 2.5782412014059162, -1.5638696398946257, 1.3408817215500046]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_sub_overloaded_taggedData_rank0_taggedData_rank0(self):
      arg0=Data(-0.298383943283,self.functionspace)
      arg0.setTaggedValue(1,1.96695279107)
      arg1=Data(3.35258734835,self.functionspace)
      arg1.setTaggedValue(1,-1.85793458451)
      res=arg0-arg1
      ref=Data(-3.65097129163,self.functionspace)
      ref.setTaggedValue(1,3.82488737558)
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_sub_overloaded_taggedData_rank0_taggedData_rank1(self):
      arg0=Data(0.433362615437,self.functionspace)
      arg0.setTaggedValue(1,1.10382327241)
      arg1=Data(numarray.array([0.66864921472270034, 0.033031674717114434]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([0.50254756514531707, -4.0259240927772275]))
      res=arg0-arg1
      ref=Data(numarray.array([-0.23528659928579199, 0.40033094071979392]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([0.60127570726895474, 5.1297473651914993]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_sub_overloaded_taggedData_rank0_taggedData_rank2(self):
      arg0=Data(-2.51112697639,self.functionspace)
      arg0.setTaggedValue(1,3.03412941576)
      arg1=Data(numarray.array([[-3.2511967041263903, 4.7171303473892436, -4.3432152759762275, 4.2001430854881967, -3.1450354454635301], [-0.32066407419477638, -4.3131301752380153, -0.45715485891635765, 2.348843893322984, 4.0290692636151491], [2.721893625776759, -0.076876967244096761, -3.15348862776779, 4.4278417385362907, 1.9842288538413397], [2.3885962428558285, -3.0592902409276999, -4.4116241662084255, -4.4904517708271996, 3.0570320381236105]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[-0.4963458683188815, -3.997640331727037, -2.6214367474237745, -4.6144667391452723, -0.5661032468298588], [0.59517260135558381, -1.4081917413537237, 1.7739181045438777, -2.7959311890720553, 4.2599955697879572], [0.6239370141516094, -0.42676392855667356, 1.2796563536137828, -2.8050001754870069, 1.0806906986160127], [2.7208423712544221, -4.1732157406266621, -1.7686970229615406, -1.1173678978269406, -0.033814616947406506]]))
      res=arg0-arg1
      ref=Data(numarray.array([[0.74006972773270174, -7.2282573237829322, 1.8320882995825389, -6.7112700618818852, 0.63390846906984155], [-2.1904629021989122, 1.8020031988443268, -2.0539721174773309, -4.8599708697166726, -6.5401962400088376], [-5.2330206021704475, -2.4342500091495918, 0.64236165137410151, -6.9389687149299792, -4.4953558302350283], [-4.899723219249517, 0.54816326453401132, 1.9004971898147369, 1.9793247944335111, -5.568159014517299]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[3.5304752840827476, 7.0317697474909036, 5.6555661631876406, 7.6485961549091384, 3.6002326625937249], [2.4389568144082823, 4.4423211571175898, 1.2602113112199884, 5.8300606048359214, -1.2258661540240912], [2.4101924016122567, 3.4608933443205396, 1.7544730621500833, 5.8391295912508729, 1.9534387171478533], [0.313287044509444, 7.2073451563905282, 4.8028264387254067, 4.1514973135908066, 3.0679440327112726]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_sub_overloaded_taggedData_rank0_taggedData_rank3(self):
      arg0=Data(3.64946707503,self.functionspace)
      arg0.setTaggedValue(1,1.68558911828)
      arg1=Data(numarray.array([[[3.2336881361969745, 3.0421791813696828], [-3.1779926146241069, 2.4507314368547197]], [[4.6006222808183743, 4.8133029711413471], [2.8176892654475036, 4.270603435408141]], [[1.6885585322607968, -1.7516981446455149], [-1.3247350398668392, -0.45970124002548474]], [[3.6813532160357703, -2.1567226778145967], [2.5793383691613272, -0.79795369992929288]], [[4.1261745599452944, 4.5301737204055001], [3.9993231287366271, 2.6545962238922751]], [[3.6132604031584581, 1.8889528752665026], [-3.387072501168368, -0.6896307440087881]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[2.0754300046243213, -2.7597591622034132], [-2.6328751085317803, -2.808982081049102]], [[1.0084876640723923, 4.4854950936472324], [-0.7401750910657432, 0.72281683647404904]], [[-4.3608646551893893, 4.6010786822416438], [4.7458257447953862, -2.3155327163554427]], [[0.72116999155787909, -0.18586888091778864], [2.6620620089346483, -3.2732288374966156]], [[-4.7650314476876074, -4.2483812625103967], [1.0226778292265344, -1.0619374938033999]], [[-0.1883950459567636, -1.3358197834990158], [2.2654414472034414, 0.43934146263656437]]]))
      res=arg0-arg1
      ref=Data(numarray.array([[[0.41577893883308015, 0.60728789366037184], [6.8274596896541615, 1.1987356381753349]], [[-0.95115520578831969, -1.1638358961112925], [0.83177780958255099, -0.62113636037808639]], [[1.9609085427692579, 5.4011652196755691], [4.9742021148968938, 4.1091683150555394]], [[-0.031886141005715629, 5.8061897528446513], [1.0701287058687274, 4.4474207749593475]], [[-0.47670748491523973, -0.88070664537544552], [-0.34985605370657247, 0.99487085113777951]], [[0.036206671871596541, 1.7605141997635521], [7.0365395761984226, 4.3390978190388427]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[-0.38984088634253666, 4.4453482804851978], [4.3184642268135649, 4.4945711993308866]], [[0.67710145420939227, -2.7999059753654478], [2.4257642093475278, 0.96277228180773555]], [[6.0464537734711739, -2.9154895639598593], [-3.0602366265136016, 4.0011218346372273]], [[0.96441912672390551, 1.8714579991995732], [-0.97647289065286369, 4.9588179557784002]], [[6.450620565969392, 5.9339703807921813], [0.66291128905525021, 2.7475266120851844]], [[1.8739841642385482, 3.0214089017808003], [-0.57985232892165683, 1.2462476556452202]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_sub_overloaded_taggedData_rank0_taggedData_rank4(self):
      arg0=Data(1.65415744684,self.functionspace)
      arg0.setTaggedValue(1,-1.3578282545)
      arg1=Data(numarray.array([[[[-1.9534667136679404, 1.8085010423934014, 0.54400349002870385, -1.5318882056547469], [-2.667233722430101, 0.24699106963006834, 2.5318530559448558, -2.6478151783785342], [-2.4335335340539799, -0.026273532677302036, -2.0133768944136254, 2.1649660046888952]], [[-4.9378517767629564, -2.7905677546643135, -3.5620427141239652, -1.6262682994121058], [-4.4914450871136227, 4.5095078205433623, 3.5872337637671183, 3.8874670132757299], [-3.289113445839118, -3.7622093112881618, 1.5990449875800739, -0.83672339204276103]]], [[[1.1048874936666708, 1.9657922680939999, 0.086645832099073061, 1.5812612133361181], [4.1753856590337808, 3.0116638097658441, 2.2497213957833875, 0.3919031386571783], [-4.4856543129226223, -2.6404864309341569, -1.3653043518569841, -0.59206931377936733]], [[-1.6517516856716852, 3.0553535906448364, -0.50710970081973006, 4.49333932498282], [0.7675186144415358, 3.5402882067836305, 4.1806971560502522, -4.1965865791683035], [-4.5043819749229002, -0.63003500916034927, -0.65415983221964158, -4.5042795574923602]]], [[[1.5241942172111314, -3.1146056928718346, -2.0488521508854984, -3.190735559436745], [-0.38199202519408182, -3.8836495599772034, 0.68730490551975532, -4.535956911653475], [1.5290499018533987, 2.7948701140991261, -0.92842615891784863, -2.8961536921806372]], [[-1.6241520505994886, 4.6229028790781541, 1.6317902742992469, -1.1787642785467467], [-2.0092480118383662, 0.21139330006492507, -4.9901272534770316, -2.7451412764928005], [-3.4732052952859895, -2.247667118157862, -4.7579027658815303, 3.9152337212355022]]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[[-1.2664736843727828, -1.0127613225173171, -0.12698089166399384, -2.6296726171690779], [1.568544934784355, 3.7673194948413986, -1.4034134159100811, 0.74710799359715896], [-0.28935744658767693, -4.0853538302226919, -1.8638191052183295, -1.5471542389738149]], [[-1.4766455785729935, -3.8406261898612639, 3.6467277176720163, 4.7184378937814326], [-1.0017599063074831, 0.65144422804580771, 4.9377960066242483, -4.035182938626888], [-3.8416098894902118, -0.77347984584628637, -1.6127147097764172, 1.2399636462117218]]], [[[-1.825677385425879, -3.7766067490763664, 3.7505695083092565, -2.4084010209035878], [1.82054538748379, 0.7726724933217568, 1.5193389216990081, 2.7624546393882801], [-3.8023495821110584, 0.06823482795620528, 4.0603300257922204, -2.9887910449101307]], [[-2.3502863868006063, -0.76390343096689151, 3.9124042386386968, 0.71817873754970663], [-4.4971318912641731, -4.4171519386654809, 4.5714362192546183, -0.40406162970976123], [-2.7569876348250966, -2.8703861552223939, -0.60827477369102656, 2.1059715428376089]]], [[[0.15909257613445149, -3.7491396647860151, -4.3027200962573762, 0.99243241340489163], [0.72655086752273057, 4.7216945905319179, -0.19856408864913888, 0.86882148389023683], [-1.9723592297032799, 2.7699180493626576, -1.7795420968937039, -3.3744251679723503]], [[-0.87320825365357546, 3.5791659828818823, 4.6311622196102, -2.1571781032932691], [4.8440549668127026, 4.2001073247437333, -3.5309717586086209, 0.36179210414568352], [-4.8649353968212505, -3.8480312290099361, 3.5226370377149934, 0.33932994804966654]]]]))
      res=arg0-arg1
      ref=Data(numarray.array([[[[3.6076241605038213, -0.15434359555752053, 1.110153956807177, 3.1860456524906278], [4.3213911692659819, 1.4071663772058125, -0.87769560910897493, 4.3019726252144146], [4.0876909808898603, 1.6804309795131829, 3.6675343412495063, -0.51080855785301438]], [[6.5920092235988372, 4.4447252015001943, 5.2162001609598461, 3.2804257462479867], [6.1456025339495035, -2.8553503737074815, -1.9330763169312375, -2.233309566439849], [4.9432708926749989, 5.4163667581240427, 0.055112459255806989, 2.4908808388786419]]], [[[0.54926995316921001, -0.31163482125811903, 1.5675116147368078, 0.072896233499762708], [-2.5212282121978999, -1.3575063629299633, -0.59556394894750664, 1.2622543081787025], [6.1398117597585031, 4.2946438777700378, 3.0194617986928649, 2.2462267606152482]], [[3.305909132507566, -1.4011961438089555, 2.1612671476556109, -2.8391818781469391], [0.88663883239434504, -1.8861307599477497, -2.5265397092143713, 5.8507440260041843], [6.158539421758781, 2.2841924559962301, 2.3083172790555224, 6.158437004328241]]], [[[0.12996322962474949, 4.7687631397077155, 3.7030095977213793, 4.8448930062726259], [2.0361494720299627, 5.5378070068130842, 0.96685254131612552, 6.1901143584893559], [0.12510754498248211, -1.1407126672632453, 2.5825836057537295, 4.5503111390165181]], [[3.2783094974353695, -2.9687454322422733, 0.022367172536633895, 2.8329217253826275], [3.6634054586742471, 1.4427641467709558, 6.6442847003129124, 4.3992987233286813], [5.1273627421218704, 3.9018245649937429, 6.4120602127174111, -2.2610762743996213]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[-0.091354570123906242, -0.34506693197937199, -1.2308473628326952, 1.2718443626723888], [-2.9263731892810441, -5.1251477493380877, 0.045585161413391972, -2.1049362480938481], [-1.0684708079090122, 2.7275255757260028, 0.50599085072164041, 0.18932598447712579]], [[0.11881732407630441, 2.4827979353645748, -5.0045559721687054, -6.0762661482781217], [-0.35606834818920596, -2.0092724825424968, -6.2956242611209374, 2.6773546841301989], [2.4837816349935227, -0.58434840865040272, 0.25488645527972809, -2.5977919007084109]]], [[[0.46784913092918989, 2.4187784945796773, -5.1083977628059456, 1.0505727664068987], [-3.1783736419804791, -2.1305007478184459, -2.8771671761956972, -4.1202828938849692], [2.4445213276143694, -1.4260630824528944, -5.4181582802889094, 1.6309627904134416]], [[0.99245813230391722, -0.59392482352979759, -5.2702324931353859, -2.0760069920463957], [3.139303636767484, 3.0593236841687919, -5.9292644737513074, -0.95376662478692786], [1.3991593803284075, 1.5125579007257048, -0.74955348080566253, -3.463799797334298]]], [[[-1.5169208306311406, 2.391311410289326, 2.9448918417606871, -2.3502606679015807], [-2.0843791220194197, -6.079522845028607, -1.1592641658475502, -2.2266497383869259], [0.61453097520659083, -4.1277463038593467, 0.42171384239701482, 2.0165969134756612]], [[-0.48462000084311363, -4.9369942373785713, -5.9889904741068891, 0.79934984879658], [-6.2018832213093917, -5.5579355792404224, 2.1731435041119318, -1.7196203586423726], [3.5071071423245614, 2.490202974513247, -4.8804652922116825, -1.6971582025463556]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_sub_overloaded_taggedData_rank0_expandedData_rank0(self):
      arg0=Data(-3.21137136183,self.functionspace)
      arg0.setTaggedValue(1,-0.567186838815)
      arg1=Data(-1.25476077872,self.functionspace)
      arg1.setTaggedValue(1,0.371545778797)
      arg1.expand()
      res=arg0-arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*(-1.95661058311)+(1.-msk_ref)*(-0.938732617612)
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_sub_overloaded_taggedData_rank0_expandedData_rank1(self):
      arg0=Data(4.75204794782,self.functionspace)
      arg0.setTaggedValue(1,-3.77784707919)
      arg1=Data(numarray.array([0.70563098343477648, -0.69610374331112634]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([0.67663064328439493, -4.944100470984953]))
      arg1.expand()
      res=arg0-arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([4.0464169643896959, 5.4481516911355987])+(1.-msk_ref)*numarray.array([-4.4544777224694307, 1.1662533917999172])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_sub_overloaded_taggedData_rank0_expandedData_rank2(self):
      arg0=Data(-4.05196515387,self.functionspace)
      arg0.setTaggedValue(1,0.942568478461)
      arg1=Data(numarray.array([[-2.2611654363757863, 4.7670864554948018, 3.8263643327440366, 4.9466534906112098, 4.3687232493044057], [-0.30999478184874274, -0.54322972337562803, -4.1338353654373039, -2.5896294050158764, 0.69570051613073947], [2.5657675734388787, -2.4729991703720513, 2.7352689845169511, -4.7625900234753828, 0.45081174042230643], [-0.79162223517735963, 2.6763216523859858, -0.64011256425331009, -3.517588051391749, 2.2593852687715987]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[-2.6540364830821561, 0.10303800430975585, 2.9222312468745058, -4.6200200835244978, -1.7081006854533265], [0.56916319209395549, -0.10225901722417863, 2.0554395269174393, 3.7047606016258054, 0.6754239150428285], [-3.8565025784025755, 1.4687459457567131, 3.4535172717478808, -3.0334073063028355, 4.6730653812852463], [-4.1580370432467841, 4.3554895048399676, -4.5795866721254193, 2.7487905319316663, 1.2578573464449496]]))
      arg1.expand()
      res=arg0-arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[-1.7907997174931634, -8.8190516093637505, -7.8783294866129863, -8.9986186444801604, -8.4206884031733544], [-3.7419703720202069, -3.5087354304933216, 0.081870211568354279, -1.4623357488530733, -4.7476656699996891], [-6.6177327273078284, -1.5789659834968983, -6.7872341383859007, 0.71062486960643323, -4.502776894291256], [-3.26034291869159, -6.7282868062549355, -3.4118525896156395, -0.53437710247720061, -6.3113504226405484]])+(1.-msk_ref)*numarray.array([[3.5966049615433837, 0.83953047415147175, -1.9796627684132782, 5.5625885619857254, 2.6506691639145541], [0.3734052863672721, 1.0448274956854062, -1.1128710484562117, -2.7621921231645779, 0.26714456341839909], [4.7990710568638031, -0.52617746729548553, -2.5109487932866532, 3.9759757847640631, -3.7304969028240187], [5.1006055217080117, -3.41292102637874, 5.5221551505866469, -1.8062220534704387, -0.31528886798372202]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_sub_overloaded_taggedData_rank0_expandedData_rank3(self):
      arg0=Data(-0.315525863867,self.functionspace)
      arg0.setTaggedValue(1,-3.36147755936)
      arg1=Data(numarray.array([[[-2.4956579139050405, 1.760859601717164], [-0.0644845194842949, 0.87692569214872673]], [[3.7467215241105087, -1.3571398605788354], [1.3831095672972671, -3.9097279642413918]], [[-3.0789060289614021, -3.0000940056577097], [0.62827567206659829, -0.4846502984961365]], [[0.41469671371845518, 1.5797527460429253], [3.4220955857383899, 0.72821755122647414]], [[2.2010857934407602, 2.1043187293141985], [-4.1911189193345066, -4.8429202120938832]], [[2.6877839239485777, -1.9063574433285444], [1.9344865187429594, -3.2831696393967249]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[2.8018880136320368, 0.87924276182235506], [-1.9749750374286537, 0.036453764365615093]], [[-1.0266181230272409, 0.30399252889133876], [3.5845048519126728, 3.5584166272329103]], [[-0.34264522072760606, -1.2537520493397381], [-1.5422797409951663, -4.2806975891973149]], [[4.6497581488408599, 3.2951638754765593], [3.371328141586611, 4.3462647579266189]], [[-4.3409374278520216, -2.4712169161472151], [4.2212655320810839, 0.16994497050107427]], [[-4.5015474985122159, -1.6638792528779933], [-4.3161405541809783, -1.3946086978932879]]]))
      arg1.expand()
      res=arg0-arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[[2.1801320500380172, -2.0763854655841874], [-0.2510413443827284, -1.19245155601575]], [[-4.062247387977532, 1.0416139967118121], [-1.6986354311642904, 3.5942021003743685]], [[2.7633801650943788, 2.6845681417906864], [-0.94380153593362159, 0.1691244346291132]], [[-0.73022257758547848, -1.8952786099099486], [-3.7376214496054132, -1.0437434150934974]], [[-2.5166116573077835, -2.4198445931812218], [3.8755930554674833, 4.5273943482268599]], [[-3.003309787815601, 1.5908315794615211], [-2.2500123826099827, 2.9676437755297016]]])+(1.-msk_ref)*numarray.array([[[-6.1633655729956249, -4.2407203211859432], [-1.3865025219349345, -3.3979313237292033]], [[-2.3348594363363473, -3.6654700882549269], [-6.9459824112762609, -6.9198941865964985]], [[-3.0188323386359821, -2.1077255100238501], [-1.8191978183684219, 0.91922002983372675]], [[-8.011235708204449, -6.6566414348401475], [-6.7328057009501991, -7.7077423172902071]], [[0.97945986848843347, -0.8902606432163731], [-7.5827430914446721, -3.5314225298646624]], [[1.1400699391486278, -1.6975983064855948], [0.95466299481739014, -1.9668688614703003]]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_sub_overloaded_taggedData_rank0_expandedData_rank4(self):
      arg0=Data(-1.97798318505,self.functionspace)
      arg0.setTaggedValue(1,4.00745335857)
      arg1=Data(numarray.array([[[[-1.4052316633091966, -3.6140948875274947, -3.9027797564233691, 3.4620260737549984], [-1.0961828611797806, -4.0041391384127634, 3.4185945012685863, -3.2436817421387909], [-4.4931978445668666, 1.4434903980023197, -4.0713944577754724, -4.915399348707008]], [[2.5885642367428963, -3.8184799646251397, -0.12535048944855376, -4.3823391284661302], [0.18942057543962587, 2.26614180969354, 2.4241087956958189, -3.630644899290111], [4.134101474801172, 0.3698692708630027, -3.3220642103020825, 3.4024982997979656]]], [[[-4.9699250346339321, -2.2487094827099154, -2.6439714228237832, 2.2017234832841179], [3.8947432481218041, 4.8501332736396403, 1.9198947599704592, -4.6375640404079208], [-4.8549530447402862, 1.2690793081129552, 3.1813143761789888, 4.6705101268535145]], [[2.1710957641562647, -4.2512214148661691, -3.9842991290506236, -2.4602464419807122], [-4.556618359604709, 1.9643839000624519, 4.374189395509255, 3.3779222459465768], [-1.1792805265475104, -2.6564113870337556, 2.5239444593422222, 0.50018124893985494]]], [[[3.2518766257370917, -0.064577868313779874, -1.1700460638634027, -0.82300249829171168], [-4.0564362335170898, -0.1983688998416806, 4.9765304712166056, -1.1207613743540779], [-1.9334614180044452, 1.602489886678061, 3.7837681868624848, 2.2043891714658397]], [[1.4250956429779658, -1.5467109404711432, 4.9280756887864712, 3.6294900172425386], [-4.3839947658521261, -1.451392022235348, -0.27966173883524181, -1.3234966003068016], [0.54322084176755325, 3.3543863791556721, 3.631375550895088, 3.24399794256008]]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[[4.2940845692648164, -3.4848266815985687, -4.9864008378443625, -4.2182299295896373], [0.88082524200220647, -1.9593689867233532, -1.8614573173328877, -3.0558049350459084], [0.738138936082116, -4.2426817207089602, 1.0645255584126057, -4.9777179838930818]], [[1.8383103692543621, 3.3325204482740354, -4.6309192893180295, -2.315271433458157], [1.7856513158819745, 0.027075822387927495, -1.9365727960673684, 3.4439176400874079], [3.9946878058557722, -3.3951691607520273, -0.90283316867909935, -1.0958400994550779]]], [[[-4.3933164163971972, 3.8587885058511979, 3.1777330322394945, -4.3708983168556648], [-3.8532981909799013, -4.2406169394840347, 3.1884657189399128, -0.74029677363911262], [0.2322432935169978, 0.30415583117616585, -2.5056320810005217, 0.28708035376410912]], [[-3.9465999880422387, -1.4209576762016898, -1.4812181927057777, 4.902710041489291], [-2.9916256701733013, -2.8564210513175272, -3.9186030335308821, 4.9655651018781573], [3.6305364660762542, 2.3182120707133977, 0.58713868253069901, -1.882972931560972]]], [[[-4.7918584115903906, -2.6623736477954441, -4.2155923788428842, -1.9161153319936086], [4.6938134280443364, -4.2051684469777237, 1.2381437471357675, 0.89629855611710862], [3.2479546229154206, -1.2950382801722951, -1.9530130806157473, -3.0191445612749268]], [[-2.0859130183345034, 1.8867183929804288, -3.96296859185999, 4.5801626190003617], [1.4212012319532485, -0.15691862318594652, 1.5233448034154833, 0.0070488401299417802], [4.8501883821168725, 1.8722102574072528, 1.0975788012041754, -0.92365502229974883]]]]))
      arg1.expand()
      res=arg0-arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[[[-0.5727515217404533, 1.6361117024778449, 1.9247965713737192, -5.4400092588046487], [-0.88180032386986928, 2.0261559533631135, -5.3965776863182366, 1.265698557089141], [2.5152146595172167, -3.4214735830519696, 2.0934112727258225, 2.9374161636573581]], [[-4.5665474217925457, 1.8404967795754898, -1.8526326956010961, 2.4043559434164803], [-2.1674037604892757, -4.2441249947431903, -4.4020919807454693, 1.6526617142404612], [-6.1120846598508223, -2.3478524559126526, 1.3440810252524327, -5.3804814848476159]]], [[[2.9919418495842822, 0.27072629766026557, 0.6659882377741333, -4.1797066683337682], [-5.8727264331714544, -6.8281164586892906, -3.8978779450201091, 2.6595808553582709], [2.8769698596906363, -3.2470624931626051, -5.1592975612286391, -6.6484933119031648]], [[-4.149078949205915, 2.2732382298165192, 2.0063159440009737, 0.48226325693106231], [2.5786351745550591, -3.9423670851121018, -6.3521725805589053, -5.3559054309962271], [-0.79870265850213951, 0.67842820198410569, -4.5019276443918717, -2.4781644339895048]]], [[[-5.229859810786742, -1.91340531673587, -0.80793712118624716, -1.1549806867579382], [2.0784530484674399, -1.7796142852079693, -6.9545136562662559, -0.85722181069557202], [-0.044521767045204719, -3.5804730717277109, -5.7617513719121352, -4.18237235651549]], [[-3.4030788280276156, -0.43127224457850666, -6.9060588738361215, -5.6074732022921889], [2.4060115808024762, -0.52659116281430185, -1.6983214462144081, -0.65448658474284827], [-2.5212040268172031, -5.3323695642053224, -5.6093587359447383, -5.2219811276097303]]]])+(1.-msk_ref)*numarray.array([[[[-0.28663121069612174, 7.4922800401672633, 8.9938541964130572, 8.2256832881583328], [3.1266281165664882, 5.9668223452920479, 5.8689106759015823, 7.0632582936146031], [3.2693144224865787, 8.2501350792776549, 2.942927800156089, 8.9851713424617756]], [[2.1691429893143326, 0.67493291029465929, 8.6383726478867242, 6.3227247920268521], [2.2218020426867202, 3.9803775361807672, 5.9440261546360631, 0.56353571848128681], [0.012765552712922457, 7.4026225193207225, 4.910286527247794, 5.1032934580237725]]], [[[8.4007697749658909, 0.14866485271749674, 0.82972032632920012, 8.3783516754243585], [7.8607515495485956, 8.2480702980527294, 0.81898763962878185, 4.7477501322078073], [3.7752100650516969, 3.7032975273925288, 6.5130854395692168, 3.7203730048045855]], [[7.9540533466109338, 5.4284110347703844, 5.4886715512744724, -0.89525668292059635], [6.9990790287419955, 6.8638744098862219, 7.9260563920995768, -0.95811174330946258], [0.37691689249244043, 1.6892412878552969, 3.4203146760379957, 5.8904262901296667]]], [[[8.7993117701590862, 6.6698270063641392, 8.223045737411578, 5.9235686905623037], [-0.68636006947564177, 8.2126218055464193, 2.7693096114329272, 3.111154802451586], [0.75949873565327408, 5.3024916387409897, 5.960466439184442, 7.0265979198436215]], [[6.093366376903198, 2.1207349655882659, 7.9704219504286851, -0.57270926043166703], [2.5862521266154461, 4.1643719817546412, 2.4841085551532114, 4.0004045184387529], [-0.84273502354817786, 2.1352431011614419, 2.9098745573645193, 4.9311083808684435]]]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_sub_overloaded_taggedData_rank1_float_rank0(self):
      arg0=Data(numarray.array([-1.9480699676741322, 3.3533622550524491]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([-2.6122633139496845, -3.9263834492073846]))
      arg1=-2.89537402896
      res=arg0-arg1
      ref=Data(numarray.array([0.94730406128325129, 6.2487362840098326]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([0.28311071500769902, -1.0310094202500011]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_sub_overloaded_taggedData_rank1_array_rank0(self):
      arg0=Data(numarray.array([-0.75568602482371183, 1.1298095769089791]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([0.41698265074729068, -3.7394208471673309]))
      arg1=numarray.array(-3.09003548898)
      res=arg0-arg1
      ref=Data(numarray.array([2.3343494641592999, 4.2198450658919908]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([3.5070181397303024, -0.64938535818431919]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_sub_overloaded_taggedData_rank1_array_rank1(self):
      arg0=Data(numarray.array([1.6145328675093982, -2.7150102794808695]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([2.8122030494757713, -1.7761463653945988]))
      arg1=numarray.array([-1.7855041288119233, -4.6115558498119515])
      res=arg0-arg1
      ref=Data(numarray.array([3.4000369963213215, 1.8965455703310821]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([4.5977071782876946, 2.8354094844173527]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_sub_overloaded_taggedData_rank1_constData_rank0(self):
      arg0=Data(numarray.array([0.49033663014567352, 2.3918922397301507]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([-4.1545466028038085, 1.533071644997829]))
      arg1=Data(3.14670808715,self.functionspace)
      res=arg0-arg1
      ref=Data(numarray.array([-2.6563714570077899, -0.75481584742331265]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([-7.3012546899572719, -1.6136364421556344]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_sub_overloaded_taggedData_rank1_constData_rank1(self):
      arg0=Data(numarray.array([-3.9777337336925989, 3.4154940122014672]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([-4.9734585753556875, -1.749644525876719]))
      arg1=Data(numarray.array([-3.9501521549817054, 0.3414722041311693]),self.functionspace)
      res=arg0-arg1
      ref=Data(numarray.array([-0.027581578710893506, 3.0740218080702979]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([-1.0233064203739821, -2.0911167300078883]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_sub_overloaded_taggedData_rank1_taggedData_rank0(self):
      arg0=Data(numarray.array([1.0425239218307736, 1.9898898779904304]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([-0.67886047372861658, 4.6186996704352765]))
      arg1=Data(-4.92655796097,self.functionspace)
      arg1.setTaggedValue(1,2.68152308776)
      res=arg0-arg1
      ref=Data(numarray.array([5.9690818828049341, 6.9164478389645909]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([-3.3603835614839133, 1.9371765826799798]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_sub_overloaded_taggedData_rank1_taggedData_rank1(self):
      arg0=Data(numarray.array([0.75217192070860062, 0.60192813287826397]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([-3.8835437318928703, 2.4872191826246013]))
      arg1=Data(numarray.array([-0.607950487027205, -3.8153791307846197]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([4.4538955764057029, 1.279782124452657]))
      res=arg0-arg1
      ref=Data(numarray.array([1.3601224077358056, 4.4173072636628836]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([-8.337439308298574, 1.2074370581719442]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_sub_overloaded_taggedData_rank1_expandedData_rank0(self):
      arg0=Data(numarray.array([0.25574033693643639, -4.6873291746938754]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([-2.3386654935959128, -2.9592248542442023]))
      arg1=Data(-2.8425019828,self.functionspace)
      arg1.setTaggedValue(1,0.59937916853)
      arg1.expand()
      res=arg0-arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([3.0982423197346876, -1.8448271918956243])+(1.-msk_ref)*numarray.array([-2.9380446621264116, -3.5586040227747011])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_sub_overloaded_taggedData_rank1_expandedData_rank1(self):
      arg0=Data(numarray.array([1.2486131905458375, -0.34577659306947428]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([-4.8184093429381232, 2.4081587820325421]))
      arg1=Data(numarray.array([2.2971436598222024, -4.1671940092572175]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([-0.31753835706848577, 1.0456955316580547]))
      arg1.expand()
      res=arg0-arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([-1.0485304692763648, 3.8214174161877432])+(1.-msk_ref)*numarray.array([-4.5008709858696374, 1.3624632503744873])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_sub_overloaded_taggedData_rank2_float_rank0(self):
      arg0=Data(numarray.array([[2.6185232343377436, -3.9331249049927353, -3.1840821009101248, -2.6934255305115307, -1.7483418773000414], [-2.8360256670657726, 0.11541830260639152, -3.4411242880044481, -4.2965592320743067, 2.9409772976250377], [3.5933293394038586, 4.9278006428447121, 4.9009652921594036, -2.2296500449127032, 4.7933637287295916], [0.15326900449458414, -0.14591972059339753, -3.4180701819393491, -1.0273958174025477, 3.8787366978085611]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[-1.0207562933083558, 4.8383907535769186, -0.11515874431430184, 3.4013649718441705, 1.7851921492999843], [-2.2176810320920968, -0.49809437128613165, -4.6212108440534481, -1.0755889722743692, -4.2178196557269505], [3.3934163816606873, -2.2635572380697857, 1.9133023692254971, -1.1242601666273999, 0.84096684362424412], [-0.40397469882202852, -4.2469653790322308, 4.1067259724217493, -0.69361430785466727, -3.1540256572644241]]))
      arg1=-3.20707696307
      res=arg0-arg1
      ref=Data(numarray.array([[5.8256001974113376, -0.72604794191914124, 0.022994862163469243, 0.51365143256206336, 1.4587350857735526], [0.37105129600782139, 3.3224952656799855, -0.23404732493085412, -1.0894822690007127, 6.1480542606986317], [6.8004063024774526, 8.1348776059183052, 8.1080422552329985, 0.97742691816089078, 8.0004406918031847], [3.3603459675681782, 3.0611572424801965, -0.21099321886575506, 2.1796811456710463, 7.0858136608821551]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[2.1863206697652382, 8.0454677166505135, 3.0919182187592922, 6.6084419349177645, 4.9922691123735783], [0.98939593098149725, 2.7089825917874624, -1.414133880979854, 2.1314879907992248, -1.0107426926533565], [6.6004933447342813, 0.94351972500380832, 5.1203793322990911, 2.0828167964461941, 4.0480438066978381], [2.8031022642515655, -1.0398884159586368, 7.3138029354953433, 2.5134626552189268, 0.053051305809169946]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_sub_overloaded_taggedData_rank2_array_rank0(self):
      arg0=Data(numarray.array([[-1.1189832603329775, -1.0370097180581594, -2.7088043616098001, 0.2701693244098422, -2.2581783371668163], [-1.1734699609229415, -1.2483144865095808, -2.4822141284810098, 3.5625714926069012, 0.41321358232217698], [3.8407425092891057, 3.6903178317501286, 4.9415901906337201, 1.6993787081797276, 4.6954305085853161], [-2.7633216941818572, -2.4408778011833498, 3.8225098038213154, -3.9407957210603417, -3.5665351541125179]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[-1.4815229131220855, 0.017238384336575763, 1.2169003903716282, 1.3146809192630045, -2.8851121093680918], [-0.80862275106393344, -4.3804509874152782, -3.5329116323736995, 2.8815983731256676, 3.696215140067169], [-4.4404167188468051, 2.7070464465558084, 1.3842550790614014, 4.5190426017346841, -2.5259397597385966], [0.97225286621864626, -0.134196570550146, -3.1901998026200418, -0.94036177911590713, -2.5442509820786396]]))
      arg1=numarray.array(-0.100958465964)
      res=arg0-arg1
      ref=Data(numarray.array([[-1.0180247943688849, -0.93605125209406692, -2.6078458956457076, 0.37112779037393473, -2.1572198712027237], [-1.072511494958849, -1.1473560205454882, -2.3812556625169172, 3.6635299585709937, 0.5141720482862695], [3.9417009752531982, 3.7912762977142211, 5.0425486565978126, 1.8003371741438201, 4.7963889745494086], [-2.6623632282177647, -2.3399193352192573, 3.923468269785408, -3.8398372550962492, -3.4655766881484253]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[-1.380564447157993, 0.11819685030066829, 1.3178588563357208, 1.415639385227097, -2.7841536434039993], [-0.70766428509984092, -4.2794925214511856, -3.431953166409607, 2.9825568390897601, 3.7971736060312615], [-4.3394582528827126, 2.8080049125199009, 1.485213545025494, 4.6200010676987766, -2.4249812937745041], [1.0732113321827388, -0.033238104586053474, -3.0892413366559492, -0.8394033131518146, -2.4432925161145471]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_sub_overloaded_taggedData_rank2_array_rank2(self):
      arg0=Data(numarray.array([[4.5862048435294049, 3.3575522657502272, 3.8547677165806231, -4.9259725969082382, -1.1064410783249201], [-1.5861167402897767, -4.700064212769659, -0.44660958791784822, 3.4960893550686691, 1.9796417080196527], [-4.0904795185818754, -0.10579672003586893, -2.287299816751216, -3.421265708896728, 3.5970339860030709], [-4.6643592232929096, 3.1486177805641393, -1.4797643584497377, 0.19973070633845325, -4.1555475107727711]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[-4.7011689453860619, 4.0783669899156969, -4.5001635356475767, 1.9166763236072173, -3.1510681588574441], [-1.9389745109374532, -1.8327041132000321, 3.4958001383079029, 1.6137352533925231, -3.8174312879520578], [-0.28870158605105978, 4.947752398315993, 4.6170126504540381, 2.1140604460907673, -3.0247484473611239], [2.8447244186797853, 2.3961734624009337, 4.1455415749362317, 4.5919517221786421, -4.1588497709937293]]))
      arg1=numarray.array([[-2.4317497197554481, -4.8306064615274593, -0.91062571270759118, -0.54888328298383993, 0.11961929447881126], [-0.87455332062802604, -3.7924103534447928, -3.5240408484498911, -3.5450627801077204, -2.3736207275644894], [-4.1219652233324897, 2.7746221641502844, -1.5156557243169821, -2.6791328472690603, 3.3536371930488844], [-4.5896087199092053, 4.2846928050008213, -1.7376988529802961, 4.9815826463341875, -2.8945924564915773]])
      res=arg0-arg1
      ref=Data(numarray.array([[7.017954563284853, 8.1881587272776866, 4.7653934292882143, -4.3770893139243983, -1.2260603728037314], [-0.71156341966175063, -0.9076538593248662, 3.0774312605320429, 7.0411521351763895, 4.3532624355841421], [0.031485704750614296, -2.8804188841861533, -0.77164409243423382, -0.74213286162766767, 0.24339679295418648], [-0.07475050338370437, -1.136075024436682, 0.25793449453055839, -4.7818519399957342, -1.2609550542811938]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[-2.2694192256306138, 8.9089734514431562, -3.5895378229399855, 2.4655596065910572, -3.2706874533362553], [-1.0644211903094272, 1.9597062402447607, 7.019840986757794, 5.1587980335002435, -1.4438105603875684], [3.8332636372814299, 2.1731302341657086, 6.1326683747710202, 4.7931932933598276, -6.3783856404100083], [7.4343331385889906, -1.8885193425998876, 5.8832404279165278, -0.38963092415554534, -1.2642573145021521]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_sub_overloaded_taggedData_rank2_constData_rank0(self):
      arg0=Data(numarray.array([[0.9102735071194612, 0.16366737866134162, 1.278024060999261, -3.8434630927779221, -1.7737644592528712], [-0.98630779892823028, 1.6811115730185398, -2.4931380649196369, 0.75137413522620822, -1.0999607592083747], [-2.2017636056509637, 4.6037993073748034, 1.2763556756618062, -1.4791491799966181, 1.6303426163262058], [-1.5349973920457574, 2.27818076400892, 4.2600576787714655, 4.9952110704459738, 1.1132225693753792]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[-0.2652664936965401, -3.7734999714245223, 2.6384857839467539, -1.0484170181906558, 3.4357095269608564], [-1.4756965062939442, 1.3838835727528176, 4.580303250148976, -1.003301218523668, -0.60961718652792296], [4.0121276475253378, -0.28884713410886143, 3.83066356649298, -1.4858538988139824, 0.27555259066312487], [2.1714791710387349, 3.2579341946392848, 4.7643710668911972, 0.97584463083414708, -2.9846945979561132]]))
      arg1=Data(-4.147237021,self.functionspace)
      res=arg0-arg1
      ref=Data(numarray.array([[5.0575105281151238, 4.3109043996570042, 5.4252610819949236, 0.30377392821774052, 2.3734725617427914], [3.1609292220674323, 5.8283485940142024, 1.6540989560760258, 4.8986111562218708, 3.0472762617872879], [1.9454734153446989, 8.751036328370466, 5.4235926966574688, 2.6680878409990445, 5.7775796373218684], [2.6122396289499052, 6.4254177850045826, 8.4072946997671281, 9.1424480914416364, 5.2604595903710418]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[3.8819705272991225, 0.37373704957114029, 6.7857228049424165, 3.0988200028050068, 7.582946547956519], [2.6715405147017184, 5.5311205937484802, 8.7275402711446386, 3.1439358024719946, 3.5376198344677396], [8.1593646685210004, 3.8583898868868012, 7.9779005874886426, 2.6613831221816802, 4.4227896116587875], [6.3187161920343975, 7.4051712156349474, 8.9116080878868598, 5.1230816518298097, 1.1625424230395494]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_sub_overloaded_taggedData_rank2_constData_rank2(self):
      arg0=Data(numarray.array([[-2.090784428052237, 2.2757817938540885, -0.60070552753307815, 4.5981804115372462, -2.136552009126004], [3.2049666607300047, -4.041885089009515, -2.1398466961541529, 3.92055820881491, 0.72948065669860185], [-3.5547023365530563, -0.54706266631278844, 3.4282472796201908, 1.2673725524744217, 1.9686470611846376], [-3.3384247025870408, -3.3701188705158791, -4.0262426993211387, -1.4655536075371378, -4.9634193675184761]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[2.2238200738610576, -3.8058994923027178, 2.8012759536048719, -2.3341444078185059, -3.348138423613535], [-3.2728720756729981, -4.6930607390952321, 0.5521966285136406, 2.4196295356977648, 0.50674106517230566], [2.6055684269734094, 3.3391656454199659, 4.0038684001911076, -4.2332016578050915, 2.3953043914282137], [4.510135755204784, -2.4210706295915618, 3.8621308935968539, -2.975309548420757, -2.5659491010856894]]))
      arg1=Data(numarray.array([[-1.8782503565687234, 0.94780410368283796, 4.5554496067860892, 0.95696267810471891, 1.1661109467823074], [1.0819188808560307, -0.60408815138317706, -0.86204490580554261, -1.3921324476148165, -2.30670053342245], [0.47697326383766647, -0.98453896021013776, -3.5664140361461074, -1.864461610315967, -4.0352451204201323], [-0.21262179668857151, 2.1163272015995531, -2.3795285842202443, -1.3045305130960583, -2.358955581909381]]),self.functionspace)
      res=arg0-arg1
      ref=Data(numarray.array([[-0.21253407148351355, 1.3279776901712506, -5.1561551343191674, 3.6412177334325273, -3.3026629559083114], [2.123047779873974, -3.437796937626338, -1.2778017903486103, 5.3126906564297265, 3.0361811901210518], [-4.0316756003907228, 0.43747629389734932, 6.9946613157662982, 3.1318341627903887, 6.0038921816047699], [-3.1258029058984693, -5.4864460721154327, -1.6467141151008944, -0.16102309444107954, -2.6044637856090951]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[4.102070430429781, -4.7537035959855558, -1.7541736531812173, -3.2911070859232248, -4.5142493703958424], [-4.3547909565290288, -4.0889725877120551, 1.4142415343191832, 3.8117619833125813, 2.8134415985947556], [2.1285951631357429, 4.3237046056301036, 7.570282436337215, -2.3687400474891245, 6.430549511848346], [4.7227575518933556, -4.5373978311911145, 6.2416594778170982, -1.6707790353246987, -0.20699351917630837]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_sub_overloaded_taggedData_rank2_taggedData_rank0(self):
      arg0=Data(numarray.array([[-3.7206175882976056, -0.5171111700354043, 4.4061828165744572, 4.6796920778579754, -0.61003781158786108], [-1.3538713894031282, -1.3133229979364813, 4.7008103864146698, -1.9855901823948385, 0.80476558779592189], [-0.15072131832439517, 4.1942067921448771, 0.053352153926018886, 3.5656510726162249, -4.8234989574741931], [2.5979489220431233, 0.58145058535685212, 3.8410964110625123, 0.51684572048726096, 3.4265201107495411]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[-3.9229860312170031, 2.4668957781976051, -3.4148633635056393, 1.0926288796421346, 4.5637875434555557], [2.8717705517983916, 1.8835768722805488, -0.53547194593091785, -1.6885537506731216, 1.5212192916267666], [-2.6779950900349725, 3.8489129397213766, 4.6433732297027763, 3.2255516194154161, 3.7714253091658652], [3.1727692176307478, 4.8127260162993828, 2.2178309763568667, -0.33807593736518093, 1.1121578772175678]]))
      arg1=Data(1.43117959078,self.functionspace)
      arg1.setTaggedValue(1,2.00210455504)
      res=arg0-arg1
      ref=Data(numarray.array([[-5.15179717908177, -1.9482907608195683, 2.9750032257902932, 3.2485124870738114, -2.0412174023720251], [-2.7850509801872922, -2.7445025887206453, 3.2696307956305057, -3.4167697731790025, -0.62641400298824212], [-1.5819009091085592, 2.7630272013607131, -1.3778274368581451, 2.1344714818320609, -6.2546785482583571], [1.1667693312589593, -0.84972900542731189, 2.4099168202783483, -0.91433387029690305, 1.9953405199653771]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[-5.9250905862591123, 0.46479122315549581, -5.4169679185477486, -0.90947567539997465, 2.5616829884134464], [0.86966599675628231, -0.11852768276156045, -2.5375765009730271, -3.6906583057152309, -0.48088526341534266], [-4.6800996450770818, 1.8468083846792673, 2.6412686746606671, 1.2234470643733069, 1.7693207541237559], [1.1706646625886385, 2.8106214612572735, 0.21572642131475739, -2.3401804924072902, -0.88994667782454151]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_sub_overloaded_taggedData_rank2_taggedData_rank2(self):
      arg0=Data(numarray.array([[-0.71339343666589095, 1.2901822404685879, -1.7987903909889171, 4.1948030511324408, 4.7237205905336754], [-3.7537546207223658, 3.0813201230911229, -4.0865084644367808, -0.98444317250984259, 4.7165844944255895], [0.8892549890276058, 4.8650068651218614, -0.075266025775004408, -4.9825719666280266, 2.5048895018793012], [0.050621524835331222, 3.915545905385807, -1.2538213357593211, 1.8403702654885077, -1.6068637923446296]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[-3.0503014800183825, -0.22741787885719678, 3.0212691200295865, 1.7156438228542612, -2.7397939335648216], [-1.3138343785527229, 4.2589283868423973, -2.3310411778812035, 2.0066512808128332, 0.72243688895000346], [-2.5454136109728176, -3.5906757361140738, -2.7775002055147171, 0.55447761709998122, 3.4079192664470295], [2.5449108101682292, -2.8143411172951716, 0.77565557146171393, 0.53091941681531551, -4.3485928577474899]]))
      arg1=Data(numarray.array([[2.8091395657514777, -2.1760902773494806, 1.1002025548672725, 1.982847280879529, -2.3207027580987241], [1.4386064901849158, -4.8060072051640681, -3.2068102836318859, -1.6216645703690782, 4.1918886114257781], [4.2381820261089302, -1.412807706077329, 4.2758382872860192, 3.6215427370000004, 0.55248234240391092], [-3.0972928061563696, -3.7489759080915661, 4.4689827767741814, 1.9241097556291482, 0.3295534680766119]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[-1.4128229000324355, -4.4589616549726401, -0.8703409016424537, -2.783539508266113, 3.759530078373766], [4.1929422010449464, -0.65925394052930564, -0.46141573726296325, 3.4853205140883539, 0.78744039851618286], [-1.3956591701966206, -0.26802316733995291, 1.7226210526246541, -3.3487801265067363, -0.55224895915462202], [3.9852896606069645, -3.9607644392777552, 1.1244672354605498, 3.5348828565660178, -4.9087492692457513]]))
      res=arg0-arg1
      ref=Data(numarray.array([[-3.5225330024173687, 3.4662725178180684, -2.8989929458561896, 2.2119557702529118, 7.0444233486323995], [-5.1923611109072816, 7.887327328255191, -0.87969818080489492, 0.63722139785923559, 0.5246958829998114], [-3.3489270370813244, 6.2778145711991904, -4.3511043130610236, -8.6041147036280279, 1.9524071594753902], [3.1479143309917008, 7.6645218134773732, -5.7228041125335025, -0.083739490140640527, -1.9364172604212415]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[-1.637478579985947, 4.2315437761154433, 3.8916100216720402, 4.4991833311203742, -6.4993240119385876], [-5.5067765795976698, 4.9181823273717029, -1.8696254406182402, -1.4786692332755207, -0.065003509566179396], [-1.149754440776197, -3.3226525687741209, -4.5001212581393712, 3.9032577436067175, 3.9601682256016515], [-1.4403788504387354, 1.1464233219825837, -0.3488116639988359, -3.0039634397507022, 0.56015641149826134]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_sub_overloaded_taggedData_rank2_expandedData_rank0(self):
      arg0=Data(numarray.array([[-0.10324532952324894, 3.0249985469862501, 2.3588223359065967, -0.98635065335656247, 1.2651113533170877], [-1.7145904201684425, -0.33745707925003821, 2.8631613866793435, -2.3796584274295149, 3.4715772084769476], [-0.3628567075256548, -0.97319192042435532, 1.8963877845448875, -1.8689291879285239, -2.392917374555533], [-1.7000645900429854, -1.6966685913544688, 3.954922119164749, 1.6648713268074324, -0.025066901259910068]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[-3.869544361165441, 1.3370236386072989, -2.104609986418672, 0.60501643362563939, -3.3268640034341654], [3.5916621719418416, -0.10918454664665767, 4.7536114920313661, 1.119062407849114, 1.7667216678834574], [-4.210194994545243, -4.5797597882319296, -1.1320430256478389, 3.552913679599067, 3.7699825125082498], [-0.58501648521557392, -1.249586446784944, -4.9202876801904383, -2.75428605860079, 2.9649100772899448]]))
      arg1=Data(-1.28883513458,self.functionspace)
      arg1.setTaggedValue(1,-2.20061734812)
      arg1.expand()
      res=arg0-arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[1.1855898050603368, 4.3138336815698359, 3.6476574704901825, 0.30248448122702332, 2.5539464879006735], [-0.42575528558485676, 0.95137805533354758, 4.1519965212629293, -1.0908232928459292, 4.7604123430605334], [0.92597842705793099, 0.31564321415923047, 3.1852229191284733, -0.58009405334493813, -1.1040822399719472], [-0.4112294554593996, -0.40783345677088301, 5.2437572537483348, 2.9537064613910182, 1.2637682333236757]])+(1.-msk_ref)*numarray.array([[-1.6689270130467047, 3.5376409867260352, 0.096007361700064298, 2.8056337817443757, -1.1262466553154291], [5.7922795200605783, 2.0914328014720787, 6.9542288401501029, 3.3196797559678504, 3.9673390160021937], [-2.0095776464265067, -2.3791424401131933, 1.0685743224708975, 5.7535310277178038, 5.9705998606269866], [1.6156008629031624, 0.95103090133379231, -2.7196703320717019, -0.55366871048205368, 5.1655274254086816]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_sub_overloaded_taggedData_rank2_expandedData_rank2(self):
      arg0=Data(numarray.array([[1.0733991337308693, -1.7905653187977388, -4.2977680785757144, 4.1439425460692068, 4.0115352968631761], [3.5662770328571352, -3.1631208612895234, 3.1922382783179373, -4.2827984000526484, 3.2361280103214742], [0.27828861228668345, -3.6236203887011174, -3.6979358106898186, 4.7827831371197984, -2.1098076954565292], [-1.1677270354111178, 0.095230984508081207, -3.9242762853228639, -1.9588929049469828, 3.5285874653059288]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[-2.6030112919394899, -0.95432344632345956, -3.4013722116970611, 2.1274826148013473, -4.0087414971735829], [-3.709070567310484, -4.4956712881321987, -2.9623636732024785, 2.2288400237923964, 4.8177395994558303], [-2.4861995240618295, 2.7352445120403424, -2.3163218034121447, -0.68580963080163038, 4.4575635167355081], [1.8230840428285013, -3.8409116407310862, 1.1494403175441494, 4.2104244498378005, 3.778142620377924]]))
      arg1=Data(numarray.array([[1.0294513303323702, -1.1079239805583119, 3.9663380151979908, -3.6145160212803873, -3.5066168496621861], [4.4121218480260378, 2.2623925031615331, -1.6337455623904429, 0.080872704041821564, 1.8565154383779481], [2.4585255021051697, -3.4107650423964717, -4.7311011528660627, -0.82462656376569399, 1.8685306219853999], [1.079366582050465, 0.39898024724296022, 2.1588969632330297, -4.1999066839914736, -3.8554275616868749]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[3.5045030055565025, -3.5892770280361797, -3.4148688887524759, 3.3592497321666155, -0.28644735225971196], [-1.7358902239678065, 4.8856026696308543, 0.33106895748375198, -1.1253088705662515, -2.2293960685996996], [-0.34840765401143514, 0.59971933196959348, 1.0817405530990678, 1.0802196241802218, 1.467389528385791], [-1.577450845614127, -1.620538186098528, 1.1678537414069865, -3.781889085191966, 1.780637296356602]]))
      arg1.expand()
      res=arg0-arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[0.043947803398499019, -0.68264133823942696, -8.2641060937737052, 7.758458567349594, 7.5181521465253622], [-0.84584481516890264, -5.4255133644510565, 4.8259838407083802, -4.36367110409447, 1.3796125719435262], [-2.1802368898184863, -0.21285534630464564, 1.0331653421762441, 5.6074097008854924, -3.9783383174419291], [-2.2470936174615828, -0.30374926273487901, -6.0831732485558936, 2.2410137790444908, 7.3840150269928042]])+(1.-msk_ref)*numarray.array([[-6.1075142974959924, 2.6349535817127201, 0.013496677055414796, -1.2317671173652682, -3.7222941449138709], [-1.9731803433426776, -9.3812739577630531, -3.2934326306862305, 3.3541488943586479, 7.0471356680555299], [-2.1377918700503944, 2.1355251800707489, -3.3980623565112125, -1.7660292549818521, 2.9901739883497171], [3.4005348884426283, -2.2203734546325582, -0.018413423862837064, 7.9923135350297665, 1.9975053240213221]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_sub_overloaded_taggedData_rank3_float_rank0(self):
      arg0=Data(numarray.array([[[4.2564785073173752, -4.1066180374396772], [3.0760399730208672, 2.3895694320243237]], [[-3.5250137386118521, 1.3065626802357837], [-4.8613216067671994, -3.4485384026728507]], [[-1.1240798459978665, 0.00079525940719449295], [-1.9278385762349446, -1.1582627268357903]], [[-3.468479072154703, 0.79369661121277346], [3.1496161550128594, -2.587759976703615]], [[2.1001056885427669, 4.5738392568360187], [3.1688561731311875, -0.070581056985457913]], [[3.6415791337810184, -2.4135715430416638], [-3.2861076766263753, 3.2982806115162617]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[4.4193599790360398, 4.669779703485025], [-4.9301321572257333, -4.9839341283225247]], [[1.1375963438419854, -2.3050276774157998], [-0.93189942288600225, 1.1073658425286448]], [[-4.2174201494338259, 0.41292920568215408], [0.56036906139348996, -3.3231003366937042]], [[-1.2891028184617581, 1.2575154250770399], [-1.2790167925323068, 1.4111962662775115]], [[-4.0788962526327124, -0.32689803328133493], [-3.5905783452308517, 1.0516157171730747]], [[4.4557873606530052, -1.5483458047892631], [-1.9425752206251534, 1.6318664448295301]]]))
      arg1=1.75917024823
      res=arg0-arg1
      ref=Data(numarray.array([[[2.4973082590912146, -5.8657882856658379], [1.3168697247947065, 0.63039918379816307]], [[-5.2841839868380127, -0.45260756799037694], [-6.62049185499336, -5.2077086508990114]], [[-2.8832500942240271, -1.7583749888189661], [-3.6870088244611052, -2.917432975061951]], [[-5.2276493203808636, -0.96547363701338718], [1.3904459067866988, -4.3469302249297757]], [[0.34093544031660628, 2.814669008609858], [1.4096859249050269, -1.8297513052116186]], [[1.8824088855548577, -4.1727417912678249], [-5.0452779248525363, 1.5391103632901011]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[2.6601897308098792, 2.9106094552588644], [-6.6893024054518939, -6.7431043765486853]], [[-0.62157390438417526, -4.0641979256419605], [-2.6910696711121629, -0.65180440569751585]], [[-5.9765903976599866, -1.3462410425440066], [-1.1988011868326707, -5.0822705849198648]], [[-3.0482730666879188, -0.50165482314912069], [-3.0381870407584675, -0.34797398194864915]], [[-5.838066500858873, -2.0860682815074956], [-5.3497485934570124, -0.70755453105308597]], [[2.6966171124268445, -3.3075160530154237], [-3.7017454688513141, -0.1273038033966305]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_sub_overloaded_taggedData_rank3_array_rank0(self):
      arg0=Data(numarray.array([[[-3.9891561721915214, 4.9969424832792395], [-2.2200117626623426, -4.6104090599073455]], [[0.14161635289919428, -1.2865953985056211], [-4.4493283032274515, -4.1160039987101174]], [[0.43385777386316526, -2.4527378116849521], [4.0603101214840471, -0.58988476103894794]], [[1.2894714377062, 1.2693817417425102], [3.0174143932363187, -0.6940592488351438]], [[-4.1873869949776275, -2.0558049566696122], [-2.603242779107644, 3.5288072476948589]], [[2.8370885771195864, -0.98594945588719707], [3.932425952160802, 4.197380047835761]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[-1.941108499976385, -4.7400748996230471], [-3.7825952914698178, 4.4639082394557015]], [[-4.5391630659585056, -4.865805111249716], [0.72935706666979438, 2.7516759342197039]], [[3.59666956354787, 3.8744530968809165], [-3.1224619912963103, 3.405762664728444]], [[3.4018945662807116, -2.7762509224043352], [4.5471711190173334, -4.7755197510423937]], [[-0.85624863402519935, 2.5169880135988461], [-1.9448195879848229, -1.679925898880005]], [[2.5271477912365974, 4.0064997736050962], [0.922895223638454, 1.4947692601300258]]]))
      arg1=numarray.array(-1.13486717569)
      res=arg0-arg1
      ref=Data(numarray.array([[[-2.8542889964974938, 6.1318096589732676], [-1.085144586968315, -3.4755418842133179]], [[1.2764835285932219, -0.15172822281159348], [-3.3144611275334239, -2.9811368230160897]], [[1.5687249495571929, -1.3178706359909245], [5.1951772971780752, 0.54498241465507968]], [[2.4243386134002276, 2.4042489174365378], [4.1522815689303467, 0.44080792685888381]], [[-3.0525198192835998, -0.92093778097558454], [-1.4683756034136164, 4.6636744233888869]], [[3.971955752813614, 0.14891771980683055], [5.0672931278548301, 5.3322472235297891]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[-0.8062413242823574, -3.6052077239290194], [-2.6477281157757901, 5.5987754151497295]], [[-3.404295890264478, -3.7309379355556884], [1.864224242363822, 3.8865431099137315]], [[4.7315367392418981, 5.0093202725749446], [-1.9875948156022827, 4.5406298404224721]], [[4.5367617419747397, -1.6413837467103076], [5.6820382947113615, -3.6406525753483661]], [[0.27861854166882827, 3.6518551892928737], [-0.80995241229079529, -0.54505872318597737]], [[3.662014966930625, 5.1413669492991243], [2.0577623993324816, 2.6296364358240534]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_sub_overloaded_taggedData_rank3_array_rank3(self):
      arg0=Data(numarray.array([[[4.8971048411358549, 1.9239720317083284], [-1.7974662160983534, -1.7073504726049582]], [[4.9202114968567017, -4.5214077971964519], [0.72650775747922047, 2.8230337545948005]], [[2.4253623643557942, -4.7090189921197076], [-3.894123497364931, 4.5432421231968316]], [[-0.19093845966376843, 1.0294618514246263], [4.2545571838803742, -4.2530931123770639]], [[-0.37916144795255757, 1.8618639784273157], [-2.1300258776939907, 3.8848577672871478]], [[2.5781669150500433, -0.22701174053596773], [0.48850530081253041, 1.233142232351943]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[1.6533732409662214, 1.7920457478427956], [3.0556702512032921, 4.1101396797640799]], [[1.8255036539373943, -0.43911519788338094], [-4.6908480597911772, 4.2770630845281747]], [[4.3077477133428275, 3.6269334682712113], [3.2922552842500128, 2.3810133908681497]], [[-3.6755568892870647, 3.6419751400544147], [-1.9413458586104317, -1.5169446128613693]], [[-0.74062749841019659, 4.1579730399796606], [4.1373390876206422, 2.8506541923128452]], [[-3.9886465741242483, 4.0265553569139012], [-3.3895396487996097, -3.7847981154740582]]]))
      arg1=numarray.array([[[-3.4399729133944845, 3.4448277514325341], [-0.72284399493198404, 0.76428871852450797]], [[3.5458319400063196, -2.7347001608218378], [3.0238675877320365, 3.2643360192241957]], [[3.8963117222511023, -0.33861305802489827], [3.8264368674031992, -0.2455723607353546]], [[3.5472163555594438, -0.55282994825627707], [-4.7517248185874585, 1.0943894196479063]], [[4.6376040885331768, -4.3235842129183899], [-4.495759535277025, 1.6904328461349039]], [[1.4603054229873056, 1.5291622757470673], [-3.7328337423962807, 1.1452899978426672]]])
      res=arg0-arg1
      ref=Data(numarray.array([[[8.3370777545303394, -1.5208557197242056], [-1.0746222211663694, -2.4716391911294662]], [[1.374379556850382, -1.7867076363746142], [-2.297359830252816, -0.44130226462939515]], [[-1.4709493578953081, -4.3704059340948094], [-7.7205603647681302, 4.7888144839321862]], [[-3.7381548152232122, 1.5822917996809034], [9.0062820024678327, -5.3474825320249701]], [[-5.0167655364857344, 6.1854481913457056], [2.3657336575830343, 2.194424921152244]], [[1.1178614920627377, -1.756174016283035], [4.2213390432088111, 0.087852234509275817]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[5.0933461543607059, -1.6527820035897385], [3.7785142461352761, 3.3458509612395719]], [[-1.7203282860689253, 2.2955849629384568], [-7.7147156475232137, 1.012727065303979]], [[0.41143599109172513, 3.9655465262961096], [-0.53418158315318642, 2.6265857516035043]], [[-7.2227732448465085, 4.1948050883106918], [2.8103789599770268, -2.6113340325092755]], [[-5.3782315869433734, 8.4815572528980496], [8.6330986228976663, 1.1602213461779414]], [[-5.4489519971115534, 2.4973930811668339], [0.34329409359667107, -4.9300881133167254]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_sub_overloaded_taggedData_rank3_constData_rank0(self):
      arg0=Data(numarray.array([[[-0.3874407043998449, 2.7437813276070413], [-3.8690736521945746, 0.49649462282000201]], [[-3.3676937292338893, -3.0678899265906621], [3.7204552222458904, -0.5264205520698173]], [[0.34941136431141295, 0.55768469116307973], [0.82345769377248157, 3.2156933114223065]], [[3.1638549777413374, 2.4807826698537427], [0.76856921059179761, 3.4091726738049033]], [[2.061518562893748, 1.1212297167679921], [4.2357238187549768, 4.9237662346662585]], [[-4.9085459977421388, 0.20870032455748699], [1.096935031387086, 0.77701997496095032]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[1.0067096581520989, 4.1592404458026344], [4.4808554539494327, 0.44410039054845463]], [[-1.1111903679883604, 3.7964318991423855], [4.6318492211267568, 3.7629286617376874]], [[2.4978325481532417, 4.6568360140027849], [-1.6352702911933772, 3.3002224813994587]], [[3.8503347284023661, -2.7502187736317616], [-0.28581753468802873, -3.4167639838117747]], [[3.654745915433713, -1.5250518616334876], [4.3711183603272765, -0.75515267118169582]], [[-4.5053760627744976, 3.903683291803425], [-0.2614931137375045, -4.7545562842000608]]]))
      arg1=Data(0.134425143309,self.functionspace)
      res=arg0-arg1
      ref=Data(numarray.array([[[-0.52186584770877342, 2.6093561842981128], [-4.0034987955035035, 0.36206947951107349]], [[-3.5021188725428178, -3.2023150698995906], [3.5860300789369619, -0.66084569537874582]], [[0.21498622100248443, 0.42325954785415121], [0.68903255046355305, 3.081268168113378]], [[3.0294298344324089, 2.3463575265448142], [0.63414406728286909, 3.2747475304959748]], [[1.9270934195848195, 0.98680457345906358], [4.1012986754460483, 4.78934109135733]], [[-5.0429711410510674, 0.074275181248558475], [0.96250988807815752, 0.6425948316520218]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[0.87228451484317038, 4.0248153024937059], [4.3464303106405042, 0.30967524723952611]], [[-1.2456155112972889, 3.662006755833457], [4.4974240778178283, 3.6285035184287588]], [[2.3634074048443132, 4.5224108706938564], [-1.7696954345023057, 3.1657973380905302]], [[3.7159095850934376, -2.8846439169406901], [-0.42024267799695725, -3.5511891271207032]], [[3.5203207721247844, -1.6594770049424161], [4.236693217018348, -0.88957781449062434]], [[-4.6398012060834262, 3.7692581484944965], [-0.39591825704643302, -4.8889814275089893]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_sub_overloaded_taggedData_rank3_constData_rank3(self):
      arg0=Data(numarray.array([[[-1.7239636201807196, -2.1894428046404557], [-0.75346816425067598, -1.9324217120928022]], [[-3.8839523476557969, -0.28985995277461463], [-0.9341707360418674, -4.8909895202216962]], [[2.9673338142268904, -3.1419755627781187], [-1.5741891117434759, 1.4833163928695292]], [[3.2316179312401676, 3.5300095598203765], [-1.3670625657812483, 4.0491101489598833]], [[0.59802261570008586, 0.054626133783393094], [4.8554948831353855, -4.9204766721813717]], [[2.4816837177392976, 3.5743021152631442], [-3.9224239710267295, 2.4263498665751442]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[-3.5515041934641567, 1.9459352187371763], [3.5402443085051125, -2.1660687725529923]], [[-0.21629800630426388, 4.8840936101489518], [4.5983036970667506, 3.3280514826517464]], [[3.0020050653663812, 3.0631909020095751], [3.1276310345505625, 1.3008772165056186]], [[-1.359898082940779, -3.2577035773531882], [-2.2979719774869478, 1.6062235716191111]], [[-3.8043803806288166, -0.19817894087733823], [3.7340613897252091, 0.058266628892274852]], [[-2.9488899932635402, 4.6799276575256581], [3.6745242642721667, 3.2585187857842559]]]))
      arg1=Data(numarray.array([[[0.68176693705702007, -1.5797769914803572], [0.83669037659734524, -1.8437736898652188]], [[3.3243881407853628, 0.97543110028839219], [1.2942355021142298, 0.42761599927037253]], [[-3.211752859170236, -1.5421963833963703], [4.8408415393753561, -2.7094150742832159]], [[-3.0586367841206643, 3.8843536628289872], [0.73701988910910199, 2.325407867337443]], [[4.1111978648099878, -4.424188068128613], [-2.2848675639896801, 4.7710014462925106]], [[-3.7503885320832211, 4.2650196603384174], [-2.008762036246682, -0.31544056222811889]]]),self.functionspace)
      res=arg0-arg1
      ref=Data(numarray.array([[[-2.4057305572377397, -0.60966581316009849], [-1.5901585408480212, -0.08864802222758339]], [[-7.2083404884411593, -1.2652910530630068], [-2.2284062381560972, -5.3186055194920687]], [[6.1790866733971264, -1.5997791793817484], [-6.4150306511188315, 4.1927314671527451]], [[6.2902547153608319, -0.35434410300861074], [-2.1040824548903503, 1.7237022816224403]], [[-3.513175249109902, 4.4788142019120061], [7.1403624471250655, -9.6914781184738814]], [[6.2320722498225187, -0.69071754507527316], [-1.9136619347800474, 2.7417904288032631]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[-4.2332711305211763, 3.5257122102175336], [2.7035539319077673, -0.32229508268777352]], [[-3.5406861470896267, 3.9086625098605596], [3.3040681949525208, 2.9004354833813739]], [[6.2137579245366172, 4.6053872854059454], [-1.7132105048247936, 4.0102922907888345]], [[1.6987387011798853, -7.1420572401821758], [-3.0349918665960498, -0.71918429571833187]], [[-7.9155782454388044, 4.2260091272512748], [6.0189289537148891, -4.7127348174002357]], [[0.80149853881968092, 0.4149079971872407], [5.6832863005188488, 3.5739593480123748]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_sub_overloaded_taggedData_rank3_taggedData_rank0(self):
      arg0=Data(numarray.array([[[0.66027501713658676, -0.085351180813194816], [-1.5248157036941654, 0.40304265519344629]], [[-4.961187808722328, -3.044122959439719], [-4.6005820676281752, -1.1754248280154433]], [[1.5075904831961324, 4.6002847833353737], [-1.5861082697346318, 3.781564618049595]], [[-2.4359452508560011, -4.6899478361221005], [-2.5528282625721821, -2.8609481997806907]], [[-3.0298194425829958, -3.0084937816592761], [0.131267151748653, 4.0108734397142562]], [[1.9321694609335953, -4.9204224634724012], [1.4381287284223907, -4.1554161532032889]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[-0.45801734360267243, -0.32876484549741569], [-2.779225713206861, 4.5779222714250025]], [[3.3761884729756932, 3.0222858473537322], [-3.6664863553290794, 0.79789343483881314]], [[1.0797996184317977, -3.9068082849397912], [1.7773349222780146, -1.1703257271034739]], [[-4.4129117281517978, 1.5978248145323644], [2.6065693994403247, 1.3950742595891139]], [[-1.5489480402691083, -3.0606281277028846], [-3.7231531120877803, -2.213187267624932]], [[1.9610208865205028, -3.3832781731148129], [0.68866013613574939, -1.1693414234632593]]]))
      arg1=Data(0.24684801615,self.functionspace)
      arg1.setTaggedValue(1,-4.02030755935)
      res=arg0-arg1
      ref=Data(numarray.array([[[0.41342700098668583, -0.33219919696309574], [-1.7716637198440663, 0.15619463904354536]], [[-5.2080358248722289, -3.2909709755896199], [-4.8474300837780762, -1.4222728441653443]], [[1.2607424670462315, 4.3534367671854728], [-1.8329562858845327, 3.5347166018996941]], [[-2.682793267005902, -4.9367958522720015], [-2.799676278722083, -3.1077962159305916]], [[-3.2766674587328968, -3.255341797809177], [-0.11558086440124793, 3.7640254235643553]], [[1.6853214447836944, -5.1672704796223021], [1.1912807122724898, -4.4022641693531899]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[3.5622902157523262, 3.6915427138575829], [1.2410818461481377, 8.5982298307800011]], [[7.3964960323306919, 7.0425934067087308], [0.35382120402591921, 4.8182009941938118]], [[5.1001071777867963, 0.11349927441520746], [5.7976424816330132, 2.8499818322515247]], [[-0.39260416879679916, 5.618132373887363], [6.6268769587953233, 5.4153818189441125]], [[2.4713595190858904, 0.959679431652114], [0.29715444726721829, 1.8071202917300666]], [[5.9813284458755014, 0.63702938624018568], [4.708967695490748, 2.8509661358917393]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_sub_overloaded_taggedData_rank3_taggedData_rank3(self):
      arg0=Data(numarray.array([[[-4.3840689888045334, 4.8441554311942383], [-2.0693097333909529, -3.9078953490260604]], [[-3.1797346121224077, -1.8466459702867621], [-4.9873278593220771, 3.8278172261134529]], [[-2.6624996635188891, 2.1843837334191321], [4.1085249191216526, 0.24745683652938855]], [[-2.1495688603395449, -1.0055602897159654], [3.0751798627353679, 4.8697671978018846]], [[-2.1982239534152814, 3.3412459001836705], [0.13874429133832411, 4.862907346772543]], [[0.63690723448301334, -0.71797054110956005], [1.0721045628526227, -4.0077852094497137]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[-4.9851613825397267, 1.5201397429853856], [-0.41409260317009977, -2.908866457451702]], [[-2.1300627048643319, 4.8285553870485352], [-0.55644825093165373, -2.3201094193155694]], [[0.49666491020370351, 4.1838782219369968], [-3.0769917857109084, -4.4252750114477983]], [[3.7493519056357982, -0.8670859015139154], [-2.4864227931070437, -4.5700129932748208]], [[0.98848430688134759, 1.4522096166745433], [3.1184776602968096, 3.2955426878406584]], [[1.8153272152914743, -1.9193099602016739], [-3.8001950531820547, 3.1336491121570464]]]))
      arg1=Data(numarray.array([[[2.90754418942476, 2.5673771495266475], [-0.57994459290255129, -1.0482341245482751]], [[2.4431643668660286, 0.88145299047172276], [4.9018142433794036, 0.54519139109125181]], [[-0.66206946871496264, -2.3752031499600932], [-3.0603556375073926, -4.8693530250567978]], [[2.7195970979292108, -4.9106730127436808], [-1.5262359526693139, 2.3251995139787667]], [[-4.0354147708400001, 3.4345715021583167], [0.32456898200307549, -3.5610075715667344]], [[-0.27590668734124613, 1.7665721623445023], [0.30268509953699319, 4.7042504930929887]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[-3.5682937023589867, -0.79344027262286598], [2.9508482294081748, 1.1296930108465633]], [[-0.090110017388136399, 2.8266189936443711], [2.9741243982747996, 2.8905848497783007]], [[0.81590228465056747, 2.8408340198746309], [4.494848916476224, 3.0436601510457102]], [[-4.0847879668210734, -0.030178592751468614], [4.4582833302943481, 2.3488731366763007]], [[-2.8863698192010911, 0.36313212045064347], [3.7669228189103254, 2.1630884895816758]], [[3.4734748797966812, 0.85753156379785977], [3.3129429088456757, -3.4548935566548589]]]))
      res=arg0-arg1
      ref=Data(numarray.array([[[-7.2916131782292934, 2.2767782816675908], [-1.4893651404884016, -2.8596612244777853]], [[-5.6228989789884363, -2.7280989607584849], [-9.8891421027014808, 3.2826258350222011]], [[-2.0004301948039265, 4.5595868833792252], [7.1688805566290448, 5.1168098615861863]], [[-4.8691659582687556, 3.9051127230277154], [4.6014158154046818, 2.5445676838231179]], [[1.8371908174247187, -0.093325601974646233], [-0.18582469066475138, 8.4239149183392783]], [[0.91281392182425947, -2.4845427034540624], [0.76941946331562949, -8.7120357025427033]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[-1.4168676801807401, 2.3135800156082515], [-3.3649408325782746, -4.0385594682982653]], [[-2.0399526874761955, 2.0019363934041641], [-3.5305726492064533, -5.21069426909387]], [[-0.31923737444686395, 1.3430442020623659], [-7.5718407021871323, -7.4689351624935085]], [[7.8341398724568716, -0.83690730876244679], [-6.9447061234013923, -6.9188861299511215]], [[3.8748541260824387, 1.0890774962238998], [-0.64844515861351582, 1.1324541982589826]], [[-1.6581476645052069, -2.7768415239995337], [-7.1131379620277304, 6.5885426688119058]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_sub_overloaded_taggedData_rank3_expandedData_rank0(self):
      arg0=Data(numarray.array([[[2.3344343398801239, 3.9489966110641834], [2.4872535525906532, 2.133774302311096]], [[-0.13076296404283028, -2.5462902248083195], [-0.082504268140121795, -3.5681806697458573]], [[-0.059674720157508077, -3.9552714572669778], [3.5177260793156417, -1.0116938693436559]], [[-1.6310881346311024, 3.3807396886826719], [-2.3971422194333725, 0.56965872678742446]], [[-2.5927110672716047, 3.5995398121620408], [1.0423059159410553, 2.476206880844801]], [[4.7147000643768475, 1.3175511028780651], [4.0096958295869598, 4.3873472145537082]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[-4.6166799964011771, 4.066432073393365], [-3.0532951593533344, 4.793898779177276]], [[2.9357465740317688, 4.0833152266666843], [-0.89588216732851045, -0.0065197042905502656]], [[-1.7644319276125184, -2.0618868550937828], [1.0591236393975283, -0.82498451988248434]], [[0.25767783313384829, 4.4502581688104677], [4.1884936391204128, 3.0892118721583106]], [[2.840480091583971, 2.1635641367987537], [2.8125917050724079, -2.5202479118127572]], [[2.5087641814213129, 2.5708519675757868], [0.31873801926657386, -4.9371456135743728]]]))
      arg1=Data(1.62170315022,self.functionspace)
      arg1.setTaggedValue(1,-0.0826614910499)
      arg1.expand()
      res=arg0-arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[[0.71273118966479476, 2.3272934608488542], [0.86555040237532399, 0.51207115209576681]], [[-1.7524661142581595, -4.1679933750236486], [-1.704207418355451, -5.189883819961187]], [[-1.6813778703728373, -5.576974607482307], [1.8960229291003126, -2.6333970195589851]], [[-3.2527912848464315, 1.7590365384673428], [-4.0188453696487016, -1.0520444234279047]], [[-4.2144142174869339, 1.9778366619467116], [-0.57939723427427392, 0.85450373062947182]], [[3.0929969141615183, -0.30415204733726409], [2.3879926793716306, 2.7656440643383791]]])+(1.-msk_ref)*numarray.array([[[-4.5340185053512547, 4.1490935644432874], [-2.970633668303412, 4.8765602702271984]], [[3.0184080650816911, 4.1659767177166067], [-0.81322067627858807, 0.07614178675937211]], [[-1.6817704365625961, -1.9792253640438604], [1.1417851304474507, -0.74232302883256196]], [[0.34033932418377066, 4.53291965986039], [4.2711551301703352, 3.171873363208233]], [[2.9231415826338933, 2.2462256278486761], [2.8952531961223302, -2.4375864207628348]], [[2.5914256724712352, 2.6535134586257092], [0.40139951031649623, -4.8544841225244504]]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_sub_overloaded_taggedData_rank3_expandedData_rank3(self):
      arg0=Data(numarray.array([[[0.26391586986843318, -0.8378850468651784], [-4.1810753809731205, 3.6014566818456508]], [[-4.820804809906277, 1.5260873510157777], [-1.8776112202204587, -1.2211688685744351]], [[0.34257583543327552, -0.32763058155846547], [3.3654760459296735, -0.79876945144976208]], [[-0.67748150818170672, -1.1553467344634805], [4.2319795520235655, -3.3833839986961922]], [[3.8920871902373619, -4.1678952208257556], [-2.6442249175846202, -1.446517078186166]], [[-0.43143892830716446, 0.66496498805753834], [4.9865193158626173, -0.59793943236097036]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[-1.3042182665864233, -4.834778215206553], [-4.5344508150423142, 4.6440981687671297]], [[1.8878023823547165, 4.8948108938159471], [-3.9273144945356862, 1.1219168589951209]], [[-4.6546090432410931, 3.1144442356646103], [0.80975047426259383, 4.1662805586165668]], [[-2.7999494371816747, -2.7561078282707019], [0.30604567774842018, 2.5574676994530758]], [[-2.9668103927481981, -0.27827434746351187], [3.4783932196222356, 3.188683719409104]], [[-2.1679334345587211, -4.6031786966653785], [-3.134039200406419, -0.81125053682391446]]]))
      arg1=Data(numarray.array([[[1.3035321556663444, 2.0466445470335977], [-3.3912336614749772, 3.729342744575499]], [[-3.4677146253325342, 1.5803012351182266], [-0.9639120745384675, 2.880853651392683]], [[-0.21200570634323324, 1.3074613547227321], [-4.218792966938576, 2.1873759000951329]], [[0.059909470639398776, 0.71862333611470408], [0.41162811182007353, 4.2308428500254287]], [[3.5454039544604274, 2.5121160969553911], [-1.0441529901145365, -0.46457052013903688]], [[-1.9608611517817156, 0.91444435227208842], [-4.339716402225875, 0.30415977232108737]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[1.6751320801094352, -0.58441613274973747], [-2.1190427546290023, -3.9719327176624128]], [[-2.5712630296622772, -4.5832722752045152], [-1.8298924405466055, 4.9889065956491248]], [[-1.5503035275737096, -3.8993402038267666], [-3.6228407127246687, -2.8846985209270515]], [[-1.7250094602720534, -3.0581215633824277], [-0.55522503998568862, 0.64365580973355385]], [[4.0273019615281136, -4.0722867383534211], [4.0734551862118114, -2.2248424007430847]], [[-3.3057527663612554, -0.76747186823799929], [2.5595050352440216, -2.2780727900372733]]]))
      arg1.expand()
      res=arg0-arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[[-1.0396162857979112, -2.8845295938987761], [-0.7898417194981433, -0.12788606272984815]], [[-1.3530901845737429, -0.054213884102448873], [-0.91369914568199118, -4.1020225199671181]], [[0.55458154177650876, -1.6350919362811975], [7.5842690128682495, -2.986145351544895]], [[-0.73739097882110549, -1.8739700705781845], [3.8203514402034919, -7.6142268487216214]], [[0.3466832357769345, -6.6800113177811467], [-1.6000719274700836, -0.98194655804712916]], [[1.5294222234745511, -0.24947936421455008], [9.3262357180884923, -0.90209920468205773]]])+(1.-msk_ref)*numarray.array([[[-2.9793503466958584, -4.2503620824568156], [-2.4154080604133119, 8.6160308864295416]], [[4.4590654120169937, 9.4780831690204614], [-2.0974220539890807, -3.8669897366540038]], [[-3.1043055156673836, 7.0137844394913769], [4.4325911869872625, 7.0509790795436178]], [[-1.0749399769096213, 0.3020137351117258], [0.86127071773410879, 1.913811889719522]], [[-6.9941123542763117, 3.7940123908899093], [-0.59506196658957577, 5.4135261201521887]], [[1.1378193318025343, -3.8357068284273792], [-5.6935442356504407, 1.4668222532133588]]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_sub_overloaded_taggedData_rank4_float_rank0(self):
      arg0=Data(numarray.array([[[[0.70901541214897357, 0.59625495783189741, -1.9603322200648687, -0.31596849871918664], [-3.472608140881551, 3.725039349508787, -3.461377184840817, -4.6278846603742476], [0.47648237988634534, -0.8491760439464251, -1.8110807262178987, 1.8417660315203062]], [[-1.1595795431846554, -2.0394767648507193, -1.5467347339797111, -2.1299382457045803], [-2.6531446979396933, -3.4516033903885326, 0.73764764664182447, -3.6002715567130306], [0.23080007865882379, 1.9006907131520778, -3.7597046500968623, 3.8088925293190528]]], [[[-4.993198908331995, 2.4880510258873176, 1.929057893921911, 3.8439106871234632], [2.6478663312638293, 3.5803349373812239, -2.7270696016179166, -2.0288959324685587], [-3.9927829706200022, -4.3651076128011246, 0.30241402955823027, -2.9209581671116447]], [[-2.7403755328743462, 4.1773726144283394, -3.3554296460361934, -2.7427563019188081], [-1.9648594892804616, 2.4172181344436492, 4.6819254377497064, -4.5804025077225088], [3.4052678187076211, -0.38536827366193549, -3.8027872363306425, 4.3450089093217983]]], [[[3.3905623068473432, 3.7491775371384612, -3.7239623314922801, 4.6121851793348139], [-1.4125300688927176, 1.3356241650042318, -1.7207865099238564, 4.6416684964804453], [4.8884307860345864, -1.8519605243401847, 3.484563841041485, 4.7476466768532291]], [[-1.1826399246360788, -3.3456911064071635, -3.3760975793909118, -3.7917281076856844], [-4.3139545461189366, 1.0811644839153089, 4.6196641161492344, -2.4656136242591264], [1.2929906398723805, -2.127384744409536, -1.454918466647622, -2.6917750826298348]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[1.812665996442572, -2.5540038759939887, -1.1027312967639382, 3.3580550288139115], [1.0653703911905721, -4.8803062686744001, 2.0804399023921327, -0.35116686405810871], [3.1543920027030552, -2.7905755906930585, -0.17892611974893136, -2.5296325439560805]], [[0.074588662814632833, -0.93105092660139466, -1.6090661654270955, -4.9200834405600542], [-2.4309334454648166, 1.7252264468805301, -4.5213217448319609, 2.6399010140937449], [0.81657678103727527, 0.69604902938024793, 2.382245544389928, 4.7613850087301657]]], [[[-1.4981401420001763, 2.0746808767900839, -2.2511176394935939, -2.402585088421346], [1.4189285617894214, -1.480607267615397, 2.4925327398541093, 2.8952832858751085], [-2.8358406998209373, 0.061508520876957462, -2.196332435408781, 1.8176356797049493]], [[0.8744567636409819, 3.0991035031936001, 3.536726941675898, -0.2971247765692473], [2.6090994095187003, 1.080812841536396, 2.2318315534903812, -0.68244218055381811], [3.5004285588156314, 1.7899017929070027, 4.5275453717845551, -0.65771645594568806]]], [[[-3.195215371481078, -2.2218764474400929, 3.1211047312489484, -1.2642237490839845], [2.9800760762573466, 1.6717951757797227, -4.7552678099869219, 0.30297900300230918], [-0.96366168823298626, 1.4966217429394195, -3.2423356522218905, 4.6637343160525973]], [[2.9843697399717763, -4.8906286874764016, -0.79445349036124213, 2.7595368231279842], [0.97584552906878042, -3.0195848245483803, 0.49797035481315, -1.3000844105242306], [0.32959678179791752, -3.9901987007137896, 0.75942521638303795, 4.1478027405587543]]]]))
      arg1=2.3333476588
      res=arg0-arg1
      ref=Data(numarray.array([[[[-1.6243322466516714, -1.7370927009687476, -4.2936798788655137, -2.6493161575198316], [-5.805955799682196, 1.391691690708142, -5.794724843641462, -6.9612323191748926], [-1.8568652789142996, -3.1825237027470701, -4.1444283850185437, -0.49158162728033883]], [[-3.4929272019853004, -4.3728244236513643, -3.880082392780356, -4.4632859045052253], [-4.9864923567403387, -5.7849510491891776, -1.5957000121588205, -5.9336192155136755], [-2.1025475801418212, -0.43265694564856716, -6.0930523088975068, 1.4755448705184078]]], [[[-7.32654656713264, 0.15470336708667265, -0.40428976487873403, 1.5105630283228182], [0.31451867246318432, 1.2469872785805789, -5.0604172604185615, -4.3622435912692037], [-6.3261306294206472, -6.6984552716017696, -2.0309336292424147, -5.2543058259122901]], [[-5.0737231916749916, 1.8440249556276944, -5.6887773048368384, -5.0761039607194531], [-4.2982071480811062, 0.083870475643004205, 2.3485777789490614, -6.9137501665231538], [1.0719201599069761, -2.7187159324625805, -6.1361348951312875, 2.0116612505211533]]], [[[1.0572146480466982, 1.4158298783378163, -6.0573099902929251, 2.2788375205341689], [-3.7458777276933626, -0.99772349379641323, -4.0541341687245014, 2.3083208376798003], [2.5550831272339414, -4.1853081831408296, 1.15121618224084, 2.4142990180525841]], [[-3.5159875834367238, -5.6790387652078085, -5.7094452381915568, -6.1250757664863293], [-6.6473022049195816, -1.252183174885336, 2.2863164573485895, -4.7989612830597714], [-1.0403570189282645, -4.4607324032101809, -3.788266125448267, -5.0251227414304793]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[-0.52068166235807301, -4.8873515347946341, -3.4360789555645832, 1.0247073700132665], [-1.2679772676100729, -7.2136539274750451, -0.25290775640851226, -2.6845145228587537], [0.82104434390241021, -5.1239232494937035, -2.5122737785495763, -4.8629802027567255]], [[-2.2587589959860122, -3.2643985854020396, -3.9424138242277404, -7.2534310993606992], [-4.7642811042654616, -0.60812121192011492, -6.8546694036326059, 0.30655335529309991], [-1.5167708777633697, -1.6372986294203971, 0.048897885589282986, 2.4280373499295207]]], [[[-3.8314878008008213, -0.25866678201056104, -4.5844652982942389, -4.735932747221991], [-0.91441909701122359, -3.8139549264160419, 0.15918508105346429, 0.56193562707446354], [-5.1691883586215823, -2.2718391379236875, -4.529680094209426, -0.51571197909569566]], [[-1.4588908951596631, 0.76575584439295508, 1.203379282875253, -2.6304724353698923], [0.27575175071805536, -1.252534817264249, -0.10151610531026378, -3.0157898393544631], [1.1670809000149864, -0.5434458658936423, 2.1941977129839101, -2.991064114746333]]], [[[-5.528563030281723, -4.5552241062407379, 0.7877570724483034, -3.5975714078846295], [0.64672841745670162, -0.66155248302092229, -7.0886154687875669, -2.0303686557983358], [-3.2970093470336312, -0.83672591586122547, -5.5756833110225354, 2.3303866572519523]], [[0.65102208117113136, -7.2239763462770465, -3.1278011491618871, 0.42618916432733922], [-1.3575021297318646, -5.3529324833490257, -1.835377303987495, -3.6334320693248756], [-2.0037508770027275, -6.3235463595144346, -1.573922442417607, 1.8144550817581093]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_sub_overloaded_taggedData_rank4_array_rank0(self):
      arg0=Data(numarray.array([[[[3.887589148175616, 0.41672113628062135, -4.1723951112076882, -2.4477201546168126], [3.0808823140815296, -3.2089975544786729, 1.7865487690320787, -1.3389756129441519], [-0.41667649360353387, 1.3386002975578704, 0.68112108538798743, 0.071577369741708807]], [[3.6516729361391871, -2.873182782420729, -4.6125652135356043, -2.1215002685698678], [-0.71279224575689604, -1.7383191518702876, -1.4913314047375623, -0.48819119899356611], [-3.8352436571286095, -2.7641735526009836, 0.46597879687011279, 2.4195109500759386]]], [[[-3.0248135219390262, 1.104604670433627, 2.338986179968801, 1.189541771763782], [0.26465730445872548, -0.64247839385358585, -3.6822118818503613, 4.0134413219500011], [-3.3723814272751005, 3.4871310418009607, 2.8414273338435301, 3.3041350979922299]], [[-2.0205647169095342, 1.3903765781761077, -3.9770961236438462, 2.3301047996820392], [4.4716931784839868, 2.7007472775832824, -3.2639533798496698, 2.6683897190349439], [0.40132971205891632, 1.1314829162464441, 0.75517925066440483, 1.8089175773921049]]], [[[1.3241626096479875, 2.3770668332995717, -1.1276994366185034, 2.9683007187577886], [-0.29301711484102277, 4.1431205123956598, -3.4152611334003415, 1.0053817824634841], [3.9185320338842473, -4.8215929896541638, 1.0226632910141511, 4.6572763109677098]], [[1.1884542487063374, -0.12216159583094566, 0.47804832518655083, -0.80241441712779604], [3.595912581650607, -4.0912858289191609, -4.5989779438488476, -0.074684529806569699], [-3.941286765986769, -1.9099503406336238, 3.2569023537610686, -4.8864465435949631]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[3.3791506113586696, 3.1400479575980906, -2.2848937571975512, -3.9943841528953481], [-0.24230460876573012, 2.37610949474265, -0.60079249820573555, -4.1378580996118686], [0.0073330881986208851, 3.2949138232256363, -1.6851692532326301, -3.3382974309378577]], [[-2.3936563434027223, -2.6641488479481423, -1.9623014818346629, 0.61112954400354358], [-2.860784043855551, -1.9788880040997734, 2.684886564270867, 4.6827631908489131], [-3.7418276922015394, 2.0456506902502003, 2.4904261129871506, -1.1564567243600701]]], [[[3.3434667916442802, 4.620612181281178, -0.24999687839081197, 0.93682482641808562], [-4.6814944232921736, 3.6776460569938454, 1.573660755361427, -4.0136768754652934], [3.9905863110394009, -2.0277901939344822, -0.47604282412043819, 3.3049405058320893]], [[0.21666572987841981, 0.012869503825401196, -0.41123443146777028, -4.6141567305980491], [3.1093133098051027, -1.8174735335326342, -2.1890596521497487, -0.64000145324016433], [1.1453288204536172, 2.4914824975363379, 4.5330095860371173, 4.9028900718585611]]], [[[-1.4952584367320751, 1.720196285398047, 1.4934587890959614, -1.7652801133431009], [4.4696809923972811, -2.102205564176558, -0.38954208686292535, -2.149195473588883], [-3.9229637463348044, -3.1906837571343605, -1.0421418759708256, 2.0376142222867077]], [[4.3438135616787346, -3.0622359543313946, 0.99698897808466302, -3.5171498370202725], [-1.8007255100439004, -2.5772750649939713, 1.3565264315235197, 2.9946212776810679], [-2.2674760730886669, -2.3174187858826834, -4.5621532594858563, 0.65487965167204365]]]]))
      arg1=numarray.array(0.793657361215)
      res=arg0-arg1
      ref=Data(numarray.array([[[[3.0939317869607672, -0.3769362249342274, -4.966052472422537, -3.2413775158316613], [2.2872249528666808, -4.0026549156935216, 0.99289140781722995, -2.1326329741590007], [-1.2103338548183826, 0.5449429363430216, -0.11253627582686132, -0.72207999147313995]], [[2.8580155749243383, -3.6668401436355778, -5.4062225747504531, -2.9151576297847166], [-1.5064496069717448, -2.5319765130851364, -2.2849887659524111, -1.2818485602084149], [-4.6289010183434582, -3.5578309138158324, -0.32767856434473597, 1.6258535888610899]]], [[[-3.818470883153875, 0.31094730921877822, 1.5453288187539522, 0.3958844105489332], [-0.52900005675612327, -1.4361357550684346, -4.4758692430652101, 3.2197839607351524], [-4.1660387884899492, 2.6934736805861119, 2.0477699726286813, 2.5104777367773812]], [[-2.814222078124383, 0.59671921696125896, -4.7707534848586945, 1.5364474384671905], [3.6780358172691381, 1.9070899163684336, -4.0576107410645186, 1.8747323578200952], [-0.39232764915593243, 0.33782555503159539, -0.038478110550443922, 1.0152602161772561]]], [[[0.53050524843313873, 1.5834094720847229, -1.9213567978333521, 2.1746433575429398], [-1.0866744760558715, 3.3494631511808111, -4.2089184946151903, 0.21172442124863533], [3.1248746726693986, -5.6152503508690126, 0.22900592979930234, 3.863618949752861]], [[0.39479688749148867, -0.91581895704579441, -0.31560903602829793, -1.5960717783426448], [2.8022552204357583, -4.8849431901340097, -5.3926353050636964, -0.86834189102141845], [-4.7349441272016177, -2.7036077018484725, 2.4632449925462199, -5.6801039048098119]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[2.5854932501438208, 2.3463905963832419, -3.0785511184123999, -4.7880415141101969], [-1.0359619699805789, 1.5824521335278012, -1.3944498594205843, -4.9315154608267173], [-0.78632427301622787, 2.5012564620107876, -2.4788266144474789, -4.1319547921527064]], [[-3.187313704617571, -3.4578062091629911, -2.7559588430495117, -0.18252781721130518], [-3.6544414050703997, -2.7725453653146221, 1.8912292030560183, 3.8891058296340644], [-4.5354850534163882, 1.2519933290353515, 1.6967687517723018, -1.9501140855749188]]], [[[2.5498094304294314, 3.8269548200663293, -1.0436542396056607, 0.14316746520323687], [-5.4751517845070223, 2.8839886957789966, 0.78000339414657827, -4.8073342366801421], [3.1969289498245521, -2.821447555149331, -1.2697001853352869, 2.5112831446172406]], [[-0.57699163133642895, -0.78078785738944756, -1.204891792682619, -5.4078140918128978], [2.3156559485902539, -2.6111308947474829, -2.9827170133645975, -1.4336588144550131], [0.35167145923876841, 1.6978251363214891, 3.7393522248222686, 4.1092327106437123]]], [[[-2.2889157979469239, 0.92653892418319828, 0.69980142788111266, -2.5589374745579496], [3.6760236311824324, -2.8958629253914068, -1.1831994480777741, -2.9428528348037317], [-4.7166211075496527, -3.9843411183492092, -1.8357992371856744, 1.243956861071859]], [[3.5501562004638858, -3.8558933155462434, 0.20333161686981427, -4.3108071982351213], [-2.5943828712587491, -3.3709324262088201, 0.56286907030867095, 2.2009639164662191], [-3.0611334343035157, -3.1110761470975321, -5.355810620700705, -0.13877770954280511]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_sub_overloaded_taggedData_rank4_array_rank4(self):
      arg0=Data(numarray.array([[[[4.2273674552009854, 1.7600767981034977, -3.9207778565132454, -3.1294959749037874], [2.4220791748486361, -0.67808038709858653, 1.1876517051483946, 0.38076774463138285], [4.7357541798312699, 1.9361901873593057, 3.5771773419947674, 0.84466418200217053]], [[4.3832854348216692, -2.0992108039820776, 0.89426152208811782, 1.6490838790585052], [4.2766794438785602, 1.2395388904999454, 4.868697963623994, 4.6723392147242162], [-1.336922931105049, -3.7732416908467137, -2.2357598092404807, -2.7269535981793935]]], [[[-0.83949413085808811, 0.7527050208719297, -3.3941646545672244, 0.28244177983269658], [3.8048445709517615, -0.27883073356100407, 1.923100217324003, 2.4499555508919455], [-0.78487550059829303, 2.5001054007954382, -0.15935433112604169, 3.1623886429708854]], [[0.78088728704731558, 1.2046038842231876, 2.3735639862265199, 1.5483647699051053], [1.0441588202911127, -0.3022151562250297, -3.0792071649384276, 2.7383658966459903], [1.6260828472562538, -4.2514696486097012, -0.34711370542960385, -0.57189811378187372]]], [[[-0.34374094667689725, -4.4846912943593864, 0.19385464487479709, -1.4496570052596489], [0.33556459077355516, -3.0215854783059291, -4.965244692963628, -0.06301172534706545], [3.2825207595430079, -4.5782998483919339, -1.9257972102594545, -2.3733643798217532]], [[0.13714333697774084, 4.5313099327742528, 4.2745074022126932, 2.976223656361773], [4.2366681501527808, -2.8092506470296841, -1.3059198495723101, -0.67156640019732006], [-2.4709523830471958, 2.0467987249310147, -4.7518843501277361, -2.947415578171241]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[0.29223359442862051, -3.9135935906705601, 0.68406684349609215, -3.6170689339696924], [4.9649616675425143, 0.55399317681801374, 2.6289160559668536, 4.6432000214285214], [-4.4460427643722236, 2.4695717835597595, -3.5169173474634952, -3.6724063449838216]], [[4.3687549940927752, -4.0109528483131509, -0.93938246832415029, -2.5532564140250447], [2.4080123470614794, -1.847518311505346, 1.7398648517561801, -1.1184772465856851], [-4.7705304352339137, -3.5089945565836644, -3.887655544500308, -1.1171329587293255]]], [[[-1.8359126146319662, 1.593322233508502, -3.5169978049454054, 3.2558357470168993], [-3.9912910266115231, 1.0610054025088944, 2.3144285512198728, -0.092560651953823125], [-4.5425717330322311, -4.949113454751723, -0.20892742619409876, -3.519463839582623]], [[-1.2312690113963667, 1.0169346653083675, 0.93382445128821079, 1.1038699950914967], [-0.79026949993049911, -3.9594380151278719, -2.2165365925752334, 3.6952285309920043], [-0.88557504107653973, 1.4946440007247226, -4.5742530170662103, 0.60123722730387463]]], [[[-0.20005048530261682, -1.8581121832192995, -3.5619761531838599, 0.92630912626160988], [-2.2888416409641685, 0.49001694631168036, 4.2142178632957421, -3.1916948103599543], [-4.6144071286132107, -3.315540699612467, -4.132488662572614, 1.7882494986497655]], [[1.8713313072220696, -4.5131720305105496, 0.74001240895357157, 4.8418845153186485], [-0.7123157561751281, 1.5654197118926767, 0.85956836199613562, -1.8209459600313957], [2.7043987305849093, 0.58285507051636909, 4.1801718743182761, -4.2647130939931923]]]]))
      arg1=numarray.array([[[[-3.244796874263407, 3.803378791431637, 0.58812305897576689, -0.99427467655370005], [-1.0808046927211681, 4.6688974235937177, 2.0475299744871487, -1.1726006527262878], [-1.6085772187064729, 0.53404112441030449, 1.9107043924318798, -2.834616843087463]], [[-4.6216156584126376, 4.3835250991977084, -4.5893639433388884, -0.16602616993551322], [2.1887639005131039, -0.62251732629784762, 3.0061303180919481, 4.5427486249797067], [-1.3874610891479899, 2.0092675037240912, -4.0945840694728481, 3.8848719299422783]]], [[[-1.8154230817302808, -2.3965350952464504, 1.8830616174289485, 0.2693782713982138], [2.4705918545541516, 1.4536752049757364, 4.9519095402029478, -4.0577908284785424], [0.4492398323388036, 4.5910719149559238, 4.3019981903173008, 0.65375890024195726]], [[-0.34477045984455579, 1.4773987816730338, 2.0571389671144225, -1.8248806534747573], [1.2582249368878049, 0.91498611572663702, 2.7211603438229961, -3.4659584590891992], [-2.3533736278543991, -4.9102007157808645, 0.014693300023125744, -3.99691575243709]]], [[[0.53218521559267273, 1.3865078611585275, 0.72353672998870167, -4.9312522981589177], [0.88829194239569453, -4.1528361748409113, -2.1812074776122756, -4.6096979322268004], [1.3583373972129458, -0.86601967082433262, 4.4165092245857096, 0.92105369512490842]], [[-4.5724165298706962, -4.8085119808469354, 0.32831351435035039, -1.2373038647301371], [-4.5694178945394013, 2.9253641938728379, -1.3498533431326343, -3.686470431545418], [-0.75560776737227187, 3.6267069332060533, 3.0176904706032399, 3.1719262359043441]]]])
      res=arg0-arg1
      ref=Data(numarray.array([[[[7.4721643294643929, -2.0433019933281393, -4.5089009154890123, -2.1352212983500873], [3.5028838675698042, -5.3469778106923043, -0.85987826933875411, 1.5533683973576706], [6.3443313985377427, 1.4021490629490012, 1.6664729495628876, 3.6792810250896335]], [[9.0049010932343059, -6.482735903179786, 5.4836254654270062, 1.8151100489940184], [2.0879155433654564, 1.862056216797793, 1.8625676455320459, 0.12959058974450954], [0.050538158042940928, -5.7825091945708049, 1.8588242602323675, -6.6118255281216722]]], [[[0.97592895087219267, 3.1492401161183801, -5.2772262719961729, 0.013063508434482785], [1.3342527163976099, -1.7325059385367405, -3.0288093228789448, 6.5077463793704879], [-1.2341153329370966, -2.0909665141604856, -4.4613525214433425, 2.5086297427289281]], [[1.1256577468918714, -0.2727948974498462, 0.31642501911209742, 3.3732454233798626], [-0.21406611659669217, -1.2172012719516667, -5.8003675087614237, 6.2043243557351895], [3.9794564751106529, 0.65873106717116325, -0.36180700545272959, 3.4250176386552162]]], [[[-0.87592616226956999, -5.8711991555179139, -0.52968208511390458, 3.4815952928992688], [-0.55272735162213937, 1.1312506965349822, -2.7840372153513524, 4.5466862068797349], [1.9241833623300622, -3.7122801775676013, -6.3423064348451641, -3.2944180749466616]], [[4.7095598668484371, 9.3398219136211882, 3.9461938878623428, 4.2135275210919101], [8.8060860446921829, -5.7346148409025215, 0.043933493560324166, 3.0149040313480979], [-1.7153446156749239, -1.5799082082750386, -7.7695748207309761, -6.1193418140755851]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[3.5370304686920275, -7.7169723821021972, 0.095943784520325259, -2.6227942574159924], [6.0457663602636824, -4.114904246775704, 0.58138608147970494, 5.8158006741548096], [-2.8374655456657507, 1.935530659149455, -5.4276217398953754, -0.83778950189635859]], [[8.9903706525054119, -8.3944779475108593, 3.6499814750147381, -2.3872302440895314], [0.2192484465483755, -1.2250009852074983, -1.266265466335768, -5.6612258715653923], [-3.3830693460859238, -5.5182620603077552, 0.20692852497254011, -5.0020048886716033]]], [[[-0.020489532901685426, 3.9898573287549524, -5.4000594223743539, 2.9864574756186855], [-6.4618828811656748, -0.39266980246684202, -2.637480988983075, 3.9652301765247193], [-4.9918115653710347, -9.5401853697076469, -4.5109256165113996, -4.1732227398245803]], [[-0.8864985515518109, -0.46046411636466633, -1.1233145158262117, 2.928750648566254], [-2.048494436818304, -4.8744241308545089, -4.937696936398229, 7.1611869900812035], [1.4677985867778593, 6.4048447165055871, -4.5889463170893361, 4.5981529797409646]]], [[[-0.73223570089528955, -3.244620044377827, -4.2855128831725615, 5.8575614244205276], [-3.1771335833598631, 4.6428531211525916, 6.3954253409080177, 1.4180031218668461], [-5.9727445258261564, -2.4495210287881344, -8.5489978871583236, 0.86719580352485703]], [[6.4437478370927659, 0.29533995033638583, 0.41169889460322118, 6.0791883800487856], [3.8571021383642732, -1.3599444819801612, 2.2094217051287699, 1.8655244715140222], [3.4600064979571812, -3.0438518626896842, 1.1624814037150362, -7.4366393298975364]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_sub_overloaded_taggedData_rank4_constData_rank0(self):
      arg0=Data(numarray.array([[[[-4.5975898115619174, 2.700309915350438, -0.55264843478487435, 0.37706379770368237], [-1.7717732432561863, -4.3607565636527763, -1.8003247703591105, 0.032562171371965931], [0.36205923584056254, 0.55686527071426628, 0.5842028657285514, 0.649302977796264]], [[0.34019092577746601, 0.71410151089389018, -1.6224501701548144, 1.1223314014847974], [-3.6224791725660199, 0.72652650565345311, -4.0623364685264498, -2.4282737612415097], [4.619082133862241, -3.0616229646721003, 2.2116614209361627, -3.2546113126683585]]], [[[-3.4228832928071795, -4.6385757799467946, 4.8816489445385081, 1.5180428859788906], [-0.62647925312178199, -4.1158743505188022, -0.22308834774480513, -1.8094401800885529], [1.3811483586359765, 4.1229423571248311, 4.4615918325202433, -0.5316529460843018]], [[-3.6980831495890665, -1.1230979722063958, -4.5494345824620979, -3.0952675357379578], [1.0414858112865613, -3.7829652962191385, 0.15008187576424348, -0.32927207489029797], [3.5240557599132654, -2.9032586428436047, 4.4994663281798815, 1.0327046578946675]]], [[[0.67067109323934559, -4.0942299070638146, -0.040419263366652025, -2.364457134847564], [-0.34799388670933951, 0.52200020237208289, -1.5377891197987714, 3.3362812043492944], [-4.091056534199212, -3.243052108500093, -4.3164865620099473, -0.50780146837895668]], [[3.8116213274961179, -1.1375883954135557, 3.8694001491355614, -4.8725252822447196], [-3.506035307064217, 2.0381690486483306, -0.10557248053550961, 2.2536321190734308], [-1.2529373600236884, -0.098598949650604339, -0.15956769706389817, 0.70215679162951705]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[-3.5221105769440566, 2.8761688084350627, -1.1700125938019843, -2.9498244781405871], [2.9884721167613097, -1.1040396839724198, -0.15612059933395894, -4.6004754232203382], [-3.8897029810458763, -2.0331994221205054, 4.9977712270182657, 3.3546781608478895]], [[4.4039542063556709, 2.5343641358879125, -2.7984940364800117, -4.6300257603213577], [-0.14429025959141395, -0.20969865061809578, 0.83040309291074976, -2.7301583172233004], [-1.9762452990628141, -2.3562947922436415, 1.6207307804879196, -2.5670805037950961]]], [[[-3.7034782166355917, 4.7006626543845531, 4.4561536268096802, 2.1821829437444613], [4.3017401269310884, 0.31173824690634433, 3.4634298882534189, 0.42840107278366979], [-1.5890714339827881, 4.4021947785539055, 4.9626896684761608, 2.7081287232790894]], [[4.0331739810553291, -4.7793218661017125, -0.42586000437054139, -4.8367396492305117], [-4.5170975041820061, 4.1158573548949278, 2.2088938430451801, 1.0759376339623925], [-1.6720452727991351, 2.74694243701299, 2.4996976038000316, -0.8716250167360009]]], [[[4.553160181214297, 3.3245246486978388, 2.0458728690872725, 4.3726320791510478], [2.3048636309086969, -2.9486422791367528, 2.4319709938380454, -1.6836957421089571], [-3.4740220120170573, 1.432937076421144, 4.442803201696389, -4.8487551127671358]], [[1.0573209062306024, -1.310578510847098, 0.12318656559843522, 1.0432431702535236], [2.4606554785210051, 1.6224286865718041, -4.4162535044422082, 3.3024591460228887], [0.1312669532307229, -0.94304043037619678, -0.8271584073317042, 2.0905145361020203]]]]))
      arg1=Data(2.86668379671,self.functionspace)
      res=arg0-arg1
      ref=Data(numarray.array([[[[-7.4642736082706556, -0.16637388135830022, -3.4193322314936125, -2.4896199990050558], [-4.6384570399649245, -7.2274403603615145, -4.6670085670678487, -2.8341216253367723], [-2.5046245608681756, -2.3098185259944719, -2.2824809309801868, -2.2173808189124742]], [[-2.5264928709312722, -2.152582285814848, -4.4891339668635526, -1.7443523952239408], [-6.4891629692747586, -2.1401572910552851, -6.929020265235188, -5.2949575579502479], [1.7523983371535028, -5.9283067613808385, -0.65502237577257549, -6.1212951093770966]]], [[[-6.2895670895159181, -7.5052595766555328, 2.0149651478297699, -1.3486409107298476], [-3.4931630498305202, -6.9825581472275404, -3.0897721444535433, -4.6761239767972906], [-1.4855354380727617, 1.256258560416093, 1.5949080358115051, -3.39833674279304]], [[-6.5647669462978051, -3.989781768915134, -7.4161183791708361, -5.961951332446696], [-1.8251979854221769, -6.6496490929278771, -2.7166019209444947, -3.1959558715990362], [0.65737196320452718, -5.7699424395523433, 1.6327825314711433, -1.8339791388140707]]], [[[-2.1960127034693926, -6.9609137037725528, -2.9071030600753902, -5.2311409315563022], [-3.2146776834180777, -2.3446835943366553, -4.40447291650751, 0.46959740764055624], [-6.9577403309079502, -6.1097359052088311, -7.1831703587186855, -3.3744852650876949]], [[0.94493753078737974, -4.0042721921222935, 1.0027163524268232, -7.7392090789534578], [-6.3727191037729547, -0.82851474806040759, -2.9722562772442478, -0.61305167763530743], [-4.1196211567324266, -2.9652827463593425, -3.0262514937726364, -2.1645270050792211]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[-6.3887943736527948, 0.0094850117263245437, -4.0366963905107225, -5.8165082748493253], [0.12178832005257156, -3.970723480681158, -3.0228043960426971, -7.4671592199290764], [-6.7563867777546145, -4.8998832188292436, 2.1310874303095275, 0.48799436413915132]], [[1.5372704096469327, -0.33231966082082565, -5.6651778331887499, -7.4967095570300959], [-3.0109740563001521, -3.076382447326834, -2.0362807037979884, -5.5968421139320386], [-4.8429290957715523, -5.2229785889523797, -1.2459530162208186, -5.4337643005038343]]], [[[-6.5701620133443299, 1.8339788576758149, 1.589469830100942, -0.68450085296427687], [1.4350563302223502, -2.5549455498023939, 0.59674609154468072, -2.4382827239250684], [-4.4557552306915262, 1.5355109818451673, 2.0960058717674226, -0.15855507342964881]], [[1.1664901843465909, -7.6460056628104507, -3.2925438010792796, -7.7034234459392499], [-7.3837813008907442, 1.2491735581861896, -0.65778995366355808, -1.7907461627463457], [-4.5387290695078732, -0.11974135969574817, -0.3669861929087066, -3.7383088134447391]]], [[[1.6864763845055588, 0.45784085198910063, -0.82081092762146568, 1.5059482824423096], [-0.56182016580004124, -5.8153260758454905, -0.4347128028706928, -4.5503795388176957], [-6.3407058087257955, -1.4337467202875942, 1.5761194049876508, -7.715438909475874]], [[-1.8093628904781358, -4.1772623075558357, -2.743497231110303, -1.8234406264552145], [-0.40602831818773311, -1.2442551101369341, -7.2829373011509464, 0.43577534931415052], [-2.7354168434780153, -3.809724227084935, -3.6938422040404424, -0.77616926060671787]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_sub_overloaded_taggedData_rank4_constData_rank4(self):
      arg0=Data(numarray.array([[[[-3.7370584149402064, 2.4260044551730831, -2.7018828649743454, 1.4719652690337242], [-3.7892805274504813, 1.2398037108059974, 1.5924756311131301, 0.035721608494889701], [-0.12901863125384683, -3.0983538131858603, -0.75237069596481376, -2.7312272098180568]], [[0.75192761862791446, -4.44298524163412, -2.042871576713611, 0.28456005299768883], [1.3635058293323574, -0.59517281264221999, -1.4686867448354644, 2.4009141372358549], [-0.15253394414099652, -4.6499255683136376, 3.6652002587962187, -2.283752956917545]]], [[[-1.5474238002277421, -2.7174883582580964, -0.23352324212656228, 1.8098200812003471], [-2.0400652672438335, 0.017043100225180297, -4.5069504376487206, 4.2299506944651473], [-0.74495017243645378, -2.7756995841276488, 2.984207570824811, -1.7411467060956309]], [[-4.4608393296542692, -1.0006375142005028, -2.8383389673596691, -4.947903123736844], [-2.5204711305720795, -3.8298929087724565, -4.2974069300342688, -3.6581808853830147], [-0.15140957628290508, -2.3766140789821133, 2.741887239454198, -0.6860405558972591]]], [[[1.2244715673258373, -4.1040186198793318, -0.098635348815872881, -1.2177842026915089], [2.7024928137131701, -2.74756414282048, 1.0850251935478195, 1.9509623092092241], [1.0085553496772217, 0.065334992519680668, -2.2993643985548151, -1.1007924558002911]], [[-2.0947603088955526, 1.0959905984546703, 3.7023710621469164, 0.094908210009293725], [1.0949912517065847, -3.4888393816020113, 4.3708685603171986, -0.6958836713668104], [3.9631547390749269, -4.405952868968054, -4.8518933471843013, -2.592787527572229]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[-0.55617928125915839, 3.6341719415522373, -3.9660249784661117, -0.3773636885162297], [-4.2598538818368867, 2.0141095278486629, -2.5387101079363794, -0.50986974532434459], [4.8795827884367782, -3.6196158865395809, 3.16827233568727, 0.71657225927344381]], [[3.5705403976795669, -3.6300951370512227, 4.465797475548289, 3.2055038360580426], [1.3739798487942316, -0.90833756169357827, -2.6318712128812258, 3.2928168795433272], [-3.1155876455767908, 0.87775634574256856, 1.7422753002128797, -0.83032023027208002]]], [[[3.667776668595689, -2.9348111698821047, -2.7456991525064844, 4.8877693853508539], [-3.7193783851362694, -4.6740975853125724, 3.6612328440916873, 2.5697557317694821], [-4.59508177738845, -3.7685784983395196, 0.84368434661179403, 1.9712011217858114]], [[0.66059582127070637, 0.78800527926592512, -2.1784557885201181, -1.0870627490649176], [2.8928042985451636, -1.6105244770736258, -3.1373740363552862, -2.5216836550990585], [1.8492649945263437, -0.98186641758255888, 0.17357876783797188, -1.6418437630807525]]], [[[-0.65255812562799242, -1.544055661127286, -2.4994843524131962, 4.7095918452734011], [2.3066678240266212, -0.25587438388778505, 3.0831759251770734, -1.6547253343439614], [-1.0184318647780932, 3.138518774194818, -4.9480883087962333, -1.9481928897014864]], [[0.22954333269005645, -4.3816942829319148, 4.3944482827096838, 1.8858585001446393], [2.6224730676058599, 4.1438933041445267, -4.3417533647630391, 1.4965171534264643], [-2.6372525997536922, -3.6875723195735888, -4.1601585046111866, 3.1925433393113067]]]]))
      arg1=Data(numarray.array([[[[1.2809594758663643, 0.36614546319594332, -3.3224012964497183, 0.72705936270792382], [2.4444430778794244, -1.2467644958618331, 4.579892836164543, -1.7261523956764036], [2.9117263196468999, -4.0937271509845576, 1.7996859423754028, 2.9318562930234107]], [[1.8786135239342974, -1.2501299758663951, 1.5035629028893549, 3.53770446276949], [-3.202487508574221, 1.8306249520483693, 2.6637070204200146, -1.2988361053293049], [0.65907450053626704, -0.20922397902545953, -1.8287720721488854, 3.7031561868616425]]], [[[4.7500178129583812, -2.6596034449867947, -4.8134760563507033, -1.469990044658406], [-0.30454262794900089, 3.5265523216188406, -1.4481810260031311, -4.2910701255593633], [4.311581858027731, 4.5210643298923703, -2.2453019232164406, 2.2314060470622801]], [[4.2130381927502683, -2.0841916758075718, -0.59051235548306558, 2.9549158274042542], [-3.3761651991270112, -2.6047260951283748, -0.0077171700114018194, 4.1868823032214788], [-4.8401105936327937, -2.0848111300818752, -4.4230239641470916, -4.9456703812446046]]], [[[-0.85418377881926766, -2.6549252791150337, 2.1612991148970266, 1.1691767385493224], [-0.9692318519106351, 3.1340410313936289, 1.8120605408563373, -3.269731779918895], [3.4176404366110216, 0.98238015439809612, 4.2488533318224562, 1.4290964548898089]], [[3.2892305811583959, 3.8221030099805091, 3.9688737706562875, -2.1833121915287714], [-4.8072092694391948, -2.3750269615015474, 1.6843187149024308, 4.2436192770219368], [0.63505035941578214, 2.5421490072782005, -3.1392939759702418, 0.80894111899082777]]]]),self.functionspace)
      res=arg0-arg1
      ref=Data(numarray.array([[[[-5.0180178908065702, 2.0598589919771397, 0.62051843147537289, 0.74490590632580034], [-6.2337236053299057, 2.4865682066678305, -2.9874172050514129, 1.7618740041712933], [-3.0407449509007467, 0.9953733377986973, -2.5520566383402166, -5.6630835028414674]], [[-1.1266859053063829, -3.1928552657677249, -3.5464344796029659, -3.2531444097718012], [4.565993337906578, -2.4257977646905893, -4.132393765255479, 3.6997502425651598], [-0.81160844467726356, -4.440701589288178, 5.4939723309451036, -5.9869091437791875]]], [[[-6.2974416131861233, -0.057884913271301741, 4.579952814224141, 3.2798101258587531], [-1.7355226392948326, -3.5095092213936603, -3.0587694116455895, 8.5210208200245106], [-5.0565320304641848, -7.2967639140200191, 5.2295094940412516, -3.972552753157911]], [[-8.6738775224045384, 1.083554161607069, -2.2478266118766035, -7.9028189511410982], [0.85569406855493169, -1.2251668136440816, -4.2896897600228669, -7.8450631886044935], [4.6887010173498886, -0.29180294890023806, 7.1649112036012896, 4.2596298253473455]]], [[[2.0786553461451049, -1.4490933407642981, -2.2599344637128995, -2.3869609412408312], [3.6717246656238052, -5.8816051742141084, -0.72703534730851782, 5.2206940891281191], [-2.4090850869337999, -0.91704516187841545, -6.5482177303772708, -2.5298889106900999]], [[-5.3839908900539486, -2.7261124115258388, -0.26650270850937119, 2.2782204015380652], [5.9022005211457795, -1.113812420100464, 2.6865498454147678, -4.9395029483887471], [3.3281043796591447, -6.9481018762462545, -1.7125993712140595, -3.4017286465630567]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[-1.8371387571255227, 3.268026478356294, -0.64362368201639342, -1.1044230512241535], [-6.7042969597163111, 3.2608740237104961, -7.1186029441009229, 1.216282650352059], [1.9678564687898783, 0.47411126444497675, 1.3685863933118672, -2.2152840337499669]], [[1.6919268737452695, -2.3799651611848276, 2.9622345726589341, -0.33220062671144746], [4.5764673573684522, -2.7389625137419475, -5.2955782333012404, 4.5916529848726322], [-3.7746621461130578, 1.0869803247680281, 3.5710473723617651, -4.5334764171337225]]], [[[-1.0822411443626923, -0.27520772489530998, 2.0677769038442189, 6.3577594300092599], [-3.4148357571872685, -8.2006499069314138, 5.1094138700948184, 6.8608258573288454], [-8.9066636354161801, -8.2896428282318908, 3.0889862698282347, -0.26020492527646866]], [[-3.5524423714795619, 2.8721969550734969, -1.5879434330370525, -4.0419785764691714], [6.2689694976721748, 0.99420161805474905, -3.1296568663438844, -6.7085659583205377], [6.6893755881591375, 1.1029447124993164, 4.5966027319850635, 3.303826618163852]]], [[[0.20162565319127523, 1.1108696179877477, -4.6607834673102229, 3.5404151067240788], [3.2758996759372563, -3.3899154152814139, 1.2711153843207361, 1.6150064455749336], [-4.4360723013891148, 2.1561386197967218, -9.1969416406186895, -3.3772893445912953]], [[-3.0596872484683395, -8.203797292912423, 0.42557451205339625, 4.0691706916734107], [7.4296823370450547, 6.5189202656460736, -6.0260720796654699, -2.7471021235954725], [-3.2723029591694743, -6.2297213268517897, -1.0208645286409448, 2.383602220320479]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_sub_overloaded_taggedData_rank4_taggedData_rank0(self):
      arg0=Data(numarray.array([[[[0.01135194183319399, -4.9785479029831876, -1.4712660503069506, 1.5141512196801941], [1.1548155563469296, -2.9854719632114692, 3.9339293237191413, -2.6910209597958525], [1.1124045008328407, -1.7425919517513631, -1.5841323767605822, -1.5249655191666567]], [[0.77789261118966735, -2.5794005097811121, 1.6533993149526314, -4.5285076188195239], [3.4427295849745789, -2.2189592748730669, -4.1716124743315239, -3.983795187522372], [-2.1622303023564338, -4.3635249398599782, -1.0844844142101007, 4.3691526490925945]]], [[[2.3388827084196793, 2.5869520161923054, -0.50568135076855558, 0.80047939327703244], [-1.1172930257102074, 1.7141980769644425, 3.8657014083391665, -1.4478920022721686], [4.341151814495694, -2.9214381483694583, -0.34791364686587034, 3.6629900307887802]], [[-2.4895920792024229, -1.0808639277714582, 2.95145361346062, -2.505082874653366], [2.9044431445861267, -3.6255605266754198, 0.9224393134617177, -2.1678234773889695], [1.7819159707331798, 0.86206296994317455, -3.9977372106574647, 4.5328880039046755]]], [[[0.34636517973926662, 3.4802106078211352, 1.1815723364090402, 4.4368602109169153], [4.0388522903102952, 2.5758973288189768, -0.81101509716135212, -1.3321756418216033], [-4.6687184448740044, 2.5234679018789574, -1.3297050929907348, -3.2962557535249468]], [[2.5068261209985154, -2.6660012095199157, 1.2152038679113621, 4.7437042663843787], [-2.4603170267105012, -1.1121957909867297, 0.86728247168370221, -0.38944561297860503], [3.3124604121643344, -1.3032146331540773, -0.39035423972031147, -3.2922463078391697]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[2.3779133693429007, 0.3485276879640935, 1.9423218730664029, 2.9192477810750539], [-2.2714486185518092, -4.9448665292565197, 4.1796543518259544, 4.62284389739958], [4.5252803539922191, -0.83588087489538143, -2.0763388057277075, -0.70948762277037591]], [[-2.7412666796161336, -0.85768107488231671, 2.7565685604583461, 2.9531817032097987], [0.99650013580760266, 3.397253365489405, 4.0403421758732545, -0.94362709356438224], [-2.7465116165898786, -2.7352286635244036, -4.429698974620818, -3.8962458486699014]]], [[[0.53820770690966935, -4.1953223973140918, -3.7816386954405123, -0.58627302004707449], [1.1420110819742746, -2.0984986344668508, -4.4825410756979043, -3.4722131828643343], [2.9068720329289688, -0.50706387804422981, 3.6120151453156488, 4.9067642374187699]], [[1.1226672417387515, 0.17201241295864644, -3.7572824630148904, 3.1963739180604325], [-1.4324703386402216, 4.962825985088287, -2.6731042500048821, 2.0888117327222631], [-2.4327983399488664, -0.95082321412309767, -2.0260561079718387, -0.96442323262818075]]], [[[2.7987768842205449, -0.81984841006370246, 2.0546178350382052, 4.9317041606093177], [-0.95982463897540615, -0.3443753161051486, 1.0923910624658371, -0.33270493773144239], [-2.873837525673324, 3.1247305778060284, 3.6902465856943341, -3.1396340195450509]], [[0.79524145523957479, -2.3244739969765584, -1.9966895568489997, -2.0456977637294358], [0.16856798846409404, -1.6051156720539526, 0.56901426924804799, 2.906872073160347], [2.3684975909375519, 0.41273978735919847, -1.370722073297185, -1.7386926551880122]]]]))
      arg1=Data(3.54198671837,self.functionspace)
      arg1.setTaggedValue(1,2.49724646832)
      res=arg0-arg1
      ref=Data(numarray.array([[[[-3.5306347765393902, -8.5205346213557718, -5.0132527686795347, -2.0278354986923901], [-2.3871711620256546, -6.5274586815840534, 0.39194260534655712, -6.2330076781684367], [-2.4295822175397435, -5.2845786701239472, -5.1261190951331663, -5.0669522375392404]], [[-2.7640941071829168, -6.1213872281536963, -1.8885874034199528, -8.070494337192109], [-0.099257133398005237, -5.7609459932456506, -7.7135991927041081, -7.5257819058949558], [-5.7042170207290184, -7.9055116582325624, -4.6264711325826848, 0.82716593072001032]]], [[[-1.2031040099529049, -0.95503470218027875, -4.0476680691411397, -2.7415073250955517], [-4.6592797440827916, -1.8277886414081417, 0.32371468996658237, -4.9898787206447528], [0.79916509612310982, -6.4634248667420424, -3.8899003652384545, 0.121003312416196]], [[-6.0315787975750066, -4.6228506461440428, -0.5905331049119642, -6.0470695930259506], [-0.63754357378645743, -7.167547245048004, -2.6195474049108665, -5.7098101957615537], [-1.7600707476394044, -2.6799237484294096, -7.5397239290300488, 0.99090128553209134]]], [[[-3.1956215386333175, -0.061776110551448937, -2.3604143819635439, 0.89487349254433113], [0.49686557193771108, -0.96608938955360735, -4.3530018155339363, -4.8741623601941875], [-8.2107051632465886, -1.0185188164936267, -4.871691811363319, -6.838242471897531]], [[-1.0351605973740687, -6.2079879278924999, -2.326782850461222, 1.2017175480117945], [-6.0023037450830854, -4.6541825093593143, -2.674704246688882, -3.9314323313511892], [-0.22952630620824976, -4.8452013515266614, -3.9323409580928956, -6.8342330262117539]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[-0.11933309897905531, -2.1487187803578625, -0.55492459525555304, 0.42200131275309793], [-4.7686950868737652, -7.4421129975784757, 1.6824078835039984, 2.1255974290776241], [2.0280338856702631, -3.3331273432173374, -4.5735852740496634, -3.2067340910923319]], [[-5.2385131479380895, -3.3549275432042727, 0.25932209213639013, 0.45593523488784271], [-1.5007463325143533, 0.90000689716744908, 1.5430957075512985, -3.4408735618863382], [-5.2437580849118346, -5.2324751318463596, -6.9269454429427739, -6.3934923169918569]]], [[[-1.9590387614122866, -6.6925688656360478, -6.2788851637624683, -3.0835194883690304], [-1.3552353863476814, -4.5957451027888068, -6.9797875440198602, -5.9694596511862903], [0.40962556460701283, -3.0043103463661858, 1.1147686769936929, 2.4095177690968139]], [[-1.3745792265832044, -2.3252340553633095, -6.2545289313368464, 0.69912744973847651], [-3.9297168069621775, 2.465579516766331, -5.170350718326838, -0.4084347355996929], [-4.9300448082708224, -3.4480696824450536, -4.5233025762937942, -3.4616697009501367]]], [[[0.30153041589858898, -3.3170948783856584, -0.44262863328375079, 2.4344576922873618], [-3.4570711072973621, -2.8416217844271046, -1.4048554058561189, -2.8299514060533983], [-5.3710839939952795, 0.62748410948407241, 1.1930001173723781, -5.6368804878670069]], [[-1.7020050130823812, -4.8217204652985144, -4.4939360251709557, -4.5429442320513918], [-2.3286784798578619, -4.1023621403759085, -1.928232199073908, 0.40962560483839106], [-0.1287488773844041, -2.0845066809627575, -3.8679685416191409, -4.2359391235099686]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_sub_overloaded_taggedData_rank4_taggedData_rank4(self):
      arg0=Data(numarray.array([[[[-4.5659432914191447, -3.0756237255376506, -4.2334075265772695, 2.5929330369108445], [2.7267406356848536, -2.7318840479606488, 0.84605645832083809, 1.9255260912499033], [-3.637166180085869, -3.3209740346558494, 0.53003436106076229, -3.6357692060789306]], [[3.1939641722011007, -1.9017315481536992, 2.3881451628326236, 4.9612534359086631], [1.4304893730991672, 0.19150631957665887, -0.88645184048219772, -3.3224836614727984], [3.8887846756642332, -4.2942206890083288, -4.7718061081431156, -4.1407487287744305]]], [[[4.1592166114652454, 4.6621742881692203, 3.5713538942515068, -4.8528910738723781], [0.3700304466092863, -3.0214354664831058, 4.0724937995954953, -1.2327380701595478], [2.8849672382022433, 3.8386120117226668, -0.80967249727746715, 3.649285175406261]], [[-3.4723467040314859, 2.035994214495263, -2.3704706933816189, -0.2338883236889906], [2.2888572470359261, -0.44616855344587059, -4.2330846991367608, -0.72329985466043922], [-2.9203165864940406, -4.8292478194148405, 3.8945293435569273, -1.9962381133663074]]], [[[-3.3013418776435843, 1.5319159315194932, 3.4124953218157295, -3.056341107999395], [-4.628128467574852, 1.9951034936794434, 1.8744210697066084, 4.5036284557407811], [2.6625838831022239, 2.8799533014409793, 4.3877800188309202, -2.4212214733944384]], [[4.2804485881905769, 2.1338881683829305, -3.6936048767445504, 0.025421155798426298], [-4.1072602280904347, -2.4786354989794948, -3.4210996044458684, 3.6955951721324851], [-1.6567808551398109, -4.2531286426166215, -4.5477164001862613, 2.6298758994954872]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[4.0971383199392442, 0.67289894639753012, -0.41337479932236931, -1.6040355030623097], [2.7663670452552083, 4.7778112770129351, -0.23538110356264763, 3.274569091560851], [1.8591857079493801, -2.5564506206009643, -3.4527283012567258, -0.1244083143057626]], [[-3.0422736977964893, 0.84055401562984322, 1.6312867016500308, -4.1434821434734452], [-3.0791805270142838, 1.6090297271238772, 0.46200885600550023, 4.6027749935955597], [-1.4604110489056064, 4.1087032184213932, -4.7748069167830032, -3.9375478580469272]]], [[[3.7245924273770097, 0.14457305823715938, -4.7766409700178638, -4.0118734170551731], [-1.9242977623721034, 0.75782322535984292, -3.4592194001776013, -0.73597711044123315], [3.7202720723660292, 1.0162216128808339, 1.8875348400652046, -3.2698914819298839]], [[4.042008021662987, 1.3874714829976451, -4.3612366170734447, 4.237533799370393], [3.3987727334289044, -1.9020527953358082, 0.41208097802024923, 2.2972312833983093], [1.2788027080279853, 1.934727085602451, 3.5688517003664018, -4.7134377884352716]]], [[[-3.7142775922442506, -4.2409932880667087, 3.1242184458440434, 1.5924931509226372], [-3.7879757101683174, -1.6296203312148085, -2.4322338983234548, -1.7242960935939378], [2.588946161392867, 3.9712542813479867, -3.5445007044105701, 1.484796169340469]], [[-2.8643211208501249, -4.672945125699405, 1.3864731718489676, 4.120153829637248], [0.86161543700965648, -0.10187999113779611, -2.1959309136488727, -2.796583897967817], [1.7309521408967026, 1.8211448932897722, 2.0040088387425961, 3.3153330545042543]]]]))
      arg1=Data(numarray.array([[[[1.3081118028027792, 1.2664772306758145, -4.194416094320772, 4.0987285830313915], [-0.30636930226957215, 1.9469908736138315, 3.8109567386131697, -3.7368912458676973], [-4.665802751403425, 1.2739584253772209, 1.7888545951932038, 4.0138277003896015]], [[1.4600004388366727, 3.5856749297338677, -0.019878597295229561, -2.839254454697433], [-4.3377748509589082, 0.016121428575479158, 4.289311151775637, 0.59518141555984894], [-3.828190301292469, -3.5985834623958768, 4.4240065384841927, -2.5780726026240499]]], [[[2.5914245649742806, 4.9560615770761771, 4.9173483411224606, -2.1064952349014696], [-0.29142087573003828, 1.7482786762917604, -3.4649801324904339, 0.77634912443965121], [0.89070417493265186, 3.7962118430719283, 1.7166564302525513, 1.6532196510943535]], [[3.7861751385490532, 3.9389916024747933, -4.935100033304531, -3.8077581683199044], [-0.15022442350296838, 3.5541996739371822, -1.2081588823183651, 1.804784831714902], [3.1621380116007636, -1.7913546331365984, 3.6637940814629282, 4.3275335560484578]]], [[[3.6296143264485501, 2.4827188586391289, 1.8648597021883031, -2.2644641182101832], [0.046459685559315567, 4.2050584414034269, 2.1482593464398079, 1.9035239549579064], [1.9855182586418909, 2.6811017488044939, 2.5154156557381055, -0.83798145100794397]], [[-4.6534277693055, -0.81957376827895967, -2.3032997740639893, 0.78956560389316088], [4.2054976581662586, -1.4562701383338315, -3.1428198511893268, -2.6155674722341349], [1.3828402563877553, -1.6930963454216719, 2.1702276021520142, 0.9051958851200661]]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[[-4.9491525040523285, -3.7781776323338701, -1.8054560490171734, 0.52157647560613452], [-0.4053506909414164, 4.8528549961669487, -2.9167883066678666, -1.3668568373780623], [-0.82669591660092134, -3.7124036992776088, 1.1864729870554402, -3.9117046189627711]], [[1.2914077837600288, 1.0929441209921595, -1.9022033003642234, -3.9950486036244204], [1.4569406893034822, 3.951949944059832, -2.073463794396464, 1.3072055097113058], [2.1324898605347826, -3.3953907364792171, -1.8465958923480672, 1.527932064124256]]], [[[-4.9025247462748878, -0.42756451144568963, -4.8220513411163957, -4.8457973433721522], [-2.7472266906784713, 3.718378785325628, -1.7595199047703911, 4.038130077572605], [-0.0074025325464512903, -0.64341331331365215, 0.45164031140387628, 4.814170996429926]], [[0.8908633306435032, 1.7604592874258991, -0.87906671411341364, 2.2097729431628688], [2.2732249770241157, 1.8681124902331279, 3.0008484624394498, 3.343604306388702], [-3.3754340312749553, -2.2066386918686676, -1.7711563233619243, -0.30788054744443194]]], [[[-2.9537832940669539, 1.6180726591672556, 1.3658713285938155, -1.41045026087945], [1.0256223433601264, -0.15491291414390762, -0.3721366150682579, -2.7594523223915357], [-1.0484730269905396, -0.36235911137710808, -0.94774016668602457, -4.2763949284526035]], [[4.5943665006963617, 1.6683206706103206, -0.91259256178866188, -1.497238978684269], [1.915765680686814, -2.9600050317326332, 2.3237598933172503, -1.4366593755343136], [-2.7804211969822292, -2.6315582061257881, 2.8146906707148922, -1.2730702426189477]]]]))
      res=arg0-arg1
      ref=Data(numarray.array([[[[-5.8740550942219238, -4.3421009562134651, -0.038991432256497482, -1.505795546120547], [3.0331099379544257, -4.6788749215744803, -2.9649002802923317, 5.662417337117601], [1.028636571317556, -4.5949324600330703, -1.2588202341324415, -7.6495969064685321]], [[1.733963733364428, -5.4874064778875669, 2.4080237601278531, 7.8005078906060961], [5.7682642240580755, 0.17538489100117971, -5.1757629922578348, -3.9176650770326473], [7.7169749769567026, -0.69563722661245198, -9.1958126466273082, -1.5626761261503805]]], [[[1.5677920464909647, -0.29388728890695681, -1.3459944468709537, -2.7463958389709084], [0.66145132233932458, -4.7697141427748662, 7.5374739320859288, -2.009087194599199], [1.9942630632695915, 0.042400168650738479, -2.5263289275300185, 1.9960655243119074]], [[-7.2585218425805387, -1.9029973879795303, 2.5646293399229121, 3.5738698446309138], [2.4390816705388945, -4.0003682273830528, -3.0249258168183957, -2.5280846863753412], [-6.0824545980948042, -3.0378931862782421, 0.23073526209399908, -6.3237716694147652]]], [[[-6.9309562040921344, -0.95080292711963565, 1.5476356196274264, -0.79187698978921173], [-4.6745881531341675, -2.2099549477239835, -0.27383827673319949, 2.6001045007828747], [0.67706562446033303, 0.19885155263648535, 1.8723643630928146, -1.5832400223864944]], [[8.9338763574960769, 2.9534619366618902, -1.3903051026805611, -0.76414444809473459], [-8.3127578862566942, -1.0223653606456633, -0.27827975325654153, 6.31116264436662], [-3.0396211115275662, -2.5600322971949496, -6.7179440023382755, 1.7246800143754211]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[9.0462908239915727, 4.4510765787314002, 1.3920812496948041, -2.1256119786684442], [3.1717177361966247, -0.075043719154013644, 2.681407203105219, 4.6414259289389133], [2.6858816245503014, 1.1559530786766445, -4.639201288312166, 3.7872963046570085]], [[-4.3336814815565177, -0.25239010536231632, 3.5334900020142541, -0.14843353984902485], [-4.536121216317766, -2.3429202169359549, 2.5354726504019642, 3.295569483884254], [-3.592900909440389, 7.5040939549006103, -2.928211024434936, -5.4654799221711832]]], [[[8.6271171736518966, 0.57213756968284901, 0.045410371098531854, 0.83392392631697909], [0.82292892830636788, -2.9605555599657851, -1.6996994954072102, -4.7741071880138382], [3.7276746049124805, 1.659634926194486, 1.4358945286613283, -8.0840624783598098]], [[3.1511446910194838, -0.37298780442825397, -3.482169902960031, 2.0277608562075242], [1.1255477564047887, -3.770165285568936, -2.5887674844192006, -1.0463730229903927], [4.6542367393029407, 4.141365777471119, 5.3400080237283261, -4.4055572409908397]]], [[[-0.76049429817729663, -5.8590659472339643, 1.7583471172502279, 3.0029434118020872], [-4.8135980535284437, -1.4747074170709009, -2.0600972832551969, 1.0351562287975979], [3.6374191883834066, 4.3336133927250948, -2.5967605377245455, 5.7611910977930725]], [[-7.4586876215464866, -6.3412657963097256, 2.2990657336376294, 5.617392808321517], [-1.0541502436771575, 2.8581250405948371, -4.519690806966123, -1.3599245224335035], [4.5113733378789318, 4.4527030994155599, -0.81068183197229615, 4.5884032971232021]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_sub_overloaded_taggedData_rank4_expandedData_rank0(self):
      arg0=Data(numarray.array([[[[1.2274233779150299, -2.3741739489326728, -4.813381946114804, 2.8974974454967537], [3.51748039533007, -3.9213842313389269, 0.25222153675751358, 2.7717433179896283], [-4.3365195359378621, -1.3646126172915141, -2.3630022887893021, 2.1312171365858701]], [[-1.0861582798732461, -0.35773602286518447, -2.789404016688092, 2.9353748207420018], [2.8156118372167862, 0.51870718032887098, 4.1472392186711637, 2.0323190555084656], [1.5895554647232046, 3.4572440442200634, -2.2507733653596795, 0.50180674172946382]]], [[[2.6297214829824949, 1.3208407276119951, -3.7021295591479761, -4.6164041742291779], [-2.1678167275552598, -0.35548440664220227, 2.2077448658165064, -1.3920979937745082], [-1.2391562608305295, -0.65995644630944295, -4.6494643841811003, 2.2991246454105196]], [[4.4506882416523119, -4.5207451419382565, -3.7617883534215721, 0.92207146680956598], [0.10623197241413429, 4.3760542740964095, 0.50534926606255404, -4.6967820479675986], [-2.7353783940182472, -0.43844976891582643, -4.6232821757150653, 2.6159182055902761]]], [[[-2.0581208858704301, -2.7678959825017846, 3.6046917227350921, 1.8970844668817985], [-2.6175236451557424, -4.0157304476315954, -2.1000968961256783, 1.8564484539679125], [3.7089426931259677, -3.103672243647738, -2.7929694366809157, 0.88678668918070436]], [[4.184107722443736, -1.5609016281259445, 1.0524083000942719, -4.2038755776336831], [-4.3388371886558748, -3.0503486763132095, 4.4613361037985371, 1.4988613936037769], [2.2027270031620692, -3.6865138755815909, 1.1524278055831658, -2.9653509548487413]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[-1.5370269651238813, -1.8438899804272104, -4.0702713745194021, 1.9795950777123199], [1.1236516724903858, 0.54587548801110763, 3.2804836622685425, 3.8065592265918387], [-4.4760634105655042, -4.2869450970665079, -4.2111306642059638, 1.7445772071465457]], [[4.6270874364839827, -4.1463564939434283, 4.8550786057780346, -1.9533024224259199], [0.81165205147049413, 3.9392440966443587, -1.4858710308948209, -0.83280630416634338], [2.0647887685913258, -0.8616506118323386, 0.44681156898010332, 4.9978053540084826]]], [[[3.714281341999774, 0.90780461097629228, 0.14305381423850427, -2.6977823619390606], [-2.3965262381787578, 1.0378821709113808, -2.1644851471048785, 3.4942452146397773], [2.2982320761009252, 3.6948686876642949, 1.5984661794651629, 1.0976723739103322]], [[1.145723216237875, 0.87257263824348197, 0.67759195786388648, -0.17393140172009236], [0.69438810115922323, 3.9987073685299777, 2.835197068606913, 1.5302938513407938], [-2.4750370102850141, 1.3029068415209935, -3.2140631936764752, -1.4282643575500495]]], [[[-0.18916099135129016, -2.7829496644601504, 1.2047383145572175, -0.3541555585650924], [-0.89108637082273923, -0.58723824434794558, -0.76299006506560207, -1.1012915192729356], [-3.7498611848373917, 4.7248398707937618, 2.3599213927080855, 0.8027903217886232]], [[0.51887913001739694, 1.2586599853978564, -2.4629850811433815, 3.747337452522018], [0.40216702269540416, -0.67856529616969841, -0.10334440239049947, 4.3605278839529031], [-2.5982702975908465, -1.7846169679935509, -0.72457519015928007, 4.2997963568353352]]]]))
      arg1=Data(-3.60908005899,self.functionspace)
      arg1.setTaggedValue(1,-2.36551635685)
      arg1.expand()
      res=arg0-arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[[[4.8365034369003821, 1.2349061100526795, -1.2043018871294517, 6.5065775044821059], [7.1265604543154222, -0.31230417235357466, 3.8613015957428658, 6.3808233769749805], [-0.72743947695250988, 2.2444674416938382, 1.2460777701960501, 5.7402971955712223]], [[2.5229217791121061, 3.2513440361201678, 0.81967604229726021, 6.5444548797273541], [6.4246918962021384, 4.1277872393142232, 7.756319277656516, 5.6413991144938178], [5.1986355237085569, 7.0663241032054156, 1.3583066936256727, 4.110886800714816]]], [[[6.2388015419678471, 4.9299207865973473, -0.093049500162623922, -1.0073241152438257], [1.4412633314300924, 3.25359565234315, 5.8168249248018586, 2.2169820652108441], [2.3699237981548227, 2.9491236126759093, -1.0403843251957481, 5.9082047043958719]], [[8.0597683006376641, -0.91166508295290427, -0.15270829443621992, 4.5311515257949182], [3.7153120313994865, 7.9851343330817617, 4.1144293250479063, -1.0877019889822463], [0.873701664967105, 3.1706302900695258, -1.0142021167297131, 6.2249982645756283]]], [[[1.5509591731149222, 0.84118407648356763, 7.2137717817204443, 5.5061645258671508], [0.9915564138296098, -0.40665038864624314, 1.5089831628596739, 5.4655285129532647], [7.3180227521113199, 0.50540781533761425, 0.81611062230443654, 4.4958667481660566]], [[7.7931877814290882, 2.0481784308594078, 4.6614883590796241, -0.59479551864833091], [-0.72975712967052253, 0.55873138267214273, 8.0704161627838893, 5.1079414525891291], [5.8118070621474214, -0.077433816596238714, 4.761507864568518, 0.64372910413661089]]]])+(1.-msk_ref)*numarray.array([[[[0.82848939172620373, 0.52162637642287457, -1.7047550176693171, 4.3451114345624049], [3.4891680293404708, 2.9113918448611926, 5.6460000191186275, 6.1720755834419236], [-2.1105470537154192, -1.921428740216423, -1.8456143073558788, 4.1100935639966307]], [[6.9926037933340677, -1.7808401370933433, 7.2205949626281196, 0.4122139344241651], [3.1771684083205791, 6.3047604534944437, 0.87964532595526412, 1.5327100526837416], [4.4303051254414108, 1.5038657450177464, 2.8123279258301883, 7.3633217108585676]]], [[[6.079797698849859, 3.2733209678263773, 2.5085701710885893, -0.33226600508897564], [-0.031009881328672773, 3.4033985277614658, 0.2010312097452065, 5.8597615714898623], [4.6637484329510102, 6.0603850445143799, 3.9639825363152479, 3.4631887307604172]], [[3.51123957308796, 3.238088995093567, 3.0431083147139715, 2.1915849551299926], [3.0599044580093082, 6.3642237253800626, 5.200713425456998, 3.8958102081908788], [-0.10952065343492912, 3.6684231983710784, -0.84854683682639021, 0.93725199930003544]]], [[[2.1763553654987948, -0.41743330761006536, 3.5702546714073025, 2.0113607982849926], [1.4744299860273458, 1.7782781125021394, 1.6025262917844829, 1.2642248375771494], [-1.3843448279873067, 7.0903562276438468, 4.7254377495581705, 3.1683066786387082]], [[2.8843954868674819, 3.6241763422479414, -0.09746872429329656, 6.112853809372103], [2.7676833795454892, 1.6869510606803866, 2.2621719544595855, 6.7260442408029881], [-0.2327539407407615, 0.58089938885653414, 1.6409411666908049, 6.6653127136854202]]]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_sub_overloaded_taggedData_rank4_expandedData_rank4(self):
      arg0=Data(numarray.array([[[[-1.3314523083437448, 2.1979867343200175, 2.534332494165926, -4.8043153407797456], [-0.62335911950374445, -1.3198118141293689, -0.78049387074066878, 1.1923493139476724], [0.63653441929640842, -2.9801344554303766, -4.3777052247207395, -3.1201701010090535]], [[1.4687086738617232, -2.7934803759500126, 1.5065730646025921, 2.9662345431772366], [4.5161790191893836, -2.2651441650707116, 2.9057415293191511, 2.412261694361586], [2.752920882305661, -3.5265826398391509, -1.4115070946506703, -3.5639193169236227]]], [[[-1.8856251658962053, -3.5325330512403372, 0.77585534312531657, 2.8375770494409522], [-2.5918453841169686, -0.80669232997283036, 1.8127700858366724, 4.6947893194514432], [3.50080486493267, 2.0128616343932224, 1.5451532244415738, -2.7905038760766789]], [[3.7837519897808463, 4.9835196096957173, 0.72684422408201321, 0.87293198511608683], [0.68501345412279235, -3.1500002233774884, 2.0982992009652337, 0.53859938582049605], [3.0020675665519576, -1.3595402186721395, 3.753824399561104, -0.088248133651715577]]], [[[-1.1876585624097737, -4.7864632104652429, -3.1775012147286552, 3.9377295541314652], [2.1526736252031045, -2.6132964893173751, 1.2490891118775966, -4.9057055163069769], [-4.2334779695696687, 1.9227319727101566, 1.0421873406967075, 0.75509556207822826]], [[1.0699737598641139, 2.2910271707220033, 3.0566440507307924, -3.6538978202104735], [-4.1197261677293149, 4.5831261551468856, -3.8978439397957954, -4.7642702847154066], [2.0040056151958385, -4.8026435703241344, 0.36067982042442459, 2.0379113078622781]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[-1.5992094412986511, -0.70601191590808376, -3.0395433121495907, 2.7809777598202707], [1.1786736323055012, 0.48419783306097752, -4.8737885668481091, 0.37110842333237848], [3.3613561109552297, -3.2838308626999169, -4.8319723867805164, -4.6113278010412557]], [[4.4829414015279294, -3.115303967614178, -3.1805112075748099, 2.8592090097297786], [-4.3216333142320256, 1.4824381226321046, 0.032205603421481044, 3.3309652000134999], [4.7897102900278945, 4.8508970064648818, -3.457013661336573, -3.39235796234858]]], [[[3.2162248175993149, -3.3837536744350682, 0.46950521022967706, -1.5607230543946993], [3.3401021575996914, 3.3114861722144209, 3.350113537826175, -4.0481675946895468], [0.89708697648934077, -2.9790603311449351, 4.9453360163714351, 2.7684105401028178]], [[-2.6009920245386042, -0.68785625379644966, 4.1811533363849467, -1.8573939267420716], [-2.0332437399761227, -0.63248544447657284, 1.0160005810187478, -4.3524242119760013], [-3.9615434289422904, 1.1908728210182842, -2.4374047787860698, -2.8794421281641061]]], [[[1.6261174367320343, -2.7152054460173058, -0.43643853126431154, 1.274936150456849], [2.3392320018490356, 4.5854540370707042, 4.1902050687211272, 3.2000514834926932], [3.2197945213969366, -0.94758298890660342, 0.88242044344833914, 1.3994277360423464]], [[-0.89121120333787385, 4.5943991474136983, -3.4019161138155249, 0.74480322135949262], [-2.7697747924148794, 1.3644086516790761, 3.5378810633845674, -4.8123342702533467], [4.6756479803029158, -1.7668237659520281, 2.4592526655536044, -0.97165317243246108]]]]))
      arg1=Data(numarray.array([[[[-4.7682592546519746, 3.6910374256033744, -1.0501306262663954, 2.3682542154863366], [2.2782999396763088, 3.8861756542396151, 3.4076376223335867, -0.96362240534523202], [2.5187654051436397, 0.26271823591924814, 1.7673043297547508, -0.024434348074749757]], [[-0.68297458002074674, 1.6288147837162956, 2.1228988839905742, 3.0285230203051796], [-0.5750845977891581, -0.32357174542898992, -4.5846298204124958, -0.35210983997043055], [1.9779738885793563, 3.1398038334435654, -4.2458729744789538, -3.3399254228996709]]], [[[3.0198934495360206, -4.9890777442331959, -0.96532711110701719, 4.5158848636431692], [1.1479071866096202, 3.1327843655758816, -4.3626397792319036, -0.97531256190698201], [-0.91027701949158857, 0.7129992765413693, 3.2021154814861923, -2.8209150218625298]], [[4.069763576205796, -0.75746047143555195, 1.6255954142756686, -4.9374322460206468], [3.1986298808862035, 4.5283551199569612, -4.5668384651835838, 0.55301777910003214], [0.95433483160328603, 0.024705017091953607, -1.2188411694303802, -3.2698537591926513]]], [[[-2.9787662576241116, -0.050777180976908198, 0.48300550143113874, -4.2214624011320057], [-1.9233957509420585, 1.0221076235925999, 2.1260223520988646, -1.4910604833332872], [-3.8880768422556233, -0.62066231060154831, -3.2935962278343167, -2.3455744937018852]], [[-1.6511374845621796, 2.7192236569108825, -3.6576928982692913, 2.6355596712551748], [1.438312521537993, -4.5889505671898352, -4.8773090142909687, -1.9332108158813566], [-3.8099632003414508, -3.4906622315093392, -3.4562407852145816, -4.437214867406718]]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[[3.4275496404270935, 1.1537395362139415, 4.359241778306636, -2.7956873451882904], [-0.57905750667620914, -1.4963390157180143, -1.0546590645254406, -0.60106896650343877], [2.4006800952787479, 1.6046540297517788, 3.3601603786265883, 0.012849540806637805]], [[3.6308664591201794, 0.19028810794039952, 3.6826698054572677, -4.4845402026276036], [-0.58192639991331063, -2.9051693400605574, -1.7742099133525722, -2.1559572966583063], [-1.7677449333712669, 3.3892288138670708, -0.86589132863376772, -2.1674350506515494]]], [[[4.3616447130022689, -1.3671103803034725, -4.1188908609134414, -2.10985376747576], [-2.198249892038584, 1.0265269002665081, -2.542133483398433, 4.4393130960272362], [2.7859993179084146, -0.38087906420919548, -1.6619343907139852, -4.5308017494556143]], [[-4.7515480793480345, 1.7382817373010093, 2.8977641251131914, -3.2913130914447217], [-0.41984372612900422, 1.6462696640680772, 0.99681798638913222, -4.8573493031921302], [-2.7943028597843309, -1.7984177902458964, -2.6921702498473046, 4.3733743180738038]]], [[[0.75333195636036621, -2.117631678772808, 1.9553735547204809, -2.9397756019429178], [4.0253539232471116, -0.67099660655985716, -4.0766290699129986, 2.4219228629964649], [-3.226477257261501, 2.4243676560286422, 1.68788169038812, -1.6838948467025983]], [[-4.9953466953627501, -4.8906431446689433, -2.4669191502700025, -0.91707314335864609], [-3.1394725703363777, 2.4689920763259732, -2.9952182306520658, 0.071409338916285314], [4.976415123142381, -2.0939008155336247, -3.6245017728257798, 1.6225161002674326]]]]))
      arg1.expand()
      res=arg0-arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[[[3.4368069463082298, -1.493050691283357, 3.5844631204323214, -7.1725695562660823], [-2.9016590591800533, -5.205987468368984, -4.1881314930742555, 2.1559717192929044], [-1.8822309858472313, -3.2428526913496247, -6.1450095544754904, -3.0957357529343037]], [[2.1516832538824699, -4.4222951596663087, -0.61632581938798214, -0.062288477127943054], [5.0912636169785417, -1.9415724196417217, 7.4903713497316469, 2.7643715343320165], [0.77494699372630471, -6.6663864732827163, 2.8343658798282836, -0.22399389402395187]]], [[[-4.9055186154322259, 1.4565446929928587, 1.7411824542323338, -1.678307814202217], [-3.7397525707265888, -3.9394766955487119, 6.175409865068576, 5.6701018813584252], [4.4110818844242585, 1.2998623578518531, -1.6569622570446185, 0.030411145785850913]], [[-0.28601158642494973, 5.7409800811312692, -0.89875119019365535, 5.8103642311367336], [-2.5136164267634111, -7.6783553433344496, 6.6651376661488175, -0.01441839327953609], [2.0477327349486716, -1.3842452357640931, 4.9726655689914843, 3.1816056255409357]]], [[[1.7911076952143379, -4.7356860294883347, -3.6605067161597939, 8.15919195526347], [4.0760693761451634, -3.635404112909975, -0.87693324022126795, -3.4146450329736897], [-0.34540112731404538, 2.5433942833117049, 4.3357835685310242, 3.1006700557801135]], [[2.7211112444262935, -0.42819648618887918, 6.7143369490000833, -6.2894574914656483], [-5.5580386892673079, 9.1720767223367208, 0.97946507449517339, -2.83105946883405], [5.8139688155372893, -1.3119813388147952, 3.8169206056390061, 6.4751261752689961]]]])+(1.-msk_ref)*numarray.array([[[[-5.0267590817257446, -1.8597514521220253, -7.3987850904562267, 5.5766651050085612], [1.7577311389817103, 1.9805368487789918, -3.8191295023226686, 0.97217738983581725], [0.96067601567648175, -4.8884848924516957, -8.1921327654071057, -4.6241773418478935]], [[0.85207494240775006, -3.3055920755545776, -6.8631810130320776, 7.3437492123573822], [-3.7397069143187149, 4.387607462692662, 1.8064155167740532, 5.4869224966718058], [6.5574552233991614, 1.461668192597811, -2.5911223327028052, -1.2249229116970306]]], [[[-1.145419895402954, -2.0166432941315957, 4.5883960711431184, 0.54913071308106076], [5.5383520496382754, 2.2849592719479128, 5.8922470212246081, -8.487480690716783], [-1.8889123414190738, -2.5981812669357396, 6.6072704070854202, 7.2992122895584322]], [[2.1505560548094302, -2.426137991097459, 1.2833892112717553, 1.4339191647026501], [-1.6134000138471185, -2.27875510854465, 0.019182594629615579, 0.50492509121612894], [-1.1672405691579595, 2.9892906112641806, 0.25476547106123482, -7.2528164462379099]]], [[[0.87278548037166814, -0.59757376724449784, -2.3918120859847924, 4.2147117523997668], [-1.686121921398076, 5.2564506436305614, 8.2668341386341258, 0.77812862049622833], [6.4462717786584376, -3.3719506449352457, -0.80546124693978083, 3.0833225827449446]], [[4.1041354920248763, 9.4850422920826425, -0.93499696354552242, 1.6618763647181387], [0.36969777792149827, -1.1045834246468971, 6.5330992940366333, -4.883743609169632], [-0.30076714283946515, 0.32707704958159667, 6.0837544383793842, -2.5941692726998937]]]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_sub_overloaded_expandedData_rank0_taggedData_rank0(self):
      arg0=Data(3.17101385252,self.functionspace)
      arg0.setTaggedValue(1,-4.73422719756)
      arg0.expand()
      arg1=Data(1.49330239803,self.functionspace)
      arg1.setTaggedValue(1,-0.394831269588)
      res=arg0-arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*(1.67771145449)+(1.-msk_ref)*(-4.33939592797)
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_sub_overloaded_expandedData_rank0_taggedData_rank1(self):
      arg0=Data(1.87992074504,self.functionspace)
      arg0.setTaggedValue(1,2.03352794703)
      arg0.expand()
      arg1=Data(numarray.array([4.9437145112959939, 2.3602255702550181]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([4.495042735040661, 2.3596043462768872]))
      res=arg0-arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([-3.0637937662581818, -0.48030482521720597])+(1.-msk_ref)*numarray.array([-2.4615147880153874, -0.32607639925161358])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_sub_overloaded_expandedData_rank0_taggedData_rank2(self):
      arg0=Data(-3.34216831774,self.functionspace)
      arg0.setTaggedValue(1,-1.67202537118)
      arg0.expand()
      arg1=Data(numarray.array([[2.9607349389540447, 1.2346562919204924, 3.2248067687088806, 4.410431430682042, -1.4385503346776818], [2.8801282203104384, -3.3626154777806394, -1.9138065252059389, -0.77082418824998022, 1.8543421030467533], [-4.8003280788129343, -1.990793178189584, -4.334780022136421, 4.4298037487619695, 4.5074438698269077], [-4.8731182229950631, 0.82250560532754236, 2.0839604460045393, 0.91449348838600741, 4.1979286714627353]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[1.8306776016002413, -3.4320614753317322, 0.70843103988525513, 0.16581736115784285, -3.4735853602523017], [-0.84345724935692257, 0.56922138789655108, 3.4748227446778461, 1.9066801555076696, -4.4494240875894597], [-2.703721845369349, 3.7477639849749451, 0.79474041105253246, 1.8253488488760024, -0.51691832141356642], [2.9111241352978068, -0.35741271997786583, 2.9591137166025643, -1.8084855943001701, -1.734196333658109]]))
      res=arg0-arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[-6.3029032566893735, -4.5768246096558212, -6.5669750864442094, -7.7525997484173708, -1.903617983057647], [-6.2222965380457671, 0.020447160045310664, -1.4283617925293899, -2.5713441294853485, -5.196510420782082], [1.4581597610776056, -1.3513751395457447, 0.99261170440109225, -7.7719720664972982, -7.8496121875622364], [1.5309499052597344, -4.1646739230628711, -5.4261287637398681, -4.2566618061213362, -7.540096989198064]])+(1.-msk_ref)*numarray.array([[-3.5027029727779579, 1.7600361041540156, -2.3804564110629718, -1.8378427323355595, 1.801559989074585], [-0.82856812182079409, -2.2412467590742677, -5.1468481158555628, -3.5787055266853862, 2.7773987164117431], [1.0316964741916324, -5.4197893561526618, -2.4667657822302491, -3.497374220053719, -1.1551070497641502], [-4.5831495064755234, -1.3146126511998508, -4.6311390877802809, 0.13646022312245343, 0.062170962480392333]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_sub_overloaded_expandedData_rank0_taggedData_rank3(self):
      arg0=Data(0.242225230034,self.functionspace)
      arg0.setTaggedValue(1,1.90348519574)
      arg0.expand()
      arg1=Data(numarray.array([[[-0.38859363912276379, -3.8655940437693506], [1.2372058043757503, -3.6981890814624419]], [[-1.7110370764060532, 4.7633455767824433], [4.220015693408353, -1.2227453197124949]], [[-2.4261547829344088, 2.2943927957934021], [3.6357399642456567, -2.5486037966857777]], [[4.5562345353097378, -1.0313978065887697], [-1.0137739634170373, 0.40119430675345136]], [[2.3016542394417536, 3.0664555484251146], [-3.0512752382819919, -0.36799778867223942]], [[2.0723061564323286, -0.64109521299597283], [3.107404153629103, -3.9281332513057512]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[-1.2856101096388626, 1.3680707455500389], [-2.4186465039993754, 2.4960568170568376]], [[0.82253804470592762, 0.53980908351343793], [3.6011972376632748, -4.1912506045579869]], [[0.47746443496173008, 2.7894584759997265], [4.9390109080200162, 0.70233564372741508]], [[-4.5214911128029591, 3.312738538531967], [-4.5022471680501308, 0.58369234117255964]], [[-0.82168273117425006, 3.9294867883898981], [-1.2964113826365664, -4.4986385574468093]], [[-4.8892869138604302, 4.3034396899953968], [-3.0618673306030186, 4.6842350868401219]]]))
      res=arg0-arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[[0.63081886915650109, 4.1078192738030879], [-0.99498057434201304, 3.9404143114961792]], [[1.9532623064397905, -4.521120346748706], [-3.9777904633746157, 1.4649705497462322]], [[2.6683800129681461, -2.0521675657596647], [-3.3935147342119194, 2.790829026719515]], [[-4.3140093052760005, 1.273623036622507], [1.2559991934507746, -0.15896907671971405]], [[-2.0594290094080163, -2.8242303183913773], [3.2935004683157292, 0.61022301870597673]], [[-1.8300809263985913, 0.88332044302971013], [-2.8651789235953657, 4.1703584813394885]]])+(1.-msk_ref)*numarray.array([[[3.1890953053791744, 0.53541445019027289], [4.3221316997396872, -0.59257162131652574]], [[1.0809471510343842, 1.3636761122268739], [-1.697712041922963, 6.0947358002982988]], [[1.4260207607785818, -0.88597328025941469], [-3.0355257122797044, 1.2011495520128967]], [[6.424976308543271, -1.4092533427916552], [6.4057323637904426, 1.3197928545677522]], [[2.7251679269145619, -2.0260015926495862], [3.1998965783768782, 6.4021237531871211]], [[6.7927721096007421, -2.399954494255085], [4.9653525263433309, -2.7807498910998101]]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_sub_overloaded_expandedData_rank0_taggedData_rank4(self):
      arg0=Data(-2.07497989968,self.functionspace)
      arg0.setTaggedValue(1,-4.45668198436)
      arg0.expand()
      arg1=Data(numarray.array([[[[1.1070967571335197, 2.425506495267765, 1.3626853478931817, -2.3231092040501133], [0.96095778699872447, 2.78158480325955, -3.3493051495548021, -0.8778143616266556], [2.2536799630205975, 1.5662885951200503, 2.949840775878938, 4.8973599808545725]], [[-3.9597592325552555, -3.6723875629521938, -4.0088513759967617, 1.2436693006020674], [1.0962965894721837, -4.019786434400574, -1.2708576031681384, -0.65369549114807768], [4.4878601358938681, -3.0937496673014508, -0.91297627821981031, 1.871300603481405]]], [[[-2.9748408617998123, -4.9928100290225776, -3.4156665951840894, 2.3564538027176898], [1.7013230531922288, -2.0167416231886683, 4.2431267291968062, 3.1787413747984097], [-2.5333762579652097, -1.0208631923447173, 4.8003725080831359, 4.8990328227271966]], [[2.2124768117878446, -3.3466686848835838, -3.7739682945651545, -1.7545581357733142], [-3.1358589036073048, -3.9825618915958696, -4.1239970966405091, 4.7396008354038646], [-1.028506989413259, 1.9320919845912945, -0.97488100363227836, -1.1945703437434707]]], [[[-4.2154741282819543, -1.3065968270118091, 1.4373333249271338, -0.74992889556488951], [2.2292676071590947, -0.96157224278878672, -1.8089712098656809, -1.5751354701120679], [-3.7080742250116594, -2.6594392898091481, -1.1622477296056566, -3.7987151048982923]], [[-4.7744791605666483, 4.8761231577890491, 4.4144999991317455, -4.3167310937852434], [-4.2860032609091263, 1.1007405879828935, -4.7056427379011367, -3.2538412733918953], [-4.9117190563275521, -4.3074109840732682, 1.4166344901831271, 1.6919996524343395]]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[[4.6826630936804392, -3.4479316311819543, -0.46138304935556373, 2.5724304159739644], [-3.3476980832889347, -4.4258287083342402, 2.4874045927070201, -4.8604934104112454], [1.0406108018117353, -4.1341101769631958, 1.4170109525076846, -1.4087374088326277]], [[-3.1671171563985681, -4.0170648986562387, -2.0120400672785244, -4.3208315709083447], [2.053090278756903, 0.51807780568038364, 3.8577526447177348, 2.6816106397201871], [-0.57722141083414691, 2.6734024608325155, 2.2431285412305915, -4.4536445759482408]]], [[[-4.9420814555701122, 3.6185027437996204, 3.1267314573456773, 2.8606940502356135], [-3.0170509356636535, 0.1133467426763346, -3.2570011018490099, -4.9001968270618761], [-3.8196075451416567, -4.316644209520919, -4.9037109579078741, -1.3743398848466546]], [[-0.59101363421098707, 3.2524103126382151, -0.25703237818845004, 2.7572769382975508], [-3.3738171874601042, -1.1691381153059321, -3.3978395916867585, 4.7016453562028975], [-0.073980865635848048, -2.4358233768289561, 0.30156336202946221, -0.057291833973129869]]], [[[2.6386675246844327, -3.383548823136552, 0.96688199605574621, 3.5605519584347451], [0.65967445196876895, 0.65927600216991777, -4.3262284188237965, 1.9731595501032642], [0.50912095748670705, -3.1187297696837257, -0.72419329691201462, -3.1413743098870031]], [[3.3832674891640941, -1.1782943800921233, -1.9621839559354504, -1.7461881185529071], [2.97445213838391, -3.1665653054900678, 3.3458810843013289, -3.9798554205797165], [4.7661884747654497, 0.88923319350258367, -0.55854949766054407, -3.1278032901325115]]]]))
      res=arg0-arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[[[-3.1820766568174959, -4.5004863949517411, -3.4376652475771579, 0.24812930436613723], [-3.0359376866827006, -4.8565647029435262, 1.274325249870826, -1.1971655380573205], [-4.3286598627045736, -3.6412684948040264, -5.0248206755629141, -6.9723398805385486]], [[1.8847793328712794, 1.5974076632682177, 1.9338714763127856, -3.3186492002860435], [-3.1712764891561598, 1.9448065347165979, -0.80412229651583766, -1.4212844085358984], [-6.5628400355778442, 1.0187697676174747, -1.1620036214641658, -3.9462805031653811]]], [[[0.89986096211583622, 2.9178301293386015, 1.3406866955001133, -4.4314337024016659], [-3.7763029528762049, -0.058238276495307773, -6.3181066288807823, -5.2537212744823858], [0.4583963582812336, -1.0541167073392588, -6.875352407767112, -6.9740127224111728]], [[-4.2874567114718207, 1.2716887851996077, 1.6989883948811784, -0.32042176391066191], [1.0608790039233287, 1.9075819919118935, 2.0490171969565329, -6.8145807350878407], [-1.0464729102707171, -4.0070718842752706, -1.1000988960516977, -0.88040955594050541]]], [[[2.1404942285979782, -0.76838307267216699, -3.51231322461111, -1.3250510041190866], [-4.3042475068430708, -1.1134076568951894, -0.26600868981829517, -0.49984442957190822], [1.6330943253276833, 0.58445939012517201, -0.91273217007831953, 1.7237352052143162]], [[2.6994992608826722, -6.9511030574730253, -6.4894798988157216, 2.2417511941012673], [2.2110233612251502, -3.1757204876668697, 2.6306628382171606, 1.1788613737079192], [2.836739156643576, 2.2324310843892921, -3.4916143898671033, -3.7669795521183156]]]])+(1.-msk_ref)*numarray.array([[[[-9.1393450780410923, -1.0087503531786988, -3.9952989350050894, -7.0291124003346175], [-1.1089839010717184, -0.030853276026412857, -6.9440865770676732, 0.40381142605059228], [-5.4972927861723884, -0.32257180739745728, -5.8736929368683377, -3.0479445755280254]], [[-1.289564827962085, -0.43961708570441438, -2.4446419170821287, -0.13585041345230842], [-6.5097722631175561, -4.9747597900410367, -8.3144346290783879, -7.1382926240808402], [-3.8794605735265062, -7.1300844451931686, -6.6998105255912446, -0.0030374084124122902]]], [[[0.48539947120945914, -8.0751847281602736, -7.5834134417063304, -7.3173760345962666], [-1.4396310486969996, -4.5700287270369877, -1.1996808825116432, 0.44351484270122299], [-0.63707443921899642, -0.14003777483973412, 0.44702897354722104, -3.0823420995139985]], [[-3.865668350149666, -7.7090922969988682, -4.1996496061722031, -7.2139589226582039], [-1.0828647969005489, -3.287543869054721, -1.0588423926738946, -9.1583273405635506], [-4.3827011187248051, -2.020858607531697, -4.7582453463901153, -4.3993901503875232]]], [[[-7.0953495090450858, -1.0731331612241011, -5.4235639804163993, -8.0172339427953982], [-5.1163564363294221, -5.1159579865305709, -0.13045356553685661, -6.4298415344639173], [-4.9658029418473602, -1.3379522146769274, -3.7324886874486385, -1.31530767447365]], [[-7.8399494735247472, -3.2783876042685298, -2.4944980284252027, -2.710493865807746], [-7.4311341227445631, -1.2901166788705853, -7.802563068661982, -0.47682656378093657], [-9.2228704591261028, -5.3459151778632368, -3.898132486700109, -1.3288786942281416]]]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_sub_overloaded_expandedData_rank1_taggedData_rank0(self):
      arg0=Data(numarray.array([0.58310614555755347, -4.7980493007725098]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([-4.5363148494134977, -2.3109616254147425]))
      arg0.expand()
      arg1=Data(4.16702373077,self.functionspace)
      arg1.setTaggedValue(1,-3.94348061009)
      res=arg0-arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([-3.5839175852129719, -8.9650730315430351])+(1.-msk_ref)*numarray.array([-0.59283423932806967, 1.6325189846706856])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_sub_overloaded_expandedData_rank1_taggedData_rank1(self):
      arg0=Data(numarray.array([0.29665193013295799, 3.0395106094200717]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([-1.038386128683193, -3.9935834571079387]))
      arg0.expand()
      arg1=Data(numarray.array([-0.90426980258475353, -1.4566496238880644]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([3.4486204702499172, 4.6383573932787581]))
      res=arg0-arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([1.2009217327177115, 4.4961602333081361])+(1.-msk_ref)*numarray.array([-4.4870065989331103, -8.6319408503866963])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_sub_overloaded_expandedData_rank2_taggedData_rank0(self):
      arg0=Data(numarray.array([[2.902576629033863, -1.9225148627109325, -0.79789484568108993, -3.4664382416992767, -3.088574372743099], [-3.7527136928056271, -4.1464627919350381, 0.39145677117463062, -4.2801581829315456, -0.30613491023407047], [-3.5215438693484225, -0.35004741594255329, -0.1665662866156854, 0.32859400207717648, -3.4873527480792523], [2.9286842893906044, 2.9451176687738299, -3.7466733249776518, -4.4133582769206878, -4.4527044818563351]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[3.7737931609727742, 3.1918583735138721, 1.0866679517742304, -0.1707635662037843, -1.500069959574696], [0.96623882470123945, 0.39831154297715798, 3.9268456341528477, -3.4547436301669188, 4.6741682373872546], [-2.494403422692042, 2.2843233160304326, -2.9489627615917877, 3.0346021356053967, 3.0517377451247718], [2.8243747821973813, -4.5107891142321774, 3.9549317704929479, 2.2890154872912793, -2.8650373090081018]]))
      arg0.expand()
      arg1=Data(2.05779568301,self.functionspace)
      arg1.setTaggedValue(1,2.00554352282)
      res=arg0-arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[0.84478094602043186, -3.9803105457243637, -2.8556905286945211, -5.5242339247127079, -5.1463700557565302], [-5.8105093758190582, -6.2042584749484693, -1.6663389118388006, -6.3379538659449768, -2.3639305932475017], [-5.5793395523618532, -2.4078430989559845, -2.2243619696291166, -1.7292016809362547, -5.5451484310926835], [0.87088860637717325, 0.88732198576039867, -5.8044690079910826, -6.471153959934119, -6.5105001648697662]])+(1.-msk_ref)*numarray.array([[1.7682496381531294, 1.1863148506942274, -0.9188755710454144, -2.1763070890234291, -3.5056134823943408], [-1.0393046981184053, -1.6072319798424868, 1.9213021113332029, -5.4602871529865631, 2.6686247145676099], [-4.4999469455116863, 0.27877979321078783, -4.9545062844114325, 1.0290586127857519, 1.046194222305127], [0.81883125937773649, -6.5163326370518222, 1.9493882476733031, 0.28347196447163459, -4.8705808318277466]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_sub_overloaded_expandedData_rank2_taggedData_rank2(self):
      arg0=Data(numarray.array([[-0.71602762973101086, 0.79506575049833472, -3.363198727282132, -4.9708120789315835, -3.8226414024270805], [-0.11675975951193163, -2.7827251889820781, 2.6866262193751043, -0.80512052304157677, 4.2033490092587797], [-4.4742584980710545, -1.4878262015071964, 2.7191163335382216, 2.0489294903135082, 3.8393252560777906], [-1.1274469876499182, 4.0758995005663774, 1.222029409101749, 0.23232778465920312, -2.3170066488578667]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[2.755494749862307, -2.2701979550112519, 4.1183381028523094, -3.2820180243672126, 4.245996340019861], [-1.8843585543264618, 1.8009160549874839, 4.186575967836486, -2.3008775816635696, 2.6296313902958559], [2.6361281138700914, 1.4335468917639185, -4.4755002513276798, 3.5353284927489561, -1.3015790472928748], [-0.48710300923621475, 4.5288541398197264, 0.30499279152559122, 3.9662040676318426, -0.88045863148790815]]))
      arg0.expand()
      arg1=Data(numarray.array([[-3.6969039900763532, 0.63754561218925776, -0.26377189998807715, -2.0296015927880795, -3.5494373015120342], [0.30373691147410398, -4.6479396763365841, 3.2422313872139092, -0.48134778786284027, -1.4246001457248747], [1.9812097178834716, -2.6665688788095188, 3.0843892824777335, 3.0579320843705897, -2.2318898317497093], [2.0389547451005532, -3.61769571494328, -1.8918821138452326, -3.453245233672174, -2.2647814249829921]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[4.8792902901253719, 3.778008919866819, 2.1152788558614439, -4.1948201175985407, -3.0213949315898425], [-0.8238796084134794, -0.35562909163246381, -3.5669602400497578, 0.60269792932727828, -4.6592704686812469], [-1.357746098824828, 1.3226298581827223, 3.2383983210723262, -4.4884046897579957, 1.8888299746954598], [0.19251750716918359, -3.0145207884350809, 2.6531224469641748, 4.916822506765774, 3.6755746050181735]]))
      res=arg0-arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[2.9808763603453423, 0.15752013830907696, -3.0994268272940548, -2.941210486143504, -0.27320410091504632], [-0.4204966709860356, 1.865214487354506, -0.55560516783880498, -0.3237727351787365, 5.6279491549836544], [-6.455468215954526, 1.1787426773023224, -0.3652729489395119, -1.0090025940570815, 6.0712150878275004], [-3.1664017327504714, 7.6935952155096574, 3.1139115229469816, 3.6855730183313771, -0.052225223874874604]])+(1.-msk_ref)*numarray.array([[-2.1237955402630648, -6.0482068748780708, 2.0030592469908655, 0.9128020932313281, 7.2673912716097036], [-1.0604789459129824, 2.1565451466199477, 7.7535362078862438, -2.9035755109908479, 7.2889018589771029], [3.9938742126949194, 0.1109170335811962, -7.713898572400006, 8.0237331825069518, -3.1904090219883345], [-0.67962051640539833, 7.5433749282548073, -2.3481296554385835, -0.9506184391339314, -4.5560332365060816]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_sub_overloaded_expandedData_rank3_taggedData_rank0(self):
      arg0=Data(numarray.array([[[4.8464268236913455, 4.9745853433614418], [1.5553954123047307, 1.0978648858920543]], [[-0.67574784770147112, 4.5721936643504044], [3.94809923682255, -0.51918977421707257]], [[-2.1733780328375185, -0.67874222113248095], [0.75405329507134855, -4.9733400822223448]], [[1.9375143439040112, 3.4078107652442711], [-0.30183338446807184, -2.6833362251054185]], [[-4.9772146222353246, 4.2257930798577732], [2.9251748165669147, -1.3678123989128279]], [[-3.9513053356810826, 4.2572586692972489], [3.5639757011846722, 2.2433938546818633]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[-0.97598877247762506, 4.5126621611251903], [-3.9795403757019407, 0.86058342286366329]], [[2.973279516064343, 4.0043891968554366], [-4.1741870563462946, -0.33252550368031919]], [[4.80320953210577, 1.5598823939637043], [1.2255994624330233, 2.5030934511075991]], [[-1.6651029359877034, -4.9991030814428425], [4.2258441380282417, 3.6778433727921875]], [[0.94736119865070201, 2.270157163600901], [-4.1145487043791382, -1.2877383188370795]], [[0.58272386061157633, -2.3924411745793908], [-3.1865237341487704, 1.8651731296110086]]]))
      arg0.expand()
      arg1=Data(-2.17232750985,self.functionspace)
      arg1.setTaggedValue(1,0.886498918103)
      res=arg0-arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[[7.0187543335370908, 7.1469128532071871], [3.727722922150476, 3.2701923957377996]], [[1.4965796621442742, 6.7445211741961497], [6.1204267466682953, 1.6531377356286727]], [[-0.0010505229917732173, 1.4935852887132643], [2.9263808049170938, -2.8010125723765995]], [[4.1098418537497565, 5.5801382750900164], [1.8704941253776735, -0.51100871525967317]], [[-2.8048871123895793, 6.3981205897035185], [5.09750232641266, 0.80451511093291739]], [[-1.7789778258353373, 6.4295861791429942], [5.7363032110304175, 4.4157213645276086]]])+(1.-msk_ref)*numarray.array([[[-1.8624876905807382, 3.6261632430220772], [-4.8660392938050538, -0.025915495239449804]], [[2.0867805979612299, 3.1178902787523235], [-5.0606859744494077, -1.2190244217834323]], [[3.9167106140026569, 0.67338347586059122], [0.33910054432991021, 1.616594533004486]], [[-2.5516018540908165, -5.8856019995459556], [3.3393452199251286, 2.7913444546890744]], [[0.060862280547588909, 1.3836582454977879], [-5.0010476224822513, -2.1742372369401926]], [[-0.30377505749153677, -3.2789400926825039], [-4.0730226522518835, 0.97867421150789546]]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_sub_overloaded_expandedData_rank3_taggedData_rank3(self):
      arg0=Data(numarray.array([[[2.5345305341231095, -3.9380411524134349], [3.2549053250861864, -3.4167795425745648]], [[-2.8374769741887764, -2.8525506996132268], [3.6507388651537038, 4.9310971144704201]], [[4.9617065736707584, -3.2366362694851123], [2.4442729631215645, 0.68395869036750412]], [[1.7964484483842931, -0.14685365167379949], [-0.22580505147559471, -4.1952625824572474]], [[-1.3339867788188453, -0.47481766386604374], [-3.2413800916311897, 1.894533055397285]], [[1.8348832002953692, 1.7345137753756763], [-4.0724433289229207, -0.79856100700433164]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[-2.8189944574042358, -3.2261245088497925], [4.8950253892363769, 2.5770741661283969]], [[1.2401341585946604, -1.5734637345208782], [-0.79590735036694316, 0.61779352376283381]], [[-3.4076935213958439, 0.031656368716429739], [1.9652944560154086, 1.0977149000942967]], [[1.777028113661002, -1.2822419020267484], [4.2114885262273329, 0.54816589622414735]], [[0.39856562268161433, -0.62202129632333936], [-0.30235148375231446, 1.9339782945676101]], [[-1.0460000631020594, 2.7763881026031543], [-2.8684475704144861, -3.092357561997392]]]))
      arg0.expand()
      arg1=Data(numarray.array([[[-2.7809554116716861, -2.4178938679382367], [-4.8550344800907128, -1.3392464366072021]], [[-1.0721381112004833, 1.1790546106017548], [-4.3780111006207409, 2.5971837154005772]], [[-2.9209670997448089, -2.3219529735447173], [-3.1629563486862642, -4.4528979670530617]], [[-2.4843612359932008, -3.5404399210405701], [3.8873295946375634, -3.1843267630781682]], [[-3.6931314427777062, -3.2005241845659169], [-4.6285703902121709, 0.72112814987959162]], [[2.955645134420922, -2.7369867700605455], [-2.6907088961225698, -3.6848201723394434]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[-0.89010941147334144, -3.4446449903731615], [0.73205018935046162, -0.26865385057991276]], [[4.3657591102606137, -3.191196432227513], [-3.1555416523953452, -0.5714040859047973]], [[0.86596134594382779, 0.74755779385562793], [1.5989548429397962, -4.5608378319881746]], [[1.3446996853579023, 4.899342632739538], [1.3177489248840963, 0.71693174792304859]], [[-2.6075034765860741, -0.6236129612256347], [-1.9605243915090864, 0.40432285104030363]], [[2.5461915142326479, -3.169606578641079], [-2.0459471227330415, -1.4124514842052016]]]))
      res=arg0-arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[[5.3154859457947961, -1.5201472844751982], [8.1099398051769001, -2.0775331059673627]], [[-1.7653388629882931, -4.0316053102149816], [8.0287499657744448, 2.3339133990698429]], [[7.8826736734155674, -0.91468329594039499], [5.6072293118078287, 5.1368566574205659]], [[4.2808096843774939, 3.3935862693667707], [-4.1131346461131582, -1.0109358193790792]], [[2.3591446639588609, 2.7257065206998732], [1.3871902985809812, 1.1734049055176934]], [[-1.1207619341255528, 4.4715005454362213], [-1.3817344328003509, 2.8862591653351117]]])+(1.-msk_ref)*numarray.array([[[-1.9288850459308944, 0.218520481523369], [4.1629751998859152, 2.8457280167083097]], [[-3.1256249516659533, 1.6177326977066349], [2.3596343020284021, 1.1891976096676311]], [[-4.2736548673396717, -0.71590142513919819], [0.36633961307561247, 5.6585527320824713]], [[0.4323284283030997, -6.1815845347662863], [2.8937396013432366, -0.16876585169890124]], [[3.0060690992676884, 0.0015916649022953422], [1.658172907756772, 1.5296554435273064]], [[-3.5921915773347073, 5.9459946812442332], [-0.82250044768144459, -1.6799060777921904]]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_sub_overloaded_expandedData_rank4_taggedData_rank0(self):
      arg0=Data(numarray.array([[[[-1.0293310173558465, 4.6126759744818635, -3.999412383049342, 2.7796097211507291], [-4.7890791446154433, -2.3018966565208689, 0.07580104120589759, 0.5665707172883323], [0.061749667348783177, -3.5085266424547989, 1.444744551724134, -4.1388562419147323]], [[0.33406300551935253, 2.9158621368829198, -0.53929798267315032, 3.0778545782652209], [-2.1203431658201599, 0.29435063613809742, 2.593662975224893, -2.4308263408931929], [2.792053002348065, 0.5136620509227372, 4.7565526720184295, 2.655449695302444]]], [[[1.1426533357282311, -1.4271839669909845, 1.0474252544316247, 0.33216594717015013], [-3.0705702644491426, 0.088981689370346118, -0.82609155712682458, 1.7363364482066057], [2.6148552875264439, -1.5310549094943959, 2.1063290975490032, 4.9841308707881371]], [[-1.4981664502280037, -4.2238867634910449, 4.9917344954983296, 4.8356579820959897], [0.32487263805379563, -1.0490227000292185, 3.6081307181086526, -4.300908372948653], [-0.9869809000786276, -3.0372552309205103, -4.5717851811824639, -3.9062093994107929]]], [[[-4.3448299408435211, 1.0641084537882222, 3.4814964247010813, 4.9068823487053361], [-3.3874111557747435, -3.0767954473566084, 4.043170372233714, -4.4165617511937052], [-0.371247577538103, 4.3583664727328912, 0.33203267502543188, -4.4164994169518401]], [[4.6019969595185941, -4.4734211673138793, -3.0386851699039861, 4.5210520239567682], [-4.3975465889902505, 4.6206688648895486, -1.4739855341349148, 2.9999851651464731], [-2.9124198688452161, -4.6930033632838732, -3.5540137842888564, -0.716912242653307]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[-1.576438788500222, 0.70025677948006226, -4.7560168070959534, 2.6780136033834427], [0.37176901610982949, 1.0462351073220724, -4.1053316817922338, 4.2527305068812833], [1.7929803186649726, 3.6556561213602699, -3.0936881892505506, -1.499138804620709]], [[-4.5106648330373291, -1.732249656275183, -0.33031143646472039, -2.5373948767327281], [1.0363094710920375, -4.8050643216130053, -3.0031915181633928, -4.6095956293321692], [3.8853936452141653, 4.7967493707497653, 1.349880144870772, 3.6416093608584923]]], [[[-3.1160073264244073, 4.5439537194504034, 4.0257904032522376, -2.7566448000235622], [-4.2986454606174407, 1.9577726462428613, 4.2542363241774712, -1.695205624373588], [4.5244366587286873, -4.5581838677637556, 3.6913126795024862, 2.6280247968511183]], [[2.2406137530578203, 3.6873462208957175, 2.015971502082861, 4.2743086951646454], [0.65115492904243411, -1.1896871625779659, -3.6145924781587748, -1.4963812058290049], [-4.6797762414840305, 1.3772001846138302, -1.2283231709743525, 3.4713278020936205]]], [[[-0.8562829777023282, -3.903145505071163, -0.094092641795811005, 3.5995946839729136], [-2.1495532361763914, -2.1941082150492219, -4.1426532860691054, -1.0945982744444693], [-1.6770989318138096, 4.2461621183871792, -1.3143949751193285, 4.9430970095692697]], [[-2.5593583474362225, 1.3212924630638359, 0.62358576878583261, -3.4465685074807659], [-0.17991280971259549, -4.3147306495724997, 0.44015169640713925, -2.7250228598759421], [0.027215973338657662, 3.8214735982372634, 4.6709300624308483, -2.0262918462527422]]]]))
      arg0.expand()
      arg1=Data(2.44063652232,self.functionspace)
      arg1.setTaggedValue(1,-1.69573285841)
      res=arg0-arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[[[-3.4699675396795282, 2.1720394521581818, -6.4400489053730237, 0.33897319882704746], [-7.2297156669391249, -4.7425331788445506, -2.3648354811177841, -1.8740658050353494], [-2.3788868549748985, -5.9491631647784811, -0.9958919705995477, -6.579492764238414]], [[-2.1065735168043291, 0.47522561455923817, -2.979934504996832, 0.63721805594153924], [-4.560979688143842, -2.1462858861855842, 0.15302645290121131, -4.871462863216875], [0.3514164800243833, -1.9269744714009445, 2.3159161496947478, 0.21481317297876235]]], [[[-1.2979831865954505, -3.8678204893146662, -1.393211267892057, -2.1084705751535315], [-5.5112067867728243, -2.3516548329533355, -3.2667280794505063, -0.70430007411707596], [0.17421876520276225, -3.9716914318180776, -0.33430742477467845, 2.5434943484644554]], [[-3.9388029725516853, -6.6645232858147265, 2.5510979731746479, 2.3950214597723081], [-2.115763884269886, -3.4896592223529002, 1.1674941957849709, -6.7415448952723347], [-3.4276174224023093, -5.477891753244192, -7.0124217035061456, -6.3468459217344746]]], [[[-6.7854664631672028, -1.3765280685354595, 1.0408599023773997, 2.4662458263816545], [-5.8280476780984252, -5.51743196968029, 1.6025338499100323, -6.8571982735173869], [-2.8118840998617847, 1.9177299504092096, -2.1086038472982498, -6.8571359392755218]], [[2.1613604371949124, -6.914057689637561, -5.4793216922276677, 2.0804155016330865], [-6.8381831113139322, 2.180032342565867, -3.9146220564585965, 0.5593486428227914], [-5.3530563911688978, -7.1336398856075549, -5.9946503066125381, -3.1575487649769887]]]])+(1.-msk_ref)*numarray.array([[[[0.11929406991214453, 2.3959896378924288, -3.0602839486835869, 4.3737464617958093], [2.067501874522196, 2.7419679657344389, -2.4095988233798673, 5.9484633652936498], [3.4887131770773392, 5.3513889797726364, -1.397955330838184, 0.19659405379165751]], [[-2.8149319746249626, -0.036516797862816475, 1.3654214219476462, -0.84166201832036158], [2.7320423295044041, -3.1093314632006388, -1.3074586597510263, -2.9138627709198026], [5.5811265036265318, 6.4924822291621318, 3.0456130032831386, 5.3373422192708588]]], [[[-1.4202744680120407, 6.2396865778627699, 5.7215232616646041, -1.0609119416111956], [-2.6029126022050741, 3.6535055046552278, 5.9499691825898378, 0.00052723403877852348], [6.2201695171410538, -2.8624510093513891, 5.3870455379148527, 4.3237576552634849]], [[3.9363466114701868, 5.383079079308084, 3.7117043604952276, 5.9700415535770119], [2.3468877874548006, 0.50604569583440062, -1.9188596197464083, 0.19935165258336163], [-2.9840433830716639, 3.0729330430261967, 0.46740968743801403, 5.167060660505987]]], [[[0.83944988071003834, -2.2074126466587964, 1.6016402166165555, 5.2953275423852801], [-0.45382037776402484, -0.49837535663685539, -2.4469204276567389, 0.60113458396789721], [0.018633926598556894, 5.9418949767995457, 0.38133788329303808, 6.6388298679816362]], [[-0.86362548902385594, 3.0170253214762024, 2.3193186271981991, -1.7508356490683994], [1.515820048699771, -2.6189977911601332, 2.1358845548195058, -1.0292900014635755], [1.7229488317510242, 5.5172064566496299, 6.3666629208432148, -0.33055898784037563]]]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_sub_overloaded_expandedData_rank4_taggedData_rank4(self):
      arg0=Data(numarray.array([[[[2.4610526498759153, -1.1152083887031083, -0.12299890546029868, 1.5683008457043695], [-4.0873508766928746, -2.7053546016947139, -3.7549465288785786, 3.9519633674029766], [-1.1735542140484201, -4.3149336273557832, -4.9863600479956371, -0.76492187743278617]], [[-0.14640199013260258, 0.29230440531820534, -2.4637366351006937, 3.397426805290042], [3.7918911827417183, 4.9924007596180644, -2.6900730542812479, -1.7018381155601201], [-4.3660009059416227, 1.9330088481865824, -3.4398429543905804, -0.22840088606586395]]], [[[-1.4318793112753001, 1.8781857942423983, -2.9812845903507315, 4.5682960127185694], [3.1562935505738761, -1.0677552555821568, 3.9772244762997264, 1.4974583007966569], [-0.37626415988588402, -1.1040801109983511, -4.7497076983177156, -4.680162152309757]], [[-3.2224793134211991, 2.8433807560533246, -4.0134164708704851, 0.32213028157934342], [-4.4784422366493857, -1.2076577234633987, -2.8455899233443436, -3.2252897094642341], [4.9447006393286763, 2.7488346987839138, -4.2584850826432197, 3.9531681073127505]]], [[[2.339406980990586, -3.8485997875342424, 1.8232133414068201, 4.641729222089765], [3.235569154060558, 2.0845420560974421, 3.3265167386531385, -1.5533297283327832], [-4.9644588385718684, -0.18489288441876894, 1.5479186108278506, -0.10098647924617055]], [[0.49086477552784391, -3.9076399749835531, 3.0699560885428845, 2.7786404417275934], [3.9669008458002839, -2.5117771484873486, 1.2300199561524465, 0.45049163982235818], [-1.9539504414544604, -0.60749245511551919, -2.7299083807273972, 1.4092765444937232]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[-3.1425047006175664, 2.2599630583169716, -4.6012970632571122, 4.103331240795038], [1.982921376115713, 4.2985776731903869, -3.0168240650206082, -3.7017681674875513], [3.7698477521790217, 3.9228061048205394, 3.9980766969192647, -1.573681648907499]], [[-4.9848997532948118, 0.13380642815295829, -2.3000670355179809, -3.2404640807016474], [3.6505272390042762, 3.4627566349105763, -1.1276653226956865, -2.049106933432391], [-4.5415093280683312, -3.8315066164861076, 1.1761174623348749, -0.40637173625883261]]], [[[4.7303359414781827, -0.606621994561511, -2.7421095615684168, -3.8223798480454665], [-3.8663586623759683, -0.86372098382471751, -3.8617042047906001, -1.3292070526426105], [-1.4752779034682462, -3.7800183717709759, 0.06947407358268709, 0.038002869101983805]], [[1.8686552089801021, 0.093196052856119316, 4.8841051848003119, -1.2038083511841338], [4.1968833964266352, 3.5543650377451463, 4.8819354407300501, -4.3631319297022406], [1.3982168379220239, 2.8839900209936618, -1.297483970876343, 0.68677137119766307]]], [[[1.7031375139454683, 4.3365381850676439, 1.7233924568156942, 4.6567026710174826], [-3.5037413796872885, 4.0987115372044798, -1.6645967599658809, 1.5159418671597278], [-1.7404625414133035, -2.2041008668378428, -4.5210918758254737, 4.4618549526581646]], [[-2.6784227595876544, 2.6778420831760021, -0.42594740586745417, -2.7584626585183845], [0.68773998092638511, 4.4042023379993154, 0.89768232177684304, 2.6032871056255402], [-2.9757441693780717, -0.19968345216364458, 2.0082108224547284, -1.6864306443569443]]]]))
      arg0.expand()
      arg1=Data(numarray.array([[[[0.71311729860168338, -0.4590454520801277, 4.2209684449423754, -3.7906842218683146], [1.3099668605379442, -1.4949132034437551, -0.30893632453454245, -1.5901713124060968], [3.9956640595819977, 3.2208549290813142, 3.7023612209837005, 4.0505257586441825]], [[1.9542344919370276, 0.027347040687369706, -3.8275314728317946, -1.0574193466451676], [1.7849254536663857, -4.7032412978314122, -1.7392436727290859, 4.1732856970946468], [4.8532866105701853, -4.1031561510970258, 4.9768717755896237, 3.2685598627695391]]], [[[3.2140096662203614, -0.39955633611762575, 4.1121477330464256, -1.9894164806605508], [1.8494049067199327, 0.81159007591113586, 0.89265135138401064, 0.98411830781439757], [-4.2372137613894409, -1.7152902164583783, -1.6910874490775507, -3.5050427921285565]], [[-1.9808395120126034, 1.3961764556662191, 2.1965140261575939, -2.7903384490769323], [4.6140333307873895, -0.81430209988718438, -0.52978713445453351, -3.5522449011752455], [-1.2909567757019067, -3.2463454691699623, -3.0846952502115297, 2.2824501369715753]]], [[[-1.2953778400152629, -4.6831592784454044, 3.6228303452263049, -1.7992304332116884], [-4.2387896751914811, 4.9147712615469654, 2.3327959702376235, 0.1366801501974777], [-1.3544539462704042, 4.7223750696839222, 2.9919623367491521, -2.8105847868644238]], [[-1.0555797867368124, -3.9786281318389105, 4.5082291952933211, -4.0455660332832677], [4.8386620351374727, 3.0249339217377873, -4.7421279297683832, 3.6304735395290244], [2.0914040620048135, 3.545525620916921, 0.3492323166655007, -1.7221793634932014]]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[[-1.9787638924171089, 0.96159058841968559, 1.9018809442784352, -2.7908386405345986], [1.3537885612921299, -1.5849268934015184, -3.4397420797660128, -4.6401461953658849], [1.2269380278332545, 3.908436642118934, 1.7892125683603517, 2.5952229687053405]], [[-4.3313348763811845, -4.8033572826178981, -4.8047415805971028, 1.5423546059821858], [2.3810531019674546, -0.10675403866078526, -0.805370416100609, 4.7305830742832295], [3.0698413781572711, -4.880702023456208, -1.9921204832219033, -3.2188093111343941]]], [[[2.0787752833356663, -3.9195628776115834, 1.9974565060569311, -2.5056481007738398], [1.6287706273172553, 4.9876032199844005, 1.5392560225537819, 4.6984463473428111], [3.7085194601874534, 4.6026804988550083, 0.54709362337146494, -3.1543583674368736]], [[3.6487332552696738, 2.8379483688101805, -4.5750749147537926, 4.3775544828477457], [4.5475977434079944, 4.3855163392081948, 1.6839954167795952, 2.0183031449671152], [-4.5191782857262091, 4.4085036590365902, -3.5652545560700375, -4.2599220257328954]]], [[[3.3547857420878522, -0.20012217563206924, -2.4567646420151013, 2.2082847218892407], [4.3339634797609179, -4.7010641375406266, -0.14346395498221298, 0.47483722602866507], [3.7422615472598579, -0.93697765038622283, 4.9458896499731786, -4.475035158319062]], [[4.6640514092572598, 3.3314669356401811, 1.1097112499521025, -3.1044883841299686], [-4.6271005643898322, -4.1347119676538995, -4.7852954895670603, -2.5321129591212097], [-2.1269317157104126, -2.0989394248805358, 2.5900992104319105, 0.030120144769069768]]]]))
      res=arg0-arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[[[1.7479353512742319, -0.65616293662298064, -4.3439673504026741, 5.358985067572684], [-5.3973177372308188, -1.2104413982509588, -3.4460102043440362, 5.5421346798090738], [-5.1692182736304177, -7.5357885564370974, -8.6887212689793376, -4.8154476360769687]], [[-2.1006364820696302, 0.26495736463083563, 1.3637948377311009, 4.4548461519352092], [2.0069657290753327, 9.6956420574494757, -0.95082938155216201, -5.8751238126547669], [-9.2192875165118089, 6.0361649992836082, -8.4167147299802032, -3.4969607488354031]]], [[[-4.6458889774956615, 2.277742130360024, -7.093432323397157, 6.5577124933791202], [1.3068886438539433, -1.8793453314932926, 3.0845731249157158, 0.5133399929822593], [3.8609496015035569, 0.61121010546002719, -3.0586202492401648, -1.1751193601812004]], [[-1.2416398014085956, 1.4472043003871056, -6.2099304970280791, 3.1124687306562757], [-9.0924755674367752, -0.39335562357621434, -2.3158027888898101, 0.32695519171101139], [6.235657415030583, 5.9951801679538761, -1.17378983243169, 1.6707179703411752]]], [[[3.6347848210058489, 0.83455949091116199, -1.7996170038194848, 6.4409596553014534], [7.4743588292520391, -2.8302292054495233, 0.99372076841551493, -1.6900098785302609], [-3.6100048923014643, -4.9072679541026911, -1.4440437259213015, 2.7095983076182533]], [[1.5464445622646563, 0.07098815685535742, -1.4382731067504366, 6.8242064750108611], [-0.87176118933718882, -5.5367110702251363, 5.9721478859208297, -3.1799818997066662], [-4.0453545034592739, -4.1530180760324402, -3.0791406973928979, 3.1314559079869246]]]])+(1.-msk_ref)*numarray.array([[[[-1.1637408082004574, 1.2983724698972861, -6.5031780075355474, 6.8941698813296366], [0.62913281482358308, 5.8835045665919052, 0.42291801474540458, 0.93837802787833358], [2.5429097243457672, 0.014369462701605329, 2.208864128558913, -4.1689046176128395]], [[-0.6535648769136273, 4.9371637107708564, 2.5046745450791219, -4.7828186866838331], [1.2694741370368217, 3.5695106735713615, -0.32229490659507753, -6.7796900077156206], [-7.6113507062256023, 1.0491954069701004, 3.1682379455567782, 2.8124375748755615]]], [[[2.6515606581425164, 3.3129408830500724, -4.7395660676253479, -1.3167317472716267], [-5.4951292896932236, -5.851324203809118, -5.400960227344382, -6.0276533999854216], [-5.1837973636556995, -8.3826988706259833, -0.47761954978877785, 3.1923612365388574]], [[-1.7800780462895718, -2.7447523159540612, 9.4591800995541035, -5.5813628340318795], [-0.35071434698135917, -0.8311513014630485, 3.197940023950455, -6.3814350746693558], [5.9173951236482329, -1.5245136380429285, 2.2677705851936945, 4.9466933969305584]]], [[[-1.6516482281423839, 4.5366603606997131, 4.1801570988307954, 2.4484179491282418], [-7.8377048594482064, 8.7997756747451064, -1.5211328049836679, 1.0411046411310627], [-5.4827240886731614, -1.26712321645162, -9.4669815257986514, 8.9368901109772274]], [[-7.3424741688449142, -0.65362485246417901, -1.5356586558195566, 0.34602572561158418], [5.3148405453162173, 8.5389143056532149, 5.6829778113439033, 5.1354000647467499], [-0.84881245366765912, 1.8992559727168912, -0.58188838797718212, -1.7165507891260141]]]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_sub_overloaded_Symbol_rank0_taggedData_rank0(self):
      arg0=Symbol(shape=())
      arg1=Data(0.582121894038,self.functionspace)
      arg1.setTaggedValue(1,-1.2015882269)
      res=arg0-arg1
      s0=numarray.array(-3.29176287905)
      sub=res.substitute({arg0:s0})
      ref=Data(-3.87388477309,self.functionspace)
      ref.setTaggedValue(1,-2.09017465215)
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_sub_overloaded_Symbol_rank0_taggedData_rank1(self):
      arg0=Symbol(shape=())
      arg1=Data(numarray.array([-1.6226165681167162, -3.8614849107021665]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([3.914576292066883, 1.4557762386956306]))
      res=arg0-arg1
      s0=numarray.array(4.51386770027)
      sub=res.substitute({arg0:s0})
      ref=Data(numarray.array([6.1364842683899736, 8.3753526109754244]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([0.5992914082063745, 3.0580914615776269]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_sub_overloaded_Symbol_rank0_taggedData_rank2(self):
      arg0=Symbol(shape=())
      arg1=Data(numarray.array([[-1.1650961769520372, -1.9675237476087681, -2.7354609320608105, -0.88673441034929912, -3.944848416287583], [-0.335077584837844, 4.0177180335017368, -2.1122209888578647, 3.2050022063761237, -4.6710734843736148], [1.7917797077594164, 2.4247159974480157, 1.3318737513519041, -2.3397914229146766, -3.8312572517541419], [-3.638547477297791, -2.7318639467464969, 2.7408418280593994, -3.0281170909123967, 3.7370869594850049]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[-1.6790439883941133, 0.72207186916637411, 3.0149036359501444, -2.4706181109946512, 2.3971006630061282], [4.0183470758185962, 4.3927784252128497, 3.773690423051459, 2.2281071273141571, -1.1421475142021533], [-3.4286917686787488, -2.9387352061907848, -0.71011628484454015, -4.465710410304947, 2.4673716533084464], [-0.86830553055690807, -4.5339070380375173, 4.696634656732531, -4.8213659386281646, -1.5959949527386321]]))
      res=arg0-arg1
      s0=numarray.array(-2.74554613427)
      sub=res.substitute({arg0:s0})
      ref=Data(numarray.array([[-1.5804499573177866, -0.77802238666105561, -0.010085202209013211, -1.8588117239205246, 1.1993022820177592], [-2.4104685494319797, -6.7632641677715606, -0.63332514541195906, -5.9505483406459474, 1.9255273501037911], [-4.5373258420292402, -5.1702621317178394, -4.0774198856217279, -0.40575471135514718, 1.0857111174843181], [0.8930013430279673, -0.013682187523326839, -5.4863879623292231, 0.28257095664257292, -6.4826330937548287]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[-1.0665021458757105, -3.4676180034361979, -5.7604497702199682, -0.27492802327517252, -5.142646797275952], [-6.7638932100884199, -7.1383245594826734, -6.5192365573212827, -4.9736532615839808, -1.6033986200676704], [0.68314563440892506, 0.19318907192096102, -2.0354298494252836, 1.7201642760351232, -5.2129177875782702], [-1.8772406037129157, 1.7883609037676935, -7.4421807910023547, 2.0758198043583409, -1.1495511815311916]]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_sub_overloaded_Symbol_rank0_taggedData_rank3(self):
      arg0=Symbol(shape=())
      arg1=Data(numarray.array([[[1.7417929204702034, 4.1674580894402418], [1.1100945098480679, 3.1245192710741208]], [[2.0598090161963256, -3.4252820536834463], [1.4450643701541139, -4.5234590306490832]], [[3.8890562294101674, -0.98035065940240251], [-0.98518417929845636, 4.803926034707656]], [[-4.5836759670899818, -3.7538762268226797], [4.8045638019998069, -3.7970527621458361]], [[-3.9211787328864469, -2.5674146203030199], [1.3249021629386899, 2.2864166323603916]], [[-2.6268046925535318, -4.6073453219934706], [4.6605258104748231, 2.1462220797201645]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[4.0753854063785244, 1.434708088503676], [1.1762112954218864, -1.8725563543238999]], [[-3.5361615039107819, -4.9681946845051028], [-2.9848647970443656, -1.960261885263396]], [[-3.2171964896676375, 1.0449662877402286], [3.6060081597693578, 2.3197177059557008]], [[4.0442065919480434, -2.0402001068878048], [0.65736668018486188, 3.1748486592422669]], [[-0.57495469987139725, 2.3112447773487688], [-4.4519577238562587, 0.48048914845688095]], [[3.8837992025475927, -2.6824179644749178], [-1.9526836116218407, -0.29139786035874238]]]))
      res=arg0-arg1
      s0=numarray.array(-4.83913771585)
      sub=res.substitute({arg0:s0})
      ref=Data(numarray.array([[[-6.5809306363225195, -9.0065958052925588], [-5.949232225700384, -7.9636569869264369]], [[-6.8989467320486417, -1.4138556621688698], [-6.28420208600643, -0.31567868520323294]], [[-8.7281939452624826, -3.8587870564499136], [-3.8539535365538597, -9.6430637505599712]], [[-0.2554617487623343, -1.0852614890296364], [-9.6437015178521222, -1.04208495370648]], [[-0.9179589829658692, -2.2717230955492962], [-6.164039878791006, -7.1255543482127077]], [[-2.2123330232987843, -0.23179239385884554], [-9.4996635263271401, -6.9853597955724807]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[-8.9145231222308396, -6.2738458043559922], [-6.0153490112742025, -2.9665813615284162]], [[-1.3029762119415342, 0.12905696865278671], [-1.8542729188079505, -2.8788758305889202]], [[-1.6219412261846786, -5.8841040035925447], [-8.4451458756216731, -7.1588554218080169]], [[-8.8833443078003604, -2.7989376089645113], [-5.496504396037178, -8.0139863750945821]], [[-4.2641830159809189, -7.1503824932010849], [-0.38717999199605746, -5.3196268643091971]], [[-8.7229369183999097, -2.1567197513773984], [-2.8864541042304754, -4.5477398554935737]]]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_sub_overloaded_Symbol_rank0_taggedData_rank4(self):
      arg0=Symbol(shape=())
      arg1=Data(numarray.array([[[[-1.7239722643460995, -4.0785929036192679, -2.7878763370321691, 1.4090191333560398], [-1.3452045040420391, -3.0875463966561121, -2.3477804977395889, -2.7143527745366347], [4.6826856000362493, -4.4573214925419604, 4.0912571632456878, -3.6979391511335957]], [[4.7676517597064958, -0.69446578862612363, -2.7946600541160627, -4.6387557577151464], [-3.8152187834317419, -1.1103553680141953, -2.6992379997484131, -1.3939343925574499], [-2.8639709447110242, -0.93277023292250227, -3.005859027861236, -1.5194298419556054]]], [[[-3.6461012966289443, -3.595213084837968, 1.7652113752678735, 3.9354765962238645], [-4.8061320937344965, -2.0493307456299839, -1.9074141856619709, -2.4966825828085448], [0.0068570908462950442, 3.439496355973418, -2.9248866829726152, -3.0357365933113414]], [[-3.3337436038330406, -3.9596730132837097, 2.8903556569228694, -1.5528367145431563], [-1.6856225993506992, 1.9564035325452167, 0.77700921036954185, -3.2821859419057287], [-3.9249983585317274, 4.5293090673562375, -2.4660694632175897, 3.7059309218225795]]], [[[1.7003144943026873, 1.2924514612541662, -0.7290623055768588, 2.7809882374222443], [-1.5679628020304657, 3.9585736392805106, 1.801735046602694, -2.5359934509185003], [3.8245409615975294, 4.2836473864628477, -3.0587294395931321, 3.4035007507567876]], [[3.347111271275125, -3.5116729158417281, -2.817410420018577, 2.1476103240460951], [-0.78621191857894601, 3.0998955915287514, -2.5581039100591663, 0.11089765013161479], [2.3228762606423814, -1.6756824618662467, -4.0867750958128237, 2.67810782480423]]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[[2.1685172033039191, -4.5796634026950969, 0.92437238150228929, 4.20465835927636], [0.043867599800918811, -0.12491317306365701, -2.0987595267092853, -1.9618656144074009], [-2.5871038274633404, -4.0470396109286408, -4.7901676312131674, -1.0485902157240332]], [[-4.0000933550960349, 0.44795572375027781, 3.5880916147757524, 2.3799574571029858], [-3.4818864095722803, -2.1380681162259032, 1.0470901504273566, -3.9375660965913273], [-3.1517431204663948, 2.8503083115064385, 3.1921499427431659, -4.9004011924221054]]], [[[-3.6670624865037373, -1.2241536131342281, 4.2624975434602366, 4.4969987923781236], [-2.5339263610208951, -1.4940510720892943, -0.043337317994136981, -2.6738643271142126], [-4.1420847955225595, -3.1085932530323133, 2.8820843213544496, 3.4461103273906986]], [[-2.7610797971884891, 0.073157401608792583, 2.9210667476714729, -3.6129385164110364], [-1.269263301728385, 0.97941304783047123, 2.4447339221427677, 2.0179223137604492], [-3.8578093991943385, 1.0025946734194999, 2.999234348790961, 4.013811906725115]]], [[[0.22206791040277629, -1.1708680277506298, 4.8894775311787662, 1.2637845842821793], [1.582995604952302, 1.167140702652981, 2.7148475855656375, -2.3381544490416184], [0.467371900413319, 1.7549572709260381, 3.9090200667321735, 3.5449896100150333]], [[1.3605082022210757, 1.8986179164091102, 3.9605120589597114, -4.5797363589925579], [-1.1752064681229948, 2.5283937261839506, -2.5428419831319102, -1.6004256996930444], [0.85260519944465152, -3.0264903095821447, 0.20227676367132652, -2.2583080012849157]]]]))
      res=arg0-arg1
      s0=numarray.array(-0.360654108058)
      sub=res.substitute({arg0:s0})
      ref=Data(numarray.array([[[[1.3633181562882664, 3.7179387955614347, 2.4272222289743359, -1.7696732414138729], [0.98455039598420591, 2.7268922885982789, 1.9871263896817557, 2.3536986664788015], [-5.0433397080940825, 4.0966673844841273, -4.4519112713035209, 3.3372850430757626]], [[-5.128305867764329, 0.33381168056829047, 2.4340059460582295, 4.2781016496573132], [3.4545646753739088, 0.74970125995636216, 2.3385838916905799, 1.0332802844996167], [2.503316836653191, 0.57211612486466912, 2.6452049198034029, 1.1587757338977722]]], [[[3.2854471885711112, 3.2345589767801348, -2.1258654833257067, -4.2961307042816976], [4.4454779856766633, 1.6886766375721507, 1.5467600776041377, 2.1360284747507117], [-0.3675111989041282, -3.8001504640312511, 2.5642325749147821, 2.6750824852535082]], [[2.9730894957752074, 3.5990189052258765, -3.2510097649807026, 1.1921826064853231], [1.3249684912928661, -2.3170576406030499, -1.137663318427375, 2.9215318338478955], [3.5643442504738942, -4.8899631754140707, 2.1054153551597565, -4.0665850298804127]]], [[[-2.0609686023605205, -1.6531055693119994, 0.36840819751902565, -3.1416423454800775], [1.2073086939726325, -4.3192277473383438, -2.1623891546605272, 2.1753393428606671], [-4.1851950696553626, -4.6443014945206809, 2.698075331535299, -3.7641548588146208]], [[-3.7077653793329581, 3.151018807783895, 2.4567563119607438, -2.5082644321039282], [0.42555781052111286, -3.4605496995865845, 2.1974498020013331, -0.47155175818944794], [-2.6835303687002146, 1.3150283538084135, 3.7261209877549906, -3.0387619328620632]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[-2.5291713113617522, 4.2190092946372637, -1.2850264895601224, -4.5653124673341932], [-0.40452170785875197, -0.23574093499417614, 1.7381054186514522, 1.6012115063495678], [2.2264497194055073, 3.6863855028708077, 4.4295135231553342, 0.68793610766620006]], [[3.6394392470382018, -0.80860983180811097, -3.9487457228335856, -2.7406115651608189], [3.1212323015144472, 1.77741400816807, -1.4077442584851898, 3.5769119885334941], [2.7910890124085617, -3.2109624195642716, -3.552804050800999, 4.5397470843642722]]], [[[3.3064083784459042, 0.86349950507639495, -4.6231516515180697, -4.8576529004359568], [2.1732722529630619, 1.1333969640314612, -0.31731679006369617, 2.3132102190563795], [3.7814306874647263, 2.7479391449744801, -3.2427384294122827, -3.8067644354485317]], [[2.4004256891306559, -0.43381150966662574, -3.2817208557293061, 3.2522844083532032], [0.90860919367055182, -1.3400671558883044, -2.8053880302006009, -2.3785764218182823], [3.4971552911365054, -1.3632487814773331, -3.3598884568487941, -4.3744660147829482]]], [[[-0.58272201846060945, 0.81021391969279666, -5.2501316392365993, -1.6244386923400125], [-1.9436497130101351, -1.5277948107108141, -3.0755016936234707, 1.9775003409837852], [-0.82802600847115215, -2.1156113789838713, -4.2696741747900067, -3.9056437180728665]], [[-1.7211623102789089, -2.2592720244669433, -4.3211661670175445, 4.2190822509347248], [0.81455236006516163, -2.8890478342417838, 2.1821878750740771, 1.2397715916352112], [-1.2132593075024847, 2.6658362015243116, -0.56293087172915968, 1.8976538932270826]]]]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_sub_overloaded_Symbol_rank1_taggedData_rank0(self):
      arg0=Symbol(shape=(2,))
      arg1=Data(4.61346897048,self.functionspace)
      arg1.setTaggedValue(1,3.28068233392)
      res=arg0-arg1
      s0=numarray.array([-2.6407675311485077, -3.8649480192023447])
      sub=res.substitute({arg0:s0})
      ref=Data(numarray.array([-7.25423650163044, -8.4784169896842769]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([-5.9214498650644272, -7.1456303531182641]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_sub_overloaded_Symbol_rank1_taggedData_rank1(self):
      arg0=Symbol(shape=(2,))
      arg1=Data(numarray.array([-3.3519968185730962, -2.1020492317267836]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([-3.0436846071258827, 1.1669921719101284]))
      res=arg0-arg1
      s0=numarray.array([0.048306015408320135, 3.2908236385188285])
      sub=res.substitute({arg0:s0})
      ref=Data(numarray.array([3.4003028339814163, 5.3928728702456121]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([3.0919906225342029, 2.1238314666087001]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_sub_overloaded_Symbol_rank2_taggedData_rank0(self):
      arg0=Symbol(shape=(4, 5))
      arg1=Data(-2.82343254331,self.functionspace)
      arg1.setTaggedValue(1,0.279291380547)
      res=arg0-arg1
      s0=numarray.array([[4.3906056591115785, -4.6150375975326767, -3.2481943500942911, -2.402527060620109, 0.52450326376809553], [-1.4076010159374999, -3.7755424381291371, 0.54247505033170551, 1.5815797338813962, -0.91911021830269846], [0.363495777280475, 2.2487371638043783, -2.7280230947598962, 4.9288315792104633, 3.5741727098981197], [2.9825148398946855, 0.35322697133915781, 2.3170499036050005, 1.3494842302803747, 1.7063528582434859]])
      sub=res.substitute({arg0:s0})
      ref=Data(numarray.array([[7.2140382024227714, -1.7916050542214839, -0.42476180678309827, 0.42090548269108385, 3.3479358070792884], [1.415831527373693, -0.95210989481794428, 3.3659075936428984, 4.405012277192589, 1.9043223250084944], [3.1869283205916679, 5.0721697071155711, 0.095409448551296627, 7.7522641225216562, 6.3976052532093126], [5.8059473832058783, 3.1766595146503507, 5.1404824469161934, 4.1729167735915675, 4.5297854015546788]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[4.1113142785645458, -4.8943289780797095, -3.5274857306413239, -2.6818184411671417, 0.2452118832210628], [-1.6868923964845326, -4.0548338186761699, 0.26318366978467278, 1.3022883533343634, -1.1984015988497312], [0.084204396733442266, 1.9694457832573455, -3.007314475306929, 4.6495401986634306, 3.294881329351087], [2.7032234593476527, 0.073935590792125083, 2.0377585230579678, 1.0701928497333419, 1.4270614776964532]]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_sub_overloaded_Symbol_rank2_taggedData_rank2(self):
      arg0=Symbol(shape=(4, 5))
      arg1=Data(numarray.array([[1.9642010797865348, -3.3128271985312407, 2.9391531612943931, 2.6735211006699107, 3.4803563490919522], [3.6093912081815276, 1.9278535119416862, 3.0085997055397495, -0.43388705905257918, 4.0786101179526959], [2.0316387326375533, -3.3345735081955521, -1.8458060558893177, 4.2933982982612022, -3.9574390266223847], [2.7019275715653093, 4.1255793158843268, 4.3063927827661992, 2.9510514442425153, 2.1210117253441227]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[3.7542996986115043, -4.3125911861815762, -0.53644775498943531, 3.0127660822748279, -0.23320232490737336], [-2.1120266167515114, 1.4334039180960536, 0.81855067526448089, 3.0273459308808288, -4.1314746959424218], [1.6229987296127639, 2.0601468963495755, -2.3385992077486852, -0.49246435920295539, -1.7771337277156549], [1.6743475967492287, 1.0535935730270367, 3.571860137829276, -0.11249138441769357, 2.9554495066142783]]))
      res=arg0-arg1
      s0=numarray.array([[-1.3502116822697707, -4.3387382200591791, 0.36018852985571748, -1.735504428687177, -2.6997369247507121], [-0.29956091066354951, -2.32118481439193, 0.79086091760780963, -1.6968370884183335, 4.8603591131388093], [-4.5378779857071319, -2.4784297572223348, -1.1424574114551245, -3.7317233585823195, 3.4731933691904899], [4.6637878137498276, -0.61110706371933698, 3.243807649799054, 2.6217887097648198, 4.952530144151515]])
      sub=res.substitute({arg0:s0})
      ref=Data(numarray.array([[-3.3144127620563055, -1.0259110215279383, -2.5789646314386756, -4.4090255293570877, -6.1800932738426644], [-3.9089521188450771, -4.2490383263336167, -2.2177387879319399, -1.2629500293657543, 0.7817489951861134], [-6.5695167183446852, 0.85614375097321727, 0.7033486444341932, -8.0251216568435222, 7.430632395812875], [1.9618602421845184, -4.7366863796036638, -1.0625851329671452, -0.3292627344776955, 2.8315184188073923]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[-5.1045113808812754, -0.026147033877602865, 0.89663628484515279, -4.7482705109620049, -2.4665345998433388], [1.8124657060879619, -3.7545887324879836, -0.027689757656671254, -4.7241830192991623, 8.991833809081232], [-6.1608767153198958, -4.5385766535719103, 1.1961417962935608, -3.2392589993793641, 5.2503270969061449], [2.9894402170005989, -1.6647006367463737, -0.32805248803022202, 2.7342800941825134, 1.9970806375372367]]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_sub_overloaded_Symbol_rank3_taggedData_rank0(self):
      arg0=Symbol(shape=(6, 2, 2))
      arg1=Data(-3.45437670397,self.functionspace)
      arg1.setTaggedValue(1,0.0236659452005)
      res=arg0-arg1
      s0=numarray.array([[[-0.80994388949706231, -2.0551643466439251], [3.1776505373733261, -4.1979990554887756]], [[-0.93024244243644727, -3.9398686946278838], [0.33105162283262768, 3.0077640799605518]], [[-3.5714275654222369, 4.5676380971867978], [-0.32534647309740983, 2.7212833586925225]], [[1.5718134448369199, 4.8212804731722532], [2.9993157729648132, 4.0399059053592428]], [[1.4447905877115197, -3.649925114108342], [1.4304237208504631, 3.3707161729469703]], [[2.4291844611963773, -3.3908876283370848], [0.87332191406451898, -0.19631594176532818]]])
      sub=res.substitute({arg0:s0})
      ref=Data(numarray.array([[[2.6444328144728093, 1.3992123573259465], [6.6320272413431978, -0.74362235151890399]], [[2.5241342615334244, -0.48549199065801218], [3.7854283268024993, 6.4621407839304235]], [[-0.11705086145236532, 8.0220148011566685], [3.1290302308724618, 6.1756600626623941]], [[5.0261901488067915, 8.2756571771421257], [6.4536924769346848, 7.4942826093291144]], [[4.8991672916813913, -0.19554841013847035], [4.8848004248203347, 6.825092876916842]], [[5.8835611651662489, 0.063489075632786829], [4.3276986180343906, 3.2580607622045434]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[-0.8336098346975227, -2.0788302918443855], [3.1539845921728658, -4.221665000689236]], [[-0.95390838763690766, -3.9635346398283442], [0.30738567763216729, 2.9840981347600914]], [[-3.5950935106226973, 4.5439721519863374], [-0.34901241829787022, 2.6976174134920621]], [[1.5481474996364595, 4.7976145279717928], [2.9756498277643528, 4.0162399601587824]], [[1.4211246425110593, -3.6735910593088024], [1.4067577756500027, 3.34705022774651]], [[2.4055185159959169, -3.4145535735375452], [0.84965596886405859, -0.21998188696578858]]]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_sub_overloaded_Symbol_rank3_taggedData_rank3(self):
      arg0=Symbol(shape=(6, 2, 2))
      arg1=Data(numarray.array([[[-4.1436539405565096, -0.99526622192709446], [-3.5202247135366713, 0.80678988404832008]], [[-1.380746985600898, 2.1969409529894781], [-0.7149708700001387, -4.6950225672320141]], [[-1.151430912606747, -4.9596801787767824], [0.018566973707438983, -3.5483077583661649]], [[0.75854973249211977, 0.59224689645928308], [0.31198026697607428, 2.412973409101844]], [[-3.7945100947149788, 3.9392888198645775], [-2.3440930993175471, 4.005053525092773]], [[0.26174411283672949, -3.4196866761389897], [4.2661748781066962, 1.9941977059693938]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[-1.7669082813372872, 2.9718370643639354], [-3.7213834792724776, -1.1704113948737405]], [[1.0325354736313024, 4.4852339601574567], [2.1850588841379102, 3.5431941183546307]], [[-2.6803084598218807, -0.1915365481124276], [-0.84095351345692926, 4.3270800637498645]], [[-1.0180285704136791, 0.38302981602356212], [3.4204787762913522, 3.5480068963187108]], [[-4.5625092346422358, -0.48786387942945275], [3.0945285633606741, -1.7488927269870369]], [[-2.223857533566711, -1.5774469319035944], [-3.9804224679532583, 0.5674075864451158]]]))
      res=arg0-arg1
      s0=numarray.array([[[-3.688078183539969, 2.5061807135286243], [4.7624814038474135, -4.2346786457593319]], [[1.8856781063993857, -1.1790026794083266], [-3.1867352448607345, -4.358206353173034]], [[-4.8530248372999907, 3.349319425297244], [4.0480210794050162, -0.57686387935690675]], [[0.68310157518585601, -3.4802459584532697], [1.3468387015024508, 1.7772648032207421]], [[-1.1166079172974062, -4.3536312347249222], [4.655835681242035, 4.9638827339689335]], [[0.052763670242587324, -0.64877678831831265], [-0.61817342300734346, 1.9914868201405556]]])
      sub=res.substitute({arg0:s0})
      ref=Data(numarray.array([[[0.45557575701654063, 3.5014469354557187], [8.2827061173840839, -5.041468529807652]], [[3.2664250920002837, -3.3759436323978047], [-2.4717643748605957, 0.3368162140589801]], [[-3.7015939246932437, 8.3089996040740264], [4.0294541056975772, 2.9714438790092581]], [[-0.075448157306263752, -4.0724928549125528], [1.0348584345263765, -0.6357086058811019]], [[2.6779021774175726, -8.2929200545894997], [6.999928780559582, 0.95882920887616052]], [[-0.20898044259414217, 2.770909887820677], [-4.8843483011140396, -0.002710885828838272]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[-1.9211699022026818, -0.46565635083531109], [8.4838648831198906, -3.0642672508855915]], [[0.85314263276808333, -5.6642366395657833], [-5.3717941289986442, -7.9014004715276647]], [[-2.17271637747811, 3.5408559734096716], [4.8889745928619455, -4.9039439431067713]], [[1.7011301455995351, -3.8632757744768318], [-2.0736400747889014, -1.7707420930979687]], [[3.4459013173448296, -3.8657673552954694], [1.5613071178813609, 6.7127754609559709]], [[2.2766212038092983, 0.92867014358528177], [3.3622490449459148, 1.4240792336954398]]]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_sub_overloaded_Symbol_rank4_taggedData_rank0(self):
      arg0=Symbol(shape=(3, 2, 3, 4))
      arg1=Data(1.15447758201,self.functionspace)
      arg1.setTaggedValue(1,-1.30150432984)
      res=arg0-arg1
      s0=numarray.array([[[[4.3452921406796339, -3.094720365553647, 4.2260159849404531, 0.53398143783173779], [-2.9652633107503643, 0.97268800776422459, -1.9548974978087577, 4.4017562399599051], [1.0407126301416101, 1.66731932678627, -1.8344653355878258, -1.1221583810471025]], [[4.0804047485771395, 3.1472379163713349, 4.859284050337779, -2.0251323074544549], [3.0470088161602007, 1.4094566984771415, -2.3397077031497373, -4.1377315129234304], [-0.40780534442604743, 0.46806061896557427, 3.6631990283341729, -2.2983977406553215]]], [[[0.99769073737299596, 1.2914771598755737, -1.6758353186032151, 1.7876514831187995], [1.1107687619238629, -3.0484173732375797, -2.9282256907061335, 3.3297820355940928], [3.4563792494298813, 0.50836104379246105, -0.34285311671409691, 0.1377235655495177]], [[-3.9955042472888955, 1.7407911016182487, -3.4797795736858528, -2.787055786196003], [-1.4724574323992057, 3.2557567291482687, -0.27905298144459678, 3.0775034462199287], [-0.26339026683045219, 2.8213687887964367, 0.1568915233734467, -1.8910889608829562]]], [[[0.2776131506609687, 3.6554012449506121, -2.2134284210815611, -4.4843239181053338], [3.3862429838540589, 3.3927044896472456, 4.7725297382350824, -4.1542235773934504], [-4.1911735823709417, -2.5860368545106271, -2.9880018069914858, -0.16303372577529895]], [[-0.8868275813099924, 2.2616935835362284, 0.79784679282106374, 4.3310317960219731], [1.9479630528609917, -4.5634036259553268, -0.93873776231854755, -2.569028141929075], [-0.83549827454520553, -1.1533271852860025, -1.933016595371797, -2.8336709935074902]]]])
      sub=res.substitute({arg0:s0})
      ref=Data(numarray.array([[[[3.1908145586727876, -4.2491979475604928, 3.0715384029336068, -0.62049614417510845], [-4.1197408927572106, -0.18178957424262165, -3.1093750798156039, 3.2472786579530588], [-0.11376495186523616, 0.51284174477942379, -2.988942917594672, -2.2766359630539488]], [[2.9259271665702933, 1.9927603343644886, 3.7048064683309327, -3.1796098894613012], [1.8925312341533544, 0.25497911647029525, -3.4941852851565836, -5.2922090949302767], [-1.5622829264328937, -0.68641696304127198, 2.5087214463273266, -3.4528753226621678]]], [[[-0.15678684463385029, 0.13699957786872741, -2.8303129006100614, 0.63317390111195326], [-0.04370882008298338, -4.2028949552444264, -4.0827032727129797, 2.1753044535872466], [2.301901667423035, -0.64611653821438519, -1.4973306987209432, -1.0167540164573285]], [[-5.1499818292957418, 0.58631351961140243, -4.6342571556926995, -3.9415333682028493], [-2.6269350144060519, 2.1012791471414225, -1.433530563451443, 1.9230258642130824], [-1.4178678488372984, 1.6668912067895905, -0.99758605863339955, -3.0455665428898024]]], [[[-0.87686443134587755, 2.5009236629437659, -3.3679060030884074, -5.6388015001121801], [2.2317654018472126, 2.2382269076403993, 3.6180521562282362, -5.3087011594002966], [-5.345651164377788, -3.7405144365174734, -4.142479388998332, -1.3175113077821452]], [[-2.0413051633168386, 1.1072160015293822, -0.3566307891857825, 3.1765542140151268], [0.79348547085414545, -5.717881207962173, -2.0932153443253938, -3.7235057239359213], [-1.9899758565520518, -2.3078047672928488, -3.0874941773786433, -3.9881485755143364]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[5.6467964705168638, -1.7932160357164171, 5.527520314777683, 1.8354857676689678], [-1.6637589809131343, 2.2741923376014546, -0.65339316797152769, 5.703260569797135], [2.3422169599788401, 2.9688236566235, -0.5329610057505958, 0.17934594879012744]], [[5.3819090784143695, 4.4487422462085648, 6.160788380175009, -0.72362797761722497], [4.3485131459974307, 2.7109610283143715, -1.0382033733125073, -2.8362271830862005], [0.89369898541118253, 1.7695649488028042, 4.9647033581714028, -0.99689341081809157]]], [[[2.2991950672102259, 2.5929814897128036, -0.37433098876598514, 3.0891558129560295], [2.4122730917610928, -1.7469130434003497, -1.6267213608689035, 4.6312863654313228], [4.7578835792671113, 1.809865373629691, 0.95865121312313306, 1.4392278953867477]], [[-2.6939999174516656, 3.0422954314554786, -2.1782752438486228, -1.4855514563587731], [-0.17095310256197571, 4.5572610589854987, 1.0224513483926332, 4.3790077760571586], [1.0381140630067778, 4.1228731186336667, 1.4583958532106767, -0.58958463104572623]]], [[[1.5791174804981987, 4.9569055747878421, -0.91192409124433116, -3.1828195882681038], [4.6877473136912888, 4.6942088194844755, 6.0740340680723124, -2.8527192475562204], [-2.8896692525337118, -1.2845325246733972, -1.6864974771542558, 1.138470604061931]], [[0.41467674852723757, 3.5631979133734584, 2.0993511226582937, 5.632536125859203], [3.2494673826982217, -3.2618992961180968, 0.36276656751868241, -1.2675238120918451], [0.46600605529202443, 0.14817714455122744, -0.63151226553456707, -1.5321666636702602]]]]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_sub_overloaded_Symbol_rank4_taggedData_rank4(self):
      arg0=Symbol(shape=(3, 2, 3, 4))
      arg1=Data(numarray.array([[[[3.5883150316854806, 1.6608399098281934, 2.2024683065081421, 4.5100850299575264], [3.5770417831544403, 2.9968047723170397, 2.552920172474046, -2.2268747697524272], [-0.92524702801358938, 1.0688902410623147, -1.8168048968765937, -0.1106310518029705]], [[-4.2457706769813628, 3.5834795151173555, 1.888365159927762, -0.48415045315364313], [-2.1679416560314269, -1.9957054169738542, 1.7415637083493234, 3.4045477187110151], [1.5560769276052167, -4.8500643825741161, 4.9016752514631072, 3.9834137906347902]]], [[[4.9207159049426075, 0.50001786299822371, -2.7275193492631322, 2.4589593350212731], [-1.4976403002838836, 3.9265631184608356, 0.4046077313793619, -1.4505250571168684], [-0.19497334230297803, 3.9957517880860411, -3.7816750392469078, -1.9185488040783527]], [[-3.4279959657946724, 0.79554773721639371, 1.233813642137215, 3.2915007519830333], [3.3233779447887208, -3.1839585013775542, -1.725570155778958, 2.6384846284807848], [-0.098796091195598734, -1.1420056078217344, -1.0787061667825992, -3.4930108959285966]]], [[[1.7718012243741246, -2.9133117180821899, -0.39175478191092239, 3.1270114114409093], [0.51367748157427506, 0.32867639635427892, -1.9186362775712027, -0.74698673270772709], [-3.324142919547135, 2.7822076971092748, 3.6056899352976686, -1.0241360874394614]], [[0.53104844915811267, 4.0540051810963789, 1.8896123904609539, 0.010139581810646447], [4.2923953898105598, 0.84371056430624503, 3.2521307294866713, 2.3249442171446866], [-1.383326444559112, 3.0524222599236488, -1.1931984807351981, -3.8332841848767996]]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[[-3.4177712167791863, 2.5837530099731136, 3.0704181188708546, -4.8563317507515986], [2.401865526398459, 2.8972861998473318, -0.95563900184045281, -1.1791291573342209], [4.4122882861981587, 4.3093002300367793, -3.6392847395950478, 3.0935768002301671]], [[-3.4158230001529444, -2.8982152760504167, -4.5016237412837024, 0.84448233313674148], [-0.97258538397911032, 4.7704238047870682, -2.0811614432557479, 4.3140735462398982], [0.6147118147199313, 4.3420739071897536, 0.49416069966163612, -4.1263082702987477]]], [[[3.9491889430333735, -0.05664128571792304, -2.771000977907164, -4.0428845588285132], [4.9663884283530439, 1.4149277070699728, 1.6711749159072831, 2.9954165464432423], [1.1111902364084703, -2.7535777620831139, -4.5958881442004547, -0.33909854703525966]], [[4.6897397051546736, 0.86468492035579914, -1.5195517286784277, -2.3838063928075592], [4.7254713910758426, 3.2177308837573104, 2.552758253454158, -4.7547493584437719], [-1.7400624498313508, 0.094904622006009909, 4.29025307184064, -2.9317333478617371]]], [[[3.9023184349518818, 2.6764267377374216, -0.74277278264960334, -3.6110556596424068], [0.23374191610285866, 3.9092557400282217, -4.2717614909733426, -0.60865910850218619], [-1.7027314363999304, -2.0785333027948374, 2.8303551292437508, 2.9375661809907019]], [[-4.7111418854042775, 3.6262534473804031, -4.6861217480850481, -1.2762530757617174], [3.6196399360706764, -1.3401828055957123, 4.7037525167985077, -0.40495146182906616], [3.9241877275920185, -0.34081807569509337, 4.9371069492341508, 4.8076632088755105]]]]))
      res=arg0-arg1
      s0=numarray.array([[[[-1.6337504093342012, -4.3289804572194592, -0.19446597284890732, -2.4938687060341023], [-2.0720972704885399, 4.5574501781720294, 1.5690535995509292, -1.0965856608406845], [3.4791587370144441, 2.4814799092551407, 2.8107234749505867, 4.2304156442244949]], [[-3.9788019951794382, 3.1115620042916774, -1.2433816259920949, -4.2228075080319281], [3.9238534833707064, -3.8517957119258339, -4.1415343993970311, 0.34584626169123922], [1.2030571170060069, 4.8525698531787764, -2.0472967910738973, -3.3231004889671545]]], [[[2.2271926137866878, -1.1023529636945972, 2.8563620050040859, 4.0058815300591366], [-1.0789349725931627, -2.2224319545129578, 1.4379291772333946, 1.4019805325400148], [-0.10727005112015764, 0.8059626682552592, -1.2168931483461609, 2.3554857136289851]], [[-4.9696385541588821, -4.574102390156467, -1.2095677827085161, 3.8491300709219249], [2.5564680110299616, 0.43077743890672426, -4.5387625536950811, 2.2743223642538091], [-1.6164781825668104, 3.3480064965109548, 1.653293549684566, 2.0748200683022775]]], [[[-0.98399417687226709, -4.0101331676221132, 4.4819203418417217, -4.0548577032012876], [-3.2405498678544795, 4.820373299676934, -1.6053515195089463, 0.80872639125282753], [1.5368822663689707, 0.011146683247260647, 2.0629166669940338, -4.3846678537416475]], [[-3.1385805740903541, 4.7717309868072295, 1.2300699265549238, 1.4575347304390203], [-2.114098395366458, -2.5861140304807728, 0.60725302056936137, 2.4997476471370064], [1.1035222744715911, 1.2530220414547237, 2.1828718546525732, -0.1475151762140321]]]])
      sub=res.substitute({arg0:s0})
      ref=Data(numarray.array([[[[-5.2220654410196818, -5.9898203670476526, -2.3969342793570494, -7.0039537359916286], [-5.6491390536429797, 1.5606454058549897, -0.98386657292311686, 1.1302891089117426], [4.4044057650280335, 1.4125896681928261, 4.6275283718271805, 4.3410466960274654]], [[0.26696868180192457, -0.47191751082567812, -3.1317467859198569, -3.7386570548782849], [6.0917951394021337, -1.8560902949519797, -5.8830981077463544, -3.0587014570197759], [-0.35301981059920973, 9.7026342357528925, -6.9489720425370045, -7.3065142796019451]]], [[[-2.6935232911559197, -1.6023708266928209, 5.5838813542672181, 1.5469221950378635], [0.41870532769072089, -6.1489950729737934, 1.0333214458540327, 2.8525055896568832], [0.087703291182820386, -3.1897891198307819, 2.5647818909007469, 4.2740345177073378]], [[-1.5416425883642098, -5.3696501273728607, -2.4433814248457311, 0.55762931893889167], [-0.76690993375875927, 3.6147359402842785, -2.8131923979161231, -0.36416226422697573], [-1.5176820913712117, 4.4900121043326893, 2.7319997164671652, 5.5678309642308736]]], [[[-2.7557954012463917, -1.0968214495399233, 4.8736751237526441, -7.1818691146421969], [-3.7542273494287546, 4.491696903322655, 0.31328475806225642, 1.5557131239605546], [4.8610251859161053, -2.7710610138620142, -1.5427732683036348, -3.3605317663021861]], [[-3.6696290232484667, 0.71772580571085065, -0.65954246390603011, 1.4473951486283738], [-6.4064937851770178, -3.4298245947870178, -2.6448777089173099, 0.17480342999231979], [2.4868487190307031, -1.7994002184689251, 3.3760703353877712, 3.6857690086627675]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[1.784020807444985, -6.9127334671925729, -3.2648840917197619, 2.3624630447174964], [-4.4739627968869993, 1.6601639783246975, 2.524692601391382, 0.082543496493536317], [-0.9331295491837146, -1.8278203207816386, 6.450008214545635, 1.1368388439943278]], [[-0.56297899502649384, 6.0097772803420941, 3.2582421152916075, -5.0672898411686695], [4.8964388673498167, -8.622219516712903, -2.0603729561412831, -3.968227284548659], [0.58834530228607562, 0.51049594598902281, -2.5414574907355334, 0.80320778133159321]]], [[[-1.7219963292466858, -1.0457116779766742, 5.6273629829112499, 8.0487660888876498], [-6.0453234009462067, -3.6373596615829307, -0.23324573867388843, -1.5934360139032275], [-1.2184602875286279, 3.5595404303383731, 3.3789949958542937, 2.6945842606642447]], [[-9.6593782593135558, -5.4387873105122662, 0.30998394596991163, 6.2329364637294837], [-2.169003380045881, -2.7869534448505862, -7.091520807149239, 7.029071722697581], [0.12358426726454041, 3.2531018745049449, -2.636959522156074, 5.0065534161640146]]], [[[-4.8863126118241489, -6.6865599053595348, 5.2246931244913251, -0.44380204355888075], [-3.4742917839573382, 0.91111755964871222, 2.6664099714643963, 1.4173854997550137], [3.2396137027689011, 2.089679986042098, -0.76743846224971701, -7.3222340347323494]], [[1.5725613113139234, 1.1454775394268264, 5.9161916746399719, 2.7337878062007377], [-5.7337383314371344, -1.2459312248850605, -4.0964994962291463, 2.9046991089660725], [-2.8206654531204274, 1.5938401171498171, -2.7542350945815777, -4.9551783850895426]]]]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_mult_overloaded_float_rank0_taggedData_rank0(self):
      arg0=-1.18466090014
      arg1=Data(-2.11347188762,self.functionspace)
      arg1.setTaggedValue(1,-3.09345091018)
      res=arg0*arg1
      ref=Data(2.5037475088,self.functionspace)
      ref.setTaggedValue(1,3.66469033978)
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_mult_overloaded_float_rank0_taggedData_rank1(self):
      arg0=-0.0760429120714
      arg1=Data(numarray.array([0.81195422853676824, -2.9970955850840006]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([0.94197141908976256, -0.087319053811368619]))
      res=arg0*arg1
      ref=Data(numarray.array([-0.061743364006643722, 0.22790787604620072]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([-0.071630249795638867, 0.0066399951311379895]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_mult_overloaded_float_rank0_taggedData_rank2(self):
      arg0=-1.88916958802
      arg1=Data(numarray.array([[4.2814050899288887, 3.3773860970228, -2.2219522353232724, 0.44950438964603467, 2.6192494842040004], [-0.89922712309034925, -4.2058456016742776, -2.3662264704001892, 1.9499563668068163, -4.3712433388138088], [-0.53607923278882286, -3.6216381162245295, 2.9949711467840121, -3.9861116510035597, -1.8526273479160835], [0.53169296364021434, 3.1054234703825205, 2.635672733400666, 1.9108766786007392, -1.8686773299280213]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[3.860559972594098, -3.1880419262864312, -3.8745084798673557, 3.4379427480933007, -2.7189056367143003], [-3.710838662766399, -1.9503175783889803, 3.8032938920236319, 4.4568777403467017, 0.088778774273520433], [4.2791541704403322, 2.7538879857713381, -4.164974425588202, -4.1538715119247902, -3.3907947863772838], [3.8610183271038103, -0.37504315880826589, -0.830718574183404, -1.7044539781135626, 4.1181647052901891]]))
      res=arg0*arg1
      ref=Data(numarray.array([[-8.0883002898863392, -6.3804551014959729, 4.1976445890050833, -0.84919002260063903, -4.9482064689944423], [1.6987925336647212, 7.9455556025893967, 4.4702030862471975, -3.6837982661367938, 8.2580199775206733], [1.0127445833535689, 6.8418885879842799, -5.6580084075007937, 7.5304409055268584, 3.4999272436166278], [-1.0044581770731487, -5.8666715781692051, -4.9792327719132512, -3.6099701076685813, 3.5302483815218437]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[-7.2932524929508764, 6.0227518524720187, 7.3196035886897857, -6.494856885050682, 5.1364738415759525], [7.0104035477459146, 3.6844806560726586, -7.1850671551120664, -8.4197978845848809, -0.16771816041919915], [-8.0840479212434762, -5.202561431531997, 7.8683430197009852, 7.8473677328696594, 6.4057863896396672], [-7.294118402351156, 0.70852012981541268, 1.569368266550361, 3.2200026196313112, -7.7799115196902715]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_mult_overloaded_float_rank0_taggedData_rank3(self):
      arg0=-0.226190478398
      arg1=Data(numarray.array([[[4.1026592738991283, -3.0919986530003607], [-0.70453928097790808, 0.063306401117266375]], [[-1.0040804161967376, -3.5800513017917126], [-4.8894453062047569, -3.8861648209132174]], [[4.7492080509862404, 3.7719753075405329], [-2.410614727977948, 0.86649344185660659]], [[-4.6353684799424286, -0.55653570869464275], [4.283716076044259, 0.96523296349203846]], [[-0.13060945131532975, -1.4783210259750601], [3.0056137180380329, 1.2393171416088764]], [[-4.32133559000519, -0.91301626612091713], [-3.8981037705661992, 3.661730058912493]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[1.1265942134336004, 4.8764741511527703], [-0.78597487490635221, -0.1968319671029386]], [[-4.5562065027691041, -1.0061606040024893], [2.3883397540024749, -1.5203059769615166]], [[-4.5191039175003631, -2.119246085176294], [3.8441882146553628, -0.57287933991346573]], [[-0.75383898289223517, -2.7125641284670268], [-0.72642791125381478, -1.5066035621638205]], [[1.0006161886628444, -0.18148135300851997], [-1.4317991991022714, 2.2312826779725947]], [[3.2355365441215191, 2.2577041978958388], [-3.2688559042617094, 2.2902532434960419]]]))
      res=arg0*arg1
      ref=Data(numarray.array([[[-0.92798246386803407, 0.69938065452872533], [0.15936007701471316, -0.01431930515438249]], [[0.22711342968979856, 0.80977351664234731], [1.1059459729122616, 0.8790134799765954]], [[-1.0742256410651356, -0.85318489931877084], [0.54525809855506613, -0.19599256614244417]], [[1.0484762140300907, 0.12588307819531958], [-0.96893578856248841, -0.21832650577797141]], [[0.029542614276340161, 0.33438214009140887], [-0.67984120476319942, -0.28032173714759501]], [[0.97744496442241902, 0.20651558601922371], [0.88171395671017527, -0.82824847379046651]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[-0.25482488409718396, -1.1030120211456758], [0.17778003296402906, 0.044521516803071405]], [[1.0305705285423095, 0.22758394836473961], [-0.54021971153524651, 0.34387873624056026]], [[1.022178277030563, 0.47935328584952724], [-0.86951877132559863, 0.12957985195946883]], [[0.1705112001756032, 0.61355617790373895], [0.1643110767683017, 0.34077938048225886]], [[-0.22632985440662703, 0.041049354057348789], [0.32385934581509485, -0.50469489637222631]], [[-0.7318475587896881, -0.51067119260367222], [0.73938408079971951, -0.51803347679938683]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_mult_overloaded_float_rank0_taggedData_rank4(self):
      arg0=2.19507677123
      arg1=Data(numarray.array([[[[2.5814432285455178, 4.7756453538262065, -1.6500435096507857, 3.820693003901404], [3.6035686845656265, -2.0914949127364748, -1.5638742073689582, -4.1367385093150499], [1.6879752260239798, -3.0514035215794424, 1.2148877355318088, 2.5419723280014956]], [[-3.0424467708074889, -3.6440754533652386, 4.3200719069126752, -3.3287164159459959], [2.1703306035431504, -4.3082584948576441, -1.0296881430401248, 0.95748979711457949], [4.0173198710612912, 2.9730316106004615, -1.8723152089045314, 4.1077605793785317]]], [[[3.9221717703069103, -4.6761561690160551, -0.82591709012849357, -0.8113672172607469], [-2.4031249875351257, 4.1612196840572775, -1.0955830368129362, -4.8682975643034911], [3.3713536414862517, 4.3070775269217236, -3.6288532435357821, -0.17968220307800919]], [[-1.0673141372606532, 3.1006567925769506, -3.4333264270178789, 4.0742691752391771], [-3.3215237350377436, -3.9000852316474441, -0.23532875492759597, -1.9435525130353248], [0.62902015766625574, -4.6483961122489594, 2.8768897842100349, -1.4964434994630538]]], [[[4.3131923598919037, -0.53962086637760187, -4.284179246548212, 3.4580070935891332], [-2.6419142419709796, 0.58965228471713438, 3.5169226569258552, 4.1511072333826], [-2.3760892510796761, -3.7364538360531196, -4.2312656812651719, -4.1775609855229625]], [[-3.9079940770258101, -0.32122705596397338, -4.1345830794028871, -3.3420196028733926], [-1.1972473821065535, 2.9999981288366415, 4.7968874390488914, 1.8022891482585592], [0.44190478144459, -1.3461516604578527, -0.23477668118784578, 1.6756715441603394]]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[[-3.8941187146768943, -0.15157398983043535, 2.6826837936556336, 2.3426731237745724], [1.0699340271657096, 1.8184124535543482, 2.3939173556036479, -4.2553492759322236], [-0.80230498111941184, 4.0577030250130246, 2.2657403417908615, 2.0240660996833295]], [[-4.7134502690766764, 1.9775729479489463, -1.5562834878753486, -4.1665035106079955], [-4.5333438437164162, 2.5836187325574675, -0.44931671433271703, -3.8746759635010952], [-3.8280694324637574, -2.6622613116535767, -4.543554470525927, 1.9054102437585785]]], [[[-2.6873058703918931, -0.35131888871283046, 2.1441618301666319, -2.6349411562619549], [0.28629454369960694, -1.6158654250573812, 4.099553186471196, -2.5178179147303172], [3.5995792843137622, 1.2252902912721542, -3.5513147611721574, 0.62598168581237346]], [[-4.0965822944937456, 0.045952122330320755, -4.9091333575478604, 4.0263836385094756], [-3.2072068887081184, 2.0787757739406345, 4.5869941097929257, 0.94652896302847989], [1.7135571119617516, 3.817055808409922, -4.4593433546858421, -0.89391305861621717]]], [[[2.8679551116751059, -3.0480178742757547, -3.7761029437086191, -2.3646763903194259], [-1.9890487675522319, -0.17920350107151251, -0.78024039350506236, 4.4039982138055027], [3.2814565517313294, -1.2260122176619581, 4.3179154800118908, -1.2096335257748239]], [[3.8505119217904795, 2.274601422398109, 2.9592775253624835, -3.9277332916345986], [0.89406717516633627, -4.3825506680678492, -1.8287610918503705, -2.9401732495594946], [3.5563117879660417, 0.12106674262117068, 1.2934610658883869, -1.2570854708310621]]]]))
      res=arg0*arg1
      ref=Data(numarray.array([[[[5.6664660672390417, 10.482908183834509, -3.6219721795595281, 8.3867144628794481], [7.9101099130355337, -4.5909919001014918, -3.4328239457272649, -9.0804586104657865], [3.7052352090633547, -6.698064989880038, 2.6667718479227012, 5.5798244103151795]], [[-6.678404234314792, -7.9990253803052997, 9.4828894929237038, -7.306788082667671], [4.764042293735395, -9.456958146532692, -2.2602445244022404, 2.1017636123395738], [8.8183255315825892, 6.5260326285728736, -4.109875623494089, 9.0168498295836947]]], [[[8.609468145789636, -10.26452178526876, -1.8129514195060659, -1.7810133315496703], [-5.2750438385098608, 9.1341966684749654, -2.4048888750658572, -10.686286898856661], [7.4003800660409427, 9.4543658312489818, -7.9656114611018136, -0.39441623018065169]], [[-2.3428364703102993, 6.8061797009539511, -7.5364150880100711, 8.9433336263213938], [-7.2909995958830693, -8.5609864978212844, -0.51656468354493668, -4.2662469750369114], [1.380747536731018, -10.203586329491177, 6.3149939387192564, -3.2848083651351629]]], [[[9.4677883590617977, -1.1845092290585302, -9.4041023478998866, 7.5905910458991981], [-5.7992045841422399, 1.2943320332875183, 7.7199152304437897, 9.1119990628987342], [-5.2156983214233046, -8.2018030223076135, -9.2879530098639229, -9.1700670797340198]], [[-8.5783470205986152, -0.70511804883833662, -9.0757272763335752, -7.3359895992753801], [-2.6280499178825685, 6.5852262063541653, 10.529536191679394, 3.9561630443891067], [0.97001492084616703, -2.9549062404288371, -0.51535283930280285, 3.6782276828038274]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[-8.5478895350140576, -0.33271654420001628, 5.8886968800188395, 5.1423473565912801], [2.3485873297840785, 3.9915549373194041, 5.2548323795390033, -9.340818349085378], [-1.7611210275003903, 8.9069696547711974, 4.9734739939124424, 4.4429804788566658]], [[-10.346385198015899, 4.3409244414630734, -3.4161617336898913, -9.1457950733996753], [-9.9510377673576382, 5.6712414655613985, -0.9862846825588385, -8.5052112035391829], [-8.4029062898713356, -5.8438679641651845, -9.9734508770869326, 4.1825217657453813]]], [[[-5.8988426932974631, -0.77117193190920519, 4.7065998271649176, -5.7838981256785376], [0.62843850260598622, -3.5469486599832818, 8.9988339720604138, -5.5268036188208347], [7.9013528732115121, 2.6896062563897978, -7.7954085395886992, 1.3740778577445134]], [[-8.9923126360908672, 0.10086843631618091, -10.775924600042282, 8.8382211969679645], [-7.0400653419442056, 4.5630724139806436, 10.068804220192696, 2.077703740043829], [3.7613894126497103, 8.3787305395436587, -9.7886010128266836, -1.9622077904710131]]], [[[6.2953816465792531, -6.6906332341281223, -8.2888358575223489, -5.1906462158751534], [-4.3661147465051151, -0.39336544252584782, -1.7126875637612788, 9.6671141796795883], [7.2030490525183932, -2.691190940238597, 9.478155970324929, -2.6552384541339533]], [[8.4521692768810848, 4.9929247461214414, 6.4958413555574186, -8.6216761120687657], [1.9625460881302423, -9.6200351702308904, -4.0142709928569031, -6.4539060035110341], [7.8063773970291876, 0.26575079449667233, 2.839246340226905, -2.7593991164767644]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_mult_overloaded_constData_rank0_taggedData_rank0(self):
      arg0=Data(-2.94329920099,self.functionspace)
      arg1=Data(-4.11119199005,self.functionspace)
      arg1.setTaggedValue(1,-1.58550879356)
      res=arg0*arg1
      ref=Data(12.1004680995,self.functionspace)
      ref.setTaggedValue(1,4.66662676526)
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_mult_overloaded_constData_rank0_taggedData_rank1(self):
      arg0=Data(0.266988311155,self.functionspace)
      arg1=Data(numarray.array([3.9337011058963984, -3.0016324806379768]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([-1.9652353473487292, -3.8594212881553513]))
      res=arg0*arg1
      ref=Data(numarray.array([1.0502522148531663, -0.8014007867145424]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([-0.52469486641141205, -1.0304203717615579]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_mult_overloaded_constData_rank0_taggedData_rank2(self):
      arg0=Data(1.86468101149,self.functionspace)
      arg1=Data(numarray.array([[2.8955672412516105, 3.5442988816927876, 1.7685063792811864, 2.6510011263927034, -1.8410336765318025], [4.7538427445859899, -4.5423673734107481, -4.8403947578584745, -4.1507857230400678, -3.1475718453564894], [-4.0722392722409673, 0.23579544037913713, -2.6626267768577216, -3.4944958921823099, 0.70992319536823345], [-2.5547708010061454, 0.79243466557276676, 3.955985875472571, 2.0609048858278145, 0.31944566319878742]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[0.027051640087560891, -0.28704863502092781, -4.7124479570524302, -2.4275641587163079, 3.1848729701387537], [2.7059160672354778, 2.1441881149445514, 4.5114000462244626, -1.2449015335946658, 0.55804507767741818], [4.1659679939762171, -3.416197590121961, -0.0015392664018900604, 0.099833188154200059, -0.2936353796573421], [-4.4036561016432252, 1.2704330207252488, -4.421413548936826, 2.0738292065572583, -1.7850914999930878]]))
      res=arg0*arg1
      ref=Data(numarray.array([[5.3993092522454385, 6.6089868237268599, 3.29770026413911, 4.9432714618149056, -3.4329405381368012], [8.8644002974243499, -8.4700661883967285, -9.025792193079516, -7.739891320503812, -5.8692174523270841], [-7.5934272451790381, 0.43968328027017273, -4.9649495914832089, -6.5161201348713904, 1.3237803020172625], [-4.7638326013373833, 1.4776378737375244, 7.376651743704155, 3.8429302070837408, 0.59566426236862435]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[0.050442679600853108, -0.53525413909676289, -8.7872122231359864, -4.5266327909245145, 5.9387721514156766], [5.0456703092513546, 3.9982268629930342, 8.4123220014159603, -2.3213442508649171, 1.0405760598988238], [7.7682014128296997, -6.3701187777877903, -0.0028702408312241867, 0.18615705026733759, -0.5475363167477979], [-8.2114139138526276, 2.3689523301123376, -8.2445258886334845, 3.8670299425343013, -3.3286262238038109]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_mult_overloaded_constData_rank0_taggedData_rank3(self):
      arg0=Data(-0.0843317854058,self.functionspace)
      arg1=Data(numarray.array([[[1.8920259872550629, 0.37887878086653259], [3.6030726159133266, 4.2477623911196147]], [[4.7772605961463004, 1.0560603640247725], [4.283006791043281, 2.8071804443950903]], [[4.6006017346236803, 0.71567334578417441], [-0.18270341034165138, 4.0425397819622777]], [[4.7303491031610161, -3.7500623252723031], [-0.73600943710390165, -2.4609753945175337]], [[0.18781628678023665, 4.8646886090563513], [-2.995584658263899, 2.234138449486478]], [[4.1796490628897338, -2.9995697743009666], [-2.8738135038353207, -2.7089554461091847]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[1.4671526950709648, -0.99545779734949935], [0.3126326184678021, -2.0490638642928016]], [[4.6963437141683038, -1.4395553490454684], [-2.4647395708004103, 1.3090707513740654]], [[-0.14506075304915544, 0.17385962995774129], [-1.660829226811058, 0.8351933040175048]], [[2.7797362060279749, 0.2585381285797812], [4.4105804059669875, 2.6242136817042541]], [[4.0941140603786259, -0.033136516889650025], [-2.3063497924797138, 0.38072722993406138]], [[4.6647989589030665, 2.9125078979491672], [1.0783181921338327, 0.052875111490830129]]]))
      res=arg0*arg1
      ref=Data(numarray.array([[[-0.15955792953941036, -0.03195152404285146], [-0.30385354664675429, -0.35822138642277107]], [[-0.40287491542184328, -0.089059455994519046], [-0.36119360959389024, -0.23673453883211401]], [[-0.38797695822188294, -0.060354011017329283], [0.015407704793841851, -0.34091459738689406]], [[-0.39891878546234211, 0.31624945127327792], [0.062068989906497486, 0.20753844885943204]], [[-0.015838882792467049, -0.41024787584503014], [0.25262300256564879, -0.18840888428896346]], [[-0.35247726784321326, 0.252959074516104], [0.24235382370176012, 0.22845104935518093]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[-0.12372760623828087, 0.083948733346618593], [-0.026364866891483259, 0.172801214086341]], [[-0.39605105029516763, 0.12140027277548882], [0.20785588856594925, -0.11039627368590056]], [[0.012233232296946622, -0.01466189300432983], [0.14006069395112802, -0.070433342486773909]], [[-0.23442011721151254, -0.021802981978609904], [-0.37195212031107977, -0.2213046250644746]], [[-0.34526394836676105, 0.0027944616314339752], [0.1944985957701344, -0.032107407052947866]], [[-0.39339082476346082, -0.24561699104257687], [-0.09093649837821173, -0.0044590525555529819]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_mult_overloaded_constData_rank0_taggedData_rank4(self):
      arg0=Data(2.11565746579,self.functionspace)
      arg1=Data(numarray.array([[[[-4.4837373506986822, 0.33676356197060908, -0.51174680796996075, -2.1055330601564179], [0.11582671844057035, 1.2519996892368344, 0.48197942015732842, 4.7085792749874553], [-2.4680454410540085, 4.6912692253173169, 1.767622766333603, -1.7250336188518869]], [[-0.094982045315847863, 1.4686170622000638, -2.3484247206937079, 1.5228816525976177], [3.2802629706674331, -3.6316325963187923, -2.3133816251581329, -0.9420944106118192], [2.7018922484742882, -3.44228116146992, 4.3202433676626875, 1.9381358150075068]]], [[[-2.293250366688977, -1.9298686135647323, -0.86527034887814569, -0.68046562395513455], [1.1607977919707224, 2.014359430496599, -2.6436787495721847, -0.01735831259085785], [3.2696077680177211, -3.2711717266170828, -4.1791092559979193, -3.0308333113256101]], [[1.8986463705575538, 0.30560271412789319, -0.44703908594656205, -2.6911000033518464], [-4.2726346438568283, 0.5598501047037141, -2.0774979647399441, 0.46611300628541308], [-2.3041640738312195, -3.3056557450585378, 2.8431013996827792, -0.61441234929706923]]], [[[2.5960951039175644, -3.9028538303114511, -0.44816017688009957, -3.9869423938741786], [-2.3942967490483094, -2.3435545047501893, 2.70969368261588, -0.67499030643439184], [0.4568549335019858, -1.7035813277188749, 3.4129796545092859, 0.72060479691313439]], [[-1.7941857412504247, -4.593713551476708, 0.50388019707008436, 4.7343579310422061], [-0.13990392766073612, -2.8216545514019242, -4.9850750509435615, -3.0330893769340426], [-0.38418480812986022, 1.9024626662105302, -3.6121233734264346, -2.1998522784819752]]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[[-3.5753889232277167, -1.2997199654362355, -4.6586461783605433, -1.5764040037369931], [-0.29831227661554216, -3.9860033341878234, -0.21969794399859222, -4.1083934396061856], [3.3917999779499581, 3.3737619985720979, 4.77594298116761, -1.1084758902608471]], [[4.6375627748567183, 3.9562841239409625, 3.1173402728910649, -2.2428067338771362], [2.3069568209406697, -1.5460966343625069, 0.048001088828868888, 1.3098190596129324], [3.2630585250369375, 4.5154346702466501, -0.48737162203114881, 2.7552684469586666]]], [[[-0.48971966935503897, 2.0760307615338194, 4.2771051813445808, 2.3370956101975526], [-2.8561926872474483, 0.91046165139725055, 4.8979202559859516, 3.8286666209736495], [3.0790099254803991, -4.4130231478615753, -1.1929455556462818, 2.3329873750009948]], [[4.3519572572265997, -3.9542095171716642, 4.8226055069648801, -0.14276384960824728], [1.9296227978862168, -2.8196224624118527, 1.1081014993474945, -2.5826240306980406], [-3.3878909765577525, -4.5956677562515624, 0.84360584487849444, 2.8171225896033656]]], [[[1.0027316292141251, -3.0590102834104069, 2.3584630976773546, -3.187014404635955], [-4.3606777451059653, -3.0168214579849262, 2.4603141866730018, 1.120987472067875], [-0.95576817950255855, -4.7390260407256335, -0.014369025719758177, 3.9222803511556137]], [[-4.8661946434197674, 2.3384897584300637, -3.6902304303938527, 2.1539173466517987], [-3.5131121889029169, 4.1547706022694157, -4.7290470660360304, -3.4065707204335718], [-4.448213338013403, 1.7678275851732508, 1.5610523918681274, -1.2189369720872465]]]]))
      res=arg0*arg1
      ref=Data(numarray.array([[[[-9.4860524006632829, 0.71247634409036475, -1.0826809548776912, -4.4545867381951707], [0.24504966160716588, 2.6488024897051754, 1.0197033586147222, 9.9617408964082248], [-5.2215387632837711, 9.9251187605903386, 3.7396843023004229, -3.6495802544689457]], [[-0.20094947328881954, 3.1070906520354287, -4.9684622931898925, 3.2218959378382452], [6.9399128436588473, -7.6832906154212477, -4.894323106495535, -1.9931490732933164], [5.7162785072544837, -7.2826878386245006, 9.1401551348408479, 4.1004315067425949]]], [[[-4.8517322592194443, -4.0829409402889691, -1.8306156735338817, -1.4396321775365806], [2.4558505148595851, 4.2616945679218734, -5.593118683692281, -0.036724243626427455], [6.9173700846234398, -6.9206788853103713, -8.8415636978191348, -6.4122051226819643]], [[4.0168853687720105, 0.64655066371146441, -0.94578157968439069, -5.6934458132885153], [-9.0394313828840769, 1.1844510537417412, -4.3952740792730713, 0.98613546165123334], [-4.8748219252144152, -6.9936352563766002, 6.015028702247105, -1.2998860738661295]]], [[[5.4924479885134065, -8.2571018439995694, -0.94815342408776293, -8.4350044412889122], [-5.0655117924494011, -4.9581585844689604, 5.7327836696400398, -1.4280482811462307], [0.96654855084811486, -3.6041945545750109, 7.2206958866642319, 1.5245529184759536]], [[-3.7958824584968851, -9.7187243708989293, 1.0660379007968743, 10.016279702548584], [-0.29598878904928411, -5.9696545175639715, -10.546711249070157, -6.4169781847297651], [-0.81280345756442041, 4.0249593431619051, -7.6420157823571992, -4.6541338966134518]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[-7.5642982685424585, -2.7497622483161712, -9.8560995677393048, -3.3351308996130911], [-0.63112659515955727, -8.4330177126526493, -0.46480559544012584, -8.691953252920273], [7.1758869458283963, 7.1377247600897951, 10.104259424311795, -2.3451552928825685]], [[9.8114943077120991, 8.3701420436163882, 6.5952242217610388, -4.7450108108593225], [4.8807304214865965, -3.2710108873273951, 0.10155386194701822, 2.7711284723088525], [6.9035141298158491, 9.5531130714105874, -1.0311114107661365, 5.8292042600736398]]], [[[-1.0360790746169615, 4.3921699798561971, 9.048889508896151, 4.9444937759879011], [-6.0427253825201488, 1.9262249900973629, 10.362321556438378, 8.1001471206976561], [6.5141303360952021, -9.3364453694933154, -2.5238641710883503, 4.9358021575230673]], [[9.2072508620660933, -8.3657528863163364, 10.202981345387578, -0.30203940426912307], [4.082420878513509, -5.9653553133209698, 2.3443632099516085, -5.4639478118842684], [-7.1676168378491791, -9.7228587988205391, 1.7847810039043042, 5.9600664387501601]]], [[[2.1214366575342436, -6.4718179440366228, 4.9897000603997954, -6.7426308187598032], [-9.225700427353436, -6.3825608405521415, 5.2051820772326449, 2.3716255143414942], [-2.0220780845325455, -10.02615582365147, -0.030399936540186641, 8.2982017078579169]], [[-10.295201027355855, 4.9474433161044358, -7.8072635605614833, 4.5569513151462191], [-7.432542030622951, 8.7900714433510601, -10.005043731348447, -7.2071367774391684], [-9.4108957580107262, 3.740117628807659, 3.3026521473507597, -2.578853105328228]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_mult_overloaded_constData_rank1_taggedData_rank0(self):
      arg0=Data(numarray.array([-1.8021292916234133, 0.52610779274754549]),self.functionspace)
      arg1=Data(-2.10992701792,self.functionspace)
      arg1.setTaggedValue(1,-0.103414543531)
      res=arg0*arg1
      ref=Data(numarray.array([3.8023612821737358, -1.1100490462541024]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([0.18636637807672213, -0.054407197234984987]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_mult_overloaded_constData_rank1_taggedData_rank1(self):
      arg0=Data(numarray.array([4.4723367401807721, 0.10886597086815009]),self.functionspace)
      arg1=Data(numarray.array([3.6591992748934796, 3.1165977113137693]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([-4.3434168978267547, -2.0254374137442532]))
      res=arg0*arg1
      ref=Data(numarray.array([16.365171356748949, 0.33929143564762804]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([-19.425222970072589, -0.22050121047994312]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_mult_overloaded_constData_rank2_taggedData_rank0(self):
      arg0=Data(numarray.array([[1.2998676807413592, 4.5859761834730222, 2.7288279226718393, -0.53434785328079126, 0.40321735497507483], [-0.63909969785278609, 1.4472518705167969, -4.4716694997896287, 4.9126653418331028, -3.0157412130889849], [2.2188285385347717, -2.9128193743526829, 3.3058348191726985, 1.7519649145046383, 2.8041268590351365], [-1.6442986283969963, 4.0979742201868987, 0.20921551378530268, -1.6380327347964583, -0.86160817132382572]]),self.functionspace)
      arg1=Data(-4.59316552067,self.functionspace)
      arg1.setTaggedValue(1,4.94648709344)
      res=arg0*arg1
      ref=Data(numarray.array([[-5.9705074126093685, -21.064147684524013, -12.533958326247081, 2.4543481357312569, -1.8520440522056809], [2.9354906964455134, -6.6474673913772122, 20.539118166247768, -22.564685062678947, 13.851798559211961], [-10.191446739467777, 13.379061518204827, -15.184246508441356, -8.0470648387193648, -12.879818804493805], [7.5525357656315766, -18.822673892740845, -0.96096148430708694, 7.5237554791894237, 3.9575089448487315]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[6.4297787059612395, 22.684472002352493, 13.498112099703015, -2.6431447596584698, 1.9945094422334606], [-3.1612984068474175, 7.1588126984619098, -22.119055466819159, 24.300435707745983, -14.917324987686575], [10.97540672840889, -14.408223440744793, 16.352269266067864, 8.6660718377492501, 13.870577316573495], [-8.1335019431196507, 20.270576589386437, 1.0348818386855039, -8.1025077812957491, -4.2619336990519789]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_mult_overloaded_constData_rank2_taggedData_rank2(self):
      arg0=Data(numarray.array([[4.1256943231465559, 1.4403418166238868, -0.27837797239285056, -3.1493910008722006, -1.5007537872801171], [-3.9537387594544415, -4.3652087156895476, -1.5023220469684739, 0.72389140754330583, -4.6261774750026596], [-2.8076534427104205, -2.0816390501398829, 0.9734117268077549, -1.7425201651856383, -2.9737729433540583], [2.2126916377732941, 1.8558210447240322, 1.1807119316509738, 2.0703566636652795, 0.95173429451861491]]),self.functionspace)
      arg1=Data(numarray.array([[1.2691335167597924, 2.183791126213503, -0.49630019001269599, 2.128937869230513, 1.9163689714349763], [-1.7369122501251, 1.3359337199650838, -4.9943290248391916, -4.4144868576194209, -2.2481022519156113], [3.8292508050160112, -4.921373890571644, -3.9226910959808023, -0.15921452626965671, -2.9625072947370623], [0.16897065883080042, -0.35161686760537325, 0.70739182746213469, -4.9675056138541365, 0.29310740913735422]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[-1.9032071569828943, 1.6718776578668502, 1.2443690289447904, 4.3436101425734215, 2.2002835397504406], [1.9294846871497455, 0.17656695710001813, 1.4016875754307501, -2.6257311697682439, 1.808728710787463], [-2.1607627148632402, -4.2258892450771066, 4.7810865984671835, -4.6150098009242582, 2.6198823235918205], [2.0674393552341828, -4.3146282325708789, -3.7555016231847116, 0.56682980920143233, -2.8579888620473026]]))
      res=arg0*arg1
      ref=Data(numarray.array([[5.2360569454108994, 3.1454056778574806, 0.13815904059392076, -6.7048577667706155, -2.8759979917071434], [6.8672972850908351, -5.8316295179751432, 7.5030906038304765, -3.1956091049435478, 10.400119999314756], [-10.751209205704853, 10.244524070952776, -3.8183935134720772, 0.27743452261535534, 8.8098240375781032], [0.37387996382395633, -0.65253798258199547, 0.83522597103692942, -10.284508349437596, 0.27896037325351886]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[-7.8520509633362234, 2.4080753029048281, -0.3464049271861111, -13.679726694317949, -3.3020838553705758], [-7.6286783933577764, -0.77075162003578157, -2.1057861475314015, -1.900744232313865, -8.3675000202355623], [6.0666728752660912, 8.7967760741186556, 4.6539657618313566, 8.041747640639878, -7.7909351686689172], [4.5746057729300871, -8.0071778741654924, -4.4341655758287883, 1.1735398726443045, -2.7200460133626487]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_mult_overloaded_constData_rank3_taggedData_rank0(self):
      arg0=Data(numarray.array([[[2.3920121506856153, -2.6582441720172234], [-3.0548946250616869, -1.1037694850695114]], [[2.9519273835177176, -0.35994757882076378], [-1.2634169750553816, 1.8117510543033628]], [[-0.37146508067199324, -0.8995152669986517], [3.0145889260519265, -1.1452787540820877]], [[-0.2294423262721228, 3.8879515231030393], [3.3962426382870774, -1.5528306483083263]], [[3.5611822763312322, -2.2817322047226685], [-3.7391197992876801, 4.0526236971932299]], [[2.3155204848676298, 2.3238670649617958], [-0.92009148803469198, 2.937920467549425]]]),self.functionspace)
      arg1=Data(-1.46010897054,self.functionspace)
      arg1.setTaggedValue(1,2.87334173124)
      res=arg0*arg1
      ref=Data(numarray.array([[[-3.4925983988547022, 3.8813261614457524], [4.4604790461043899, 1.6116237265573676]], [[-4.3101356530543695, 0.52556268876004353], [1.8447264588097951, -2.6453539667720953]], [[0.54237949653122486, 1.3133903104816462], [-4.4016283334163875, 1.6722317826031527]], [[0.33501079881129603, -5.6768328959040826], [-4.9588843422904976, 2.2673019593231047]], [[-5.199714187396248, 3.3315776604836311], [5.4595223608604728, -5.9172722144913541]], [[-3.380912231422379, -3.3930991478911943], [1.343433835396165, -4.2896840293994769]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[6.8730683341980114, -7.6380439112824865], [-8.7777562107303773, -3.1715069231194626]], [[8.4818961386514253, -1.0342523992844832], [-3.630228718383576, 5.205779910947836]], [[-1.0673461179932542, -2.5846147545546754], [8.6619441637588359, -3.2907772380065632]], [[-0.65926621099046367, 11.171413360369902], [9.7585657020067398, -4.4618131033327062]], [[10.232493647134623, -6.5561963633437887], [-10.743768957398851, 11.644572790157257]], [[6.6532816387111327, 6.6772642156088367], [-2.6437372691287471, 8.4416494824737605]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_mult_overloaded_constData_rank3_taggedData_rank3(self):
      arg0=Data(numarray.array([[[3.0680634552148174, 0.19761751931992055], [4.4838657140061713, -4.553950302001919]], [[-3.5077472630815176, 3.8926967274596223], [-3.9400454692416087, 0.68959660644564202]], [[0.46074952899980026, 1.339993356079753], [-4.5533337973974692, 4.8816334725949897]], [[-4.6680038701735613, 2.6061190329937256], [4.789456089702286, -0.4871554714302162]], [[-4.1557569161287846, 2.2461535449712038], [-4.5737053039500513, -1.7306500986598419]], [[1.9387596385527033, 3.8876423248726546], [-4.1254496207451545, -0.058599040045427486]]]),self.functionspace)
      arg1=Data(numarray.array([[[-2.0118111638368497, 2.1046298672437622], [-3.0757196838667245, 3.1252224754372246]], [[3.2589692539148469, 1.8659476309283036], [-1.8097442552198939, -1.6837180878484159]], [[-1.6619058864792082, -1.7933960640117128], [0.43340640013714449, 3.0085840060711817]], [[2.3853433618447397, -0.85980031844693805], [3.3359319034102288, 2.5416857271814139]], [[-4.279813053039665, -3.5254374763050746], [-3.7885486787882137, -2.2701224423435171]], [[1.8080802495959647, 1.0151286984375503], [-1.7776530705901514, -0.15595642516486041]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[4.9972169205401116, -0.8407807028465335], [4.2911097150180577, -2.9180201580396545]], [[1.649361987236114, 0.57291650341532296], [1.7952224324814683, 2.2024607867098709]], [[-4.2024270411736753, -1.2850953061353767], [4.4187631457629912, -2.0737902127180607]], [[-4.724005038328583, 1.9669800886766806], [-0.64618690228166109, -2.2209022249944277]], [[-1.9282222983289388, 0.56936115245469843], [4.4197989115883729, -3.7050182857483871]], [[-0.10772728599756753, -0.61751385898003086], [-2.6297913293272037, -0.28931928973704757]]]))
      res=arg0*arg1
      ref=Data(numarray.array([[[-6.1723643105610284, 0.41591173345132604], [-13.791114036383906, -14.232107835840534]], [[-11.431640480886619, 7.2635682365256429], [7.1304746532651722, -1.161086279591413]], [[-0.76572235443729075, -2.4031388105952747], [-1.9734440097528312, 14.686804389151009]], [[-11.134792044784058, -2.2407419744786314], [15.977299369620258, -1.2381961086525135]], [[17.785862694907838, -7.918673884976978], [17.327705186446611, 3.9287876288117292]], [[3.505433011180954, 3.9464572932387099], [7.3336181858825995, 0.0091388968035773701]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[15.331778611690245, -0.16615299678859122], [19.24075972620826, 13.288518779952373]], [[-5.7855449965581718, 2.230190197952437], [-7.0732580113795089, 1.518809484344726]], [[-1.9362662798767951, -1.722019172150681], [-20.120103574296987, -10.123483717544369]], [[22.051673801637229, 5.1261842466199834], [-3.0948837942187577, 1.0819246704175765]], [[8.0132231521142288, 1.2788725709550108], [-20.214857724324403, 6.4120902617669646]], [[-0.20885731406290772, -2.4006730143662116], [10.849071642211808, 0.01695383264521589]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_mult_overloaded_constData_rank4_taggedData_rank0(self):
      arg0=Data(numarray.array([[[[4.3121327761894328, -2.3995680587581338, 2.2598165464673636, -3.3605388984577811], [0.79342499158799917, 1.6451809094554193, 1.9400185905503395, -0.64367830781804791], [2.5769001360101846, -3.4240467674217245, -2.4283515393792978, 3.4088505847714305]], [[0.68819160265759294, -2.081697989129816, 0.83383113222913785, 2.0492540010414277], [3.1688364279762364, -1.9312385716042515, 1.8721554164808305, -1.0080738737863451], [2.1873406677751648, 1.9064540551914302, -4.8032428521024606, 2.2548329003263561]]], [[[-3.9281164207390393, 1.3721763758607892, -4.6709338940903216, -2.6289225775698344], [1.0920853308126919, 1.397034861906814, -4.9590862430104945, -0.78590998051603744], [2.1384048432502549, 0.79725194443177827, 2.4101118416924745, -0.87872058370490791]], [[3.2730883131405815, -3.742715747593194, 1.4235795566608092, -1.8634836474674019], [-2.4244393169419465, 2.7611576092904588, -3.4508791846469986, 1.1295882018755492], [4.9863930310071876, 1.008534833270609, -0.75824531021874009, 3.2075272242261796]]], [[[4.9749683722994238, 4.0476025726844362, -0.92821018235814545, -3.0462607889054638], [-3.4608434110250643, -4.7945781614312999, 2.553570356070086, -1.9966560324921123], [4.1953272182413919, 4.2342904870254436, 0.14879483032395413, -1.0179538230417817]], [[-4.5205092750067699, 0.70612135957389022, -0.77413796816020319, 3.7340207169157225], [-3.2926017752435186, 2.4097088913448106, -3.7401139032056188, 0.79655207535074624], [-0.48881103638483303, 0.38771925455395717, 4.6995459786521891, 4.1264781632233145]]]]),self.functionspace)
      arg1=Data(-0.484821428997,self.functionspace)
      arg1.setTaggedValue(1,3.66050577912)
      res=arg0*arg1
      ref=Data(numarray.array([[[[-2.0906143745780295, 1.16336201522327, -1.0956074873299324, 1.629261270951138], [-0.38466943822382299, -0.7976189594811679, -0.9405625853518419, 0.31206903701087624], [-1.2493364063236596, 1.660051246734807, 1.1773168634295372, -1.6526838117469884]], [[-0.33365003622436029, 1.0092517938306143, -0.40425920106972357, -0.99352225316323228], [-1.5363198052699729, 0.93630584401977668, -0.90766106432317362, 0.48873581602388688], [-1.0604696282545494, -0.92428977935550682, 2.3287150633771305, -1.0931913088862324]]], [[[1.9044350163702548, -0.66526051138109221, 2.2645688452845483, 1.2745580007805348], [-0.52946637067154123, -0.67731243810863417, 2.4042712788569403, 0.38102599981698437], [-1.0367444918792239, -0.38652482697024904, -1.1684738671325339, 0.42602256908110903]], [[-1.5868633532110075, 1.8145487970786345, -0.6901818749515618, 0.90345680487814906], [1.1754201341569055, -1.3386683778228243, 1.6730601775974148, -0.5476485662117353], [-2.4175101948348217, -0.4889592990597576, 0.36761357483071094, -1.5550779323969117]]], [[[-2.4119712754743179, -1.9623644633018045, 0.45001618702067192, 1.4768925087754301], [1.6778910480688807, 2.3245142356641191, -1.2380256290749097, 0.96802163088880089], [-2.0339845370588394, -2.0528747647091272, -0.072138922265062438, 0.493525827140328]], [[2.1916397665040943, -0.3423427665940928, 0.37531867596445551, -1.8103332598804078], [1.5963238977924372, -1.1682785081691645, 1.8132873671646217, -0.38618551544227209], [0.23698606516972037, -0.18797460304259714, -2.2784405970084229, -2.0006050398198654]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[15.784586947560543, -8.7836327464683155, 8.2720715280876345, -12.301272058751632], [2.9043367670035978, 6.0221942267542534, 7.1014492623036158, -2.35618816566011], [9.4327578400722398, -12.533742980113542, -8.8889948436251842, 12.478117265701625]], [[2.519129338667796, -7.6200675195855867, 3.0522436783322933, 7.5013061136904442], [11.599544057682964, -7.0693099522107055, 6.853035721432966, -3.6900602407716114], [8.0067731552882684, 6.9785860866489573, -17.582298218622689, 8.2538288625874028]]], [[[-14.378892859158993, 5.0228595538060139, -17.097980513190329, -9.6231862880451065], [3.99758466472858, 5.1138541856375834, -18.15276385167871, -2.8768280255445546], [7.8276432868089891, 2.9183453500046586, 8.8222283248332225, -3.2165617748807347]], [[11.981158685810874, -13.700232623656474, 5.2110211941894748, -6.8212926608441444], [-8.8746741307840686, 10.10723338586015, -12.631963198434333, 4.1348641409876423], [18.252720506949725, 3.6917475856276987, -2.7755613400439358, 11.741171940954512]]], [[[18.210900477725517, 14.816272608879551, -3.3977187367570831, -11.150855222485461], [-12.668437306675671, -17.550581068346645, 9.3473590457759848, -7.3087709458458692], [15.357019527658773, 15.499644798216076, 0.54466433630354305, -3.7262258521185188]], [[-16.547350325713538, 2.5847613174780624, -2.8337365062841888, 13.668404413611992], [-12.052587826609253, 8.8207533227569019, -13.690708557239393, 2.9157834751889156], [-1.7892956235827711, 1.4192485719696317, 17.202715214081625, 15.104997163878368]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_mult_overloaded_constData_rank4_taggedData_rank4(self):
      arg0=Data(numarray.array([[[[0.080557554900875239, -3.8080050734797277, 0.66279930901405937, 1.0179665434851612], [1.53010251198645, 2.8129083998453321, -2.3595600061431177, -4.1449627798563906], [2.3304599504903436, 0.077960390323860373, 0.40804137425646392, -0.7475780552821476]], [[1.7315463001835738, -0.11653412716051115, 1.6325710312650088, 3.7102148123253968], [-3.9604343601128256, -0.38577888594517162, 0.50471693755956082, 2.0428392228761911], [3.009033669411842, 0.18294451175722415, -3.798017029649936, -3.308451305455776]]], [[[-0.26353006076849983, -1.9787212381552886, -3.5762242062899121, 1.5372630020806337], [-4.5924355743150915, 3.2812877380953633, 4.3101220037328325, 2.8081112276035949], [-3.5219900997555884, -3.6829952305249458, 1.0324329986397736, -2.4057687059636579]], [[0.50917554614526139, 4.5525709875566616, -4.7353622735395939, 3.644298218317445], [-4.0577053605775646, -2.7093212922110208, -0.116891913023764, 3.4331793109911271], [-2.7479662882015399, 2.2496200323148159, 3.4639537672425362, -1.1979526158736431]]], [[[-4.4567217868819711, 0.62726826345951459, 2.9530537607631597, 0.37044851505540244], [3.0626790025681867, -1.5371986999644847, 4.0366009093013098, -4.4438232737877552], [-4.61246098907373, -4.7235218071981491, -1.526569583716626, -2.0032148284458362]], [[0.32186440862628896, 4.831408226880697, -3.7922397088995585, -4.4373675702022446], [4.8755380414778937, -1.7265385812197351, -3.8791107918509016, 3.2021769841742387], [2.1125898384269508, 0.55893719783609797, -0.89467234740472001, 2.5967114208220385]]]]),self.functionspace)
      arg1=Data(numarray.array([[[[0.46929563492140058, -1.1897805989315557, 2.6096148404041699, 3.0111410260981195], [4.8219795698001668, 2.2359347915864527, 0.38927812640834336, 2.1118737535481316], [-0.023426366290417278, 0.12742608590226112, -4.4259356221286286, 2.7760050097499462]], [[4.8594150261833029, 3.5194717657830807, -3.4665152964355741, -0.57031577271860634], [3.6281189738895847, -1.7619814881086104, -4.2654088284114833, 2.9175219528578644], [-3.8231653130594587, -4.4692196694850992, -0.87986434001049751, 2.5771628158593032]]], [[[0.31245471702611383, 2.8555707860109392, 4.2679090497713332, 4.940055817103163], [2.1820353897608058, -2.4523170199510669, 4.6918457287566682, 1.5657491757035427], [2.0299089147476588, 3.4207665626635535, -2.2873956220546052, -2.1785833639424954]], [[2.3191221192994229, -2.2972731217408402, 1.4046986546251174, -4.9388514376387018], [-4.4168782282250865, 3.06363793793731, 3.2359275181247007, -2.4553815499379938], [-3.1384229018010421, -1.6737514055472813, 4.7157605153524482, -0.44825671200603878]]], [[[1.598200248336882, -3.4291310857013793, 0.6397623024756296, -0.43083051741421485], [4.7864957532665322, -4.7773817778721135, 0.91469020468522366, 0.96802666370184554], [0.40998545346154636, -1.6465581444067467, 3.9944029113409343, 3.533891514050481]], [[-4.6619894421836232, 2.0429059400770955, -2.8073299767504833, -0.0058905399003048586], [4.1631159883247371, -0.73287615620791247, 4.2426263225529599, 0.60065699758699687], [-4.015612231490481, -0.15097609199683593, 2.7929607408377741, -4.4444603854954075]]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[[-2.4937747434820978, -1.4095893564715034, -2.411346202097735, -2.0863290239584584], [-2.9167197721464233, 3.5957096154674097, -2.5512626706215338, 0.58526931509350266], [2.0114581688802655, 4.3085452859475186, -3.8935368219535951, 0.53738536198823716]], [[4.635045671233593, 2.9884896323681831, 3.2883635167445817, 2.9731432283481158], [4.540153668953975, 4.7290369811196555, -1.7884925242896701, 2.2010622307873113], [3.7253432818147392, 1.765558399336169, -4.3227799799077449, 3.6145021192357323]]], [[[-2.9781764326177642, -2.7411141328239341, -0.11776731708789878, -1.8025636397486213], [4.6858212278097291, -1.0993372345281207, -4.4980033421930301, -0.10172425646091998], [-0.90589829606443217, 4.1669332791263862, 4.294072332212723, 1.212882904124033]], [[2.0921531783362743, 1.8064632960910494, 2.991503294965149, -2.7256817007624279], [4.9505321881462176, 4.6192528129090658, -4.1044956467488873, -0.80123736487541031], [3.9938709517437943, 0.30703635553005704, 1.3602123112080236, 2.0766055633617073]]], [[[-1.0089877053771201, 2.4369987401607602, -4.6215863345288088, -2.0462617703690045], [0.041208059903791394, 2.4828622659367277, -1.191302909148245, 4.9132222549726539], [3.7368156163699524, -3.1101446825861858, -1.9042055842714811, 3.7295354446457516]], [[-4.9506736584491708, -0.52267085101021671, -4.8220622885560527, -0.28077216977476649], [1.8261679195482632, -4.9537754272049304, -1.8636839014116822, -0.39562348968437533], [-1.5137538237309602, -3.5747863720006077, 3.6135625036210204, 1.4869606525011765]]]]))
      res=arg0*arg1
      ref=Data(numarray.array([[[[0.037805308874921832, 4.5306905570591134, 1.7296509130127187, 3.0652408222834646], [7.3781230524985766, 6.2894797567599552, -0.91852509833945195, -8.7536381042126141], [-0.054594208425334502, 0.009934187394382038, -1.8059648536240032, -2.0752804266423639]], [[8.4143021096441633, -0.41013857029159423, -5.6593324523977531, -2.1159940276433775], [-14.368927046769599, 0.67973525553855541, -2.1528240813153579, 5.9600282789003876], [-11.504033150723377, -0.81761921036973417, 3.3417397471415713, -8.5264176825017959]]], [[[-0.082341210565296197, -5.6503785613356357, -15.262999654036019, 7.5941650358459061], [-10.020856948352021, -8.046757767487998, 20.222427513634024, 4.3967978399041918], [-7.1493191011468653, -12.598666935029081, -2.3615827211533262, 5.2411676803058898]], [[1.1808402716718398, -10.458498964531072, -6.6517570148036054, -17.998647494721272], [17.922390463687268, -8.3003794968790192, -0.37825375799983701, -8.4297651378364478], [8.6242803322689152, -3.7653046910342436, 16.335176402568717, 0.53699030073055243]]], [[[-7.1227338665631583, -2.1509851013029442, 1.8892524733201561, -0.1596005254166466], [14.659500039411204, 7.3437850581790309, 3.6922393119613748, -4.3017394178053738], [-1.8910419101790858, 7.7775533019249874, -6.0977339895622089, -7.0791438830648303]], [[-1.5005284748304346, 9.8701125656319242, 10.646068213817257, 0.026138490724595141], [20.297430372162093, 1.2653389589489821, -16.457617553605893, 1.9234100130562826], [-8.4833415953097617, -0.084386153800956404, -2.498784742214557, -11.540981042407045]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[-0.20089239580847515, 5.3677234209665095, -1.5982385965440551, -2.1238131450917619], [-4.4628802501217884, 10.114401780752907, 6.0198573627644532, -2.4259195272546106], [4.6876227046621004, 0.33589587222049716, -1.58872411554809, -0.40173750385225926]], [[8.0257961832064169, -0.34826103083626309, 5.3684870177059327, 11.031000044982129], [-17.980980590717632, -1.8243626181698582, -0.90268246970765076, 4.4964162570436867], [11.209683365097758, 0.32299921934542164, 16.417991979119424, -11.958404254958127]]], [[[0.78483901626707342, 5.423900750826335, 0.42116233007956322, -2.7710143922813595], [-21.51933210147422, -3.607241787688789, -19.38694317805, -0.28565302668753695], [3.1905648301243872, -15.346795392938153, 4.4333419743224676, -2.9179157347399181]], [[1.0652732371989169, 8.2240523918700905, -14.165851844147355, -9.93319696578898], [-20.087800997552687, -12.515040000120182, 0.47978234814618892, -2.7507915442833073], [-10.975022734819346, 0.6907151360493502, 4.7117125596587099, -2.4876750667669176]]], [[[4.4967774892502588, 1.528651967793665, -13.647792905871926, -0.75803463424783657], [0.12620705980391392, -3.8166526473888123, -4.8088144063211011, -21.833491405939437], [-17.235916253867909, 14.690836231737213, 2.9069023260921893, -7.4710607059287044]], [[-1.5934456493784888, -2.5252362495214959, 18.286416089449343, 1.2458893207738677], [8.9035511618840992, 8.5528843977675884, 7.2294363345648476, -1.266856433066001], [-3.197940945893968, -1.9980810776286906, -3.2329544476082952, 3.8612077086627954]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_mult_overloaded_taggedData_rank0_float_rank0(self):
      arg0=Data(-2.24445414769,self.functionspace)
      arg0.setTaggedValue(1,-1.24645571799)
      arg1=0.962547171791
      res=arg0*arg1
      ref=Data(-2.16039299207,self.functionspace)
      ref.setTaggedValue(1,-1.19977242611)
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_mult_overloaded_taggedData_rank0_array_rank0(self):
      arg0=Data(1.16419456536,self.functionspace)
      arg0.setTaggedValue(1,-2.13443961827)
      arg1=numarray.array(3.62750269791)
      res=arg0*arg1
      ref=Data(4.22311892675,self.functionspace)
      ref.setTaggedValue(1,-7.74268547378)
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_mult_overloaded_taggedData_rank0_array_rank1(self):
      arg0=Data(4.73054387879,self.functionspace)
      arg0.setTaggedValue(1,-4.6146470815)
      arg1=numarray.array([-3.6311513670946836, -4.4569765252643654])
      res=arg0*arg1
      ref=Data(numarray.array([-17.177320872583099, -21.083923019516519]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([16.756482058630613, 20.567373714603605]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_mult_overloaded_taggedData_rank0_array_rank2(self):
      arg0=Data(2.72809360801,self.functionspace)
      arg0.setTaggedValue(1,3.76168254187)
      arg1=numarray.array([[4.8508040702521704, -4.4385769893314002, -2.5707005505568281, 2.8311380975909985, -0.27753204925319874], [0.23788613511660728, -3.1245896182486965, 1.7581790156520816, -3.9221979564345499, -0.30043886080858506], [-1.0862660826944381, 4.3173195552235182, 3.810820813319534, 1.8360784845789135, -3.7651094858165535], [1.8995884992355503, -2.4165962702469992, -3.1485167900308273, -2.2173849748254479, -3.3189578000234521]])
      res=arg0*arg1
      ref=Data(numarray.array([[13.233447577744187, -12.108853513237282, -7.0131117400714569, 7.7236097474201255, -0.75713340958444375], [0.6489756446448558, -8.5241729651860165, 4.7964769343306353, -10.700123174283091, -0.81962533576848995], [-2.9634355567923585, 11.778051882324366, 10.396275902073052, 5.0089939775769832, -10.271571121698704], [5.1822552426061179, -6.5927008379918552, -8.5894485295825085, -6.0492337763097366, -9.0544275594854664]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[18.247184985119645, -16.696517571532244, -9.6701593814158802, 10.649842755342846, -1.0439874644863139], [0.89485212142205628, -11.75371421748733, 6.6137113086679093, -14.754063578494305, -1.1301556176042116], [-4.0861881591016873, 16.240385598576168, 14.335098123674731, 6.906744380951241, -14.163146621040879], [7.1456488943192822, -9.0904680005463163, -11.843720641856594, -8.3410983484149348, -12.484865613565249]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_mult_overloaded_taggedData_rank0_array_rank3(self):
      arg0=Data(0.0393027465249,self.functionspace)
      arg0.setTaggedValue(1,2.27267653139)
      arg1=numarray.array([[[-3.8851278543680587, 0.50444246124378456], [-0.60167445028765254, -0.26043602337940719]], [[-3.0554823104759965, 2.1615086092429596], [-3.5662979584356727, -4.1247189566438802]], [[0.81083293059417283, 3.9291611229326708], [4.1488399622940229, -2.8119035930446348]], [[-3.7351483040360369, -3.1696393829171168], [3.4812154261041002, 4.0594858671690339]], [[4.5084772328456548, 1.5560064436661616], [-2.7032929236967473, -4.6779668168072019]], [[3.6215585387710973, 0.85866272102225771], [-0.2601558845275953, 0.43914074689217308]]])
      res=arg0*arg1
      ref=Data(numarray.array([[[-0.15269619527691089, 0.019825974190642262], [-0.023647458410141615, -0.010235851012824015]], [[-0.12008884675983944, 0.084953224980384198], [-0.14016530469253202, -0.16211278363926993]], [[0.031867961145154236, 0.15442682366996704], [0.16306080541026224, -0.11051553416978352]], [[-0.14680158702629856, -0.12457553324201316], [0.13682132749061079, 0.15954894405860634]], [[0.17719553789564646, 0.061155326846463957], [-0.10624683656250784, -0.18385694405269154]], [[0.14233719727427202, 0.033747803274686551], [-0.010224840786539487, 0.017259437463841898]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[-8.8296388960700654, 1.1464345431051242], [-1.3674114027054471, -0.59188683826279487]], [[-6.9441229390946688, 4.9124098886229071], [-8.105041674079164, -9.3741519713420747]], [[1.842760972239176, 8.9297122721372322], [9.4289712147966682, -6.3905473044424506]], [[-8.4887838918421235, -7.2035650385237382], [7.9116765996180076, 9.2258982598225572]], [[10.246310399392351, 3.5362993272109775], [-6.1437103851569983, -10.631505399176735]], [[8.2306310981184492, 1.9514626144463645], [-0.59125017326875162, 0.99802486943871349]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_mult_overloaded_taggedData_rank0_array_rank4(self):
      arg0=Data(-3.59212542533,self.functionspace)
      arg0.setTaggedValue(1,3.87865975656)
      arg1=numarray.array([[[[1.8154175752790831, -4.2762832815467213, 0.63191616735658229, -1.5252295941989455], [-0.52163737212494876, -1.3720022813426045, -4.1900698510318968, -4.927012531177386], [4.3469231149264314, -2.1929044078242677, 2.525025381050364, 1.5454393820083787]], [[1.6347731010825459, 1.1906407585649603, 4.1080777328056648, -4.9407022587180176], [1.458592042344991, -3.3264666951325559, 1.413856523205177, -3.0469693740481962], [-4.0802596941903504, -4.6506825132965748, -4.0526147304893794, 4.7713361187546095]]], [[[-4.1735001963740279, -0.6828028046264123, -2.2803545648216894, -4.4723549727341441], [-3.3238495713017535, 0.56316163940948982, -4.3945893734606916, 3.5863419045992178], [-3.0339125942048719, 2.5741188327377014, -1.5380203735642262, -1.4865585910097492]], [[3.6566459895033763, -3.7585953268286287, 2.4970783293474117, 4.6878611006245272], [2.2503564522177477, 4.7157161081821926, -2.4913478538244171, 2.4716379898324305], [0.62801505063525465, 1.9206972069364063, -2.9830811239765911, 4.3546404948072119]]], [[[3.7224948601277337, 0.22617130455488521, -3.7881065747899898, 3.9252123802328693], [4.4242527234031339, 2.7167170676808379, -2.9214634317069175, 1.7443240678704539], [-3.6307288354609635, -4.1504402849727482, -0.64936077916460633, -0.84036555523836487]], [[0.31660684701211661, -2.2604943317029678, -3.4763597806190116, -4.6604036546203567], [2.7142596483863031, -0.38109011149821903, 0.047770912452338443, 3.141090804435402], [-0.70722741899047392, 1.7598844279955586, -0.94052599437443973, -2.5248867099616943]]]])
      res=arg0*arg1
      ref=Data(numarray.array([[[[-6.5212076297500943, 15.360945901555608, -2.2699221314383746, 5.4788160047870855], [1.8737868672121138, 4.9284042784208992, 15.051256445798424, 17.698446984159528], [-15.614693043079905, 7.8771876786627653, -9.070207870873416, -5.5514120974178649]], [[-5.8723100210434271, -4.2769309412748413, -14.756730473241351, 17.747622202524067], [-5.2394455604907799, 11.949085592097573, -5.0787499647733378, 10.945096158718952], [14.656804589448482, 16.705834901148101, 14.55750041245591, -17.139237784971588]]], [[[14.991736168012963, 2.4527133149848526, 8.1913196110622639, 16.065260008657308], [11.939684555043712, -2.0229472434930935, 15.785916222291153, -12.88258993943561], [10.898194567870817, -9.246557706896688, 5.5247620885548905, 5.3399049110081735]], [[-13.135131030324363, 13.5013458370259, -8.9698185558882422, -16.839385049966673], [-8.0835626280657458, -16.939443730837311, 8.9492339690628651, -8.8784336654874636], [-2.2559088308765154, -6.8993852713956931, 10.715601551256928, -15.642414839566584]]], [[[-13.371668432723354, -0.81243569357155343, 13.60735394116111, -14.099855190852763], [-15.892470695819847, -9.7587884522430439, 10.494263072204902, -6.2658308342117035], [13.042033362336429, 14.908902073962579, 2.3325853650489816, 3.0186984775429044]], [[-1.1372915049856431, 8.1199791627235314, 12.487520355554565, 16.740754460060479], [-9.7499610939144503, 1.3689234788544209, -0.17159910921123633, -11.283192141881218], [2.5404495932458673, -6.3217255994443757, 3.3784873375757707, 9.0697097469300481]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[7.0413870905787768, -16.586247871766908, 2.4509878078428469, -5.9158466465271209], [-2.023253882776471, -5.3215300345460719, -16.251855308354454, -19.110205224723007], [16.860235750706583, -8.5055300766014366, 9.7937143297615865, 5.9942335371920983]], [[6.3407286382685166, 4.6180903947607774, 15.933835779035615, -19.163303020013068], [5.6573822558757989, -12.902232501933243, 5.4838683980995784, -11.81815749057823], [-15.825939072152085, -18.038415104840407, -15.718713663973688, 18.506389388813826]]], [[[-16.18758725565295, -2.6483597599677804, -8.8447194812518077, -17.346743249775365], [-12.892081569052786, 2.1843123872134802, -17.045116949428994, 13.910200018618049], [-11.767514684049722, 9.98413112513167, -5.9654577277062169, -5.7658549827115504]], [[14.182885643457277, -14.578312435348248, 9.6853172250069655, 18.182618195314927], [8.7283670091222749, 18.290658292147395, -9.6630906602099991, 9.5866428039370959], [2.4358567034102072, 7.449730961073036, -11.570356706108733, 16.890168841476218]]], [[[14.438291007962611, 0.87724153706471986, -14.692776525181715, 15.224563295143158], [17.160170991095374, 10.537221160361478, -11.331362642810522, 6.7656395644405372], [-14.082361821068519, -16.098145705311069, -2.5186495216313647, -3.2594920598985713]], [[1.2280102361558611, -8.7676883942984087, -13.483616780395511, -18.076120104480751], [10.527689667038782, -1.4781188790894393, 0.18528711566282724, 12.183222494850538], [-2.7430945287710564, 6.8259929070552934, -3.6479803243746041, -9.7931764717905647]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_mult_overloaded_taggedData_rank0_constData_rank0(self):
      arg0=Data(-3.43898287669,self.functionspace)
      arg0.setTaggedValue(1,0.722221413882)
      arg1=Data(0.598267999618,self.functionspace)
      res=arg0*arg1
      ref=Data(-2.05743340636,self.functionspace)
      ref.setTaggedValue(1,0.432081960565)
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_mult_overloaded_taggedData_rank0_constData_rank1(self):
      arg0=Data(2.54071180446,self.functionspace)
      arg0.setTaggedValue(1,1.77366747247)
      arg1=Data(numarray.array([0.96503571115658815, -4.2795936021896841]),self.functionspace)
      res=arg0*arg1
      ref=Data(numarray.array([2.4518776230597954, -10.873213983369505]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([1.7116524506474844, -7.5905759675816533]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_mult_overloaded_taggedData_rank0_constData_rank2(self):
      arg0=Data(-4.29567815772,self.functionspace)
      arg0.setTaggedValue(1,-4.50683433375)
      arg1=Data(numarray.array([[0.86357290994364888, -1.6358950849440013, -2.2980505809074803, 3.4588705396944679, 3.8654721551442019], [2.3658542885020406, 0.40765607638525569, -3.9986616455290802, -0.45553462080968821, -0.55357772382555837], [-1.7327492088524608, 0.75701029254549645, 3.6063818383867652, 0.20560313166152611, 0.063917176339579385], [-2.6114212754456858, -2.5024343954751815, -2.1587918361576062, 4.7341325768233897, -3.0193998652236154]]),self.functionspace)
      res=arg0*arg1
      ref=Data(numarray.array([[-3.7096312868400583, 7.0272787847086784, 9.8716856857305082, -14.858194627732395, -16.604824306111801], [-10.162948591456614, -1.7511593031882913, 17.17696349079543, 1.9568301206955545, 2.3779917368355141], [7.443332929266953, -3.2518725788537828, -15.491855691541197, -0.88320488183639601, -0.27456761830480414], [11.217825333526527, 10.749652773759632, 9.2734749376375447, -20.336309905991339, 12.970370050451297]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[-3.8919800402311449, 7.3727081352398454, 10.356933258729857, -15.588556504294269, -17.421042624961682], [-10.662513336072623, -1.8372384014152188, 18.021305593123024, 2.0530190692772652, 2.494883092136658], [7.8092136262358469, -3.4117199774467988, -16.25336548985689, -0.92661925289885694, -0.2880641248436222], [11.769243064065984, 11.278057251486535, 9.7293171666160827, -21.335951237755914, 13.6079349799124]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_mult_overloaded_taggedData_rank0_constData_rank3(self):
      arg0=Data(-3.59206616756,self.functionspace)
      arg0.setTaggedValue(1,-0.0119975658212)
      arg1=Data(numarray.array([[[0.12579371100998493, 4.2244912164096426], [-2.2880694159514627, 0.15522821784365171]], [[0.2272855754165759, 3.4328540263145744], [4.3524811547163704, -1.3061387222720855]], [[-3.4268654281407409, -2.3221118156450471], [1.2302689975662462, -1.8492085426333125]], [[3.4138346645898849, -1.87114430860573], [-4.7545417945591719, 4.4848076805094532]], [[-1.6479203131741729, -3.4662588226341438], [1.4081151914819587, 3.8191464350469495]], [[0.91171689149033064, -2.7371482480155453], [1.415285018243857, 3.3557809756702426]]]),self.functionspace)
      res=arg0*arg1
      ref=Data(numarray.array([[[-0.45185933341035378, -15.174651973604927], [8.2188967380601419, -0.55759002956628045]], [[-0.81642482582750686, -12.331038806084893], [-15.634400300784174, 4.6917367144091093]], [[12.309527365193574, 8.3411792902619055], [-4.4192076431514344, 6.6424794427496909]], [[-12.262720000305116, 6.7212741655586496], [17.078628722469645, -16.109725937155808]], [[5.9194388037821541, 12.451031044778535], [-5.0580429393447686, -13.718626698276386]], [[-3.2749474003122501, 9.8320176172833467], [-5.0837974314834247, -12.054187308435015]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[-0.0015092183277361623, -0.050683611429984718], [0.027451263421367902, -0.0018623607608878412]], [[-0.0027268736512712343, -0.04118589213530393], [-0.052219179139271883, 0.015670485292086311]], [[0.041114043534536605, 0.027859689352403513], [-0.014760233276091163, 0.022186001207381092]], [[-0.040957706091134624, 0.02244917700347376], [0.057042928129902422, -0.053806775342366019]], [[0.019771032425410884, 0.041586668377891968], [-0.016893954693646036, -0.045820460735303124]], [[-0.010938383415961312, 0.032839116267967414], [-0.01697997516214856, -0.04026120313715735]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_mult_overloaded_taggedData_rank0_constData_rank4(self):
      arg0=Data(-3.02435008278,self.functionspace)
      arg0.setTaggedValue(1,0.0983034343665)
      arg1=Data(numarray.array([[[[-1.8186748977480915, 1.2922082205688703, -4.2813412436649498, 4.6009209343532866], [-2.8913456770667634, -1.9046372889030891, 4.0948281884285791, 0.7633525812302242], [4.4562951952477299, 0.22424375665614971, -4.0220562690377024, -0.22014293834666265]], [[0.14355494610290176, -0.66493327919459055, -2.0512094653017163, 0.9567284495392876], [3.9194732425022067, -0.33412865591083296, -4.5305792297203151, 3.7725706847958005], [2.9211680651596676, -4.0730538554822617, -3.9172251429753011, 0.16047009520591793]]], [[[0.1393602798812168, -0.1899159770662715, 3.4062697273257925, 0.39764325468636752], [-2.133874976270528, 4.0612521341249881, 1.1042056330189141, 4.7775552064895308], [3.0855987949820456, 2.7854739781893034, 0.066545702763578518, -2.395952092682978]], [[-0.81613367275528326, 4.6084451873410046, 4.68970107983953, -0.74320428362115365], [3.8835371188624972, 1.0580760161604728, 0.88414350493161997, 4.4639606290261682], [-0.096682301394681147, 1.5840389675317326, 4.0985533195863439, -4.1576577737121028]]], [[[-2.1340708645131889, 1.6268466187570194, 4.9517882128521329, -3.6014632515771594], [3.5403265521045704, 0.71346428105732329, -0.079128681111479082, 1.8845304952447082], [-1.9393707428780305, 4.0706520916770224, 2.5721055800003958, 3.5684468977861243]], [[4.24557597470519, -1.2582918884958838, -2.5897456332331337, 0.055754666672839015], [3.7572925903225176, -1.7794347625291085, 1.269950287036183, 2.2609410519448767], [-3.1056432992516756, 0.65059527218607016, -1.5361529969678003, -4.2751161041265862]]]]),self.functionspace)
      res=arg0*arg1
      ref=Data(numarray.array([[[[5.5003095775588244, -3.9080900388496396, 12.948274744698056, -13.914795608686919], [8.7444415377895766, 5.7602899423646194, -12.384193970653929, -2.308645442235834], [-13.477396742650555, -0.67819162400647637, 12.164106210219892, 0.66578931381270345]], [[-0.43416041313014264, 2.010991017976973, 6.2035755161894137, -2.8934817655644798], [-11.85385922542519, 1.01052202816392, 13.702057668457133, -11.409574462864864], [-8.8346348796871226, 12.3183407650052, 11.84706018543489, -0.48531774572012726]]], [[[-0.42147427399534493, 0.57437240096209019, -10.301752131817151, -1.2026124102286029], [6.4535849611311935, -12.282648228041355, -3.3395043976296126, -14.448999484244389], [-9.3319309710374121, -8.4242484565252109, -0.20125750166184572, 7.2461979098485756]], [[2.4682739407589946, -13.937551583833201, -14.183297849037679, 2.2477099366939157], [-11.745175806920553, -3.1999922870650623, -2.67395948233152, -13.500579697932938], [0.29240112622660275, -4.7906883825852393, -12.39546007137929, 12.57421263210734]]], [[[6.4541773957541011, -4.9201537061121581, -14.975941091460562, 10.892085683045373], [-10.707186900934403, -2.1577657574780447, 0.23931283326996872, -5.6994799592994054], [5.8653360667690544, -12.311076990442, -7.7789477237994271, -10.792232670724282]], [[-12.840108050558868, 3.8055151771370253, 7.8322974202541449, -0.16862163076750919], [-11.363368156579833, 5.3816336713608983, -3.84077425572749, -6.8378772576157525], [9.3925525691846001, -1.9676278652938191, 4.6458644435460927, 12.929447743419873]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[-0.17878198844484142, 0.12702850599858689, -0.42087054794735002, 0.45228632909580802], [-0.28422920999649276, -0.187232386721737, 0.40253567406341983, 0.075040180367489231], [0.43806912224393352, 0.022043931414552707, -0.39538194446185215, -0.021640806891016971]], [[0.014111944222217848, -0.065365224969429286, -0.20164093504429942, 0.094049692345880662], [0.38529768064569969, -0.0328459943963086, -0.44537149795119063, 0.3708566547059321], [0.28716085316703688, -0.40039518235375648, -0.38507668474140705, 0.015774761471866326]]], [[[0.013699594126604925, -0.018669392786690289, 0.33484801257488078, 0.039089697588356072], [-0.20976723867619795, 0.39923503261289961, 0.10854720597263133, 0.46965008467363367], [0.30332495862397219, 0.27382165839461897, 0.0065416711239942834, -0.23553031928841958]], [[-0.08022874293401687, 0.45302598900554336, 0.46101372230066623, -0.073059533515878586], [0.38176503627409586, 0.10401250620943421, 0.086914343007642336, 0.43882266071026327], [-0.0095042022695574421, 0.15571647067878705, 0.4029018672496939, -0.40871203807661521]]], [[[-0.20978649516320355, 0.1599246098113975, 0.48677778757908358, -0.35403620637489741], [0.34802625885090727, 0.070135989125784545, -0.0077786211101526382, 0.18525581985101891], [-0.19064680453488567, 0.4001590807231642, 0.25284681206736331, 0.35079058540697811]], [[0.41735469917756285, -0.12369441407469653, -0.25458088988254995, 0.0054808752159013797], [0.369354765548632, -0.17492454838780824, 0.12484047469042171, 0.22225827030646425], [-0.30529540223385143, 0.063955749638520312, -0.1510091153143778, -0.42025859535131799]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_mult_overloaded_taggedData_rank0_taggedData_rank0(self):
      arg0=Data(0.594413183352,self.functionspace)
      arg0.setTaggedValue(1,4.34488861419)
      arg1=Data(-4.13566143567,self.functionspace)
      arg1.setTaggedValue(1,-2.97392630114)
      res=arg0*arg1
      ref=Data(-2.45829167925,self.functionspace)
      ref.setTaggedValue(1,-12.9213785253)
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_mult_overloaded_taggedData_rank0_taggedData_rank1(self):
      arg0=Data(1.86985047593,self.functionspace)
      arg0.setTaggedValue(1,-4.43665560596)
      arg1=Data(numarray.array([2.0974204701185295, -4.2066944343028512]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([2.4348371383302458, -0.80460054396706226]))
      res=arg0*arg1
      ref=Data(numarray.array([3.9218626642862979, -7.8658895900930066]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([-10.802533839373282, 3.5697355139501941]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_mult_overloaded_taggedData_rank0_taggedData_rank2(self):
      arg0=Data(0.654058548902,self.functionspace)
      arg0.setTaggedValue(1,0.1725176172)
      arg1=Data(numarray.array([[0.8989324988462144, -3.3278840675671484, -2.4140998582875772, -0.95896368060472614, 0.18211566459683048], [4.3037596802718472, -0.88736460044670729, 2.3682161590270798, 2.1970096163954747, -4.8514034562002468], [-0.98633171015110754, -1.4814425809340994, -0.51275967160949065, -1.3854811808572576, -0.69869900021535614], [-1.1256572499516535, -2.868454246407607, -3.6897036122280147, -1.9028111479878476, -0.94932567632544362]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[0.74788680809310115, 2.1282151256990716, 1.775511434964784, -3.1970823068074141, 0.45462100854116905], [4.4983288376995816, -0.14856222667584795, 1.898446692676556, -2.0005540220267006, 3.3381306620499078], [-1.9212747911637318, 3.013913690485138, 2.0135772843934081, 0.13281897249513719, -2.1152931733924216], [2.74514833456535, 1.8699118618738453, 3.6953901619290246, 2.3463011918098431, -1.0346270658051724]]))
      res=arg0*arg1
      ref=Data(numarray.array([[0.58795448575615294, -2.1766310241468663, -1.5789626502159602, -0.62721839338599394, 0.11911430731851599], [2.8149108113012966, -0.58038840291512628, 1.548952024459386, 1.4369729216232396, -3.1731019047002067], [-0.64511868707740572, -0.96895018476730699, -0.3353748467483405, -0.90618581068244897, -0.45699005420009453], [-0.7362457474643308, -1.8761370219969773, -2.4132821904921142, -1.2445498982873728, -0.62091457429277574]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[0.12902365006777231, 0.36715460237527625, 0.30630700207203954, -0.55155302156370678, 0.0784301331227273], [0.77604097246340176, -0.025629601352090609, 0.32751549980238132, -0.3451308129605562, 0.57588634772016567], [-0.33145374895860302, 0.51995320832990877, 0.34737755515223512, 0.022913612653855466, -0.36492533795375687], [0.47358644954063189, 0.32259273878508343, 0.63751990536148773, 0.40477829084529726, -0.17849139608366357]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_mult_overloaded_taggedData_rank0_taggedData_rank3(self):
      arg0=Data(-1.54125663924,self.functionspace)
      arg0.setTaggedValue(1,1.08570842055)
      arg1=Data(numarray.array([[[-2.2770786316341871, -2.1460169655833172], [4.8123782369809174, -2.2852073426872566]], [[-1.7994705604766703, -2.0158566453432005], [-4.8171620683622365, 4.7577923462909482]], [[4.3906932460407404, 1.4886995147677045], [1.3722539055863816, 1.1764964634857966]], [[4.1077975065284651, -0.087591280770782376], [-2.8425290770991243, -3.3652982671733014]], [[-0.74730716158883403, 0.46607631672562189], [2.6752511106890662, 4.8256111214667445]], [[-0.16000978564141732, 2.5358637912087554], [2.1952209336157367, 0.17205045521583173]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[-2.7325661859534565, 3.4691259661138254], [-3.1465219830597526, -0.19620628443754118]], [[0.4064669836819732, -3.434705563588202], [1.5759971465889286, -2.4670170155868187]], [[3.0860505079499294, 3.2426839426387737], [-1.789143534604273, 0.68158308502557574]], [[-1.3913333520292257, 2.8487002965109944], [-4.6617529714600092, -3.9780897472663455]], [[1.3297271827720429, -4.3030558655490792], [4.8015031019433643, 4.5790569364688611]], [[2.1248456212909703, -3.9920311788315264], [-4.2933405923153733, -2.8802355533519997]]]))
      res=arg0*arg1
      ref=Data(numarray.array([[[3.5095625590839155, 3.3075628961328003], [-7.4171099082940071, 3.5220909889629444]], [[2.7734459484564837, 3.1069524383967617], [7.4244830201714835, -7.3329790418591152]], [[-6.767185116338454, -2.2944680109731381], [-2.1149954427117614, -1.8132829853930625]], [[-6.3311701796016813, 0.1350006430277414], [4.3810668123195029, 5.1867882973128667]], [[1.1517921243524216, -0.7183432175471568], [-4.1232485359909798, -7.4375051793641207]], [[0.24661614446363866, -3.9084169044157053], [-3.3833988385398532, -0.26517390638613264]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[-2.966770117793823, 3.7664592733507636], [-3.4162054124467005, -0.21302281517823304]], [[0.44130462685817901, -3.7290887524900502], [1.711073372810888, -2.678461147457285]], [[3.3505510227170197, 3.52060926169802], [-1.9424882010884936, 0.74000049471520712]], [[-1.5105823360871113, 3.0928578995389699], [-5.0613044556278082, -4.3190455363018971]], [[1.4436959993668959, -4.6718639873141896], [5.2130323490662391, 4.9715206740920044]], [[2.3069627833997046, -4.3341818659467046], [-4.6613160333564325, -3.1270959934353866]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_mult_overloaded_taggedData_rank0_taggedData_rank4(self):
      arg0=Data(-4.74467900163,self.functionspace)
      arg0.setTaggedValue(1,-2.44505771366)
      arg1=Data(numarray.array([[[[0.57462551893286751, 3.2283279796524091, 1.67588749300874, -4.5342417200560874], [0.80984208476713082, -3.4668120846913641, 4.6214701028878871, -0.20725197887660674], [2.124820301332444, -1.4135887630200363, -0.25533129849841263, -2.1142574718795237]], [[-2.4976601583407119, -3.9919359456446912, 3.9570976867723964, 3.6791858352447537], [3.8676141422016119, 1.2414864411901068, 1.95462144151867, -0.15271679325112508], [3.9732173021559394, 0.84136830548135499, -0.65139380235915834, 4.6379037969393515]]], [[[2.616969981095747, 3.4377149732422705, -2.9106449073247607, 0.72156202111654721], [1.7014641223422187, 3.5159672015216099, 4.3574686381919818, -2.0914090270603767], [4.6445228689637403, -4.1196691559269976, 4.5345986538506793, -3.074987810357527]], [[4.0018688502739046, 4.9301895185184925, -0.84309097038138425, -1.2088704416240805], [-0.75129072617984072, 3.5824548432045287, -4.2745378467592845, -3.0743085908558978], [-0.42373047745432846, 0.90072919268893159, 4.3148752470634708, 4.4927376734211784]]], [[[-2.5747188107033239, 2.8671121375423025, 1.155946350336361, 2.4938260152308818], [4.710938612563714, -0.79337062868579533, -2.4030421103748956, 4.7824950534375237], [-3.0678239944772869, 1.8788111562302685, 3.4275484327606485, -2.2902037608094372]], [[0.043051577558484766, -1.6696594766262485, -4.2463825369620389, -4.3849432675853492], [-2.7940357979785535, 2.7530622022254239, 0.6570614748679402, -4.0229739052949824], [-4.9516112387129132, -3.2516295651747109, -3.0457038901088507, -2.6626333045286907]]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[[-2.6882092787739795, 3.6329986565329691, 1.0478349039456214, 2.2617437593970591], [3.730198631533197, -1.6242246318044176, 0.50706479867507426, -3.934785010903834], [2.355968794971651, 3.6502549564072577, 0.57297647219744086, 3.7315697185556402]], [[0.60046085671603944, -1.5056550836002938, -2.7429338126725678, 2.9186213701638843], [0.41021572855453581, 0.52862624631844124, -2.8513507813438013, 0.098239565640505511], [1.3487264380856976, 0.072841584459576225, 1.4568465057334548, 1.3726680324077636]]], [[[2.8706650903203652, 0.59686052914704568, -1.4053822125188828, -2.6246185555431989], [-1.3665002953631733, 1.6507151884485776, -1.276703739492171, -3.1239365160214683], [-0.65050162738626582, -1.081107329715941, -4.5828318815154798, 0.94173229224798938]], [[4.7762275962092708, -0.51244108178484993, -1.3818852495333944, 2.988460367243313], [-0.3409534577725335, 2.4798056473422285, 4.4971017496106516, -2.1990464382938599], [-4.7777277081516285, 2.7926958052888793, -1.416499850245442, -2.0954204496076825]]], [[[0.34593024880876211, -0.68675131339532758, 2.9662640572488037, 2.6783766407383673], [-3.564742905325665, -3.3386860856421965, -0.68755006002669106, -0.78019958039247506], [-4.6343899878869985, -4.2168301853658727, -2.2456505981955024, -0.41515210751541876]], [[-0.55788332628338466, 3.9630128065823662, -1.0118691818735162, -3.0981745142102959], [2.1472063344776027, 4.012163339668648, 1.9479027288120419, -0.68858281819862288], [1.9522838311551602, -0.23915064553317755, 4.3595002908910043, -4.1264020430601196]]]]))
      res=arg0*arg1
      ref=Data(numarray.array([[[[-2.7264136334810845, -15.317379975428949, -7.951548197171646, 21.513521477461385], [-3.8424407342302564, 16.448910500829623, -21.927392153829505, 0.98334411222194373], [-10.081590265967572, 6.7070249208402251, 1.2114650504441471, 10.031473030864509]], [[11.85059570648515, 18.940454657149349, -18.775158301824646, -17.456555775577538], [-18.350587606908292, -5.8904546483221196, -9.274051309707918, 0.72459216213476796], [-18.851640702449284, -3.992022531653765, 3.0906544958449289, -22.005364756914688]]], [[[-12.416682517199073, -16.310854047129041, 13.810075772982891, -3.4235801699648394], [-8.0729010933026579, -16.682135751476721, -20.674789947887476, 9.9230644945112179], [-22.036770128959077, 19.546507737786502, -21.51521501374156, 14.589830094069249]], [[-18.987583101168763, -23.392166682567289, 4.0001960236317773, 5.735702200064047], [3.5646333326242772, -16.997598268837518, 20.281309963188264, 14.586607415562371], [2.0104650987278863, -4.2736708867056352, -20.47269797939185, -21.316598098910092]]], [[[12.216214276243884, -13.603526754313302, -5.4845943754508948, -11.832403928182698], [-22.351891512995461, 3.7642889624348856, 11.401663441126592, -22.69140385544075], [14.555840087290736, -8.914355840992517, -16.262617075986675, 10.866281693364863]], [[-0.20426591602875549, 7.9219982586198361, 20.147722056008906, 20.805148245047732], [13.256802980469253, -13.062396421078134, -3.1175457825854576, 19.087719812555502], [23.493805868552535, 15.427938518961282, 14.450887292579969, 12.633340329035965]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[6.5728268330077837, -8.882891388884623, -2.5620168145379658, -5.5300940252437858], [-9.1205509375268186, 3.9713229647154504, -1.2398026973276579, 9.6207764425174567], [-5.760479675295648, -8.9250840380015415, -1.4009605430939827, -9.1239033244271468]], [[-1.4681614494664723, 3.6814135762733757, 6.7066314767431594, -7.1361976943819814], [-1.00300113136831, -1.2925216812058213, 6.9717172222847594, -0.2402014077562577], [-3.2977139810631666, -0.17810187795834925, -3.5620737864671215, -3.3562525609377336]]], [[[-7.0189418224319855, -1.4593584407721891, 3.4362406193645985, 6.4173438446549307], [3.3411720879010107, -4.0360939045774904, 3.1216143263082121, 7.638205075492988], [1.5905140217913694, 2.6433698158199781, 11.205288442321875, -2.3025898053668405]], [[-11.678152126323369, 1.252948019816053, 3.3787891887692671, -7.3069580729055525], [0.83365088192693371, -6.0632679264201208, -10.995673322014595, 5.3767954566543787], [11.68181998659939, -6.8283024206369323, 3.4634238852456369, 5.1234239336812468]]], [[[-0.84581942323935522, 1.6791465961857013, -7.252686813938614, -6.5487854655331503], [8.7160021378933159, 8.1632801672000408, 1.6810995777979791, 1.9076330022355517], [11.331350988007433, 10.310393171937397, 5.490745317310691, 1.0150708628241825]], [[1.3640569302533725, -9.6897950320809656, 2.4740785483580918, 7.575215494245171], [-5.2500434109413288, -9.8099709221342462, -4.7627345925478251, 1.68362473113261], [-4.7734466406262159, 0.58473713058847199, -10.659229813960788, 10.089291145060466]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_mult_overloaded_taggedData_rank0_expandedData_rank0(self):
      arg0=Data(-2.22153518466,self.functionspace)
      arg0.setTaggedValue(1,4.69811369693)
      arg1=Data(-0.562826705043,self.functionspace)
      arg1.setTaggedValue(1,-4.43591643677)
      arg1.expand()
      res=arg0*arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*(1.25033932812)+(1.-msk_ref)*(-20.84043977)
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_mult_overloaded_taggedData_rank0_expandedData_rank1(self):
      arg0=Data(-1.5457449423,self.functionspace)
      arg0.setTaggedValue(1,2.82703183318)
      arg1=Data(numarray.array([2.2716081265967025, -2.9898915773500745]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([-0.012206473173464794, 3.9964849502775941]))
      arg1.expand()
      res=arg0*arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([-3.5113267725853539, 4.6216097837286236])+(1.-msk_ref)*numarray.array([-0.034508088232212457, 11.298190175249657])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_mult_overloaded_taggedData_rank0_expandedData_rank2(self):
      arg0=Data(4.54003329753,self.functionspace)
      arg0.setTaggedValue(1,2.98678553946)
      arg1=Data(numarray.array([[0.7806767811932076, -0.5806864615498144, -0.06668079884937228, 0.9984699402250472, 2.325215152817858], [2.3410093404432883, 2.0500262341602156, -1.8185004975365828, 0.96411959842396566, 1.5240499389985569], [-0.32078568648105232, -4.4164673737677003, -1.2510543799215657, -4.1032611257955534, -3.9555099635330415], [-4.3478334514743402, -0.29069180904764202, -2.5538661678923171, -4.9707109114744297, 3.7567090380849475]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[-2.9523242815073703, 3.9983698954863325, -1.5482464874395454, -1.3224686417806639, -3.4162019006071875], [1.7905804576917648, -4.9051519230409752, 2.1127184574115638, -3.0653776908518471, 0.96181666995017423], [-2.5373501916078967, -2.8751261520435287, -3.9489642086747931, 4.2368003889137267, -0.025684158297478277], [-3.3813535442343934, 1.9665471383296582, 2.8491679513752164, -2.3458635583090102, 3.5459706882628943]]))
      arg1.expand()
      res=arg0*arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[3.5442985812248211, -2.6363358708603744, -0.30273304708197479, 4.5330867752033734, 10.556554217711751], [10.628260355438623, 9.3071873638950908, -8.2560528103888995, 4.3771350796449653, 6.9192374701502892], [-1.4563776979946337, -20.050908934355235, -5.6798285418632393, -18.628942139567602, -17.958146943147209], [-19.739308641803369, -1.3197504923951984, -11.594637439663572, -22.567193050483983, 17.055584122033306]])+(1.-msk_ref)*numarray.array([[-8.8179594717917791, 11.942273385235778, -4.6242802201983677, -3.9499302156548355, -10.203462436596507], [5.3480798182667177, -14.650636832574804, 6.3102369375391749, -9.155625760008089, 2.8727401214151458], [-7.578520860831012, -8.5873852150361056, -11.794709194300168, 12.654414135170137, -0.076713072596013385], [-10.099377869708427, 5.8736545554220942, 8.5098536366496855, -7.0065913534947368, 10.59105397503934]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_mult_overloaded_taggedData_rank0_expandedData_rank3(self):
      arg0=Data(-4.41284591178,self.functionspace)
      arg0.setTaggedValue(1,0.0736469151232)
      arg1=Data(numarray.array([[[-2.9265126812506912, 1.415139545433628], [3.4730061001948851, -2.710581251982791]], [[-1.590831811533624, -0.55871061700777958], [-2.2898865302605085, 2.8636774864644376]], [[-2.7476177401678648, -4.9860835009420166], [0.98076414280220447, -2.8734975793062132]], [[4.3325905935230438, -4.2574975131879009], [4.1006148120269739, 1.5269360791132867]], [[-2.5858279812083387, 4.8750832169823948], [-2.7934231724923722, -2.2101722799968995]], [[-3.7634678514803035, -1.6756403963325384], [-1.9347878877304225, -3.808061649560913]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[-4.7258601702171514, -4.7936282417750853], [0.90282871055929803, 4.2131039130666998]], [[-3.217176071073411, -3.6261606403500677], [-1.3107407162171034, 2.4212454742728182]], [[3.7844567788747216, 0.39960537946041796], [4.269030376754209, -4.886993952159715]], [[2.1194399496357255, 2.8374375020432474], [-1.8415129567457269, -3.160498890440917]], [[-3.690965416459937, 4.1410882662465731], [-0.76973072875469839, -3.1793861057965422]], [[-4.5376562287182427, 2.0508613156218463], [2.807963454808692, 0.53344719462163237]]]))
      arg1.expand()
      res=arg0*arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[[12.914249521221418, -6.2447927576611137], [-15.325840770822481, 11.961377396352344]], [[7.020095655851363, 2.4655038621293301], [10.104916413493898, -12.63696748879317]], [[12.124813711826432, 22.00281819291202], [-4.327961037982436, 12.680302045343273]], [[-19.119054688032772, 18.787680495473076], [-18.095381309026504, -6.7381336342602642]], [[11.41086043543446, -21.512991043634688], [12.326946026596826, 9.7531497101077402]], [[16.607603722510003, 7.3943428725648674], [8.5379208205273525, 16.80438928206064]]])+(1.-msk_ref)*numarray.array([[[-0.34804502283993238, -0.35303593225402019], [0.066490549417317843, 0.31028210629070091]], [[-0.2369350930426235, -0.26705554490282596], [-0.096532010275718547, 0.17831725993611955]], [[0.27871356718107604, 0.029429703463881862], [0.31440091781503371, -0.35991202880213108]], [[0.15609021407946905, 0.2089685188802666], [-0.13562174842366262, -0.23276099353116186]], [[-0.27182821674856528, 0.30497837606179917], [-0.056688293648289818, -0.23415197867737056]], [[-0.33418438313451698, 0.15103960924098625], [0.20679784622524713, 0.039286740264990259]]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_mult_overloaded_taggedData_rank0_expandedData_rank4(self):
      arg0=Data(-2.79628244153,self.functionspace)
      arg0.setTaggedValue(1,-0.548556750075)
      arg1=Data(numarray.array([[[[-2.6809019766816999, -0.7244253880463063, 0.93729944966109624, 1.5565250856764319], [4.185510640105754, -4.8635085561907987, 1.9415110464407705, 4.2114740531067252], [2.4668477289433435, -4.6813669805705382, 4.567327498485696, 4.6561230083968894]], [[2.4539479900359007, -3.0968146366065872, 0.58991141066483088, -1.5507096658258224], [-3.5305650850407355, 0.21298034086276729, 2.2371711073176748, -3.371622636269096], [-3.0126624143261749, -1.7367006455589062, 0.31266481769587795, 4.7457353918135396]]], [[[0.74122215047587758, 0.64199484645201643, -0.60059203636507963, 3.2738050009967345], [-0.97157059985295913, 4.5548394372453149, -1.3102073380243873, -4.9906655221473084], [2.6398326032387871, -3.7088749937100349, 4.7457361222110102, 1.076800881023642]], [[-3.2364684687441225, 3.4999109394926258, 3.3980005282726573, -2.3029509076538557], [-1.6484621998164863, 3.0434015505538774, -3.3060211933232764, -2.8734937870095667], [4.5642679318723953, 4.3515697684652679, 2.4887519594030936, -4.7399358947089398]]], [[[-2.6367585800089763, -3.8120927455754039, 3.281096531909478, -0.75572814648750786], [-2.5821469746186523, -1.0166223592469379, -1.3825886591032344, -4.6525308744409557], [3.4378445293294462, 4.8980879259267187, -3.3434703318321612, -0.62160742741957264]], [[-4.0687428816696167, 4.8876739753523548, -1.3194379757124475, 4.1633095653093175], [-2.5359168513483512, 0.022787464782540567, -2.1482416631875245, -2.9055505732185596], [4.0453721735412707, -4.9729319110352135, -2.4366346683445137, -3.9573237575540476]]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[[2.916583713835605, -3.8625829355903663, 0.027038927869477369, -1.7426984438897919], [4.2250304662761469, 2.9361135457363119, -2.9295852137394829, 0.92606122117822043], [4.1331359524915463, -0.48997581025813552, -3.0931698790312989, -2.8546285893930703]], [[1.3868011276230519, 3.983340932997141, 1.0403756476034669, -3.5726214057133876], [1.4348559142320392, -3.4077223481986518, -0.60697090065497949, -1.4760801179502039], [-2.8837770702185961, 3.4532032682401343, 2.0502890785183556, -2.2842186450813227]]], [[[1.7432334919452144, 4.6903020438607506, 2.3792084667587883, 4.3494327627815803], [-0.42558467044109793, -3.4981055127107421, -4.4161140236008869, -2.8975833849140642], [-0.84418034480826343, -3.7924343983855993, 2.5521572008999609, -3.3306181701459181]], [[4.5549821783944182, -2.6705606959859587, 4.975450671737125, 2.4538872085158205], [4.9659679736221882, 2.2156401035031621, -0.97616024835165316, -1.8402729036950625], [1.6093488091276207, -1.6243734283097422, 0.95208250883124013, 3.4489019152227698]]], [[[-4.7854735586906463, 1.8220383646197202, -2.1193203874750974, -1.1948487225055491], [-1.8696542408824399, -0.84689669779397825, -1.1391555054103373, 3.643465732682353], [0.74094867726507552, 2.4538882973775342, 1.1577215960335447, 1.2566525728924551]], [[-4.0872245606489246, -3.3007699001460598, -0.089480160766855832, -2.3614088509724884], [-4.6293694942466992, -2.6901844897243734, 2.2829836924097124, 0.41331312281774579], [-0.48638090009451851, -3.0155411873592417, 2.5449975277081984, 1.4350840292847309]]]]))
      arg1.expand()
      res=arg0*arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[[[7.4965591248677068, 2.0256979927950374, -2.6209539935464119, -4.3524837668835596], [-11.7038699117797, 13.599743579924668, -5.4290132492058154, -11.7764709476766], [-6.8980029903812614, 13.090424290144473, -12.771537688749044, -13.019835014000735]], [[-6.8619316769740122, 8.6595683930271967, -1.6495589197023723, 4.336222210465154], [9.8724571559909222, -0.59555318754639319, -6.2557622860986521, 9.4280091772764365], [8.4242550114484498, 4.8563055213764041, -0.87429913980828156, -13.27041654829269]]], [[[-2.0726664846514584, -1.7951989166888209, 1.6794249658125702, -9.1544834412919958], [2.7167858090790782, -12.736617542373772, 3.6637097740860476, 13.955310371147538], [-7.3817175570245048, 10.371062022754341, -13.270418590690312, -3.0110393966343008]], [[9.050079951726266, -9.7867395070345289, -9.5017692135306646, 6.4397011867862997], [4.6095659048786626, -8.5102103183498823, 9.2445690142277748, 8.0351002224706871], [-12.76298227634957, -12.168218136667779, -6.9592534054111663, 13.254199516369372]]], [[[7.3731217198421186, 10.659688009950042, -9.1748726211552007, 2.1132293465957361], [7.2204122465851945, 2.8427632528326567, 3.8661083913138321, 13.009790392892121], [-9.6131842940862082, -13.696437264356518, 9.3492873826907275, 1.7381899348202108]], [[11.377354279127493, -13.667316917218427, 3.6895212441773282, -11.641789436143251], [7.0911397646145184, -0.06372018765848303, 6.0070904429421716, 8.1247400508788896], [-11.312003178341994, 13.905722185769804, 6.8135187395237642, 11.065794938712077]]]])+(1.-msk_ref)*numarray.array([[[[-1.5999116833840921, 2.1188459420436092, -0.014832386397599885, 0.9559689947413974], [-2.3176689815494043, -1.6106249045010601, 1.6070437439174672, -0.50799713386025125], [-2.2672596257179776, 0.26877953809069516, 1.6967792162720949, 1.565925781669387]], [[-0.76073911956960749, -2.1850885566466665, -0.57070508410680199, 1.9597855875674435], [-0.7870998971373937, 1.8693290964866867, 0.33295798465354914, 0.80971371235347056], [1.5819153775806685, -1.8942779621750749, -1.124699913626829, 1.2530235564071246]]], [[[-0.95626249896381399, -2.5728968460516035, -1.3051308642767436, -2.3859107010223237], [0.23345734369901933, 1.9189093914729565, 2.4224891567482834, 1.5894889247005306], [0.46308082642543352, 2.0803654884520286, -1.4000030598068554, 1.8270330791568548]], [[-2.498666220430771, 1.4649540962687824, -2.7293170506478872, -1.3460963921546909], [-2.724115252588013, -1.2154043345141077, 0.53547929338844169, 1.0094941233025256], [-0.88281915247253784, 0.89106100874220073, -0.52227128684796531, -1.8919184259429431]]], [[[2.6251038229264307, -0.99949144380823562, 1.1625675041215806, 0.65544233204922042], [1.0256114541428989, 0.46457090019133446, 0.62489144187823509, -1.9986477213308083], [-0.40645239837309266, -1.3460969894571337, -0.63507599621210453, -0.68934525135959912]], [[2.2420746218173573, 1.8106596091703635, 0.049084946186478233, 1.2953667648884226], [2.5394718846615203, 1.4757188607860745, -1.2523461147830892, -0.2267257034163595], [0.26680752585452888, 1.6541954734558768, -1.3960755727491811, -0.78722503118934151]]]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_mult_overloaded_taggedData_rank1_float_rank0(self):
      arg0=Data(numarray.array([2.1952806579129742, 2.6884774478756199]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([-3.6051247624491434, -0.31421820317847526]))
      arg1=0.626614133252
      res=arg0*arg1
      ref=Data(numarray.array([1.375593886703014, 1.684637965768125]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([-2.2590221282873846, -0.19689356703668046]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_mult_overloaded_taggedData_rank1_array_rank0(self):
      arg0=Data(numarray.array([3.2122627302865183, -4.847095924140068]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([2.9370723087704711, -4.2178567696345954]))
      arg1=numarray.array(4.52616312843)
      res=arg0*arg1
      ref=Data(numarray.array([14.539225128654049, -21.938746851808116]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([13.293668389490893, -19.090707791720718]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_mult_overloaded_taggedData_rank1_array_rank1(self):
      arg0=Data(numarray.array([-0.20883330151686419, 4.2213892778139428]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([4.0742747673854751, 2.2348116931110855]))
      arg1=numarray.array([-0.9174792888043859, 2.8142246343646784])
      res=arg0*arg1
      ref=Data(numarray.array([0.19160022895436443, 11.879937696866916]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([-3.7380627159744804, 6.2892621199194529]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_mult_overloaded_taggedData_rank1_constData_rank0(self):
      arg0=Data(numarray.array([-3.2350089253355674, 2.9543163332728497]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([-4.2840504995547892, 3.5015438188050751]))
      arg1=Data(-3.00759489945,self.functionspace)
      res=arg0*arg1
      ref=Data(numarray.array([9.7295963435274366, -8.8853867353250831]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([12.884688431464369, -10.531225329652845]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_mult_overloaded_taggedData_rank1_constData_rank1(self):
      arg0=Data(numarray.array([-0.58315848196382092, -2.4134417406043864]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([-3.4226636871386407, 3.8532628186902347]))
      arg1=Data(numarray.array([2.824639323240099, -3.0252609130101682]),self.functionspace)
      res=arg0*arg1
      ref=Data(numarray.array([-1.6472123798360105, 7.3012909636776753]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([-9.6677904409177522, -11.657125392938953]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_mult_overloaded_taggedData_rank1_taggedData_rank0(self):
      arg0=Data(numarray.array([-0.5004196078421046, 4.9468639816670184]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([-1.0996920633843779, 3.8951695653030605]))
      arg1=Data(1.70727137898,self.functionspace)
      arg1.setTaggedValue(1,2.97487288276)
      res=arg0*arg1
      ref=Data(numarray.array([-0.85435207394787749, 8.4456392915938654]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([-3.271444098744869, 11.587634313558997]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_mult_overloaded_taggedData_rank1_taggedData_rank1(self):
      arg0=Data(numarray.array([-3.3661646388796749, 4.8926845850811471]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([0.36118877989666753, 3.7712786481015783]))
      arg1=Data(numarray.array([-0.70712349183095746, -0.37464270283337964]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([3.9060632340308139, 2.3846072004866841]))
      res=arg0*arg1
      ref=Data(numarray.array([2.3802940935224894, -1.8330085770660136]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([1.410826213698821, 8.9930182193047106]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_mult_overloaded_taggedData_rank1_expandedData_rank0(self):
      arg0=Data(numarray.array([-2.150487563359369, 1.7174846136358379]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([-1.0060565918834552, 3.0878917411591758]))
      arg1=Data(-4.75469453034,self.functionspace)
      arg1.setTaggedValue(1,-4.06790999956)
      arg1.expand()
      res=arg0*arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([10.224911455060154, -8.1661146983903734])+(1.-msk_ref)*numarray.array([4.0925476702431878, -12.561265691411638])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_mult_overloaded_taggedData_rank1_expandedData_rank1(self):
      arg0=Data(numarray.array([-2.8073118301266939, 3.6266676408707408]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([-1.0653786792957454, -0.6345243407497394]))
      arg1=Data(numarray.array([4.3448785422004406, 3.5991719188225133]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([2.5735141554828171, 4.5086814811965965]))
      arg1.expand()
      res=arg0*arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([-12.197428931982921, 13.053000331924261])+(1.-msk_ref)*numarray.array([-2.7417671121171892, -2.8608681445068291])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_mult_overloaded_taggedData_rank2_float_rank0(self):
      arg0=Data(numarray.array([[-4.3448615713416059, 3.3620388985425222, 2.6688790375841451, -3.6552017545464031, 1.2616710217268032], [0.84834384600194124, 3.0199836720360462, -3.6730134462209652, 1.1913199361227811, -0.46486234623915657], [1.9947587697214768, -0.3462306580415202, -3.5987855083235631, -0.095746585808083928, -2.0443254339037455], [0.42343449532836352, 4.4539207072035918, 3.3364644915649819, -4.9532435109307169, 3.1850208678869194]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[4.078962917769358, 3.6045934913068258, -1.3152447454233807, 4.4740273634264849, -3.1270169543065474], [-1.5114883455518613, -2.0396717759319705, -0.81607702547454064, -4.1221256705285452, 4.3360374000620308], [1.7348416865924454, 1.4352128392841141, 1.0487233819999, 4.0784654827843045, -2.373069786356937], [-1.2245535989378409, 3.7324232931013075, 3.3211880782305165, 0.86634811060468575, -1.2072355705248592]]))
      arg1=0.796007563642
      res=arg0*arg1
      ref=Data(numarray.array([[-3.4585426737641569, 2.6762083924975171, 2.1244479003618078, -2.9095682432554137, 1.0042996761221092], [0.67528811798644972, 2.4039298450151811, -2.9237464845496195, 0.94829967987090169, -0.37003394365860359], [1.5878430683389428, -0.27560222256569916, -2.8646604845497601, -0.076215006496105547, -1.6272985079325177], [0.33705706098819094, 3.5453545707945273, 2.6558509711077436, -3.9428192992601074, 2.535300701194696]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[3.2468853343584985, 2.8692836829339394, -1.0469447653970365, 3.5613596212274938, -2.489129147263899], [-1.2031561554155878, -1.6235941609883833, -0.64960348479196905, -3.2812432120224089, 3.4515185666827448], [1.3809471042485408, 1.1424402755058598, 0.83479174423984281, 3.246489372347976, -1.8889814989897569], [-0.97475392683920781, 2.9710371720211683, 2.6436908305481919, 0.68961964878804127, -0.96096864523511216]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_mult_overloaded_taggedData_rank2_array_rank0(self):
      arg0=Data(numarray.array([[3.1397930164632957, -0.74954277925408519, -0.32571383358208283, -3.8320545292303199, 2.9670771807380083], [4.5628121077446195, 1.2490897077519598, -1.8362782671706679, 0.5204678116185697, -3.7963331885953444], [2.7854970070648974, -4.3183003344928768, 0.21468681811062496, 3.8199132307304993, -3.9336360289485519], [-3.6545036951111065, -3.5205962261399968, 2.3897187701383888, 1.7502996338293064, 4.3279482257991013]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[-2.5471898953292693, -4.9128733692998328, 4.6852225120369688, -1.1377777271632428, -1.6315161473916118], [-4.4741295721420098, 2.1262109896762702, 0.88235699514083077, 0.78973340071480536, -2.8042651335933479], [4.1625690439075349, 1.5106989326593148, 4.9154856836077752, 4.3679790513267118, -1.0895713812478047], [2.7141091343733139, -0.69759011584656783, -1.6848024437156282, 1.0281102104596158, -3.0637939833745809]]))
      arg1=numarray.array(-1.90702806016)
      res=arg0*arg1
      ref=Data(numarray.array([[-5.9876733854743582, 1.4293991123241399, 0.62114542022170283, 7.3078355152864543, -5.6582994403131064], [-8.7014107226841784, -2.3820491223338531, 3.5018341817473475, -0.99254672116410281, 7.2397139163491993], [-5.3120209539506575, 8.235119910054836, -0.40941378628236424, -7.2846817183605781, 7.5015542856417543], [6.9692410925171799, 6.7138757917249325, -4.5572607505331133, -3.3378705153915891, -8.2535187094971327]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[4.8575626049363105, 9.3689873712432448, -8.9348507985246108, 2.1697740519197359, 3.1113470736718591], [8.5322906388443016, -4.054744019122678, -1.6826795488076536, -1.5060437552048027, 5.3478122978769527], [-7.9381359690644295, -2.8809452550275911, -9.3739691279304349, -8.3298586170494566, 2.0778431975814549], [-5.1758822775730309, 1.3303239254062138, 3.212965535983495, -1.9606350202783971, 5.8427410968295277]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_mult_overloaded_taggedData_rank2_array_rank2(self):
      arg0=Data(numarray.array([[-1.5567048977592721, 3.405009177310232, -2.6255202248801881, -2.7415225788207289, -4.9626201006286834], [4.4949981787136082, -1.808671563429157, 1.4089858207305657, 0.87325106524519747, 0.092772157158559132], [-2.7917426953644076, 3.7964403092700731, 4.1675448083075111, 4.1027906609665195, -4.5272271261338375], [1.8045675702002297, -4.1211603186859405, 2.9453023490808423, -4.4927583568818044, 2.7215071600984766]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[-0.27335454464858078, -2.0759419237521346, -3.7211813282235759, 3.4365173658696975, 2.5826327099704134], [-2.1545139356548182, 2.0932323069762306, 1.4021298838581222, 2.1735629708102833, -1.1330635840788936], [-1.9156996022986483, 0.12626545060279426, -1.7875176847174226, 1.565202675898794, -1.8349024659561621], [-4.3364746046079645, 1.2485627003123509, -2.3695449662869015, -1.2732107419273309, 2.7771896161923451]]))
      arg1=numarray.array([[4.4909694804526925, -4.5508173739757565, -1.9895148084903114, 4.7287607725768304, -4.6983463261777452], [3.4869944490676232, -2.9096638901072023, -4.0765038203579005, -1.099473062727073, -0.26810160862572197], [3.2915946999607311, 4.5905663188733108, -2.7920359744625092, 1.6429913736498092, -2.5086203364741646], [0.60170604566733132, -4.4860092937673031, -3.084397720711519, -3.2712142994395621, -2.5034225779677568]])
      res=arg0*arg1
      ref=Data(numarray.array([[-6.9911141859081205, -15.495574922650301, 5.2235113673899463, -12.964004427861134, 23.316107918004608], [15.674033697743427, 5.2626263371735567, -5.7437360810382625, -0.96011602323481637, -0.024872364569887992], [-9.1892854597155704, 17.427811015348173, -11.635935029979033, 6.7408496638589908, 11.357094036456832], [1.0858192168046845, 18.48756349073015, -9.0844838523112319, 14.69677538095835, -6.8130824706914366]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[-1.2276269173598191, 9.4472325739758691, 7.4033453575784502, 16.250468514003686, -12.134102904755967], [-7.5127781340671893, -6.0906024572145325, -5.715787828185614, -2.3897739365469377, 0.30377616956677733], [-6.3057066576431113, 0.57962992477454911, 4.9908136807189774, 2.5716144945153165, 4.6030736415442215], [-2.6092829864754625, -5.6010638774524066, 7.3086190931387716, 4.1649451851927388, -6.9524791884735251]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_mult_overloaded_taggedData_rank2_constData_rank0(self):
      arg0=Data(numarray.array([[-0.71632597842697443, 0.99936748095127559, -0.23365138989519085, 2.6932576448783649, -0.053054450017278931], [3.7857185772859623, 1.1380288181827414, 0.060635823406853362, -4.0519997612453205, -4.6730356598285736], [-2.9581813803718293, 4.6361543270464374, -4.3235673307397011, -3.9528228296500725, -1.3118375987593556], [-2.7229607012152082, -4.6270280909793353, -4.5198926488096172, 2.6294018640163639, 3.6927190942927002]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[-2.1015028100386566, 4.9202957589934684, 1.3720001145391549, -4.9051651000162622, -4.6089303356323299], [4.9318255493307603, 2.5027207643951925, 2.9993322107681122, -1.8199182630341171, 0.83091689947804959], [-4.2392314732588563, -1.6435856318125621, 4.8103176280939604, -3.8825754413146574, -4.6741266382128401], [-4.8611905992454743, 2.7804021268222865, 3.9842815315020985, -3.7132775935027529, 3.6546911601480296]]))
      arg1=Data(0.627190968639,self.functionspace)
      res=arg0*arg1
      ref=Data(numarray.array([[-0.44927318427102064, 0.62679425840432523, -0.14654404155225487, 1.6891868710861315, -0.033275271896955998], [2.3743685014833114, 0.71376139681533191, 0.038030240816778471, -2.5413776551811682, -2.9308857619733009], [-1.8553446453657867, 2.9077541231409691, -2.7117023821433359, -2.4791747793872831, -0.82277269426317279], [-1.7078163597615803, -2.9020302303020133, -2.8348358485520011, 1.6491371020340819, 2.3160400656618245]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[-1.3180435830260984, 3.08596506307435, 0.86050608081087498, -3.0764752504142874, -2.8906794815957304], [3.093196443444203, 1.5696838604544034, 1.8811540745423379, -1.1414362982364972, 0.52114357504229991], [-2.6588076939989094, -1.0308420644579552, 3.0169877726263614, -2.435116251852822, -2.9315700137628933], [-3.0488948406804326, 1.743843103128099, 2.4989053930739864, -2.3289341706951454, 2.2921892888102819]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_mult_overloaded_taggedData_rank2_constData_rank2(self):
      arg0=Data(numarray.array([[0.32780667421761134, -4.002023898476331, -3.6993632285700873, -0.6514005312305029, 4.7510196033223178], [4.1434540241262994, -2.7741034563651512, 2.5543272023397385, 1.1594691692541961, 0.24933127135005329], [0.77757139265418651, -1.4039909762938541, 4.2210850630401158, 0.47583243250924223, -4.8990608473250905], [-3.0543501436313991, 4.2912419622927125, -2.9272230845932832, -0.64480562714739431, 4.6861029219159445]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[3.7398512717589636, 3.9042403169138034, -2.228875443710038, 2.9084558495842998, 1.5263280385354552], [-2.2199292278153102, 4.4422995944863271, -4.4074188006647113, -1.2511140667742406, -3.2066651260120294], [-4.9598634494694434, -4.1250293254391037, -3.9281193480701115, 0.32060888825749867, -4.1619712045593324], [-0.59685022111605512, -2.8397446292002524, 4.3275879526940475, 4.3870500382327133, 1.7951297829131363]]))
      arg1=Data(numarray.array([[0.57837851256753581, 4.9137512650801369, -2.7108975531477473, 4.5563264160184005, -3.6196644327168439], [2.3429959515816545, 1.2935409194384881, 0.19628667826565493, -0.8544984798666615, 1.862543949817014], [2.9255183716743449, 3.0852274983288481, 1.4745926395276996, -0.2293003990200031, -3.6713224178132964], [-1.3391136571099747, -4.0546088163151284, -4.036945717745831, 3.0334445343426655, 0.39608460371391629]]),self.functionspace)
      res=arg0*arg1
      ref=Data(numarray.array([[0.18959633664369283, -19.664949994019015, 10.028594724535401, -2.9679934478539596, -17.197096677286282], [9.708096004092635, -3.5884163355640655, 0.50138040175087073, -0.99076464257997143, 0.46439045095322595], [2.2747993944982285, -4.3316315674673644, 6.2243809647792707, -0.10910856664102794, 17.986031915016007], [4.0901219909326194, -17.399307493253463, 11.817040696235598, -1.9559821053836579, 1.8560932187897021]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[2.1630496157837564, 19.184465796412077, 6.0422529866246411, 13.251874217284184, -5.5247953137452512], [-5.2012851935690607, 5.7462963018730662, -0.86511759610807293, 1.0690750681983854, -5.9725547295429182], [-14.510171642418946, -12.726653906257622, -5.7923758778505325, -0.073515746006804036, 15.279938185592085], [0.79925028234561757, 11.514053609638879, -17.470237653796683, 13.307872960364806, 0.71102326868019816]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_mult_overloaded_taggedData_rank2_taggedData_rank0(self):
      arg0=Data(numarray.array([[3.9910761026211521, 0.55922044859161435, -0.59472021792302066, -4.9132932757204886, -3.8182352572042175], [-3.2688424065712587, -2.733331807126226, -1.9803371238953984, -1.5114120424111577, 2.5213104178757479], [0.68640803876360756, 2.7980914507435912, 1.3511628390375927, -3.4491202657444475, 2.9648468263951049], [-0.77982344620884803, -1.3742393141095901, -1.9758765626036467, 1.8948147320959681, 2.2998946440928547]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[4.1242504438293821, 2.3579412246962095, 1.4638271036501624, 3.6554091432396003, 4.999545560367979], [0.082026790081535239, -0.1944497199451547, 3.7964844115799661, -3.7069059174718988, 2.4020889346865291], [1.7747899904164379, 3.0908435746698686, 3.4300157830986837, 3.1933121518214467, -2.523928670628719], [1.5673235120667419, -0.37564206027940372, -1.1530248095019613, 0.40310033210305996, -3.3313235526389393]]))
      arg1=Data(-4.58203840894,self.functionspace)
      arg1.setTaggedValue(1,1.40828509823)
      res=arg0*arg1
      ref=Data(numarray.array([[-18.287263995217327, -2.5623695745120849, 2.72503088109714, 22.512898503743628, 17.49530060288307], [14.977961459685178, 12.524231324632931, 9.0739807643407921, 6.9253480300641366, -11.552741175570175], [-3.1451479978208257, -12.820962499037039, -6.1910800252042382, 15.804001534698415, -13.585042035169687], [3.5731809827218055, 6.2968173203271034, 9.0535423011765506, -8.6821138802912881, -10.538205595751529]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[5.8081204414277838, 3.3206534892501014, 2.0614858964608169, 5.1478582243707844, 7.0407855106056374], [0.11551710612775286, -0.27384064295443716, 5.3465324225038131, -5.220380364129225, 3.3828260513506021], [2.4994102959974311, 4.352788947178313, 4.8304401140435571, 4.4970939174180691, -3.554411135850692], [2.2072383461545728, -0.52901111576121129, -1.6237876571151226, 0.5676801907937109, -4.6914533165756733]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_mult_overloaded_taggedData_rank2_taggedData_rank2(self):
      arg0=Data(numarray.array([[4.9352649309220684, 4.0324329739825338, -0.74352733584725694, -3.0738636432755531, -4.7237293148785788], [1.5767979880149081, 3.6208855856046736, 3.2582301044719522, 3.750034557846087, -0.047576703248881635], [1.9189908229654637, -2.3173614301519829, 1.1684650245069426, 3.8745298276639311, 3.1953902831017373], [3.781769517598331, -1.5139911213539872, 2.8605970896857045, -2.8450927031930062, 0.96156782163228893]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[-3.5901705755125048, 1.7075753637927349, -4.7557092634374252, 4.1212533328655248, 0.96306044880134856], [2.9214830427408023, -4.4962064128086245, -4.8877952027629048, 0.15147244378581526, -2.4721025160476104], [0.22779155828082764, -0.6585633650288667, 2.0364855891545774, 3.8887946709992463, 3.1382904507912386], [1.7610699992680781, -1.9437316906071569, 3.2812152994738994, 3.1269726369367543, -1.988043315742333]]))
      arg1=Data(numarray.array([[-2.3118184991921584, -3.7443866530986036, 4.7135127230925598, 3.522335534747862, -2.4267571839641331], [4.8784457048853476, -3.6086472321899565, 0.23978200462955002, -0.49485220134710683, 0.48315245587255884], [-4.0440193944888279, 4.3622266326497474, -4.4866906242342219, -1.3325877486969882, -1.9491563723991612], [-4.4413283206355274, 0.31569871137154415, 4.9581048251497783, 4.2296799366357156, 4.5006365681660476]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[-2.7977270233336613, -2.2812632045854131, 3.2930298786878787, -2.3227267353894487, -0.62962436259228927], [-2.0773584338375972, -4.5241495757504815, -0.24616937247498338, -0.090839002061281704, 4.3671976731125319], [0.50075824287307746, -2.8542440895558729, 2.7858917466287281, -0.7256004750614311, 3.190397907348121], [-2.8182541988544174, -0.71715056258925003, -4.8031877943706789, 1.1198257406141892, -3.3790905295930251]]))
      res=arg0*arg1
      ref=Data(numarray.array([[-11.409436765719947, -15.098988207294909, -3.5046255574831604, -10.827179139679007, 11.463344049983563], [7.6923233721031865, -13.066498746568815, 0.78126494599463292, -1.8557128560778606, -0.022986801017017111], [-7.7604361059184122, -10.108855748084288, -5.2425410702009092, -5.1631509803060069, -6.2283153326101113], [-16.796080060625624, -0.47796504603941287, 14.183140233180104, -12.033831524564132, 4.327667300810047]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[10.044317237488698, -3.8954288464769169, -15.660692698852165, -9.572545299559625, -0.60636632121439316], [-6.0689674381511312, 20.341510334994734, 1.2032254778503784, -0.013759605633287049, -10.79616035577876], [0.11406850046602747, 1.8797005922316696, 5.6734283949540805, -2.8217112606934149, 10.012395286854959], [-4.9631429199138068, 1.3939482754414767, -15.760293277135366, 3.5016644490380049, 6.7177783406456335]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_mult_overloaded_taggedData_rank2_expandedData_rank0(self):
      arg0=Data(numarray.array([[-2.9126596308563601, -0.89707763384955452, 4.5082120613612915, -1.2393230671071818, 3.3178366845151981], [2.0948307200398322, 3.0499025616606605, -4.911547629254609, -2.4941582590855482, -0.84881267028263263], [0.87816755289775195, 0.31326461409322803, -1.8415111252484717, -2.941030524170686, -0.42295551080006621], [3.4738338907430215, -1.3487085872429825, 1.7707642172148326, -2.6242494435571997, -0.84142074452068627]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[-2.0523190998243521, 2.5959302263090613, 4.0385872793555055, 1.9355345346640016, -0.43403903120164777], [-1.3301263557820087, -4.1587566338593991, 0.67818714863078178, -4.4435593506505562, -2.6223743900694316], [3.5441807743349614, -0.12414630837105722, 4.0617480276736124, -2.8382540869522197, 0.41721350619951725], [1.6168867022223496, 1.5691003048938175, 1.8899496523294124, 3.0364424970314587, 1.9205323783062065]]))
      arg1=Data(-3.56167986141,self.functionspace)
      arg1.setTaggedValue(1,2.0634111748)
      arg1.expand()
      res=arg0*arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[10.373961150369167, 3.1951033426051971, -16.05680810992575, 4.4140720098991553, -11.817072102692151], [-7.4611163886333287, -10.862776533136023, 17.493360279482602, 8.8833932425597197, 3.0231989938571018], [-3.1277516881014891, -1.1157482673088908, 6.5588730893638605, 10.475009189737074, 1.5064321250898738], [-12.372684210550343, 4.8036682140969269, -6.3068952517632724, 9.3467363944396489, 2.9968713207337236]])+(1.-msk_ref)*numarray.array([[-4.2347781648314697, 5.356471437965217, 8.3332661226241793, 3.9938035880355329, -0.89560098728051263], [-2.7445975864155763, -8.5812249115759229, 1.3993789410899831, -9.1688900200159775, -5.4110366209765859], [7.3131022152713552, -0.25616488000291093, 8.3810562695204727, -5.8564851999368024, 0.86088301096925268], [3.336302089749875, 3.2376991034987856, 3.8997432324244334, 6.2654293800099969, 3.9628479709607731]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_mult_overloaded_taggedData_rank2_expandedData_rank2(self):
      arg0=Data(numarray.array([[-0.432510889502562, -3.9286413420219746, -0.90609391045033494, -3.8533401497430599, -4.1322819374856454], [-1.2664142848659719, 3.5013781829093347, -0.71262537233811951, -3.8954830922783956, -4.2073801398300805], [0.29743667331951507, 3.7485254218334987, -3.5478313636348915, 4.7358837727689593, -1.0538183150667892], [-4.9927776404109681, -1.4633278758802271, 2.7456576050076462, 2.3996666293021507, 2.612379538874964]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[1.281009168630419, -4.1690586786500567, -1.1773646874224584, -4.2175773434378225, 3.2083933146677861], [-3.4537011461050691, -2.1500943260917218, -0.49782721310641875, 0.20482116571381148, 1.1558444078674102], [0.15316421556098803, 4.8215479725374326, 3.2925650010077838, 1.6194799493840399, 3.5172875939087298], [-3.9734020590508203, 1.7436764975179555, 1.0598608291142186, 2.8183940405264396, -1.7104929511639821]]))
      arg1=Data(numarray.array([[1.7129559008620818, 0.28976378581350204, 0.59500680959717034, -4.0286492587036573, -0.5889650477195465], [-2.7508250808729287, -1.6265841746490639, 4.0024996124766297, 0.44911338850647198, -2.2097367719897121], [-3.5479883117402733, 4.7369657146058053, 1.5312386622796144, -1.1662807353178928, 3.1770792959428391], [-3.4924054482773617, -1.2823090957230168, -4.0084129201150294, -3.7150861395951038, 3.4120335167613653]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[4.4449026981058744, -4.2412745942537535, -3.4138473267625482, -3.0723923701101254, -3.0085665553994092], [-2.5016187939487047, 3.4306610796341168, 0.96371580781047683, -3.4872131040059529, 2.0749789448472171], [4.3582389799730095, 4.0653701037552885, 2.6301834186200672, 1.4538136498920124, 1.5028869762693606], [1.7736088551717533, 0.79519134865350871, 0.70249024856680364, -1.0321880343718961, -4.2984858373108237]]))
      arg1.expand()
      res=arg0*arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[-0.74087208036052143, -1.1383779883677247, -0.53913204685247795, 15.523755937795418, 2.4337696285018531], [3.4836841775850691, -5.6952863417818191, -2.8522827766243375, -1.74951361144282, 9.2972026087217454], [-1.0553018404205494, 17.756636403553546, -5.4325765512459512, -5.5233700088850579, -3.3480643504840639], [17.436803833408653, 1.8764386452662569, -11.005729418124737, -8.9149682341693222, 8.913526545142977]])+(1.-msk_ref)*numarray.array([[5.6939611099437126, 17.682122655711609, 4.0193432907817828, 12.958052450327697, -9.6526648230765542], [8.6398436957786213, -7.3762449220650153, -0.47976395482889073, -0.71425505305497816, 2.3983528098442752], [0.66752625459488657, 19.601376981375605, 8.6600498703794386, 2.3544220561409426, 5.2860857166792261], [-7.0472610770902122, 1.3865564656767295, 0.744541897290666, -2.9091126047764519, 7.3525297253983712]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_mult_overloaded_taggedData_rank3_float_rank0(self):
      arg0=Data(numarray.array([[[0.76248462580352427, -2.61244699151736], [3.1990910210972849, -0.52383512550541411]], [[-0.57552094680784549, 2.7901484334242159], [-0.72561892468519673, -2.4613170539297027]], [[4.70888592070086, 2.9610491502632206], [2.7203574270236874, 1.4443899846060528]], [[-2.4090995613493007, -3.6247629976674722], [3.2658057824100091, -2.4081366545829974]], [[-4.9699813734453446, -0.40134235631874304], [-2.906839048169533, -1.1909825011075181]], [[-1.4184972601482748, 1.0770036032835675], [1.2515069277880153, 2.1511546129101191]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[2.1018263866335927, 4.6512402604178842], [-4.1127272467701932, -2.8168171006668929]], [[3.8144795645901048, 4.2833666756170246], [-2.2570115069634653, -2.3148187574455283]], [[2.4209691488200944, 1.9112963310494315], [1.1693314508116091, 1.5899192992251034]], [[-4.7513304426531278, 4.6470162553553784], [-1.766702176145416, 3.5197710015707173]], [[-4.2734476808005075, 3.2102240028594178], [4.200902025341593, 1.8251030313281493]], [[0.81219630382268981, -1.3152532093229494], [-4.4169534160365442, 3.2436769808232384]]]))
      arg1=1.45546582142
      res=arg0*arg1
      ref=Data(numarray.array([[[1.1097703122186526, -3.8023273064366885], [4.6561676408329919, -0.76242412123472558]], [[-0.83765106759266694, 4.0609656815499626], [-1.0561135442580774, -3.5823628476838403]], [[6.853622514566978, 4.3097058337660741], [3.9593872570911768, 2.1022602554019199]], [[-3.5063620719525797, -5.2757186538690952], [4.7532686957081536, -3.504960594065007]], [[-7.2336380221659224, -0.58414008231188985], [-4.2308048829927811, -1.7334343242766184]], [[-2.0645742799300626, 1.5675419341302268], [1.821525558671393, 3.1309320156902549]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[3.0591364683132785, 6.7697212262716606], [-5.9859339405151601, -4.0997810152246208]], [[5.5518446327829745, 6.2342937969891148], [-3.2850031069470509, -3.3691395842542167]], [[3.523637850830728, 2.781826484456428], [1.7019219605729807, 2.3140731988452758]], [[-6.9153990655752038, 6.7635733312736601], [-2.571374634015879, 5.1229063920271383]], [[-6.2198570390507877, 4.6723713152783182], [6.1142693170375031, 2.6563750826763068]], [[1.1821239605012059, -1.914306092688391], [-6.4287247318652279, 4.7210609813295248]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_mult_overloaded_taggedData_rank3_array_rank0(self):
      arg0=Data(numarray.array([[[-2.4147572535821893, -1.6310617928522708], [2.6008714761909415, 0.76990055811865687]], [[-1.8474728471966873, -3.4675471780653524], [-0.51380775891821351, -4.4855556325990307]], [[-3.1412224239525797, -1.8880786853479501], [0.1897244689468085, -3.1254627138310518]], [[1.0886042921189691, -0.99013442888203329], [-4.8722294841911715, 3.2671035013462699]], [[-2.4271709967694663, -3.4638776330234999], [-2.8309970988240307, -1.1943493028960726]], [[4.8521301745144179, -4.4657417642532042], [-4.0210767736695496, 0.81568911261875154]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[2.8363704081552079, -2.1098517028503458], [1.3108209394269199, -3.4663732593811556]], [[-1.0350093454648865, -0.49524497044055149], [-4.1112062140825589, 1.6718569360900561]], [[2.2788590013759258, -1.4287222821291135], [-0.047623733651183997, -1.1789327790981541]], [[-1.7872968012793389, -4.4100746624425637], [1.558207815266246, 1.585818156786889]], [[-3.0960323277986577, -3.7698696297909331], [0.10672132054054284, -2.9736269627325052]], [[1.8682560347025774, -3.7538727917186518], [1.5922694367614501, -3.8258948174236451]]]))
      arg1=numarray.array(1.48876598594)
      res=arg0*arg1
      ref=Data(numarray.array([[[-3.5950084634407076, -2.4282693181685935], [3.8720889875607187, 1.1462017634850807]], [[-2.7504547348584798, -5.1623662933540464], [-0.76493951479069877, -6.6779426538655171]], [[-4.6765450990599522, -2.8109073255287598], [0.28245533606898243, -4.653082578682711]], [[1.6206770422575614, -1.4740784592300169], [-7.2536095317692126, 4.8639525653574536]], [[-3.6134896220561492, -5.1569031995118531], [-4.2146921870306651, -1.778106617485619]], [[7.2236863631815407, -6.6484444406223107], [-5.9864423275019947, 1.2143702059702888]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[4.2226917871948686, -3.141075450586122], [1.951505628279784, -5.1606186031467525]], [[-1.5408867086605689, -0.73730386670091319], [-6.1206239727208995, 2.4890037398126537]], [[3.3926877680070087, -2.127033136991741], [-0.070900594783460391, -1.7551550212338074]], [[-2.6608666845282274, -6.5655691529106397], [2.3198067943979139, 2.3609121317140986]], [[-4.6092676210045296, -5.6124536762697863], [0.15888307199560986, -4.4270346769971871]], [[2.781396037496711, -5.5886381278651465], [2.3705165779060162, -5.6958620699734057]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_mult_overloaded_taggedData_rank3_array_rank3(self):
      arg0=Data(numarray.array([[[-0.77674766797076344, 3.1395526638955182], [-1.6757100339581177, -1.0656381309297744]], [[-1.4916542432649882, 4.2927047911078855], [3.312121839142101, -2.9714931160816374]], [[4.9530751159392103, -2.2232396914812269], [-0.8276727248281972, 0.79212464367262925]], [[-2.9127020275229332, -4.6749976742089778], [-4.2607472336933352, -0.61178104287135682]], [[1.4727593909790393, -2.6469434922952639], [0.10985078327163045, -1.5206767145623044]], [[2.507776623674304, -2.4202599469282804], [0.7334600289726021, -3.2794448937992602]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[2.5537553262014381, 2.1078458674954428], [-4.6600640953318155, 3.0295016455169641]], [[-2.0197907315562302, 2.7327259641309398], [4.1865255659767051, 0.42758680032089735]], [[-1.9657534911546479, 4.5122304062345453], [3.3464726419206627, 3.6550310328470772]], [[2.8060190769965088, -0.64974926276382661], [2.9436535814627476, 0.44386112417297596]], [[-2.6841326947886257, 0.67710956628459584], [0.85021610792530922, -1.9002376291768694]], [[-3.2217311956988315, 2.5331026007496424], [1.7236253350062096, -3.6099119439395233]]]))
      arg1=numarray.array([[[3.01273954622304, -3.8270724884792062], [2.0286959373210811, 1.6531056739665262]], [[3.361691987063093, 3.0469797425074585], [3.9058107923021286, 2.3792262084728675]], [[0.92943152452475175, 2.0123285653045695], [-1.2460123633166384, 4.0458164797685168]], [[-2.530876767999878, 1.7112786787394345], [-2.6435798699628488, -4.6142133794340925]], [[1.9993030619282424, -2.5058867238079676], [2.7336404679238573, 3.8372159158916688]], [[-0.68575745148238632, -2.6017372533562777], [-0.9759887868084407, 3.5775279891465654]]])
      res=arg0*arg1
      ref=Data(numarray.array([[[-2.3401384167320423, -12.015295626126141], [-3.3995061380190044, -1.7616124406350941]], [[-5.0144821170525722, 13.079784539070438], [12.936521224740792, -7.0698543000781404]], [[4.6035441560929922, -4.4738887386865906], [1.0312904479159037, 3.2047909374014876]], [[7.371689893563933, -8.0002238430302697], [11.263625617991595, 2.8228882733011567]], [[2.9444923598679669, 6.6329405560125991], [0.30029254658446208, -5.8351648920443262]], [[-1.7197265063379941, 6.2968804667293945], [-0.71584876384945373, -11.732305896430638]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[7.6937996626247918, -8.0668789294463963], [-9.4538530978554931, 5.0080863594950209]], [[-6.7899143178168817, 8.3265606545311375], [16.351776737840591, 1.0173257217205336]], [[-1.8270332641237175, 9.0800901397016176], [-4.1697462853340399, 14.787584786758048]], [[-7.1016884925349251, -1.1119020598944029], [-7.7817833520989641, -2.0480699377696028]], [[-5.3663947153126035, -1.6967598727159399], [2.3241851591053431, -7.2916220746537341]], [[2.2093261741237318, -6.590467402944018], [-1.6822389996250027, -12.914561017798132]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_mult_overloaded_taggedData_rank3_constData_rank0(self):
      arg0=Data(numarray.array([[[4.4465442088675307, 0.83670680044595258], [-3.1546983801572726, 1.2222109106063384]], [[-2.537479116268071, -1.7483202686716268], [4.6989286951363063, -2.1680630466727955]], [[1.5363254551831673, 4.5928363610908054], [-1.8369963184672242, 2.7668201884761192]], [[-2.6962627532840298, 2.4684359184474136], [3.4029816020744423, 2.0752828776693502]], [[-2.7412790052912763, 3.7189521352540975], [-2.2484075655002633, -4.5193105671126048]], [[2.6532796296651684, -0.64078888455210148], [2.02673142279962, 3.6591904881027428]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[0.71277279202402966, 4.7965406023755506], [3.7140982616334011, 4.2202881047815097]], [[-1.8291884612449891, -1.0366598015352455], [1.0381172691156824, -2.7156687244396238]], [[0.60372925118800236, -1.3553318406897041], [-1.9263612421969931, -1.3362861489839615]], [[-1.3628651579207327, 4.6461148719368595], [1.053828268456483, 1.5423344464108695]], [[4.0502306549851497, 1.9087325138141775], [-0.50201782834221387, -4.5914953991256082]], [[-1.5524968279444931, 3.5681662017365241], [-1.7694767133097624, -0.8026314538912569]]]))
      arg1=Data(-2.46407902591,self.functionspace)
      res=arg0*arg1
      ref=Data(numarray.array([[[-10.956636322845494, -2.0617116778139009], [7.7734261116131309, -3.0116242700616365]], [[6.2525490690770509, 4.3079993046045111], [-11.578531641925082, 5.3422786801537692]], [[-3.785627331086209, -11.317111746793882], [4.5265040990062628, -6.8176635948842748]], [[6.6438044987055473, -6.0824211734455158], [-8.3852155912242203, -5.1136610116921313]], [[6.754728101101616, -9.1637919548373432], [5.5402539238432453, 11.135938379988927]], [[-6.5378906853282777, 1.578954450460152], [-4.9940263900702853, -9.0165345335379428]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[-1.75632848706467, -11.819055095232232], [-9.1518316266541735, -10.399123402283355]], [[4.507264921787665, 2.5544116739654918], [-2.5580029892613876, 6.6916223452074322]], [[-1.4876365851798155, 3.3396447617894931], [4.7467063332207013, 3.2927146723234526]], [[3.3582074507739859, -11.448394207901284], [-2.5967161332131172, -3.8004339603372581]], [[-9.9800884070406504, -4.7032677533591674], [1.2370116014501951, 11.313807510540899]], [[3.8254748715275402, -8.7922434986546527], [4.3601304561001362, 1.9777473310679108]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_mult_overloaded_taggedData_rank3_constData_rank3(self):
      arg0=Data(numarray.array([[[2.7893585951155924, 2.1085470214448945], [-4.5539175359424524, 0.27995692540295902]], [[-2.4762236339419994, -2.0889041240773998], [4.0732602276456262, -3.9857501504059591]], [[-2.7745902026986133, 4.7298916744709079], [2.3729995993936814, -3.9563848110991238]], [[3.4940971271455226, 3.118354656459525], [4.3766274542975143, -4.9988541985563053]], [[-1.6923044753740291, -4.9364483339685865], [-4.4506930394866631, -3.3788124008052991]], [[0.14284408507544022, 2.6348542568976976], [2.3997481779060177, 0.13214347331767318]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[4.9933684130131741, 0.27895653045722746], [2.3250577983599445, -3.4282849894793088]], [[4.7800311528376245, -0.96051829977099512], [2.5732693917958525, 1.7536097106735618]], [[0.58060127657340921, 0.30728498130554449], [3.0417063236357365, -2.6841094110229866]], [[-0.091516061367169499, -2.5354470249141614], [2.1791800317555694, -1.0999495297257624]], [[3.3738596806047791, -0.30158980435745519], [0.41337942738981681, -0.65913517861715398]], [[-0.33628408392834608, 2.5053402472513042], [2.765514614857346, -1.8882474073863365]]]))
      arg1=Data(numarray.array([[[-3.1179387884347385, -1.8764013875142593], [1.7894064035762289, 0.91263684101099418]], [[-2.723701564199775, -1.0794226480476787], [4.4368914931300303, 1.7613443025382116]], [[-3.7503601958977404, -3.1194632319077922], [1.8167344059672725, -3.5529260486435552]], [[-3.0237166573445728, -3.5332517982374654], [-1.9086380179390927, -1.8137643114022008]], [[2.5843090862144011, -3.6480633117922578], [-3.4360123203609616, -2.5089051749185876]], [[-2.8589557877969805, -3.1094911030689087], [3.1747242604608576, -3.3087629902904814]]]),self.functionspace)
      res=arg0*arg1
      ref=Data(numarray.array([[[-8.697049358564735, -3.9564805566782586], [-8.1488092001735062, 0.25549900401890707]], [[6.7444941850762747, 2.2548104211293438], [18.072613653345769, -7.020278318758356]], [[10.405712656128722, -14.754723169418778], [4.3111100175650554, 14.056742653811789]], [[-10.565159685729734, -11.017932197477791], [-8.3533975496282249, 9.0667433432444771]], [[-4.3734378323503984, 18.008476057708815], [15.292636117820949, 8.4771199174595111]], [[-0.4083849237789941, -8.1930558697066314], [7.6185387593949727, -0.43723143392195474]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[-15.56901705987859, -0.52343442080610536], [4.160473313070133, -3.1287791828838056]], [[-13.019378327907491, 1.0368052066370617], [11.417317073990905, 3.0887104727705599]], [[-2.1774639173483292, -0.95856420090011929], [5.525972530997266, 9.5364422438328802]], [[0.27671863917047856, 8.958372760113793], [-4.1592658565423992, 1.9950492013602221]], [[8.7190962281993478, 1.1002187004870372], [-1.4203768054951702, 1.6537076606034651]], [[0.9614213280909506, -7.7903332089883905], [8.7797463404466818, 6.2477631380718632]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_mult_overloaded_taggedData_rank3_taggedData_rank0(self):
      arg0=Data(numarray.array([[[1.4580356589830137, 1.0653556525662458], [3.6213390863458415, -4.3956921229372856]], [[-3.1463084426069043, -0.90157764707758581], [-1.8155307802163834, -2.4976208523762122]], [[-2.8765685759336801, -2.4378549199760413], [4.5410727236526025, -1.0752876556352717]], [[-0.25048955355113378, -0.22826901551050849], [2.4842104514328476, -4.9582603799340017]], [[-4.9352561001269715, -0.45440156882663452], [-4.9236438167444909, 4.0181599751025505]], [[3.8230385014745387, -3.3948827512615676], [3.6720469519384462, 1.4242943023792174]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[-4.50076498192547, 3.9207998918971487], [2.9897332443816271, -0.83343313548420728]], [[-3.3385409476842165, -1.4676148119692556], [-3.2814464049636349, -4.7552555534032672]], [[3.4196841897587777, -1.0077116971221258], [0.25200421027839148, 3.2752528259089111]], [[-4.5833894341492698, 3.9709854906417661], [-1.1772531995423954, -2.526276324439948]], [[-2.2059091798262189, 0.30008240059538505], [-4.2803536506486486, -2.4914837179437486]], [[0.70830102181528609, 0.41006619625322838], [3.8289901270431628, -2.0353786982881528]]]))
      arg1=Data(-1.52462233179,self.functionspace)
      arg1.setTaggedValue(1,3.72872666917)
      res=arg0*arg1
      ref=Data(numarray.array([[[-2.222953726227221, -1.6242650191979695], [-5.5211744420158615, 6.7017703742902226]], [[4.7969321142883414, 1.374565414574431], [2.7679987715645038, 3.8079285278695587]], [[4.3856806897851062, 3.7168080526521883], [-6.9234208847493983, 1.6394075728763831]], [[0.38190196722340453, 0.3480240387023455], [-3.7874827311130881, 7.5594745020618825]], [[7.5244016633414086, 0.69279077943211698], [7.5066973167734403, -6.1261764307338895]], [[-5.8286898746294415, 5.1759140563717461], [-5.5984847862955975, -2.1715109004442859]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[-16.782122419761169, 14.619591121386375], [11.147898082022772, -3.1076443592479444]], [[-12.44850666773824, -5.472334489455168], [-12.235616723632077, -17.731048200682139]], [[12.751067638484379, -3.757481479891422], [0.93965481960756025, 12.212522560233131]], [[-17.090206418293416, 14.806719501833573], [-4.3896554014966256, -9.4197939046259549]], [[-8.2252323885796681, 1.1189252500478499], [-15.960268810642548, -9.290061784893723]], [[2.6410609098413254, 1.5290247620935311], [14.27725760268531, -7.5893708341626862]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_mult_overloaded_taggedData_rank3_taggedData_rank3(self):
      arg0=Data(numarray.array([[[2.5410477509978957, 3.8053067841073851], [3.1275815927937813, 1.6745905259842653]], [[-0.91566860951537787, -3.0077415059303112], [-1.0387053813225466, -2.2824943234788009]], [[4.6687267852111169, 2.2087159892907424], [0.44627231529565314, -2.8201174509778015]], [[-4.4491647484157664, 3.6297477362098309], [3.6507122932272402, -3.8383162534573989]], [[2.7668960483670055, -0.55587702947652229], [2.6324351886163644, -0.97154360019134955]], [[-1.1661738736710592, 1.0813455812691863], [4.9551719297726535, 0.36108617756682637]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[4.2168675208670976, 4.3644019554936708], [2.7741917781550383, 1.1056952153555244]], [[1.4678191035699921, -2.6513183894630252], [-0.9767727141013669, 4.6031926696630485]], [[0.58188328489146368, 0.74161570629487716], [3.8873402035401803, 0.75270788516990983]], [[-0.79917887238526042, -3.2053846926922813], [2.500012433799105, -1.3887180350444206]], [[-1.0184308783661553, -2.9421930689871703], [4.5878095389546569, -3.2926948703522427]], [[-2.6280189289494684, -3.9477802404630733], [-0.16877833229834494, -2.9859670305114925]]]))
      arg1=Data(numarray.array([[[-1.2886118557711801, 4.3294142581282884], [-3.4504690023586528, -4.8443103246817723]], [[-2.2125791540446125, -3.8649796207824014], [1.5874441390926801, -0.82503058982222655]], [[2.8929815907605603, 3.9405160462378959], [-1.9902829546711995, -1.2997934809096225]], [[-1.4622048432508539, 0.94152376138871485], [1.6594498255096308, -3.9210339864488564]], [[-0.35062747764988167, -3.6330382123190974], [-3.5312304666026817, 2.300825768574601]], [[-4.5192333155257387, 1.024166950225335], [-0.27206546472983728, 1.8047837780263229]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[-2.6783833060778317, -0.32925624679365484], [2.0256747186322261, 2.4715070735394935]], [[4.6608626517072533, -2.3408239052116619], [-0.18444235050544133, -3.7783636926410091]], [[-1.952570740880831, 3.5980235670013112], [-4.4579397914251278, 0.74750866406088257]], [[-0.087958351089008957, 3.5888756297281983], [-0.58533989387224317, -4.2946707334687515]], [[-0.35680444547721013, -2.5809150333435249], [-0.84199234392692368, -0.30348524453432546]], [[-1.2412981919500679, -0.38636461292878099], [1.0811616730899711, 4.6899421088979079]]]))
      res=arg0*arg1
      ref=Data(numarray.array([[[-3.2744242580165821, 16.474749447666817], [-10.791623338282445, -8.1122361746398557]], [[2.0259892774267412, 11.624859625002022], [-1.648886769824504, 1.883127637965599]], [[13.506540641906494, 8.7034807973823796], [-0.88820818227458964, 3.6655702781804083]], [[6.5055902435545008, 3.4174937414884528], [6.0581738779818082, 15.050168480545503]], [[-0.97014978235834815, 2.0195224894386348], [-9.2957353393990836, -2.2353525506139968]], [[5.2702118215899549, 1.1074784061081047], [-1.3481311538898415, 0.65168247574214055]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[-11.294387571832246, -1.4370066073647338], [5.619610149646042, 2.732733545929952]], [[6.841303239291797, 6.2062694663823326], [0.18015825529843554, -17.392536053286101]], [[-1.136168276686697, 2.6683507889072908], [-17.329528576168425, 0.56265566567145153]], [[0.070294455840181028, -11.503727007507138], [-1.4633570126792566, 5.9640867021455053]], [[0.36338066481230408, 7.5935503227481105], [-3.8629005071947309, 0.9992843079057695]], [[3.2621551449155288, 1.5252825845344054], [-0.18247666412901373, -14.004012512176693]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_mult_overloaded_taggedData_rank3_expandedData_rank0(self):
      arg0=Data(numarray.array([[[3.8697408970862952, -4.8053338721003103], [2.1772928592715051, 3.8272657629145854]], [[-2.2845843638041896, 2.5730304474204946], [-1.9753106137548859, -4.4031945875414724]], [[3.1321909001312953, 3.5057024031705435], [-1.1672699647844542, -3.6963244429218847]], [[-3.0917517196112532, 0.31952659186935595], [1.9763504099886937, 4.9616396157409213]], [[4.2608275735591068, 0.12972857661281001], [0.70614702462835233, 2.5627308331629788]], [[-0.65591541831614464, -0.34996100229214377], [-3.1412315098917079, 3.0961481827578847]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[3.8578402583297642, 0.93065938504718737], [-1.977941549837424, 2.0625071848470347]], [[-1.113289505445322, -1.5093307580487325], [-0.94637963084638876, 0.6968134728502271]], [[1.6280936181227323, -1.1893212585697821], [-4.9110032789510152, -0.92530922042235364]], [[-3.8512089591668506, 3.9957285681921508], [4.0114299538800715, 3.7231629288251149]], [[-2.7679085313282159, 2.2175721828874035], [4.6371746892951613, 3.6324400491735513]], [[-0.38155118373803809, 4.1773249318472967], [-2.0088437526151193, 4.6631958621472407]]]))
      arg1=Data(-3.18241584996,self.functionspace)
      arg1.setTaggedValue(1,1.17514354106)
      arg1.expand()
      res=arg0*arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[[-12.315124766139203, 15.292570678938262], [-6.9290513053578753, -12.17995122592183]], [[7.2704974899491157, -8.1884528783095281], [6.286259805814578, 14.012796245865253]], [[-9.9679339656891166, -11.156602893104891], [3.7147384371163241, 11.763241493761923]], [[9.8392396766426025, -1.0168664904498406], [-6.2895688698297798, -15.790000554940466]], [[-13.559725204055805, -0.41285027840580418], [-2.2472534835817983, -8.1556752226478988]], [[2.0873956234847046, 1.1137214405636133], [9.9967049454839874, -9.8532310506442222]]])+(1.-msk_ref)*numarray.array([[[4.5335160620225654, 1.0936583652663043], [-2.3243652368882701, 2.4237419966655636]], [[-1.3082749716554238, -1.7736802916461574], [-1.1121319105811323, 0.81885585194445343]], [[1.9132436995800879, -1.3976231952552023], [-5.7711337833902601, -1.0873711538638162]], [[-4.5257233336424223, 4.6955546187452111], [4.7140060007220841, 4.3752508681277895]], [[-3.2526898328388834, 2.6059656275573895], [5.4493458848982526, 4.268638462078771]], [[-0.44837740915405727, 4.9089564125747787], [-2.360679760887046, 5.4799244981062136]]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_mult_overloaded_taggedData_rank3_expandedData_rank3(self):
      arg0=Data(numarray.array([[[4.3762097631213877, 2.7100801508243864], [3.1468351023414129, 1.5484712033675994]], [[3.2135735909561998, 2.4827859713995171], [2.676779431271493, -3.8859555659991374]], [[-0.38708627526584127, 1.0891525939854239], [-2.9927490386991753, 0.44675788460816523]], [[-3.7591188926083383, -1.7724167835522033], [0.8170588874364979, -1.8122161363158718]], [[-3.088521550507072, 2.3046448724026813], [-2.5726102343251647, -4.822916131150274]], [[3.0127870162417345, -3.6427897326588141], [-1.4584044659162245, 3.1581587978832619]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[-1.2430281999017909, 3.5192172841388185], [1.3819843311457438, -2.4146876440467144]], [[-3.3733992028446957, -1.6211500000564616], [3.1707619299824845, 0.08677850366133022]], [[2.6837934014329798, 3.788955899243847], [0.22068229173587994, 3.6230551488710621]], [[-1.8268234558994436, -2.9291431101714114], [-4.5913390620033265, -1.6907999892980929]], [[-3.138538364156449, 2.9231170845909755], [-2.4635957752223723, 1.8766900726830222]], [[-0.28030211385491999, 1.7052331508825747], [4.826559004542764, -0.68017814338500937]]]))
      arg1=Data(numarray.array([[[-0.34568104393225241, -3.3213768552226974], [-1.3121481239664678, -1.0158757168101031]], [[4.8973834621601409, 1.1918648435092019], [-0.56052748845134648, -2.7193937573383731]], [[2.1348618510135351, -2.368537102863264], [-0.32200343518165564, 1.9593594805260404]], [[1.0415423572769704, -1.9343624418333638], [2.0819527622370355, 2.5281538562657238]], [[3.231649346397802, -0.16995119428506822], [3.0526903719501668, -3.1733828712486281]], [[-1.7940555639510078, -0.35633367087776424], [-2.5340879519010429, 3.0944206779626064]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[4.1033773699865996, -1.9928239161420249], [4.7026027898576714, 2.5514269773740246]], [[-3.2505300392423653, -4.1012463245233839], [1.2311225025544994, 0.96002001392641034]], [[-0.25580650663746596, 3.8255024039590353], [-0.21668638765335757, -2.3206600820232435]], [[-4.1864102757820953, 2.5067457914789202], [-2.5405156592675295, 3.3052614593102643]], [[1.3485681596421113, -2.9475674377526637], [2.5854994769278541, -1.6070320634660726]], [[1.0446740057540973, 1.71227009750781], [1.2134761492715009, -2.4229043304269346]]]))
      arg1.expand()
      res=arg0*arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[[-1.5127727593823164, -9.0011974887465538], [-4.1291137759691132, -1.5730542936808629]], [[15.73810215878347, 2.9591453132689272], [-1.5004084517488336, 10.567443307472358]], [[-0.82637572211596866, -2.5796983295342448], [0.96367547109773211, 0.87535929670676726]], [[-3.9152815526916833, 3.4284964573784769], [1.701078007608736, -4.5815612134139414]], [[-9.9810186500317055, -0.39167714846779433], [-7.8533824931048928, 15.304959440060982]], [[-5.405107309487839, 1.2980486376741447], [3.6957251860769795, 9.7726718884594934]]])+(1.-msk_ref)*numarray.array([[[-5.1006137857321878, -7.0131803699322219], [6.4989233711855627, -6.1608991969525135]], [[10.965335443202932, 6.6487354792326467], [3.9035963622445706, 0.083309100293463292]], [[-0.68653181455725287, 14.494659901052104], [-0.047818848615312229, -8.4078794589538539]], [[7.6478324878171904, -7.3426171640616609], [11.664368784026141, -5.5885360400291937]], [[-4.2325329057166252, -8.616084735278859], [-6.3696255881991144, -3.0159011199900911]], [[-0.2928243321021603, 2.919819733535256], [5.8569142350642425, 1.6480065690692918]]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_mult_overloaded_taggedData_rank4_float_rank0(self):
      arg0=Data(numarray.array([[[[-3.2341974107164209, 0.93780197807871257, 1.7077381538183625, 1.4493464904395097], [-3.972617771386032, 1.6295339439893572, -3.4966430212295885, -3.1279077034203349], [4.0053089439897942, 4.7693648508684774, 1.4846677283679952, 1.2690848865590754]], [[1.6912330616515394, -4.7388715592725443, -4.2251859067161686, -1.9867810765662339], [-1.9030317769395522, -3.4752436720452371, -4.0216899042024954, 3.3980707899209079], [-1.7144530379269152, -0.89200685301942695, 1.0294275117662286, 0.6091674901332631]]], [[[-3.1539068119314297, 0.19058493785494957, 2.4208184992420847, -0.93807701958738932], [1.9509952691555057, 2.3694109365381681, -1.4820427931011757, 2.7477014046017683], [3.5376979857809072, -4.3051143988116083, -1.8789943844945212, 0.4419652270909582]], [[4.3805145593848938, 1.9101809137669559, -4.0027648118620558, 4.1661386493215389], [2.5027620441388789, -0.013720494217102086, 1.4418222639591773, -2.7486304922902995], [-0.90516065775734234, 0.99159917680981646, 3.8225318629420606, -3.0078591315229386]]], [[[3.6079097445309909, 0.64773618916777309, 4.4102474623419603, -0.65436362533121617], [1.6205003523752541, 1.2442664462267068, 3.4427049991229293, -1.3275327079138597], [-2.4825104391274841, 1.9621775273939281, 2.2066997006557063, 4.5421269296449136]], [[-4.5841071145211618, 4.0814910577635164, -2.0627381182117732, 1.1417978645408366], [4.433048026889999, 2.7525715060076914, 3.7567382573655266, -4.4645240744983585], [1.0404098746374171, -3.074392919400263, 4.0526146639635776, 4.1815195731703767]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[2.2234410583838855, 3.0929347508489862, -4.7055927648185385, 2.6762864668267312], [0.70010582268701071, 1.1765612860241026, -3.6414125658819962, 0.83756864884061422], [-0.90810948833872995, 3.4482059418890163, -3.8890311238884712, 0.68854381475754955]], [[-1.2894242887335308, -4.9594780988993534, 3.3019933482835668, -4.1415526349345892], [2.3202750764744007, 0.038817654923657408, -0.64112892483139561, 3.3591147300972395], [-4.9986644696024136, -1.9922466341289793, 1.050012029575579, 0.31136600387161906]]], [[[2.4831565573680239, -1.8804232073409946, -0.22721242531595287, -3.8542841180245722], [2.6209481842175872, 4.8863888715691992, -0.45908976757306963, 3.3796928872070833], [2.7173739648152226, -3.1848916435627306, 2.2785278807704259, 3.9600013137183012]], [[3.2254925535023595, 0.19258555531159161, -1.2127033019679265, -4.486044660361264], [-0.80149303878397493, 2.558522998386076, -2.0358655873820855, 1.352790869147551], [-1.779075675323071, -0.6010355125997151, 3.8093443006725316, 4.5617327434756891]]], [[[-0.67858685034294552, 0.56366724068360163, -2.4537445934197755, 1.0247962497724741], [-2.0086262616112895, 2.3032169021098401, 3.6404681910409025, 3.273259900645165], [4.2056373382871346, 1.1053078735248665, -0.14843844444321519, 4.6555506050099691]], [[1.7890639445841208, -1.9311880581164989, 1.9186344262777011, -2.2864485710808569], [-1.1999156526652111, -2.8277130302517319, 1.5265666099152249, 0.7686070589460039], [-1.1568444347852722, 4.7735477909274557, -0.40303754999242081, 2.0959547538460521]]]]))
      arg1=1.88728331722
      res=arg0*arg1
      ref=Data(numarray.array([[[[-6.1038468178548051, 1.7698980280878089, 3.2229857278886498, 2.7353274522839297], [-7.4974552456452388, 3.0753922273416676, -6.5991560402550258, -5.9032480264822587], [7.5591527503208154, 9.0011427167995617, 2.8019886353700674, 2.3951227345443091]], [[3.1918359427929568, -8.9435932362833039, -7.9741228739162295, -3.7496187807801888], [-3.5915601247655418, -6.5587694055399446, -7.5900682632503598, 6.413122312564588], [-3.2356586166438155, -1.6834696525532233, 1.9428213692480218, 1.1496716415238448]]], [[[-5.9523157102379489, 0.35968777372785721, 4.5687703676473106, -1.7704171093386789], [3.6820808234605233, 4.4717497321770523, -2.7970346388322054, 5.1856910216184184], [6.676638389941961, -8.1249705836188397, -3.5461947550144637, 0.83411359988197042]], [[8.267272048784827, 3.6050525714324535, -7.5543512521993206, 7.8626839701075015], [4.7234210528852429, -0.025894459840007877, 2.7211271051725823, -5.1874444733132217], [-1.7082946087931157, 1.8714285837664162, 7.2142006144884929, -5.6766823594837126]]], [[[6.8091478709039635, 1.2224617037787167, 8.3233864605083436, -1.2349695534859511], [3.0583432805937543, 2.3482833061455057, 6.4973597109690582, -2.505430332715294], [-4.685200536600223, 3.7031849128827909, 4.1646675311711503, 8.5722803790336215]], [[-8.6515088816045527, 7.7029299827168378, -3.8929712383035189, 2.1548960613901378], [8.366417585603152, 5.1948822827550076, 7.0900294403038711, -8.4258218051465636], [1.9635481994785184, -5.8022504673763207, 7.6484320464366169, 7.8917121310909089]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[4.1962632163192248, 5.8372441565402786, -8.8807867226929247, 5.0509108009549868], [1.321298039448719, 2.2205044868051389, -6.8723771867196586, 1.5807293379869054], [-1.7138598875546891, 6.5077415484804995, -7.3397035602803919, 1.299477254769833]], [[-2.4335089489504722, -9.3599402781915408, 6.2317969598008522, -7.8162831953179772], [4.3790164432012411, 0.073259912551184442, -1.209991924024181, 6.3396011907545908], [-9.4338960618819883, -3.7599338363876869, 1.9816701863027135, 0.58763586465767226]]], [[[4.6864199447765484, -3.5488913485358817, -0.42881421976484729, -7.2741261157899642], [4.9464717833829113, 9.2220001987825331, -0.86643245944898972, 6.3784380033672177], [5.1284545504551495, -6.0107928660627037, 4.3002276572082359, 7.473644415566465]], [[6.0874182860558879, 0.36346350567792524, -2.2887147105467687, -8.4664372478225154], [-1.5126444409683244, 4.82865777158848, -3.8422551591770562, 2.5530996390353984], [-3.357619842116609, -1.1343242959887376, 7.1893119482223549, 8.6092821043970478]]], [[[-1.2806856419399559, 1.063799779807959, -4.6309112358902196, 1.9340808657495145], [-3.790846834077398, 4.3468228353007046, 6.8705948838368567, 6.1775688034265617], [7.9372291868444975, 2.0860291101000366, -0.28014539983239128, 8.7863429893283449]], [[3.3764705360609315, -3.6446990045058669, 3.6210067445659293, -4.3151762438920116], [-2.2645807933512403, -5.3366956278915829, 2.8810636955245066, 1.4505792798495503], [-2.1832932023939029, 9.0090371097898192, -0.76064604431561023, 3.9556604405904086]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_mult_overloaded_taggedData_rank4_array_rank0(self):
      arg0=Data(numarray.array([[[[-4.8561292005119938, -4.3595787902732983, -1.4103838568401663, 1.7452764230517017], [4.8377543811877644, 0.12603345651094422, 1.6059672603734203, 0.92851290069023928], [3.1649206464417663, 0.31104741441816408, 1.9140963775420605, -2.2072300390565989]], [[3.0282646749825286, 1.7972243912144537, 4.4975276229504644, 2.4822580461388082], [4.8558451547277155, -3.6203449629122666, 0.72446977284522962, 0.34900512809611861], [2.0551421906558804, 4.6156308491837486, 2.4780956708067237, 4.1052108204526139]]], [[[-3.6786932095584879, -2.5846510967257452, -4.6487659609257106, 3.2188666617073167], [-1.636269537760481, -1.2038398872809575, -1.7858690009743858, 3.4461977643991641], [-1.4008596408761154, 0.85283758139632493, 4.9415256225965454, -3.6869543487648326]], [[-4.1536676619449162, 3.5171271570894174, 2.7601980244345725, 0.77532838729432729], [3.4312516679637088, -0.17405370445762713, -4.8793998193008559, 3.8815991899182425], [4.3006111593673015, -0.29423695896213253, -1.7826382493752178, -4.2807684991359736]]], [[[-2.661367218603802, -3.8965731798823047, -0.28603172439392477, -2.1283044002218499], [-1.9401929130867734, 2.0324175875989994, -2.3953807191234997, -2.5802828313279393], [-2.8594311785817816, 1.8423332205591585, -0.69835011511629475, -2.4012552542534471]], [[2.8756595022003939, 3.4674119887485837, -2.4521920648562356, -4.8146000628624286], [2.9702344450612586, 4.0900319108686851, -2.9721169262088032, 2.7756539246606415], [2.2580026398258326, 3.2091765648128163, -2.1975917291248734, -2.033380002084344]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[1.6826342023528653, -1.8498388729921311, 2.1562740796862068, -1.4250475090270576], [-1.5283203774640319, 3.6976122540499503, 0.2380304137041378, 0.1422683041491517], [2.3745836515102745, 1.4257671325074615, -4.6928680610864912, -2.4038945238545759]], [[-0.34908673666052081, 1.7712049525987084, 0.81255670033107208, 4.7102053835265405], [-4.8033633829497155, -0.033035101412815848, 4.4758194100620194, 1.1465738079740619], [-4.5541711562415879, 3.9573551446937074, -2.6701483575526286, -1.6862523313311941]]], [[[1.1249162067710383, -1.948031901727183, 3.8534723772534836, 0.48740203182118691], [-4.2058375352196267, -1.2577066457082786, 3.0165916593512581, 3.21966638761063], [-0.81952966506145586, -3.5838646003579431, 3.6779433801419881, -1.2748827156791731]], [[-3.6063366832070711, 2.5953957283447711, -0.2718101036865308, 0.92358748367678967], [1.5469509503535761, 4.4035384193822669, -0.055211249417722819, 3.204452026293465], [-1.9289377267588357, -3.6474249697866989, -3.2998753018043834, 4.2920380548276817]]], [[[2.0035569946542031, -0.30331723784595965, -4.5928712531265736, 0.25085556448591539], [3.2405404942637297, -4.8691364758908708, 1.4244263240469781, -0.6964695433114807], [-4.19002169670126, 4.2439355037115227, -1.2136140676288187, -0.47029208179368354]], [[1.4583481973446926, -4.9654514250131365, -3.9010103888193925, -3.6095365930564292], [-1.2066644044942665, 4.3108063932952021, -3.5512457929841421, 2.8171138092717918], [-2.1606682853142178, -0.23547955095025053, 1.5016019773584075, 2.3403869790096445]]]]))
      arg1=numarray.array(-0.883141413611)
      res=arg0*arg1
      ref=Data(numarray.array([[[[4.2886488068184763, 3.8501245755910856, 1.2455683930641501, -1.5413258873960665], [-4.2724212429056276, -0.11130536494537288, -1.4182961965393852, -0.82000819567175398], [-2.7950724936656512, -0.27469885326934618, -1.6904177806504495, 1.949296256857407]], [[-2.674385945852737, -1.5872032894335455, -3.9719529026876041, -2.1921848798146431], [-4.2883979542230186, 3.197276568306294, -0.63980925930907451, -0.30822088218434168], [-1.8149811794277204, -4.0762547528553021, -2.1885089137798857, -3.6254816871462516]]], [[[3.2488063213311689, 2.2826124232539469, 4.1055177422792619, -2.8427144538459572], [1.4450573926266308, 1.063160859814775, 1.5771748740448259, -3.0434799652350137], [1.2371571635141205, -0.75317618721505242, -4.364065923735561, 3.2561020754878989]], [[3.6682759306408945, -3.106120649362063, -2.4376451851458127, -0.68472460796795431], [-3.0302804485010371, 0.15371403459896366, 4.3092000539912778, -3.4280009956562361], [-3.7980478186754643, 0.25985284387445945, 1.5743216635105102, 3.7805239436689635]]], [[[2.3503636075760981, 3.4412251463204968, 0.25260646141888149, 1.8795937566067249], [1.7134647119417605, -1.7949121413603146, 2.1154599144235866, 2.2787546271755001], [2.5252820931764703, -1.6270407647473715, 0.61674190785930394, 2.1206479596825565]], [[-2.5396139978375509, -3.0622151253156238, 2.1656323666031456, 4.2519727054885879], [-2.6231370465678872, -3.6120765634792251, 2.6247995436296261, -2.451294930720096], [-1.994135643273462, -2.8341567279765192, 1.9407842661994807, 1.7957620894493818]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[-1.4860039480563554, 1.6336693172471008, -1.9042949388671273, 1.2585184715851834], [1.3497230186042897, -3.2655145130275312, -0.21021451604111571, -0.12564303123834084], [-2.0970931627326763, -1.2591540008829349, 4.1444661333584731, 2.1229788079689982]], [[0.30829295408727064, -1.5642244456330681, -0.71760247296958302, -4.159777440806411], [4.2420491281061787, 0.029174666160501416, -3.9527814808703314, -1.0125868135837159], [4.0219771527502566, -3.4949042166461015, 2.3581185950404806, 1.4891992675969039]]], [[[-0.99346008904185146, 1.7203876474509334, -3.403161042559105, -0.4304449193795028], [3.714349306272636, 1.110732824998929, -2.6640770223270316, -2.8434207249107106], [0.72376058689863476, 3.1650592493510219, -3.2481441159203142, 1.1259017237133087]], [[3.1849052763651873, -2.2921014524107042, 0.24004675920351218, -0.81565835592787184], [-1.3661764490823471, -3.8889471445842014, 0.048759340858004728, -2.829984292349879], [1.7035247907776487, 3.2211920438579793, 2.9142565387759962, -3.7904765550133082]]], [[[-1.7694241565093918, 0.26787201420390588, 4.0561548110201509, -0.22154093783231074], [-2.8618555129681988, 4.3001360703838074, -1.257969877403762, 0.61508109701720315], [3.7003816842860804, -3.7479952000222814, 1.0717928432640755, 0.41533441392539755]], [[-1.2879276885402433, 4.3851957907035297, 3.4451438292936847, 3.1877312492729777], [1.0656553079393059, -3.8070516519786461, 3.136252229696614, -2.4879098718237418], [1.9081756438371471, 0.2079617435027197, -1.3261268929655807, -2.0668926650396728]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_mult_overloaded_taggedData_rank4_array_rank4(self):
      arg0=Data(numarray.array([[[[2.6461119532446489, 0.22559070380341417, -4.9484043536929381, -2.6781286175066974], [-4.820136743831732, -3.1337856385672169, 2.2076629203901135, 1.8501525278458777], [-3.410993334444842, 4.7130428090814984, -1.3285730962446807, 4.8001978721162679]], [[1.1106792380837742, -0.08683101879754318, 4.2993041731027795, -0.97098278301736674], [1.6538600595738533, -4.5705410509163693, -0.97702206527607238, -0.96793004347303757], [4.0882382696555535, -1.8436534712139876, -2.1095080713283529, 0.23534776182672612]]], [[[-3.7515424457610869, -3.1403656523084669, -4.7238827602131881, -3.4686001677521903], [3.6494851384004789, -4.1307608554866064, -1.9438895348482967, 1.7779968426216497], [-2.3630545555517477, -2.9051650829861817, 0.14027827962982542, -1.2106611688383762]], [[3.5131233259312467, -1.5285645423250713, -4.9408046013514468, 3.4824085483126748], [2.727508616235168, 3.223607301831672, 0.82918924260005777, -1.9526383943073577], [2.3342295203995214, -2.3173218287905284, 2.9955913172872792, 4.2894871902126912]]], [[[3.5156109675119058, -2.6915300848544845, -0.28602229565636872, 0.75065192256549818], [-0.86097195193057363, 2.5028094191776065, 1.1600986993560056, -4.0589017458804353], [2.9062860872154079, -3.6621292703013939, -1.8250955980482422, 2.3547360009491856]], [[-3.5948879421872415, -0.39679318966534005, -3.0912589755059638, -0.38734776886844902], [-3.6549421301171137, 1.504105423365977, 3.4802638873847922, 2.5502228513808891], [-3.5273129477640062, -1.8849288769474715, -2.5281221484772844, 2.7578892353455995]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[1.5887942270052378, -1.1172922748223888, -4.7517589101808824, -1.2937074459601918], [4.7269364212327822, 0.237483579483591, 3.2461991260272356, -1.2089316931811944], [-1.4337679003099479, -1.1753180125527631, -2.4416883298927363, -2.1103928108653056]], [[-1.4677251204301189, -3.5123594187894316, -4.2491465526857395, 3.1502870832100065], [-2.3888776282646806, -0.76892178060355576, 1.9072179363376742, 4.4323580216035481], [0.67908810608225423, 4.8131383111738835, 1.3891511264033216, 2.7961468421656743]]], [[[3.9145681995739015, -3.8217169470157475, 2.8979805244847956, 3.9379496313909073], [3.0856529058529247, 3.8630686161869967, 4.7374715719151048, -3.7452261694538191], [-1.0416633328109959, -2.7055727166596801, 0.4003025868412653, 0.1025154170222109]], [[-1.0449858139905741, -4.1829474171215075, 4.9652810391868059, 1.1035251913821629], [4.7053032033729707, 2.3342786358693415, -3.1983751827088822, 0.60580442426515013], [-0.83651002108329031, -0.2816219242751874, -2.3122625482090009, 0.13359483810338357]]], [[[0.46371029108040673, -2.1841384117787577, -4.7678226403738, 3.4872257113507708], [-2.8803545909883876, -0.72529341999610963, -2.8627402045563368, 3.5527656730006729], [1.2644419432402598, -2.5462611727666618, 0.37951379212905678, -0.96954920968481684]], [[0.065811399428589823, 4.7794620308007225, -2.6155003868713123, 4.1486007342642921], [-0.72421890173771875, -3.2517351185873911, -0.38907785980493159, -1.6416439190974863], [-1.8517089252305086, -0.30829536213708852, -3.6479248597036951, 2.6791158617615114]]]]))
      arg1=numarray.array([[[[3.0947426059007004, -0.62963106638353228, 1.8070998712512401, 0.49770783715437883], [-0.69857114043314628, -0.5828954601993992, 4.6873608598855245, -4.158044633466675], [3.4369080081116401, 2.1665243124351097, -4.949432747713062, -3.9857930582170518]], [[4.1738198755527236, -3.6010400071781392, 2.7019468950864853, -3.8348989053095806], [-0.32995867161382275, -3.3093398026519152, 1.4660415030436136, -1.8482535523774377], [2.2116177703061588, 1.064358033320449, 3.2561056943092428, -3.285337216625166]]], [[[0.60263745933412771, 1.1558966604096668, -0.69242560876881676, 4.5381031353742181], [-4.4505611451097007, 1.2854105381787706, 1.0389134789170997, -4.6559230928866624], [-4.3779676417155731, -3.8119080597161634, -2.6322251001424846, -0.28589651872469446]], [[-2.2832726444889326, -0.0047630636667204129, 0.47027402864493606, -4.4000828427169836], [-3.2048421279117068, 2.1070253970837722, -0.84990970023966206, -3.4603987514268653], [0.24061750039886576, 0.36872834202498872, 2.5089703673542747, -3.4385546772309752]]], [[[-2.7990768313873824, -4.4051488829144114, -4.9968463127276586, -0.85375282972454691], [2.232580746535997, -2.2133309253780196, 4.3024963355729522, 0.55974059661808351], [-2.732236456653625, -2.7223687656548345, 0.073092799774507888, 3.6269057298694065]], [[0.75324638884770945, 0.22371504906054884, -1.7345791360365945, -0.33277127028957842], [-4.0457960383873015, 1.6450687999955012, 1.7779264557138656, 3.4173667712967255], [-0.015096555922122334, -4.7310669153990537, 4.5182248772685334, 0.52008446832135657]]]])
      res=arg0*arg1
      ref=Data(numarray.array([[[[8.1890354016893365, -0.14203891540195523, -8.9422608704575843, -1.3329256018405051], [3.3672084221822454, 1.8266694219589059, 10.348112764857191, -7.6930167895043544], [-11.723270306768903, 10.210921831422532, 6.5756831902839599, -19.132595356749285]], [[4.6357750792778125, 0.31268197255399005, 11.616491561547424, 3.7236208116677498], [-0.54570546829214639, 15.125473419452055, -1.4323548970841087, 1.7889801413018893], [9.0416204064159231, -1.9623073827457389, -6.868781243243558, -0.77319676077877886]]], [[[-2.2608200080976011, -3.6299381699685815, 3.2709373959931352, -15.740865296635754], [-16.242256756620471, -5.309723534338838, -2.0195330392797866, -8.2782165586417111], [10.345376379814127, 11.074222194641003, -0.36924400864643264, 0.34612381352606131]], [[-8.0214183868147924, 0.0072806502337856641, -2.3235320846249823, -15.322886104761558], [-8.7412345175526305, 6.7922224551840262, -0.70473598062016751, 6.7569074616493401], [0.56165647255577611, -0.85446223586824632, 7.5158498477775408, -14.749636240828202]]], [[[-9.8404652073339545, 11.856590746627264, 1.4292094534084263, -0.64087120302846556], [-1.9221894031877147, -5.5395454877931956, 4.9913204028821623, -2.2719320848532956], [-7.940660800955154, 9.9696663412588453, -0.13340134711747589, 8.5404054941723739]], [[-2.7078363607647131, -0.088768607892873205, 5.3620333229985029, 0.12889820909018779], [14.787150390562664, 2.4743569038833928, 6.1876532382470035, 8.7150468317106373], [0.053250277170745493, 8.9177246476064767, -11.42262438402364, 1.4343353566539088]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[4.9169091863221785, 0.70348192645850327, -8.5869029148048046, -0.64388833483936248], [-3.3021013665355596, -0.13842810035288838, 15.216106726734662, 5.0267919390598461], [-4.9277283783486716, -2.5463550490384748, 12.084972179679923, 8.411589015658107]], [[-6.1260202794992455, 12.648146786649699, -11.480968334796676, -12.081032486812965], [0.78823088887019355, 2.5446234536773304, 2.7960606500202227, -8.1921214588373896], [1.5018833230150674, 5.1229024269803416, 4.5232228929379543, -9.186285283715824]]], [[[2.3590654341813866, -4.4175098560865296, -2.0066359288665594, 17.870821569160821], [-13.732886930083868, 4.9656291089544462, 4.9218230720491825, 17.437485010443492], [4.5603683646081397, 10.31339444478319, -1.0536865167355451, -0.029308800842260379]], [[2.3859875229636782, 0.019923644862293449, 2.3350427176526938, -4.8556022611066307], [-15.079753930767602, 4.9183843696467653, 2.7183300927900804, -2.0963248733359965], [-0.20127895033166382, -0.10384198521587677, -5.8013982149994687, -0.45937315541430451]]], [[[-1.2979607322390656, 9.621454884777652, 23.82407698029127, -2.9772288189539164], [-6.4306242030372411, 1.6053143564505779, -12.316929239801002, 1.9886271774496436], [-3.4547543746429916, 6.9318618859396084, 0.027739725619753356, -3.5164635839962171]], [[0.049572198964599495, 1.069237582703614, 4.5367924013626197, -1.3805351362654064], [2.9300419635756647, -5.3493279894377883, -0.69175182027971838, -5.6100993794250797], [0.027954427341235415, 1.4585659879777495, -16.482144851519561, 1.3933665485355486]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_mult_overloaded_taggedData_rank4_constData_rank0(self):
      arg0=Data(numarray.array([[[[4.5177371944796931, -2.2410763163473746, -0.30992088050738431, -0.18030927766947613], [-0.91174097745805049, -3.0360052312589438, -1.1783195024883075, 3.1039955075108523], [-4.9438765581376574, -1.9927596862215102, -3.1651398911569606, -0.8032332826344879]], [[3.9910692893496567, -3.4540695057299997, 4.8208961780539585, -3.699441439199922], [2.2569486738504798, -3.5758741715133358, -2.2843335380417118, 0.81165793193975233], [0.37694003781946872, 2.1721761058446463, 1.3338782970011875, 2.8160246780504927]]], [[[1.7151110553063633, -3.6417034384551608, 0.69413884554393679, -1.5261099919457477], [-2.4011254764335233, 2.9111705034920643, -1.5207886001836468, -4.105960037819135], [-2.2902293827952622, 1.2409478712720299, 1.8466597172068617, 3.3173751187740201]], [[-1.2249349174886914, -0.81740933683739225, -4.8170220142698987, 0.82433272737434304], [-3.2809425667933811, 0.39461341002575168, 2.9749940807771598, -3.8956058367160606], [-3.9257638440225162, 4.4322308952610427, -4.6824429508825283, -1.9576169999392379]]], [[[1.3761079674639518, 3.2889589864869482, -4.3856805554638632, -4.5515791386954199], [3.438131921926848, -2.4699179327777046, 0.52304752684814204, -4.9909718094514837], [3.3745670524132265, 2.7170492612934272, -4.1906578294566508, 4.3211577779096757]], [[3.8890215302696092, 4.3072287350467793, 0.37169360573640287, -0.16965184871640204], [4.4264860608830947, -0.3480129511035388, -1.6831883790336164, -1.6713067014802241], [-0.58317487278661773, 1.3864624149581504, -2.7714498603992741, -4.2933511225254062]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[-0.53121885854002482, 1.7672141733097071, 1.1403941988171749, -1.0680570015355348], [-0.67692111787828857, 4.007801749719345, -1.162230762807277, -1.9242354021636929], [-0.29242564954652117, -2.0800857535546067, 3.3542291637687143, 0.15909407382412777]], [[-2.395023911649937, -2.6127036276992923, -0.78488087858220545, -3.4084700738148666], [-1.2866769439768735, 2.1545434523170792, 1.1995502170778991, 2.5819982521340412], [-0.90101860820007929, 2.2371068580585014, -3.0548065931171364, -4.9407454393353287]]], [[[-1.5370470912829184, -2.4492178457248039, 3.0198409161679791, -0.53649449613906963], [-1.8040976121493713, 1.5255924726761174, -4.3539474053830922, -2.6293886510865416], [-4.4138175689887174, -1.1593502599720762, 4.4742905841974885, 2.5505817057945244]], [[-3.0377520270800886, -0.8846257630634744, 3.4383542961257358, 1.9197683383320951], [-3.5404070188517345, -2.8363307265768265, -2.2860361697392784, 0.63725577645751574], [-0.87953092283467171, 1.0989630635404533, 3.4580803972434584, 4.3900423045587491]]], [[[3.270036345473553, -0.72390936239894721, -1.2333819287150782, -4.7172069087515904], [-1.4955659862350634, -3.156856029860089, 4.4001086279519335, 1.4088950999011303], [3.3321656191525637, -2.3011845731308345, 3.6113029528197913, 1.7820393938011216]], [[1.6579413391233819, 1.1540984962221419, -3.0986112754687376, 3.3763350503036875], [0.092147646213832424, -1.2260439352277652, -3.2648344871602006, 4.2786218860320506], [-4.7408151467414026, 0.9877952851737879, -1.8102669618266907, -1.8837367697934493]]]]))
      arg1=Data(-4.00260684958,self.functionspace)
      res=arg0*arg1
      ref=Data(numarray.array([[[[-18.082725839241309, 8.9701474142507376, 1.24049143914772, 0.72170714984324835], [3.6493406814192952, 12.151935334007543, 4.7163497116571946, -12.424073679438488], [19.788394175095714, 7.9762335696435303, 12.668810608233946, 3.2150270388860176]], [[-15.97468127471218, 13.825282262571433, -19.296152063408353, 14.807409644173623], [-9.0336782211117015, 14.31281845214701, 9.1432890660984327, -3.2487475979006057], [-1.5087427772583644, -8.6943669597547917, -5.3389904080873576, -11.27143966496029]]], [[[-6.8649152577651593, 14.5763071269114, -2.7783648977359521, 6.1084183069794467], [9.6107612786815988, -11.652270997581976, 6.0871188678631452, 16.434543771489857], [9.166887814693073, -4.9670264495291461, -7.3914528329416012, -13.27814837304185]], [[4.9029328910338963, 3.2717682105386259, 19.280645308909868, -3.2994798209241645], [13.132323190936347, -1.5794823379064664, -11.907731685188203, 15.592578605316085], [15.713289251930686, -17.740477740306229, 18.741978227985083, 7.8355712128173529]]], [[[-5.5080191763372595, -13.164409767310952, 17.554155031383612, 18.21818183696239], [-13.761490380475131, 9.8861104356444738, -2.093553613619938, 19.976897950587279], [-13.507065198367046, -10.875279983908106, 16.773555732442752, -17.295895719991087]], [[-15.566224215233763, -17.240143237619918, -1.4877433722668119, 0.67904965171672749], [-17.717483426875333, 1.3929590218306955, 6.7371413350588343, 6.6895836510990874], [2.3342197403205405, -5.5494639588011889, 11.093024194510601, 17.184596610686008]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[2.1262602418200842, -7.0734635547699858, -4.5645496314105953, 4.2750122700914499], [2.7094491030471697, -16.041654735198275, 4.6519528120087408, 7.7019578009109244], [1.1704649078687286, 8.3257654848981471, -13.42566062597246, -0.63679102961655265]], [[9.5863391136856411, 10.457625436160122, 3.141569580720033, 13.642765664050817], [5.1500619491626418, -8.6237903799690248, -4.8013279152950403, -10.334723889603621], [3.6064232527835793, -8.9542592333145592, 12.227189793762639, 19.775861537530655]]], [[[6.1521952157009778, 9.8032561254195656, -12.087235935705626, 2.1473765450099398], [7.2210934597058092, -6.1063468808060328, 17.427139707511465, 10.524409025055382], [17.666776434445008, 4.6404232916303219, -17.908826139334586, -10.208975806034823]], [[12.158927070926081, 3.5408091385556477, -13.76238045696677, -7.6840779006210456], [14.170857383968469, 11.352716793879765, 9.1501040313934308, -2.5506843357853275], [3.52041649615831, -4.3987170855659805, -13.841336284416137, -17.571613398186965]]], [[[-13.088669874778532, 2.8975245724154495, 4.9367429560271381, 18.881124683870414], [5.9861626605081524, 12.63565356826609, -17.611904933150644, -5.6392531772085031], [-13.337348931165771, 9.2107371345687223, -14.454625934876614, -7.132803083855503]], [[-6.6360873601824286, -4.6194025460724424, 12.402522715386974, -13.514141798833453], [-0.36883079990845719, 4.9073718530326218, 13.067848881062947, -17.125641267808572], [18.975619178955029, -3.9537561744226162, 7.2457869409817217, 7.5398576975870339]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_mult_overloaded_taggedData_rank4_constData_rank4(self):
      arg0=Data(numarray.array([[[[0.10390028413985597, 0.12646900573271225, 2.3317298404884488, -2.9700552455645002], [1.9247790024878935, 3.5212318785099903, -0.051863750009535359, -4.3343721269893916], [-2.3761503897546623, -4.8805112670174466, 0.49715153419979963, 1.4670274744368008]], [[-2.6787215192171354, -1.7942179876865163, -1.6953883016769922, 4.6004466570067031], [3.89803933984944, -1.4115955437145344, 0.57568012184002892, -2.4847787966656307], [-1.1274589584269412, -1.5196792659973521, 0.44677354154515037, -4.4587282735575631]]], [[[-2.5042933827146872, 1.8734619145704343, -0.86059459581243392, -2.8486840563052285], [1.3580663110529212, 3.1884337945964916, 1.6420938290808573, 4.8206562541472344], [-0.11520684330124187, -0.14272228431640688, -2.3406017190814845, -0.39474394224016507]], [[-4.8679551542501809, 1.325066656063111, -2.2870516016609308, 3.8451033037182398], [2.4451113550946335, 0.69015275675918275, -1.9596451707269855, 0.39367272194549585], [-3.1828265509711615, -2.8874285970583191, 1.0005134562371261, -1.7397121115071235]]], [[[3.5015000330399406, -3.4569691004662131, 0.78525161551300471, -4.9857052439965956], [0.32906606888398304, 0.1763930633917985, -0.80728188785103328, 1.9239262160156931], [1.8363113074086055, 4.127471761204216, -4.9781773179145627, 3.2770832675209363]], [[3.0298743509057662, -2.684963479773935, -0.87118923521932601, -4.2676679637886705], [4.2639455439960621, 1.9162663173974881, 0.66714088595590493, 2.4034088984660338], [-3.7292477276986702, -1.1121076533767238, 1.3620901986978238, 1.6183611828656295]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[-4.1022298904919605, -3.7197607954469447, 3.4501328145226999, -4.1790953867996272], [2.383258190833434, 0.81169963768119402, -2.1373793911633152, -4.9971512184927835], [1.4657017483432124, -1.6010973740861378, 1.2729091354866355, 0.88387675518013431]], [[-1.4058704076545405, -3.9194202227881059, -0.032632801007005163, 4.1069648269079604], [-3.6233292964134369, 2.6163589375005465, -1.9865939941084343, -4.1896569521856497], [1.955858559188842, -0.62753002286117354, -1.8046280163720176, 4.8933823013509716]]], [[[0.55773315101132681, -3.2845130819000703, -2.4127490655753214, -3.4978730393725654], [-0.42508165140964849, -3.0360002056635471, 0.94148560575901108, 1.4760071401180239], [-2.48585237056664, 2.2404840331725122, 0.42943460232787078, 3.5871393174919675]], [[3.6090869989352719, -2.8393660861893588, 2.8119636172619984, -3.5325949147544877], [-2.5714178251831732, -1.9757438713079054, -1.1613974940517169, 0.050920064406247967], [-4.1971372291970663, -0.35031350396061445, 0.374637403240353, -1.8639867122682183]]], [[[2.7435914357919469, -1.3891109801191193, -0.99126392566577604, 0.55862809394931645], [4.2742470113356195, 1.322025925227976, 0.58749708227104591, 0.45698133192350099], [4.928538795662611, -2.0451573972848069, -3.1149604532156805, 0.16626377965871342]], [[-4.9222731464757521, 3.4324849422810537, -3.2572352607169131, -4.8041488490220807], [-4.7076578749925124, 4.9487639153364391, -3.7425551616857842, -1.8568002491694138], [1.6843169717389426, 4.4219449385125404, 2.1420759104100195, -0.62044146424333224]]]]))
      arg1=Data(numarray.array([[[[-1.3551300141073197, 0.41681632436347904, -1.4416631016761716, -4.455983202188083], [-3.8244604545723271, 3.2947979761386961, -3.7683339297787546, 0.16233736911354413], [-2.1100577599787673, 1.3756640984953261, 3.4556313455168617, 0.75223855162508002]], [[-1.0790477102595797, -3.903161269373844, 2.1849494872260173, -3.2888142951716937], [3.0896395646281789, 3.1828969962168898, -4.7201275164142276, -2.0027697310600456], [0.046950052656372421, -3.3366991936179047, 1.3634111073701325, -0.53811036930728751]]], [[[-4.8054810274612159, -1.543930029142647, 4.7750378401754556, -3.1846917695389845], [-4.6579739945250154, -3.6160884743539565, 1.8400657162165146, -3.3262642597957806], [1.5583619057910783, -0.79705367248142878, 1.80313003752019, 3.0449916026565109]], [[-3.8225582443754824, -0.20070045038093642, 0.56061151104402906, 4.77774267013422], [2.682363784754398, 4.6322512102150561, -0.40570326003613388, 2.4475902943715289], [-2.0282639300341989, 2.7418375033014915, -3.3723234076907058, -1.502631901902082]]], [[[4.0678308221294852, -0.78727877213804653, -4.5251950234709062, -3.1498054150962385], [-0.65346012883658489, 0.90507894873473571, 0.59733733638456155, 1.6267960506256385], [-2.4770384905231757, -3.1625444646424206, 3.8096203186936464, -1.0973937579718509]], [[4.6190866433497462, -3.4021534821109265, -4.1568643872319546, -2.9138530848544217], [-3.0502324876317477, -0.2195252557679499, 4.7963882308453414, -2.7938807481017855], [4.5130729764595863, -1.1514760287792623, 2.1447315015216439, 0.005251219702463672]]]]),self.functionspace)
      res=arg0*arg1
      ref=Data(numarray.array([[[[-0.14079839351219756, 0.052714346115412876, -3.3615688741094618, 13.234516283806014], [-7.3612411788061189, 11.601747666829775, 0.19543992888649531, -0.70363056785453426], [5.0138145687783977, -6.7139441323378373, 1.7179724250526256, 1.1035546225645381]], [[2.8904683217343128, 7.0031221583518866, -3.7043378003981324, -15.130014729738475], [12.043536568875938, -4.4929632159621393, -2.7172835837498157, 4.9764397623417294], [-0.052934257466043695, 5.0707125814112146, 0.60913600902174936, 2.3992879179249047]]], [[[12.034334337832099, -2.8924941083603697, -4.1093717600548736, 9.0721806681321908], [-6.3258375597250271, -11.529658695881023, 3.0215605577023865, -16.034776606930951], [-0.17953395588709739, 0.11375732085933073, -4.2204092655472181, -1.2019919893208295]], [[18.608042108129151, -0.26594147465662776, -1.2821474542428013, 18.370914125248692], [6.558678148597596, 3.1969609427309815, 0.79503443427800413, 0.96354953339261717], [6.455612288889963, -7.9168600155197097, -3.3740549481779909, 2.614146918876036]]], [[[14.243509758087281, 2.7215983887342077, -3.5534167026919383, 15.70400137561419], [-0.21503155576867608, 0.15964964837874859, -0.48221961260043655, 3.1298355699094587], [-4.548613789034051, -13.053312971364296, -18.964965460387159, -3.5962507221314728]], [[13.995252145296806, 9.1346578520535626, 3.6214155064230589, 12.435357461420006], [-13.006025223789415, -0.42066885344619104, 3.1998666937146365, -6.7148378512407705], [-16.830367142400185, 1.2805653042852543, 2.921317757061098, 0.0084983701291664066]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[5.5590548493738394, -1.5504570222695666, -4.9739291745795349, 18.621978843920846], [-9.1146767038780574, 2.6743863234645109, 8.0543592805305781, -0.81122438187265977], [-3.0927153479060419, -2.2025721757254408, 4.3987047085823878, 0.66488617013177964]], [[1.5170012443013339, 15.298129211987138, -0.071301021827004596, -13.507044632502241], [-11.194781549875337, 8.3276010031957028, 9.3769769755344647, 8.3909181273627045], [0.091827662342332833, 2.0938789212519029, -2.4604498821929384, -2.6331797573417157]]], [[[-2.6801760755710924, 5.0710583782573808, -11.520968086970132, 11.139647479382122], [1.9800192778158905, 10.978445351836195, 1.7323953854684939, -4.9095897973779659], [-3.8738576377114988, -1.7857860267761541, 0.7743264306079215, 10.922809099322048]], [[-13.795945262448392, 0.56986205229456111, 1.5764191724740828, -16.877829460521674], [-6.8974780497432597, -9.1521419389410248, 0.47118274953457795, 0.12463145542950567], [8.5129020513840903, -0.96050270307216823, -1.2633984843439043, 2.8008858985758018]]], [[[11.16046580584497, 1.0936175867916587, 4.4856625833690043, -1.7595697953464473], [-2.793050002706762, 1.1965378346054028, 0.3509339422574882, 0.74341542598279542], [-12.208180298893025, 6.4679012061055658, -11.866816634497626, -0.18245683397427931]], [[-22.736406145805276, -11.677840598674809, 13.539885256110328, 13.99858394382281], [14.359450990957598, -1.0863786642494329, -17.95074753079918, 5.1876784692250233], [7.6014454089472663, -5.0917635972789794, 4.5941776837070236, -0.0032580744412599961]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_mult_overloaded_taggedData_rank4_taggedData_rank0(self):
      arg0=Data(numarray.array([[[[-3.6853536010312693, -2.3043836690594679, -3.1006174475441073, 2.3437722318459233], [-4.839623403218857, 3.3070650661975947, 3.3004488645890095, 4.1033479301880824], [-0.27354607956975663, 4.9650437898498456, 1.3126328960356801, 0.49381572631001092]], [[-4.4720827107305485, 2.1673543435336482, -2.4927169203349187, -0.35834092552549279], [-4.0833764908301875, 0.55870124717747593, 3.7593746529652492, 4.7076776912446707], [4.7186987243166829, -1.1136008027587643, 2.3837688715431327, 1.9379108447728663]]], [[[-2.4472903587000863, 4.8292799659593602, 3.1855112424406347, 3.9982086946803559], [-1.5986993609428235, -0.53089241767491657, 4.8247351468277504, -3.2664042427873339], [2.9591345322877878, 0.28976272252442037, -3.4564049340261094, 0.057829480015172408]], [[3.3927167139023329, 0.15573794671308505, 2.1605514248164157, 4.0729621537910461], [0.51375655229256356, -3.6480488644297635, -0.15145801860341734, -4.4786288483979941], [-0.4557991077643484, 3.7990330664261887, -2.3082848242410501, 1.9010472661724007]]], [[[-3.6792324135066732, 3.5426859187646063, 0.56055073866233318, -4.341663564534942], [-0.33731566409411773, -2.7906273041665672, -0.51786141371352912, -2.2397425512067959], [0.78545825329611407, 0.003860283737826542, 3.1210730627540535, -2.4111256811280866]], [[0.15917627004090917, -0.4094101001762942, 4.3958229264446107, -3.6780395794242002], [3.9005874233789903, -3.1816699147914229, 1.7207051941169436, -1.7049758818030547], [-3.21770597801188, 4.7207551478472922, 2.7885576920595012, -0.0031663477611365565]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[1.9812055379765914, -2.8858868804605087, 3.8328594647769325, 2.5968975574073738], [-4.9603063186649123, -0.13195011646667432, 3.0816951138207038, -1.4437121918947105], [2.6867098769778863, 4.2229337164969252, 3.9093973450312589, -3.5223156773421427]], [[-2.1057852818273926, 0.8069303623320554, 4.5466620045316883, 4.2405689916538183], [0.39944219075230514, -2.3552454513574883, -0.044173904865877134, -3.7479069271193008], [-4.4204519113208285, 4.1333858238493644, 0.58890833097824569, -4.2075682467865221]]], [[[-1.209020423113516, 0.99652155769890616, -4.5678388249329522, -1.4740798848661054], [3.938090038646191, 2.0545874239970638, 2.4618143555559335, -2.8548176402264325], [-3.1637347083158374, -0.98200758348063921, -2.4489939164588925, -3.4853422101499265]], [[4.7555750476739256, -1.2285587531755828, -3.2184746576200696, -4.5969546718690282], [2.7011029387853212, -1.1715408543242423, -4.8992902220209444, -2.8760132823468032], [-1.4487158678368606, -4.3747137997475791, -3.9532393286181433, 4.7307794982529536]]], [[[1.0641075638255035, 4.4122450105895545, -1.6450011661023178, -4.3708835966994863], [-2.8373180386214636, -2.0586887385947339, -2.9568899160140258, 4.2552994810803622], [2.6819735587888776, -3.9075458132898122, -1.0624751262898267, -0.28376527428938392]], [[1.5999328143968494, 1.283246251925755, -3.4318573085072135, -0.90997649713485895], [4.803357375328515, -4.7836372766747175, 1.9157089375671301, -3.3175214440430114], [0.96676766718280938, 0.27431848681883686, -4.8688225840741168, 1.1534809358463063]]]]))
      arg1=Data(4.69286431794,self.functionspace)
      arg1.setTaggedValue(1,-0.144374058591)
      res=arg0*arg1
      ref=Data(numarray.array([[[[-17.294864413253695, -10.814159895361806, -14.550776983147102, 10.999005076197115], [-22.71169598120996, 15.519607646248749, 15.488558709799555, 19.25645508565297], [-1.2837146361239777, 23.300276838372167, 6.1600080803538066, 2.317410201635512]], [[-20.98687738004238, 10.171099863090959, -11.697982290153096, -1.6816453430544651], [-19.162731830512495, 2.6219091472650793, 17.642235166650696, 22.092492657581747], [22.144212870432177, -5.2259774716906158, 11.186703879469459, 9.0943526547742728]]], [[[-11.484801599970506, 22.663155633570067, 14.949172044031126, 18.763050918923771], [-7.5024791860744067, -2.4914060835689744, 22.641827414035866, -15.328791918928871], [13.886816858543268, 1.3598171412026148, -16.220439383226346, 0.27138590328795015]], [[15.921559207534672, 0.7308570530783326, 10.139174688585044, 19.113858759826559], [2.4109897923591888, -17.119798345966515, -0.71077193116914517, -21.017597515922226], [-2.1390033689740182, 17.828346720087463, -10.832467487312181, 8.9213568821287463]]], [[[-17.266138510736127, 16.625344337821954, 2.6305885598606906, -20.374838022485442], [-1.5829766439079056, -13.096035300379024, -2.4302533500517067, -10.510807899919557], [3.686049010121053, 0.018115787810351756, 14.646772409867271, -11.315085675023237]], [[0.74699263793700277, -1.9213060505196127, 20.629000559473464, -17.260540702233271], [18.304927538162122, -14.931145214572643, 8.0750360071571912, -8.001220478653682], [-15.100257569818783, 22.153863387041536, 13.086322891569807, -0.014859240426411799]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[-0.28603468442038837, 0.41664720156622836, -0.5533654769382752, -0.37492464010761922], [0.71613955507959037, 0.019050173845831748, -0.44491683092194789, 0.20843458858096017], [-0.38789120919547432, -0.60968207981088718, -0.56441556134653437, 0.50853100997613421]], [[0.30402076765833952, -0.11649981141008008, -0.65642004663514009, -0.61222815605965464], [-0.057669090251338748, 0.34003634479016592, 0.0063775659292936602, 0.54110053428904925], [0.63819858324315626, -0.59675368711109933, -0.085023085881304666, 0.60746370458664123]]], [[[0.17455118540414913, -0.14387186175828684, 0.65947743014452054, 0.21281889566528192], [-0.56855804197562643, -0.29662912513221662, -0.35542213000887707, 0.41216160925630002], [0.45676122014435949, 0.1417764203941124, 0.35357119118352021, 0.50319300045741766]], [[-0.68658167056615438, 0.17737201341329772, 0.46466424879246998, 0.66368100313599232], [-0.38996919394416291, 0.16914010794380596, 0.70733041356772797, 0.41522171013365755], [0.20915698958460188, 0.63159518644304424, 0.57074520645364712, -0.68300183646125823]]], [[[-0.15362952776673111, -0.63701371967612985, 0.2374954947369054, 0.63104220448376391], [0.40963512074886738, 0.29722124856624021, 0.42689819798136147, -0.61435485660319467], [-0.38720740771574935, 0.56414824819441189, 0.15339384613430937, 0.040968344336309789]], [[-0.23098879388718618, -0.18526746956204321, 0.49547116813392567, 0.13137700011366271], [-0.69348019913856629, 0.69063312846010516, -0.27657867439537004, 0.47896403533873316], [-0.13957617182560958, -0.039604473288541532, 0.70293167702166726, -0.16653272421532611]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_mult_overloaded_taggedData_rank4_taggedData_rank4(self):
      arg0=Data(numarray.array([[[[-1.3532883833167708, -0.86914255675510166, 3.2812005170107668, -2.4254100040245508], [1.0718751931878572, -0.41578362451623629, -3.862213555754932, -3.9930189204001989], [-4.7152892619512912, 3.3779166105093417, -1.0344310528206933, -1.2103354491532992]], [[1.0351292574290207, -4.506692668861132, -3.409400143885831, 1.313196181127104], [-3.5468061926677565, 1.3853384951420775, -0.69672269217629434, -4.9994576294080497], [-4.7942344611987426, -3.2733793480036102, 1.8741546503467701, -1.0299243977249906]]], [[[3.7347053603078297, -4.8293907831328386, -4.1883854607206503, 2.575419140175538], [0.97856794803764835, -3.1602267239490134, 2.7307395654890243, 0.73531000496875887], [0.88235128630099524, 3.7961315455018934, 4.4525982851379329, 3.5472345173950615]], [[-2.4381751265411458, -1.576676482280972, 3.7575819661811991, 1.1610148298722924], [4.9794248794760669, -1.681142970119105, 1.681322338237945, -1.4299463616495145], [4.8870647335375654, 3.1463465240231212, 2.5220247241367311, -3.3418191799995824]]], [[[-0.82120587395565003, -2.0207299168197554, 0.1628873085127891, 1.6033505537422883], [3.7693550920380954, 0.57282097377781049, -3.2714424016177102, 3.2469388374060397], [-3.9961007411141058, -4.7460546115849152, 2.2646072665984276, 4.9707369943911193]], [[-2.6891597834956551, 0.19702474540645554, -2.722659084034369, -3.5315295817554926], [-4.0155970073115785, -4.6190821703368554, 4.5632739542389338, -1.9818054349040484], [3.2046427296749833, -0.065937911917783865, -4.443899025501592, 3.1613250438570049]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[-0.3639682004592153, 3.1067676913355395, -4.4361282666281463, 0.21858042794671029], [-1.3042462944217368, 0.078196553344779929, -3.7361198141846872, -1.9812371453675803], [3.1505866455886231, -4.7119825320538133, -0.80627211906748286, -2.0210407646942019]], [[3.4657015425999589, -4.2754173257453045, -0.017767757118610561, -2.2548665541057735], [-3.0928854938082182, 4.0893764899848009, 1.0738528488015051, -0.24469493230951489], [-0.26422542720117548, -3.8668777591475409, 3.3530488435952641, -0.93780420938814935]]], [[[4.3350161876545616, 4.0925556508337397, -4.4830309625775255, 2.7613323055559214], [-3.8925103131433101, 3.0119873782008337, 1.6071354400323976, 1.0307349591055619], [2.141544221037476, 2.2756717030147291, 3.9435543723119029, 0.043314503204946675]], [[-0.027142010289551877, 2.3862273147475079, 3.0913137938867425, 3.493217319413052], [1.5529622358287423, -3.5117922193209061, -2.3696213312111358, -4.6653656536525512], [0.65584705078964323, -2.3701842815076688, -1.4603526815741286, 4.8503311497567552]]], [[[-1.5965176195255126, 3.562069694403263, 1.7660449437432613, 3.8831423784808123], [-0.92820469100342251, 1.7650058945896188, -1.542239523480895, -4.4465476751882829], [0.57362353277394273, -1.8075398487321492, 0.98683103823109697, -4.9809873860131804]], [[3.6904196018452922, 3.3995698359526472, 2.1221400586440904, -3.6927178186697187], [-0.78155054794039192, 2.0612311645734724, 0.438384322119588, -4.3317494375427801], [-4.3414329593629191, 4.7193189752592293, -0.6041773666034489, -3.9525134655897389]]]]))
      arg1=Data(numarray.array([[[[0.17361170468618869, 3.7181882426283313, 3.721151186714275, 4.2294408823886833], [0.98325151852268622, -1.9221434482898903, -3.151965683776222, 3.4239072041508294], [2.9877537129846754, 3.1041364843966122, 4.2435682888207147, 4.0080403419474173]], [[-1.0887631682949817, 0.12444941407842691, -0.77703164515124001, 2.7420517592483176], [-1.8327369087131906, -4.4220882938756247, -0.66912001794140163, -0.51938895410348795], [-3.6221403069574185, -1.4417680447117065, -3.224451927550108, -4.1870446314851737]]], [[[-0.047703848894011358, 2.8798078234621096, 0.53392801405645685, 4.4439237032623939], [-1.8206629291848753, 4.9984481949485104, -0.099733523715559436, -1.5568880269781094], [-2.4228123918565068, -0.51415636268171738, -4.7966640101476852, 0.23819887889085312]], [[2.7804216110403521, -2.1241218684525132, 0.3522687248050449, -2.6744563249858477], [-0.21916560615891534, 2.3467670261694078, -4.9494066033264241, 3.1270098095582863], [-2.6490613205813194, -2.2718605579630422, -4.0243564500342535, -2.177128723782503]]], [[[1.3113395293370314, 3.9380794280623501, 3.1423701341462174, -1.7589162798020008], [3.9958761366752409, 2.1706307402668026, -1.388492375572361, 1.0892496485812151], [-3.0074315675500705, -3.1441779947901072, 0.22496659394695406, -2.162496913136712]], [[2.0402055778911343, -2.7807437093397933, 2.1623702441393799, 0.58586348625903373], [-4.5029154412593355, -2.59191035799337, 4.8997443075063121, -2.2452696666134306], [-3.995560920629976, 2.4780588942964776, 1.1739429456848534, -3.219490419401112]]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[[-3.0416099889879247, 2.5768080142200409, -0.006941836946602109, 3.7226676145652267], [-3.0309068128007519, 2.1655449390987682, 2.9405918020645494, 2.4707474992815346], [3.4234672550999719, 1.5578847985536424, -4.2980321616443673, -1.5429500819106465]], [[0.27189302867058274, 3.2728969311121698, -4.6453457389835489, 2.1731561048971235], [-1.9540838017554973, -3.1021084519421569, -3.0636334800343015, -4.1604600663474738], [0.20804999840622784, -4.6185369410264627, -4.7906356005732684, -0.22034620329094601]]], [[[3.1426525315782534, -1.2129314362286117, -2.0072575705897822, -0.9942767712969971], [-3.9284905647224164, -0.67630606537903226, 2.5559113502400974, -3.5596976735889454], [3.605101361300548, -1.9248106664350031, 2.2873826181945969, -1.476288108605849]], [[1.9758409585878454, -0.37128059028854921, -0.70181805182146917, 2.7445063845885587], [-3.2333688843193209, 2.0855781334561012, 4.1363428588569615, 1.9273289450711921], [-1.373932771958124, 2.7040407687642514, 1.1678373725636995, -0.50122149444354758]]], [[[-3.0325515873861617, 2.898093807978384, 1.0824495879840423, 1.1636657138837094], [-4.4083178004461541, -4.6228041665866568, 3.9431484918408994, -2.7317220890863778], [-2.4776817725398703, -0.80581003932262885, -4.0817151567241572, -3.8388617165159422]], [[-3.1955817960738173, 1.273034042249515, -3.5853253604684667, -0.59646188150604473], [-0.410262145680516, -2.5168468692194681, -1.3464155324549463, -0.87646416351853595], [3.9325186707214748, -3.2848178431879624, 1.1863050818384941, -0.98444346424489293]]]]))
      res=arg0*arg1
      ref=Data(numarray.array([[[[-0.23494670315964095, -3.231635635694746, 12.209843197722108, -10.258128227575936], [1.0539229113687583, 0.79919576977010742, 12.173564591154888, -13.671726247868808], [-14.088123000191739, 10.485514191931388, -4.3896788127213195, -4.8510733074954704]], [[-1.1270106099132522, -0.56085526207130987, 2.6492118027824816, 3.6008518986977478], [6.5003626173547051, -6.126089142423055, 0.4661911002891837, 2.5966630692229504], [17.365389882912247, 4.7194537421708453, -6.0431215748376417, 4.3123394203300229]]], [[[-0.17815982017177895, -13.907717359821753, -2.2362963311455148, 11.444966162861727], [-1.7816423866806577, -15.796229563950991, -0.27234627921571608, -1.1447953428530748], [-2.1377716304205796, -1.9518051876965798, -21.357617945966425, 0.84494728520644002]], [[-6.7791548133360466, 3.3490529954877939, 1.3236786075770843, -3.1050834551543205], [-1.0913186720331562, -3.9452508885520174, -8.3215478831951089, -4.471456300020213], [-12.946134156791416, -7.1480605696122463, -10.149526465725513, 7.2755705264643815]]], [[[-1.0768797242418076, -7.9577949150980229, 0.51185221350204935, -2.8201593912068637], [15.061876062930331, 1.2433828143516794, 4.542372831770324, 3.536726987609228], [12.017999515936793, 14.922440471817399, 0.50946098339417001, -10.749203406385254]], [[-5.4864387901283509, -0.54787532137327555, -5.887396988251699, -2.0689942325941804], [18.081893770098084, 11.972246921718591, 22.358875580874034, 4.4496876281196975], [-12.804345255270336, -0.16339802909920201, -5.2168839123233886, -10.177855691310427]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[1.1070493141907085, 8.0055438853533119, 0.030794879101145239, 0.81370228029502634], [3.9530489793329773, 0.16933815035075503, -10.986403297122418, -4.8951367224006352], [10.785930215527911, -7.3407259577369368, 3.465383498789198, 3.1183650134296745]], [[0.9423000888858134, -13.993000244655608, 0.082537374822232182, -4.9001770177833022], [6.043757444135192, -12.685689372755402, -3.2898915402185036, 1.018043494311335], [-0.054972099708089431, 17.859317777056546, -16.063235160588501, 0.20664159696894605]]], [[[13.623449596565317, -4.9639894034112881, 8.9985978388221373, -2.7455285692462343], [15.291690038268193, -2.0370253327223131, 4.1076957125519185, -3.6691048360148653], [7.7204839865475261, -4.380237167267059, 9.0204177251315496, -0.063944686011632709]], [[-0.053628295628509341, -0.88595988598211439, -2.1695398243944282, 9.587157235884451], [-5.0212997718516181, -7.3241170618569544, -9.8015662715503087, -8.9916942636255435], [-0.90108975647197509, -6.4090749266809413, -1.7054544386658832, -2.4310902274271711]]], [[[4.8415220413820697, 10.323212124937552, 1.9116546217161945, 4.5186796479669598], [4.0918212618080094, -8.1592766035588991, -6.0812794510711186, 12.146732504487513], [-1.4212565714539249, 1.4565337565840717, -4.0279632058737045, 19.121321786614814]], [[-11.793037699530801, 4.327768130172319, -7.6085625707226967, 2.2025654179946379], [0.32064060475580819, -5.187803203294342, -0.59024746048654575, 3.7966231473478214], [-17.072766170380266, -15.502103177627047, -0.71673868033347032, 3.8910260485397501]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_mult_overloaded_taggedData_rank4_expandedData_rank0(self):
      arg0=Data(numarray.array([[[[-4.219787807434507, 1.5796496812971137, -1.7744109604039302, -4.2008893090615596], [2.8752093545708179, -1.0095586121336089, 3.771790436102302, -3.8721949429711078], [4.4733773137550816, 4.1541057915802853, -0.10058389331172979, 0.47659781326370165]], [[3.7059037859503547, -4.5868486303599445, 3.5371896610419249, -0.57976334508050709], [-0.65945228435021708, 0.36942654726328872, 0.98907938321894662, 4.9988213699853841], [0.60159248424116463, 2.8662094019597628, -2.1208711695657687, -1.618663569351483]]], [[[-3.7154727686203626, 3.1919537523432613, 4.7257091736043559, -0.83222213923911159], [-2.0647818468730583, 3.4541499207879554, 3.3533889441660634, 1.7850365811951443], [1.5523183163777396, -1.9561720331748034, -4.3855857548606361, 2.3550105107187056]], [[3.9013257398261167, -3.9383655000401618, 0.025731152155249681, -1.7415610678131568], [-0.27743255102651876, 2.7351823089627834, -3.6020506556431062, -2.2550872223543683], [-0.021705716201745773, -2.0213798554217099, 0.25438063169193015, -4.4722880786941861]]], [[[-2.9825705407619898, -3.8339015400602037, 3.6932899083694473, -3.6255589482244952], [-1.2164701276291678, 4.4246508749014435, -4.9938101420542482, -1.2978973042503705], [-4.3985371353145295, 0.46234959255329056, 4.107074059471417, -1.4193215194522768]], [[0.31199713941376661, -4.4324808375787867, -4.0751941316416538, -3.5281587032772457], [2.6698831844651458, -1.8060718647690788, -3.7342749134169315, 0.79369516880371194], [1.3305617547536279, -1.3757441783790405, -0.20260136784400551, 3.5000973473473689]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[-2.5041103122322728, 4.2752335695684192, 4.9655672044695649, -1.3576787307638103], [3.5213714911712817, 0.98927721064827701, 4.5717752100063951, -4.894727899560789], [-4.0187288515692003, -1.0636466842872161, -4.4769297344832442, -3.0288375796990854]], [[2.9588312431302919, -0.39339057549385892, -4.3709439232853811, -0.6857964941070076], [-0.67745281775481025, -1.2671412867118548, -1.1036243359258502, -4.2903959394195148], [-0.098431373327820815, -4.4170655530127165, 2.3496671706657679, -4.1361192080217188]]], [[[-1.7023975983252306, 2.8717010449851301, -1.0473737833456722, 4.0132252265937929], [-2.8573855499158443, -3.8128342714691077, -2.3702141920570998, -1.8232668841397839], [2.8213427401622013, -1.7610558539831711, -4.7158717933692209, 1.7701316720619333]], [[-4.1644145919808997, -4.0112750193492976, 4.8068093588426137, 3.3439679884419409], [2.5699708818283797, -2.0878984330137507, 1.3003601650287528, -2.7107070474101858], [2.3376036425530335, 0.072655631320497349, 1.8230728843886865, 4.0351791993831796]]], [[[-0.69856999838536993, -4.5944466713717125, -2.1974174417292858, 0.3138573585645501], [-4.3212470737617608, -2.0763103884085399, 4.4625204633066424, -4.7824999240155943], [1.3312784017002421, 2.2228773838747786, -0.94865273080767398, 2.5654964449496598]], [[-0.3944517100311673, -1.6172194429567508, 1.498853714509262, -1.0831482576208353], [-2.9297762932729121, 0.17156975072456415, 4.9004221503595957, 4.1459712952877794], [1.8389357610379431, -0.492208305981233, 0.63935979578977964, -0.55597290481337414]]]]))
      arg1=Data(2.02968704328,self.functionspace)
      arg1.setTaggedValue(1,-3.43982262728)
      arg1.expand()
      res=arg0*arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[[[-8.56484863811996, 3.2061944910423548, -3.601498935777141, -8.5264906008350341], [5.8357751736756827, -2.0490880344743538, 7.6555541781056906, -7.8593439047837288], [9.0795559734093541, 8.4315347015644591, -0.20415382501698051, 0.96734440643456943]], [[7.5218248979674858, -9.3098672345056084, 7.1793880246233526, -1.1767381496757221], [-1.3384817572037868, 0.74982027642214455, 2.0075216088899994, 10.146042966305899], [1.2210444705959571, 5.8175080864709345, -4.3047047333232973, -3.2853804741340924]]], [[[-7.5412469381101239, 6.4786671738643777, 9.5917106799509284, -1.689150493140291], [-4.1908609617878287, 7.0108433397529426, 6.806330091035746, 3.6230656206238225], [3.1507203737904783, -3.9704170301519603, -8.9013665838123774, 4.7799343203823765]], [[7.9184703057206196, -7.9936494271130822, 0.052226186138049822, -3.5348239344126702], [-0.56310125420127655, 5.5515640934969674, -7.3110355449793047, -4.5771213166678413], [-0.044055810939689292, -4.1027685020866906, 0.51631307220523981, -9.0773451671191729]]], [[[-6.0536847822385473, -7.7816202810525548, 7.4962226740760594, -7.3587500218412698], [-2.4690536565800998, 8.9806565518031896, -10.135871741903173, -2.6343253419386263], [-8.9276538329121706, 0.93842497746892439, 8.3360750042803033, -2.8807784982737799]], [[0.63325655140700965, -8.9965489255987201, -8.2713687278236883, -7.1610580066600189], [5.4190273065669059, -3.6657606631454542, -7.5794094077895018, 1.6109528004309184], [2.7006239539007879, -2.7923301337170536, -0.41121737126278562, 7.1041022361124178]]]])+(1.-msk_ref)*numarray.array([[[[8.6136953132280301, -14.706045169519202, -17.080670427226341, 4.6701740186615464], [-12.11289333439851, -3.4029381338428641, -15.726095814229224, 16.836995783300171], [13.82371443654077, 3.6587559320451768, 15.399844201429321, 10.418664041012491]], [[-10.17785466043, 1.3531938029434625, 15.035271809900019, 2.3590182981402981], [2.3303175314292877, 4.3587412699953063, 3.796271962737368, 14.758201032416226], [0.33858646520752966, 15.193922035443254, -8.0824383002389713, 14.227516440890902]]], [[[5.8559457793505212, -9.8781422333306654, 3.6027800391749274, -13.804782942818287], [9.8288994694705849, 13.115473601077642, 8.1531164093441326, 6.2717146836388977], [-9.7049185969291649, 6.0577197744396267, 16.221762502194771, -6.088938978828053]], [[14.32484754288134, 13.798074575810782, -16.534571597580133, -11.502656751550949], [-8.8402439907704338, 7.1820002733483852, -4.4730083192827168, 9.3243514376157073], [-8.0409419032719303, -0.24992248461574224, -6.2710473589053866, -13.880300715177963]]], [[[2.4029568871866984, 15.804081620027203, 7.558726237645633, -1.0796136437294579], [14.864323462404016, 7.1421394553094224, -15.350278864393395, 16.4509514536057], [-4.579361569380981, -7.646303922727002, 3.2631971288655759, -8.8248527215506645]], [[1.3568439175354867, 5.5629480331638401, -5.1557909221553908, 3.7258378852657694], [10.077910786476027, -0.59016951069957468, -16.856582996043326, -14.26140587359466], [-6.32561284093729, 1.6931092682506359, -2.1992842925324059, 1.9124481781330267]]]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_mult_overloaded_taggedData_rank4_expandedData_rank4(self):
      arg0=Data(numarray.array([[[[-4.2394854110487303, 1.4146864059729189, 2.6339572727432206, -1.9099050735732281], [-3.7267735570270277, -2.6937015349589433, -2.1242184643289272, -1.6619537233941859], [2.5812342814590306, -3.6361172012107748, -3.9702608399881223, -2.8501771743320106]], [[-2.2794585618161478, -4.7922663940853374, 4.577444720247108, -1.0064711307914487], [-2.4819548030669516, 1.5644493036592912, 4.9832258136037115, -4.028809177111027], [2.4649674216494235, -1.5871505000792006, -2.6698101449565659, -3.9627802054123729]]], [[[3.3665933304136644, 3.0110535022832892, 3.9021632939504762, -3.4933144632862878], [-2.7254540423406137, -4.7397334432458607, 4.2808274791795906, -3.5138505089043379], [-0.22833830687890444, -3.1736127048623408, -4.8811238683923275, -0.14067811106407291]], [[-0.1737715656165868, -1.4369085474480778, -1.6091832873688716, 4.1522604863368802], [3.3704701836422082, 3.593267828048857, -4.3551593227583831, 4.8231059928543516], [1.7866455069102223, -0.72443356744384424, 3.8433024010291561, 2.0202923842337857]]], [[[-3.2672367899992869, -2.1653132468587364, 2.8923684681644293, 4.1694578198639789], [4.5654751634869335, 0.58188185781572699, 2.1766927230242326, -1.8083159898852061], [-0.74625321126536193, 4.9614122672885141, 2.2333602939839778, -0.28440741321638097]], [[4.3071547407602111, 1.678860106484751, 1.6981586430685036, -1.929143739510554], [3.0097412240058361, 0.91482986195855531, 1.4049470245084592, 4.1236759526135192], [0.84332517950769414, -0.59028341536362561, -0.61360183887460007, -4.7412772223799635]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[2.3924820183504734, -1.7711910590418514, -0.10584956777879562, -3.2361969625748035], [4.0445345542779307, -3.2546124979256041, -3.0185886115606806, 0.26858683928314875], [0.33662527965318922, 4.4923945866400832, 0.14154363036042916, 2.9397054406772867]], [[-1.0780623874281945, -3.5117616732311663, 0.77355505090137555, 2.9395229091423829], [-3.127675963853469, 1.3334512834354451, 4.7125522862875648, 2.1904817752448054], [-0.33640128241009748, 0.011885043625820657, -1.4655070888112443, -1.854914407272469]]], [[[-0.65747943533845721, -1.473505921804541, -2.5892839184825442, 1.0527728108429271], [-2.6000274010310842, 3.5700410692848639, 1.4849718178524576, -1.6443043504846235], [4.8593803886502691, -3.6448662474437379, 2.94294954621237, -2.453361363934603]], [[3.8161736639588568, 3.9653639374103626, -1.1491407536370515, -4.4102526954228782], [0.67204940063191287, 1.7631920792795599, 2.9290670362585614, 2.1383785725901872], [-0.021058422970627433, -1.3154526687604564, 2.6442197841892341, 2.8890951961321498]]], [[[-3.1060387003099441, 3.2017791759102714, 4.4161403626231017, -4.9786479768044369], [3.7974780735206011, -1.0567047990468517, -0.99938043262372922, -1.3679330546498725], [-1.734360386599537, 0.10178547721658138, -4.6423158212394009, -4.3171267157925381]], [[1.0381739953991413, -3.035377931244867, -1.8701732836810283, 2.7263167680515039], [-3.4748171926567961, -0.49805298091144223, -0.42339941212675569, 4.8182237036577611], [1.0208561871184596, -0.54877187031640329, -0.31092353528725702, -3.4936261759643883]]]]))
      arg1=Data(numarray.array([[[[4.0512893002520549, -0.36063442320618044, -2.7147506017148579, -0.43512381874642969], [2.5947300183717541, 4.954831448399629, 4.3586409482416748, 4.9869341533921254], [-0.21381584088776151, 2.1045302789994311, 0.61838596738128082, 3.4604616411556979]], [[-0.21429219356302909, 2.9799157531796316, -4.647510555578604, -0.10828874066454741], [-4.0832424404990295, -1.1519071861447525, -3.7878420079642385, 2.0493199951536454], [-2.6137169520131209, -4.5270477141436789, 3.6306974526171292, -2.0574052220587125]]], [[[-1.7759675552198284, -4.1240173429310314, -4.950207407606726, -4.1465456522941837], [-0.6102729449932589, -4.1667452308588349, 3.1247577740575885, 4.5519701768248364], [0.86486899819522733, 1.3946391511015745, -2.0023303415569691, 3.2204493004422794]], [[2.8617389996771152, 3.0809122511886464, 3.3742657689833422, -1.9139996963109871], [-2.2416867605376876, -4.3192330519657407, 0.33565929769889369, 2.5048671063277226], [-2.8817451711409037, 4.5579806848888129, -0.70937100201677161, 1.4096195824246376]]], [[[0.13529718870683993, 0.84979715549012713, 1.0344349954728944, -3.1614554350075075], [-2.5788449190429965, -2.9421670970720815, 1.9278775903131304, 2.0810013182523468], [2.893043418882602, -1.726615700798062, 2.193493761946673, -0.9653312924060593]], [[-0.64639620826285071, 3.2260546910856718, -4.1710602679281186, -4.4385521879585363], [4.0839306655936305, 2.4623572609301316, 1.1548126176099869, 2.8606578337879416], [2.3065764567839766, -3.9815898786205639, 1.0218088114890023, -2.0555266494461302]]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[[-4.5229733152567189, 0.17018496484498602, 3.8220149916066788, 4.0803015367435815], [-2.6065320703964301, 0.49598892177018516, 4.2579140430982481, -0.9893732307274643], [4.3150720827787943, -3.6543668271423591, -1.0072948541243876, 1.1031734799326944]], [[0.37641962181737121, 0.1412445396703399, -3.1847463824420377, -3.7390870938195953], [-2.2524747478408247, -0.78551792367013995, 4.8899458606077548, 1.8324940714526514], [3.0382746479145144, 0.9766053898523408, -4.6065190329090102, 2.1439276945665942]]], [[[1.5480328969624546, 0.92756057524764124, 3.0392485660817972, -0.7731502623624511], [2.3732488385370498, 2.7253120356440617, -2.9780020940216048, 4.870020149206999], [-4.5963422086205421, 1.9390615325682212, 1.3467338995432607, 2.8387787116392609]], [[0.18494202665104886, -3.8818697667182711, 4.0607887425002058, -4.0822879442560289], [2.868768972607505, -4.9844191744945192, -1.9074966426847926, -2.8972500413637228], [1.9608833531223882, -4.3321364220346155, -2.2273706191195197, -0.6814990272056356]]], [[[-4.6794835771501555, 0.88526237919283357, 4.0259691601531635, 4.1508554972608263], [4.7558119583318739, -3.1955366004548083, 4.0857809211084746, 2.0165832985625078], [0.53993917461036567, -3.0257062484534449, 2.5766427682780062, -3.6681108125293624]], [[-4.9898032979548397, -2.8453427014203858, -0.54434901106418376, 2.4540928261003376], [2.7394397356634084, 1.4697964097252161, -4.8203862302173794, 4.0458762828142447], [1.5283750153098143, -0.82582519593759862, 3.7525569131034153, -1.2872056644821841]]]]))
      arg1.expand()
      res=arg0*arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[[[-17.175381884356405, -0.510184616035668, -7.1505370910708841, 0.83104518905636382], [-9.6699712200921066, -13.346837078016925, -9.2587055816351089, -8.2880537845516749], [-0.55190877841847952, -7.6523187479387422, -2.4551535902920714, -9.8629287822734586]], [[0.48847017534760984, -14.280550121168245, -21.273722654925983, 0.10898949126862896], [10.134423187283387, -1.8021003952442916, -18.87567207193991, -8.2563192033121311], [-6.442727136125173, 7.1851060433855416, -9.6932728922651723, 8.1530446884863128]]], [[[-5.9789605264341352, -12.417636863909506, -19.316517643404708, 14.485187899836147], [1.6632708648629886, 19.749261720186812, 13.376548944965775, -15.99494272235332], [-0.19748272271995246, -4.426044528634387, 9.7736224225798836, -0.45304672436383486]], [[-0.4972888663599373, -4.426989147670465, -5.4298120825888683, -7.9474253098529006], [-7.5555383874577666, -15.520161167473773, -1.4618497196438685, 12.081239551832978], [-5.148657062079125, -3.3019542078941391, -2.7263272752715166, 2.8478437070393046]]], [[[-0.44204795252646345, -1.8400770379256457, 2.9919671632716138, -13.181555085643529], [-11.773652428375271, -1.7119936564486071, 4.1963971217160836, -3.7631079587679115], [-2.1589429416712633, -8.5664523188324591, 4.8988618730332432, 0.27454737577003319]], [[-2.7841284928287622, 5.4160945222017212, -7.0831220447417627, 8.5626051658910818], [12.291574480218742, 2.2526379531093585, 1.6224505509759761, 11.796425917846816], [1.9451940044655682, 2.3502664721293898, -0.62698376570792136, 9.7458216830139417]]]])+(1.-msk_ref)*numarray.array([[[[-10.821132326230726, -0.30143008811679101, -0.40455863490564409, -13.204659439598881], [-10.542209025551957, -1.6142517436258894, -12.852890839500665, -0.26573262891244709], [1.4525623465890813, -16.416857751851431, -0.14257617049614474, 3.2430050809690374]], [[-0.40580383617125332, -0.49601716096747867, -2.4635766499779219, -10.991132171561315], [7.0450111280086514, -1.0474498834794941, 23.044125545229488, 4.0140448667611848], [-1.0220794878725301, 0.01160699766360666, 6.7508862974720723, -3.9768023688020251]]], [[[-1.0177997949802307, -1.3667660004598259, -7.8694774364267293, -0.81395157491126413], [-6.1705120096615245, 9.7294758938656347, -4.422249183127688, -8.0077953182888439], [-22.335375188096126, -7.0676199317744359, 3.9633699185296547, -6.9645500118958124]], [[0.70577089146490968, -15.393026382668209, -4.6664178359175414, 18.003921409647472], [1.9279544685923022, -8.7884884082778996, -5.5871855378619015, -6.1954174078882183], [-0.04129311104611344, 5.6987204177998096, -5.8896574577976573, -1.9689155656685351]]], [[[14.534657088093198, 2.834414650916397, 17.779244906828215, -20.665648323445186], [18.060091633552361, 3.3767388612304576, -4.0832495045431658, -2.7585509515585271], [-0.93644911561746869, -0.30797295441602601, -11.961589488859076, 15.835699185257985]], [[-5.1802840260935881, 8.6366904427200915, 1.0180269774904249, 6.6906344221522538], [-9.5190522917304001, -0.73203648319657932, 2.0409486960979466, 19.493937007922344], [1.5602510906162943, 0.45318963732908618, -1.16675826178875, 4.4970154032845926]]]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_mult_overloaded_expandedData_rank0_taggedData_rank0(self):
      arg0=Data(-2.54431206556,self.functionspace)
      arg0.setTaggedValue(1,-3.79955668696)
      arg0.expand()
      arg1=Data(-2.58821102962,self.functionspace)
      arg1.setTaggedValue(1,-0.733629696423)
      res=arg0*arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*(6.58521655088)+(1.-msk_ref)*(2.78746761879)
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_mult_overloaded_expandedData_rank0_taggedData_rank1(self):
      arg0=Data(3.22855076369,self.functionspace)
      arg0.setTaggedValue(1,-2.15227940214)
      arg0.expand()
      arg1=Data(numarray.array([-3.1609845879711775, 0.039514337730838456]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([3.9944952159708684, -2.5212639479439822]))
      res=arg0*arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([-10.205399205519777, 0.127574045257767])+(1.-msk_ref)*numarray.array([-8.5972697752800649, 5.4264644625175018])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_mult_overloaded_expandedData_rank0_taggedData_rank2(self):
      arg0=Data(1.69529493556,self.functionspace)
      arg0.setTaggedValue(1,4.19653106003)
      arg0.expand()
      arg1=Data(numarray.array([[-2.2257987111652633, -4.280537205809213, 4.6322346945409638, 1.5074631886752794, -4.9100797308893531], [-0.52015417144620013, -1.288735641855153, 4.9454698768775742, -2.9825531028096828, -3.433428787179321], [-4.5263639291271582, 1.6571499872310271, 1.2291625556187284, 3.7349821867623305, 2.6238268621102794], [-0.4470624147841038, -0.081930218673285538, 2.5730671661748916, -1.9045103078467518, -3.9473308599285986]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[1.3623423990229586, 3.8388124064188229, -2.3194658071474072, 3.9004425375488996, 4.9300059065560191], [0.82313827131608708, -4.3949019743858688, -0.92848180246848777, 0.78806224072270403, -4.9435549474481029], [-4.199054678791434, 4.3298205134767347, 0.093224119518392712, -2.3101879221820454, 4.7940584387014304], [-0.072351787242702414, -4.9619844496927232, -4.1818012068710333, 1.0638110327773829, -3.0879465009415985]]))
      res=arg0*arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[-3.7733852826070637, -7.2567730464703155, 7.8530040179652563, 2.5555947092993301, -8.3240333009562431], [-0.88181473256142584, -2.1847870069084325, 8.3840300362186859, -5.0563071702221274, -5.8206744344996286], [-7.6735218455357215, 2.8093579808105829, 2.0837930555163404, 6.3318963856126054, 4.4481603911131407], [-0.7579026476612325, -0.13889588478587259, 4.3621077356634803, -3.2287066796080981, -6.691890015803561]])+(1.-msk_ref)*numarray.array([[5.7171121918978116, 16.109695497171245, -9.7337103023753624, 16.368328256692433, 20.688922913001587], [3.4543253222786787, -18.443342641304508, -3.8964027227331348, 3.307127670430928, -20.745781883938854], [-17.62146338231927, 18.170226269167092, 0.39121791310303328, -9.6947753699468215, 20.118415141617156], [-0.30362652241279886, -20.823121862529327, -17.549058651511928, 4.464316041054583, -12.95866340291732]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_mult_overloaded_expandedData_rank0_taggedData_rank3(self):
      arg0=Data(-1.79538932421,self.functionspace)
      arg0.setTaggedValue(1,1.67233948388)
      arg0.expand()
      arg1=Data(numarray.array([[[2.006076901865419, -0.21180380381218367], [-4.7516938316925907, 4.4895326313297694]], [[-1.4536137685907145, 0.37356845302733444], [3.4608233559137282, -3.9965816103050509]], [[0.72700080266957912, 2.3240241936289818], [4.2646674443814039, 1.6300285776269661]], [[1.4450634931594823, -1.4217502578877426], [-4.6200423766436778, -3.5260862034215332]], [[-1.7957701759162017, -4.2794877311083113], [1.8749216910730482, -3.6011197035525608]], [[-2.0663557095947613, -3.035040215113435], [1.7109419450569572, 3.8030711274074775]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[-0.38773511596923793, 0.69166649005324743], [-2.4838005031008725, 0.2114193801043518]], [[-2.0219425518790732, -1.0837798424159129], [-2.3985472013086016, 1.933325258994703]], [[-3.5733445026210751, 0.78035338401677734], [4.197561801162033, -3.8411731530245721]], [[-2.9459009939039094, -3.9045136836735117], [3.3618947957571468, 1.9786572454639622]], [[-4.325266590787753, -4.4546197095344162], [4.1002239839438026, 2.0282127912929546]], [[3.6435123278846255, 2.1550798550760328], [3.6603646425060745, 2.430236386148561]]]))
      res=arg0*arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[[-3.6016890531438066, 0.38027028819044617], [8.5311403773125551, -8.0604589569603267]], [[2.6098026416454498, -0.67070081242512625], [-6.2135253061675044, 7.175419956456496]], [[-1.3052494798015701, -4.1725282264360617], [-7.6567384009278259, -2.9265359064208343]], [[-2.594451568417202, 2.5525952346976362], [8.2947747604016566, 6.3306975258502494]], [[3.2241066025660339, 7.6833465854989758], [-3.3662143878733017, 6.4654118709432451]], [[3.7099129810168852, 5.4490788007481008], [-3.0718069024901329, -6.8279933013404008]]])+(1.-msk_ref)*numarray.array([[[-0.64842474372262082, 1.1567011809935837], [-4.1537576514196308, 0.35356497700619943]], [[-3.3813743636469291, -1.8124478223066991], [-4.0111851887011749, 3.23317616580173]], [[-5.9758451012431282, 1.3050157754715819], [7.0197483361148443, -6.4237455282275162]], [[-4.9265465477104406, -6.5296723985617264], [5.6222294075994705, 3.3089866366570417]], [[-7.233314098086681, -7.4496364259299019], [6.8569664611059844, 3.391860332592151]], [[6.093189525929442, 3.60402513256067], [6.1213723170656795, 4.0641802637210489]]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_mult_overloaded_expandedData_rank0_taggedData_rank4(self):
      arg0=Data(-3.15397247664,self.functionspace)
      arg0.setTaggedValue(1,3.49662325766)
      arg0.expand()
      arg1=Data(numarray.array([[[[3.4812249215396491, 2.9178310230201774, 0.0022048924324336028, -1.9175704500433586], [-1.0012714533135236, 3.2233211055221496, -2.8814905448902692, 0.16733940052608176], [-1.5169811959524471, 2.6944106601477138, 2.6501612838465363, -2.8482883183224761]], [[-0.35065201828540538, 3.4216611888074411, -4.1671316880540754, 2.1007050688880629], [4.5637534106035496, -0.3341293870761417, 0.24400566710331173, -0.86330674582364519], [3.5806375506866921, -4.4233663735766493, -2.0215864104984282, 4.6922747017737123]]], [[[-1.3824925497200633, -4.7525633463330639, 4.2699493240029227, 0.94836142718456706], [-0.35386031512282656, 3.0255813601837485, -1.5818219570567695, -2.4612702362214076], [3.9930377569198576, 1.4034505424158432, -3.0925604826337283, -3.9332998843171185]], [[2.8746524747222226, 0.68128928538586031, -2.7118081103006455, -1.8965057915567982], [-0.80565267278230568, 1.052035416755035, 3.4919565150116245, 1.9160526947568348], [-3.4223662452644632, -3.9223936694503694, 0.74735008065621944, 4.2594567869818381]]], [[[-2.9139071364900113, 4.2483995068106992, 1.3152982254632128, -0.51807232918913293], [-3.8911314307131173, 0.54787947725167108, -3.24134612379373, 3.6338556624701788], [-4.7572631306876465, 1.5546972520595412, 2.1148618102259551, -1.5916000155023022]], [[0.84673640817317164, -0.0093692225283072972, 3.55050527148342, -0.86789022707078622], [0.5664074506031902, -1.5037271669245511, 0.68698074352069405, 2.3855508738877962], [-4.4221284869652209, 4.8905945172968757, -3.3480102460091876, -0.97135336491982294]]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[[3.2490441346387691, 3.4976673071078661, 0.94898237214549219, -3.446010746914161], [-3.597787522500786, 3.9541480139835965, 3.1410594152591624, -3.4554060648485354], [-0.50548745605709211, 2.4059006787835324, -1.8132319580611878, -2.1441562762643631]], [[-3.860203887104193, 3.0555115296459689, 1.7470014267813738, 0.1744170609704776], [-1.6392271041717867, 4.9774933065311995, 0.93275043099859545, 3.0176838849246117], [1.8096071150529376, -0.052996165393926375, 3.0888443048297507, 0.70508279050446276]]], [[[3.6144248084987858, -2.9288851473482937, 4.9112257641652395, 1.0911855838563085], [-4.9624043941844542, -1.1701931916302133, 3.2312159367546371, 3.4654715891420089], [-0.83201209919020247, 0.47660680687762103, 2.8904160662877887, 0.089187816351649296]], [[-1.76217311449716, -0.6711114190792431, -1.1866720427841404, -4.4791904415669324], [2.5515367007341494, 3.3749563907509863, 2.3612141901710544, 0.36844284036236807], [2.5339402749164242, -3.8964601891973469, 0.15190452124008047, 3.5051215703147527]]], [[[-2.8379026535899845, 2.3836421539106132, -3.5936308236197725, 3.5501740565469166], [-0.75560644750861528, -2.8891751372178174, -3.3460588337750696, 2.6265018600598449], [-4.2212713656260838, 0.025188779056204424, -4.0842941393654861, -4.040894900196391]], [[-3.7636587026068624, 1.8922933126298647, -1.1875519047740637, -1.204800193819958], [2.3968594480791525, 4.3792914005887287, -3.7838499193929378, -1.9178522390117503], [1.9225340862060971, 0.10950146671084759, -0.79342252598082652, -3.0175597743779359]]]]))
      res=arg0*arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[[[-10.979687587540324, -9.2027587381012168, -0.006954170045854388, 6.0479644214610051], [3.1579826053993578, -10.166266050199887, 9.0881418702914338, -0.52778386351722906], [4.7845169396192535, -8.4980970628798378, -8.3585357479172959, 8.9834229615333427]], [[1.1059468145515452, -10.791825213896811, 13.143018650670136, -6.6255659688177397], [-14.39395264722998, 1.0538348904758021, -0.76958715818880041, 2.7228457152281558], [-11.293232283700831, 13.951175796369652, 6.3760278978678988, -14.799305262243315]]], [[[4.3603434509813157, 14.989453987837633, -13.467302644566317, -2.9911058392501579], [1.1160656944736731, -9.5426003358641402, 4.9890229155068821, 7.7627785826233469], [-12.593931183522201, -4.4264443831094944, 9.7538506445810889, 12.405519577519946]], [[-9.0665747851880596, -2.1487676547388959, 8.5529681418259553, 5.9815270683645059], [2.541006355689396, -3.3180907488992046, -11.013534737981457, -6.0431774630610295], [10.794048942556737, 12.371121676005863, -2.3571215848067677, -13.434209471591657]]], [[[9.1903829079836008, -13.399335114265353, -4.1484144016885729, 1.6339858671729439], [12.272521435470322, -1.727996791769417, 10.223116461719442, -11.461080743524867], [15.004276978338146, -4.9034723425085582, -6.6702159413564086, 5.0198626427191]], [[-2.6705833263498784, 0.029550269981826326, -11.198195904435185, 2.7373018889288487], [-1.7864335097680863, 4.7427140968606407, -2.1667183570481283, -7.5239617978741657], [13.947271536068001, -15.424800501976323, 10.559532167432298, 3.0636217780518487]]]])+(1.-msk_ref)*numarray.array([[[[11.360683286341761, 12.230024853590422, 3.318233833553295, -12.049401323806398], [-12.580107527295237, 13.826165909925184, 10.98310140508714, -12.082253211008842], [-1.7674991953046206, 8.4125282690545049, -6.3401890360891491, -7.4973067036436545]], [[-13.497678690958098, 10.683972678608409, 6.1086058200489735, 0.60987075192207596], [-5.7317596170337382, 17.40441886046402, 3.2614768506220875, 10.551703656293212], [6.3275143257211353, -0.18530762448319954, 10.800524835558372, 2.4654088838537249]]], [[[12.638281848460183, -10.241207925233009, 17.172706230599232, 3.8154648909352855], [-17.351658618619595, -4.0917247298096013, 11.298344794977941, 12.117448557353944], [-2.9092328566829893, 1.6665144456873626, 10.10669604169604, 0.31185619295508671]], [[-6.161655496173946, -2.3466237964336956, -4.1493450640139402, -15.662041473471346], [8.9217625705601158, 11.800951009488184, 8.2562764536689546, 1.2883058047293705], [8.8602344987941688, -13.624453320093767, 0.53115288191177434, 12.256089603688341]]], [[[-9.9230764215177985, 8.3346985933026509, -12.565573117312795, 12.413621174863133], [-2.6420710779964818, -10.102356980248871, -11.699907139676638, 9.1838874901725305], [-14.760195633942397, 0.088075670679983759, -14.281237878829835, -14.129487089786426]], [[-13.160096553429655, 6.6166368072560893, -4.1524216099114373, -4.2127323785441533], [8.3809144914956999, 15.312732163369029, -13.230697631644301, -6.7060067436838109], [6.7223773994723741, 0.3828853752490331, -2.7742996574959116, -10.551269688469183]]]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_mult_overloaded_expandedData_rank1_taggedData_rank0(self):
      arg0=Data(numarray.array([3.8273818212730006, -4.5520083685936363]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([1.72269021376417, 0.70691097169829931]))
      arg0.expand()
      arg1=Data(0.183762749507,self.functionspace)
      arg1.setTaggedValue(1,-0.0270620652542)
      res=arg0*arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([0.70333020688977776, -0.83648957359109533])+(1.-msk_ref)*numarray.array([-0.046619554977702406, -0.019130470845027645])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_mult_overloaded_expandedData_rank1_taggedData_rank1(self):
      arg0=Data(numarray.array([4.0505624475932525, 0.2000246605205156]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([0.052522036452478993, 2.2365254316340053]))
      arg0.expand()
      arg1=Data(numarray.array([0.89989683782981356, -4.1812985044019335]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([0.53506112756503743, 0.30884630653134426]))
      res=arg0*arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([3.6450883380213579, -0.83636281387793632])+(1.-msk_ref)*numarray.array([0.02810250004627541, 0.69074261902358303])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_mult_overloaded_expandedData_rank2_taggedData_rank0(self):
      arg0=Data(numarray.array([[-3.6645609541962374, -0.94947120386556882, 2.3472072910041986, -4.0543733606410495, -4.7717043295237005], [-0.1979820241597432, -1.3431554631498588, -1.8652776092700094, 0.67233515121340925, 2.8383905051754219], [-4.121998345942707, 4.6266515007468065, -0.786182000587897, 1.5665442054657088, 3.7707972359365947], [0.93339621993556587, -3.6204830468167715, -4.9337289254327672, 1.7162993806811366, 2.2188183776520276]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[-2.3547433134403661, 1.3976950523092366, 0.13258472582283432, -3.9335955779851894, -3.2866216379575111], [4.160944724982178, -2.5217866229304766, 2.7869566450073782, 1.0088243769870022, 1.0295492619628979], [-1.3507227975925664, 1.672158146626181, -2.4152665376147731, -4.7550238486618754, -2.6683711845694424], [-0.66174718644758812, -4.0356900661020143, 3.0647342700709537, 3.5371584854380256, -3.1457594816411838]]))
      arg0.expand()
      arg1=Data(0.751618640206,self.functionspace)
      arg1.setTaggedValue(1,-2.6765230481)
      res=arg0*arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[-2.7543523213457584, -0.71364025516439489, 1.7642047523466848, -3.0473425922133197, -3.5865019196227035], [-0.14880697978421981, -1.0095406827982432, -1.4019774202866204, 0.50533963211786126, 2.1333872118741768], [-3.098170791709717, 3.4774775096993498, -0.59090904623647533, 1.1774438255350586, 2.83420149096801], [0.70155799760158943, -2.7212225445380689, -3.7082826260798374, 1.2900026066943215, 1.6677052518753728]])+(1.-msk_ref)*numarray.array([[6.3025247507844924, -3.7409630217221883, -0.35486607449094731, 10.528359226384925, 8.7967185643802299], [-11.136864458288432, 6.7496200186658157, -7.4593536944200522, -2.7001416964916873, -2.7556123287989109], [3.6152406993517565, -4.4755698195145657, 6.4645165552326667, 12.726930925212693, 7.1419569763882667], [1.7711815965428568, 10.801617476913664, -8.2028319101494276, -9.4672862110603528, 8.4196977563943953]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_mult_overloaded_expandedData_rank2_taggedData_rank2(self):
      arg0=Data(numarray.array([[-1.7054936511978589, -4.8465104031194173, 1.0464662990684293, 4.8431626906547827, -0.21288025865812976], [-2.7471393889787676, -3.9683545446167079, -1.7238558705884399, 2.507775775292834, -3.1510675627245224], [1.8947853101892465, -1.0433740177237216, -0.91736414420281065, 2.2472348260223249, -0.4904392219748992], [1.6043695836622742, -2.4102971267223805, 0.76240673944957571, -4.3822369784791881, 4.5846201490007843]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[2.2648286658072072, 1.7736424171585332, -4.5464419524438595, -3.3902708387253289, -2.763788913243034], [1.1953623199014114, -1.7749143093752107, -1.7049023861920096, -3.9810696615138683, -3.6099151954180853], [-1.7290986720006285, -3.6621286777419018, 0.97849385055978733, -4.8616831341790947, -3.3609922362702713], [-2.6874716401932988, -0.48814498094636427, 2.2163565874370672, -2.3455993348952942, -2.4922140191001385]]))
      arg0.expand()
      arg1=Data(numarray.array([[3.5691299286851024, 4.9512794573102905, 1.8438692370037204, 1.1360135413814803, -2.6203959933604235], [1.9834881274719054, -1.4099192763848736, 4.2929027097467287, -3.2164450171588053, -0.63196137753241999], [4.5922165417466658, -2.9041458994985292, -3.0811838793254354, 4.210894493452253, 0.5304496717155196], [-0.34903156971157756, 4.4748437574863953, 3.5377759199181344, -0.11858203827521585, -1.9190934036562926]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[-1.5937072758425908, -0.33837739684422186, 3.064357378499448, -2.3889480357871151, -0.46048301032346561], [4.66972555684303, 1.0088008101323727, 0.04516901885279978, 3.4230810523599828, 3.781546081097737], [0.20243258925208973, 2.2115251412678507, -1.6029450150263926, -0.01871320336909843, -4.001857264241786], [-2.8019971415916212, 3.4074385941335592, -0.73623535581384925, 2.4304097679967498, 0.22963562168701301]]))
      res=arg0*arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[-6.0871284336727092, -23.996427398605785, 1.9295470164134116, 5.5018983996973985, 0.55783057685329385], [-5.4489183625498105, 5.5950595679846131, -7.4003455380619201, -8.0661228965921961, 1.9913529976371145], [8.7012644445096452, 3.030110375215652, 2.8265676125888741, 9.4628687543915397, -0.26015332429300014], [-0.55997563418315377, -10.78570305120104, 2.6972242040080081, 0.51965459311308537, -8.7983142862171348]])+(1.-msk_ref)*numarray.array([[-3.6094739232338138, -0.60016050405059784, -13.931922942890777, 8.0991808609592102, 1.2726778386687718], [5.5820139749307947, -1.7905349932132533, -0.077008768024090221, -13.627524126453293, -13.651060660328431], [-0.35002592124543708, -8.098889641384206, -1.5684718399887911, 0.090977665206009251, 13.450211195778431], [7.5302878539301688, -1.6633240476092326, -1.6317600807620978, -5.7007675353362028, -0.57230111565314967]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_mult_overloaded_expandedData_rank3_taggedData_rank0(self):
      arg0=Data(numarray.array([[[3.7443711174968008, -4.6319206543741185], [0.003209457295509921, -1.2266210875995052]], [[-0.9856001464550932, 1.5866448313638992], [2.9076526660133055, 4.2009935556589646]], [[-3.8984765467086344, -0.72907122581068595], [-4.0551468474518799, -1.3673035501519095]], [[-1.033398996946715, -2.5895775417481559], [4.5862875363514473, -4.2536226457012987]], [[-3.6717813944954569, -1.1910054496262958], [1.5000455665513046, 2.9336310049448144]], [[-2.407603499615194, 3.0430598937691595], [2.7325999672429653, 1.806437421501343]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[-0.8587624389803219, -1.2899872191655479], [2.9569671883288171, 1.8778449324709188]], [[3.7856624464111768, 3.9367936159245911], [-2.3094222189349409, 4.6663421852019997]], [[-0.032665255404467963, -0.043214161832270115], [-1.3000664769518835, -4.1222916886261807]], [[2.5058475043821886, 0.3901053088682751], [-0.98552091597489344, -0.74494670023705911]], [[4.1726538654963328, 0.93041024211013124], [0.47426324295652744, 3.9407235132118092]], [[-3.3219207668679172, -2.9223937690758008], [-3.6581597158183965, 3.4173960537624755]]]))
      arg0.expand()
      arg1=Data(-4.69364339659,self.functionspace)
      arg1.setTaggedValue(1,-3.30034890301)
      res=arg0*arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[[-17.574742770035272, 21.740583792949348], [-0.01506404804171982, 5.7573219679340779]], [[4.6260556190907947, -7.4471450354707915], [-13.647484735421605, -19.717965661651657]], [[18.298058700234641, 3.4220003446728469], [19.033413222760537, 6.41763527930972]], [[4.8504063780655677, 12.154553528793743], [-21.526398209876252, 19.964987842597594]], [[17.234032496009444, 5.5901548639456502], [-7.0406789680332817, -13.769417794401956]], [[11.300432267584892, -14.283037975828936], [-12.825849791782279, -8.478773074789645]]])+(1.-msk_ref)*numarray.array([[[2.8342156734327655, 4.2574079036667341], [-9.7590234162302334, -6.1975434628986221]], [[-12.494006902169881, -12.992792491683721], [7.6218990868431185, -15.40055731198912]], [[0.10780673984059622, 0.14262181159752199], [4.2906729710449962, 13.605000852434422]], [[-8.2701710621918814, -1.2874836281808204], [3.2525628739287034, 2.4585840249264477]], [[-13.771213607620899, -3.07067842189513], [-1.565234173628363, -13.005762523884524]], [[10.96349755881042, 9.6449190699253222], [12.073203405127536, -11.278599317177205]]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_mult_overloaded_expandedData_rank3_taggedData_rank3(self):
      arg0=Data(numarray.array([[[-3.304122256951838, 2.6798852943533813], [0.31332631416387002, -3.109146156722721]], [[-1.4038751016523889, 0.49696658739359822], [-1.3799527883723961, 2.4412868717030065]], [[-1.2642050194054799, -0.23057449884432923], [2.1418773395433641, -2.1930221142543758]], [[1.3421655017217873, -4.104778106032386], [-3.5368134327885778, -0.65517723819063267]], [[3.2084028309131227, -1.4486054840913134], [0.61604684195723181, 2.5672568580560728]], [[-4.9087505032005927, -2.4480237279613801], [3.1489150029110338, -4.598213413999729]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[2.9629749299965553, -0.16899083295023054], [1.0596950278282229, -0.47099246533104733]], [[0.98163881995146696, 3.6759647214984064], [1.844693417458255, -1.2706806482358877]], [[-1.2871341130725744, -0.020429968385329289], [1.0318928008467054, -3.8130148624348692]], [[-4.7672702014694854, -4.1395269501114704], [-3.5871259434338065, -1.4942346387976091]], [[-0.15879784084443482, -2.3967188551730878], [-1.6187590548304409, -3.645688289061475]], [[1.7105653298916144, 3.8421632179132121], [3.3480762653970402, 4.5610395282786236]]]))
      arg0.expand()
      arg1=Data(numarray.array([[[-2.0444026065036791, 1.6184790271764324], [0.60952262921762212, -2.2029251876892966]], [[4.875159971482276, -4.915409184414341], [1.0711414034526223, 0.26509812555141288]], [[4.7804472710508144, 0.24766874715916742], [-2.3990963276483281, 2.3313278932397736]], [[-1.4868184802561011, -0.2627726214655679], [-0.020654077201388787, 0.00036099260437705283]], [[-3.1226693543942652, 0.19874398149199113], [-2.3480608573548256, -3.7552582490114728]], [[2.0666935571397049, -3.7309591313719812], [1.4854020755350881, -0.86230906049862366]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[-1.8640386794705419, 4.3022630879288055], [4.2424324980753152, 1.5386252617530438]], [[-1.5598338183333693, -3.9476821047830821], [4.8256799248908351, 4.6203582319908705]], [[-4.834277209512539, 4.8405770573361462], [-0.29044054079314563, -1.1036788159542055]], [[0.84096341939734476, 1.9936067523607068], [3.1345295703523952, -4.2976034775820935]], [[-2.4573752401881399, 1.6374297569864202], [2.9827541853076642, -0.69812389823252907]], [[-4.5207179800543411, 2.4433538210396009], [1.7905735491856181, 3.2609806873186713]]]))
      res=arg0*arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[[6.7549561543191565, 4.3373381441494878], [0.19097947881222874, 6.8492163808518551]], [[-6.8441157005363378, -2.4427941280215451], [-1.4781245664355678, 0.64718057362173964]], [[-6.0434654350656682, -0.057106097255627916], [-5.1385700595716557, -5.1126536254528876]], [[-1.9955564715221552, 1.0786233034565988], [0.07304961768772418, -0.00023651413754300116]], [[-10.018781196644214, -0.28790162151944082], [-1.4465154758968304, -9.640712493546344]], [[-10.144883038570949, 9.1334764816527905], [4.6774048810076279, 3.965081088998275]]])+(1.-msk_ref)*numarray.array([[[-5.5230998758151006, -0.72704302280011979], [4.4956846241072785, -0.72468090525369411]], [[-1.5311934287491595, -14.511540148873186], [8.9018999922065696, -5.8709997933081794]], [[6.2223631084128819, -0.098892836248127752], [-0.29970350311847083, 4.208343728587904]], [[-4.0090998498188473, -8.2525888793213511], [-11.2439523422715, 6.4216279800202285]], [[0.39022588228645105, -3.9244587725908406], [-4.828360345800176, 2.5451421201002762]], [[-7.7329834428986066, 9.3877641795460551], [5.9949768014761071, 14.873461815813654]]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_mult_overloaded_expandedData_rank4_taggedData_rank0(self):
      arg0=Data(numarray.array([[[[-1.7190448457863692, -3.1729952230272973, -1.0425315051697837, 3.9543807611717838], [0.16754228263986004, 4.6482841273611371, -2.8613522778678591, 1.040956599660281], [4.817132222569068, -2.5260830411328508, -2.8007790273994679, -2.6375034989982691]], [[0.050900119635550745, -4.3261872294587009, 0.21049915584286083, 2.0261928833607232], [4.6256830566236147, -0.54437918741556324, 4.173364609522114, 1.8407574291200604], [-3.8153487785618267, 0.46680613801020954, 4.0888635786646752, 2.009029414674492]]], [[[-0.84418938956408507, -4.2992911285438851, 3.9199081200434307, 4.3858040789664017], [2.047324914685607, -0.69199866849278724, -2.7806211867302477, -2.3939525741722747], [0.31796825654209293, -4.0255537261167715, 0.90387805280546996, -1.9199510920289198]], [[-2.4537517324312272, 4.7407663295878777, -2.1267037090581544, -4.4456110769259745], [2.9111660922049083, 0.0034106609879680505, -3.8250424037139008, 2.925537571669742], [2.5396668371714313, -0.10652376409898334, 3.3710608130822148, -4.9771878795538811]]], [[[0.095698963044959839, -2.9129707907640268, 1.275239366291804, -3.9849707401962564], [-3.150701748264356, 0.62453607405104083, -2.0222836102265349, 0.3423927791230339], [-2.4347101312150787, -4.1063431924580884, -1.2753944364859562, -1.7328387807260959]], [[-4.2609926063268242, -3.6471393424637011, 0.11706582726151282, 4.2130803364279323], [2.4143425512799501, 3.493537268796544, -4.5687243034731875, 3.0405306352096257], [-3.7807392817769427, -3.1626461996690782, 1.8983261318723024, 1.0529036345045117]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[-1.2915906426322965, 1.6827749165843588, -3.4690858366103363, 0.35551024660497443], [3.0612478006657255, 2.9912857768509298, -2.0916595185819498, -0.26798299939989434], [3.6493910926336923, 0.079590513116919226, 2.7488227766714495, 2.0022612393632642]], [[2.2816057181957685, 4.96068135932315, -2.6793606017679528, -0.94597322991091826], [-2.4280419083304472, 4.8106105450717092, -0.20886799407173839, 2.8799577881481895], [-0.71581066130397986, -3.2543666317018829, -3.039782590738306, -4.3089455661315759]]], [[[4.6697815043142104, 0.016299766983602915, -1.3693093315807792, 0.64238240271877611], [-0.51799538273935397, 4.6397982104486388, -0.2910156357961311, -4.9338439987880411], [3.2709559837085784, 2.4656830608175468, -0.46296666457012137, 2.3671973203619023]], [[4.7592424260119746, -1.6312239473212697, 3.6115235998794919, -2.8972205907270911], [-2.5640964977402145, 1.4972074427813702, -4.7142668280783697, 3.114307974708316], [3.833394664034147, 3.0161629679139921, -1.7819159507065718, -2.1906822323795971]]], [[[-0.28853093500351257, -2.5940984356796646, -4.061971229822932, -1.7559170709524197], [0.98053911945804373, 3.1210824842196665, -0.04719949025923853, 1.1830268742470729], [3.654353863026941, 0.96514501984880852, -1.2684205506260469, -0.42012007172000665]], [[-2.302778771991064, 0.4192765667143572, -0.29698974639200415, 3.0320569644906801], [4.4991560216996618, 1.0092180100670376, -1.8138975634237395, -0.54030423499564861], [-3.5023763812016528, -4.389212309957812, -2.4186165591124329, -2.8947226596135991]]]]))
      arg0.expand()
      arg1=Data(0.447062126416,self.functionspace)
      arg1.setTaggedValue(1,-0.201753069462)
      res=arg0*arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[[[-0.76851984416111474, -1.4185259915132782, -0.46607635155651012, 1.7678538717465881], [0.074901809141507417, 2.0780717861621767, -1.2792022337678646, 0.46537227095052808], [2.1535573746470664, -1.1293160558713602, -1.2521222276095578, -1.1791279226908793]], [[0.022755515719080216, -1.9340744620740298, 0.094106200219808339, 0.90583409896349887], [2.0679677034189896, -0.24337131710242452, 1.8657532566407686, 0.82293293047781646], [-1.7056979379611974, 0.20869134468272094, 1.8279760461013279, 0.89816096215596397]]], [[[-0.37740510359604812, -1.9220502340067622, 1.7524424595005832, 1.9607268975851442], [0.91528142982308347, -0.30936639621318285, -1.2431104204960284, -1.0702455283476726], [0.14215156490238448, -1.7996726087982009, 0.40408964430764921, -0.85833741781649531]], [[-1.0969794671967856, 2.1194170761452655, -0.95076868242758505, -1.9874643412674871], [1.3014721035302601, 0.0015247773537638931, -1.7100315906343597, 1.3078970476995475], [1.1353888566131645, -0.047622740491890407, 1.5070736153729998, -2.2251121970035506]]], [[[0.042783381914652308, -1.3022789159056387, 0.57011122278335791, -1.781529492816279], [-1.408559423280564, 0.27920642528853923, -0.90408641100338916, 0.153070843904107], [-1.0884666884667356, -1.8357905194127355, -0.5701805487940993, -0.77468659004690799]], [[-1.9049284152258261, -1.6304978697759922, 0.052335697666138908, 1.8835086539634271], [1.0793611148709963, 1.5618282001004999, -2.0425036021175758, 1.3593060912087376], [-1.6902253427343716, -1.4138993351244276, 0.84866971714522421, 0.47071333775235175]]]])+(1.-msk_ref)*numarray.array([[[[0.26058237663984468, -0.33950500463505273, 0.69989871576431084, -0.071725283477851232], [-0.61761614016901156, -0.6035010871185823, 0.42199872814393574, 0.054066392692641185], [-0.7362758546072079, -0.016057630321417549, -0.55458343260133502, -0.40396235090691862]], [[-0.4603209569487216, -1.0008326908678382, 0.54056922560302778, 0.19085300276368955], [0.48986490778875735, -0.97055544345590394, 0.04213975891640577, -0.58104032368074066], [0.14441699807191355, 0.65657845710152674, 0.61328546817950214, 0.86934299411299421]]], [[[-0.94214275221364785, -0.0032885280204620702, 0.27626236068978643, -0.12960262151707755], [0.10450715843496125, -0.93609353064367873, 0.05871329778339094, 0.99541817100361363], [-0.65992540978926806, -0.497459125841128, 0.093404945635742975, -0.47758932540593474]], [[-0.96019176776309789, 0.32910443835246805, -0.72863597171120675, 0.58452314708855579], [0.51731433881661026, -0.30206619720293565, 0.95111780282909097, -0.62832119314830781], [-0.77339913992927434, -0.60852013677515515, 0.35950701257887541, 0.44197686459909752]]], [[[0.058212001771784753, 0.52336732188571156, 0.8195151636843121, 0.35426165878589405], [-0.19782677707851681, -0.62968797123632425, 0.0095226420368570933, -0.23867930313573207], [-0.73727710876708252, -0.19472097023074528, 0.25590773945786, 0.084760514012231086]], [[0.46459268554181277, -0.084590334288234495, 0.059918592933415553, -0.6117267993705251], [-0.90771853736767716, -0.20361283128765473, 0.36595940111091835, 0.10900803785384955], [0.70661518531968037, 0.88553705605568112, 0.48796331465326892, 0.58401918181910339]]]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_mult_overloaded_expandedData_rank4_taggedData_rank4(self):
      arg0=Data(numarray.array([[[[2.8680555154398419, 2.0400288398940516, 1.640185146938463, 1.5096740672960092], [2.2121135769841906, -1.5490892976229276, -2.5141554458850344, 3.8342399822052595], [-1.7407227589515806, 3.7447943647694473, -4.6665256421514325, 3.6932445944539722]], [[4.2907606231222921, 4.6715137097410278, 1.6891935845953761, -2.7927302856532865], [4.2670298597282184, -4.7010810380008881, 0.23565827351810587, -0.60145774219904524], [-4.7587995348486389, 0.38451877123728639, -1.6591877066111085, 1.9323607961209177]]], [[[-4.8778582759614952, 0.41800871640264425, 3.7282312153199975, 0.27240901461459721], [1.1449458463083664, 3.0818113002992149, -4.0793821931070919, 2.8158986117968867], [2.0714321972511174, -0.66597843385970457, -2.3350700921440204, 1.5508413116997968]], [[4.2012049909550804, -1.8867472589604803, -2.574570877097202, 1.4189962443023898], [-3.9121606243320528, 3.3296364791359405, -0.37850715573887417, 4.6167598071568996], [2.9805359805676668, -1.7700046075497724, 1.0449805829704717, 1.5016027333205439]]], [[[1.3283341123968935, -0.28358268147310461, -3.3016493353540834, 1.125565758971443], [3.0200919603642262, 1.8433825437830365, 0.29184322944725061, 0.89831772010928113], [0.14158404561088922, 1.3779453632317367, -1.3457960983498793, -4.4244467396645]], [[2.4120271066038077, 4.5763093241546411, -0.30670517295721123, 2.2737782994944986], [4.2482972535010521, -0.20960732717534469, -4.7431933640871833, -0.6808757881046823], [4.1080423310509655, -4.3682781696425383, -2.92296578559881, -4.2136083609475943]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[-4.1536996832173898, -2.2419682922125417, -0.043802532118516702, 1.9775528363596013], [3.6989422251705619, -2.9492747375611006, -2.9418363570439245, 4.4703574613295238], [0.10494338048399054, -0.26669086231523131, 1.3210228848573289, 4.4657993006878929]], [[-4.3061257540762092, 0.18278999873401602, -4.9691495596286792, -3.4583888786093442], [-2.8136212582618656, 3.0401263694267922, 1.7746819397445002, -1.5937260075868087], [3.4295817006814691, 3.8305935939943616, -1.9117683444889422, -2.5112093900686396]]], [[[1.3393314723774319, -1.5632181000052836, 2.8516291011454085, 0.96028495522943036], [2.0775605994885762, 0.84224540785127733, 2.261376358592929, 0.76665012300458191], [-4.6361766014611625, 4.8123989186884319, -3.0701443549428675, 1.5847948433189707]], [[-1.2347588245046115, -3.7598435351862047, 3.2538874880772752, 3.7555596975238537], [2.3473083143498208, -1.1384760828771032, 0.87529112975751033, -0.13511125065736618], [-4.0836169276956502, 1.3392940981900123, -0.16687823875832031, -1.9104919759042751]]], [[[2.2504305283326893, 4.8146047674799686, -3.0481352092799452, 2.0752105907170204], [0.87767128631066527, -1.4117559991644582, 3.3022714985388859, -4.3278709958864123], [2.4479238113976622, -0.11873834446334364, -0.0020982165709302336, 4.3563815466432825]], [[-4.0076601394711595, 4.9882672665244616, -0.23512091819119441, -4.3274033246189667], [0.106050344357282, -0.40157778220597873, 3.6834220825172572, -2.1037971802148681], [1.9595885444100247, -0.54715498169332655, 4.3618541160691038, -2.8344936470424988]]]]))
      arg0.expand()
      arg1=Data(numarray.array([[[[-0.6877644775283418, -2.2748901437702251, 0.75136227068943739, 0.54390983361969525], [4.6798581940426445, 0.85193543064995847, 3.6176634924942448, -1.1954932760040649], [-1.7294515666796482, 1.4939459445086944, 0.70557056518230432, -4.2301702307575964]], [[3.4667419026322932, 3.4626939743352434, -2.247024764719725, -4.3904717796285588], [2.850218632416782, -4.373428719833595, 2.7870084082734259, -2.8679149026298925], [2.755852667768961, 4.0114964526093608, 1.9660653291580896, 2.0231157322642073]]], [[[1.1331018911654001, -2.5946422168894712, 3.3281440837407761, -1.4659291839542887], [4.9682756913562258, 4.3030710802501133, 0.46749727788872786, 4.9685136830149741], [2.5076209132852227, -0.87601084069697599, -3.1820171989848731, -2.2101995587677403]], [[0.16267043236319534, 0.52441289089565135, -4.9502368461030208, 3.9107772486011374], [-2.6810096214600856, 3.9841141053036626, -0.95937935710436495, -0.9711584276472891], [-1.0351273257663052, -1.7682434946573933, 0.34370322844275325, -1.3712053876711181]]], [[[-4.7510047640509923, -3.4200169091179022, -0.43218888971286251, 1.5737747366695398], [4.2905465979876105, 3.3956488255156323, -3.8793324037004959, -3.0878520770099427], [-2.6335287222865036, -4.7540981754543541, 2.8604792505866783, -4.061558082709106]], [[-4.3170334129271595, -3.4692017862487146, 3.000717869318942, 4.4333041875599815], [2.4486899405704481, -1.6286489287097083, -3.001328134699579, -4.9948069259508143], [-4.5294647348097126, -3.5621594110932109, 0.054499652669305121, 0.31347153200218081]]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[[4.8770345803409167, -1.359590348870011, -4.7907381162281801, -1.6195886745722055], [1.279755407943779, -1.486414757307406, -4.8634720090161423, 2.3021398812687641], [0.34716950716454242, 0.046377840375470214, -3.6630268256689611, 0.25052380370799465]], [[3.4650026724915062, 3.6480724730400951, -2.1254343134595413, -3.9410878856250218], [0.75275151132314022, -2.12641026545346, -0.092378743730891166, -0.64749248802068671], [-1.8281014076270443, -2.1919977696314588, -2.2960468988950087, 1.6558006705308781]]], [[[3.1323795658233813, -3.0120365159856788, 2.3469113475407823, -3.5149507352609177], [1.0077269591359723, 2.9409868253816596, -4.4516362767771938, -3.9551085662768628], [-3.9477221532183027, -2.4835877486136382, -4.8953069200918033, -3.2885535304954683]], [[-3.293689490126277, -2.0264322135735888, -3.3380054806525883, 1.9356715857363902], [0.69306129508112235, 3.5058624107236227, 0.902969603036885, -2.6357617531577091], [2.4118437662875367, 4.0702227531597686, 1.6787466288535953, -3.8535138606901542]]], [[[2.8362822126004703, 2.5861086828489448, 4.1490653991232023, 2.5721003949748047], [0.76735984275115499, 4.6651083907971618, -1.7730500382727543, 0.47192829833828664], [-4.2384958985464039, 4.7908935635162884, -2.1698622777980034, -0.76705531632890178]], [[1.1064747676018545, -2.5384823704232904, -0.029896718222782503, -1.3545366161932151], [3.4778870993564954, -3.8252341615326002, 0.41480611671119938, -0.17554053014023463], [2.8455983091241999, -0.78538750591266915, 2.4919675608182121, 0.60720672856616975]]]]))
      res=arg0*arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[[[-1.972546703098762, -4.6408415008819848, 1.2323732363547721, 0.82112657076294093], [10.352377849402449, -1.3197240578856304, -9.095368371033878, -4.5838081173123326], [3.0104957026237305, 5.5945203542663284, -3.2925631347705018, -15.623053338365605]], [[14.874959646342699, 16.176022373744736, -3.7956598169914937, 12.261403507274759], [12.161968011276135, 20.559842825858212, 0.6567815897741599, 1.7249296221547699], [-13.114550393490312, 1.5424956867800848, -3.262071424533425, 3.9093895270428169]]], [[[-5.5271104373287683, -1.0845830626060791, 12.408090662084932, -0.39933232449576839], [5.6884066161331379, 13.261253081105549, -1.9071000707453143, 13.990830782695703], [5.1943666982792625, 0.5834043277314952, 7.4302331940374655, -3.4276687828376744]], [[0.68341183232507707, -0.98943458446091159, 12.744735618710342, 5.5493782280682478], [10.488540274531529, 13.265651662059126, 0.36313195173216284, -4.4836051951436966], [-3.0852342389152612, 3.1297991328134973, 0.35916320002694152, -2.059005758070807]]], [[[-6.3109216962490873, 0.9698575657710139, 1.4269361604678918, 1.7713869559295334], [12.957845286150464, 6.2594797697728861, -1.1321568967953179, -2.7738722378542802], [-0.37286565073379913, -6.5508875372157869, -3.8496218148503383, 17.970147417000302]], [[-10.412801612094658, -15.876140481783928, -0.92033569310526042, 10.080350856731974], [10.40276274920109, 0.34137674885383046, 14.235879691955207, 3.4008431021374861], [-18.607232867600835, 15.560503192265193, -0.15930062007939771, -1.3208462681634405]]]])+(1.-msk_ref)*numarray.array([[[[-20.257736991402322, 3.0481584525647523, 0.20984646020748707, -3.2028221771361522], [4.7337413163336217, 4.3838454932647473, 14.307538777589144, 10.291388195254084], [0.036433141682808055, -0.012368546242052303, -4.8389422645549951, 1.1187890274048335]], [[-14.920737245958568, 0.66683116272859766, 10.561600982747164, 13.62981451326759], [-2.1179576544475349, -6.464555920224889, -0.16394288811549801, 1.0319256178756586], [-6.2696231345877464, -8.3966526144001943, 4.3895097787694803, -4.1580621919190905]]], [[[4.19529453593921, 4.7084699996656667, 6.6925206964556807, -3.3753543094436838], [2.0936138253433305, 2.4770326482288092, -10.066825033358594, -3.0321844688326323], [18.302337075820574, -11.952014995896109, 15.029298906432604, -5.2116826771076132]], [[4.0669121631115148, 7.6190680576977288, -10.861494268628828, 7.2695301950336759], [1.626828540297973, -3.9913405044667081, 0.79036128397884575, 0.35612106690399015], [-9.8490460309690171, 5.4512253116255813, -0.28014628074455561, 7.3621073098844443]]], [[[6.3828560782030852, 12.451091193665871, -12.646912328672581, 5.3376499800391457], [0.67348970025055599, -6.5859947574603446, -5.8550926068713975, -2.0424447945163005], [-10.375515034563072, -0.56886277023201293, 0.0045528409879121929, -3.3415856253098535]], [[-4.434374821448567, -12.662628515031923, 0.0070293438394440364, 5.8616262562326442], [0.36883112452250499, 1.5361290510068082, 1.5279060102572626, 0.36930167232244865], [5.5762018485523184, 0.42972868641981388, 10.869598962265604, -1.7211236145622673]]]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_mult_overloaded_Symbol_rank0_taggedData_rank0(self):
      arg0=Symbol(shape=())
      arg1=Data(2.48459201133,self.functionspace)
      arg1.setTaggedValue(1,2.15861638544)
      res=arg0*arg1
      s0=numarray.array(1.14942224066)
      sub=res.substitute({arg0:s0})
      ref=Data(2.8558453168,self.functionspace)
      ref.setTaggedValue(1,2.48116168248)
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_mult_overloaded_Symbol_rank0_taggedData_rank1(self):
      arg0=Symbol(shape=())
      arg1=Data(numarray.array([-2.8792731270881342, -4.3433575296530202]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([4.0424298611143534, 4.0356003239449674]))
      res=arg0*arg1
      s0=numarray.array(3.06118418131)
      sub=res.substitute({arg0:s0})
      ref=Data(numarray.array([-8.8139853502994896, -13.295817363526861]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([12.374622344879226, 12.353715873730666]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_mult_overloaded_Symbol_rank0_taggedData_rank2(self):
      arg0=Symbol(shape=())
      arg1=Data(numarray.array([[-2.2268992540360575, 4.5621274179501317, -3.8244854334103904, -4.7428791182239403, 4.7955192310366357], [-4.6884092246319211, 4.8672474871456668, -1.3555693918974585, 1.449022892916096, -2.0130426749377506], [-3.8121452535992981, -0.090968931574265, -1.1337497939391716, -2.8088760608864884, 3.0978230733979668], [4.9755696722807929, 4.9219898764178112, -0.058138158034268805, 1.2698381101178482, -3.9409770384072673]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[-3.9483142165473728, -2.9477962947765048, 4.2768567079872657, -0.32493250394391104, -3.9730254840815391], [-4.248840701239585, 3.2390068596255475, -3.1150026644847637, -1.0815908078392091, -4.675971789311248], [-4.5983788851073015, -4.4082276715978814, -1.2151245736214356, -2.1259811913232349, 4.4833611299806648], [2.1265466795893007, 1.7342130659349539, 0.17956548777356218, 4.9852602093939691, -3.8660803834968682]]))
      res=arg0*arg1
      s0=numarray.array(4.6510569065)
      sub=res.substitute({arg0:s0})
      ref=Data(numarray.array([[-10.357435155557832, 21.218714235577124, -17.78789938886127, -22.059400679496729, 22.304232839753009], [-21.806058104709404, 22.637845040719917, -6.304830382420862, 6.7394879337699374, -9.3627760363427903], [-17.730504510323474, -0.42310167747515492, -5.2731348093405428, -13.064242402480705, 14.408151400633946], [23.14165768801951, 22.892455008422282, -0.27040388145631067, 5.9060893121969489, -18.329708472830937]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[-18.363834105893673, -13.71036831576707, 19.89190392978298, -1.5112795666137508, -18.478767617426758], [-19.761599888106709, 15.064805224653156, -14.488054656408989, -5.0305403968044216, -21.748210885262072], [-21.387321872269133, -20.502917757397324, -5.6516135403964229, -9.8880595029870424, 20.85236774791759], [9.89068962109247, 8.0659236576544231, 0.83516930207776197, 23.186728927587417, -17.981359868736391]]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_mult_overloaded_Symbol_rank0_taggedData_rank3(self):
      arg0=Symbol(shape=())
      arg1=Data(numarray.array([[[-3.1040647125357013, -0.79064169069550694], [0.13413222355194065, 4.3926743356052054]], [[-3.8810438362766018, 0.45585821823464734], [2.2905186393536248, -0.06193971785905994]], [[1.8257326749027172, -2.8778552105775423], [-3.7710881145559738, 0.97750172722843942]], [[-1.1413427821362774, -2.4397446910641021], [-1.8662828868757697, -4.9389817296918324]], [[4.0981390349739151, 2.0341172857889678], [0.15316635612617002, 2.4104946768985123]], [[1.6068177768547587, 3.4781628302132983], [3.2544489066129039, 0.038277143669370517]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[0.693985317225013, -0.032839697125282896], [-1.7155971133665071, 4.0969153094773318]], [[2.8121187545687274, -4.492722956902182], [0.86461903380325467, -2.3129683384354536]], [[-2.7103119909333753, -0.13738816596957726], [4.3558107347491752, 1.7784469990629495]], [[2.8133522280020209, 1.6353331402744793], [-0.53361203027460924, 1.5961912368458977]], [[-2.1087867198291024, -2.4515453338125228], [0.60463429306290895, 2.3090394156677139]], [[-0.087018562192714199, 2.5691305190947933], [-0.94930252920641944, -3.275250321983493]]]))
      res=arg0*arg1
      s0=numarray.array(2.90258117501)
      sub=res.substitute({arg0:s0})
      ref=Data(numarray.array([[[-9.0097998006114786, -2.2949016875889536], [0.38932966704377292, 12.75009383446665]], [[-11.265044778555712, 1.32316548272039], [6.6484162835918355, -0.17978505904298894]], [[5.2993372927688833, -8.3532083586198844], [-10.945889370605043, 2.8372781119906745]], [[-3.31284007365955, -7.0815570121073756], [-5.417037574684433, -14.335795392309949]], [[11.895181215479067, 5.904190541488596], [0.44457778193632985, 6.9966564716216295]], [[4.6639190307661726, 10.095649954588247], [9.4463021313586566, 0.11110251664777589]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[2.0143487175089949, -0.095319886668797066], [-4.9796598851549891, 11.891629252889306]], [[8.1624029588969833, -13.040493079228719], [2.5096269310705797, -6.713578357531337]], [[-7.8669005632805629, -0.39878030421211363], [12.643094240578945, 5.1620867802288615]], [[8.1659832156643333, 4.7466871878267538], [-1.548852233832662, 4.6330746357809875]], [[-6.1209246350819617, -7.1158093356019316], [1.755000116808423, 6.7021743402676366]], [[-0.25257844049679962, 7.4571098808620304], [-2.7554276506616477, -9.5066799280268413]]]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_mult_overloaded_Symbol_rank0_taggedData_rank4(self):
      arg0=Symbol(shape=())
      arg1=Data(numarray.array([[[[-0.86820933634907327, -0.91439640624619045, 4.6686699357589987, -1.6202669874282249], [-3.5470559432927171, -3.0556281592168677, -1.0536783384582895, 3.2137729387899761], [-4.0634948935396942, 2.7578110876571387, -4.9941765259706656, 2.8883750788154856]], [[3.3408742197531254, -3.7708323399320576, -1.9339173210048646, 0.64162626344759488], [3.4165207867983138, -4.2695496633763543, 1.1397487867450469, 2.4813259775631034], [2.4743541257850863, -3.7225980721353058, -2.0369537200852017, 0.019356702397579362]]], [[[0.66127564914594039, 2.703754630831452, -4.0466086801017571, -3.9052738922494257], [-2.827666079688107, -3.3882056059830976, -3.4433805034773002, 2.9958640066429076], [-3.1317220453975425, 4.253554623114649, 3.3238398924208497, 0.33881714746041158]], [[-0.25931812591363457, -4.7308005113371774, 0.95762210674224768, -4.9477981929811063], [-3.6745699606559432, 2.3321276708140211, -0.79426814529513745, -0.15371288739805067], [-4.4297721208824692, 3.2722314129957191, 0.23312549532347404, 2.4843531676093598]]], [[[3.5688457367055157, -2.7025296705967685, 3.4763140867976219, -3.0930503637157605], [2.6391121552832244, -0.20529895913271368, 3.2357132583095467, 1.7667588494910706], [0.59777624556899589, -3.236665783758097, 4.7724844676063558, 1.9374207156733947]], [[-2.9066482051704501, 2.8258519605208594, -3.9869085700177043, -0.72215370693846292], [4.5636991554049171, 3.1666864627156617, -3.5351474913512213, 4.8697183259209922], [1.2389178993324812, -4.7370882132960563, 3.5961590362828311, 1.0195924675602575]]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[[0.51340577290485712, -4.1503229549075193, -1.922541059681655, -0.41798208127312186], [-1.9153793856501933, -2.8674633763903437, -4.3972500699105757, 2.9195808748219951], [-0.16379154081267, -4.4664740704945984, -0.016156856083816784, -1.9150376553012514]], [[1.9238944505686364, -4.915076441750557, 1.4107668613168132, 4.9921445765040993], [3.6212402828650632, -4.4606332106393998, 2.5493991461921848, 3.073112465660973], [3.0481498950608259, -2.5359778009397838, 3.3808195886273982, -0.25496050146683746]]], [[[-1.3066622728721953, 0.64000424476260953, -0.84904956771026274, 1.2222666463709402], [-2.7506476465004228, 0.72838283836911089, -3.3622516761765397, 4.558089309779584], [3.6116756046465923, -1.410824979351454, 2.8086193392053307, -3.5942380738307378]], [[-1.7651934929555146, 0.18257753614846628, -0.77725277905074819, -1.0301880869365809], [-0.61643313464250138, 3.6253682781522141, 2.4446447836467744, 3.8682991228183834], [1.6899726374753286, 3.6655221059841168, 3.3824524993960292, 0.15861186865572208]]], [[[-0.63551998190902648, -3.1777407679082237, 4.1965766085668239, 0.91331931534408461], [4.0150377507168624, 4.3512799435422114, -2.5082544102088002, 2.8383992290214985], [-2.6779967504905464, 2.0646377530163109, -0.41927651664690124, -1.0327593064392859]], [[3.900771895462519, 2.2718725354533618, -1.0976378451781041, 0.17447966247350521], [0.21580697067351018, 1.6939619822874432, -2.2011190270038838, -0.23305351967107768], [-1.3821187188560105, 1.9879452728558835, -1.82513548840077, 4.8786717215606199]]]]))
      res=arg0*arg1
      s0=numarray.array(1.20290156145)
      sub=res.substitute({arg0:s0})
      ref=Data(numarray.array([[[[-1.0443703663595512, -1.099928864857582, 5.6159503556180015, -1.9490216891428935], [-4.266759132736424, -3.6756198839317942, -1.2674713185972541, 3.8658524862154127], [-4.8879843523819817, 3.3173752635262042, -6.0075027412457995, 3.4744308923596909]], [[4.0187428155482481, -4.5359401096694851, -2.3263121651514682, 0.77181323416828029], [4.1097381891652187, -5.1358479567626691, 1.3710055952360745, 2.9847908928764832], [2.9764044414865105, -4.4779190336213865, -2.4502548104913653, 0.023284207538566325]]], [[[0.79544951090634841, 3.2523506672041447, -4.8676718998705137, -4.6976600628757756], [-3.4014039425153157, -4.0756778139498628, -4.1420477842984695, 3.6037294914818565], [-3.7671533384353073, 5.1166074978564122, 3.9982521966020079, 0.40756367572607916]], [[-0.31193417857373379, -5.6906873219947647, 1.1519251274790485, -5.9517141720752225], [-4.4201459433293788, 2.8053200167223533, -0.95542639218531744, -0.18490147226606468], [-5.3285798010760912, 3.9361722761174707, 0.2804270223383532, 2.9884323045099301]]], [[[4.2929701092563466, -3.2508771606251301, 4.18166364309862, -3.7206351121564043], [3.1745921324312047, -0.2469544385047496, 3.8922445308242106, 2.1252369787579721], [0.71906597919251414, -3.8933903251735922, 5.7408290180783625, 2.330526404068618]], [[-3.4964116645846466, 3.3992217357363779, -4.7958585442316846, -0.86867982168300195], [5.4896808400234782, 3.8092120906224536, -4.2524344373015488, 5.8577917780708217], [1.4902962756150853, -5.6982508084990302, 4.3258253199662438, 1.2264693712706369]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[0.6175766058845682, -4.9924299629789939, -2.3126276426423189, -0.50279129822145441], [-2.3040128537672797, -3.4492761728599155, -5.2894589751804517, 3.5119683931022037], [-0.19702510019582112, -5.3727286335727715, -0.019435107411342096, -2.3036017857969426]], [[2.3142556386535209, -5.9123531264266243, 1.6970136603195569, 6.0050585060596795], [4.3559955906431176, -5.3657026541327433, 3.0666762137132375, 3.6966517834542745], [3.666624268301558, -3.0505316565523679, 4.0667931621397972, -0.30669238532246995]]], [[[-1.5717860883254424, 0.76986210535941069, -1.02132305074691, 1.4702664574275528], [-3.3087583489734373, 0.87617285360740405, -4.0444577912597977, 5.4829327479612733], [4.3444902242793546, -1.6970835705941747, 3.3784925886480561, -4.3235145912331348]], [[-2.1233540089371261, 0.21962280331863818, -0.93495858156130218, -1.2392148583629436], [-0.74150838019082865, 4.360961162619688, 2.9406670274386904, 4.6531830549929296], [2.0328707244264241, 4.4092622648168689, 4.068757393053092, 0.19079446447043069]]], [[[-0.76446797857088455, -3.8225093315993286, 5.0480685551885269, 1.0986332305296156], [4.829695179617004, 5.2341614383919044, -3.0171831465533865, 3.4143148646077259], [-3.2213664727224338, 2.4835559769314228, -0.50434837655376941, -1.2423077823175774]], [[4.6922446039111634, 2.7328390203116504, -1.3203502778710801, 0.2098818584306047], [0.25959454199490573, 2.0376695135300786, -2.6477295145197255, -0.28034044271369929], [-1.6625527650208225, 2.3913024727949908, -2.1954583288546377, 5.8685618316660078]]]]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_mult_overloaded_Symbol_rank1_taggedData_rank0(self):
      arg0=Symbol(shape=(2,))
      arg1=Data(1.11950441575,self.functionspace)
      arg1.setTaggedValue(1,4.86996782818)
      res=arg0*arg1
      s0=numarray.array([-0.78549237662494953, 4.1344197615547902])
      sub=res.substitute({arg0:s0})
      ref=Data(numarray.array([-0.87936218417043222, 4.6285011796290663]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([-3.8253226034479404, 20.134491226983396]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_mult_overloaded_Symbol_rank1_taggedData_rank1(self):
      arg0=Symbol(shape=(2,))
      arg1=Data(numarray.array([4.0941505256154311, 3.5760457588100252]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([-3.2461810978309282, 1.9696556786948394]))
      res=arg0*arg1
      s0=numarray.array([-2.5388743405062506, 3.5718907373660755])
      sub=res.substitute({arg0:s0})
      ref=Data(numarray.array([-10.394533715655196, 12.773244722290768]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([8.2416458939193546, 7.0353948745305876]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_mult_overloaded_Symbol_rank2_taggedData_rank0(self):
      arg0=Symbol(shape=(4, 5))
      arg1=Data(-2.19395150438,self.functionspace)
      arg1.setTaggedValue(1,4.48869130432)
      res=arg0*arg1
      s0=numarray.array([[-2.9785357676377866, -4.0376675756158233, -2.3620258842254085, 4.9778815696494867, -2.8830671733896396], [-0.12586433616834292, -2.9451699074334678, -4.8656112934831413, -3.5971368997440734, 4.4557439154858081], [-3.8192765742703649, 2.3156257015121984, 3.0704583266570875, -0.66262953755641174, 0.12369800124931984], [-3.9568596357564791, 2.0249085765657586, 1.4270518555596876, -3.4014562325626398, -3.6639354255880008]])
      sub=res.substitute({arg0:s0})
      ref=Data(numarray.array([[6.5347630282571902, 8.8584468517068267, 5.1821702420797484, -10.921230758355678, 6.3253095622854678], [0.27614024968426809, 6.4615599490670075, 10.674915217063418, 7.8919439126526649, -9.7756860665100707], [8.3793075857620032, -5.0803704914126158, -6.7364366649040024, 1.4537770707682085, -0.27138741592968751], [8.6811581504866062, -4.4425512177874795, -3.130882565332791, 7.4626300185119669, 8.0384966389182857]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[-13.369727599798457, -18.123843336396991, -10.602405047098676, 22.344173715614808, -12.941198550961253], [-0.56496615128270766, -13.219958553238213, -21.840227103253458, -16.146437122325754, 20.000458967712852], [-17.143553547716142, 10.394128950435084, 13.782339591139131, -2.9743394432142982, 0.55524214256944648], [-17.761121439430433, 9.0891895196714181, 6.4055952548628747, -15.26808701312514, -16.446275084422709]]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_mult_overloaded_Symbol_rank2_taggedData_rank2(self):
      arg0=Symbol(shape=(4, 5))
      arg1=Data(numarray.array([[0.071378135410174792, 0.47503895487103875, 3.5224887056384517, -1.4717171104201543, 2.6823593143634064], [-2.8213936138828446, -4.0437250476197271, 0.17344689589833795, -3.6102976488661795, -2.6201477884993416], [-2.3691138759209442, -4.5636764022223586, 4.0255246203339379, -1.3543374166280242, 0.26952220692118889], [1.9154867284228319, -2.7565367249589579, -0.57452243204763853, 3.6343768278798088, -2.3311344155810811]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[-0.84287577391445545, 4.5978172078266297, 1.7656763069782935, 0.062592057723618311, 2.2464030092564693], [-0.92376816474644929, -1.2698831348851334, -2.954895695245142, 4.7332978825573981, -0.18168870835468898], [4.8229851370166532, 3.4544210122744747, -0.49008964482088491, 1.2573681251545015, -2.4269758339602152], [-4.6614073547516233, 4.5993838470932715, -3.1169880702373707, 0.28195844198234088, 0.50190494358623905]]))
      res=arg0*arg1
      s0=numarray.array([[4.6484275857975721, -1.828437518730619, -4.960672907915761, 1.4978783338940138, 2.3964153105898234], [-4.083375470940763, -2.3230536368185648, -3.182928422828768, 1.6376405644630134, 0.82899239758675858], [-1.4891265209799731, -1.4705475958483429, -4.7470746384613705, -2.0686280096924046, -3.8926105380624278], [-2.7272992712580955, 4.2269585179883116, -2.3328752489696045, 1.3704011447473832, 0.73060132102738606]])
      sub=res.substitute({arg0:s0})
      ref=Data(numarray.array([[0.33179609366345097, -0.86857904794478857, -17.473914290499923, -2.204453173319453, 6.4280469294436884], [11.520809476798123, 9.3937901781673308, -0.55206905480624235, -5.9123698795687005, -2.1720825972197124], [3.5279103038555353, 6.711103361517905, -19.109465831689075, 2.8016203146111827, -1.0491449829032622], [-5.224105558532143, -11.65176638971287, 1.3402891617017574, 4.9805541653698535, -1.7031298835159414]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[-3.9180469988644324, -8.4068214870554652, -8.7589426201759721, 0.093755287138051341, 5.3833145651372556], [3.7720922647616169, 2.9500066348294691, 9.4052214948901351, 7.7514406161628839, -0.15061855795339496], [-7.1820350778237279, -5.0798905146482278, 2.3264921235017635, -2.6010269221890265, 9.4472717068963821], [12.713052881651228, 19.441404729968752, 7.2715443203902934, 0.38639617166378859, 0.36669241481428194]]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_mult_overloaded_Symbol_rank3_taggedData_rank0(self):
      arg0=Symbol(shape=(6, 2, 2))
      arg1=Data(3.25668687177,self.functionspace)
      arg1.setTaggedValue(1,-1.35363619165)
      res=arg0*arg1
      s0=numarray.array([[[-4.7512596313635038, -3.1391446742879481], [-4.0612263957147459, -0.56101638814262778]], [[3.3110629862751946, 4.9492489740428915], [2.0385990934837448, -2.2086783862843196]], [[-1.7821786257521888, 0.9094320240194973], [-0.37941667748917052, -4.5537034535247969]], [[2.3628042947092993, 2.6391968183927972], [4.9950287175637289, 1.1993758508510801]], [[1.1387719709522726, -4.0571549586109086], [-4.3105069255152575, -0.20897398099304709]], [[2.9452799495845925, 0.97521515771252787], [-1.9785275703589313, 2.6060594402158452]]])
      sub=res.substitute({arg0:s0})
      ref=Data(numarray.array([[[-15.473364865814048, -10.223211249328218], [-13.226142686194413, -1.8270547061097642]], [[10.783095358993283, 16.118154158867622], [6.6390789045429059, -7.192973904565811]], [[-5.8039977336294095, 2.9617353333880239], [-1.2356413125081167, -14.82998625501043]], [[7.6949137271324757, 8.595037630466841], [16.267244448584755, 3.9059915877800804]], [[3.7086237277355409, -13.212883290429124], [-14.037971314982652, -0.68056282044076755]], [[9.5918545454882391, 3.1759704012697547], [-6.4434447638153287, 8.4871195659932113]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[6.4314769929423425, 4.2492598419435437], [5.4974230317263855, 0.759412087098987]], [[-4.4819746910569673, -6.699482532754284], [-2.7595215132057942, 2.9897469993909995]], [[2.4124214878043735, -1.2310401015588905], [0.51359214636518191, 6.1640578007356979]], [[-3.1983774071060851, -3.572512330265726], [-6.7614516504285733, -1.6235185591038086]], [[-1.5414829539183337, 5.4919117871106025], [5.8348581787382052, 0.28287474378550265]], [[-3.9868375343006925, -1.3200865321259698], [2.6782065254164684, -3.5276563758689896]]]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_mult_overloaded_Symbol_rank3_taggedData_rank3(self):
      arg0=Symbol(shape=(6, 2, 2))
      arg1=Data(numarray.array([[[-1.3666443561953781, 0.46700412295519111], [-1.1309748954134413, 4.3407042566363288]], [[2.7537990112300781, -4.0506734006100409], [-4.7297800587666323, -2.5174649342891464]], [[3.4309374405985853, 1.5456719695686942], [-0.31707479995187526, 3.6389169165759867]], [[-4.117510339580762, -3.0339052454231097], [4.1459251280540599, 4.2360451618316102]], [[-1.2776261831510629, 2.7606768506642716], [1.3821647743730345, 0.16382807948611955]], [[2.2995017838082354, -4.5278231758874545], [4.6299152941043147, -2.9900462504808223]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[-4.0603441537546336, 1.594780159223955], [-0.31675011969352163, 1.5304315157941399]], [[-1.690635297894759, 1.1791156789191923], [2.1084632049727805, 4.2104724381386696]], [[4.5222244639592528, -2.0390691812790562], [-3.7000789675504366, -3.1680189160946135]], [[1.9246858864679695, 1.5966662294649057], [-0.11613374955625133, -1.4852417006879626]], [[-3.4351305253007092, -0.29924001154384428], [-1.4544490399854526, 4.5825266938804017]], [[2.5898486256381101, 3.2410707821218434], [1.1975142279446427, 3.7376857084583577]]]))
      res=arg0*arg1
      s0=numarray.array([[[-4.2736343155717735, 0.33567459600238614], [0.99513533766470186, 3.4628614089503866]], [[-3.8521378833463582, 1.9387762769853945], [3.1573179275638434, -3.234658027544135]], [[0.90770555350445825, -2.7238734003471365], [-3.2235114676670706, -1.0034764077922889]], [[2.3578719614264321, 2.5116319933919762], [2.96168472332368, -0.34109836483199274]], [[4.7504488804878449, 4.9381819694923745], [-4.5598415872271616, -2.7076296190210645]], [[-3.7607556692134758, -0.15633205595158195], [-0.20517808870437371, -3.4245112277430758]]])
      sub=res.substitute({arg0:s0})
      ref=Data(numarray.array([[[5.8405382178190619, 0.15676142030443244], [-1.1254730844375558, 15.031257257972618]], [[-10.608013494281128, -7.8533494949185023], [-14.933419372977857, 8.1431381587592551]], [[3.1142809685577082, -4.2102147635703346], [1.0220942537531124, -3.6515672757002631]], [[-9.7085621805809055, -7.6200534793244179], [12.278923115801481, -1.4449080780552364]], [[-6.0692978714319255, 13.632724647545299], [-6.3024524185866095, -0.44358576044395454]], [[-8.6478643698233224, 0.707843906071707], [-0.94995717090747156, 10.239446956242661]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[17.352426108517037, 0.53532718566012216], [-0.31520923731654737, 5.2996722350849712]], [[6.5125602779429563, 2.2860415061100574], [6.6570886766692787, -13.619438471778574]], [[4.1048482601295353, 5.5541663043536342], [11.927246983172568, 3.1790322417406434]], [[4.5381628862560026, 4.0102379846925915], [-0.34395155192304777, 0.50661351548495204]], [[-16.318411958244376, -1.4777016295565018], [6.6320572190282876, -12.40778500630525]], [[-9.7397879012732513, -0.50668325885370946], [-0.24570368048597549, -12.799746674390478]]]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_mult_overloaded_Symbol_rank4_taggedData_rank0(self):
      arg0=Symbol(shape=(3, 2, 3, 4))
      arg1=Data(-1.92545898045,self.functionspace)
      arg1.setTaggedValue(1,4.28094573513)
      res=arg0*arg1
      s0=numarray.array([[[[3.6341496483359208, 3.5087953596232193, 4.2501361977382661, 2.778112744824508], [1.5652548234804753, 2.8829843776262232, -1.0938509179897826, 3.125484361110205], [2.1514975591402896, 4.5742617376559398, -1.0667706926589036, -1.3420824805146614]], [[3.3670012619886851, 1.0051614998473655, -3.7072849407349686, 1.8523084381848278], [3.3172062996357443, -3.9867012176263552, 1.9836900304140066, -3.0601158799647274], [1.0694001027830673, -2.9936261100590587, 4.7176493596386422, 1.581703183165394]]], [[[-3.7672448938977388, -4.0387682711096717, 1.6413735813476782, -2.8766599540435642], [-3.1157202897797887, 0.96686967117997469, -1.1661786302937962, 3.0808024972914101], [-0.063290444417425817, -1.7037588260342917, 0.74282195316460609, -2.0559435427665029]], [[-2.303679104031422, -4.9388341201123804, 3.5443943155788045, 2.5499797392137857], [2.8006309952871238, 0.57307371147447661, -0.74526877496298383, 4.5830727664075237], [3.0490933399186542, 3.3411098466449989, 4.7711277761278374, 3.3011041708777675]]], [[[-3.7596911999563343, -1.491168451433873, -0.13831702882017538, 2.3603081976410465], [0.44749091564615373, -1.4923314846784774, -4.2973144667166814, 3.5151258687109994], [-4.3488669575883598, 1.8879211141207808, -4.5946461355007671, 0.0090806365541231671]], [[0.67738466750484783, 2.9562438220454599, 4.5351253197716623, -4.3795133507921777], [2.3714390469597344, 4.8238127878942478, -0.41027130624885633, 2.3105195178799942], [3.1538262435912507, -3.9296938650840616, 4.7576340542111346, -0.13162598675097481]]]])
      sub=res.substitute({arg0:s0})
      ref=Data(numarray.array([[[[-6.9974060767039639, -6.7560415357636066, -8.1834629100898901, -5.3491421332374509], [-3.0138339565702053, -5.5510681604104404, 2.1061650733218262, -6.0179919313697416], [-4.1426202966726082, -8.8075533417190375, 2.0540232102657541, 2.5841247646176071]], [[-6.4830228170977504, -1.9353972366882251, 7.1382250822418767, -3.5665439168746267], [-6.3871446596538872, 7.6762296618675583, -3.8195137834987105, 5.892127602309511], [-2.0590860316026229, 5.7641042777362879, -9.083640326151647, -3.0455045984392779]]], [[[7.2536755125267636, 7.7764826375828147, -3.1603975024866529, 5.5388907422270117], [5.9991916125407929, -1.8616678913025724, 2.2454291165133187, -5.9319588354163981], [0.12186315458048895, 3.2805177321163441, -1.4302732005995433, 3.9586349577272046]], [[4.4356396189426794, 9.5095225095454854, -6.8245858652030922, -4.9098813888462089], [-5.3925001008148188, -1.1034299242209225, 1.4349844556048015, -8.8245186161558173], [-5.8709041535903799, -6.4331699589075724, -9.1866108234412547, -6.3561406712324056]]], [[[7.239131184691681, 2.8711836861837816, 0.26632376529159069, -4.5446766157883296], [-0.86162540220269412, 2.8734230589891725, 8.2743027317766771, -6.7682306713375215], [8.3735649382903485, -3.6351146635735234, 8.8468026636105179, -0.017484393201379862]], [[-1.3042763912693951, -5.6921262155705676, -8.7321977744409356, 8.4325733113031802], [-4.566108609569083, -9.2880536524822404, 0.78996057103965911, -4.4488105552174382], [-6.0725630635158572, 7.5664643429630631, -9.1606292153969839, 0.25344043825084955]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[15.557597437850434, 15.020962530206141, 18.194602429408896, 11.892949906653461], [6.7007709609629007, 12.341899675831582, -4.6827164222311533, 13.380028945895267], [9.2104442999339167, 19.582166277164617, -4.566787447094697, -5.7453822711454992]], [[14.413949692671654, 4.3030418358836364, -15.870685655933272, 7.9296319085837732], [14.200780160956112, -17.066851574816017, 8.4920693755112353, -13.100190025323922], [4.5780438091516311, -12.815550928416792, 20.196000905961213, 6.7711854962058586]]], [[[-16.12737096170374, -17.289747805365959, 7.0266312328175315, -12.314825161668272], [-13.338229486375862, 4.139116595259825, -4.9923474337503837, 13.188748311542751], [-0.2709429581029581, -7.2936990799934325, 3.1799804723573972, -8.8013827410644705]], [[-9.8619252355003759, -21.142880862985955, 15.173359728879113, 10.916324889242945], [11.989349314933879, 2.4532974610490346, -3.1904551836997737, 19.619885813120778], [13.053003129523438, 14.303109948579745, 20.424939104951882, 14.131847821523214]]], [[[-16.095034007840844, -6.3836112225190993, -0.59212769462292025, 10.104351312272504], [1.915684326842676, -6.3885901047273972, -18.396570038782635, 15.048063096086643], [-18.617263454714827, 8.0820878417481872, -19.669430778181525, 0.038873712328595635]], [[2.8998470033940853, 12.655519381975756, 19.414625395934841, -18.748459000997681], [10.152001874191662, 20.65048078137832, -1.7563491987302895, 9.891208675991912], [13.50135900682792, -16.822806192079309, 20.367173213661609, -0.56348370661323277]]]]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_mult_overloaded_Symbol_rank4_taggedData_rank4(self):
      arg0=Symbol(shape=(3, 2, 3, 4))
      arg1=Data(numarray.array([[[[4.662007327598662, 2.0408721475955129, -0.7277914219359749, 3.4434729258441124], [3.4368593669617216, 3.012482600051591, -0.81228423230275038, -4.7828119986136191], [-2.840065918111041, 1.4852158235423163, 1.2805055258413587, 2.6095860909389135]], [[-0.81843890265295371, 3.9226571086690925, 0.25089822327114142, 3.8173045881590202], [0.14805231463801949, 0.36365881012681633, 1.6953694457356736, -4.6229951601189443], [-1.4986935661893321, -4.6683681039951725, 0.14909155151648079, -0.60116414204397373]]], [[[2.4743450183698741, -2.2058876993067611, 1.8507376577821066, 2.4436321569396799], [0.47184583564959226, 3.0426886236429098, -4.2764006431592438, 0.47432667125176309], [-1.5125315759782398, -2.6203394896962595, 0.71279514556321111, -0.93444113076080093]], [[-1.2837018639906628, 2.1685283844573622, 2.8624386451870079, 3.1201440759171213], [1.4566823403867293, -3.8055479342020337, 2.0504130227223918, 4.3599211797457755], [3.9092638631910948, -4.9227607549135, -3.0425719333531545, 1.9213194861863894]]], [[[0.59925535101758776, 3.1963298570837662, -1.9202113719321314, 2.7079708053963527], [3.6342895085970337, -3.9590088166626991, -1.8029171211863524, 0.077792826242236934], [-3.605121211776936, 4.377814589866162, 3.9171760382696412, -1.6203224354578993]], [[3.075304213019983, 0.55575334124868192, 3.8302240501221938, -4.8675111369795516], [0.57010712599474456, 2.3869354997246814, 0.88352210475845538, -3.0311383677814341], [-2.6274605983941979, 2.4608091153358629, 3.9796737037408256, -3.8835238099456149]]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[[-0.86524339638395453, 4.0688659986518179, 2.1926053792944984, 2.2341918232856584], [1.4267805540345808, 0.68963720585160893, -0.89728064662479312, 3.3814252301388876], [-4.3797892271469072, 3.9733880984869998, -3.3665253810336262, 3.3711009103110339]], [[-4.293904894668076, 0.24363556373489725, -0.60683282942370909, 1.0897152039814726], [3.0324012183998601, -4.9623509726221045, 0.23440114548259494, 2.7790189505814027], [-0.79632537277101356, -2.6950532468287616, -1.284749564838179, -3.2310711213962238]]], [[[4.1921363228914661, 2.7800363865475184, 4.3624955133912771, 3.2239871146638812], [-0.2366751400854108, -0.89845019568176809, -2.7142013563281431, 2.6103226891475328], [3.5685663198053774, -0.36447912427738061, 2.5921810800779008, -3.0648213738789023]], [[-3.947875358126447, -3.7517098026853715, 2.6025732922236209, 2.6338820426581222], [-2.9904775329419464, -1.5736601135170392, -1.1398531224416608, 3.2690897275279891], [4.9655350286674196, -4.8560474154484732, 2.242524809128569, -3.6462237490055651]]], [[[-2.1227322457160822, -1.7922800557983889, 4.7895197639141767, 2.0705360082733346], [-1.2707179388733101, -1.5863829747910763, -0.82042456592778112, -1.3714916625410947], [1.7955528087123573, 1.951084351755533, 2.3198070357537368, 0.38937163423242005]], [[-4.6996264211751289, -0.052202987603847895, -4.5119120086797802, -3.8710953444951537], [1.0726580660525888, -1.271873057616987, 4.1109303077749821, 0.59333764757331675], [-2.3269046475665753, 0.79372289487354308, 0.74309938932639241, 0.089177460497557703]]]]))
      res=arg0*arg1
      s0=numarray.array([[[[-4.8719764609141922, -4.2205759487485057, 3.1543858261813078, 1.4338547113855338], [0.27853001623000306, -0.81173402344260914, 0.54118496418608686, 2.7102497742271483], [-3.2694280288419622, -0.51499877583335696, 3.4885301266803843, 1.2050030262216449]], [[-0.84912998897794978, -2.9967131768339961, -4.6300646909745256, 2.1622600769702993], [0.89622152200583471, -1.0742657491745486, -3.544066855869048, 2.4732482990029778], [2.4162246601609825, 0.63245005777125129, -0.84763155938477297, -2.3061488418306419]]], [[[4.6162670129077412, 4.5452939701527377, 0.048377962091747051, 1.9984685497646746], [1.8480696201800129, 3.3546283490821818, -4.7931584759583821, -2.4666703939538315], [-4.1425576139862255, 2.1427822682795847, 0.039834098151581898, -0.019144957205581292]], [[-3.9187790571569856, -0.98831742509689846, -4.4802165452908396, 0.34454952550188089], [0.77915505718021993, 3.4290627648945673, -0.72914570375442889, -1.2581389708824045], [4.6740018757206805, -3.6902979930701885, 3.25664768554552, -2.4091450173193985]]], [[[0.29123591725076103, 1.5247782307109015, 2.3232254274106161, 3.1444489036288701], [1.9933825041106825, 0.78752854522155058, -3.4449855569231991, -4.1274651959722384], [4.616172047772519, 3.3154459262488487, -1.8476245878501976, 2.3309873981674052]], [[-2.9066859863423087, 1.3374189675051102, 4.4809017322316826, -2.2168956279364513], [2.4125627534847096, 4.3351549332052883, -0.80939050608006546, -0.50992890550083025], [2.8697580416671649, 0.46944395904650715, -2.0334936833978166, 1.1364803606111824]]]])
      sub=res.substitute({arg0:s0})
      ref=Data(numarray.array([[[[-22.71318996067016, -8.6136559006123328, -2.2957349457711791, 4.9374398782501094], [0.95726849526008639, -2.4453346214907303, -0.43959601316768704, -12.962615139413456], [9.2853911164310183, -0.76488433097262398, 4.4670821042782869, 3.1445591367673034]], [[0.6949610163888279, -11.755078245750214, -1.161675004595955, 8.2540053126117989], [0.13268767076137256, -0.39066620410480929, -6.0085026610848793, -11.433814916063177], [-3.6211803526512698, -2.9525096770692136, -0.12637470430300982, 1.3863739899248215]]], [[[11.422237286853449, -10.026408058493116, 0.089534916249951482, 4.8835220128375658], [0.87200395427246269, 10.20708951430235, 20.497465989352605, -1.170007557039396], [6.2657491964632426, -5.6148169953939204, 0.028393551790336057, 0.017889835459550526]], [[5.0305439802399947, -2.1431943891764371, -12.824344978046728, 1.0750441608547487], [1.1349814122174386, -13.049462721193635, -1.4950498464401643, -5.4853867462137487], [18.271906629242249, 18.166454134221976, -9.9085848448603091, -4.628737266824607]]], [[[0.17452468182103395, 4.8736941842526136, -4.4610838852757517, 8.5150758300875502], [7.2445291213103369, -3.1178324539056681, 6.2110234428165372, -0.32108718281114873], [-16.641859766636482, 14.514407547844542, -7.237470763244616, -3.776951178020282]], [[-8.9389436597246466, 0.74327505984032738, 17.162857581027989, 10.790764158501954], [1.3754192176711353, 10.347735206874283, -0.71511440350337085, 1.5456650703043597], [-7.5401761814053705, 1.1552119735610002, -8.0926413385413625, -4.4135485399691055]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[4.2154454601440747, -17.172957972590432, 6.9163233308554561, 3.2035064719571773], [0.39740121087190455, -0.55980198382164537, -0.48559479460850752, 9.1645069665499026], [14.319405659654175, -2.0462900066316347, -11.744225213969965, 4.0621867986233378]], [[3.646083415881868, -0.73010590418974552, 2.8096752568388825, 2.3562476808366846], [2.7177032352866703, 5.3308836852709351, -0.83073333068260358, 6.8732038924224943], [-1.92410100320121, -1.7044865816534487, 1.0889942770626941, 7.4513309244803345]]], [[[19.35202062097623, 12.636082624579641, 0.2110486425722598, 6.4430368535023241], [-0.43739213624369644, -3.0139664966724928, 13.009597236541977, -6.4388056959861695], [-14.78299157912457, -0.78099940465964224, 0.10325719557049667, 0.058675874045662449]], [[15.470851273692055, 3.7078801719007992, -11.660091924152317, 0.90750280802578076], [-2.3300456931755451, -5.3961792998610365, 0.83111900713940801, -4.112969185514304], [23.208920037948261, 17.920262031483176, 7.3031132294269634, 8.7842817769484149]]], [[[-0.61821587265889111, -2.732829612418703, 11.127134100611107, 6.5106946811391841], [-2.5330269070096438, -1.249321876301452, 2.8263507801661909, 5.6607841037044704], [8.2885806858774203, 6.4687146657957575, -4.2861325183264869, 0.90762037259961936]], [[13.660338259473804, -0.06981726578182032, -20.217434335370157, 8.5818143445364576], [2.5878548973834175, -5.5137667601391751, -3.3273479622698723, -0.30256001721949877], [-6.6776533245468794, 0.37260841815529067, -1.5110879143319937, 0.10134843246465386]]]]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_div_overloaded_float_rank0_taggedData_rank0(self):
      arg0=0.530720959001
      arg1=Data(-2.72292512329,self.functionspace)
      arg1.setTaggedValue(1,1.75160853271)
      res=arg0/arg1
      ref=Data(-0.194908392619,self.functionspace)
      ref.setTaggedValue(1,0.302990622099)
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_div_overloaded_float_rank0_taggedData_rank1(self):
      arg0=-1.55181779951
      arg1=Data(numarray.array([-4.0753145551015475, 1.6095009643123257]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([-1.2973999945988721, 1.9949506918417423]))
      res=arg0/arg1
      ref=Data(numarray.array([0.38078479060373915, -0.9641608386185353]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([1.1960982009935197, -0.77787275938939227]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_div_overloaded_float_rank0_taggedData_rank2(self):
      arg0=-3.98091301865
      arg1=Data(numarray.array([[0.44966731933462789, -0.81680618711702913, 4.0646487172360395, 2.8134699767808371, -0.39919154984348371], [-1.1585803868590006, -3.7920466820746999, -0.0040164555894577347, -2.1234840931313945, -4.9842779777036235], [2.3729035242579606, 2.4074341644549175, 0.30195529961868228, 2.7291749648090917, -1.5550476687079762], [3.3234587020672777, -3.7862918929952629, -1.4172997917377703, 4.2031497491210388, -2.0504656511172445]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[-1.5745511585718477, -4.2717852405415, 4.913864011647874, -2.5014818454433363, -2.1507065783852153], [-0.28496355064187018, 4.5941786949255832, -3.1192237707103407, -3.5993239337610516, -3.8302938748712401], [2.5030751218880525, 3.5473076425187813, -4.8440762855556443, -2.1837352778033239, 4.195268327590739], [2.8739387053288388, -2.2881264230635701, -0.54140737035705744, 1.1767893424149865, 1.226580964756824]]))
      res=arg0/arg1
      ref=Data(numarray.array([[-8.8530183259470814, 4.8737547308497406, -0.97939903189370314, -1.4149477518874776, 9.9724380944682025], [3.4360265923726856, 1.0498059102138815, 991.15076215405782, 1.8747081890208599, 0.7986940207702985], [-1.6776548131655902, -1.6535916443431811, -13.183782578667005, -1.4586507167844507, 2.5599942038796359], [-1.197822321719457, 1.0514015113345463, 2.8088009621224233, -0.94712614497769121, 1.9414677912209186]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[2.5282843285065026, 0.93190851002245867, -0.81013902892154976, 1.5914219109367249, 1.8509791426954634], [13.969902500449955, -0.86651244607572731, 1.276251180191021, 1.1060168775887789, 1.0393231299472505], [-1.5904089269387105, -1.1222350638362719, 0.82181055457765673, 1.8229833346162101, -0.94890545914976565], [-1.3851767302022051, 1.7398134030194534, 7.3528977191861138, -3.3828595103346188, -3.2455362776954524]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_div_overloaded_float_rank0_taggedData_rank3(self):
      arg0=3.83661766078
      arg1=Data(numarray.array([[[0.99803638763779734, -3.1417627649199664], [-1.0524959532968037, -2.3983565939824656]], [[-4.0713931887572148, -2.490178211518864], [-0.24398143906304437, -0.54270325028569921]], [[4.9981751140140176, -3.6838989503046173], [-0.036672206855446809, 2.2695133465231727]], [[1.2407870628674713, 2.91397971267995], [0.18342130401242152, 2.2465388378215012]], [[1.4931945480717879, 2.4257146301282431], [-0.080461879769858413, -4.1674943020115283]], [[-3.8183096032317687, 4.4255998690403882], [4.6338139363791306, -2.6025911584729311]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[4.5865666548884967, -2.630330766944402], [-4.8559664548198818, -3.656842762709418]], [[4.8253074812978713, 0.893423466559776], [2.8737737451964875, -1.3961757949838383]], [[4.6808521133877612, -2.9013361383556635], [2.4024701914638875, 3.5000753496252344]], [[-3.7429634962469658, 0.42882599343018235], [0.36749943896296422, 1.7516847075867981]], [[-0.34484116655048247, -4.3804283927641769], [3.4879699636605626, -2.319257842923351]], [[-4.5067227802990537, 3.7519172069177529], [2.9911497237315832, -4.5312902993671802]]]))
      res=arg0/arg1
      ref=Data(numarray.array([[[3.8441661128766134, -1.2211672070258122], [-3.6452564484996959, -1.5996860810444846]], [[-0.94233533409877535, -1.5407000362576038], [-15.725039066531751, -7.0694576801507454]], [[0.76760368999833495, -1.0414557273504375], [-104.61921956041671, 1.6905023566627591]], [[3.0920838680478715, 1.3166246985455228], [20.916968622767985, 1.7077904891666276]], [[2.569402403544375, 1.5816442763393703], [-47.68242640799243, -0.92060537645442841]], [[-1.0047948069815356, 0.8669147176215255], [0.82796109499660819, -1.4741530371701339]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[0.83649011329331258, -1.4586065406640563], [-0.79008322987217106, -1.0491612327166049]], [[0.79510325003020677, 4.2942879881455553], [1.3350451360994979, -2.7479474107480999]], [[0.81964086192807761, -1.3223623454224842], [1.5969470399286234, 1.0961528760190289]], [[-1.0250213940429687, 8.9467936168837969], [10.439791885401094, 2.1902444225025577]], [[-11.125753050755188, -0.87585444088357567], [1.0999571959468786, -1.6542436937236238]], [[-0.85130988698630827, 1.0225752459838628], [1.2826565084106418, -0.84669429837916443]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_div_overloaded_float_rank0_taggedData_rank4(self):
      arg0=-1.20467024608
      arg1=Data(numarray.array([[[[-1.2181731751178226, 3.6492979695913839, -2.1710664723041506, -1.1649719746118494], [0.56103710184591549, 1.9062433266827892, 1.5973342421602945, -4.3364036964420176], [1.9912096725077069, 2.0287016115745162, 0.86239674465844818, 2.6236829160063202]], [[-2.4917496797756735, 1.8374186351918285, 0.77615467473568778, -4.5720898592529231], [1.5051976661221609, -3.5176206544634847, -0.39848562191284298, 2.10229027041599], [3.4285102555646922, -0.33870066986103264, -1.3675053513437483, -0.77018927694325168]]], [[[-4.6586434464869333, -2.4028035019862548, -2.0673634943331685, 0.44047401891906812], [2.1403252158407273, -2.4536016369740485, 1.4966484381309861, 3.1609877640937221], [0.55037318997358309, -3.2343668944249861, 3.0046276941113099, -3.4454349909795123]], [[-1.652781759778168, 1.7839114376269363, -3.9491973821240158, 4.8546759094468133], [-4.0126866980083928, -1.9009361670550384, 0.72519552439328283, -4.9667947391451372], [4.5138078681293727, 0.21422136096062339, -4.2208642613153398, -2.7529651562587754]]], [[[0.98202605996668701, -4.6404271194933298, 4.045509455184316, 0.88570777694947544], [-0.11073949336977496, 4.1401483777031132, 3.4634100875895832, -0.93493502677335272], [4.2308907811038861, 0.031500298818153638, 1.4868222260755024, -3.5674597542115647]], [[3.6453420951771971, -4.6861793612833633, 4.9963869188833048, 4.5784049008321066], [3.605763931528573, -4.9199331585407418, 3.2155995666002397, 4.9077635900480647], [-0.78082311759376832, 2.8898200228418585, 4.7053097356086884, -0.21445265420813175]]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[[-4.9385503022391086, 0.32713299150944586, 1.3262211351551221, -0.6662407209656509], [-4.148846361377033, 4.3188191045578321, 3.5948304937505853, -1.8057428662174568], [0.43293685492360812, -3.7434975310003935, 1.8244767358349376, -2.0297101572418197]], [[-2.6073404331261987, -4.4332096572466764, 0.44693896208392303, -3.9313597779800604], [-4.2793135890210445, 3.8313069862422591, 2.2588282098794457, -1.6224630822127226], [-0.60100390740555198, 2.8166102931952999, -4.0628073385628527, -1.9662851558398406]]], [[[3.8045806656868457, 0.71980655532686288, -2.0044054569814627, 3.4872921248630284], [4.2348112396683817, 4.5460019207439046, -0.74599653651381903, 2.1076379152503826], [-2.3497915596425525, 2.9300588946383543, -0.30107605232075052, 4.9639892058955954]], [[4.5304229865204722, 1.1595101589107806, 1.069910835267919, -3.5828187734558679], [-0.88512547434241995, -2.6502158738832682, -4.9009793014608407, -2.0901477125278434], [3.1009082781056971, 2.2426029807421699, 0.39684269187096088, -4.6821302744076077]]], [[[-2.4204741988578737, 4.9484608350697066, 3.9297077431320098, -4.6471734288695181], [-3.4314083260843686, -0.48402484123672274, -1.7049570470108733, -4.9531288268282339], [3.2187095348114365, -1.0977948903230828, -2.036383893171978, 1.3937446538051832]], [[-2.222073073734542, 0.093544412493242746, 2.5132000962898884, 2.8667027592838998], [3.5402001261687914, -4.5095813949818586, 1.1701032152564617, -3.8504426971959758], [1.0408755936050662, -4.0701816320647977, 1.0938885246665766, -3.2849950776654691]]]]))
      res=arg0/arg1
      ref=Data(numarray.array([[[[0.9889154273677504, -0.33011013518703142, 0.55487487898104559, 1.0340765892509547], [-2.1472202856388356, -0.63196037421723961, -0.75417543447283142, 0.27780398929831945], [-0.60499417148894374, -0.59381342194754916, -1.3968863560085447, -0.459152376504886]], [[0.48346359020623003, -0.65563188649918214, -1.5521007413758221, 0.26348350167299939], [-0.80034022985377173, 0.34246735632251113, 3.0231209856376129, -0.57302755144331108], [-0.35136842426657872, 3.5567400754590826, 0.88092543469451801, 1.564122329592408]]], [[[0.25858820489642936, 0.50136028396984678, 0.58270848323561963, -2.7349405284694326], [-0.56284448604525383, 0.49098037265953809, -0.80491197223575273, -0.38110563405643511], [-2.1888243614071992, 0.37245936698030058, -0.40093827546107369, 0.34964242518971228]], [[0.72887435921440635, -0.67529711434671569, 0.30504179191764214, -0.24814637857398031], [0.30021537606648485, 0.63372472309044758, -1.6611661345916733, 0.2425448018991245], [-0.26688558336418838, -5.6234833010000571, 0.28540843095109675, 0.43759008113153669]]], [[[-1.226719223846704, 0.25960331130275449, -0.29777961451450508, -1.3601215631510601], [10.878415725246326, -0.29097272275731878, -0.34782778117909247, 1.288506913937248], [-0.28473205960784914, -38.243137090030366, -0.81023152933308162, 0.33768292540859013]], [[-0.33046836610296598, 0.25706874475023478, -0.24110827796915607, -0.26312007613407612], [-0.33409570591851845, 0.24485500254984718, -0.37463316595518575, -0.24546215887871914], [1.5428209269622493, -0.41686687633055236, -0.25602358054410473, 5.6174182153530632]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[0.24393195823749753, -3.6825091853958929, -0.90834794752284376, 1.8081606364941476], [0.29036270354434912, -0.27893510168282615, -0.33511183578024717, 0.66713277322979525], [-2.7825541586015716, 0.3218034033957653, -0.66028260181036302, 0.59351836112235934]], [[0.46203028602412788, 0.2717377113239785, -2.6953797907047687, 0.30642584604620765], [0.28151015835115673, -0.31442801383585034, -0.53331645178269871, 0.74249470406231755], [2.0044299733090929, -0.42770213862739759, 0.29651178254140453, 0.61266304254076098]]], [[[-0.31663679967266262, -1.6736027716954209, 0.60101125841761871, -0.34544575072754691], [-0.28446846338631754, -0.26499554269489611, 1.6148469692757823, -0.57157362626799157], [0.51267110954421169, -0.4111419904507615, 4.0012157619104789, -0.24268188267791091]], [[-0.265906792735219, -1.0389475562777415, -1.125953870518478, 0.33623532817362856], [1.361016354177975, 0.45455551676038003, 0.24580194528071025, 0.5763565124412342], [-0.38848948051294435, -0.53717499549603553, -3.0356367164026974, 0.257291056736346]]], [[[0.49770009804194876, -0.24344342336552038, -0.30655466635781897, 0.2592264447450634], [0.35107166842316267, 2.4888603713014827, 0.7065692641299065, 0.24321399426450796], [-0.37427118944740223, 1.0973545757031486, 0.59157325400129424, -0.86434071175849636]], [[0.54213799731389301, -12.878056678869958, -0.47933717966108846, -0.42022851590671956], [-0.34028309223955272, 0.26713571406430225, -1.0295418646598054, 0.31286538738957292], [-1.1573623721036661, 0.295974566979814, -1.1012733189122368, 0.36671904145916956]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_div_overloaded_constData_rank0_taggedData_rank0(self):
      arg0=Data(2.20674093822,self.functionspace)
      arg1=Data(-0.707495774895,self.functionspace)
      arg1.setTaggedValue(1,-2.88870574019)
      res=arg0/arg1
      ref=Data(-3.11908709072,self.functionspace)
      ref.setTaggedValue(1,-0.763920293962)
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_div_overloaded_constData_rank0_taggedData_rank1(self):
      arg0=Data(-3.85742192674,self.functionspace)
      arg1=Data(numarray.array([1.1476886192811531, 1.2600836428974427]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([-3.8657758687700152, -0.70778037640435887]))
      res=arg0/arg1
      ref=Data(numarray.array([-3.3610352685719769, -3.06124275835599]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([0.99783899990300218, 5.4500266683557568]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_div_overloaded_constData_rank0_taggedData_rank2(self):
      arg0=Data(-3.32334925637,self.functionspace)
      arg1=Data(numarray.array([[-2.1894767590113307, -4.9459887058223266, 0.21738557706519224, 0.25916702845134232, -3.2167462638555779], [0.87751372732748223, -0.58986023525252929, -3.7500060502682619, -3.9331935649214689, 0.13386935591894122], [-3.3696689989587716, -3.0236469753840756, -4.1345844831901619, -3.0866737505456676, -0.86639436477752074], [0.91195952992653417, 0.72955614534918833, 4.9893385457301243, -4.9951855729182846, -0.85147238709252893]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[-0.076936971515947583, 0.96591761133066179, -4.6167646063351349, 2.0271833763580913, 2.5095884650854652], [4.8917158391157045, -0.25021690479511971, 2.132018625605653, 4.1601611747154017, 3.204379729440415], [-0.72312034831626448, 3.5918537997251025, 3.519934821057852, -2.1094561286976186, 2.8903365982059981], [-4.7972633333815509, -4.5191085930110164, 3.2550932356179985, -1.5137486048197646, -0.2316874649356766]]))
      res=arg0/arg1
      ref=Data(numarray.array([[1.5178737306474492, 0.67192819353878208, -15.287809344268355, -12.823194664171417, 1.0331400066298866], [-3.787233353588511, 5.6341300154665142, 0.88622503852458434, 0.84494932718440197, -24.825317441421952], [0.9862539191218278, 1.0991194684506016, 0.80379280430186917, 1.0766765537753729, 3.8358389568009357], [-3.6441850184230629, -4.5553029435119843, -0.66609014920635856, 0.66531046902124391, 3.9030616925986918]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[43.195737899269233, -3.4406135858607252, 0.7198437736691421, -1.6393925162986156, -1.3242606517372706], [-0.67938313787400828, 13.281873417336087, -1.5587805924642588, -0.79885108215639422, -1.0371271624998], [4.595845303073828, -0.92524624933808897, -0.94415079406715907, 1.5754531280146866, -1.1498139207831999], [0.69275939747585491, 0.73539929124653214, -1.0209689909958777, 2.1954433158748388, 14.344104707128096]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_div_overloaded_constData_rank0_taggedData_rank3(self):
      arg0=Data(-0.36054099192,self.functionspace)
      arg1=Data(numarray.array([[[-3.4777829118500825, 2.5861179243702326], [-0.31307176586733831, 2.9290849166548947]], [[2.3748161016655267, -4.5603485313701793], [3.1274404956404496, -2.9256573446892284]], [[-4.8051276071531142, -1.362383820269768], [-3.7761610666308321, 3.9014351538845524]], [[3.4904078719832139, -0.37896776253300857], [0.87231031240545853, -0.20747709716432006]], [[3.2213434923912203, 3.052045925261325], [-2.1594867981437114, -4.9541438692063364]], [[-4.3723471506500724, 0.13506123740451326], [1.6256383365753173, 0.87551365598019615]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[2.1300119212290483, -4.9481617183479001], [-0.66984879260119978, -3.9605702045285254]], [[-1.5893085322329004, 2.620104187747696], [4.6267318374860036, -3.1524897793121531]], [[0.8804621030700952, -1.3592447340588243], [1.8097485258645669, -1.5679733865711976]], [[-1.7798184574398936, 4.9462192372553542], [1.9662582740241668, -0.10421490819175183]], [[4.9092743420191063, 1.5159259140936934], [0.78477367127559017, 2.8264233550244757]], [[-4.8715818788534264, 0.98830914169182371], [3.0294781181419062, 1.6374283490796513]]]))
      res=arg0/arg1
      ref=Data(numarray.array([[[0.10366978073626021, -0.13941397974247791], [1.151624104208065, -0.12308997594086808]], [[-0.15181848887876112, 0.079059964263627075], [-0.11528308609624804, 0.12323418276384251]], [[0.07503255301338807, 0.26463980748715826], [0.095478181560060577, -0.092412401513537856]], [[-0.1032948025397831, 0.95137641658479333], [-0.41331735598263514, 1.7377387521200245]], [[-0.11192255429183651, -0.11813091963514279], [0.16695679372975589, 0.072775640239444633]], [[0.082459370104271346, -2.6694631179779389], [-0.22178425779460351, -0.41180510373211804]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[-0.16926712396603544, 0.072863623390261506], [0.53824235544224053, 0.091032597151684672]], [[0.22685399631830341, -0.13760559355074359], [-0.077925629706630098, 0.11436706132588244]], [[-0.40949064208741676, 0.26525097569677791], [-0.19922159723687036, 0.22994075984174198]], [[0.20257177939283533, -0.072892238420041], [-0.18336400496457836, 3.4595913211997233]], [[-0.073440791204902559, -0.23783549615969357], [-0.45942034642138097, -0.1275608593025826]], [[0.074009018196912121, -0.36480588584116841], [-0.1190109246080127, -0.22018733956967321]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_div_overloaded_constData_rank0_taggedData_rank4(self):
      arg0=Data(0.135869730246,self.functionspace)
      arg1=Data(numarray.array([[[[-2.0118141541466628, -1.4485699498312474, -4.356974536106236, -4.7847651197014365], [2.3506548838105692, 3.0216815570643298, 2.7951380752011135, -1.057300270840539], [-4.3410868494704991, 0.16768650552685216, 2.2480335593136829, -4.3792660210958489]], [[-4.9305540684590614, -2.9602955008781384, -4.0273626067438526, -1.4797548019016737], [4.3308582325662499, -3.4271795134720295, 0.32855580481089319, 0.37615668601418939], [3.6176108347500531, 4.1698238147380646, 0.96377054300975118, 4.9261629115498238]]], [[[-1.2781454968554637, 1.3968319656083903, -2.7477657102941566, 3.4642661657685707], [1.8680307006895234, -1.3674314148597801, -2.7640608668981437, 2.7193130543511259], [3.853725428116304, 3.8430630709740914, -4.2163460366112702, 3.5757860396038446]], [[-3.1834535912919684, 2.3549041314866077, -4.4559155722565613, 1.071754890339057], [-4.3932567550526338, -2.8465586048205891, -4.0923043129321526, 3.1526709972206337], [-3.1187854967479431, -3.0009675789119483, -0.1986567863252553, 1.8427407678950143]]], [[[-3.4859998323962182, -1.1653957041309901, -2.8192990087460092, -2.7864784822994415], [2.1558757316363453, 4.3765316546055324, 1.9820169980899855, 1.0030089252137095], [-0.040605968139832527, -0.010031182935654748, -3.4416497495608347, 1.6219192195928898]], [[-2.2121224422209176, -1.2307420109277456, 1.8692260645322616, 2.2677320707085045], [-2.0758042127710343, -0.68542432885667637, 2.6831785432997002, -1.1319899673565748], [1.2850495340014021, -0.49126725450923381, -2.9377294292623377, 4.4685947020146841]]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[[0.020539442728244595, 2.3361660977592056, 2.4631811124116876, 0.71783793677018082], [1.5301372766865304, 0.60482947813645715, -4.7186789711301067, -2.3308716345871403], [2.3518800389813652, 4.8033145433793223, 2.8325970377015679, -4.1907034864924784]], [[0.70037695614196238, 3.5700465742164269, -2.2869246847346902, 4.636999560364492], [3.9990570879474987, -4.5953281305785634, -0.32834480236619701, -1.8109628339339459], [4.2348586650716875, -4.5962447679296385, -0.03838232625863025, 0.77467396901565699]]], [[[3.3869494172138399, 0.24851162824529016, -3.8280922056564668, 0.29721104044761404], [2.0403740401664479, 3.8282110028211473, 2.3332955300893721, 1.9453471481140898], [-3.6327357067538357, 0.39074252141170618, -4.1481501134298693, -3.1623475064843332]], [[1.4724796392860355, -2.9662747191833203, -2.0797484607657637, 1.8275664710887005], [-2.8927734364098647, -3.0993623517107771, -1.3220568256144194, 1.4930862990443998], [-3.1372480192288075, -0.11237338532426389, 1.0530442951046837, -0.17463262338962249]]], [[[4.5890428381345743, -1.3392215693772691, 3.9704494710711167, -2.6544632033270155], [-4.9180738375268129, -1.3418556383851818, -3.8770454208169767, 1.4885355575169807], [-1.5485935986068577, 3.569321917567521, -1.7667207942154119, -4.5373079100481162]], [[-4.4949677820536866, -3.2680656021039969, 4.9586758956692449, -0.52504395141281002], [0.16264759970116671, -4.0921050841912052, -1.2774387526331266, 0.27980341051749669], [-2.972529251272781, 1.6080683030556884, -4.7553206687763847, -0.36967858035345547]]]]))
      res=arg0/arg1
      ref=Data(numarray.array([[[[-0.067535925207587208, -0.093795767516675746, -0.031184421464955158, -0.028396321835436816], [0.057800798910029871, 0.04496494011037238, 0.048609308946656722, -0.12850628529395891], [-0.031298551482006623, 0.81026037139438811, 0.060439369191398959, -0.031025685489646248]], [[-0.027556685995023984, -0.045897353897849089, -0.033736651876962689, -0.091819083858626041], [0.03137247237148761, -0.039644766115086438, 0.41353623419990054, 0.36120514481800031], [0.037557862482298157, 0.032584045821261939, 0.14097725981716339, 0.027581249886692898]]], [[[-0.10630224069191307, 0.097269917635967235, -0.049447349072373817, 0.039220349633807869], [0.072734206239684615, -0.099361276016864633, -0.049155838741890188, 0.049964725476756539], [0.035256723080146185, 0.035354540827656981, -0.032224520726295641, 0.037997164467107526]], [[-0.04267997831589973, 0.057696501708645896, -0.030491989366218466, 0.12677313765559867], [-0.030926881314130374, -0.047731225352578975, -0.033201277289338027, 0.043096704466084747], [-0.04356494872369069, -0.045275307604381455, -0.68394205282047882, 0.073732416742057549]]], [[[-0.03897582810628529, -0.116586778005441, -0.048192735082203141, -0.04876037303323897], [0.063022987945082987, 0.031045069696465068, 0.068551243696168204, 0.13546213481307237], [-3.3460532150871831, -13.544736559741143, -0.039478081772659102, 0.083770960109911238]], [[-0.061420528833659137, -0.11039659736941489, 0.072687692957038433, 0.05991436642846646], [-0.065454019897492652, -0.19822717771435419, 0.050637603146201908, -0.12002732724151045], [0.10573112292639927, -0.27656988940112748, -0.046249912906421463, 0.030405471810803723]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[6.6150641009930879, 0.058159276592677771, 0.055160267980857082, 0.18927633005486261], [0.088795778206408021, 0.22464138266647185, -0.028794018638965396, -0.058291382601204679], [0.057770688978193624, 0.028286661016878691, 0.047966487445126348, -0.03242169976567208]], [[0.19399514654858852, 0.038058251460160786, -0.059411545624108213, 0.029301216978190586], [0.033975441524829286, -0.029566926753695825, -0.4138019827537312, -0.075026238915607765], [0.032083651661540008, -0.029561030168377293, -3.5399034787648933, 0.17538956474638981]]], [[[0.040115665606185229, 0.546733894125493, -0.035492805017927849, 0.45714900106465772], [0.066590599356444707, 0.035491703604082173, 0.058230827811516069, 0.069843436621444557], [-0.037401490560794393, 0.34772189562357636, -0.03275429445191206, -0.042964832285957204]], [[0.092272739548299496, -0.045804837079763877, -0.06532988619017277, 0.074344617498413243], [-0.046968673224073242, -0.043837962402497842, -0.10277147518441165, 0.090999247888734383], [-0.043308571529328301, -1.2090917244679384, 0.12902565530969184, -0.7780317767023156]]], [[[0.029607422514548763, -0.10145425772166516, 0.034220239102894429, -0.05118538847165776], [-0.027626614551671744, -0.101255102530644, -0.0350446578511798, 0.091277450216008277], [-0.087737499604961022, 0.038065978184060524, -0.07690503824423095, -0.02994500989124485]], [[-0.030227075439445618, -0.041574970269428108, 0.027400405492256266, -0.25877782208596145], [0.83536265211198024, -0.033202893730884885, -0.10636105250913379, 0.4855899718831988], [-0.045708458609057416, 0.084492511908748874, -0.028572148906411323, -0.36753476524419448]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_div_overloaded_constData_rank1_taggedData_rank0(self):
      arg0=Data(numarray.array([3.2585370968848757, 1.1454175877624291]),self.functionspace)
      arg1=Data(-2.93544378089,self.functionspace)
      arg1.setTaggedValue(1,-1.7765826732)
      res=arg0/arg1
      ref=Data(numarray.array([-1.1100662591795942, -0.39020252924586424]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([-1.8341601244001815, -0.64473081103446983]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_div_overloaded_constData_rank1_taggedData_rank1(self):
      arg0=Data(numarray.array([-3.2873749726724677, 2.537628784189514]),self.functionspace)
      arg1=Data(numarray.array([-0.80369604430644515, 4.5440558592404088]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([0.35406786474087504, 3.4767588100197635]))
      res=arg0/arg1
      ref=Data(numarray.array([4.0903212053374354, 0.55845017376474504]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([-9.284590046256632, 0.72988346987897301]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_div_overloaded_constData_rank2_taggedData_rank0(self):
      arg0=Data(numarray.array([[-1.4112039068670001, 2.3844727243919053, -0.75018126153440612, 0.29224859319870333, 4.0528743390776452], [1.9704199277864749, -2.1729409187986413, -2.4825493518310005, -2.1875975998764421, 4.9720042358891909], [3.3006411409063965, 0.66079211276274386, -1.3681574974938391, 4.9776486045598318, -3.9336042743125299], [-3.6909919190458771, -2.1480074682985437, 3.2063682437999201, -2.1716564783041159, -3.0121932209668212]]),self.functionspace)
      arg1=Data(-1.57513181223,self.functionspace)
      arg1.setTaggedValue(1,1.87210037907)
      res=arg0/arg1
      ref=Data(numarray.array([[0.89592750010320077, -1.5138242437065803, 0.47626570405613905, -0.18553913452130785, -2.5730382102637277], [-1.2509555787543909, 1.3795295745554479, 1.5760899072386068, 1.3888346250686632, -3.1565639124768596], [-2.0954697983193307, -0.41951543841015804, 0.86859873368578333, -3.1601473387189079, 2.4973175221036521], [2.3432908219999318, 1.3637001371036392, -2.0356189995643836, 1.3787141250263675, 1.9123435877384896]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[-0.75380782069450514, 1.2736885003881666, -0.40071636645235031, 0.15610733081743924, 2.1648808922810976], [1.0525183103519651, -1.1606967997516264, -1.3260770520575456, -1.1685258036029549, 2.655842759010095], [1.7630684646026589, 0.35296831310483778, -0.73081417684161565, 2.6588577515466865, -2.1011716670180491], [-1.9715779988690334, -1.1473783629953114, 1.7127117112145833, -1.1600107037981795, -1.6089912991020063]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_div_overloaded_constData_rank2_taggedData_rank2(self):
      arg0=Data(numarray.array([[2.1242999657742629, -3.4221008601311564, 4.2534489054981375, -4.8094965494123985, 4.2667327602227072], [-3.6816173720608258, 1.4409034883997451, -4.034615678096003, -1.8654408170921997, 0.87668821722978407], [-1.9951165434446114, 0.45212816257873989, -2.205575441391133, -1.7963673125665891, 4.1658244100775637], [2.265279299567001, -0.58964116078633833, -0.52906345752831019, -2.2048578238610403, -3.2055551728240972]]),self.functionspace)
      arg1=Data(numarray.array([[3.5943115462955646, -3.0844586504099247, -2.7379900762426268, 2.1889271004313908, -1.9778180484342145], [1.5687583805902436, 0.64969773638259731, -2.7566385783967382, -3.6243552192765769, 2.3794575949312815], [3.1534586273684582, -2.3236537673598701, -4.8303168433264752, 4.4349372319698883, 1.5406507964844085], [2.2497316341606242, 0.5718283152109036, -1.83523453963251, 0.93037440006281891, -3.6951477240543626]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[4.8794157182702627, 1.4041991126063849, 1.3961903501679584, -0.19042047134780127, -0.67996644605524459], [4.1306622917886742, -4.7891221822455314, 1.4035302073653213, -2.7472352870139414, -3.9112979346701215], [1.1424091371706826, -0.12991144661524245, -2.8477964939229228, 1.8369104041912729, -4.673017980849564], [4.0404887066736102, 0.60585388990847733, -2.2948948876050435, -2.6772976779015356, -4.6260664401208729]]))
      res=arg0/arg1
      ref=Data(numarray.array([[0.59101720549618131, 1.1094656301119028, -1.5534931782277279, -2.1971935696097642, -2.157292863011623], [-2.3468351899262023, 2.2178059237553178, 1.4635998022064018, 0.51469591257794611, 0.36844036182754614], [-0.63267566795684393, -0.19457639039418806, 0.45661092489995503, -0.40504909508464171, 2.7039381147132793], [1.0069108978023407, -1.0311506882426151, 0.2882811139955172, -2.3698608041151696, 0.86750393007479598]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[0.43535949556831788, -2.437048157493328, 3.0464677720960163, 25.257245270798098, -6.2749166300421422], [-0.8912898494218463, -0.30087006210481188, -2.8746197673006999, 0.67902477298178832, -0.22414253065682757], [-1.7464115775419691, -3.4802796393900821, 0.77448492056849483, -0.9779286504490492, -0.89146338129865454], [0.56064487838450727, -0.97323986955899855, 0.23053929850375054, 0.82353854114168079, 0.69293323265377493]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_div_overloaded_constData_rank3_taggedData_rank0(self):
      arg0=Data(numarray.array([[[2.6375759461098571, -0.43198402551411963], [1.6874696619176541, 1.831463809668338]], [[-3.8383287600871805, 3.0959933190860376], [-1.5389902059323646, 1.0811639522118535]], [[1.6142394852896498, 3.8739496592777307], [0.043286786771422392, 2.3845984586399274]], [[1.5164970238400599, -3.7468631863780386], [3.2752310454695071, -1.6820948111677749]], [[-4.7093914200301317, -1.8351240837587754], [0.23258098683259831, -3.3092167865797997]], [[-1.5246914567979806, -1.3122311385794418], [-4.5490618864752239, -2.2060097425654037]]]),self.functionspace)
      arg1=Data(2.83227781938,self.functionspace)
      arg1.setTaggedValue(1,0.866518073529)
      res=arg0/arg1
      ref=Data(numarray.array([[[0.93125608231636536, -0.15252176977761089], [0.5957994835003334, 0.64663988720835253]], [[-1.3552091301988771, 1.0931107456685982], [-0.54337543986691195, 0.38172948459113409]], [[0.56994390671798034, 1.367785897543796], [0.015283383033680311, 0.84193663570746313]], [[0.53543371115005634, -1.322915132384398], [1.1563946951303552, -0.59390177039002467]], [[-1.6627575825370751, -0.64793223009413459], [0.082117998891539187, -1.1683941327835796]], [[-0.53832694178648688, -0.46331300185285212], [-1.6061495999240374, -0.7788818340731205]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[3.043878744928076, -0.49852858089271096], [1.9474142703636017, 2.1135898553278136]], [[-4.4296003480420287, 3.572912572358137], [-1.7760624422584472, 1.2477107924698314]], [[1.8629034230251316, 4.4707084336997163], [0.049954857369736774, 2.7519315886042008]], [[1.7501043199994299, -4.3240450497703202], [3.7797607984471511, -1.9412114560033753]], [[-5.4348450008117082, -2.1178139727493139], [0.26840869675744916, -3.818981839702408]], [[-1.7595610563425637, -1.5143724968548706], [-5.249817661564169, -2.5458323489804116]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_div_overloaded_constData_rank3_taggedData_rank3(self):
      arg0=Data(numarray.array([[[4.8303225645325281, -1.0125453237903259], [2.569604615749455, 1.2552508462123315]], [[-3.126977584206112, 3.1569136639623281], [3.7002735557649693, 2.5687804807560424]], [[-3.0538389311101088, -0.36985166324444041], [-0.69529422769575078, -4.8557413152636464]], [[-2.4905676261177154, 3.7498719272240759], [-1.9291435617097052, -2.6737150849446745]], [[-1.8559499267186572, 4.7293161660832688], [1.0977607101120492, 1.2895476314272951]], [[-1.7741830671411298, 4.9174177866142958], [-0.56915213868415027, 1.7847200642595595]]]),self.functionspace)
      arg1=Data(numarray.array([[[2.7162713855158316, 0.48303593143262091], [-0.18054295857952596, 2.4043604973410515]], [[0.19783477216364709, -1.0306617538413732], [-0.7179577077467405, -1.1511629800898646]], [[-3.0798640564733648, 4.1804252248204214], [-4.9327278660714358, 3.2549958666072847]], [[-2.0909917665980826, -2.9585134915299847], [-3.7066650346990504, 4.2676629763540515]], [[4.1253146300741932, -4.5927979362442741], [4.3699763164694332, -0.81512767038709111]], [[-0.34278103039103591, -3.6926309440512481], [-2.819051354175758, 4.6322903358636172]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[4.0791814075741115, -2.7571044312349056], [-2.2565683255916067, 2.1599933357453178]], [[1.9490405642078104, -2.1937628909281379], [-2.0780393295047404, 3.3735947926417786]], [[-3.277246602870342, 0.12914894658870946], [-2.8392206047615187, -2.2118315970562996]], [[-1.113162735231592, -4.0540600088616854], [2.8236181373569611, -1.4112029583924612]], [[2.6684523673283422, 4.8710676069119501], [3.495269856384505, -2.1577555328919082]], [[-2.2665352681117277, 0.96684744328519123], [-0.37893362511194795, 0.44803354310583465]]]))
      res=arg0/arg1
      ref=Data(numarray.array([[[1.7782915912929771, -2.0962111882386263], [-14.232649314969489, 0.5220726457619379]], [[-15.806005941258421, -3.06299680976442], [-5.1538879182424493, -2.2314655050456129]], [[0.99154991100709289, -0.088472259005739809], [0.14095531855267393, -1.4917811002705927]], [[1.1910939420721482, -1.267485153594768], [0.52045262888620725, -0.62650567764113418]], [[-0.44989293984717915, -1.0297244145582054], [0.25120518524890906, -1.5820192078805393]], [[5.1758496236422031, -1.3316840651341435], [0.20189491682763633, 0.38527810971650306]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[1.1841401697810543, 0.36724953625960677], [-1.1387222742638556, 0.58113644400629605]], [[-1.6043676266312474, -1.4390405075302828], [-1.7806561710489168, 0.76143717270339217]], [[0.93183068019215765, -2.8637605881701695], [0.24488911729145199, 2.1953485616744488]], [[2.2373796276961753, -0.92496705007506275], [-0.68321687560608813, 1.8946354024019156]], [[-0.69551547910028333, 0.97089930744801434], [0.31407037373863006, -0.59763379667899308]], [[0.78277320106261516, 5.0860327766971238], [1.5019837274034635, 3.9834518904268119]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_div_overloaded_constData_rank4_taggedData_rank0(self):
      arg0=Data(numarray.array([[[[-0.40439655050506307, 4.7434545426165862, 3.135682738883439, 3.6890247371085412], [-3.0240233683889506, -3.0091160627712443, 4.9563636007625362, -2.7993775220515458], [3.1593616202308965, 2.2839736444338268, -1.680261946012791, -2.7937825726014989]], [[0.46596655666301601, 3.6943544529664702, -1.5589931865433759, -1.2021917139461835], [-1.7532963918640587, 2.687443190168004, 1.2626313379950984, 0.57686811363170865], [3.6083299837397291, -3.301213684076548, 3.806992606627297, -0.70222177045157963]]], [[[-4.7482159117577414, 2.5371566506143637, -3.1243746857120214, 2.0799416723605884], [-3.4564422813449669, -4.9450390976084515, -1.1433380071130661, -3.7353188366478474], [0.70693669677722148, -4.4585762059345875, 4.2928520010064801, -4.7999322967126181]], [[-0.26969445824687988, 1.4888875603746863, 1.5696795377620223, 0.68305017181904315], [-3.4740113184712964, 3.0298970865586483, -3.2140618612730174, -4.2715960958365384], [2.905858897840174, -1.1307926793268299, -1.515030551515939, -1.7465901236069117]]], [[[-1.8544338104517877, 3.1855981173537415, 0.57801513741138155, -1.8057838711819985], [1.7459494646057667, 1.7369656430881362, 1.8768624862324437, -2.0087825793770966], [-2.624487765952952, -4.3579545617989499, 4.1792741353895337, 0.39684950891829107]], [[-2.6538601617546975, 3.4521058612465634, 0.46125256449499119, 2.3167452388635059], [-4.6112734888389975, -3.702753425479882, 3.5555330825741684, 0.35105302555406759], [1.9210357584595217, -2.9392465676608639, 1.865934640724296, 0.73700163702246435]]]]),self.functionspace)
      arg1=Data(0.829003758751,self.functionspace)
      arg1.setTaggedValue(1,1.06971166958)
      res=arg0/arg1
      ref=Data(numarray.array([[[[-0.48781027376104608, 5.7218733842238949, 3.7824710754138002, 4.4499493496487137], [-3.6477800449861792, -3.6297978519498373, 5.9786985866413476, -3.3767971405467923], [3.8110341320917875, 2.7550823748688975, -2.0268447860177918, -3.3700481368287885]], [[0.56208014951015761, 4.4563784107979192, -1.8805622653544578, -1.4501643704945666], [-2.1149438387426422, 3.2417744332285046, 1.5230707034405169, 0.69585705437707202], [4.3526099196195558, -3.9821456166276832, 4.592250115204406, -0.84706705251844816]]], [[[-5.7276168673998109, 3.0604887177329076, -3.7688305423618633, 2.5089653097536093], [-4.1693927739896317, -5.9650382105157291, -1.37917107738596, -4.5057924010832169], [0.85275451325173579, -5.3782340054213869, 5.178326341338086, -5.7900006435998366]], [[-0.32532356506240862, 1.7959961515960026, 1.8934528597647315, 0.82394098290758133], [-4.1905857263024267, 3.6548653182526722, -3.8770172358651176, -5.1526860412241549], [3.5052421260666509, -1.3640380606127389, -1.827531582968055, -2.106854287656343]]], [[[-2.236942584249122, 3.8426823566576043, 0.69724067148081303, -2.1782577607410714], [2.1060814817499973, 2.095244592987068, 2.2639975590232519, -2.4231284335846315], [-3.1658333731904493, -5.2568574216923976, 5.0413210932700654, 0.47870652542805148]], [[-3.2012643293130285, 4.1641618928836897, 0.55639381562051471, 2.7946136726269075], [-5.5624277214240045, -4.4665098154203422, 4.2889227522113744, 0.42346373203801402], [2.317282326143792, -3.5455165753297142, 2.2508156579850498, 0.88902086298524519]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[-0.37804257166346222, 4.4343299951987474, 2.9313345157067121, 3.4486159607565199], [-2.8269518360836048, -2.8130160195064051, 4.6333640566204277, -2.6169458571581141], [2.9534702762306999, 2.1351301564638931, -1.5707615367776886, -2.6117155230324118]], [[0.43560014339897168, 3.4535983462062738, -1.4573956991240327, -1.1238464982085212], [-1.6390364261038859, 2.5123061350095548, 1.1803473533154409, 0.53927439518367282], [3.3731799758422207, -3.086078032021407, 3.558896023014301, -0.65645892292610175]]], [[[-4.4387810723222128, 2.3718135669391711, -2.9207633931388002, 1.9443946733649367], [-3.2311905905577594, -4.6227775560930757, -1.0688282082272358, -3.4918931361449497], [0.66086658384982444, -4.1680167962459684, 4.0130926146730594, -4.4871271700845732]], [[-0.25211883343638514, 1.3918587622441594, 1.4673856352185677, 0.63853671156971914], [-3.2476146771840999, 2.8324427719467464, -3.0046057761956426, -3.9932219282306467], [2.7164879850202865, -1.0571004425656678, -1.4162980498435984, -1.6327671963218056]]], [[[-1.7335828552624859, 2.9779969761527787, 0.54034666896762351, -1.6881033670476324], [1.6321682882053794, 1.623769930243006, 1.7545498844335694, -1.8778729226845192], [-2.4534534310468277, -4.0739525292126961, 3.9069164656721544, 0.37098736061789062]], [[-2.4809116673521099, 3.2271367691199502, 0.43119335575507162, 2.1657660701981594], [-4.3107630027680326, -3.461449968986773, 3.3238237776561528, 0.32817537242825034], [1.7958444439708809, -2.7476998253416252, 1.7443341919073063, 0.68897223240944938]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_div_overloaded_constData_rank4_taggedData_rank4(self):
      arg0=Data(numarray.array([[[[2.0267423103229278, 4.4304144537213581, 2.3998280562999295, 0.73346121699437994], [-0.70471017413104953, 0.12036320698675773, -1.9875348687034, 1.7040368796017802], [-2.9924975322791738, 3.8272926953468183, 4.5594274045174554, -0.16228766761595814]], [[2.1449467587140028, -1.138919086121045, -3.5854052066399369, -3.5438499769716714], [1.7706143766847457, -3.3001727622469601, 4.6622898862050697, 2.1136376510182036], [-0.10334082163529423, -2.4222888015696475, 2.0207072143394091, 4.2395543949793613]]], [[[0.81742005488931291, 4.023960713960161, 3.6165574700924363, -3.98217737122601], [4.7758814615918705, -4.0098356488952538, -2.3378042266399977, 4.5768812718249325], [-4.6356398313845091, -2.469718272610578, -0.88945710474326667, 4.1639966092317433]], [[-2.4091448984896768, 0.87460010281437039, 3.8200461458693944, 0.96138924349685517], [4.5419678853711218, 1.3431536047458454, -0.5432998335173167, -1.5681019632291857], [-0.71961925597821619, -0.023225164995805514, -3.2215782779344018, 0.7147037911800993]]], [[[-3.2331757340286984, -3.8028177233147877, -3.0284332892284773, 1.9064210246288908], [-1.9767690620578748, -3.2315964412321154, 4.1049555220198339, -1.9432452143380763], [-1.2618564757456676, 4.2475267848701819, -4.3922832376031993, 4.9266431588365869]], [[-0.73818099973821916, -0.2429119201422747, -1.6837321904074165, -2.2725318026746888], [-0.078372641583149161, 0.21708511865109692, -4.8602869378366602, 0.10115190778778782], [-2.4173702167796951, 3.6570734534176221, 4.9018739714191923, -3.0200750675728982]]]]),self.functionspace)
      arg1=Data(numarray.array([[[[-3.0749199480722957, 4.527135569632474, 3.8314162039939816, -0.17890255087897344], [3.2744214839737396, -4.1033528924311957, -2.3215361326676143, 2.6137076375879973], [-0.49410291123851291, -1.7907712904243955, -1.2137242352469935, -2.1619296163976607]], [[-3.1907513685622515, 1.708388050884051, 4.2066499009231801, 2.6406571363429556], [1.5124465159515852, -0.85708823513832133, 2.2589981571609554, -4.0864183610547142], [0.017339812113645436, 3.4317973973471965, -2.5492970433716824, -2.3343116509947048]]], [[[1.4621064465511546, 4.3954244313602562, 2.2436704937089864, -2.593153967022086], [-0.43817452374418142, -1.4572602329033826, 1.4650427063747902, -1.6351042957221118], [-0.98293393491229253, -0.016659450881860494, -3.5572714927863922, 4.3513430853277075]], [[-4.4471446796274332, -4.6056359498574739, 0.70449701331028436, 1.8998795430745439], [1.9254438963206244, 0.39398369895024388, -4.6753723861998964, -1.944419492280276], [4.0698412790670542, -1.1423603011108452, -4.4919602257110594, 0.7227419735777163]]], [[[2.323855700529923, -0.75697665479222032, -1.3518806584814111, 4.0554573487258452], [-2.0576602387607945, 1.4415740555727732, -4.8307337346390886, -4.4699681608555775], [-3.1584800206067474, 2.2059791039773256, -4.7926475503324699, 4.947202826973145]], [[-0.72950717024511924, 0.36647077147856066, 2.1111574790992034, 1.0656325051029505], [-1.9285251192882846, 3.8562039891700302, -1.2230308520631796, -1.1689889042311554], [1.9053815031943824, 4.656492252685668, 3.6513764548491707, 1.8199585584886613]]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[[-0.36456385228451182, 2.2220461965410649, -1.9938606399882297, 4.0566344137755568], [2.5297709783923326, 0.73437391225396098, -4.8661744266664355, 1.4313162781076647], [-1.5867385405986867, -4.7509072633968721, 0.6862239678750548, -3.3828501795365149]], [[2.7038486779949036, -3.8417740864616636, -2.0001342191239049, -4.8125464015906152], [3.0740096934550287, 2.0861463332381156, -2.2973261516936407, 3.7860789586752617], [0.046222477934768413, -3.9412823790604556, -0.71558050872530998, -0.63438638763907029]]], [[[2.3169286406542327, -4.4338772677528677, -1.6916025033697224, -4.8289544524638552], [3.5897702062943253, -0.69684785172973474, 4.999688069539534, -4.9405518118605398], [3.0674225999757248, -0.34068115988563097, 4.445246225618849, 2.7354626544339853]], [[1.1404855054694529, 4.6077912581580058, -0.1561917937774302, 1.9031770744487231], [3.6884162791384458, -4.5702543326058205, -1.3577584451280034, -0.658097687525105], [4.2446893257066911, 1.5532247403082442, -2.1916973257355208, -0.7737461629127651]]], [[[-3.922054846645552, 0.093300629927113299, -3.6473786127903542, -1.4747299137752634], [-4.7722884547734976, -3.3666393719363876, 2.9647284395784048, 1.2114491935013492], [0.29917041263470701, -1.0464700598139776, 0.82958819060768629, 3.8284997851980638]], [[4.8272996441080291, 2.0515738836123996, -0.21313910907914746, 4.9907295061662555], [4.2134997819973101, 4.8047816888385597, -1.0342983460422284, -0.21998108051719445], [3.4369485288642814, 1.2991584707787407, 4.2376545125842977, 2.8609853695778709]]]]))
      res=arg0/arg1
      ref=Data(numarray.array([[[[-0.65912034932600994, 0.97863525082838021, 0.62635535492027139, -4.0997806537178016], [-0.21521669631724821, -0.029332891940338023, 0.85612919856628622, 0.65196154883425039], [6.0564256235167946, -2.1372314353106403, -3.7565595809245829, 0.075066119814932636]], [[-0.67223876477737377, -0.66666299002248397, -0.85231842228018395, -1.342033362907366], [1.1706955307247537, 3.8504469282726315, 2.0638750285943139, -0.51723476753189523], [-5.9597428713758056, -0.70583677330197114, -0.79265271169295981, -1.8161903930748868]]], [[[0.55907013939885108, 0.91548854423481962, 1.6118933150981301, 1.5356501857847817], [-10.899495983431853, 2.7516263453550982, -1.5957242860345231, -2.7991372072101632], [4.7161255367565964, 148.24727958468969, 0.25003913998325711, 0.95694513799022707]], [[0.54172847344636132, -0.18989779312484215, 5.4223737981794917, 0.50602641993873709], [2.3589198802678562, 3.4091603493358544, 0.11620461187668225, 0.8064627871993959], [-0.17681752349398189, 0.020330857937921231, 0.71718762323289242, 0.98887821284569044]]], [[[-1.3912979765875384, 5.0236922093173524, 2.2401631906106005, 0.47008780038775538], [0.96068778743003969, -2.2417137910741061, -0.84975818323104524, 0.43473356954876563], [0.3995138381477758, 1.9254610241828658, 0.91646280922503953, 0.99584418329799163]], [[1.0118899852487886, -0.66284118420201366, -0.79753983635831738, -2.1325661443249051], [0.040638641830121613, 0.056295029843019297, 3.9739692008894525, -0.086529399399488297], [-1.2687066672616276, 0.78537088756206486, 1.3424729090612697, -1.6594196903476985]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[-5.5593616800527546, 1.9938444396961397, -1.203608721778116, 0.18080535295556471], [-0.27856678732985241, 0.1638990778108329, 0.4084388873961835, 1.1905383217290575], [1.8859424257446253, -0.80559196026283308, 6.6442264012375905, 0.047973649142863672]], [[0.79329393548186045, 0.29645654858638709, 1.7925823039067896, 0.73637731073104629], [0.57599505312381316, -1.5819469179443577, -2.0294418721381482, 0.55826560251077262], [-2.2357265610280397, 0.61459407588732218, -2.8238712341941365, -6.6829214459617727]]], [[[0.35280329335412658, -0.90754896244558059, -2.1379475750882055, 0.82464587529795441], [1.3304142569398483, 5.7542484187070828, -0.46759001644182713, -0.92639070413904756], [-1.5112491612408394, 7.2493538340649053, -0.20009175186228073, 1.5222275480464735]], [[-2.112385371787791, 0.1898089678576276, -24.457406202229002, 0.50514965549137492], [1.2314141196752477, -0.293890341104938, 0.40014469102867323, 2.3827799321500671], [-0.16953402257735506, -0.01495286830880403, 1.4699010853851633, -0.92369284067219026]]], [[[0.82435760346236953, -40.758757216168412, 0.83030406511915, -1.2927255403319997], [0.41421826882249857, 0.95988791320212008, 1.3845974785480095, -1.6040666210042858], [-4.2178518411391819, -4.0589090390462106, -5.2945344296497074, 1.2868338605853447]], [[-0.15291799850030183, -0.11840271612083342, 7.8996867242331223, -0.45535062556824218], [-0.018600366829970134, 0.045181057685801336, 4.6991150633032381, -0.45982094255547334], [-0.7033478088129822, 2.8149556314138504, 1.1567422395720093, -1.0556066101164652]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_div_overloaded_taggedData_rank0_float_rank0(self):
      arg0=Data(3.65356534422,self.functionspace)
      arg0.setTaggedValue(1,-1.17926016579)
      arg1=-2.37300818504
      res=arg0/arg1
      ref=Data(-1.53963453108,self.functionspace)
      ref.setTaggedValue(1,0.496947365468)
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_div_overloaded_taggedData_rank0_array_rank0(self):
      arg0=Data(-0.177107121474,self.functionspace)
      arg0.setTaggedValue(1,-0.694156234322)
      arg1=numarray.array(1.03752931743)
      res=arg0/arg1
      ref=Data(-0.170700835629,self.functionspace)
      ref.setTaggedValue(1,-0.669047344167)
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_div_overloaded_taggedData_rank0_array_rank1(self):
      arg0=Data(-0.667094646269,self.functionspace)
      arg0.setTaggedValue(1,-3.86103689664)
      arg1=numarray.array([-3.2794782614723719, 2.4566354281925591])
      res=arg0/arg1
      ref=Data(numarray.array([0.20341487062327701, -0.27154808508157807]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([1.1773326696498316, -1.5716767951517205]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_div_overloaded_taggedData_rank0_array_rank2(self):
      arg0=Data(-1.12136649302,self.functionspace)
      arg0.setTaggedValue(1,-0.135474988185)
      arg1=numarray.array([[-4.7016203258815779, -1.195553024451661, 0.70607934955873386, 0.76361944055447672, -2.9546114444532368], [-0.84237928527766659, -2.6504357791235478, -2.9392721252310561, -3.9923151524787492, 1.0749527219716075], [0.95063739419692794, -3.6584397860427131, 4.2619516746355277, 4.7461606918243255, -0.86318012019117152], [-0.68072422070398009, 0.072401114773859909, -2.3193253343869316, 0.76198100785014233, 0.91251085425159228]])
      res=arg0/arg1
      ref=Data(numarray.array([[0.2385063904142028, 0.93794793713844393, -1.5881593105999545, -1.4684886652568985, 0.37953095156699246], [1.3311895397029334, 0.42308759255992201, 0.3815116277931947, 0.28088125566134947, -1.043177499906532], [-1.1795943436154879, 0.30651495134679546, -0.26311102955430854, -0.2362681261415599, 1.2991106569689186], [1.6473139326001751, -15.488248993493775, 0.48348822668315927, -1.471646250328329, -1.228880169259758]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[0.028814531756039312, 0.11331575046375719, -0.19186935330939797, -0.17741165427452185, 0.04585204881653223], [0.16082421606592465, 0.051114231573554221, 0.04609133908426561, 0.033933941337482058, -0.12602878751399904], [-0.14250963512686152, 0.037030809882891681, -0.031787077500483422, -0.028544121655704174, 0.15694868894217642], [0.19901596573844743, -1.8711726830187876, 0.058411377729707246, -0.17779312973585071, -0.14846397448725826]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_div_overloaded_taggedData_rank0_array_rank3(self):
      arg0=Data(1.04505458244,self.functionspace)
      arg0.setTaggedValue(1,-4.42265972115)
      arg1=numarray.array([[[-0.85371618468244836, 4.7933895743288719], [4.7447822909239825, 0.99290307762258756]], [[-1.5109097371537974, -4.971113528906753], [-0.55762642667318563, 1.1502033348125016]], [[-2.915209220379694, 4.3298574014955165], [2.4121988281640956, 3.8675256922831416]], [[2.425278072924498, 3.5545003821874452], [2.2306237850195725, 2.5967654878909752]], [[-1.8835381269518461, -3.3280636126263619], [1.5102969231404115, 3.5994910063932277]], [[3.8930526803950087, 3.8178257644340459], [-0.25009295764235873, -2.2152654993081686]]])
      res=arg0/arg1
      ref=Data(numarray.array([[[-1.2241241307007049, 0.21801995565650301], [0.22025343174091433, 1.0525242654517788]], [[-0.69167241215094977, -0.21022545076924704], [-1.874112367081217, 0.90858246608186222]], [[-0.35848356101981954, 0.24136004619426188], [0.43323733111789414, 0.27021270589739527]], [[0.43090093218851216, 0.29400885358644868], [0.46850329018183351, 0.40244472876458726]], [[-0.55483590562127338, -0.31401280266239062], [0.6919530632867259, 0.29033398905105007]], [[0.26844090440961821, 0.27373029753610123], [-4.1786645745298729, -0.47175139177037556]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[5.1804801179861473, -0.9226581008220337], [-0.93211014752147037, -4.4542713390918811]], [[2.9271501879931465, 0.88967184020901746], [7.9312233237153436, -3.845111196683642]], [[1.5170985637093932, -1.0214331122366394], [-1.8334557124863804, -1.1435372569017261]], [[-1.8235680974171313, -1.2442422972616765], [-1.9827008708739322, -1.7031417514495626]], [[2.3480595682486451, 1.3288987939927761], [-2.9283379005727084, -1.2286903101841669]], [[-1.1360390121157231, -1.158423666776744], [17.684063409234277, 1.9964468017633181]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_div_overloaded_taggedData_rank0_array_rank4(self):
      arg0=Data(2.79370294518,self.functionspace)
      arg0.setTaggedValue(1,-2.86744498095)
      arg1=numarray.array([[[[1.4248287908084727, -1.7304678349826075, -1.5878385754886071, -0.21777917617957332], [0.53171468876790673, 4.3731568345348251, 1.7050672045022974, 4.6050075276918818], [4.6527971178732344, 1.8938925169077283, 2.583143433781574, 3.1480201107678738]], [[3.7875392155597289, 2.2412750037755425, -2.5736967334388119, 2.8802643576253697], [-0.61376571637346622, -2.8428520213819422, -3.1372808922717743, -0.38231467528594898], [3.680723722632548, 4.7481540330616312, -1.0051596282873811, 1.8839188110630971]]], [[[1.2870581087220643, -1.32073746798542, -1.9812776812063246, 1.2948176354033203], [4.3700562979327735, 1.0740891030122421, -0.83870482096762267, -4.5607652083519579], [-2.4091902868028257, -0.1426399567648744, 3.6538589418800846, 1.813285329001407]], [[-4.5038182270932703, 1.673874344250895, -0.15539206591807631, 4.7273666398045773], [1.8809828251669458, -1.2176266440921211, -3.9709101887242868, -3.5862383890117364], [0.20581793341956001, 4.1878806179562069, -2.6295301450609152, 1.8092259097201078]]], [[[-1.7469294859436548, 3.3695279137357126, -2.5809961613918042, 1.6559816856217102], [-2.9355906765013873, -0.13185985973782621, 1.3934501237527011, -3.3011587407423693], [0.79080667429923501, 2.9204713694404578, -1.9600441816227301, -3.7026076834852804]], [[2.874970873111188, -2.3154801899357014, 4.2187833414159801, 3.8758031353410143], [0.80152141615899541, -2.6708142888982209, -2.322302379449328, 3.5335964742879185], [-3.6888480534253389, 1.6825242681388195, -3.121182557042339, 4.9088970957681823]]]])
      res=arg0/arg1
      ref=Data(numarray.array([[[[1.9607288701676631, -1.6144206143030291, -1.7594376332144346, -12.828145437012129], [5.2541391167090827, 0.63882980896600328, 1.6384708695395529, 0.60666631452489972], [0.60043515210507159, 1.475111665653392, 1.0815128996125596, 0.88744761687777352]], [[0.73760370155570676, 1.2464793211355674, -1.0854825702216608, 0.96994671263005838], [-4.5517416021398178, -0.98271134908605051, -0.89048543662957513, -7.3073390214349683], [0.75900913942710324, 0.58837664610953277, -2.7793624679736122, 1.4829210944646627]]], [[[2.1706113548813706, -2.1152598551214075, -1.4100511865067165, 2.1576034097759633], [0.63928305603426594, 2.6009973821998753, -3.3309727991799658, -0.6125513631064039], [-1.1596024442268964, -19.585696802960708, 0.76458970902329382, 1.5406857930752531]], [[-0.62029655823549712, 1.6690039815590301, -17.978414333310379, 0.59096388286476165], [1.4852357543117387, -2.2943838809204746, -0.70354221385242965, -0.77900648036789266], [13.573661433521872, 0.66709230755189308, -1.0624342719294195, 1.5441426801235936]]], [[[-1.5992076198056466, 0.82910811742970381, -1.0824126695631147, 1.6870373443383861], [-0.95166637758700279, -21.186909729305842, 2.0048819097023234, -0.84627949292617244], [3.5327255522468426, 0.95659316315075138, -1.4253265162988999, -0.75452307778784966]], [[0.97173260825457031, -1.2065328640370845, 0.66220583497577379, 0.72080620393492945], [3.4855000613359475, -1.0460116814549199, -1.2029884522818712, 0.7906117649574671], [-0.75733749526227201, 1.660423565999795, -0.89507835383765322, 0.5691101057287643]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[-2.0124838853957407, 1.6570345446373296, 1.8058794043768491, 13.166754651443592], [-5.3928263437566777, -0.65569223548209699, -1.6817196257005873, -0.62267975974127643], [-0.61628412077865158, -1.5140484242642236, -1.1100603022853344, -0.91087251035715755]], [[-0.75707334439471796, -1.2793811451604968, 1.1141347555423324, -0.99554923608262536], [4.6718884819646034, 1.0086508053824248, 0.9139905158041397, 7.5002221110274396], [-0.77904379601169316, -0.60390732082063669, 2.8527259753115857, -1.5220639892288397]]], [[[-2.2279063870683133, 2.1710938399618454, 1.4472706214527549, -2.2145550867916435], [-0.65615744637120044, -2.6696527996683979, 3.4188965047819191, 0.62872014891249084], [1.1902110832246724, 20.102677019711976, -0.78477166922993291, -1.5813534335101465]], [[0.63666978469523572, -1.7130586837647073, 18.452969036795519, -0.60656284977051977], [-1.5244397463838892, 2.3549459884626263, 0.72211277633331694, 0.79956898284727118], [-13.931949142180247, -0.68470074544515958, 1.0904780788826149, -1.584901567871948]]], [[[1.6414199909168152, -0.85099309290804626, 1.110983822387275, -1.7315680516559679], [0.97678637689616443, 21.746155248846939, -2.0578023799141323, 0.8686177206689295], [-3.6259746840034026, -0.9818432089266923, 1.4629491558583025, 0.77443932116805103]], [[-0.99738227185825601, 1.2383802692043659, -0.6796852904959868, -0.73983246331670482], [-3.5775026382840207, 1.0736220009264832, 1.2347422998506716, -0.81148059825585794], [0.77732802745489571, -1.7042517812369331, 0.91870466675527218, -0.5841322246135271]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_div_overloaded_taggedData_rank0_constData_rank0(self):
      arg0=Data(-0.0283128535384,self.functionspace)
      arg0.setTaggedValue(1,1.79608880446)
      arg1=Data(-4.66599643441,self.functionspace)
      res=arg0/arg1
      ref=Data(0.00606791152467,self.functionspace)
      ref.setTaggedValue(1,-0.384931456702)
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_div_overloaded_taggedData_rank0_constData_rank1(self):
      arg0=Data(-0.878851394404,self.functionspace)
      arg0.setTaggedValue(1,4.7006799177)
      arg1=Data(numarray.array([1.0889262256835419, 0.17033168040482405]),self.functionspace)
      res=arg0/arg1
      ref=Data(numarray.array([-0.80708074952693132, -5.1596472970586333]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([4.3168029264304835, 27.597214484854483]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_div_overloaded_taggedData_rank0_constData_rank2(self):
      arg0=Data(-1.79071968044,self.functionspace)
      arg0.setTaggedValue(1,-4.05190302404)
      arg1=Data(numarray.array([[3.3227948715468596, 4.4019901286560756, 3.5327950123940628, 1.0360594336973552, -4.5360262382692866], [-0.67888861194611128, -3.1593593522434316, -0.13551814757515857, -4.9347811884290627, -3.5929785159799921], [4.5309740146872759, -2.336853069803011, 3.5886944968120922, 4.0147878253869642, 4.1742705165228315], [4.3444033431698639, 2.9195692550647863, 1.0568468873081969, -2.4811997399936656, 1.7952193648542227]]),self.functionspace)
      res=arg0/arg1
      ref=Data(numarray.array([[-0.53891971959345386, -0.40679775013200803, -0.50688468313565871, -1.728394744739798, 0.39477718742734746], [2.6377223729048844, 0.56679835396661249, 13.213873658119953, 0.36287722029893232, 0.49839420761250436], [-0.39521738033277909, 0.76629536686769606, -0.49898916779662672, -0.4460309631102366, -0.42898984944853791], [-0.41219001528850074, -0.61335064319303612, -1.6943984052425862, 0.72171524588551328, -0.99749351834003408]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[-1.2194261700390827, -0.92047072019966925, -1.1469397487883246, -3.9108789440543812, 0.89327151369871471], [5.9684356943632517, 1.2825078037288395, 29.899338919082414, 0.82109071695755875, 1.1277281525661247], [-0.89426754841266765, 1.7339143296576429, -1.1290743827972198, -1.0092446226956842, -0.97068529890370614], [-0.93267192384569186, -1.3878427500929345, -3.8339546368501343, 1.6330418541984197, -2.2570517583320071]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_div_overloaded_taggedData_rank0_constData_rank3(self):
      arg0=Data(4.52906509113,self.functionspace)
      arg0.setTaggedValue(1,-4.6262702253)
      arg1=Data(numarray.array([[[-4.29305547636723, 0.24597715884219884], [-2.1490153711561897, 3.51230655418175]], [[2.6472988906595161, -4.9815800353560373], [0.28601959081328143, -2.007021075964289]], [[-3.5903182816760193, 3.1653115189614223], [-4.1478168439266607, -4.2020309451968281]], [[0.24634018030861071, 3.0513399543590047], [1.3704546924491146, -3.2920982593393147]], [[3.3681734611895902, 1.7271529165301036], [3.2683825469940047, -3.5607612048751571]], [[1.6754734057637668, -1.967821549034011], [3.4461406769222833, -2.4790813441888373]]]),self.functionspace)
      res=arg0/arg1
      ref=Data(numarray.array([[[-1.0549747414302821, 18.412543312738627], [-2.107507071338302, 1.2894845655582292]], [[1.7108249873508081, -0.90916236595256861], [15.834807253056409, -2.2566106282418334]], [[-1.2614661809348371, 1.4308433985077138], [-1.0919154006903529, -1.0778276386334962]], [[18.385409499385933, 1.4842872832495637], [3.304790093448887, -1.3757381263690789]], [[1.3446650367961674, 2.6222722075040048], [1.3857206205227857, -1.2719373275931789]], [[2.7031554637310369, -2.3015629101885073], [1.3142426603348187, -1.8269126592973086]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[1.0776171542088682, -18.807722827108233], [2.1527394765979158, -1.3171601493029179]], [[-1.7475435968437694, 0.92867527821883289], [-16.174662064752624, 2.3050431710493737]], [[1.2885404196376797, -1.4615528985347981], [1.1153506529772534, 1.1009605320950226]], [[-18.780006653839173, -1.5161438235339111], [-3.3757192053070564, 1.4052649285845098]], [[-1.3735249323144181, -2.6785527679841756], [-1.415461672183546, 1.2992363034537868]], [[-2.7611719824312937, 2.3509602420883402], [-1.3424496150967729, 1.8661228023630585]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_div_overloaded_taggedData_rank0_constData_rank4(self):
      arg0=Data(-1.87400473233,self.functionspace)
      arg0.setTaggedValue(1,0.0362796037947)
      arg1=Data(numarray.array([[[[0.058347597377736982, 1.8625416969204966, 1.7934734722818755, -2.8351925203595063], [3.7760306971696025, -1.7564200670817955, 1.0856871257068548, 0.11871549003082116], [1.1036491406041629, -3.77448405271008, 2.5647614059537158, -3.2943957938616042]], [[-0.048275771939394474, 0.37830551598762252, 2.5615192384070005, 0.72340458478667014], [-4.125241159258958, 2.6684660155882058, 1.0466547599654721, 0.10552320824038919], [-4.30863132838223, -3.6083832495958665, -2.412632296893209, -4.548670155534329]]], [[[-3.9261352738412292, 1.1068734025516633, 3.8061208327786602, 1.4249499053819417], [-0.80053884869661651, 2.8600876648003082, 0.66840261404344314, -1.0356828709045973], [3.3694562891636632, -4.1939741897498273, -0.91815132723240733, 1.3279872691013317]], [[-3.0704812663247583, -1.1798506923743446, -1.3672698458334342, -4.1232225798817712], [-0.028968607237399802, 3.8138090299463947, 1.3795904838575224, 1.9475879248430283], [0.28188355764269257, 2.0712127537582656, 3.7175372210568352, 2.8979979571539687]]], [[[-3.7108215503854289, -3.0870336230592033, 4.2993691563358389, 1.2096120473062193], [4.1636582734336027, 4.3237750957454182, -2.3970015820029911, 3.3478797896379984], [-4.9528365930148919, -0.43664652527808556, -0.75980631710951396, 2.2076815680212958]], [[-0.99806651102131205, 4.3667553186072201, -3.0086784842363201, -2.5060720681661985], [4.7629622091106008, -0.55449294733600141, 0.68510782006316084, -3.9654897352036], [-4.5885399126788995, -2.7777416633007324, 3.7004375397447156, 3.3904007245100249]]]]),self.functionspace)
      res=arg0/arg1
      ref=Data(numarray.array([[[[-32.117941724354175, -1.0061545121017657, -1.0449023982216474, 0.66097971085808682], [-0.49628959153826102, 1.0669456398592636, -1.7261001700781289, -15.785679963479948], [-1.6980076941013735, 0.49649295272255856, -0.73067410012643319, 0.56884626183230336]], [[38.818741928909333, -4.953680697575531, -0.7315989293524392, -2.5905347736866715], [0.45427761917096643, -0.70227790850135785, -1.7904707493004266, -17.759171310117146], [0.43494200118483406, 0.51934747578271312, 0.77674693103769998, 0.4119895855834152]]], [[[0.47731537545846181, -1.6930614901524548, -0.49236606368225022, -1.3151372727253392], [2.3409291571363031, -0.655226325891336, -2.8037064681683534, 1.809438762560033], [-0.55617422263678806, 0.44683268125835135, 2.0410630325864343, -1.4111616699476368]], [[0.6103293164127801, 1.5883405794024406, 1.3706180517657194, 0.454500016923164], [64.690881303910629, -0.49137351073936109, -1.3583775433810368, -0.96221829496364231], [-6.6481519816408419, -0.90478620746893823, -0.50409844499189382, -0.64665495284704666]]], [[[0.50501073869736235, 0.60705679340062613, -0.43587900089309101, -1.549260968843363], [-0.45008610439800101, -0.43341864246784068, 0.78181205486242289, -0.55975866819784192], [0.37836999003302318, 4.2918118520254938, 2.4664242585707918, -0.84885644717950559]], [[1.8776351191430976, -0.42915267643893368, 0.62286639870391725, 0.74778565075565739], [-0.39345362193922895, 3.3796728007771435, -2.7353427846750757, 0.47257838437905325], [0.40840981401426846, 0.67465047491399777, -0.50642787838097658, -0.55273841784736677]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[0.62178402239677533, 0.019478545825149091, 0.020228681580975662, -0.012796169407965474], [0.0096078678125977434, -0.020655425472901591, 0.033416260482131442, 0.30560126387296094], [0.032872407053981444, -0.0096118047627378588, 0.014145410840360856, -0.011012521283057748]], [[-0.7515074816465358, 0.095900277055182684, 0.014163314977590796, 0.050151194169464092], [-0.0087945413114306186, 0.013595677660043118, 0.034662436156038368, 0.34380686864703153], [-0.0084202153838812688, -0.010054254574754526, -0.015037353119012274, -0.0079758704311799246]]], [[[-0.00924053840845423, 0.032776651522280563, 0.0095319106745833139, 0.025460266117209578], [-0.045318979651999214, 0.012684787337541239, 0.054278069882531657, -0.035029645477315963], [0.010767198230585103, -0.0086504117939936436, -0.039513751947704318, 0.027319240657531135]], [[-0.011815608254188132, -0.030749317713843406, -0.026534340609700356, -0.0087988467980685912], [-1.2523765294410913, 0.0095126954469523534, 0.026297371734019317, 0.018627967103277715], [0.12870422133916665, 0.017516116453457822, 0.0097590425158952786, 0.012518850713872098]]], [[[-0.0097767039729918081, -0.011752254178159649, 0.0084383551343230855, 0.029992759972514129], [0.0087133961079852267, 0.0083907240759159424, -0.015135410867939748, 0.010836590939437436], [-0.0073250152944441711, -0.083086894534684722, -0.047748489289656318, 0.016433349954193613]], [[-0.036349885898478117, 0.0083081375409621641, -0.012058318622212481, -0.014476680162380245], [0.0076170253304385172, -0.065428431450784169, 0.052954590113089332, -0.0091488331119974863], [-0.0079065682079979861, -0.013060827172677586, 0.009804138944396204, 0.010700683117615812]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_div_overloaded_taggedData_rank0_taggedData_rank0(self):
      arg0=Data(-0.453669765546,self.functionspace)
      arg0.setTaggedValue(1,0.011241474504)
      arg1=Data(-0.588500262809,self.functionspace)
      arg1.setTaggedValue(1,-2.03150897246)
      res=arg0/arg1
      ref=Data(0.770891355903,self.functionspace)
      ref.setTaggedValue(1,-0.00553355887489)
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_div_overloaded_taggedData_rank0_taggedData_rank1(self):
      arg0=Data(-4.21556327047,self.functionspace)
      arg0.setTaggedValue(1,4.7278077455)
      arg1=Data(numarray.array([1.3595023971429061, -4.4488245092837806]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([-2.989062845700512, 3.8385217993932503]))
      res=arg0/arg1
      ref=Data(numarray.array([-3.1008134147646746, 0.94756789387139084]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([-1.5817023560744135, 1.2316740642833679]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_div_overloaded_taggedData_rank0_taggedData_rank2(self):
      arg0=Data(-0.966091079476,self.functionspace)
      arg0.setTaggedValue(1,-4.93447026408)
      arg1=Data(numarray.array([[-1.6438963019922581, 4.9735662405722749, -3.4220694157282736, 4.613346795430628, 0.31826771793314279], [-2.8442408494331883, 3.703145829016032, -2.7304274489860725, -2.665330148633287, 3.3337899074801882], [1.6383386529679491, 0.88312808709937496, 0.71961606206577144, -4.8979257227363888, -3.439782929743159], [0.085268288014404447, 2.1849421213156086, 4.9132009902484022, -1.0220567518567858, -4.3980456582799548]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[-2.1102216161630838, -2.8754796356858692, 1.0958404074990646, 2.7929272330041401, 0.59825843078902796], [4.3816838410124177, 2.8159133132667389, -3.1884389513683029, 1.755729350297992, 4.4439353669117967], [1.8292411860347197, 1.5454540994262169, -1.1884358494391467, 3.8954003857137209, 4.5154354665709899], [2.6643375285810942, -0.9198120970567123, 0.56163720459659228, 2.1611035627761357, 4.1699640542628043]]))
      res=arg0/arg1
      ref=Data(numarray.array([[0.58768371113522133, -0.19424514176473803, 0.28231194698622919, -0.20941219516234047, -3.0354667628566072], [0.33966570716709987, -0.26088388739823892, 0.35382411637966382, 0.36246582059324373, -0.28978763098076776], [-0.58967727931349512, -1.093942196595052, -1.3425090550410448, 0.19724494289320049, 0.28085815274058951], [-11.330016140503185, -0.44215865951385885, -0.19663170332208066, 0.94524210883707249, 0.21966372214837537]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[2.3383658978206934, 1.7160511946741146, -4.5029095754383706, -1.7667736580348312, -8.2480580467071327], [-1.1261584457311464, -1.7523516227690079, 1.5476132174217168, -2.8104959703739749, -1.1103829954009687], [-2.6975503841439123, -3.192893445306368, 4.1520712004846763, -1.2667427672330847, -1.0928005284564608], [-1.8520439738382921, 5.3646503235492693, -8.7858678586368057, -2.2833104109740323, -1.183336402872704]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_div_overloaded_taggedData_rank0_taggedData_rank3(self):
      arg0=Data(-1.81664246796,self.functionspace)
      arg0.setTaggedValue(1,4.46387457355)
      arg1=Data(numarray.array([[[1.4850376184631315, -1.3933942291535595], [-2.0083169776060785, 0.98100783331441122]], [[-4.4032839330649285, -3.5634930840889103], [2.2732272840852499, 1.6835078278446218]], [[-1.2429237532913051, 1.4955486286156363], [4.2157916269941929, -2.76280105088229]], [[3.8009575255761554, 2.888422220105995], [3.4482664468826201, 0.89811738641277117]], [[-0.43029554687801141, -3.9738451716931733], [0.36127797698629571, 2.6502839052976777]], [[1.2205998958897144, 4.3255182934682495], [3.3092526196601373, 2.3106639707779166]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[3.6431867103538238, -2.3447916583182327], [1.0122395694910651, 4.9223038188279116]], [[-0.62554367985776338, 1.9161664116007717], [0.81108174545006317, 1.5775982015840553]], [[0.64593983524115384, 0.15898102039526663], [1.5037109500046384, -4.7876085795451715]], [[-3.9803137633694474, 0.23223516944779554], [-0.39621951450216653, -4.2304355031718242]], [[1.1852613265336416, -0.42000938189589032], [-3.2873826804966857, -3.6672001473908464]], [[3.4239409211551166, 2.4165247208931344], [2.2879787259509357, -2.4164695851244824]]]))
      res=arg0/arg1
      ref=Data(numarray.array([[[-1.2232972723202762, 1.3037534029852396], [0.90455963287448415, -1.8518123976862448]], [[0.4125653706583633, 0.5097926178306067], [-0.7991468695968813, -1.0790816876003344]], [[1.4615880203016602, -1.2146996982910105], [-0.43091372361166519, 0.65753647638826906]], [[-0.47794337498774819, -0.6289393757302848], [-0.52682775416072336, -2.022722748097459]], [[4.2218481718890883, 0.45714978552748042], [-5.0283786548878355, -0.68545202433884311]], [[-1.4883193699068511, -0.41998261126352637], [-0.54895853437309317, -0.78619933098595485]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[1.2252664846589463, -1.9037403846587668], [4.4098993045646022, 0.90686693423453668]], [[-7.135991805666424, 2.3295860664952817], [5.5036062623681046, 2.8295383254552871]], [[6.9106661797454967, 28.078034487721304], [2.968572233604903, -0.93238085348562338]], [[-1.1214881134829493, 19.221354733503706], [-11.26616537088057, -1.0551808602694857]], [[3.7661522177613387, -10.628035386737865], [-1.3578810279784586, -1.2172432357495935]], [[1.3037241810952354, 1.847229012373437], [1.9510122725009749, -1.8472711599726042]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_div_overloaded_taggedData_rank0_taggedData_rank4(self):
      arg0=Data(-4.33459200977,self.functionspace)
      arg0.setTaggedValue(1,4.96142104529)
      arg1=Data(numarray.array([[[[-2.5560622075966832, 0.21123248607315492, -2.8558357377619545, 2.6728741063594743], [-1.4130500254892961, -0.51734307388043455, 4.4618570982579016, -3.9222758679812788], [1.4871882525810518, -0.21059693570670746, 3.9415040459913477, -4.159679074077939]], [[2.2319614247688175, -0.87556252785269528, 0.28045835245833572, -2.3407235358027698], [-1.253587074114618, -4.8227016394684803, 4.2556425164228084, 2.0646454127542757], [4.0984029147716399, 1.5667800037135944, -1.2676554805251969, 4.1855175758015868]]], [[[1.5379230034448863, -3.177082682780509, 0.91412809104564907, 2.2907979947424462], [1.647498035765242, -0.94889258263806298, 3.2399002953813145, 2.7380089511422465], [2.3615886927451726, -4.3396607248204733, 4.6957926389748064, -0.27105662440875555]], [[4.2139321486118586, -3.387080457729498, 0.17859242801337682, -0.96930346441610915], [-0.49096192080272161, -3.4895088559320939, 0.74554073476852345, -4.8638424465808425], [-4.7678993684924018, -3.9431336725572885, -2.0242236648446488, 1.3933820507885297]]], [[[2.8325719326427565, 0.32418415704306724, 3.8267512851785881, -4.4640542958307652], [4.4364015446792706, 4.2276973150545203, 3.3791890929061736, -2.3884012760197981], [-4.7491093887390265, -3.1323487130297343, 0.56655435324242465, -2.2453913298191166]], [[-0.51407286716072775, -3.1993706638928012, -4.2917732732211, 1.5017220912066467], [-3.622510023882155, 0.83477979765192245, 3.6295131008120798, -4.3922952577479357], [4.5397371755719753, -0.9752586798552132, -2.1838605695407853, 2.4725808570494054]]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[[2.4282905664511114, 1.9431491180501297, -3.1746436884664178, -0.65762774630028797], [4.812600111110978, -1.5260077684590003, 3.3167087834720004, 3.8033036220531358], [-4.5797919222237304, 2.7027967837481484, -2.4155868025454685, -0.68624512601000376]], [[4.734589744190842, 1.8007573220468487, 0.14863374647300898, 1.0064009264892135], [-1.9212161124061424, 0.37223127267947742, -4.2615002122289871, 2.5541471478074556], [3.0348236956004833, 4.175461027670865, -3.673667802411865, 1.4904880820072268]]], [[[-1.9876615154973463, -0.86128681568929011, 0.48043512360380269, 3.9156066572136847], [3.022730516281392, 4.1999878128093719, -2.7600327036443852, 3.6732147186618427], [-3.4472025910571293, -4.703661587379953, -3.3156001581157044, -0.38300653380579863]], [[1.3581160499399383, -4.1721407248007658, -4.8363925850034502, -0.93945114774215455], [-2.8287495114445882, -4.0237412510872854, 3.8868602247425326, 2.3362985572430066], [-2.185778561021865, 2.5925884494093223, 3.0317331003427164, -0.14622785786970294]]], [[[3.232202668141591, 1.0171116756135987, -0.075629080005226612, 1.9926159022248422], [1.9387335848887854, 0.96264876721385928, 1.5561037577523198, -0.19116181552739953], [2.8667716742977412, -3.494625065354775, -2.3419505667791087, 1.8383806894854127]], [[-1.547464180775008, 4.0477413875198085, -0.20463792402589664, 0.68985914454873143], [2.2072971665380283, 2.9453420023492924, -4.0311444937145193, -3.4110707691073596], [-3.173364921520534, -1.2199118557933564, 1.5909898667373223, -3.412580452142179]]]]))
      res=arg0/arg1
      ref=Data(numarray.array([[[[1.6958084967121141, -20.520480018712675, 1.5178015851724329, -1.6216970337114038], [3.0675432090709185, 8.3785639136032302, -0.97147710343739779, 1.1051216578496583], [-2.9146222761270391, 20.582407788705176, -1.0997304478668786, 1.0420496227171112]], [[-1.9420550739205307, 4.9506367299634269, -15.455385699062452, 1.8518171597230495], [3.457751040412258, 0.89878917125897573, -1.0185517211654171, -2.0994365342302297], [-1.057629544948901, -2.766560716560905, 3.4193770124129723, -1.0356167263106146]]], [[[-2.8184714059532663, 1.364330879161648, -4.7417774951089662, -1.8921755736277899], [-2.6310149788760238, 4.5680534225658782, -1.3378782106185234, -1.5831182757670925], [-1.83545594670363, 0.99883200199861155, -0.92307994475529365, 15.991463109311725]], [[-1.02863355576218, 1.2797428534286539, -24.270861077282134, 4.4718627023357014], [8.8287743429880088, 1.2421782516466353, -5.8140243820654405, 0.89118676383407258], [0.90911986071085349, 1.0992759489576251, 2.1413602088778276, -3.1108424335695921]]], [[[-1.5302672316332158, -13.370770642537403, -1.1327080561926017, 0.97099894457276237], [-0.97705132551984719, -1.0252843774628837, -1.2827314159088206, 1.8148508181132157], [0.91271681803018867, 1.3838152794854652, -7.6507964063113238, 1.9304394526705344]], [[8.4318630425051087, 1.3548264534291594, 1.0099769335004833, -2.8864142274715401], [1.1965714328436565, -5.1924974968962658, -1.1942626708792818, 0.98686262088620536], [-0.95481122411476393, 4.4445561975523171, 1.9848300162673123, -1.7530638067544368]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[2.0431743687680202, 2.5532888851436528, -1.5628276846687046, -7.5444217084912788], [1.0309231872059188, -3.2512423251319693, 1.4958868472318418, 1.3045030158848496], [-1.08332892182688, 1.835661887392716, -2.0539195859432171, -7.2298087917082894]], [[1.0479093888507571, 2.7551858235148754, 33.380178882828965, 4.9298653396532464], [-2.5824377659837419, 13.328866781073204, -1.164242824875751, 1.9424961672835088], [1.6348300734855044, 1.1882331106468604, -1.3505361159865292, 3.328722386436386]]], [[[-2.4961096276257364, -5.7604748556651826, 10.326932402605916, 1.2670887245923208], [1.6413706146050036, 1.1812941528455039, -1.7975950207919491, 1.3507027019377569], [-1.439260070807908, -1.0547997455016132, -1.4963870215622512, -12.953880958620276]], [[3.6531642826204016, -1.18917873881903, -1.025851594570367, -5.2811911052726916], [-1.7539273184921862, -1.2330368022430431, 1.2764598566501668, 2.1236245812474013], [-2.2698644472817016, 1.9136940328591159, 1.6364966443560727, -33.92938334441709]]], [[[1.5349968905714506, 4.877951127933895, -65.60202828001097, 2.4899033676055913], [2.5591040893732173, 5.1539265558440936, 3.1883613291060389, -25.954038109577169], [1.7306648763750825, -1.4197291418987759, -2.1184994746142505, 2.6987995868705825]], [[-3.2061621244178244, 1.2257257987359027, -24.244875767339327, 7.1919334323524575], [2.2477358828289016, 1.6844974340286156, -1.23077231615738, -1.4545054562419526], [-1.5634574554119662, -4.0670324021627628, 3.1184491799866598, -1.4538620011667873]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_div_overloaded_taggedData_rank0_expandedData_rank0(self):
      arg0=Data(-4.34905492087,self.functionspace)
      arg0.setTaggedValue(1,1.15303882944)
      arg1=Data(3.0112285778,self.functionspace)
      arg1.setTaggedValue(1,1.60456097144)
      arg1.expand()
      res=arg0/arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*(-1.44427923969)+(1.-msk_ref)*(0.718600819765)
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_div_overloaded_taggedData_rank0_expandedData_rank1(self):
      arg0=Data(4.00995768724,self.functionspace)
      arg0.setTaggedValue(1,-2.00220236418)
      arg1=Data(numarray.array([2.0994462036726649, 2.673579231938076]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([3.114021857047252, 0.10008508054673104]))
      arg1.expand()
      res=arg0/arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([1.9100073534757624, 1.4998462133978903])+(1.-msk_ref)*numarray.array([-0.64296349097475847, -20.005003275627548])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_div_overloaded_taggedData_rank0_expandedData_rank2(self):
      arg0=Data(-4.17082551299,self.functionspace)
      arg0.setTaggedValue(1,-1.74232260959)
      arg1=Data(numarray.array([[4.0087954440243898, -2.7750306475964361, 4.0606996479551647, -2.1548122550698356, -3.446092235357614], [3.1107974127556037, -1.7059535742566112, 0.49777370979760249, -4.6293523622698887, 3.0208945209323232], [-3.6038287403873204, -0.46401708293522148, -3.3073887136789715, 1.0377385090007838, 0.18590623208800228], [-1.3240557135703392, -4.2378047306192741, -3.6624302691775146, 0.10933844803161996, -3.9071019631855517]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[-3.3859783889657393, -4.4839394837855027, 0.40761343030684483, 0.62017427853840168, 0.79315590574968819], [4.611823226693474, -1.9803892482674201, 4.0135141972339774, 0.47314003176127439, 1.1011054979752899], [-2.3804860772558243, 2.5479357901319508, 3.8728716729138828, -0.26970301851693268, -3.4891404874928966], [1.4584278871775824, -2.7580017330900031, 4.838708039328802, -1.4264068079588057, -3.0704374164044546]]))
      arg1.expand()
      res=arg0/arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[-1.0404186422639154, 1.5029835856400873, -1.0271199238007953, 1.9355865009457414, 1.2103058270443545], [-1.3407576770777332, 2.4448646058865409, -8.3789590146926525, 0.9009522686107575, -1.3806591008342803], [1.1573317750214087, 8.9885171610543662, 1.2610629938161126, -4.0191488287368502, -22.435103256846631], [3.1500377742707832, 0.98419483154811127, 1.1388136309615753, -38.146009826108468, 1.0674985071505667]])+(1.-msk_ref)*numarray.array([[0.51456991434589971, 0.38856960846318933, -4.2744484848685573, -2.8094080484817816, -2.1966962572639872], [-0.37779475143420799, 0.8797879563886094, -0.43411397692026032, -3.6824671188809219, -1.5823393968978872], [0.7319188405401984, -0.68381731452382388, -0.44987873514442428, 6.4601524267989623, 0.49935582010316376], [-1.1946580457666589, 0.63173368917180084, -0.36008012788241156, 1.2214766501853977, 0.56745094372497051]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_div_overloaded_taggedData_rank0_expandedData_rank3(self):
      arg0=Data(0.532523847342,self.functionspace)
      arg0.setTaggedValue(1,4.66312843622)
      arg1=Data(numarray.array([[[4.3058616519490709, -2.513724733530025], [0.47677819556482604, -2.3538795590231896]], [[4.2414306346467541, 0.7495356419509358], [0.21876776368661677, 1.6942419352442748]], [[0.34188533835082957, 1.8739372160026218], [-3.4264188783980662, 2.6968599559437578]], [[-2.8486975740462981, -1.2073590382391339], [0.74015335841206031, -3.6939094924523208]], [[2.8768705604203904, 1.3121327841819399], [-1.3068827757046808, 1.8769048375264816]], [[-4.1700688019836445, -0.30075017722268527], [-2.477106430988516, -2.7504480564723655]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[-1.8923219781201093, -2.7349215148924233], [-3.2080724587704323, 2.7255473360138529]], [[1.9532585980913897, -2.4769636671330897], [-2.0641982451685017, -0.52231436217788474]], [[4.8766931059149758, 4.9785123468885306], [-4.3322694338406276, 1.3911220481054443]], [[-3.4277872458857592, -0.34209859507274487], [3.9534173442797389, 0.076064301005633439]], [[-4.6658285648326512, 0.66662009356085594], [-0.43037456264572871, 4.4454766831101242]], [[0.02690897096143452, -1.2437812763101008], [4.8013379238845229, -0.70182714290652903]]]))
      arg1.expand()
      res=arg0/arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[[0.12367416568086602, -0.21184652409980201], [1.1169215628897846, -0.22623241078784126]], [[0.12555288373503906, 0.71047168078085277], [2.434197060700741, 0.31431393372119421]], [[1.5576094895171591, 0.28417379344116289], [-0.15541703050358063, 0.19746069727068263]], [[-0.18693590088106068, -0.44106502744924431], [0.71947771538120697, -0.1441626678807725]], [[0.18510525105593223, 0.40584600412529381], [-0.40747636837963225, 0.28372447909710463]], [[-0.12770145353206705, -1.7706518156022191], [-0.21497818611270872, -0.19361349002352529]]])+(1.-msk_ref)*numarray.array([[[-2.4642362611315156, -1.7050319034120851], [-1.4535608207574411, 1.7108961472082065]], [[2.3873584587193055, -1.8825986420773517], [-2.2590506736134919, -8.9278196693193141]], [[0.95620707207590117, 0.93665097348489101], [-1.0763708276762816, 3.352062777360449]], [[-1.3603902756265474, -13.630948806522021], [1.1795183837514258, 61.305084968497027]], [[-0.99942129708037053, 6.9951813353102796], [-10.835046587217185, 1.0489602732450494]], [[173.29270758450068, -3.7491547147692197], [0.97121438027152807, -6.6442691528115176]]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_div_overloaded_taggedData_rank0_expandedData_rank4(self):
      arg0=Data(2.84998385413,self.functionspace)
      arg0.setTaggedValue(1,2.38733853285)
      arg1=Data(numarray.array([[[[-0.45767471930061454, -3.9272674409317219, 3.1347077551511013, 3.4434165582722596], [3.8366679836940509, 2.0244239729990268, 2.1264023907726672, -3.6142433976306299], [-1.7270712058341275, 0.29499008578792996, -4.8017571425766974, 3.2939256106497972]], [[-0.34618201821149963, -2.4172694552892859, -3.8971442881709359, 1.8658079940269303], [-1.0723662209946019, -3.6580915735177544, -1.632814753749666, -0.90754508331792572], [1.8084875698726597, -3.5821375798551989, -3.0735656954115429, -4.6306368534833684]]], [[[2.6106457117901307, 4.8445064796969337, 1.960913330311981, -3.263287320551381], [-4.9748402967369723, 4.0240054393186444, 3.1368794853996196, 3.3037202682139881], [-4.2907290089086905, -2.9123732359332157, -1.8498883241099859, 0.70581339775108187]], [[0.47222113136728794, 3.3175404153925712, -4.1590485580973757, -3.7590442260778509], [3.936768352922476, 3.1093324299232741, -2.0058900491385021, 2.1007633817438069], [3.5490048646907564, -4.0159649758207818, 3.6258432291040634, 4.1273276907005325]]], [[[-1.052267174503827, -4.364689840543754, -3.9360336931486173, -1.4835175450225977], [-1.4611255072993359, 1.1133357251379286, -0.2513726868743893, -0.018276028050577153], [-1.3787857770503287, -2.3085969384722862, -2.5296618435851248, 3.9382584085266537]], [[-3.4493005662193643, 1.4206714036461374, 2.4068575425257519, 2.1101204030556158], [-3.0147594614038553, -3.0716631930591065, -0.23661279388452439, 2.4538655210309201], [-3.6104680324761871, -2.6301357082606023, 0.94962766549029176, 0.64114360257541936]]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[[4.4029532775525855, -1.2794583911017385, 2.2116669645505009, 4.0372280430621625], [1.2597434228646085, -1.9498847622761186, 2.1355755818358393, -1.2434962073760056], [-2.7182716530855009, -0.020458879868014535, -4.0102943031373623, -0.66194171493406984]], [[2.7611009636686479, -0.52995287741487296, 3.3840860450347741, -0.49817405196504438], [-2.199767859266343, -2.3823180148864056, -2.388450843121487, 3.7616876244212065], [-4.8455888355476233, -2.4034466953760125, 2.9715782875682537, 1.0470845329951644]]], [[[-2.0927578239431224, 2.8732508131325751, 4.4545282333887783, 0.34668571156381223], [4.164036149729494, 3.751233043208952, 4.5605571272969527, 2.1461349398201239], [2.2920546635129604, 4.3306935057898741, -0.080249260842084169, -0.78641690174511858]], [[1.607953891314664, -3.3051180264265376, 3.9490904120897508, -0.85002362574627366], [2.7586761102882402, 1.1942678969622014, 0.72440912431206872, 3.7439455761677447], [-4.970263955895561, 1.266860145804749, 3.3056040701731764, -1.5083371070444542]]], [[[1.8563925528372778, 0.319524985186181, -0.62735601486433534, 3.792017753253651], [0.95176703360505499, -0.24796663592225787, 2.4647140520697182, 1.964227599160421], [3.6552171220798986, 2.5348443529495057, -2.813465204571858, 4.5565891008354509]], [[3.1125587828185388, 4.1989891896862233, 2.3324754666992504, 4.5738156221432131], [0.71412413993541257, 0.92660128246471452, -3.9490083746591278, 0.086510484903197238], [-0.74779213574335923, -0.50155660488376519, 0.81877138380351244, 2.0393373031117203]]]]))
      arg1.expand()
      res=arg0/arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[[[-6.2270947770121685, -0.72569131005023291, 0.90917051181059461, 0.82766165693219285], [0.74282785642121762, 1.4077998937669847, 1.3402843537491382, -0.78854231455350121], [-1.6501831797669881, 9.6612869090666198, -0.59352936216970387, 0.86522410977130315]], [[-8.2326166704192349, -1.179009583681806, -0.73130057380168556, 1.5274797102655309], [-2.6576591078037262, -0.77909035267444615, -1.7454422478621912, -3.1403220694095015], [1.5758935265051568, -0.79560982530508284, -0.9272565276161312, -0.61546261222870113]]], [[[1.0916777566777229, 0.58829188609231842, 1.4533961343788382, -0.87334750948188644], [-0.5728794663009964, 0.70824552727491696, 0.90854107318831101, 0.86265894892732131], [-0.6642190285636882, -0.97857782064603505, -1.5406248133916649, 4.0378715722997178]], [[6.0352738681460734, 0.85906530057754327, -0.68524899729257749, -0.75816715173394267], [0.72393994226550562, 0.91659027085685185, -1.4208076137330607, 1.3566420087547628], [0.80303746058001002, -0.70966352328431048, 0.78601960262677728, 0.69051552668056715]]], [[[-2.7084222744772144, -0.65296366024769248, -0.72407506548744294, -1.9210988529858974], [-1.9505400733131548, 2.5598602378220541, -11.337683061610832, -155.941096513986], [-2.0670244076816702, -1.2345090676648578, -1.1266264150501122, 0.72366603673261187]], [[-0.82624978583734043, 2.0060823683878728, 1.1841099042100345, 1.3506261775396193], [-0.94534369677381869, -0.92783084439965358, -12.044927103638624, 1.1614262597935805], [-0.78936687113463988, -1.0835881377437204, 3.0011592518799706, 4.4451568146031937]]]])+(1.-msk_ref)*numarray.array([[[[0.54221300621641033, -1.865897749747417, 1.0794294851428443, 0.5913311082228172], [1.895099025342373, -1.2243485251227986, 1.1178899745612927, -1.9198599229264124], [-0.878256052938022, -116.68960120268146, -0.5953025769167376, -3.6065690966310622]], [[0.8646328273632381, -4.5048128514702999, 0.70546035209564317, -4.7921776002490351], [-1.0852683944788606, -1.0021074088070556, -0.99953429635258939, 0.63464560888931154], [-0.49268285318359656, -0.99329789066892193, 0.80339075798195669, 2.2799864362653226]]], [[[-1.1407619675524712, 0.83088414068849681, 0.53593521193960836, 6.8861751529461639], [0.5733232006180522, 0.63641434838981936, 0.52347519529201958, 1.1123897610335147], [1.0415713773567623, 0.55126009948763577, -29.749040773721628, -3.0357162054306048]], [[1.4847058399792141, -0.72231566732681929, 0.60452871009070419, -2.8085555042734645], [0.86539283243466492, 1.9989974937153852, 3.2955666248948861, 0.63765310800693686], [-0.48032429545726701, 1.884453103018465, 0.72220946071351932, -1.5827619182094577]]], [[[1.2860095399560929, 7.4715238041905501, -3.8053967385144816, 0.62956945040771106], [2.5083223609978846, -9.6276602857194842, 0.96860669530708499, 1.2154083029240683], [0.65313179850004, 0.94180872686495098, -0.8485402730315551, 0.5239310545720407]], [[0.76700191046363453, 0.56855076900795321, 1.0235213904438498, 0.52195775476701822], [3.3430301530880921, 2.5764463939678341, -0.60454126868197777, 27.595944416720677], [-3.192516233777984, -4.7598586273336894, 2.9157571699221654, 1.1706442721414778]]]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_div_overloaded_taggedData_rank1_float_rank0(self):
      arg0=Data(numarray.array([-4.7578217123530333, 4.4315786179062311]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([-1.3831856498875386, -1.2228219493438997]))
      arg1=-1.04566150784
      res=arg0/arg1
      ref=Data(numarray.array([4.5500591507840911, -4.2380623028539377]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([1.3227852794827566, 1.1694242737061613]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_div_overloaded_taggedData_rank1_array_rank0(self):
      arg0=Data(numarray.array([0.89679554939939443, -0.92263199926399064]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([-3.2732533809677413, -1.2063353198834714]))
      arg1=numarray.array(-4.70762130446)
      res=arg0/arg1
      ref=Data(numarray.array([-0.1904986598115003, 0.19598687736207673]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([0.69530940771887595, 0.25625156355312528]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_div_overloaded_taggedData_rank1_array_rank1(self):
      arg0=Data(numarray.array([4.1010553208827556, 1.0401909712110395]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([2.379786423594668, 0.18274133683874005]))
      arg1=numarray.array([-0.11664989875909892, 4.6921845196824794])
      res=arg0/arg1
      ref=Data(numarray.array([-35.156955681136971, 0.2216858622775196]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([-20.401101491817968, 0.038945897390051103]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_div_overloaded_taggedData_rank1_constData_rank0(self):
      arg0=Data(numarray.array([4.7051476178243341, 2.0491810770016325]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([4.2671687268351928, 3.071700801556128]))
      arg1=Data(-4.0639770884,self.functionspace)
      res=arg0/arg1
      ref=Data(numarray.array([-1.1577692283894254, -0.50423046991401921]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([-1.0499982244042565, -0.75583615132255189]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_div_overloaded_taggedData_rank1_constData_rank1(self):
      arg0=Data(numarray.array([-4.5903931628652792, -3.003311261411131]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([1.7691300155565806, -3.2978689534347239]))
      arg1=Data(numarray.array([-0.53634382045320006, -0.61911680385402157]),self.functionspace)
      res=arg0/arg1
      ref=Data(numarray.array([8.5586763337489131, 4.8509606631824944]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([-3.2984998579114797, 5.326731455042709]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_div_overloaded_taggedData_rank1_taggedData_rank0(self):
      arg0=Data(numarray.array([-4.8605831153265076, 4.5841737890307535]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([-3.5994750716987776, 4.3425793558512673]))
      arg1=Data(-4.15085940313,self.functionspace)
      arg1.setTaggedValue(1,4.98475451014)
      res=arg0/arg1
      ref=Data(numarray.array([1.1709823540795581, -1.1043914871165508]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([-0.72209675810016816, 0.87117216043754642]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_div_overloaded_taggedData_rank1_taggedData_rank1(self):
      arg0=Data(numarray.array([3.3810872778838696, 1.6475730627265417]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([3.3142778823486516, 0.17151178503778564]))
      arg1=Data(numarray.array([3.7552739180059209, -4.1172718698479516]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([-2.3734150374947682, -3.2018256944650414]))
      res=arg0/arg1
      ref=Data(numarray.array([0.90035703165942493, -0.40016134829284072]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([-1.3964173269277844, -0.053566871342895415]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_div_overloaded_taggedData_rank1_expandedData_rank0(self):
      arg0=Data(numarray.array([-4.2857362454502823, 4.2148426355495729]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([0.023646371870507998, -3.6177048959897773]))
      arg1=Data(0.613760918735,self.functionspace)
      arg1.setTaggedValue(1,3.01035980779)
      arg1.expand()
      res=arg0/arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([-6.9827454219169542, 6.8672385401057205])+(1.-msk_ref)*numarray.array([0.007854998531853381, -1.2017516599288769])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_div_overloaded_taggedData_rank1_expandedData_rank1(self):
      arg0=Data(numarray.array([4.2249033586340605, -3.2399083084192846]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([-3.8341853977490823, 0.9059571177822443]))
      arg1=Data(numarray.array([-1.4019643743011292, 0.028380576969282423]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([-1.4351282824614353, -1.8543086352944451]))
      arg1.expand()
      res=arg0/arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([-3.0135597138409094, -114.15935313527922])+(1.-msk_ref)*numarray.array([2.6716673656329495, -0.48856867758607381])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_div_overloaded_taggedData_rank2_float_rank0(self):
      arg0=Data(numarray.array([[-0.96850210242003154, 3.781502646832152, -3.8474647040746679, 3.9024026227889266, 0.87096348976100124], [4.9644659602751595, -1.0611480121333292, -0.32565561597713177, 1.0911911503774334, -3.9960652574041089], [4.9548040887202909, 3.6283218283466638, 0.7082980773072034, -3.6743829629729188, 1.0651486717127661], [2.8225234212805379, -2.0578292748745652, -1.4527402651044508, 2.1565364193238858, 3.1134283188501417]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[-2.2802095260764488, 2.3138487364639175, 1.2657856865812462, -3.261317945964719, -2.7782112252104394], [-1.2678958290996745, -4.6285007637749951, -3.4693072567737659, -4.602246020118419, 0.83422529431232384], [-1.951583116012392, 3.4603739741508583, 1.5464922685103275, 0.30933401000278415, 0.054488824811835812], [-0.17346852088860576, -4.1460553496565486, -0.30820225234651666, 2.8683805176537858, 1.722354401627193]]))
      arg1=-1.69413983905
      res=arg0/arg1
      ref=Data(numarray.array([[0.5716777801314834, -2.2321077396740416, 2.2710431662085657, -2.3034713739916297, -0.51410365879226505], [-2.9303755486093577, 0.62636388547995681, 0.19222475528340885, -0.64409745006041252, 2.3587576215942723], [-2.9246724352463604, -2.1416896909659457, -0.41808713837026867, 2.1688781990008561, -0.62872535499222681], [-1.6660510285056498, 1.2146749798584018, 0.85750906248663394, -1.2729388505107266, -1.8377634756510077]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[1.3459393808695204, -1.365795599117918, -0.74715537490195727, 1.9250582925874689, 1.6398948665119832], [0.74840092882247211, 2.7320653567607964, 2.0478281525570923, 2.7165679680261632, -0.49241820249056262], [1.151961054825039, -2.042555103416166, -0.91284806180943223, -0.18259060018113199, -0.03216312110481518], [0.1023932717301233, 2.4472922801833805, 0.18192255753779119, -1.6931190988716596, -1.0166542111386108]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_div_overloaded_taggedData_rank2_array_rank0(self):
      arg0=Data(numarray.array([[-0.86877202576759593, 4.6823850407762482, 4.7832512368068549, -1.0771977118132048, -1.0808582530891275], [-3.1170942988902772, 0.13425662102394131, -2.8111787049557213, -2.0630331356687726, -2.5369244726618678], [-1.9885758414216106, 1.9077986902968433, 2.8433828110992838, 1.2159842141051502, -3.4010419657412969], [0.54337993094706682, -0.17058354824602073, 0.80717350447632796, -4.8313886478040446, 0.23232013809738472]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[-3.9794749013168076, 4.1645831365517552, 0.53106033956518139, 0.27710892337327664, -0.3967233056376287], [4.6133980599895335, -4.0057616541961369, -2.8561369204110654, -3.7411130207334531, -1.8897238945063108], [0.65935489144387827, -0.14470695221244423, 2.6240280157987907, 3.2626845236366382, 1.4048525894803641], [-0.74345394006123655, 3.9363504382427177, 0.26476519664200637, -1.9513354349777678, 4.6815015188103928]]))
      arg1=numarray.array(4.43852348684)
      res=arg0/arg1
      ref=Data(numarray.array([[-0.19573446627974897, 1.0549420442754822, 1.0776672132037468, -0.24269280426385098, -0.24351752475632388], [-0.70228180793214201, 0.030248036632424261, -0.63335897923893236, -0.46480167149809437, -0.57156946002004372], [-0.4480264320591566, 0.42982732792820189, 0.64061456913025883, 0.27396142381792266, -0.76625525939469175], [0.12242357904777047, -0.038432498724323041, 0.18185631029525431, -1.0885125790421541, 0.052341761575888504]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[-0.89657628558504021, 0.93828119844257163, 0.11964797328193404, 0.062432681542549766, -0.089381819610397623], [1.0393992672706536, -0.90249869490815027, -0.64348807185015755, -0.84287331853082603, -0.42575507375536581], [0.14855275485151681, -0.03260249779940412, 0.59119390120979887, 0.7350833071644628, 0.31651349680683821], [-0.1675002829803251, 0.88686033765733174, 0.059651638078916672, -0.43963616296308833, 1.0547429866455127]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_div_overloaded_taggedData_rank2_array_rank2(self):
      arg0=Data(numarray.array([[-4.680459229495586, 3.5086992616684824, 4.6054145981410599, -4.9227853438784042, 0.9463344268417595], [-2.7570556308569492, 2.2361380984984596, 1.1723470805649594, 2.7082441248431257, 0.57328838737897403], [0.21491402272158044, 0.037011524317512645, -4.5982653755979355, 2.185432758297515, 2.1727815800981967], [4.6367277133885469, 0.81357627120924736, 2.3393905269164117, -1.9195861881296317, -1.2993918833900828]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[2.2483877032216961, 4.5151550356187045, -4.565516548199553, -4.3254139967345226, -1.917195561676456], [-2.9924210601110302, 1.2187078210552027, -3.5971200466067152, -2.2860320264712133, -0.64613124280667833], [-2.9714970771789693, -4.3279367179402488, -2.9460945717188904, 0.81628151856682152, -3.0793646816279563], [1.469245350777836, 1.7181297074566437, 0.11319749001826018, 3.8930383232993826, -0.61431201799334012]]))
      arg1=numarray.array([[-4.6696661363926042, -3.9108922104562382, -0.37285733404263244, -3.0392948051772803, -3.2356120160727206], [1.4335647808583669, 4.6112495784872038, 3.7005360034262438, 3.7016208542585183, -3.1963114986615251], [-2.0804478907833888, -3.1947497976993553, 0.9816102698815623, -3.3924746575248657, -1.768109850697245], [-2.8522107944728337, -4.7808064650252167, -1.4065903050885185, -3.1636750612490494, 3.3926042149914242]])
      res=arg0/arg1
      ref=Data(numarray.array([[1.0023113200789382, -0.89716081979645335, -12.35168032825788, 1.6197130122068764, -0.29247462988173378], [-1.923216632879418, 0.48493104969435669, 0.31680466815604802, 0.73163736413669556, -0.17935936081919487], [-0.1033018051899656, -0.011585108900911698, -4.6844104189667313, -0.64420017212213965, -1.228872504296818], [-1.6256609512781612, -0.17017552941352043, -1.6631641199668237, 0.60675832725114331, -0.38300721246771413]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[-0.48148789175720674, -1.1545076654239912, 12.244674118915233, 1.4231636856570824, 0.59252949740354988], [-2.0873985606142447, 0.26429014528747757, -0.97205378984996282, -0.61757595293457856, 0.20214902179504399], [1.4282968058671528, 1.3547028693943228, -3.0012874377061642, -0.24061536222716454, 1.7416138937372159], [-0.51512509300680653, -0.35938072792235093, -0.080476518008658196, -1.230543038690697, -0.18107388279445763]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_div_overloaded_taggedData_rank2_constData_rank0(self):
      arg0=Data(numarray.array([[4.7381624111313041, 0.13568298849501659, 2.2397249921395712, -1.8792998063470878, -0.43823350482581347], [-4.353430451352077, 1.7258530152098341, -2.3554071557072165, -0.5100589575859038, -2.4694484646673809], [-2.887004642158717, 4.1989813619698637, -1.8779944209560053, 3.396118464014199, 3.5417248680053888], [-1.7259852752446916, 3.8767394617580884, 3.3796412275282908, 0.97763229909163663, 0.53392773067385946]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[-0.47143531055055288, -0.81936402795983554, 1.3964568028269673, 4.2069824505429114, -4.5678782034867087], [3.3208206022065649, 3.6987565284183059, -2.1905297090835063, 4.3442031944294133, -2.3278688764524782], [3.1005484659046338, -1.100965344121497, 2.4052976262093644, -3.1804480145014202, -3.4886744535858227], [-1.2459873003814081, -3.6650774206041192, 2.9700472066872052, -0.93195629669241331, 4.933632227260194]]))
      arg1=Data(1.48163591676,self.functionspace)
      res=arg0/arg1
      ref=Data(numarray.array([[3.1979262634823797, 0.091576470953512609, 1.5116567888247752, -1.2683951469362491, -0.29577678285742587], [-2.9382592593103394, 1.1648293590113572, -1.5897341101551574, -0.34425391002984873, -1.6667039700714921], [-1.9485250117778332, 2.8340169905890384, -1.2675141036405821, 2.2921410216867888, 2.39041509991609], [-1.164918625229435, 2.6165263799968921, 2.2810200463516876, 0.65983301837628106, 0.36036365252321545]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[-0.31818566573420182, -0.55301307068109617, 0.94251009106138439, 2.8394171624413342, -3.0829964040491915], [2.2413202627163917, 2.4964004223805456, -1.478453434006282, 2.9320315100918739, -1.5711477091755395], [2.0926520684522094, -0.74307414639875313, 1.6234066675882866, -2.1465786422433011, -2.3546098026636373], [-0.84095376352957052, -2.4736693941750505, 2.0045729001888968, -0.62900493039428118, 3.3298546366525597]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_div_overloaded_taggedData_rank2_constData_rank2(self):
      arg0=Data(numarray.array([[4.0196862927330308, 1.4209060338696924, -1.5305585309848913, -1.7585074454525538, -3.4282684625181759], [2.7380810498806945, 0.60648868744311102, -0.51957688708537297, -3.4114805210616828, 1.7958523837800398], [2.0731973753800057, -1.8654000051692323, -3.3445384034857986, -4.8188145073710009, 2.9328119444793295], [-0.39034114064433112, 0.78577501092795732, -4.2350204151090765, -0.54792199732024116, 1.0129500725329006]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[1.6013253736167998, 1.8143178441846679, -0.46185749664512699, -0.80220040035261952, 2.3326568036808712], [0.20813716161286333, -3.4650664162598166, 3.3953284219720832, -4.5848652921452393, -4.9757462977595379], [-3.0285603274404718, -0.22786768299635529, -3.1354740154472163, 2.0912987935881961, 2.0598586587375411], [0.42280850685455462, 1.6609112120697587, 0.81840709417158841, 0.48006393827907345, -1.4103724446340147]]))
      arg1=Data(numarray.array([[3.9613372629979988, -1.0130494995838593, 3.806524444790842, 2.6940884510355287, 0.11281037621404444], [4.4375555287127124, 0.34424559039139435, -2.4196055837978623, -3.0577975572331226, -2.2880130808743449], [2.6485890816482538, -1.5790284323110959, -3.9124982540491526, -4.2849333360619957, -0.63654083845953924], [-0.37913667938615614, 0.084526838971296314, 4.7637305208526115, 0.37537921948770858, -1.3508330614532382]]),self.functionspace)
      res=arg0/arg1
      ref=Data(numarray.array([[1.0147296293804766, -1.4026027696113295, -0.40208819178330307, -0.6527281777911319, -30.389655433941989], [0.6170246281233539, 1.7617907225871974, 0.21473619112327988, 1.1156659187564377, -0.78489603000598662], [0.78275538842357006, 1.1813593517369396, 0.85483447820697256, 1.1245949771997295, -4.6074214995802647], [1.0295525647276218, 9.2961599001092576, -0.88901343108532793, -1.4596492530087493, -0.74987065495951066]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[0.40423858593774292, -1.7909468835727711, -0.12133312247007119, -0.29776320077548946, 20.677679500464823], [0.046903562167534545, -10.065681341974971, -1.4032569790332134, 1.4994011887084828, 2.1747018578486879], [-1.1434617579695514, 0.14430879035081329, 0.80139946700352582, -0.48805865332555515, -3.236019646001822], [-1.1151875559471209, 19.649512891802001, 0.17179962019033562, 1.2788772349578414, 1.0440760482399827]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_div_overloaded_taggedData_rank2_taggedData_rank0(self):
      arg0=Data(numarray.array([[3.0872704665448207, 0.25094350734692217, 3.2558142937884647, -3.8129216643769972, -3.4777575291065412], [-3.2536230990178927, 1.8675633618786271, -3.9047844920612071, -0.068669303729897102, 0.91167583791798545], [-4.9061726237392564, 3.5832206948059415, 0.42412435403912507, 2.7976596863397782, 1.3060804305081568], [4.3484113378533511, -2.7883532167938152, 3.102221189100911, 2.4592776783855177, -2.9337653740576775]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[1.9314475306988435, 4.7205913111124769, -1.4317861015641311, -2.6201872377971966, -0.16074478139048143], [3.3667408815099797, -4.2669437203974949, -4.2650160670382711, -2.3113276748995402, -1.6056856631732752], [-3.9884394656548383, -2.4020796896935481, 3.6441411399237769, -1.7360849791093069, -1.8301188462570939], [-3.6608237610639227, -0.72926946864759934, 2.7947911367053528, 2.7704563369696427, -4.8203658507379714]]))
      arg1=Data(1.7024078282,self.functionspace)
      arg1.setTaggedValue(1,-3.53787262292)
      res=arg0/arg1
      ref=Data(numarray.array([[1.8134729031478061, 0.14740504783302211, 1.9124761058186908, -2.2397228215354783, -2.0428462977561472], [-1.9111889907489188, 1.0970129078029522, -2.2936833509471737, -0.040336576578457371, 0.53552140845280727], [-2.8819020580578441, 2.1047957107889794, 0.24913205109490003, 1.6433545710960216, 0.76719597318240895], [2.5542712303283288, -1.6378879200434293, 1.8222550071233916, 1.4445878582383136, -1.7233035031106971]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[-0.54593472873593385, -1.3343022245978009, 0.40470255833585622, 0.7406109594841529, 0.045435434941573177], [-0.951628631198845, 1.2060761296911049, 1.2055312674067102, 0.65331003154901945, 0.45385626739883816], [1.1273553038089117, 0.67896160933787075, -1.0300374061830759, 0.49071438238326687, 0.51729359457379587], [1.0347528447865024, 0.20613220044215833, -0.78996375352674886, -0.7830853827289922, 1.3625040708087039]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_div_overloaded_taggedData_rank2_taggedData_rank2(self):
      arg0=Data(numarray.array([[2.4064861557228721, -0.40277278166582242, 2.6159521004565232, 2.9471342618430789, 1.6280431255815575], [2.954704259644295, -2.5362618356540878, 3.5857339613590451, 2.0923414973267498, 3.1885141632534548], [1.5356281187811422, -4.1291945486851054, 3.4857098292377913, 1.1164616625203774, 2.5847916522030765], [2.4964947423872141, -3.2897710443558359, -3.6539907055062928, 4.1467813982665653, -0.74216384017212622]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[-0.72050458576253718, -1.6386842961823911, -4.8461160649959325, -4.7795278727167902, -2.7350903135228313], [-1.7436704562597463, 1.9375119504166225, 1.9755999341734167, -2.3059172583383392, 1.6515476291587596], [2.7987441852884354, -4.8935794930071284, 2.5505003522648657, -3.7575355131236288, 2.5396394514280471], [-0.12534326160963705, -2.0015811379246582, 2.8487301763888917, -4.9334606356505217, 3.3902777014695786]]))
      arg1=Data(numarray.array([[-2.8581403876527647, 4.9856764402670724, -1.0276430219302601, -1.8049385499841994, -0.0093728544684665849], [4.1223651673324806, 4.7574151662523185, -4.9530642582338791, -3.1222523011144543, -1.422887536110804], [1.1073765696299045, 0.79132294240336432, 4.4758137740169719, 4.7707916064039129, 0.26741900233408522], [4.7998393287425909, 2.3539145307646621, 0.89293002812367561, 0.11014489755241286, -4.218320098100623]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[-1.4880398811210824, -2.1364113262306281, 1.8481115944192137, 4.0077079547607521, -3.7882186980854868], [-2.7597638561380053, -3.5389979775976519, -3.6269142295296009, 1.8051363025348097, 3.4540213084361451], [-4.4206870146155577, 3.0043476844034682, -3.0044629241762042, 3.6226446648629036, 2.8433074935084175], [-2.3457656964366782, 3.2944611893650499, -1.9975724820718002, -0.26380161861718321, -4.950877410740242]]))
      res=arg0/arg1
      ref=Data(numarray.array([[-0.84197619057445539, -0.080785984909250694, -2.5455844535808581, -1.6328169520612645, -173.69768527387669], [0.7167497637178607, -0.53311761681964853, -0.72394254837259375, -0.67013850757029181, -2.2408757419919918], [1.3867262148181114, -5.2180902731622227, 0.77878794901455917, 0.23402021187044353, 9.6656992571302371], [0.52012048141645162, -1.3975745513951026, -4.0921355430105386, 37.648420311919615, 0.17593824624790785]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[0.48419709370941882, 0.76702659083613811, -2.6221988323810446, -1.1925838725447033, 0.72199905325030678], [0.63181871607660911, -0.5474747266546468, -0.54470544632362194, -1.2774200236848168, 0.47815212521271916], [-0.63310163692550547, -1.628832614284714, -0.84890391947978161, -1.0372354621387714, 0.89319901460757312], [0.053433836891740298, -0.6075594832885034, -1.4260960250284915, 18.701403962231684, -0.68478320511730739]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_div_overloaded_taggedData_rank2_expandedData_rank0(self):
      arg0=Data(numarray.array([[3.8247338339088941, 3.5195866844021655, -2.2356823955320229, 2.5821104539400785, -0.2798309883044281], [3.3095359660221462, -3.8503723262915903, 4.9239382170314467, 2.958881891559737, -3.3909813984873169], [1.4561827514917089, -0.31884689788780118, -1.7841064652739522, 1.0343446965407024, -2.5682127979261429], [3.7099598055226064, -1.3279777306190321, 2.2359625028251937, 1.4235694283169495, -2.5991349801713168]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[1.9976083233190423, 1.77411176859043, -0.66958530962942397, -0.2346316355441207, 1.1822866847811406], [-1.3145107956408033, -0.17705332759028991, -1.5071254289121807, 3.079250751713996, 2.0687721544582089], [-3.9787206963755639, 3.8578058296903084, -2.4099777241875788, -4.1692658188020442, 0.16614901863204068], [1.1585839421606927, 3.1860861105440446, 3.4471996975659351, -4.1085206500929718, -3.5737448569811416]]))
      arg1=Data(1.34382909793,self.functionspace)
      arg1.setTaggedValue(1,-3.28334285652)
      arg1.expand()
      res=arg0/arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[2.8461460164870056, 2.6190731320130194, -1.6636657138754412, 1.9214574665187185, -0.20823405947657933], [2.4627655191597255, -2.865224701732187, 3.6641104323616585, 2.2018290094481072, -2.5233725060085073], [1.0836070998434706, -0.2372674459715674, -1.3276289879598262, 0.7696995831799115, -1.9111156335911852], [2.7607378134921459, -0.9882043279654904, 1.663874153545041, 1.0593381483636808, -1.9341261356653232]])+(1.-msk_ref)*numarray.array([[-0.60840686172970493, -0.5403370424951166, 0.20393402056669696, 0.071461204570235068, -0.36008627074469185], [0.40035745673948497, 0.053924714940630232, 0.45902164189723793, -0.93784014837123619, -0.6300810621555949], [1.211789590743646, -1.1749628346084831, 0.73400123882908141, 1.2698234698580362, -0.050603615245973045], [-0.35286718225584679, -0.97037874196277663, -1.0499054921171924, 1.2513224569076484, 1.0884470532471389]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_div_overloaded_taggedData_rank2_expandedData_rank2(self):
      arg0=Data(numarray.array([[-0.72379850533849677, 2.1985965363820723, -2.0490539052619896, -1.132863323393356, 3.4030895915967978], [-1.8352607794497744, 3.339365948647032, -4.9660039617174494, -2.3657772620579696, -3.6840685023954558], [-4.7155850171876477, -2.6517791836980309, -2.7733482225934147, 0.052710587056693292, -2.6072597230988315], [1.1445838265746762, -0.54682033015869624, -0.77098224078111066, -4.297879142495173, 0.83839611390418334]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[-0.91879631114516513, 1.5547258432163744, 2.0020062919618535, 4.3329468648295322, -2.8366746618357599], [-0.075337422541112531, -1.1003772743824292, 1.7461448735470118, 3.5971232193420075, 3.7917368536389962], [-3.4286841437609095, 1.2461499012569561, -4.6067893474342583, -3.6168455895106257, -1.4791331362657667], [0.75512843498482063, -0.58725328527409104, 1.8301496780830631, 0.23458122719692831, 2.2864940443739501]]))
      arg1=Data(numarray.array([[4.4903474190252659, -3.8252180999631169, -2.570982001117649, -0.91837537411493031, -3.8008627922283322], [-4.7566309778707518, 0.93828810241630389, -3.8789305270519603, -0.62436129358632098, 4.5244112697189216], [-3.6645536114516872, -0.69212607710501928, 2.5804643456851437, 4.573815727030988, 2.119832741116352], [-1.0393958361106059, 2.8677653047517371, 1.2242261114471775, -3.9095841196945749, 3.9297385449386049]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[-0.83774252654751447, -0.067136625908340797, 0.7559624238873468, 0.27739693099038565, 2.6998377184885154], [2.945906977930699, -0.940242499536728, -2.9973034261897427, 3.2604966617886788, 4.7667061792559036], [0.4589603467524439, 4.2173064828876967, 4.0376520010217547, 0.37309580567656653, 0.078292229086288856], [1.9828663888477305, -2.9050782438248168, 0.3850989042726809, -3.4080442542518643, -1.2926167712217307]]))
      arg1.expand()
      res=arg0/arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[-0.16118986746366587, -0.57476370730423743, 0.79699270721118687, 1.2335515033655329, -0.89534660355410201], [0.38583207063737929, 3.5589984995519073, 1.2802508132290988, 3.7891158314266793, -0.8142647258997584], [1.2868102140603155, 3.8313528003304302, -1.0747477395805902, 0.011524422976897987, -1.2299365287309363], [-1.1012010889495971, -0.19067820133420388, -0.62977111300927902, 1.0993187538399691, 0.21334653802452441]])+(1.-msk_ref)*numarray.array([[1.0967526203208136, -23.157640441135442, 2.6482881009707326, 15.620024523557936, -1.0506833956760377], [-0.025573591802288336, 1.1703122066111689, -0.58257194059487027, 1.1032439509901717, 0.79546267612217225], [-7.470545479630049, 0.29548478544620399, -1.1409575035858661, -9.6941470112532908, -18.892464214239673], [0.3808266856667209, 0.20214714922821328, 4.7524146596562904, -0.068831625911038447, -1.7688878059448707]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_div_overloaded_taggedData_rank3_float_rank0(self):
      arg0=Data(numarray.array([[[2.5532378612591069, -0.30175198476828236], [3.1052177451838183, -3.8159778568198401]], [[2.3859544492752427, -0.86551304919249805], [-3.3577660783187504, 0.750826040637806]], [[-0.89021077588322139, -1.9297780910610474], [-4.5632905486930007, -0.08424212803408615]], [[-2.124632207704372, -2.3108633048343297], [-1.6592361507868736, 3.8069797244456023]], [[-1.0380743531161309, -1.622627866829347], [-4.102445360357061, -3.4644096735936225]], [[1.2182277899141223, -0.3686880395016745], [-2.3786114516997325, -0.54497661789960539]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[-4.311377598697125, 0.39516878910976949], [-2.2842079644753124, 4.6699639910049076]], [[-4.088649031689938, -1.5639647788399702], [-4.6365648337690359, -4.5493013582657529]], [[3.447724442580542, 2.1341662814580689], [1.5351070387608008, -0.042172004862186085]], [[-0.56832205644354161, -1.1567919454623468], [4.1377467317326566, 3.6529317186117858]], [[3.404127724063752, -0.54721690399906642], [-0.074718820610154779, 3.5198805824026262]], [[-2.2600444887043247, -3.782656619427438], [3.563554564166866, -4.0676617506032153]]]))
      arg1=1.84941062748
      res=arg0/arg1
      ref=Data(numarray.array([[[1.3805683947739438, -0.16316116079602616], [1.6790309837321264, -2.0633480743093418]], [[1.2901161125721661, -0.46799398485746013], [-1.815587100249602, 0.40598125125977802]], [[-0.48134836182693019, -1.0434557163163221], [-2.4674296129188087, -0.045550796984894323]], [[-1.148815831451349, -1.2495133695549503], [-0.89717022608817887, 2.0584826689523421]], [[-0.56130009079169774, -0.87737565834126807], [-2.218244720451918, -1.8732506573256935]], [[0.65871136015559517, -0.19935434241765893], [-1.2861456597876959, -0.29467583337181236]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[-2.3312170561979597, 0.21367282270246479], [-1.2351004858162395, 2.5251093086698875]], [[-2.2107848689391605, -0.84565577573775774], [-2.5070499568203926, -2.4598654785835889]], [[1.8642287393345505, 1.1539710271726387], [0.83005202627813801, -0.022802942859493653]], [[-0.30729901083010125, -0.62549221263968646], [2.2373326238364037, 1.9751869402781475]], [[1.8406554355647031, -0.29588718474298542], [-0.040401422755925266, 1.9032444877842989]], [[-1.2220349851578478, -2.0453308547166382], [1.9268595687810648, -2.1994367774040153]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_div_overloaded_taggedData_rank3_array_rank0(self):
      arg0=Data(numarray.array([[[-3.6536378486115284, 3.3242827856699755], [-3.6856663252397359, 0.31811672647400435]], [[-1.7135577199646521, 2.7699818797069931], [0.0034531890434887913, -3.8417893604767004]], [[2.4236958082344087, 4.7340397156639362], [0.86099161749359432, 1.9072096804891281]], [[-3.5411952799652857, 1.6212989856936648], [-4.1086611522453707, 1.7245165367487916]], [[1.7552582940737258, -1.5545033525579943], [-0.84939615557367709, 1.9686126962740875]], [[-3.3869411086458543, 4.1411434866435837], [-1.0633827781924876, 4.7828489020138303]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[-1.8902282079452917, 4.7680188747156951], [-2.5816121333893491, 3.3233188050723292]], [[3.2143470992634988, 3.5715412154591295], [-0.26348341062075242, -0.42857596953714072]], [[-1.8909276243688558, 0.417283150709018], [-2.7873584879630622, -0.2065878422652192]], [[-2.2209229242376329, -0.3244552610034841], [1.9625268342609514, 4.8990543386093073]], [[0.17603649424332168, -4.002103439248053], [-4.2192898047752134, -0.16291931448901487]], [[-2.8550343817953836, 1.1162966601597404], [3.5906990394751421, -0.14321610771094306]]]))
      arg1=numarray.array(0.168140709001)
      res=arg0/arg1
      ref=Data(numarray.array([[[-21.72964459546521, 19.770838397375059], [-21.920130747323309, 1.8919673193061199]], [[-10.19121264654016, 16.474189363016798], [0.020537495434716283, -22.848656838149129]], [[14.414687690096839, 28.155226320881045], [5.120661275971953, 11.342938255856108]], [[-21.060903697947797, 9.6425130792587783], [-24.435850048853354, 10.256389110046706]], [[10.439222627923888, -9.2452527516872376], [-5.0516984293844605, 11.708126532686544]], [[-20.14349248779925, 24.629035474270506], [-6.3243624016656073, 28.445514060477375]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[-11.24194265137236, 28.35731396077346], [-15.35387919281866, 19.765105219470815]], [[19.117006930504559, 21.241383105190838], [-1.5670411537273092, -2.5489125868723099]], [[-11.246102360390609, 2.4817496797140817], [-16.577534997511609, -1.2286604683256168]], [[-13.208716303381024, -1.9296651175797013], [11.671931478857456, 29.136634237656452]], [[1.0469593906776258, -23.802108739977534], [-25.093802862228724, -0.96894627991892324]], [[-16.980030587274463, 6.6390624066898463], [21.355322341737946, -0.85176343410371291]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_div_overloaded_taggedData_rank3_array_rank3(self):
      arg0=Data(numarray.array([[[-2.1441425798937166, 4.0784007312797108], [0.33256583727128941, -1.254823433287835]], [[1.2219642026211801, -1.5429443361926687], [-2.8787665435464325, 2.389528765815788]], [[-0.5878305704692135, 4.2375674369847456], [-0.0036826456830718612, -4.3701543776847984]], [[0.9150478377139688, 3.7038018949999127], [-4.4760431758714692, 4.1251973141960132]], [[3.4172067236820425, 3.3502562706843726], [0.55329357864442308, 4.4935280618624809]], [[-1.9920859306257608, -3.7394130471113662], [2.0901189485555749, -0.07336904421024748]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[-4.4909616298009123, -3.7595204685788977], [-3.2802855538462361, 3.4717112214745978]], [[-0.2294650633573454, -3.4333177479852441], [1.1682057930790277, -3.3327131693442613]], [[-3.3168686117127311, -4.5755331760127396], [-1.4375744354183362, -4.1932692342653173]], [[3.9056870958317145, 1.0113330612044731], [3.4345902167882674, 3.1756522449199771]], [[-2.4932068121441153, 3.9139214299710599], [0.27264117187332904, -1.5402598751422536]], [[4.1702802298637192, -3.2109505159949228], [-4.4230809873541634, -0.6157800144982879]]]))
      arg1=numarray.array([[[-3.3783542916377671, -1.6466380848798066], [0.55261959271472705, 1.0852988729279058]], [[2.3627234033823576, -0.77139983056033579], [4.1726031853017691, -2.4664339071671879]], [[3.6424248081846393, 1.3591855563166169], [-1.3551971848985489, 2.2157114629223624]], [[-4.2807467426620063, 3.8907724093294309], [-1.2343405946579109, -0.29843511241130471]], [[-3.7883809083234832, -1.7126967010228187], [0.80402711335573684, 2.824333012502116]], [[-0.34747741563332735, 2.6895934485282211], [0.016940788367399762, 1.7422335044570065]]])
      res=arg0/arg1
      ref=Data(numarray.array([[[0.63467072864470753, -2.4768045684898672], [0.60179885341663297, -1.1562008075274122]], [[0.51718461876319366, 2.0001875487474403], [-0.68992099552793584, -0.96881929772051789]], [[-0.16138440775725565, 3.1177254770632814], [0.0027174242421021165, -1.972348137749345]], [[-0.2137589286921798, 0.95194514233698335], [3.6262626338656343, -13.822761272509537]], [[-0.90202300306552308, -1.9561293419223655], [0.68815288620698756, 1.5910050415342494]], [[5.7329939760110706, -1.3903265005191099], [123.37790327265547, -0.042112061341119743]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[1.3293341201416067, 2.2831492257470272], [-5.9358835573164033, 3.1988526921700915]], [[-0.097118885362905624, 4.4507629013754419], [0.27997049831963383, 1.351227437986382]], [[-0.91062102483478213, -3.3663786042668096], [1.0607861729922012, -1.8925159274731105]], [[-0.91238452789265945, 0.25993117941811839], [-2.7825303904390672, -10.64101411948899]], [[0.65811935823725376, -2.2852390780187029], [0.3390944998551319, -0.54535349348826112]], [[-12.001586411775241, -1.1938423324729597], [-261.09062290547115, -0.35344287256730555]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_div_overloaded_taggedData_rank3_constData_rank0(self):
      arg0=Data(numarray.array([[[2.7656170567218492, -0.58204174852103385], [-3.1102954656909745, -1.5839816458631448]], [[1.4684679070607842, 1.9077953082218011], [4.3121062310874851, 0.22354741075810569]], [[-1.8363892420075487, 4.3765203852071526], [-1.4197616931049151, -3.7492133477886669]], [[0.12473787059878561, 0.46487131968311424], [-4.7333063782646043, -4.0576942373423872]], [[2.0864833177022586, 4.924546519610292], [-3.4476573197345708, -0.98300564687094472]], [[-2.6480282805230604, -2.487453010423236], [1.3351550194088961, 4.486143181561447]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[3.4491370804309867, -1.6347938201148815], [-0.37312224570803565, 3.1427888072688539]], [[-4.3347470638668391, 1.9040863912021084], [-1.0348732571241559, 2.952260668907833]], [[1.1491533077467517, 4.3161681090597472], [-4.6297877554297076, -1.7908274163069668]], [[4.0963055739014305, 2.4819696723352855], [-4.5046774633502338, -3.0319031222275452]], [[1.3008358424120372, -4.3929368763841055], [0.46120789878588386, 1.602378727584596]], [[3.2036615578301593, 3.1889393682470697], [-2.2513123711192904, 2.1332047026027512]]]))
      arg1=Data(-4.22802627658,self.functionspace)
      res=arg0/arg1
      ref=Data(numarray.array([[[-0.65411538997266128, 0.13766275572710163], [0.73563768581980882, 0.37463855289547227]], [[-0.34731759241749904, -0.45122598191692664], [-1.0198863367926556, -0.052872758146329149]], [[0.43433723488861853, -1.0351213778983424], [0.33579774585797612, 0.88675261280981532]], [[-0.02950262425984531, -0.10994995992758973], [1.1195073229511212, 0.95971358073525981]], [[-0.4934887300152811, -1.1647388633521041], [0.81542949220286476, 0.2324975254565714]], [[0.62630364791938886, 0.58832487021188784], [-0.31578683103357885, -1.0610490304679203]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[-0.81577948073169948, 0.3866564948210367], [0.088249746169877491, -0.74332291279151497]], [[1.0252412781525875, -0.45034876006988317], [0.24476509591621565, -0.69825977318515597]], [[-0.2717942681934869, -1.020847039897733], [1.0950234110586543, 0.42356108953849969]], [[-0.96884581739445264, -0.58702796765517484], [1.0654327027954644, 0.7170965656054894]], [[-0.30766976298531834, 1.0390041567892578], [-0.10908349868596497, -0.3789897750776387]], [[-0.75772035182789188, -0.75423830403064229], [0.5324735997002058, -0.50453913080376678]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_div_overloaded_taggedData_rank3_constData_rank3(self):
      arg0=Data(numarray.array([[[-4.8674334986106382, 2.8887318600312906], [2.0538694057121685, 0.61053129878567791]], [[-3.6203383484459648, -0.6071910938051408], [-3.7526332453492497, -3.9582011840371409]], [[-1.3241064668814229, 2.9777492321256025], [0.38500561436277714, -3.0112735420924741]], [[0.6661399625171498, -4.2807600963611314], [2.278916904152358, -4.6575388908559967]], [[-0.021824772114461766, -3.6009820623354614], [-0.6763812621895493, -0.893176181106492]], [[-0.40190673597975035, -4.2164577208213441], [2.1280689666689314, 0.088712446116368859]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[-2.5167853671021034, -1.0284204112352411], [0.43150120974364548, -4.2603930002781016]], [[-1.7113384479765714, 0.46569309785701929], [1.8237757267904939, 1.8846290833594868]], [[0.09726288074230105, 0.78458232469691414], [4.135584347217474, 2.6553708520258805]], [[3.6199013501973294, 3.318219113973182], [-4.9183716669915185, 1.2748356481278442]], [[-1.3335303831170755, -3.8176652808277822], [-0.5120987526311227, 2.940057261448433]], [[3.5090862536180385, 3.6898639610378616], [-4.3319804376002766, 4.541019818237892]]]))
      arg1=Data(numarray.array([[[3.2963290076967251, 0.85357942680494769], [-4.0802845171646949, 4.9793501152270743]], [[0.5509817116483795, 3.3989499804234757], [4.1376229717551265, -2.6054583986891711]], [[3.8513847330702937, -4.5928937140620079], [-2.4776867431094174, -3.9668791347407795]], [[-3.6190008061586343, 1.1995958536501234], [-1.7327481103364151, -2.5493213908821764]], [[4.3539812929184301, 1.2662753732437961], [-0.86562308420087675, -1.1426120549797982]], [[-0.74179292781107975, -4.338340439862348], [3.8865545818726268, -3.9345830333203624]]]),self.functionspace)
      res=arg0/arg1
      ref=Data(numarray.array([[[-1.4766224752582284, 3.3842566600324093], [-0.50336426224006547, 0.12261264716426468]], [[-6.5707051103655498, -0.17864078533144251], [-0.90695388897588003, 1.5191956954785948]], [[-0.34380010272976691, -0.64833837173472209], [-0.15538914087242822, 0.75910393027118273]], [[-0.184067370580174, -3.5685019111525427], [-1.3152038028827535, 1.8269720355832755]], [[-0.0050126012598994971, -2.8437590578034277], [0.78138080480370842, 0.78169679482532994]], [[0.54180448601163822, 0.97190568127823751], [0.54754639921809134, -0.022546848132343304]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[-0.76351157946478176, -1.2048327067637332], [-0.10575272580341695, -0.85561225896721549]], [[-3.1059804922684946, 0.13701087116292265], [0.44077861594452422, -0.72333877382485179]], [[0.025254002776493287, -0.17082527346425802], [-1.6691312405487744, -0.669385368656915]], [[-1.0002488377557592, 2.7661141907722704], [2.8384804679063311, -0.50006862715991074]], [[-0.30627839060448131, -3.0148776178503209], [0.59159553618406613, -2.5731019103421016]], [[-4.7305469249657426, -0.85052429890793402], [-1.1146068700038774, -1.1541298734279761]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_div_overloaded_taggedData_rank3_taggedData_rank0(self):
      arg0=Data(numarray.array([[[4.0117227786695846, -0.53492418922952112], [-1.4882942167138591, 1.900837298708562]], [[0.3979828547855826, -2.0806414273277065], [-3.1038194294358092, 1.3619630468314083]], [[-1.8360143953269672, -0.54583843212253136], [-2.8745251386926807, 2.8454895264534175]], [[-4.0367023374846722, -4.8815643727381284], [-2.4178783308021412, -0.18865332193405226]], [[4.4239527120031354, -0.23469975720542635], [-2.6557303119811104, -4.228655562140105]], [[1.0241549991061296, 1.6012695623869719], [4.294822539139151, -0.66009157022351594]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[-3.7467677360500771, -3.1566842580210439], [3.5515499219663269, 1.5656649082458323]], [[-1.0059725635217331, 4.0121910445334912], [-1.9861236068404295, 1.1688601739729174]], [[-4.7791339554087582, -1.2361230737018425], [-0.094248485141122273, -3.1051132394500334]], [[4.7778069411338233, 1.0007220688184661], [2.106976210113233, -0.61430719630395725]], [[1.5404800798012701, 0.79080850633239574], [-3.4835194084275747, -0.74931004023844316]], [[-2.445319759379637, -1.8443175619123844], [4.6036602132061084, -1.3015696598232296]]]))
      arg1=Data(3.76509523495,self.functionspace)
      arg1.setTaggedValue(1,-3.1292964952)
      res=arg0/arg1
      ref=Data(numarray.array([[[1.0655036667958775, -0.14207454416151977], [-0.39528727000064834, 0.50485769418693838]], [[0.10570326378248868, -0.55261322688909353], [-0.82436677846241746, 0.36173402313721381]], [[-0.48764089106866565, -0.14497334013132998], [-0.76346678087006492, 0.75575499393575984]], [[-1.0721381759533737, -1.2965314469155615], [-0.64218251595897835, -0.050105856601740925]], [[1.174990919470795, -0.062335676140966127], [-0.70535541500583165, -1.1231204785718722]], [[0.27201303956421441, 0.42529324292387061], [1.140694264325, -0.17531869156907484]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[1.197319506732037, 1.0087520510964567], [-1.1349355765473297, -0.50032488472979231]], [[0.32146923919324205, -1.2821383498460153], [0.63468693678834809, -0.37352170871828805]], [[1.5272231195544448, 0.39501628420262402], [0.030118106509151924, 0.99227198324410393]], [[-1.5267990580195372, -0.31979138773003868], [-0.67330667239288822, 0.19630840262225535]], [[-0.49227680475935803, -0.25271127473719335], [1.1131957019003849, 0.23944999823059879]], [[0.78142795453585034, 0.58937130589635656], [-1.4711486176745949, 0.41593043734272883]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_div_overloaded_taggedData_rank3_taggedData_rank3(self):
      arg0=Data(numarray.array([[[1.5937778250119417, 1.1222313900225354], [0.77948460194958891, -2.5380780385458204]], [[-3.138691428415501, 0.3279494678157846], [-4.5778698242660028, 1.384000964765443]], [[-1.1160444348521437, -0.54829334971058863], [1.8664472023968779, -4.4659166827566636]], [[-1.8710693431629744, -0.66054166701996841], [0.71327913550891964, 3.1722427340027295]], [[1.2498289090681949, 4.1746474144082182], [-3.9323326976200446, 0.65790680147240543]], [[-3.5388360463036372, -0.50190928882352814], [-2.1998792527280617, 3.3685005402883981]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[3.5751931384164575, -0.15270724878766995], [-1.2964474481215293, 2.9411685095922246]], [[3.9827285699197095, -0.36835243661909978], [4.3222517341685638, -3.0461074462971762]], [[3.2875535691212505, -4.1602493486471221], [1.2903858495079987, 3.4347804637468968]], [[0.7343249455630918, -4.3980873412001174], [-0.23010238111155878, -3.0859699278609929]], [[-2.5545618965079155, -1.2222884334765927], [-0.025342010922082991, 3.2000852974204719]], [[2.9496213267253761, 3.1998425197446405], [1.7305719630653886, 4.0924554658293069]]]))
      arg1=Data(numarray.array([[[2.3019482566686067, 2.4151921713670834], [4.9863199346297211, 2.7496577250514012]], [[-2.8187488643605296, 3.9429412106483461], [0.70822665206212054, -1.0585529095703681]], [[-4.7684941529121039, -0.75282231717744175], [-2.9978257342497985, 3.059495541521267]], [[-2.5232680258562654, 0.62187038751541657], [-2.098159851848024, 4.7599109785216616]], [[-3.7209922362758316, 4.802534289533714], [-3.1955257408812923, -4.1253666216266218]], [[-1.874515928762893, 3.2816047369005155], [3.9607499751068662, -2.3419882732384103]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[-4.8414333724499148, -1.7201838311026485], [3.5809677743076236, -0.48054219312836821]], [[4.6515895936151708, 0.88541446835050497], [-0.24399267212025499, 4.2071608935220546]], [[-3.6504739740524594, -3.9583906331081966], [4.8778971249238907, -2.5776368469216324]], [[-0.24137564699645253, 3.957479943815537], [-2.553837484212643, -0.41418964057339736]], [[-1.994511551383118, -1.3061462907505286], [3.3493000239108213, 2.1591392153846112]], [[-0.12730059409353345, 1.865300910946428], [-1.9370843676228167, 3.8186125759004366]]]))
      res=arg0/arg1
      ref=Data(numarray.array([[[0.69236040401640764, 0.46465511246971003], [0.15632462661212546, -0.92305235499752047]], [[1.1135051682326991, 0.083173816269469347], [-6.4638485588430878, -1.3074461864425497]], [[0.23404546573063931, 0.72831707721724559], [-0.62260030030196323, -1.4596905346481024]], [[0.74152619697546052, -1.0621854333007505], [-0.33995462017856998, 0.66645001310254925]], [[-0.33588592227730379, 0.8692592624494393], [1.2305745647148343, -0.15947838381767737]], [[1.887866617724145, -0.15294629581062308], [-0.55541987415368377, -1.4383080303090359]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[-0.7384575730735089, 0.088773796164438812], [-0.36203828959957512, -6.1205208442675589]], [[0.85620807463032678, -0.41602260837834171], [-17.714678463942906, -0.72402922621461852]], [[-0.90058266200201831, 1.0509951478387627], [0.26453732345331749, -1.3325307899167085]], [[-3.0422495173006583, -1.1113353456340644], [0.090100635821194458, 7.4506207436497602]], [[1.2807957390552207, 0.93579749996782513], [-0.0075663603562431255, 1.4821116093945037]], [[-23.170522869344641, 1.7154564719110572], [-0.89339008253375185, 1.0717126664425489]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_div_overloaded_taggedData_rank3_expandedData_rank0(self):
      arg0=Data(numarray.array([[[-2.9234329263958045, -4.6133510296387232], [0.36977338192269471, -1.4132543604160377]], [[-0.095529011036092015, 0.28743106785685058], [-0.13391103476522392, 1.4970278654800335]], [[-0.19839489809219035, 3.5234266890100017], [-0.76688567031431809, -3.0817924695570098]], [[-4.0464820015838852, 2.344248494534618], [-2.1923214832479223, 2.9269692343885261]], [[-3.3030189300411275, -3.6495395496230554], [0.18122263589447485, 3.8123939654433006]], [[-0.27049898348041168, -0.12490504905707223], [4.5882713231869623, -0.44323594640142439]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[-4.2731527360257902, 2.6207669149340695], [-1.4607543320385377, 0.34556696867206771]], [[1.3183700646854533, 0.16651816063926628], [0.12571553103927879, 2.6041271722556427]], [[-4.6460883139768274, 0.82703695488618401], [-0.29685825079511918, -2.7314911113193761]], [[3.2141601516351734, 4.2938631512172911], [-3.4196645360181845, 3.3405093976069828]], [[-0.74495637357537703, 3.7512125741603857], [3.9467791556907699, 2.0230395050836645]], [[-1.284872990686996, -0.61787673514865826], [-3.9235720833257046, -0.11825446977713661]]]))
      arg1=Data(-0.380983118767,self.functionspace)
      arg1.setTaggedValue(1,4.80801095448)
      arg1.expand()
      res=arg0/arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[[7.6733922906004084, 12.109069411182521], [-0.9705768148452083, 3.7094933890765112]], [[0.25074342229454127, -0.75444567934417084], [0.35148810582106443, -3.9293810978419583]], [[0.52074459029642672, -9.2482488473842182], [2.0129124691828468, 8.0890525531172965]], [[10.621158267273067, -6.1531558199252849], [5.754379591260939, -7.6826743501419603]], [[8.6697251592948916, 9.5792683975973407], [-0.47567103886640549, -10.006726748894609]], [[0.71000254382878092, 0.32784930067584511], [-12.043240493268975, 1.1634004882837481]]])+(1.-msk_ref)*numarray.array([[[-0.88875686359261863, 0.54508339097899472], [-0.30381676453468709, 0.071873165835826092]], [[0.2742027996953792, 0.034633481956604921], [0.026147097464918601, 0.54162255388108638]], [[-0.96632232288161335, 0.17201228589443024], [-0.061742423968125806, -0.56811249749175208]], [[0.66850100427451975, 0.8930643444589399], [-0.71124308334390562, 0.694779905709631]], [[-0.15494065646432989, 0.78020050488077297], [0.82087565794963469, 0.42076432941508357]], [[-0.26723587006157284, -0.12850984346707292], [-0.81604890680768405, -0.024595299573280157]]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_div_overloaded_taggedData_rank3_expandedData_rank3(self):
      arg0=Data(numarray.array([[[1.3030807390070231, 0.82127637791553276], [-2.9606834680969496, -1.118500727450924]], [[-0.10527441065803256, -1.7036285349095071], [2.0749292280559715, 0.18766364610176289]], [[0.17322444543358095, 1.8375346797078631], [3.3181757408573951, 1.5715641685845041]], [[-1.8544947705522832, -4.8166379022667529], [4.8520794350991032, 2.6712900737127176]], [[-3.1314844443990397, 1.3948832470485897], [4.0479224098608295, 3.3473999426191678]], [[-0.56471985665859403, 2.7421007640238759], [0.4901941429997887, 4.167578888219337]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[-3.303869536271332, 1.11279445169325], [4.8332355282011328, -3.9306895647498044]], [[4.3973887894618553, -3.634065929413195], [-3.189822296333904, -2.7055559770184923]], [[-0.86544452397463001, -1.1173825047968986], [1.4607489243185938, 0.70581535455476274]], [[-0.11179792520149778, 2.0989695219655893], [1.511321381783846, -0.88964822861353632]], [[0.84022664796619928, -2.3804943246397805], [0.48611183702885974, 0.44058210065668568]], [[4.4082571824426182, 1.1114191929844477], [0.65626061651835599, 0.19178014938961141]]]))
      arg1=Data(numarray.array([[[1.4677610289674732, -3.7236404556747491], [3.7207377949461975, 3.5930209564696032]], [[-3.8006610018199396, -0.39710647500866525], [-3.8904627344396681, 4.8903230445371815]], [[-2.9314504272302, 2.3587324666543701], [4.665664136916531, 4.9945594696438782]], [[1.9628235610719553, -4.8889899786606064], [1.8838860934203812, -1.029348815023484]], [[3.3814184641408254, 0.71686668985086133], [-0.65039794223511294, -4.9535588999565654]], [[-0.84501415113220713, 1.9805961596815989], [2.5931526352221104, 1.1220257622302112]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[-1.6872082410458713, 4.0157845925193829], [0.78345958243454916, -0.96540699024498888]], [[-3.9886327567173763, -0.37651403960664798], [0.015760472815211202, 0.31573495968308496]], [[-2.4577065831388856, -1.8460551455583296], [1.91188909328483, -4.6208887383513675]], [[-2.6671460557039541, 1.4465886022360586], [3.9230452652233119, -1.3572843287538863]], [[-0.0041169436943278015, -0.57878923774283564], [-0.29559919131281198, 2.0240994978893267]], [[-4.6636866277286479, -2.7711289542982307], [-3.5219939460384952, 0.9525977694068386]]]))
      arg1.expand()
      res=arg0/arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[[0.88780170156425409, -0.22055737864377453], [-0.79572483503631608, -0.31129813630420067]], [[0.027698974101510791, 4.2901051534662891], [-0.53333738675556741, 0.038374488636572945]], [[-0.059091719179182302, 0.77903480182058338], [0.7111904422358033, 0.31465521196338059]], [[-0.94480971562186133, 0.98520101765197832], [2.575569431742911, -2.5951261950515518]], [[-0.92608604276806339, 1.945805638338119], [-6.2237626336116891, -0.67575656416410412]], [[0.66829633077972028, 1.3844825208914353], [0.18903404926559683, 3.7143344016768265]]])+(1.-msk_ref)*numarray.array([[[1.9581871732817759, 0.277105115091623], [6.1690936412854525, 4.0715362582493038]], [[-1.1024802376343323, 9.6518736278991852], [-202.3938198894167, -8.5690731863654257]], [[0.35213500664075142, 0.60528121680728675], [0.76403434145276228, -0.15274450317247462]], [[0.041916686550557261, 1.4509788883453911], [0.38524189235879663, 0.65546194689385118]], [[-204.08990512156817, 4.1128862967860993], [-1.6444965051154066, 0.21766820312742141]], [[-0.94523014394506366, -0.40107090334448436], [-0.18633212508968439, 0.20132332401851899]]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_div_overloaded_taggedData_rank4_float_rank0(self):
      arg0=Data(numarray.array([[[[3.6203898043611602, -4.8522252206209142, 3.1930866223489787, -4.7335254845755834], [-4.9589079272086423, -3.3771502779694762, -4.3302456038164392, 3.2988256323598524], [1.5372701442055314, 3.3506351444045244, 0.37323338247660054, 0.66273168450391751]], [[-0.37569636227086889, 3.5117066629685514, -0.68247207856867576, -3.5518497694242668], [0.52969358964135704, 3.2380028341101603, -2.8115421943851162, -1.2112866867917305], [1.312586199221939, 2.2049983340740873, -0.063973208576920904, -1.3744609948537612]]], [[[-2.6119033395905733, 1.6478643456924482, -1.8326459567700928, -2.0904354431940151], [3.0025998076579015, -3.216243008732762, 4.8184792438440169, 1.6769454462177773], [-3.6266313077416945, 0.58490737983812835, -0.24713838094624929, 0.67551945767703536]], [[0.39214409502181269, 4.4550016931441547, -0.92391535607890773, 4.8711114102911335], [0.06138164770969734, -3.7850186033068711, -0.44883011158736608, -1.1388227684437768], [3.9946701951683821, -1.5235711003213859, -4.909818628684647, 3.1171649422216579]]], [[[-0.42423119998224035, -2.5228654622761071, -0.2122461957948385, -2.900151833219641], [2.5687623559133783, 1.1172843662843448, -3.2010427689428225, -2.2640960195326909], [-4.8469757068278572, -0.78288514960780198, -3.8480800644004587, -0.61918384740730747]], [[2.4123778086960312, 0.16077761049424133, -1.2547160847252501, 1.9801405242982115], [-0.54998003204373092, -2.8676285276543778, 2.3933635846937227, -3.3144110754777891], [-1.2675207995210314, 0.61155064775410306, -3.8693222930075066, 3.6992300759582619]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[-3.634851405743913, 0.27020005877386755, 4.6453187805316745, -0.52328532154797802], [-0.82978855445949051, -4.746822215577704, -4.332549741487421, -1.6242034193431243], [-4.9322371420319167, 0.22972216757547237, 3.6264993122046523, -2.4148707558881455]], [[-0.53059750609464462, 1.5789454802460314, -2.204494424669281, -4.8604313537221477], [0.42659220872660875, -4.0354210574814431, -4.6115751168595267, 3.2002303390390416], [0.64763447796177509, -2.1720613963955469, 0.8863986077623478, 3.5941628697016341]]], [[[-3.4699331906186428, -0.88802807462416666, 1.082548213294996, -3.0845995178982943], [0.33065149231971525, -4.6219993942457975, 0.13862939178681533, -4.6872263486545931], [3.3681435450104207, -0.98115160228651987, 2.6737643765785233, -3.3741281655630795]], [[0.39786453691122148, 2.6812507071066625, 1.7081409703380608, 1.6248594881653684], [-0.78496210682853729, 2.7617802436342682, 3.1095291962382685, 3.2655545837171935], [-0.16081689153361367, 4.130199757349116, -0.32388642843524451, 0.84634232389791197]]], [[[3.0873340023218176, -0.41109976788443348, -3.1184580296746156, -0.5696825246610695], [2.4620105272124873, 0.43074446661690491, -0.799082081550468, 0.73248964174856379], [-4.0633985174048748, -2.4843305264582325, 1.3472174598355791, 4.4028741514964072]], [[2.4236778091329283, -1.8484683056142193, -3.7205804053990388, -0.28143868847938069], [-2.842491844767181, 2.2381877451472612, 0.67607094394759848, 0.23955332426623244], [-3.6987505214923488, 3.1925484048981083, -4.8258105785692997, -3.2680928819884336]]]]))
      arg1=0.413558452763
      res=arg0/arg1
      ref=Data(numarray.array([[[[8.754239649003555, -11.732864334411099, 7.7210043731748819, -11.445843877563455], [-11.990827158952337, -8.1660772628489333, -10.470697853913085, 7.9766853036560441], [3.717177424216108, 8.1019626657761776, 0.90249245295974789, 1.6025103103942857]], [[-0.90844803137390251, 8.4914396973488131, -1.6502433308001243, -8.5885072489548495], [1.2808191589412636, 7.82961347416426, -6.7984154974924706, -2.9289370793854173], [3.1738831365953373, 5.331769473796844, -0.15468964096723203, -3.3234987355956416]]], [[[-6.315681186391835, 3.9845983915496226, -4.431407324707612, -5.054752065218719], [7.260400041626867, -7.7769973923697675, 11.65126528462403, 4.0549175939042481], [-8.7693318405397935, 1.4143281945512094, -0.59758996411491794, 1.6334316301924243]], [[0.94821927203176692, 10.772362802348114, -2.2340623191364943, 11.778531856242719], [0.14842314864938125, -9.1523183192512434, -1.085288206753785, -2.7537165806535824], [9.6592638077563429, -3.6840526173294119, -11.872127376138105, 7.537422875517108]]], [[[-1.0258071069461017, -6.1003842272327775, -0.51321933907202899, -7.0126769597898884], [6.2113646541363927, 2.7016359085853008, -7.7402426369334449, -5.4746699152307574], [-11.720170811263451, -1.8930459391573868, -9.3048033202764291, -1.4972099911633951]], [[5.8332208967729109, 0.38876635072976545, -3.033951008234733, 4.7880547745241735], [-1.3298725449059901, -6.9340343752943978, 5.7872437830777148, -8.0143714953268894], [-3.0649132935180412, 1.4787526253371113, -9.356167833479125, 8.944878411360623]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[-8.7892083487994928, 0.65335397443443821, 11.232556726848653, -1.265323724014084], [-2.0064601482934585, -11.477995876666061, -10.476269346057874, -3.9273853756114248], [-11.926336190387875, 0.55547690064249866, 8.7690126703326321, -5.8392489374899048]], [[-1.2830048631561037, 3.8179499649827977, -5.3305510017732667, -11.752707075011374], [1.0315161155000139, -9.7578009360408018, -11.150963270236463, 7.7382781506598546], [1.5660046932529459, -5.2521267111874419, 2.1433454009695927, 8.6908219277980461]]], [[[-8.3904298592696094, -2.1472855135484341, 2.6176425752191252, -7.4586784462695181], [0.79952783000896122, -11.176169567717794, 0.3352111191550361, -11.333890813585125], [8.1442986414741938, -2.3724617299698876, 6.465263516470225, -8.1587696806046246]], [[0.9620515171501679, 6.4833657471902519, 4.1303495525834659, 3.9289717748685562], [-1.8980681003702879, 6.6780892161207595, 7.5189593525680092, 7.8962346480828147], [-0.3888613337705179, 9.9869794215351284, -0.78316964934727251, 2.0464877896771916]]], [[[7.4652905331589334, -0.99405480685390113, -7.5405496099468303, -1.377513918176662], [5.9532346897079131, 1.0415564323223436, -1.9322107339631549, 1.7711876927051486], [-9.8254514936258115, -6.0072052931295277, 3.2576228362248361, 10.646316432604149]], [[5.8605447257537788, -4.4696663633958664, -8.9965043164729916, -0.68052940666274586], [-6.8732529241615801, 5.4120227266354917, 1.6347651448791107, 0.57924900982094796], [-8.9437188305015969, 7.7197029429966948, -11.668992729623149, -7.9023723494265541]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_div_overloaded_taggedData_rank4_array_rank0(self):
      arg0=Data(numarray.array([[[[3.4291166724435556, -3.5926339750524203, -1.5475843284301338, -3.4566378870411008], [-3.672887604919862, -4.5295982023752899, -1.4658640846319413, -0.014575827085298698], [-1.253532674795943, -4.6553481394901208, 4.862329645566291, -1.51717090636871]], [[1.8161815466297355, 3.7585630608880471, -2.6866097249378864, -2.7480595936533616], [1.1878511834883465, 0.3647196286663732, -1.5374358841644673, 0.58709308345952582], [3.5533218142514649, -0.37232562804411451, -1.2137088225392301, 3.9446296095433855]]], [[[0.25170530254330536, 1.0783691566479501, 1.4521010658044844, -2.3963713247532512], [-4.3383471977641888, 2.1563624449196128, 3.8141212549286365, 4.0912931529208052], [-2.4807386402123233, 2.0367813392198011, -0.29099812506794187, -3.3842548469707578]], [[-0.82534111740968719, -3.2362584223700241, -0.81520740895996369, 0.24629244526181981], [-2.3470833053686824, 2.2250912336018969, 1.2535083827066824, 1.4506279015892778], [-4.4413536877400723, 0.22597360655997178, -4.2731012937159853, 0.88576214135889764]]], [[[-2.7775903348569733, -0.32907536494470868, 4.8380401319641546, 1.2853515653123964], [1.3956938433885995, 1.7898635170409953, 2.8197354403935302, -1.9117009156228026], [-1.8413635689185437, 1.8044097183152994, 0.33537690066736126, -3.6486560523145926]], [[2.0535577780102106, 1.5376737584515601, -0.25710013106498586, -1.1731957173889573], [2.4279006360588786, -1.3926894400285725, 3.7160645033901378, -0.59603409648490135], [2.1961906463550989, -4.8502792078765768, -2.6741887490519489, 4.6451433282020052]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[-1.9771675854126611, 4.9618182253042313, 1.712135945833321, -0.67123899563295009], [3.941760104308786, -1.5661992738598962, 0.30424350159760216, 2.8287611250635925], [2.7512229432822313, -3.5283965645877879, -4.7500059147253513, -3.9493198458266487]], [[-1.0742850319177935, -0.76421683993359135, -1.5611177509428842, -3.5448170561914849], [-1.6657876306848518, 1.9787072708209852, -1.4607491047318213, -4.4590699358789525], [-0.49773075429816771, 1.7665162863795993, 3.8854046738265371, 4.2832536612472634]]], [[[3.9890217647607162, -2.3994769041291053, -2.1163364325133003, -1.307887439158101], [3.9605554981132371, 0.48753951223392278, 3.7033077812374344, -0.66348907194746687], [-4.666759865063308, 2.3997229252818952, 0.31299119875697468, 3.5203143497411702]], [[-2.6814907550189151, 0.77666800881142528, -1.9893706891053728, -0.42858869738287453], [4.9998354563033569, 3.4099475118847558, 0.16083020588602537, 0.082896008013789491], [1.7047891583154353, -3.4959118176542683, -2.4548329754440221, 1.9960045736244547]]], [[[2.3076956668090753, -0.99915431286848388, -0.72964162046804582, -4.46671518492641], [4.0613942475823119, -0.81754340528169678, 2.8936712519469694, 1.7267394065339161], [2.9659526805781864, -1.1489506392304483, -0.33478659759331109, 3.9044015537839947]], [[-3.6586411908075132, 3.0936431238494233, -1.6824067748478386, -2.7631481667262889], [4.6689057608218185, -1.2908633616405227, 4.8583632131870083, 4.2658077893322606], [0.93515334196051292, 0.35912305019103741, -2.1671416722028356, -3.0998917370748922]]]]))
      arg1=numarray.array(-0.354012216204)
      res=arg0/arg1
      ref=Data(numarray.array([[[[-9.6864359914192129, 10.148333335985685, 4.3715562841960232, 9.7641768527166697], [10.375030681992309, 12.795033603476197, 4.1407161039491678, 0.04117323193413866], [3.5409305595049809, 13.150247156452165, -13.734920499918687, 4.2856456272488881]], [[-5.1302793053377096, -10.617043392420184, 7.5890311180316283, 7.7626123276699142], [-3.3553960262286235, -1.0302458841021425, 4.3428893518102507, -1.6583978082854929], [-10.037285866430942, 1.0517310166190146, 3.428437683740126, -11.142636974049445]]], [[[-0.7110073918975609, -3.0461354362573161, -4.1018388613075931, 6.7691769240251514], [12.254795171419598, -6.0912091340799606, -10.773982027578821, -11.556926472163189], [7.0074944497977096, -5.7534210572108941, 0.8220002354381889, 9.5597120439978447]], [[2.3313916289638694, 9.1416574746173378, 2.3027663217403611, -0.69571736224965297], [6.6299500354363055, -6.2853515549805374, -3.5408619401518946, -4.0976775240774774], [12.545763915606759, -0.63832149348640899, 12.070491068166428, -2.50206659774613]]], [[[7.8460296219097492, 0.92955934818584307, -13.666308422452643, -3.6308113293202502], [-3.9425019236711529, -5.0559371544624669, -7.965079484054149, 5.4000987200946815], [5.2014125067814545, -5.0970267005529015, -0.94735968228226786, 10.306582330505805]], [[-5.800810491875847, -4.3435612898852787, 0.72624649460289492, 3.3139978330913253], [-6.8582397016989889, 3.9340152013985716, -10.496995112861997, 1.6836540356587744], [-6.203714295236602, 13.700880890159121, 7.5539448263236357, -13.121421000684066]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[5.5850264338662177, -14.01595198748894, -4.8363753211419613, 1.8960899226301011], [-11.134531306777943, 4.4241390612237481, -0.85941526216149222, -7.9905748886106212], [-7.7715480352078821, 9.9668779863557209, 13.417632774525298, 11.155885771883463]], [[3.0345987588681962, 2.1587301368507879, 4.4097849720584206, 10.013261955190909], [4.7054523952457554, -5.5893756775867658, 4.1262675067935044, 12.595808087327251], [1.4059705612274889, -4.9899868013596196, -10.975340668990111, -12.09916908284098]]], [[[-11.268034215120105, 6.7779494443894253, 5.9781452041527183, 3.6944697931081163], [-11.187623807387029, -1.3771827352775414, -10.460960418100669, 1.8741982383018676], [13.18248255695767, -6.7786443954152062, -0.88412541836221459, -9.9440476588227487]], [[7.574571250025218, -2.1939017165531332, 5.6194972886394003, 1.210660756225199], [-14.123341589482742, -9.6322876889557278, -0.45430693779562592, -0.23416143347422458], [-4.8156224002494081, 9.8751163311173276, 6.9343171310993341, -5.638236428746513]]], [[[-6.5186893592316322, 2.8223724129673289, 2.0610633957528175, 12.617404090791281], [-11.472469202131476, 2.3093649536937426, -8.1739305015308101, -4.8776266114425395], [-8.3781082821910697, 3.2455112751457764, 0.94569221701686157, -11.029002319882107]], [[10.334787963068376, -8.7388033018158779, 4.7523975101380485, 7.8052339446149608], [-13.18854420020128, 3.6463808381559151, -13.723716275324941, -12.049888659407982], [-2.6415849486414271, -1.0144368859400401, 6.1216578779080599, 8.7564541424915632]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_div_overloaded_taggedData_rank4_array_rank4(self):
      arg0=Data(numarray.array([[[[4.3484989775288003, -1.7929249802302092, 2.0779983540925562, 1.0503700983964652], [-1.5895395382220325, 1.0401312317618272, 0.4842399425365862, -3.6060523482073901], [-4.5935125880844749, -4.0596976604690553, -4.0608640851511657, -2.0157235671605123]], [[-3.705612740297568, -3.5943235555444364, -0.37810498476484433, 4.3370173161720711], [0.94768283206301795, 1.7164605126868828, 3.6979707581269352, -1.5616197272506649], [-1.1388436761841092, 4.6107919748917823, 3.5046908064414435, -2.0225996410347391]]], [[[-3.7681998585876841, -3.9961751598521911, -3.3503387997472966, -0.89624739120825758], [4.1276689211184454, 2.4142060759166153, 2.9275395190108311, -4.9964976557795993], [0.48846218191833746, -2.4045911125750621, -2.6714033286046543, -3.8023982287566915]], [[2.6659828717665937, -2.4211606978373581, -4.7326133175617313, -0.39007157864666553], [-4.4244615074437945, -1.0269630616652305, 2.3126705703389847, -1.7290368232987485], [4.4098964101457696, 4.7888247663779708, -1.6360308140793043, 0.054362557577115389]]], [[[3.5373421989778624, -2.7639050986102154, 4.9300954082122281, 4.8628243931665498], [-4.0252485831981266, 2.5490427067941104, -2.55346821912973, -1.2104300088942122], [-1.5835993362950296, -1.8046684461723874, 1.9089968859838002, 3.2044118092594083]], [[-2.5012986239860191, -2.5895327276050804, -4.0673106142341018, -0.27916934689119621], [-4.0992174947658029, -3.094139736906627, -4.7619515312450442, -2.2463466407900725], [-1.9373603504946644, 0.74140082630889559, 3.2811941121539192, -4.6192599827704353]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[-0.53663512635629385, -2.7009508966269555, -2.9322864221970413, -3.87407870139858], [1.5638958138044252, 2.9611526205707133, 4.6624899616753783, -2.6664701966094704], [4.3013786357304102, 4.3867218757293518, 1.3914518509106006, 3.7129868708778346]], [[-3.4818343088488382, 2.5529269591639459, -3.6597647209151618, -4.7848121574289673], [0.39120757141152929, -2.8205906155952052, 2.9359324295877567, 1.3342046387109647], [-2.8404138690301428, 2.4433535796198145, 0.27164604513699508, 0.76577024112161851]]], [[[-2.6323114349293721, -1.9513245823199332, -0.76132885374069126, 3.7670465834725739], [0.87090429210883791, 1.4328657939451253, 4.6166272718333357, 2.8806864955884093], [0.13519516280943034, 1.336724047314366, 1.7326233175785619, -2.8137716073347074]], [[4.1661183110905053, 4.1813391123985664, 0.65205508760660091, -2.1780140471497522], [-1.0295038503306819, -3.561536226697565, -0.98984005700005007, 2.0199834539679262], [-2.3777231591733248, -0.5168651308529002, 3.1683067215847558, 3.2200356944224939]]], [[[4.974940365627603, 3.4341504372262026, -1.3160374767203917, 2.0415103042394822], [-1.3664969791606896, 4.1962542537677727, 0.84410761968411308, -0.30046476238547815], [-1.9850060038121251, 4.1392920819649994, -2.4979400850061131, 3.701761580821854]], [[-4.5777784298094257, 4.9330256940430761, -3.7606154108547729, -2.4976261728072782], [-3.3011102553944207, -1.744681441245671, -1.9624990640275231, -0.41181125455890921], [3.6866442215485584, -3.9399299890178763, -0.34589830377824349, 0.14071561716039316]]]]))
      arg1=numarray.array([[[[4.716548264407276, 4.9493153670893459, 4.0303632338287727, -2.7918373753992864], [-3.1642256890177145, 0.9600016877976465, 0.72222248585893567, -1.3021771337840651], [1.6876352262470533, -2.508511798266019, 1.7918329453704818, -4.4240928385756773]], [[-2.2850969455766137, 2.3712584404976047, 2.1591345574435277, -4.3539796308593148], [-3.3100226259288723, -3.6486010213358702, -2.3626764092902519, -0.21996471093734282], [4.2405939229935043, -1.905055393004309, -1.1046149451251051, -1.2587547246524733]]], [[[2.8132719726595674, 3.5263384111761304, 1.007061035840298, 0.87839844219783458], [3.4777328984979299, 2.5677732076137723, 4.4273041523020744, -3.0822857438537565], [-2.4246005886145094, 0.37110775845864197, 3.4328395558187648, 3.1793581852310631]], [[3.5445478456448996, -1.7111295028806026, -0.86774760399449491, 0.015294499517274573], [-3.5690561958867328, -1.8256590645822666, -4.72718231165058, 3.0726391003770388], [-3.7589834524042489, -4.9523731632275876, -3.7044074225194388, -1.5312388184257952]]], [[[0.22698221784808048, 2.5757324564337116, -0.46298738382947935, 2.201675952805795], [-3.5694600590090673, -4.9378448578136585, 1.9011925430637024, 2.9918275022166636], [3.1290586582976552, 0.29008015530205622, 1.5476947894407997, 0.68434817331810294]], [[-4.987272382360727, 4.1052625238211498, 0.91361922587186761, -4.9668268962228179], [-1.2487665619448363, -4.6277666543668747, 1.4315247358023777, 1.0367934698711965], [1.5567636790409436, -0.52414264847394509, 0.00029941434281344215, -3.9271025566758508]]]])
      res=arg0/arg1
      ref=Data(numarray.array([[[[0.92196639019769933, -0.36225717038609617, 0.51558587490351215, -0.37622896937048206], [0.50234708091112201, 1.0834681282154899, 0.67048582953033098, 2.7692487102183807], [-2.7218634196795497, 1.6183689721034107, -2.2663184621329395, 0.45562415634330766]], [[1.6216435576051702, -1.5157873533136159, -0.17511876851831348, -0.9961041814327698], [-0.2863070556193178, -0.47044346659159553, -1.5651617562126527, 7.0994102672018782], [-0.26855758812675484, -2.4202928648812017, -3.1727714910144673, 1.6068258584635335]]], [[[-1.3394367466808983, -1.1332364322116655, -3.3268478081388113, -1.0203198778059799], [1.1868849740879266, 0.94019443335501318, 0.66124653249508336, 1.6210364875297121], [-0.20146088564527637, -6.4794956660628298, -0.77819055774877288, -1.1959640931367248]], [[0.75213623510322269, 1.4149488357026472, 5.4539053703820493, -25.50404334617776], [1.2396726934540565, 0.56251634359792824, -0.48922813165872475, -0.56272043894988544], [-1.1731619641276143, -0.96697575254142842, 0.44164440556233642, -0.035502337664743464]]], [[[15.584226079531087, -1.0730559735373457, -10.648444386182254, 2.2086921497095942], [1.1276911680349753, -0.51622575844206575, -1.3430876469854596, -0.40457880943917957], [-0.50609448694598036, -6.2212750965098342, 1.2334453142880601, 4.6824291116649386]], [[0.5015363974971081, -0.63078371056152616, -4.451866268852501, 0.056206780047740226], [3.2826131157625311, 0.66860323088825591, -3.3264891707064659, -2.1666288475651201], [-1.2444794136565354, -1.4145020033525288, 10958.707192588807, 1.1762514261100607]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[-0.11377708787715167, -0.54572212443503354, -0.72754892104635982, 1.3876448304387758], [-0.49424281562226768, 3.0845285567819527, 6.4557529749718352, 2.0477015971405015], [2.5487608748815784, -1.7487347991592563, 0.77655221961715981, -0.83926513442543826]], [[1.5237140444254735, 1.0766127030119157, -1.6950146568208422, 1.0989514336530375], [-0.11818879071914108, 0.77306085239281552, -1.2426299335970901, -6.0655394814262475], [-0.66981510623517759, -1.2825630102894798, -0.24591921948532874, -0.60835540564349277]]], [[[-0.93567613103573433, -0.55335715260212737, -0.75599077577798812, 4.2885396905384683], [0.25042299610904301, 0.55801882724552809, 1.0427626187445962, -0.9345942378420472], [-0.055759766554657551, 3.6019835663536441, 0.50472015642027723, -0.88501245956036056]], [[1.175359592397466, -2.4436134759873447, -0.75143403981180867, -142.40505514350212], [0.28845268716059019, 1.9508221966473727, 0.20939324776209653, 0.65740992937311027], [0.63254419426947228, 0.10436716172576262, -0.85528030807959277, -2.1028958093766734]]], [[[21.917753790551725, 1.3332714073809642, 2.8424910109539727, 0.92725285101006838], [0.38283016382596768, -0.84981492424323724, 0.44398849699034926, -0.10042850470585685], [-0.63437800967657643, 14.269476923213913, -1.6139746040681884, 5.4091787267782747]], [[0.91789220215851386, 1.2016346495306347, -4.1161736797581225, 0.50286153010620882], [2.6434966758344749, 0.37700289827693595, -1.3709152311137196, -0.39719699875238373], [2.3681463482111456, 7.5169040345964682, -1155.2496133886425, -0.035831918094724725]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_div_overloaded_taggedData_rank4_constData_rank0(self):
      arg0=Data(numarray.array([[[[1.4173585570317968, -3.4393893015769494, -3.1509699880534292, 1.7628667246861784], [0.067347000712521421, 0.11965659760196168, -2.1880479829258781, -4.8400510091415869], [3.6467741235840219, -4.3380954071712026, -4.0426865104307996, -2.2242393001433438]], [[2.1833635582686455, 2.9203573628514992, 3.5790548753483122, -4.3630553763423121], [3.8187389435246271, -1.3905976522639985, 4.4779815014379363, -2.7986552858896854], [-0.28202541643548518, 4.3292870746101091, 0.62063941405136447, 4.9342658555532051]]], [[[-4.7415827367013446, 2.407056747163848, 2.8534937886305309, 3.786423030640675], [-1.8195754586326451, 2.9033743594199812, 3.7222111716350863, -1.9726850719996136], [0.608936138105447, -4.940120414207624, 0.43614026498707137, -3.555285140406407]], [[2.1209173855882, 4.226177429619181, -2.5967747750708337, -4.6503828639089209], [1.58306759699268, -4.068533982115607, 0.60819098812429662, -2.6595307686277958], [-1.4154754405006651, -4.9373597216554508, 4.6389162956127432, -3.2206479990838268]]], [[[-2.8720339641094772, 2.242634641027176, -1.8648698974356548, -4.7099746442479775], [2.772191984852884, -1.0013392310020528, 4.873597742875317, 3.6182945461428968], [0.024120148988890477, 2.0715664150573119, 3.4977936991930552, 2.1083334817544985]], [[-3.667584818856052, -0.18618817620501815, -2.03406364033482, 4.5674396199330296], [0.0038148629550915913, -2.7801037613319779, 0.6075336550236603, -3.8391515563881828], [-1.9597005615585106, 0.85720098260441446, 4.6413579299494643, 4.9537024539144916]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[-3.9570089266185526, -1.1788388614277956, 4.9871221500653942, -1.1263227497125272], [-4.7820371711370822, -1.5988984302751774, -4.8605916736720891, -4.197788131553148], [1.1789837219166124, 4.3036149006784878, -3.6887726107349517, -1.8159689787298996]], [[-3.766620874378118, 0.76658944920751715, -0.63626181543470217, 3.5065526932923916], [-2.4382612735796649, 3.8413000700443192, -4.2431761370571008, -4.8799764552597509], [0.029220677961343533, -2.1941625574978776, -2.4657880163465364, 1.08462526349527]]], [[[4.5243766869060309, -0.16860083372765988, -4.5936390657344006, -4.3725680499032311], [2.514812865534144, -0.20614827168817662, -1.9610510771216294, 3.5907269365980667], [0.85365999983534913, 2.3977418092871261, 4.7772304391655886, 3.6729390698295674]], [[-4.5443861551323721, 1.4225729471964224, -0.7779134988817491, -3.242376137955282], [-3.8327511617844943, -0.97328759004036414, -3.7652958167274884, 0.5676714583596727], [-0.16840680222869508, -0.4223679804411411, 0.45452141604072427, -4.6381891557963701]]], [[[-0.75086306079533482, -2.5386852340591437, 4.7618030419518398, -2.0382885083950031], [-2.4780191973084675, -2.6499862808785135, 3.0294958184300746, 3.4292567495673385], [4.8465440472347581, 0.52512139371831523, -2.5929720943877066, -4.5730372663522445]], [[2.0895256871276793, -3.83148683348033, 2.9288901294151035, -4.80406347473407], [-3.9850590813625053, -4.5481400160096888, -1.3542666107504631, -0.10811912590963679], [-1.0784287881976629, 3.7690661883856595, 2.6920830517008199, -0.37334808389058516]]]]))
      arg1=Data(-1.20267864853,self.functionspace)
      res=arg0/arg1
      ref=Data(numarray.array([[[[-1.1785014715017488, 2.8597741431527375, 2.6199600299837944, -1.4657836711797707], [-0.055997502570660586, -0.099491745154533212, 1.8193122374021355, 4.0243925632777771], [-3.0322099158017468, 3.6070278727301242, 3.3614020797534052, 1.8494044962626528]], [[-1.8154172446183414, -2.4282108661614048, -2.975902897864164, 3.6277815205991515], [-3.1751947606323623, 1.1562503865584906, -3.7233399852284714, 2.3270183513437876], [0.23449773285748504, -3.5997039441213574, -0.51604758662003658, -4.1027300697489162]]], [[[3.9425184296004954, -2.0014130541966799, -2.3726153217465207, -3.1483248125181635], [1.5129356963828138, -2.4140898842579426, -3.094934109120977, 1.6402428648892147], [-0.50631657829103727, 4.1075980023937619, -0.36264073160486476, 2.9561389027429112]], [[-1.7634946693261202, -3.5139706145097551, 2.1591592885207702, 3.8666878052652356], [-1.3162847772617334, 3.3828936658196271, -0.50569700299379261, 2.2113394728400548], [1.1769357028457246, 4.105302549193893, -3.8571536139746283, 2.6778957147286651]]], [[[2.3880310568655125, -1.8646998047030039, 1.5505969942353341, 3.9162370181094857], [-2.3050147171483761, 0.83259084397080685, -4.0522859109935956, -3.0085297935379764], [-0.020055356448249212, -1.7224604574097728, -2.9083360742119431, -1.7530314388953459]], [[3.0495135365964896, 0.15481124274816671, 1.6912777513989439, -3.7977223803967255], [-0.003171971964220548, 2.3115931797233866, -0.50515044543958487, 3.1921673849394212], [1.6294465391566384, -0.71274316182040343, -3.8591837775097613, -4.1188911601491709]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[3.2901631133701215, 0.9801777581005825, -4.1466788789981397, 0.93651180312613802], [3.9761553736713937, 1.329447755836183, 4.0414716596396145, 3.4903655574973742], [-0.98029820630924935, -3.5783581141583145, 3.0671307046611798, 1.5099369901971131]], [[3.1318597690197825, -0.63740172833944853, 0.52903725880094921, -2.915618979009555], [2.0273589096868871, -3.1939538252813775, 3.5281046539381191, 4.0575896655686439], [-0.024296330526157418, 1.8243963673810728, 2.050246771544753, -0.90184128971147282]]], [[[-3.7619165289502305, 0.14018776664429544, 3.8195066249523912, 3.6356910927634005], [-2.0910098209658821, 0.17140760912385575, 1.6305694621957842, -2.9856079518817591], [-0.70979891501482095, -1.9936678947659898, -3.9721586851317041, -3.0539654747597527]], [[3.7785539476413015, -1.1828371185767306, 0.6468174186305411, 2.6959621690538351], [3.1868456020911666, 0.80926654117715102, 3.1307580136570734, -0.47200593363434268], [0.14002643385668623, 0.35118938958361257, -0.37792424152347731, 3.8565490137206333]]], [[[0.62432559330416315, 2.110859153582084, -3.9593311544919487, 1.6947906333024854], [2.0604167209131234, 2.2034034479002433, -2.5189570149454727, -2.8513491561272937], [-4.0297913770848801, -0.43662652061033863, 2.1559974458391968, 3.8023766963489334]], [[-1.7373931845288384, 3.1857943418017172, -2.4353056678975635, 3.9944697451986344], [3.3134861804074616, 3.7816751977623686, 1.1260419501170036, 0.089898599299267731], [0.89668906113802904, -3.1338929921176883, -2.238405957401759, 0.31043045816778614]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_div_overloaded_taggedData_rank4_constData_rank4(self):
      arg0=Data(numarray.array([[[[-1.0327339609779749, 2.0143756421271029, -1.4786431987463611, -3.3066473304511557], [-2.3857503755349541, -4.0989361275654144, -0.95981928972363129, -0.81912046501743685], [1.4552110308441808, -2.5256713956724641, 4.917275304979583, -0.84847890779292534]], [[-2.5198600255551993, -2.216911110117632, 3.4623156019023007, 2.3733635203373264], [-1.2490402234630729, 4.2041740272172046, -0.053829965996404994, 3.1525337197841203], [3.3295868593620455, 1.7001663075343405, -2.7437005349229815, -3.5457429439732047]]], [[[4.3492032764944568, -4.425918659979871, 3.4567987514242127, -2.3004055709219373], [-1.5112239287444518, -3.57060958366581, -4.0315098892273298, 1.8236002895632062], [-2.0719580828739081, 0.30223543143100784, 0.12944985525811781, 4.9648094786369512]], [[-3.7944453951822665, 0.94503128847260509, 0.47331917406600788, 2.5447210435078187], [-3.906021725515092, 1.6280705688937367, -3.4235948528843108, 4.5782607650119509], [-0.88158581136565495, -1.0769009851907696, -0.62053325420310124, -3.1597054761685484]]], [[[4.1631536517574403, 4.3452018044542768, -2.4897641411748572, -0.35602874699410503], [-2.4908988029131485, -2.9117802416963698, 3.4314284530743997, 2.5809687464932161], [2.3597874119038238, 1.0984189214186868, -1.8594596581995351, -2.5238387417743291]], [[-3.9572176122462555, -2.2886849222489491, -4.970763528630922, 1.694891486429607], [-4.9000788616881508, -2.0414302673538809, -3.76770221370227, -4.8482329677888654], [3.4099913440822878, -0.24363081159977718, 0.062331472170862767, -4.0476356555207147]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[0.18609579813963162, 2.9249226424011274, -3.3454919932308158, -1.6908852276540709], [4.8038090250202465, -2.6760579538656626, -0.11976206415871005, -4.5870291204655897], [3.2733848401463277, 4.8175569176651365, -2.3116863072831384, -4.07593517618227]], [[0.64858307312623786, 3.6195210186852282, 4.5260455645804836, -1.1594215305978404], [-1.77083941759724, 4.6499892967311158, -4.7281132836578363, 3.3639957748524179], [-3.7312141708376014, 3.7361883061083727, 0.53445097464518021, -3.7481246467759521]]], [[[-1.9869577655721473, -3.7717121865214098, -4.1854328353994488, 3.110458616826012], [-1.5396021073926223, 1.4602605301617979, -1.6444015905094456, -0.051360332396369834], [-3.7096192130280095, 4.9003256250813667, 1.406610428911482, 3.3249377590384501]], [[1.058063689730484, -1.1725067573512424, -3.6860642360241291, -2.278360136068792], [-3.3510345697745612, 2.9528141804938981, -4.38702870994506, -4.6579529585640467], [4.3087101651252642, 1.4743391204198355, 4.3889554146178149, -2.7559075549819543]]], [[[0.61939385953013204, 0.83406770965311239, 1.423942477925296, -3.6199653533478293], [0.04719680785062863, -3.2361875561286868, 3.1715068534183786, 0.0050131096953274223], [-4.8923191404689428, -0.55102373078262801, -0.92997995499814934, 1.9254434710409027]], [[2.7036847671301469, 4.9216725479761081, 2.8666102776185642, -1.7579156474796385], [-3.807137040478028, -2.950373718365217, 0.41297350766783048, -3.9539762623456776], [-0.22064451292381548, 1.0126529079254034, 0.66795032878315475, 4.0932377778717921]]]]))
      arg1=Data(numarray.array([[[[-1.3312800333173334, -1.2910396058893756, 2.5147578690884203, 4.0739027971873085], [3.7700260502184353, 0.54161430581316594, -3.0931532505810369, -0.44787191634812906], [0.59492156959891407, -4.0516437035473443, 2.3349818256603685, 2.4752672498872634]], [[4.4409330881365676, -2.3079933784723892, -4.2809444673227439, -2.8356804813898142], [4.6116847259232188, 2.9290417447727766, -4.3832596200982525, -3.8813038635301043], [0.25738532308619355, -1.2306647979479735, 1.1010715313719075, 2.953081064683067]]], [[[0.66877561500101201, 2.3617003661917915, 4.0912092286832138, 0.22725377284902404], [-0.14462763652825927, 1.0228724619218177, -3.7292900079072622, -0.74482357119130427], [2.4278025697684598, 0.45707659085504027, 1.5722478681951451, 4.1632310441724805]], [[-4.6250280554489045, 4.6463579579802889, 3.1269690657908704, 4.9063443457582885], [-0.014848349317174936, 2.3920121450559382, -1.4338035828251536, 4.2519882430015574], [-4.1003465593683366, -2.5230288750185945, -3.6802875469010665, -1.3317641815100334]]], [[[3.9971224488236725, -4.6860599157029306, 1.4243255625558016, -2.9447517298642225], [0.31994815793669495, -3.1075444383287265, 3.9151714138169051, 0.0016135577092271092], [2.4972478391360644, 4.4552548713869342, 1.9744489091719171, -2.2571281692770828]], [[2.6616788333468886, -0.010624796701055317, -0.95127951390529208, 3.8649177450920753], [1.1768111299437489, -1.6461489519670582, -2.0105118651319587, -1.3525247017642483], [0.94313538447299372, 0.60994861556454261, -2.8717423862263489, 3.5075536263829061]]]]),self.functionspace)
      res=arg0/arg1
      ref=Data(numarray.array([[[[0.77574509880131659, -1.5602740868196938, -0.58798630950595554, -0.81166574046246787], [-0.63282066058846564, -7.5679982666103625, 0.31030447312732823, 1.8289167842815528], [2.4460552536786642, 0.62336957059209275, 2.1059158794903694, -0.34278274712824219]], [[-0.56741679632298669, 0.96053616565614131, -0.80877377137937867, -0.83696436742904878], [-0.2708425006683487, 1.4353411093303989, 0.012280807130287751, -0.81223574103699359], [12.936195504228611, -1.3815023476491892, -2.4918458581018794, -1.2006927227220374]]], [[[6.5032324428992156, -1.8740390285481483, 0.84493326011996928, -10.122628733870178], [10.449067446726675, -3.4907671450624371, 1.0810395224504576, -2.4483654386050886], [-0.85342939688523001, 0.66123585735516355, 0.08233425395368428, 1.1925375810181102]], [[0.82041564930874311, 0.20339183873026387, 0.15136675934665711, 0.51865928360854285], [263.06100712467992, 0.68062805293811068, 2.3877711660745682, 1.0767341072843775], [0.2150027561332436, 0.42682864070782106, 0.16860999209847405, 2.372571300563052]]], [[[1.0415376824351803, -0.92726125628346268, -1.7480302303268636, 0.12090280595930608], [-7.785320031147041, 0.93700357291185166, 0.87644398939077262, 1599.551557241479], [0.94495523228491585, 0.24654457559164189, -0.941761343918183, 1.1181636807902977]], [[-1.4867374540715383, 215.40976139539907, 5.2253448707461638, 0.43853235649889077], [-4.1638617591272888, 1.2401248774690061, 1.8740014814361612, 3.5845799795484519], [3.6155905082362345, -0.39942841967807863, -0.021705105746887787, -1.1539768416013521]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[-0.1397871172723226, -2.265556090656256, -1.3303435827177787, -0.41505291408069106], [1.2742110958999644, -4.9408923012989794, 0.038718438582444371, 10.241832436977607], [5.5022124048270555, -1.1890376524093693, -0.99002325494733057, -1.6466646889817289]], [[0.14604657630596857, -1.5682545073335137, -1.0572539772773608, 0.40886888992147258], [-0.38398969635608243, 1.5875462700487539, 1.0786751626525499, -0.86671796209040253], [-14.496608144156252, -3.0359106007892174, 0.48539169292595158, -1.2692251125785508]]], [[[-2.9710379998964833, -1.5970324773261744, -1.0230307475001863, 13.68715941579744], [10.645282909617308, 1.4276076290275683, 0.44094226703281308, 0.068956373539873092], [-1.527974003825936, 10.721016396649118, 0.89464928359304707, 0.79864358325550089]], [[-0.22876913978585336, -0.25234963985876713, -1.1787977937964835, -0.46437020631022696], [225.68397996257087, 1.2344478210936698, 3.0597138705016333, -1.0954764435745268], [-1.0508160963323614, -0.58435285264381676, -1.1925577441125415, 2.0693660283438038]]], [[[0.15495994117278436, -0.17798912618640694, 0.99973104138507629, 1.2292939050297254], [0.14751392273984276, 1.0413970324006521, 0.81005568293278707, 3.1068673073544368], [-1.9590843422899769, -0.12367950806169989, -0.47100735333191401, -0.85305012681561077]], [[1.0157817439343118, -463.22510316712777, -3.0134258498327755, -0.45483908414660429], [-3.2351300422014257, 1.7922884286016045, -0.20540714771694482, 2.9234041028515536], [-0.23394786852060215, 1.6602265864447201, -0.23259409757185209, 1.166977960674221]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_div_overloaded_taggedData_rank4_taggedData_rank0(self):
      arg0=Data(numarray.array([[[[4.1007426349949725, -4.519732892858956, 4.7293849715227214, -0.28898207591347713], [0.55762176075736392, -1.0628715205486916, 0.66848695018160775, 3.5110793166256702], [0.10283202730874219, 2.7052524978179253, 2.8326265122643646, -4.7152653159891376]], [[4.1484005977522642, -4.3902301323650921, -3.4693138187917514, 0.57004159784484187], [0.14137737472461964, 4.0025183897828907, 4.9245677094597031, -0.76291386880514622], [-0.17084730988633545, -0.026736136212413442, 3.5053123019306494, 4.9418461315484166]]], [[[4.8017266655704134, 2.3171799385958201, -0.46730564148265685, 3.5201794972523555], [-0.46347188310928367, 3.9171558215207405, 4.9887716037125927, -3.6031584815729003], [-0.284282449264321, -1.6969663005117432, -4.3074021206231263, 3.1518012098091646]], [[4.8396148263500045, 0.89208823741248544, 2.3584938435932168, 3.5322340968157349], [-1.7116603978219236, -2.6064424603442338, 2.6696406363837335, -1.8681388264168906], [-1.5286663611455564, 0.69407234036637711, 1.2720299802229658, 1.2095882729783121]]], [[[-4.5591143019847618, 2.2166573142078843, 1.2198079645257103, -4.8410252577970052], [3.9450930169386638, 2.2573642178585764, 0.40755171373376164, -0.83310549622346297], [-2.7210938306756138, -2.2727676395034879, -1.5413440138460119, -4.2785489429394392]], [[-0.69128153199194742, 0.067135671848010503, 0.79267745460581107, -1.3197544231641292], [0.23283811800019727, 2.654085425482732, 3.8624565881931332, -2.0019718172030743], [1.7950199765221857, -4.4640736902418698, -4.8645144560789628, 3.0417550711231058]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[-2.3005185744779988, -1.2491428718597875, -4.1534661963625519, -3.2504302668519847], [3.7441647610516533, 1.9382774900121094, -0.28971022029775195, 1.3379140524199933], [0.67437833685640669, 3.6827935567186518, 0.18808629251455233, 1.5953047903090667]], [[2.9904609235071451, -1.0744799961237161, 2.4188331620484584, 2.1432545794028934], [-4.5846321967672203, -4.8160102341790036, -2.7191372978758066, 3.767797810163966], [-0.35446520795042602, -0.29091934715030021, -0.92793039759923257, 2.096406718096036]]], [[[1.9155168239565503, 1.6676698112020105, 0.14056204774522918, 3.108379355397318], [1.7152535885035913, 1.8199104367703942, -0.55774055354723551, -4.5700073386961435], [-1.9653086972102396, -0.26224038407908346, -0.24877949232596741, -2.9275802966760747]], [[4.1491403545718626, -1.6401663439420977, -4.0631386856139828, 4.9366951229348217], [-0.781324138865096, -3.1083849150122367, 0.83260797353436278, -4.0336581413838966], [-0.43765157692457013, 3.0204870664815768, -3.174934734493787, -3.6182308330378476]]], [[[-0.32659020813598705, 3.6115315302986506, 1.9808517984926759, -4.1578309504973543], [4.9419930674696726, -0.59807266472997611, -2.6874034592577303, 3.1265165029361182], [3.5833640072724329, -4.7869378475608446, 3.6198150783807659, -3.0020744900796501]], [[2.5347129953709349, -4.5750771859517601, 3.2598863328964214, -4.8520101461831846], [0.70583885439488103, 0.94538165740791058, -4.6925057824462781, 1.4297836601778346], [-0.72980890086483541, 2.1254089004795826, 0.77475702802959479, -4.1084262707435908]]]]))
      arg1=Data(2.99900582466,self.functionspace)
      arg1.setTaggedValue(1,3.51562204317)
      res=arg0/arg1
      ref=Data(numarray.array([[[[1.3673673459655484, -1.5070770639058448, 1.576984256796282, -0.096359291315025505], [0.18593553776153218, -0.35440795473301218, 0.22290285156692097, 1.1707477483904229], [0.034288705431420957, 0.90204976448430585, 0.94452184419794016, -1.572276144722107]], [[1.3832585997822227, -1.4638951669488016, -1.1568213006687982, 0.19007685585613873], [0.047141413851985607, 1.3346150770621188, 1.6420667372410727, -0.25438892533417434], [-0.056967982016486264, -0.0089149997617897266, 1.1688247729004761, 1.6478281205457204]]], [[[1.6011061486088769, 0.77264936251388605, -0.15582018468946221, 1.17378214750758], [-0.15454184159927731, 1.3061514550309932, 1.6634751298907455, -1.2014509781708436], [-0.094792229787328958, -0.56584294920682388, -1.4362766771609503, 1.0509486790245848]], [[1.613739722197864, 0.29746132204155984, 0.78642522938874848, 1.1778016794018746], [-0.57074260534932786, -0.86910216676330831, 0.89017520887610602, -0.62291937249946183], [-0.50972437218288746, 0.23143414216143152, 0.4241505534151177, 0.4033297511574836]]], [[[-1.5202085519483277, 0.73913071324635116, 0.4067374442881132, -1.6142100218669759], [1.3154669405789843, 0.75270417926499833, 0.13589560593151631, -0.27779389068677418], [-0.90733195924613375, -0.75784035523313897, -0.51395165730391923, -1.4266557629744974]], [[-0.23050356431743887, 0.022385975811071754, 0.26431340949354731, -0.44006397463917923], [0.07763843473925626, 0.88498841971647302, 1.2879123329599704, -0.66754515804675696], [0.59853834286171703, -1.4885178459945319, -1.6220423501968659, 1.0142544726374783]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[-0.65437027821290816, -0.3553120490548673, -1.1814313783918833, -0.92456760907232227], [1.0650077610958966, 0.55133272752680884, -0.082406531970896674, 0.3805625394290435], [0.19182333270646038, 1.0475510482924539, 0.053500145978481906, 0.4537759664495648]], [[0.85062071143860496, -0.30563012261581929, 0.68802423364888832, 0.60963737087982095], [-1.3040742549897257, -1.369888507651372, -0.77344414857151311, 1.0717300562749965], [-0.10082574395033857, -0.082750461675996423, -0.26394486842037507, 0.59631174578939805]]], [[[0.54485857707033325, 0.47435981192681481, 0.039982127208032826, 0.88416198249741873], [0.48789476440957047, 0.51766384850956448, -0.15864633532817246, -1.2999142918618616], [-0.55902161070771728, -0.074592883096989249, -0.070764004000249472, -0.83273465143016268]], [[1.1802009156920892, -0.46653659688201887, -1.1557381981695793, 1.4042166826582432], [-0.22224349752951902, -0.88416356390032558, 0.23683091165981679, -1.1473526140913954], [-0.12448766435951582, 0.85916148817903959, -0.90309330625158757, -1.0291865247776733]]], [[[-0.092896848445594357, 1.0272809437291588, 0.56344276323537601, -1.1826729095010897], [1.4057236548156027, -0.17011858993561566, -0.76441762688390358, 0.88932099769191508], [1.0192688415519717, -1.3616190218360034, 1.0296371549431083, -0.85392412870869527]], [[0.72098563618296696, -1.3013563829607817, 0.92725733678717093, -1.3801284912338394], [0.20077210966603995, 0.26890878649643823, -1.3347583229454241, 0.40669436094735062], [-0.20759026195193464, 0.60456126238345953, 0.22037551776523606, -1.1686200109963143]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_div_overloaded_taggedData_rank4_taggedData_rank4(self):
      arg0=Data(numarray.array([[[[1.0618271583459373, 1.7184780416616103, -3.336781801090023, -2.3670734116308023], [-0.043146499496482527, -0.39678181068694762, 1.0868040369924419, 2.3463943761221522], [4.0143548680960475, 1.7812490527650748, 3.5249544589291144, -3.5103104101748137]], [[2.4493629081526898, 0.22334084821464728, 0.82904495314491911, -2.6823113268833874], [-4.2620766671659638, -0.89195615689549079, -0.72196052600927807, 0.80489502290759063], [4.1999058233141113, -3.720911559706388, -0.92848233253016588, 1.0166185120281535]]], [[[0.36030150228313662, -2.2041015807855535, 1.2487700908507646, -0.83211788949314958], [-1.9916698185930706, -1.0428781559288303, 1.9720913364728343, -1.6662602417963877], [-0.30847241052365959, 1.1279145906064416, -0.60507705545981239, -1.2291886642753189]], [[-1.1650755952672132, 4.1423088477127603, -3.4678049116409451, -4.1323127562927287], [-3.3691011693939634, -0.64705725962743355, 0.95874300811407842, 3.0840681696449046], [4.2012245226344156, 1.5605862182031505, 0.098166286422406657, -3.3039310281834942]]], [[[-3.8226342736185979, -1.5719276567476834, -4.7898221223434447, -2.9460285103791994], [-4.652331825817325, -2.3168736955394587, 1.5303040716012557, 0.55021792311256146], [-2.7760347834213075, 4.2947811716375544, 4.0350024298566733, -0.16915979935495429]], [[-3.5104736845685567, 3.5844630933637731, -1.4395418040270136, -0.99111984318581481], [1.2457378008678832, -2.7431074229395449, 0.30537289674310131, -0.55981011898774824], [-4.9678937547042583, 0.51075512796737677, 4.1972156492475889, -0.21175288793081837]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[3.5122610763651601, 3.0517618574098613, -4.149218174833301, -1.4168789509485102], [-2.517928622745206, -4.666817528144743, -1.919825954080344, 4.5248889280830991], [3.7817725894714425, -0.82748655676561, -1.0724055147942533, -4.094720874288801]], [[3.0815444266462784, -1.720499726941882, 4.1205729058672524, 2.1368147322167852], [1.2882129255283816, 2.1191991365673761, 2.272013332893561, -1.9323793628683719], [-3.0204494419588945, 1.339179711255607, 0.37825133738720851, -3.8950088527553941]]], [[[-1.1191245124623461, 0.15934533712808552, 4.6486301352559956, 4.0946893973199554], [3.5579957101088961, -2.1612014156332338, 1.2931114312561824, -2.2878304974698294], [4.7671793831448017, 4.808594411817591, -2.735457879808628, -2.6573573325991537]], [[1.7839151280633665, -1.1991349596996184, -3.5261613489865198, -3.8578130763723264], [1.9575449248897066, -2.3789070040871252, 2.4546053540439914, 2.5576986208421326], [1.0420757821373332, -3.966833147693257, 4.8625749032835834, 1.2234722207613702]]], [[[-4.4418863918488904, 0.22050378829320394, -3.6483081431211764, 4.1514250477317436], [-4.7789903893436172, 4.2035267930237055, 2.1019168293472044, -4.5841456832497895], [-1.3407900515355795, -0.67869762518357923, 2.6331933991495662, 1.9195108601247393]], [[-4.6590755878616879, 3.7328159205771918, -4.4602013568577812, 0.27833681256916787], [-2.2746590217196383, -4.7613797243128841, -3.6103628617611006, 4.4434048803562902], [4.6671745725551652, 3.8929458352139203, 4.9131863370268061, -2.7466634455882488]]]]))
      arg1=Data(numarray.array([[[[-0.65038757855055529, -0.93880676562237309, -0.42605193437611266, 3.6519686515255643], [-1.077027335293983, -2.835998931506134, 1.2348558375421561, -3.089489817614556], [3.4268334215326703, -3.4090492221765736, 3.3718265168568653, 3.2471348640364752]], [[0.80244152241828637, 1.8726425911859224, 1.3376655746479917, 3.5707793921769468], [-4.5531627156380852, -2.6926366478569417, -0.37497600131739972, -4.828375407477572], [2.1069719268343885, 2.4120118758449038, 1.6310716712346354, -1.2126470663592768]]], [[[4.3263113256794465, 0.48824093972754312, -1.1696280489213464, 2.033748428585044], [1.230842898624104, 3.3722009275761575, -1.3118769467607851, -2.1893856305721195], [-3.0524898696517768, -0.69628482831163474, 0.38487501832779802, -2.1654004990439537]], [[-1.5662518496594391, 3.4763807753157092, -4.4256766309015916, 1.5633124905480535], [0.27114540814956101, -0.0012152957848847734, -4.1259273840692821, -3.3862078860508262], [-4.9554746046883249, -3.7073614550879777, 2.6460415392674141, 3.3371798628895259]]], [[[4.332150931686833, -1.3299102610645752, -3.9667886779057748, 0.79937779985716162], [-1.5796696570107462, 1.6520689766194208, 4.796722042343939, 0.25927010003692708], [1.5475370548483589, 1.2042560590962905, -1.8123425716833621, -4.0080717441876832]], [[-4.0191163732729409, 1.0937258541326402, -2.2776643545813355, -1.2764899452165079], [-1.6204876233274321, -3.4289156461908021, 0.77937272670497215, -2.3152304844388869], [0.87296893376424123, -4.5703008505874436, 3.5658912282878816, -1.3464412959924554]]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[[-2.3520248089899267, -1.8593476486689795, 2.7904842193588522, 4.9416737522897982], [-2.3844653582132267, -1.0275717311904984, -4.7861912192176872, 4.0475913869156201], [-2.1173552370789785, 0.13391709898118265, -0.092396548343012697, -4.6198925435414919]], [[-2.5984367645631545, 0.878092218860691, 3.884086207550526, -4.0624021172936402], [-3.2830864624391634, -4.8536312400748578, -4.2409868372693769, 3.1896049463694727], [-0.38746244058342949, 3.5703594561282443, -3.2812139667099438, -3.7497867837436383]]], [[[-0.17382683828492596, 1.1061797473741635, 1.4652029070142376, -2.870147101321765], [1.3779216792034799, -4.2437284841459366, 2.6770476688932332, 0.45627847635201491], [-1.5303026343747037, 1.8307581378413129, 4.3326013440015245, 4.5465510035947503]], [[-0.59211249122561593, 3.2244418261445205, -4.4194712938165708, 3.7482946852456038], [-4.2541249198067685, 4.0659954720234808, -1.430461532529812, -4.1763711853977927], [0.95939507928109702, -3.9775534894692735, 3.2941545747475605, -0.53607981817650785]]], [[[-0.47682426956385715, -0.25725498713766903, -3.246082160405892, -3.1945951765019376], [-1.9107414341759688, 4.3903083128315128, 0.63962261261890418, 3.53009980164898], [2.0329186188969164, 4.1704531577093462, 0.17028620124026794, 1.8090437004357582]], [[-0.17559255517519379, 2.6346747006447959, 3.3262344817805083, 3.6273226960798759], [-2.32511114423429, 2.1262626326784524, -3.9400456783751112, 3.7383863038453686], [2.6499435065625354, -4.8259222893952529, -3.6725671007149439, -4.6914273451543966]]]]))
      res=arg0/arg1
      ref=Data(numarray.array([[[[-1.6326067615133588, -1.8304917524985682, 7.831866333329117, -0.64816367211749937], [0.040060728342336226, 0.13990901275700618, 0.88010600424062868, -0.75947632607309912], [1.1714473317762277, -0.52250611143355741, 1.0454139444324055, -1.0810485419171005]], [[3.0523880428958128, 0.11926506919465511, 0.61976997005629242, -0.75118371433416964], [0.93606948254399724, 0.33125752693197391, 1.9253512850764338, -0.1667010029214116], [1.9933373434283213, -1.5426588886105668, -0.56924680190622989, -0.83834657274217572]]], [[[0.083281455068782262, -4.5143727234662574, -1.0676642818222464, -0.40915477932149436], [-1.6181348739302601, -0.30925741921268657, -1.5032593882697722, 0.76106292949450327], [0.10105599811829995, -1.6199040173565626, -1.5721390754036115, 0.56764957097683233]], [[0.74386223104575655, 1.1915578630297121, 0.78356491014900231, -2.6433056610735934], [-12.425440623857448, 532.42779879203101, -0.23237030584103449, -0.91077342957868634], [-0.8477945823109817, -0.42094255904327971, 0.037099299072071663, -0.99003684665733205]]], [[[-0.88238714068305979, 1.1819802454109773, 1.2074810410299401, -3.6854019600064154], [2.9451295751423525, -1.4024073621189885, 0.31903121717127181, 2.1221803942459836], [-1.7938405899387833, 3.5663355307180149, -2.2264016157325228, 0.042204783285194898]], [[0.87344415004082743, 3.2772957499540571, 0.63202543479749029, 0.77644155905803791], [-0.76874255806406255, 0.79999268164758597, 0.39181881310391142, 0.2417945525295821], [-5.6908024587801824, -0.11175525302710146, 1.1770453388907294, 0.15726856310860277]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[-1.4932925294582649, -1.6413078315905449, -1.4869169107097242, -0.2867204558560707], [1.0559719872097402, 4.5415978140406592, 0.40111768756162303, 1.117921374847868], [-1.7860831868197184, -6.1790955976569073, 11.606553859707594, 0.88632383452579011]], [[-1.1859224240788262, -1.9593610898570537, 1.0608860580532442, -0.52599783835292124], [-0.39237861697108828, -0.43662137310099636, -0.53572751344741998, -0.60583658332605672], [7.7954638323415066, 0.37508260098489782, -0.1152778639932705, 1.0387280870585318]]], [[[6.4381572115345502, 0.14405013064679373, 3.1726869452701845, -1.4266479217857029], [2.5821465499879701, 0.50926948406506789, 0.48303638604642068, -5.0141100578778737], [-3.1151873335777904, 2.626559080866635, -0.63136616148537705, -0.58447762501687606]], [[-3.0127976600710342, -0.37188915922649141, 0.79786949943991925, -1.0292181912905138], [-0.46015219623090486, -0.58507369731605718, -1.7159534165892261, -0.61242128807535956], [1.086180036401887, 0.99730479004131589, 1.4761222623125434, -2.2822575655301649]]], [[[9.3155627248416, -0.85714096642644355, 1.1239112144545933, -1.2995152181621739], [2.5011183113871276, 0.95745594466295159, 3.2861828019822603, -1.2985881252163023], [-0.65953946167461774, -0.16273953921025675, 15.463339835940209, 1.061063842549725]], [[26.533446040540802, 1.4168033418560715, -1.3409160963511715, 0.076733402536800027], [0.97830119964812834, -2.239318723442445, 0.91632512830410306, 1.1885890111960145], [1.7612354984160963, -0.80667395821281529, -1.3378070984925909, 0.58546434667163216]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_div_overloaded_taggedData_rank4_expandedData_rank0(self):
      arg0=Data(numarray.array([[[[-2.265648390553995, -2.9200974994770812, -2.9738356457519108, 0.47070061992501433], [-2.8002435362200409, 0.74142785196968486, 3.6157580410878492, 4.1426545276650266], [2.0110881358371628, 4.3062074812751199, 1.8442448181320206, 1.2414592568983558]], [[1.8513999912994974, -4.5658553850384127, -0.21744391375126781, 2.9733992676545213], [-4.3258217524123523, -3.8996241164617187, -0.43889595991960029, -3.6555436181267376], [-4.1118051354633618, 2.6119574344487972, 4.5403298107730645, -3.7689573500877094]]], [[[1.959282116033906, 0.015329999128599781, 0.57050332601638143, -1.8072710926602928], [-2.1542164128732866, -2.1354355394777649, 2.4522619461243149, -0.025855451721236378], [3.8561667806731368, -2.8529835622661337, -4.722283768013944, -0.50898021811774719]], [[-1.3243836972141754, 2.4158383081464407, 2.506209342104051, -1.7850503760643264], [2.2921837132612568, 3.047583846027587, -4.6581368830141479, -1.4298209586345134], [-0.685585315107204, -4.665066520267434, -0.55488013928404278, 4.6166932286985389]]], [[[2.153595002009502, 1.7767388696224309, 0.74540204034132351, -4.6401080855635568], [-4.9566124193687919, -1.0345220190650406, -2.1249232827773468, -2.6494751583438694], [-0.16127915233722057, 1.4915288081273452, -4.339421886305149, -1.7180211667952019]], [[1.4347324230160261, -1.2823468894105106, 3.8242421149955739, -1.7315565463080462], [0.050490881927206743, 4.844989221347916, -1.9661211142960209, -3.4161981873495662], [1.4945865602300659, 4.809327375728115, 2.6230740415966576, -2.9628328132989026]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[-0.31785639817894396, 0.36983394990707374, 1.9373222090202784, -1.3057974224533107], [-0.70445093120710744, -2.6222595507050697, -2.4760010838350208, -3.5054572997536351], [-4.8622665246297956, 4.402670172367614, 0.82526698440179302, 4.5302414243620142]], [[-1.1774644693518099, 4.2707997152069836, -2.2753347254618514, 0.97505626140751112], [1.0934737916610437, -2.3354305385247076, 4.2830466816638193, 1.8399957342987348], [-4.7379966465543122, -0.72742830899541833, -2.3773013594702688, 3.6693679906626979]]], [[[2.3796252634252486, -4.5650282365215844, 4.8134980176939592, -1.844397763509197], [1.5250879512199544, 1.0572835892168699, -3.2469954593089332, 1.4228883006506621], [-2.1726533242691271, -1.2065294419614547, 1.2484387969554946, 1.0990712360378918]], [[-2.4162105256886282, -2.5406633048212246, 3.8330178297238859, 3.0567414025082194], [2.1190007273967097, 4.4158026995429562, 2.0451990938830624, 2.5288095590256425], [4.7051223480141466, 1.1938645456089017, 4.3246730102291888, -4.8530402768378567]]], [[[0.53866738191620378, -4.0280610368566556, -0.54793521869597051, 1.1063448829798137], [-0.65812810448573877, -4.2231780752215089, 4.7735226827992712, 2.3349879558059596], [3.9014773101342382, 3.8401166969693694, 2.893490830255284, 1.3851016476523696]], [[-4.8510624426771711, 0.63269336421068267, -3.2611041370876457, 1.728355698635994], [3.7578497695675193, -1.9606616500774732, -0.46627909002342705, 3.047533991099165], [1.8768210564436325, -1.5634811462144671, 3.5733696572968547, -3.3135138094133221]]]]))
      arg1=Data(-3.49526341243,self.functionspace)
      arg1.setTaggedValue(1,3.25434391088)
      arg1.expand()
      res=arg0/arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[[[0.64820533482540532, 0.83544418686632049, 0.85081874950551939, -0.13466813924574336], [0.80115379180454094, -0.21212359827703678, -1.0344736903760727, -1.1852195496735856], [-0.57537527177152725, -1.2320122901087383, -0.52764115333225847, -0.35518331822579396]], [[-0.52968825889289839, 1.3062979370331693, 0.062211023346134701, -0.85069390109042198], [1.2376239619122156, 1.1156881917967014, 0.12556877926836552, 1.0458564024479173], [1.1763934932190132, -0.74728486132510485, -1.2989950327156838, 1.0783042378693637]]], [[[-0.56055349335588778, -0.0043859352843348322, -0.16322184015898061, 0.517062916126933], [0.61632448221653291, 0.61095124673197443, -0.70159574737827302, 0.0073972827425036018], [-1.1032549841494328, 0.81624279077915629, 1.3510523273373318, 0.14561998855605718]], [[0.37890812249119976, -0.69117489101351548, -0.71703017666562285, 0.51070553644648453], [-0.6557971296563565, -0.87191821800723901, 1.3326998092490629, 0.40907387796631667], [0.19614696639745663, 1.3346823886531365, 0.15875202347025819, -1.3208427188311322]]], [[[-0.61614669565498925, -0.50832760223633333, -0.21326061941184199, 1.3275417437978292], [1.4180940989308111, 0.29597827030360102, 0.60794367463796606, 0.75801873727897506], [0.046142202548711916, -0.42672858441089262, 1.2415149802098497, 0.49152838114801789]], [[-0.41047905514525351, 0.36688132998845707, -1.0941212903728563, 0.49540087312236469], [-0.014445515536173867, -1.3861585379015411, 0.56251014081135653, 0.97737932288752216], [-0.42760341178208611, -1.3759556314501906, -0.75046533897046419, 0.84767082296759522]]]])+(1.-msk_ref)*numarray.array([[[[-0.097671422223212748, 0.11364316742026552, 0.59530346579055127, -0.40124751968849587], [-0.21646480842185128, -0.80577210722553694, -0.76082957168676157, -1.0771625236152358], [-1.4940850315102121, 1.3528595295815817, 0.25358935840897173, 1.3920598278561322]], [[-0.36181316467994296, 1.3123381646699559, -0.69916849225923194, 0.29961684693131674], [0.3360043749543063, -0.71763482977874626, 1.3161014321033386, 0.56539683103194216], [-1.4558991846917233, -0.22352533380501802, -0.7305009625822273, 1.1275292627792051]]], [[[0.73121505550498556, -1.4027491751138967, 1.479099366727576, -0.56674949360572469], [0.46863146397097183, 0.32488379168613973, -0.99774195605298943, 0.43722739194660254], [-0.66761638713306859, -0.37074429593269365, 0.38362226954019968, 0.33772436661165306]], [[-0.74245703338602176, -0.78069908233376351, 1.1778158469703077, 0.93928038529989644], [0.65112993138600661, 1.356894913528387, 0.62845204744542227, 0.77705664437385458], [1.4457975176766682, 0.36685260633276606, 1.3288924368973383, -1.4912499753377226]]], [[[0.16552257433997244, -1.2377490354943581, -0.16837041004313427, 0.33995942447311883], [-0.20223065616568559, -1.297704910997445, 1.4668156819083222, 0.71749883225332534], [1.1988521855642438, 1.1799971982472128, 0.88911648845198388, 0.42561624879975135]], [[-1.4906422232946537, 0.19441502850874537, -1.0020772931178741, 0.53109190238271164], [1.154718085266297, -0.60247524655384965, -0.14327898427230859, 0.93645111720125562], [0.57671257489718042, -0.48042898631216469, 1.098030741419816, -1.018181821023018]]]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_div_overloaded_taggedData_rank4_expandedData_rank4(self):
      arg0=Data(numarray.array([[[[-3.6851566239733269, 1.1533224301519827, -4.9285187076086121, 3.6263450512140079], [0.48919897660488232, 4.5529846894296906, 1.1113203399544229, 1.5037072134475089], [0.37964623480817394, -4.8379949722247249, -4.1617781559907598, 0.58277978280663056]], [[4.054645303508714, 2.7714693487589752, 3.2297034273487419, 0.34788822466271885], [4.9641834293649882, -4.2821077134380641, 1.1716337560058463, -2.0432888110331113], [0.675695837304497, -0.51300125326017021, -4.7243447763732327, -4.3207995828595287]]], [[[-4.0540825268290916, 3.6289742833674481, 3.6038508506898168, 1.21820395743541], [2.2714017972297853, 0.80630408863172498, -2.0833280735078228, -0.13564936819583551], [-2.2625379575776492, 0.090119065456053526, -0.64906857951379315, -1.7088049015587456]], [[1.4898974069803668, -3.2489984118441395, -0.25172310847942292, -2.6582559209522225], [2.3096968525084858, -1.9280003777453825, 2.6721996239401866, -1.0426414242763151], [-4.3752435266961234, -4.0387561737998112, -1.9954587260518397, -0.1134705782414045]]], [[[-1.0794875486950839, -0.38237878871277076, -2.4983461002557705, -1.8573108479946674], [-3.3148582580278232, -2.5864458871335119, 1.764038835692963, 3.7703259488145324], [-4.793246376389245, 3.8307631682699501, 3.0567268027774315, -0.21949428873601917]], [[-2.1864971894244531, -2.5924398858741018, 1.3468577770668073, -0.67131401342146191], [-1.1346021880513559, -3.1999854573065267, 2.0365293767652943, 4.6535173838957284], [-2.2702126644664968, 1.3624288984739756, -1.1773655367430202, 2.5816950916101273]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[-2.9004345225629038, -3.2717207008452354, -4.9276965563513144, -3.2667953795976459], [-1.9787999922028279, 0.62805003068389631, 2.7489167134094892, 2.5054878867231567], [-4.9057207824039475, -2.7636846029329201, 1.5507316063445895, 2.8586736994374586]], [[1.9010639302953347, -2.5020705389570996, -4.8510199426254994, 0.85456864964716051], [-4.01216644599684, 4.4535506742987909, 4.4209109658062715, -4.8709781800966843], [-0.070541782094181826, -3.0234980659277477, 4.8668517706460843, 3.9166244944993558]]], [[[-1.5021570350848021, -0.07832595848674373, 1.9778934197451035, -3.8696688786656952], [4.3102137437468144, 3.6294567171315144, 3.7219523142954003, -4.5814718575296407], [-1.6562802112843134, -4.7794288842284169, 4.2626236813392175, -3.2097613549899418]], [[0.11120342411898321, 0.2518789860875037, -4.8030461570976568, 4.5092108793178998], [0.82263466007281139, -0.028216606721471749, -0.41031234769010361, 1.4839412055336236], [1.0839610623105607, -1.9093047547536202, 2.626314653398496, 1.2106828898723627]]], [[[-4.8785769751578458, 2.7109286817256608, -1.9884820444724269, -0.18340392864844723], [4.245494492581031, 1.8397033660462538, -0.26276606639886069, 2.0319672399177504], [2.8828757275580585, -3.8707489277117579, -3.1921051154373825, -4.1559637294415053]], [[2.63402242625288, -4.2413464853334402, -3.5610860497586327, 1.4691708383051205], [-4.4842718371407848, -2.8016665751553802, -4.8731842751732257, 4.1951235927490096], [4.0112662304026347, 2.7970037976811177, -1.7438773953696307, 2.635356892058426]]]]))
      arg1=Data(numarray.array([[[[0.38652242618978594, -0.48340536926048561, 3.7878291614198805, -3.378599806448539], [-4.0110215701639529, -4.2498451759243858, -2.2464801448680927, -3.8714846781772652], [3.2776964103412691, -4.9626083285314433, 0.14442033978273372, 1.6980909883090831]], [[3.7317390727038369, -0.26085764519305599, 2.2993802251193483, -2.6857037784795179], [0.61966006239067184, 4.893033102843825, 0.50104420115685055, -0.090491452059055177], [4.3179008325832484, 4.7701294339811113, -2.7499169445471052, -2.9250385254304589]]], [[[-0.0088487780797619209, 3.9201486471110396, -3.9144968555812265, -2.3163074200869991], [-1.0976934334874464, -2.5904094256137578, 1.9308778760242564, -1.1652708391907254], [-0.17421223942566755, 3.512135113004657, 0.77422197678590798, -4.2132579450429848]], [[-3.0691642207464143, 3.6702881129424689, -2.6007526655415889, 0.80170672531641785], [-0.11173999637705467, 2.0212398599039396, -4.1813789941580897, -3.3858221590364925], [-3.0723920325898502, 2.3562640251700806, 1.0698213612039398, 2.7535427857161316]]], [[[-4.9074802188805915, -3.0366254286560213, -3.7273492104898276, -0.77529266605563674], [-2.9237479268441682, 2.7818573067598606, -3.6546154534242503, -0.87150180202691807], [3.997503732119247, 0.10985852201516444, 1.5825574492073757, 2.9464575186986544]], [[1.9079725446759275, -3.8609029352616031, 0.54734354666454177, 3.5463287806894854], [2.9251383095471359, -4.7320601732568388, -4.6712454499393852, -3.4543319709016149], [-2.9451454450107093, 4.830082508842553, -4.9340701182486306, -1.8970117446210608]]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[[-3.5357308055888059, -3.0925614958465308, 3.9214268093702191, 4.9501527682987643], [2.5677358558469443, -1.5066471489107727, 4.0115475811428549, -3.4065637415190606], [-4.7987273668021988, 1.4097177294961147, -0.81834995883746586, -4.8301442612662555]], [[-4.8208964870561912, 0.36049892109556048, -1.5888370208640357, -3.8717319532301611], [1.7370404232366337, 3.1006907412607667, -1.5535583730918825, -0.38048222539228149], [-0.90649274958119364, 3.6184872476779528, -3.2903010574187741, -3.4751949396449922]]], [[[0.28063148928329529, -0.38886234129052077, 1.7531538055839579, -0.7023746276613636], [-3.738484645622917, 2.4316582718574864, -1.6469449051984286, 1.4691629017790628], [-0.96177404601634287, 4.0365990053706948, -2.6475968302609121, 1.7023734972858815]], [[-3.1753807833809375, 3.0539657213623297, -1.7520841801796738, 0.79888365630018399], [-4.8986719394234228, -0.22237205194844911, -2.5038494580969175, 2.6628825172748281], [1.2981480503902141, 3.3574846520351507, -0.47615980480732745, -0.46165863567789955]]], [[[2.6523543226169117, -3.8787505009390753, -4.2417154590088346, 2.2364521622915507], [1.1160425610666111, -2.4562205800579995, 3.9537723897130235, 3.4427457353099395], [-3.1237038051260169, 0.95248047922948942, -4.5472761453259922, -3.7614804140028624]], [[-2.470095707539576, -1.1875524834189575, -0.31521153869958685, 1.2907363036550334], [-2.3781085402357927, -1.7089258942133045, -2.5725019091209167, 1.4027602007931801], [3.3390694098717901, -2.9961333521386568, 4.7141243493566112, -3.4667810200333591]]]]))
      arg1.expand()
      res=arg0/arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[[[-9.5341340483149146, -2.3858287546874735, -1.3011459856233696, -1.0733277863488335], [-0.12196368631966395, -1.0713295428319618, -0.49469404058306365, -0.38840582836956228], [0.11582715031519521, 0.97488954435709119, -28.817119266245655, 0.34319702938118068]], [[1.0865296915228628, -10.624451304495452, 1.4045973745734486, -0.1295333563776985], [8.0111398662889162, -0.87514382662755918, 2.3383840254027199, 22.579909643837418], [0.15648711341530555, -0.10754451432820419, 1.7179954419137207, 1.4771769825574057]]], [[[458.15167815104343, 0.92572364214857694, -0.92064216261957255, -0.52592499029755513], [-2.0692496902467457, -0.31126511533623052, -1.0789538268455727, 0.11641016288543125], [12.987250293301139, 0.025659338993640257, -0.838349464333634, 0.40557804052068591]], [[-0.4854407584023076, -0.88521617700453992, 0.096788561178693749, -3.3157460664971485], [-20.670278569856585, -0.95387015464706482, -0.639071375178759, 0.30794335180706028], [1.424051188873851, -1.7140507730275618, -1.8652261007447259, -0.041208939563251952]]], [[[0.21996778398453079, 0.12592227711206636, 0.67027422416571791, 2.3956254577305427], [1.1337701953005952, -0.92975505280177284, -0.48268794847898938, -4.3262399917540026], [-1.1990598877685452, 34.869968191827361, 1.9315107987443956, -0.074494299457255372]], [[-1.1459793777042182, 0.67145948223597229, 2.4607173780972249, -0.18929830112676227], [-0.38787984292852556, 0.67623515765737563, -0.43597139105411825, -1.347154072942536], [0.77083210552891446, 0.28207155798679279, 0.23861953894585738, -1.3609273105084734]]]])+(1.-msk_ref)*numarray.array([[[[0.8203210826961963, 1.0579323015045374, -1.2566080653543301, -0.65993829534282367], [-0.77064001256084758, -0.41685276551841866, 0.685250930671087, -0.73548833276958014], [1.0222962063529455, -1.9604524686802109, -1.8949492079739731, -0.59184023184600243]], [[-0.39433825957466079, -6.9405770518071943, 3.0531891433316649, -0.22071999300834846], [-2.3097714896703185, 1.4363092116977587, -2.8456677537051931, 12.802117562981163], [0.077818363276234315, -0.83556963420777008, -1.4791509000894001, -1.1270229620268317]]], [[[-5.3527743409022301, 0.20142335775380743, 1.1281916129921568, 5.5094086919827943], [-1.1529307065078596, 1.4925850227955995, -2.2599130684623412, -3.1184233225476694], [1.7221094893801794, -1.1840236986307995, -1.6099972747433566, -1.8854624793603227]], [[-0.035020500439188612, 0.08247603577395235, 2.7413329858415314, 5.6443899480947], [-0.16793013907553811, 0.12688917727850529, 0.16387261077667453, 0.55726874764729639], [0.83500573142233636, -0.56867117876362849, -5.515616032439369, -2.6224634314369446]]], [[[-1.8393383318200336, -0.69891803586472612, 0.46879194601541641, -0.082006640580465112], [3.8040614584837846, -0.74899761893649319, -0.066459583531547961, 0.59021705235946476], [-0.92290303671789942, -4.0638616875833575, 0.70198180480383865, 1.104874483453403]], [[-1.0663645211045643, 3.5715023500457224, 11.297448261094702, 1.1382424389434205], [1.8856464123778653, 1.6394312852548316, 1.894336504822461, 2.9906206280851917], [1.201312622775534, -0.93353781989863727, -0.36992604906733889, -0.76017402796126632]]]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_div_overloaded_expandedData_rank0_taggedData_rank0(self):
      arg0=Data(-4.12968961024,self.functionspace)
      arg0.setTaggedValue(1,-1.72964545461)
      arg0.expand()
      arg1=Data(-3.10456481797,self.functionspace)
      arg1.setTaggedValue(1,1.29136218186)
      res=arg0/arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*(1.33019919131)+(1.-msk_ref)*(-1.33939608803)
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_div_overloaded_expandedData_rank0_taggedData_rank1(self):
      arg0=Data(0.0367751854327,self.functionspace)
      arg0.setTaggedValue(1,-4.94354937816)
      arg0.expand()
      arg1=Data(numarray.array([-2.6164972762677499, -2.6528750496634421]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([-0.11614518376840355, -0.059741595713548534]))
      res=arg0/arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([-0.014055120854218167, -0.013862388821268223])+(1.-msk_ref)*numarray.array([42.563533138081972, 82.748867336229168])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_div_overloaded_expandedData_rank0_taggedData_rank2(self):
      arg0=Data(1.81823013316,self.functionspace)
      arg0.setTaggedValue(1,4.48108484826)
      arg0.expand()
      arg1=Data(numarray.array([[4.1498514876446855, -3.2456663280838693, 4.5088785525076407, 0.75946303636479495, -1.4986518775274318], [3.0095576573692213, -3.3886692706995856, 3.1850844454519258, 0.97508530369414004, -3.8262027335319528], [0.53268033792245095, 4.0851839571624922, 0.71525638051950313, -1.4188863847470223, 2.0862178015925048], [0.29121898990595607, -3.3605966297556988, 4.3353019660981236, 0.13986451797169064, 3.2013412168685598]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[2.8527248556524762, -3.8730440400221156, 4.7919295191627036, -0.78426100465738635, 3.3398017962952125], [-3.9383739423785755, 0.64261679114026649, 1.0760252850611813, 3.360389816270505, 2.0161157999485475], [4.0959086888463574, -0.64528059903429558, 3.1611232626129624, 4.7119555188258371, 2.281529591040341], [-4.2884423287907749, -0.36166849833389136, -2.0477593514387102, -2.544584732230295, 0.95350297951106722]]))
      res=arg0/arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[0.43814342237859694, -0.56020242050974334, 0.40325551286989852, 2.3940995757510426, -1.2132438229479834], [0.60415195193467219, -0.53656169661673225, 0.57085774782387877, 1.8646882752423144, -0.47520485969679738], [3.41336070381531, 0.44507913284337625, 2.5420676874478803, -1.2814487140799029, 0.87154377254935544], [6.2435150047966275, -0.54104384830372576, 0.4194010353553308, 12.999938508547066, 0.56795886785791727]])+(1.-msk_ref)*numarray.array([[1.5708086391085796, -1.1569930013584606, 0.93513162711159159, -5.7137672556042745, 1.3417217911642181], [-1.1378007557993186, 6.9731835676241793, 4.1644791348968138, 1.3335014963329381, 2.2226326723757861], [1.0940392446885372, -6.9443972978033441, 1.4175609351451395, 0.95100321519489184, 1.9640704489900491], [-1.0449213268357582, -12.390033605088162, -2.1882868439157046, -1.761027955367426, 4.6996023552610975]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_div_overloaded_expandedData_rank0_taggedData_rank3(self):
      arg0=Data(2.18522369209,self.functionspace)
      arg0.setTaggedValue(1,-3.84267880549)
      arg0.expand()
      arg1=Data(numarray.array([[[-0.58934798387711318, -2.2361029645356831], [0.77195512619175588, -4.6806657038207327]], [[-0.33727862900882144, -4.5142348163788357], [0.74666189053042231, -3.8861314112606458]], [[2.418469626214911, 3.7253571400330134], [-4.6141328918439228, 4.693524313540653]], [[0.94629349558305975, -1.7838291414729324], [3.6905534200475607, -2.448625457728788]], [[-4.3889613884432706, 0.40850133686284984], [-0.10803919545509366, 4.5026581410215698]], [[0.28276346851600742, -3.6652309584428244], [3.5949010884691042, 4.122734655852982]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[-1.0963577196794305, -1.5262017098981495], [-0.39982091968566813, 3.7626300521115379]], [[-2.4303983930945439, 4.0846463754439473], [-2.9783159508744159, 4.7366187705427514]], [[1.6874300777753426, -2.6626093795185781], [-3.031505072978633, -4.6147436112724671]], [[-0.11460111978431264, 3.5358874454114968], [2.8301209696702596, -3.1766108472332744]], [[-1.9366014263388442, -2.9035390190756019], [-0.53780204629059103, 4.2461489969624306]], [[-3.607078311862979, -2.285942668294755], [-2.8433368580136098, 3.9753843047283652]]]))
      res=arg0/arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[[-3.7078665777553992, -0.97724645364853657], [2.8307651804395944, -0.46686173086484728]], [[-6.4789865237157427, -0.48407399724908134], [2.9266575940190429, -0.56231338079650728]], [[0.90355639301764445, 0.58658099343090386], [-0.47359357506762356, 0.46558269353823989]], [[2.3092451784623624, -1.2250184960433521], [0.592112738489317, -0.8924287237103099]], [[-0.49789084448076154, 5.3493672967321091], [-20.226212189758122, 0.48531858818615287]], [[7.7280976342308829, -0.59620354538691045], [0.60786754303052537, 0.53004228370194717]]])+(1.-msk_ref)*numarray.array([[[3.504949832084006, 2.5178053337070785], [9.610999865928644, -1.0212746808148103]], [[1.5810900864700093, -0.94076168468237975], [1.2902186567433305, -0.81127044240761337]], [[-2.2772373540718776, 1.4432003564072218], [1.2675811892073678, 0.8326960562029676]], [[33.530901030693379, -1.086765024288612], [-1.3577789948470431, 1.2096788024385401]], [[1.9842383431261998, 1.3234465871644512], [7.1451546754028268, -0.90497973769723172]], [[1.065316157083865, 1.6810040158885295], [1.3514680100826908, -0.96661819611349276]]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_div_overloaded_expandedData_rank0_taggedData_rank4(self):
      arg0=Data(-3.16795904631,self.functionspace)
      arg0.setTaggedValue(1,-4.74875896127)
      arg0.expand()
      arg1=Data(numarray.array([[[[-2.5678977689892446, -1.4146034733013355, 1.6176730610171948, -2.3336896498739277], [-1.2700582414717765, -4.7328882915711112, 3.6664932824798981, 4.3095107137890913], [1.5794346821419234, -3.2871559049254175, -0.74615254924107166, 4.8868295823469676]], [[-2.4809326122231212, 3.0998018598858721, 4.6328477280319973, -1.5100852606144022], [0.23002071752390307, -0.52231946255543349, 4.5311274262032448, -1.7417875649104229], [1.1512324334691515, -1.0779632169188549, -1.3896274842498513, -4.2695599667674475]]], [[[-3.186836414901256, -2.5543201410653769, -4.5488836036119817, 0.80510781962833367], [-3.9166757675945418, -1.4771472773175343, -2.1229639232944542, 4.0149579913902667], [-4.5943776437204198, 1.4819255034645984, 2.874302750042947, -2.5117747157954051]], [[4.7154114628391728, -1.2201987875649953, -1.4449625136201192, 4.4324172251981313], [-3.1316034375305679, -1.3739622479806601, -1.0788458974346993, 4.1390202590453384], [-4.8847457028863381, -1.7672643762257167, 3.4797662352725709, 1.8869923593673956]]], [[[4.9488943729897024, 1.4687427639516581, -2.2842875850128594, 2.2185919426199119], [1.3242798681853447, -0.36185840470592812, 4.5787703451987962, -4.122155367545747], [4.0935193107613319, 2.7025616626538129, -4.5367617559169044, -0.055178771339468469]], [[4.0752882653246409, 1.8819950914008645, -0.55425869049498644, 1.7071645054085565], [-1.7030868654477063, -2.3690146375611629, 3.6284216470420709, 1.7063461079156923], [0.30643086261595798, -1.2126258283475835, -4.8763030766069857, -4.210740832950739]]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[[1.2576419575915683, -3.1734410535496327, 1.1998368884802568, 1.8809640200061164], [-1.5534830497522223, -0.074458935168450147, -4.8656989205361976, 1.1513605983392381], [-4.9316080457519407, -1.106751969906894, -4.3241632161091541, 2.9487241377101512]], [[2.684920500518917, -3.3015742861809541, 0.26807855318930596, 0.72426106112888267], [2.9843646577044787, -3.391757642398435, 3.4068219310691656, -4.2171147083882401], [-2.1101656815317247, 2.1493771799605774, -4.8659685283014635, -0.47502010404155293]]], [[[4.357422863201716, 4.8510390845117453, -3.2000802947853311, -1.5766514301139747], [2.5748422719196062, 1.3200525174339797, 0.75054651268471595, 2.4957757625035288], [1.3182269435296758, -1.707815738827243, 1.5488302633830724, 2.1659951909025761]], [[4.4241808668635585, -2.4893221650545252, 3.7902761731452728, -3.0402619177931642], [-3.53059600279374, -3.1933839027234621, 3.8255384537489885, -3.8863403237800629], [2.3298445020327456, 4.426470393079514, 1.0966490048561965, -0.36363363199562571]]], [[[-2.6044100079333665, -3.3935436253310525, -2.8393413542188215, 3.8956967282837294], [3.803375915903553, -1.4190438212963397, -1.7531101231160195, -3.4260698733482564], [-0.046790672564496205, 3.6861638454596175, -4.0215592083433567, -4.3028955712819705]], [[-4.7965337564571833, 1.0822074210317867, -4.4106501483342058, -3.5342536347694073], [-2.2246442836483049, 0.95669920182634094, 3.5448979332746493, 0.49409799357663786], [-4.6286448050733808, -1.1561475904911633, 2.3982135982311057, 0.63020238611320778]]]]))
      res=arg0/arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[[[1.2336780243216203, 2.2394678834721882, -1.9583432045994085, 1.3574894358715133], [2.4943415529003099, 0.66935005669760361, -0.86402968783399547, -0.73510875287305033], [-2.005755022430161, 0.96373860502318509, 4.2457256891084123, -0.64826468632145162]], [[1.2769226502560236, -1.0219875945306984, -0.68380383562752567, 2.0978676694172971], [-13.772494410106093, 6.0651751914573424, -0.6991547022020228, 1.8187976020310321], [-2.7517979464495661, 2.9388377976027171, 2.2797181850621464, 0.74198724715536912]]], [[[0.9940764550993455, 1.2402357070970866, 0.69642561172395601, -3.9348258321090337], [0.80883872811666901, 2.1446467085255634, 1.4922340467239081, -0.78903915136844882], [0.68952952760348374, -2.1377316463615519, -1.1021660979377392, 1.2612433059321357]], [[-0.67183088289799076, 2.5962647058750683, 2.1924160775422057, -0.7147249199143112], [1.0116092632739757, 2.3057104014048133, 2.936433325500317, -0.76538863016757375], [0.64854124226664212, 1.7925778898300686, -0.91039421389707254, -1.6788404206197154]]], [[[-0.6401347063693209, -2.1569189132773268, 1.3868477275328333, -1.427914248424403], [-2.3922126450865626, 8.7546924573468363, -0.69187987330013268, 0.76852004930437412], [-0.77389620172998663, -1.1722060184912606, 0.69828640266922848, 57.412642025259423]], [[-0.7773582726065601, -1.6832982512980281, 5.715668695203262, -1.8556846960383562], [1.8601276955264152, 1.3372475611074639, -0.87309561965850979, -1.8565747192849524], [-10.338250590237937, 2.6124786164446543, 0.64966409932642399, 0.75235194280208251]]]])+(1.-msk_ref)*numarray.array([[[[-3.7759228153980078, 1.4964068596642506, -3.9578371084145547, -2.5246410408511561], [3.0568463312356289, 63.776885212346791, 0.97596646213130378, -4.1244758315696997], [0.96292302981425515, 4.2907165204063817, 1.0981914243155488, -1.6104453110895252]], [[-1.7686776797875465, 1.438331701681888, -17.714057707251349, -6.5566951147008741], [-1.5912127055292495, 1.4000879372718966, -1.3938970270105986, 1.1260682456244515], [2.2504199565148801, -2.2093651154139988, 0.97591238694867577, 9.9969641723972451]]], [[[-1.0898090707181347, -0.9789158319572222, 1.4839499399468583, 3.01192696785778], [-1.8442912069062403, -3.5974015416468594, -6.327068184336019, -1.9027185986085167], [-3.6023834777315131, 2.7806038165058653, -3.0660292954885948, -2.19241436048295]], [[-1.073364562655948, 1.9076514193042593, -1.2528794062336541, 1.5619571897669919], [1.3450304020947599, 1.4870617207100782, -1.2413308658858417, 1.2219102203208285], [-2.0382300008127636, -1.0728093807418613, -4.3302450831973545, 13.059185244254143]]], [[[1.8233530614636284, 1.3993510871128283, 1.6724861046439154, -1.2189755241455635], [-1.248564187782546, 3.3464498347441314, 2.7087625008012957, 1.3860659988907091], [101.48943584271274, -1.2882658395993536, 1.180825325515479, 1.1036193843433224]], [[0.99003972501578841, -4.3880303063753763, 1.076657363782368, 1.3436384176150531], [2.1346149567265154, -4.9636907318480299, -1.3396038618480288, -9.6109658873473087], [1.0259501779153113, 4.1073985711931575, -1.9801234405369252, -7.535291940990466]]]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_div_overloaded_expandedData_rank1_taggedData_rank0(self):
      arg0=Data(numarray.array([0.050869530446854938, 0.57044148650264059]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([2.5863579857850283, 2.0026348357086645]))
      arg0.expand()
      arg1=Data(1.41235011135,self.functionspace)
      arg1.setTaggedValue(1,2.22264086313)
      res=arg0/arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([0.036017648908669923, 0.40389523951389567])+(1.-msk_ref)*numarray.array([1.1636418769603551, 0.90101593510957845])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_div_overloaded_expandedData_rank1_taggedData_rank1(self):
      arg0=Data(numarray.array([3.6652104484260146, 0.70865435078999184]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([2.6142552170855051, -1.6134134893908247]))
      arg0.expand()
      arg1=Data(numarray.array([0.7462327499260315, -2.0762693673285479]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([4.7923993807431291, 0.74413505833569893]))
      res=arg0/arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([4.9116183238933422, -0.34131137411220819])+(1.-msk_ref)*numarray.array([0.54550028271644757, -2.1681729295207743])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_div_overloaded_expandedData_rank2_taggedData_rank0(self):
      arg0=Data(numarray.array([[0.5032968268550384, 0.81623140601263433, 4.8986212943902565, 1.8650205879739943, -1.9651330673879253], [3.960179969840901, -0.65489452790720915, 3.862709121874607, -3.5642496107395405, 0.35747595852123126], [4.5893931025135153, 4.5661201922455525, -1.6515040661658165, -3.1458584428660616, -1.2784323961951136], [1.7388037440702639, 0.45639372753176222, -1.8490174903050436, -3.535826969447994, -0.14186055623094607]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[4.3434211425210716, 0.23815809706087432, -0.075987884888548685, 1.2129153476610526, 2.8596825293942825], [3.6530458799852887, 4.7059543966999513, 4.9073970919813732, 0.78209885451569061, 3.9574929211243841], [-4.9479191271207368, -3.21476350247484, 0.44369770025525757, 1.2079277807037583, 4.4414056763950978], [3.5505624090331303, 1.3523345699611724, -2.1927438296597082, 4.0557083980717064, 4.2658477801731571]]))
      arg0.expand()
      arg1=Data(-3.7285469824,self.functionspace)
      arg1.setTaggedValue(1,1.55743413509)
      res=arg0/arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[-0.13498470831432896, -0.21891407292608303, -1.3138150913796285, -0.5002003720965198, 0.5270506384030984], [-1.062124197050003, 0.17564336214594561, -1.0359824189186062, 0.95593528191210175, -0.095875406749329289], [-1.2308797835139351, -1.2246379658895785, 0.44293502910466304, 0.84372235557676545, 0.34287683707111871], [-0.46634888933402785, -0.1224052505403701, 0.49590832542404756, 0.94831230131785449, 0.038047141929742567]])+(1.-msk_ref)*numarray.array([[2.7888313506497542, 0.15291696238991431, -0.048790432401805986, 0.77879078179326677, 1.8361498987065981], [2.3455540094257548, 3.0216073287858025, 3.1509500025736203, 0.5021713836191829, 2.5410338915466135], [-3.176968460899583, -2.0641409033208773, 0.2848901858880834, 0.77558835618507593, 2.8517454294323783], [2.2797512453518824, 0.86830931690084756, -1.4079207462137391, 2.6040962546567044, 2.7390229121418534]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_div_overloaded_expandedData_rank2_taggedData_rank2(self):
      arg0=Data(numarray.array([[-2.7726332657066957, -0.55647315223105398, 2.0342905708570393, 0.066799750790863754, 4.7675310657421015], [4.6957920788815244, 3.9839006614221759, -1.4563924452585644, -0.70992272610598661, 2.7183237378785252], [-4.5493628234788748, -1.1558185449946046, 4.1586786791404542, 4.1220857159298721, -4.6057096487239999], [-0.68787444638313744, 3.2869785329814007, -4.7048628637830836, 0.03286660056750712, 0.90831102310309308]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[-0.31403053516098733, -2.4366655589042496, -3.6590447312261287, 3.418384858436438, 0.4837831723863264], [-3.8873569538835975, 3.0129569693683731, -1.7420029216798003, 4.1336432047585827, 0.24878248545163384], [-3.7014476709667354, 1.2706936151885468, 0.54361045416007148, 4.6339559553626763, 2.6264411867285675], [-3.129303757691051, -0.61495225057048053, 1.1013078448051896, 0.84735010813921363, -3.8959809293654315]]))
      arg0.expand()
      arg1=Data(numarray.array([[3.5904965592721503, -4.0969200652107229, 0.13519588987666165, 4.5989242210065413, -2.4810960709590377], [-2.6708628061686812, -3.5426823959031117, -2.9176177701412023, -2.3344246474935648, -3.8725295525774706], [-3.3091824253461768, 0.14937134666940466, -0.83524802606278836, 0.82731354324827855, 1.6546135110356905], [-0.39919686576574342, -1.4316867371910558, 1.3850758797184781, -1.8784215202605949, -0.99132472582778774]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[-2.6785140028087682, 1.6373359988751783, 1.4834758385338178, 2.8575139683345085, 4.230591955174452], [-4.3395029753126959, -2.8810557377997972, 3.863424540479139, -1.8677914034693455, -0.43576547631716789], [-1.6708464521944064, -1.7001809938700339, 3.7001567886970523, -4.4533154122154937, 2.6998503289551614], [2.1421439727116534, 2.3355944236634887, 2.0104913340889476, -4.8442208307652663, -1.7706845888283116]]))
      res=arg0/arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[-0.77221443327848549, 0.13582719295804277, 15.046985324131597, 0.014525081862784783, -1.9215423060580117], [-1.758155479958021, -1.1245435566082089, 0.49917177642775329, 0.30411036264041313, -0.70195041793012758], [1.3747694260170507, -7.737886621272243, -4.9789745672836014, 4.9824951489919282, -2.7835561706740188], [1.7231459096344601, -2.295878314435178, -3.3968267967668058, -0.017496925058092132, -0.9162598283268123]])+(1.-msk_ref)*numarray.array([[0.11724057997519734, -1.4881890831070697, -2.4665347666481163, 1.1962793170277417, 0.11435354142216658], [0.89580695669496169, -1.0457822560799557, -0.45089606472908061, -2.2131182299482219, -0.57090912192998011], [2.2153128829435156, -0.74738726039757264, 0.14691551877494757, -1.040563159450077, 0.97280992155776158], [-1.4608279357291714, -0.26329582068700919, 0.5477804485559975, -0.17491979365551619, 2.2002681640457831]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_div_overloaded_expandedData_rank3_taggedData_rank0(self):
      arg0=Data(numarray.array([[[-4.5518083923945296, 3.9239510656140713], [2.1301183881130692, -4.1376043313262745]], [[0.65046868584697126, 3.9250059999445934], [-3.9678032672431165, -0.53613563554295496]], [[-4.1532399712214705, -4.9405549511715794], [-2.1353209917077653, 4.5183815142138943]], [[-0.80807187921753254, -4.0076480639128729], [0.60053643670902268, -2.7068429113794901]], [[4.8417752424295628, 3.1565108541345577], [0.53337762711286452, 0.68594977808451318]], [[1.0191378545945975, 2.3473073639716588], [3.204560011995067, 4.4160624428767292]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[0.39255698535767181, -0.71535977197693335], [3.6748628856286025, 0.72061390107465328]], [[-1.82797502041258, -2.272988637894179], [-1.3992839187086306, -0.56885469747904427]], [[-1.3682982965774748, -4.807670622643359], [-3.1972732890174793, -2.2237116496014053]], [[1.2845303195673088, -0.88688926210467933], [2.7629269220361339, -3.7051151281977992]], [[-4.5423936778873966, 3.8074332366269275], [-0.21824546314244664, -2.6309126892903221]], [[-3.5628926480274425, 4.0273441459703765], [-2.9458980241702273, -4.4625772849179324]]]))
      arg0.expand()
      arg1=Data(2.95706331809,self.functionspace)
      arg1.setTaggedValue(1,2.21817342115)
      res=arg0/arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[[-1.5393002796190276, 1.326975665892131], [0.72034926512343422, -1.3992275058864994]], [[0.21997117270591807, 1.3273324165657019], [-1.3418053116967052, -0.18130678239530448]], [[-1.4045150625646128, -1.670764004591786], [-0.7221086469949215, 1.527996200340072]], [[-0.27326837212879074, -1.355279759952831], [0.203085416884457, -0.91538212753707815]], [[1.6373593398564841, 1.0674478408423922], [0.1803740974530465, 0.23196993242825018]], [[0.34464525949048935, 0.79379678805254084], [1.0836967853835819, 1.493394617509209]]])+(1.-msk_ref)*numarray.array([[[0.17697308137187651, -0.3224994786957921], [1.6567067527693649, 0.32486815241968958]], [[-0.82409021899961676, -1.0247118715895138], [-0.63082710547705989, -0.25645185901865303]], [[-0.6168581245868614, -2.1674006986145598], [-1.4413991523545804, -1.0024967517873473]], [[0.5790937296971097, -0.39982863992927675], [1.245586524342543, -1.6703451104743032]], [[-2.0478081806324764, 1.7164723011861083], [-0.098389720597023264, -1.1860716859231386]], [[-1.6062281758764747, 1.8156128405356802], [-1.3280738088757058, -2.0118252443081501]]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_div_overloaded_expandedData_rank3_taggedData_rank3(self):
      arg0=Data(numarray.array([[[-0.21429045684894099, -1.1798307427277144], [-1.0157257787137839, 1.9957662917643928]], [[1.776437270179537, -0.54358642283014724], [-1.3244067059119868, 1.8923244733672204]], [[2.9066118465906454, 2.7777735738089762], [-2.6580367318195552, -4.5946586987127001]], [[3.324748533182472, -2.8360332538316579], [-0.138789273181807, 1.7689952057172995]], [[-4.5861565688654737, 3.655522058193176], [4.9889781231399457, -0.41362302504517778]], [[-4.9320672070339082, 2.9439078114404325], [1.6872302857748824, 3.8121554318092894]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[-3.7896411872370308, -4.5320158375495652], [-1.1385607892966734, -3.9307069528614589]], [[4.0402186101348097, 4.2284993390373149], [3.637914750747747, -1.9146207755762612]], [[1.1633200469989413, -2.8552338504759223], [2.8472654792196526, -2.3100399414317296]], [[3.8531849021326288, 0.18430454115771155], [4.5965527209785098, -1.9020039092491912]], [[0.34881119739416011, -1.0588491350696638], [-1.0015702981888994, -1.6349708760786119]], [[2.1307800390517038, -0.15496995028318938], [4.0703605212853891, -0.34020163283754101]]]))
      arg0.expand()
      arg1=Data(numarray.array([[[1.4599040646635189, -0.13823582259597345], [1.0744688931585991, 2.5822963189878179]], [[2.4319519119804767, -2.2233302081961703], [0.89128069195950399, -0.80935163107648656]], [[-1.633143453634498, 4.9694257564589677], [-0.39934410191271663, 3.1382399196898429]], [[1.1564311812897721, 2.5133082615251308], [1.8161038476244986, -4.197184166416438]], [[-4.7903399932213446, 2.8323337189533149], [4.1170427348897878, 0.30383659941813779]], [[0.55976971588727586, 1.4549797538865583], [4.3140940804267771, -4.7406405385059536]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[-1.2742614889129666, -1.865705335597708], [4.3493655135768954, 4.9283987240172884]], [[-1.6547908255858923, 1.5125735740088633], [2.4602944768024448, -3.2645878625951132]], [[-2.559359816592611, 4.2572246050859661], [-0.8559816906283757, 0.98963688714277964]], [[0.69459201540592197, -3.8457753717777754], [1.1488012652590172, 2.5508213488692917]], [[3.9143983543602605, -0.95568185491149205], [-2.3875228795187118, -3.9521687246019721]], [[4.5806326105572595, 1.6528180049556571], [4.1311927984022763, 2.7665306288878071]]]))
      res=arg0/arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[[-0.14678393055801994, 8.534913169186586], [-0.94532823163253332, 0.77286494082393797]], [[0.73045739984755009, 0.24449198811145967], [-1.4859591572664319, -2.3380745781043459]], [[-1.7797651762446787, 0.55897274855119616], [6.6560059835327525, -1.4640877741325773]], [[2.8750076848277017, -1.1284064502739073], [-0.07642144107747266, -0.42147190487180131]], [[0.95737600574389203, 1.2906396000341618], [1.2117868199086108, -1.3613337755796584]], [[-8.8108860966446212, 2.0233324921371811], [0.39109723949459418, -0.80414353310380227]]])+(1.-msk_ref)*numarray.array([[[2.9739902054717651, 2.4291166193710128], [-0.26177629489693705, -0.79756269185489514]], [[-2.4415282872409794, 2.7955660548995795], [1.4786501311321938, 0.58648161916961705]], [[-0.45453555981343835, -0.6706796364619495], [-3.326315866790885, -2.3342298285799941]], [[5.5474074228751595, -0.047923896572387076], [4.0011731010255609, -0.74564371593184942]], [[0.089109785417117351, 1.107951489952403], [0.41950186395315331, 0.4136895436424648]], [[0.46517156476176824, -0.093761049201147237], [0.98527488788700113, -0.12297049209764503]]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_div_overloaded_expandedData_rank4_taggedData_rank0(self):
      arg0=Data(numarray.array([[[[-3.1052544232391845, 2.8912525264744557, -3.3829877793759175, 4.1910809073972661], [2.3314625626967747, 4.7050875036610034, -1.8716576505158091, -2.8771767298538498], [-0.73637376279450439, 0.52658588698529485, 0.064066637479109012, -3.0940462224457157]], [[-3.2243420023304861, 1.901217114086899, 4.3816853303128926, -2.5572214048171715], [3.4002462163019018, 2.7993570180486564, -1.4514914886889709, -4.6351790517067144], [3.2896222092345546, -3.4850262598110913, -4.8863176669284814, 1.420857260121597]]], [[[-1.9914362753178914, 4.423972441147848, 0.50194384810581738, 1.673528736034438], [-3.5646589195280454, 0.84491581216502887, -3.9603502687133618, -4.9794293117103772], [1.4327305430072332, 4.5805855654860697, 0.00063190708642490989, -2.6517537738765986]], [[-2.835614331819424, 2.8572056405034649, -0.085684656928010305, -1.5431105415552784], [-0.53587293964167504, 1.3978695659165741, -3.92757073285809, -1.057962142075203], [4.1433723832406013, 3.7006374809067335, 4.4786080422132031, -2.6669422219711567]]], [[[-3.2903147317166681, 0.53745756115403331, -3.1720173092612578, 1.5059661308285985], [2.679017006294389, 3.2088301834184705, 2.3290080280695236, 3.7513948003520277], [2.9506120435445204, 4.0890148868031648, 3.7773584920488226, 3.6024867066278912]], [[0.86512211535402095, 4.3124619748030426, 4.1503191063389835, 2.159016999725198], [3.2976651156320038, -4.3723734452831708, 2.0744719773902345, 2.930414966367727], [0.15329906505372914, -2.0624803526498603, 1.2601255358819365, -3.3191709579942796]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[0.60115997461122284, -3.3443314264350343, -4.2404008495850363, -3.8293772883751007], [-4.2473619468059951, 1.6873706507126425, -0.92905280722398764, 3.8239956275130069], [-0.83349383620580753, -4.8176085146435721, -0.95093610628269953, 2.0778607122080555]], [[-4.3364796944749617, -0.31674384054277471, 4.4447634680102137, -1.5158924370150686], [3.2291249048100106, -4.033747625553171, -4.3957670629564376, 2.5740361932488103], [-2.917624274325441, 3.9548560134248127, 3.5415123767492407, -1.0553534528221755]]], [[[-4.4632203335353857, -4.7034179295596177, 0.38324352063976974, -3.6369454378599708], [2.0570772657118663, -4.1654358679138292, 2.2987905054969113, -2.367046781968293], [1.9674925107976478, -4.6574382119245499, 2.3313571551058141, 1.0815913520076688]], [[3.3482249136003066, 0.22947755035760764, -1.8678459474936551, -4.7442760290974917], [4.3943902541311495, 4.8728496065561853, 1.8872006716769096, 1.1372573009279527], [-1.6945074837347365, 4.2219059665232734, 1.6827493094848478, -4.4279022519354347]]], [[[1.4807716597855194, 2.5848338944977121, -4.6168715581003159, 0.02745631463149234], [2.8221504375607855, 1.5723735919415791, -3.8003914921395832, 3.9786036161940892], [1.6727775052650484, 2.4456504813605218, 1.4655430860731506, -0.82437899810862092]], [[-0.30815409476604927, -3.616609300807283, -2.0211248498852177, -1.3063251457333838], [1.0854852690609986, -3.347126744941884, -3.9142029749711185, 3.3988510951452628], [2.3678808764317161, -1.635007919964754, -3.5394422185044236, 0.36865786229694386]]]]))
      arg0.expand()
      arg1=Data(3.09131147493,self.functionspace)
      arg1.setTaggedValue(1,4.15261466341)
      res=arg0/arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[[[-1.0045103666911936, 0.93528347108387344, -1.0943535799646062, 1.3557614434473706], [0.75419852758420325, 1.5220360490418405, -0.6054574783855633, -0.9307301296510363], [-0.23820755972545513, 0.17034384637579258, 0.020724743526709253, -1.0008846560876641]], [[-1.0430336860192717, 0.61501958942186841, 1.4174195534312273, -0.82722864569142784], [1.0999364651141437, 0.90555644125493528, -0.4695390614824988, -1.4994215527281491], [1.0641510038416484, -1.1273617324146812, -1.5806617050901524, 0.45962927762027506]]], [[[-0.64420434222424305, 1.4310988967060441, 0.16237245977197873, 0.54136529094727803], [-1.1531218864343413, 0.27331953412556403, -1.2811230122976631, -1.6107821395843787], [0.46347013383354391, 1.4817612533169191, 0.00020441391673063481, -0.85780866644509546]], [[-0.91728522176275584, 0.92426973589507111, -0.027717898252208713, -0.49917666144914913], [-0.17334808995709938, 0.45219305050714037, -1.2705192487749311, -0.34223731599190288], [1.3403283418192866, 1.1971092240033396, 1.4487728197346457, -0.86272193649818818]]], [[[-1.0643750260690201, 0.17386069489038061, -1.0261073123770286, 0.48716091634293518], [0.86662797586728912, 1.0380158096138008, 0.75340451680684983, 1.2135285721851448], [0.95448552094246886, 1.3227443821056646, 1.2219274966893079, 1.1653586951178454]], [[0.27985601657091386, 1.3950266771160365, 1.3425755185126473, 0.69841457816013219], [1.0667527819098483, -1.4144072768925355, 0.6710653372244989, 0.94795202299488757], [0.049590300523557902, -0.66718619892425901, 0.40763460625081321, -1.0737096487725637]]]])+(1.-msk_ref)*numarray.array([[[[0.14476661653876957, -0.80535558858917833, -1.0211399788542901, -0.92216051783385344], [-1.0228162955331033, 0.40633932774461018, -0.2237271893802352, 0.92086454859560152], [-0.20071542961832703, -1.1601385886083861, -0.2289969533319762, 0.50037407287424984]], [[-1.0442769305528175, -0.076275760265854892, 1.0703529771673421, -0.36504529311902811], [0.77761246023196995, -0.9713753749162638, -1.0585540482935671, 0.61985914944845055], [-0.70259932857078777, 0.95237731742167198, 0.85283915407663025, -0.25414191740955294]]], [[[-1.0747976143468521, -1.1326401100979409, 0.092289690159937363, -0.8758205932049965], [0.49536916676549964, -1.003087501620672, 0.55357664792546046, -0.57001358754155351], [0.47379607073432511, -1.1215676361599654, 0.56141909232461307, 0.26046032191182478]], [[0.80629318754329715, 0.055260978674370624, -0.44979996914994325, -1.1424792362508878], [1.0582224960218336, 1.1734413138526407, 0.45446082158920104, 0.27386535787886679], [-0.40805796373676662, 1.0166861865906531, 0.40522645270024016, -1.0662925917375679]]], [[[0.35658778379628625, 0.62245936693167681, -1.1117986936713509, 0.0066118137262807328], [0.67960807017017244, 0.37864664058431952, -0.9151803863781427, 0.95809602832892782], [0.40282512124329978, 0.58894231215566739, 0.35292055845834419, -0.19852046600239145]], [[-0.074207245252311413, -0.87092340463802609, -0.48671138877722825, -0.314578946427094], [0.26139802438820431, -0.80602873520484675, -0.94258757246606695, 0.8184845863723369], [0.57021444760949402, -0.39372974679570433, -0.85234063485136768, 0.088777286644305911]]]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_div_overloaded_expandedData_rank4_taggedData_rank4(self):
      arg0=Data(numarray.array([[[[-0.97320346566297999, 3.3278746551006009, 0.43127263141732453, -4.2154532898179689], [0.39869394596021124, -4.445838555235663, 2.143923586380919, -1.7836392239680654], [-3.7765877123650959, 0.2919631651089869, -0.76832729680280565, -1.9017786503874747]], [[0.030352117103344511, -2.9524791718635757, 0.55016784851447476, -1.2075943736899286], [-4.4266083003720951, -2.7183156711905623, 0.81831557175799219, 2.3978306421487527], [1.0105393208761395, 2.0673262281189855, 1.0119480620313936, 0.53876393024911451]]], [[[3.1338335581155405, -1.7951680922511262, -4.8331814890118885, 3.7908846988160327], [-2.0813217762204994, -3.5521320446498983, -2.3705891266207537, -1.0992233503212767], [0.31204555361571451, 1.5380377545778092, -4.0950974378642604, -0.75599318447996389]], [[3.6118621026439151, 0.31936120146850833, -4.0069165997085037, -3.9869933378105804], [0.90052171301919248, -0.026242465371546508, -1.3670513369512607, -3.964603383521168], [-1.7836280839026433, 4.1269843605123988, 4.3890863586346303, -0.35417596524537043]]], [[[1.5688353489830913, -2.0871863749629771, 1.6153331117982574, -1.9138757429791231], [4.1315452120767837, -0.16652638697444466, -3.2385080829256738, -2.0466825207328987], [2.2877422543751891, -2.0303433022470987, -0.78771024964489644, -1.3173966221626889]], [[2.8279106132251277, -1.6321947545233737, -1.5784930697816337, 1.1370827774706536], [-4.2511274417122156, 3.0160286917100869, 3.4906022250729904, -3.0767632869607588], [4.9339311729252877, 4.6536345623769257, 4.0964435416469929, -4.3652678847880768]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[3.0068402197091473, 1.7820167215760918, -3.2422127745639431, 2.0025351411111689], [-0.55122931157427502, 4.3518274949029774, 0.35236787406923487, -2.7238108530635321], [-1.8650308824528752, 0.60508326872424245, -0.51880213854316359, 2.6345763531927808]], [[-3.4861809071904402, 2.0779162827587587, -3.5992591870296797, 2.9597019976956709], [0.73992270949682748, -2.6158509620534653, -2.1498381736476224, -2.0829293828458417], [3.71752447794813, -0.0045791639288994546, 1.5521892134094903, -1.1957257632685616]]], [[[-0.63995791275185265, -3.7071506426256198, -1.4839074278258177, 4.8664678969162587], [-0.6879731604285837, -2.4593222851792129, -0.39738406186859621, -4.3787211514319724], [1.8033238741098803, -3.2990197593751027, -2.4508840741587976, 1.8301094280656844]], [[1.7230128745548328, -2.1925714471184934, 3.5963407024909717, -4.3082931571561787], [4.8057954954871764, 0.71608784298021178, -1.8743037101564375, 2.7647582688703141], [2.9850661302659978, -0.2690880951423118, 1.1661697952954704, -4.5163258089391602]]], [[[0.41337136006940423, 3.6440797005733607, -1.1839064595670989, -0.39764703596586326], [-0.47627964746849383, -4.1535509014885079, 2.8919677775376886, -3.937011387832281], [4.0122501590378938, -2.8913063507568673, -1.8151459378282633, 4.0580695392301482]], [[-4.5827407445191373, 1.6848941567975206, -0.37759907841933682, -4.8860459154083005], [-3.8917767504663536, 1.6825144283323725, -4.1847367107539775, 3.2791397591180811], [-4.2161095789948, -0.40062637335507301, 1.1532455817557814, -3.7584390222339525]]]]))
      arg0.expand()
      arg1=Data(numarray.array([[[[1.6473977568317624, 3.060632074996974, -3.4388164535238297, 4.6130496534091474], [-3.6830738780041927, -1.443653760068826, 4.5043689212016549, -4.7368412320166273], [-4.5363279042074955, 1.1097214485937998, 0.77462567371884994, 4.981110241026995]], [[-4.5025507630992383, -4.6221706793689599, -3.6007662094140436, -0.78458562298234291], [-2.9535617848572193, 1.2767662607458661, 1.7066013942805416, -2.9979545360221147], [4.1323090465127432, -3.9266093748624353, 4.7236256766037972, 3.4439797336283391]]], [[[-4.1105280308664742, -1.9135755271518304, 1.3722717679177956, -2.7578492586999284], [-1.8660256922079355, -3.4967466137142909, 3.4128758531494992, 0.74755011128158699], [1.3606430798212799, 2.270840767531034, 1.9924091780622009, 3.4882598183819482]], [[-3.600286676105747, 2.3273940125745565, 2.5335245025984046, 3.4362502720317831], [-1.4972840741765525, 0.14677687739010459, -1.8108476791716721, -3.1112785809977108], [3.5748082069738238, -3.054665072333572, -3.0141021764705855, -4.5404816279108919]]], [[[3.0901204588456768, 4.36356065832992, -4.9043258938503325, 1.9780565000570434], [-0.74356942097228007, -3.4613688307243908, 1.5690542756061649, 1.3987339178483413], [-2.9886008448921411, 4.2498910274808352, -3.8464996624489132, -0.77542036480722487]], [[-2.1356871008085321, 4.685343460071433, -4.5548813476343311, -0.79068766942125635], [1.6135390387166462, -1.451365730195342, -1.4688266440715223, -2.3535062808820983], [-3.0054980918538132, -1.0976577965155823, 3.1234943395225052, -2.7885287508377798]]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[[-2.7503292812648539, -3.1594867423525219, -2.9333466069425396, -0.29335160182062126], [-0.053607625217670041, 1.1424838107167421, -0.35330217119188401, 0.34222049332923454], [-0.40602786427555326, -0.99865436647965122, -1.3798205623216786, -4.6670142170881519]], [[-0.77387429567850408, 4.0395903871128187, -3.802753215142137, -1.8319944285501801], [2.3416652977089294, 2.0421663768151745, 0.1791968970504465, 3.3974888365598694], [-4.87062469047713, 1.3082266328209888, 4.4945915139349921, -1.2411683823455411]]], [[[3.5483728428512169, 1.1807640737743128, 2.5750798072298533, 1.6480034934010312], [0.22277966902912461, 2.6736525238013211, -3.4732939026664433, -4.0565332315808345], [0.94094765563978022, -3.9228802614079603, -3.298064398465077, 2.9226886859579562]], [[2.4081210249600478, -1.8371910666413194, -2.5510655783199923, -4.8771638029284468], [1.8920393402083882, -0.35503479565201879, 1.8742490774270983, 1.9919708652865591], [-4.8705605094668663, 0.5757868473299288, -0.1111587185467755, 2.4388512148069914]]], [[[-1.3826455408569096, 4.7259176489527217, -0.62041882416843741, 0.095067423200346113], [-4.1200009954384615, 3.23017785174304, 1.206595167640014, -1.0839684154592577], [4.268229044833701, 4.9914238010719831, -1.6521981468596758, 0.036000073658897236]], [[4.1932188772326686, 0.50975552795114343, -2.6028706435713689, 0.95210978345192387], [2.866997878411615, 0.41788855501294186, -2.6903527037118682, -1.7075122318845892], [-4.9102704449009735, 1.8799405727585441, 3.7501203233456977, -4.439977575196858]]]]))
      res=arg0/arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[[[-0.59075196723262668, 1.0873161404426213, -0.1254130998981903, -0.91381051723617457], [-0.10825032545267814, 3.0795739797219164, 0.47596536249277133, 0.37654612781030705], [0.83252088299487081, 0.26309590165978353, -0.99186913482249195, -0.38179814506481791]], [[-0.0067410938155536212, 0.63876463607065714, -0.15279188275986519, 1.5391492506575097], [1.4987356360943997, -2.1290628948814536, 0.47950011906733064, -0.79982221656047991], [0.24454592081609527, -0.52649144102637202, 0.21423121375675269, 0.15643644037402915]]], [[[-0.7623919687648858, 0.93812241365934368, -3.522029383687951, -1.3745800960140531], [1.1153768058562041, 1.0158391319286291, -0.69460162883836118, -1.4704343344110902], [0.22933681745303966, 0.67729881221484189, -2.0553496154073709, -0.21672502159848753]], [[-1.0032151402317464, 0.13721836515134447, -1.5815582583073404, -1.1602744335188235], [-0.60143678046829163, -0.17879154971936828, 0.75492342767150067, 1.2742682084899697], [-0.49894371407761057, -1.3510431627646964, -1.4561836665318713, 0.078004052052145251]]], [[[0.5076939135146642, -0.47832184273148454, -0.32936904005987194, -0.9675536279797522], [-5.5563678327094701, 0.048109980507218653, -2.0639872904807941, -1.4632393585488299], [-0.76548939557626139, -0.47774008536181328, 0.20478625211769619, 1.6989450908865456]], [[-1.324122158229327, -0.34836181561351087, 0.34654976701016715, -1.4380934741311207], [-2.6346604201739159, -2.0780624958701166, -2.3764562272625964, 1.3073104210317137], [-1.6416351041108141, -4.239604161833932, 1.3114938259415012, 1.5654376464566071]]]])+(1.-msk_ref)*numarray.array([[[[-1.0932655374000622, -0.56402095241875272, 1.1052948079474789, -6.8263992038321302], [10.282666119531441, 3.809093357894358, -0.99735552963205054, -7.9592277673537204], [4.5933568765791915, -0.60589858617172709, 0.3759924679410705, -0.56451003374841835]], [[4.5048413245640715, 0.51438786699457661, 0.94648771124506137, -1.6155627722284864], [0.31598141298022531, -1.28091961152204, -11.997072544411369, -0.61307909548715811], [-0.76325414380962264, -0.0035002833714103451, 0.3453460027673475, 0.96338722471232896]]], [[[-0.18035249989052124, -3.1396201196871711, -0.57625686926656217, 2.9529475613387151], [-3.0881326084502039, -0.91983616542759272, 0.11441129746133057, 1.0794244497599199], [1.9164975472347003, 0.84096876262826648, 0.74312802239381437, 0.62617323454887153]], [[0.71550094729288727, 1.1934368106453219, -1.4097405935206679, 0.88336035680599956], [2.5400082299334583, -2.0169511601394499, -1.0000291491296418, 1.3879511578461685], [-0.61287938512701989, -0.46733977406768196, -10.491033097010263, -1.8518250648170755]]], [[[-0.29897131828394197, 0.77108404573678946, 1.9082374896569554, -4.1827896726290517], [0.1156018282509679, -1.2858582691498568, 2.3968003975965728, 3.6320351512864337], [0.94002690973071235, -0.57925483108365106, 1.0986248479205121, 112.72392322528532]], [[-1.0928932828671074, 3.3052984507487406, 0.14507024363732401, -5.1318093777943181], [-1.357439703660503, 4.0262275866355459, 1.5554602580473238, -1.9204194839054707], [0.85863082824144266, -0.21310587108996273, 0.3075222879053931, 0.84649955063507554]]]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_div_overloaded_Symbol_rank0_taggedData_rank0(self):
      arg0=Symbol(shape=())
      arg1=Data(-4.13228805597,self.functionspace)
      arg1.setTaggedValue(1,0.788196083249)
      res=arg0/arg1
      s0=numarray.array(-2.48956741229)
      sub=res.substitute({arg0:s0})
      ref=Data(0.602467054225,self.functionspace)
      ref.setTaggedValue(1,-3.15856354174)
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_div_overloaded_Symbol_rank0_taggedData_rank1(self):
      arg0=Symbol(shape=())
      arg1=Data(numarray.array([-0.73993239781602504, 2.9226819782461275]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([2.946738055547141, -1.0606803414835655]))
      res=arg0/arg1
      s0=numarray.array(-0.821375712205)
      sub=res.substitute({arg0:s0})
      ref=Data(numarray.array([1.1100685881967345, -0.28103492556434717]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([-0.27874066059534736, 0.77438572214490886]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_div_overloaded_Symbol_rank0_taggedData_rank2(self):
      arg0=Symbol(shape=())
      arg1=Data(numarray.array([[4.3991568817879418, -3.1284437769597973, 4.8063957163574162, 1.8665558141248662, 1.0675644361261041], [-4.5712231796031872, 4.1118538209663154, -0.5421837355930883, 4.3419399585099558, 1.8641118628482776], [-1.3148118230480277, -3.3468499848753464, -1.4703636162333988, 4.6482930967870502, -0.4858946887955593], [-1.0099504767616798, -1.0358831526209853, 4.2406730053811472, 4.7091947730811334, -2.7205563383611562]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[-0.89506604540170365, 0.41257981975861835, 4.2993583198506684, -3.8050176842398455, -4.974985875539617], [-1.0171101570009577, -3.4463599287190769, -0.48134708576769469, -4.6498437112938102, -1.7461996930845691], [3.0554622474037298, -0.26300441302319211, -2.2169461894043696, 4.6214432931241323, 0.80748496371225631], [-4.3197084797608927, 1.7474806406033325, -2.5298242828114956, 2.6522239379646173, 4.347262556378876]]))
      res=arg0/arg1
      s0=numarray.array(-2.93082635744)
      sub=res.substitute({arg0:s0})
      ref=Data(numarray.array([[-0.66622455988592622, 0.93683203739287735, -0.60977633353490845, -1.5701787941511043, -2.745339071122932], [0.64114707208251653, -0.71277493924858193, 5.4055962306436935, -0.67500388891699481, -1.5722373833081813], [2.2290842735533092, 0.87569696003194897, 1.9932663764805025, -0.63051668567632568, 6.0318139403895881], [2.9019505657700764, 2.8293020791222987, -0.69112293112892242, -0.62236252664502412, 1.0772893456063564]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[3.2744246890998605, -7.1036590184003865, -0.6816892520696235, 0.77025301868572693, 0.58911249815767974], [2.8815230457240979, 0.85041215022704486, 6.0888004604078478, 0.63030642305670492, 1.6784027445687875], [-0.95920882672619512, 11.14363946881709, 1.3220105979323498, -0.63417988094733346, -3.6295739105337721], [0.67847781191024814, -1.6771724328954067, 1.1585098527796442, -1.1050448325594648, -0.67417744371980037]]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_div_overloaded_Symbol_rank0_taggedData_rank3(self):
      arg0=Symbol(shape=())
      arg1=Data(numarray.array([[[-1.4177404265411617, -3.3147863083812954], [-0.72466650518948317, 2.4486553800256505]], [[1.142106090217232, 2.5905121607640798], [-1.2147841256263883, -0.93506235721053699]], [[1.267658460947148, 3.7689296764547482], [-4.3972907141664388, -4.0572823668942153]], [[-0.99456892443753642, 4.174811980892148], [0.71050812934455365, -2.871115772754175]], [[2.535196165680901, 4.0412048287340667], [-0.82947677430700306, 3.2791557666430009]], [[2.7053730346792229, 1.4591666264871659], [3.1298478664969114, -2.0001315435282407]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[-3.3980438728911908, 2.9346934917885683], [-2.2725736847902067, 2.8476308473055765]], [[-3.6952972887917057, -4.2161892868167419], [-2.1020037683362003, 1.7699462571976952]], [[4.7187716805095583, 3.0680602149069429], [0.1202616138348418, -1.211404080127271]], [[2.3718470733770269, -0.67572826457071677], [0.82348659934982038, -4.2311228028666195]], [[4.0038556197052326, 4.0120329843355034], [4.4538793810882424, -4.7828187422014681]], [[-4.7204727349407927, 0.75557967524823155], [4.2798387660411379, -3.2013412578986489]]]))
      res=arg0/arg1
      s0=numarray.array(-1.33245724721)
      sub=res.substitute({arg0:s0})
      ref=Data(numarray.array([[[0.93984570254597311, 0.40197379959044255], [1.8387178621730276, -0.544158748544047]], [[-1.1666667909606965, -0.51436054514308605], [1.0968675167065924, 1.4249929290121044]], [[-1.0511169122121762, -0.35353730676762973], [0.30301777476702257, 0.32841126811451882]], [[1.3397334407607366, -0.31916580993562793], [-1.8753582009534533, 0.46409039295974458]], [[-0.52558348945456668, -0.32971782022437268], [1.6063828288906872, -0.40634155314143372]], [[-0.49252255793567323, -0.91316318713935807], [-0.42572588318861682, 0.66618480745518638]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[0.39212479210184481, -0.45403625657626373], [0.58632081156629778, -0.467917830174924]], [[0.36058188099017463, 0.31603354512017701], [0.63389860060293135, -0.75282356274480722]], [[-0.28237374838752949, -0.43429957493543536], [-11.079655467124379, 1.0999279836257583]], [[-0.56178042090768443, 1.9718832511126378], [-1.6180679178780086, 0.31491812204260661]], [[-0.33279353047912913, -0.33211522747016875], [-0.29916778906680641, 0.278592461690717]], [[0.28227199308823425, -1.7634900604924979], [-0.31133351512747104, 0.41621843467104369]]]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_div_overloaded_Symbol_rank0_taggedData_rank4(self):
      arg0=Symbol(shape=())
      arg1=Data(numarray.array([[[[0.56623784519155862, -0.11423889515937802, 1.2371149160020254, -4.0561094275701981], [-4.8813428690845582, -3.0343297243145253, 3.2525365424781594, 0.064007319979378252], [2.6930044815322987, 1.6445689681050792, 1.6332026256278471, -4.7670792736051659]], [[-3.6386382332588427, 4.1651752162494482, 0.83928675814116893, 3.8320607256680272], [-1.3938402803404468, 2.0107268720524889, 4.796598769578015, -2.9996077723625203], [-0.99266738468548255, 1.0836148840543984, 3.3447422595987373, 3.093711220756731]]], [[[3.500289415701431, -4.8448055476191998, 4.0610314335167814, 2.3642075345496103], [3.3147446456402125, 1.5818027085790654, 1.2823723994146876, -3.9744256064881132], [2.0339673434123204, 2.1587167913663858, 0.40481958965395837, 4.4005292256574986]], [[0.29876582231064575, 1.880885444019496, 3.7993768029054369, 4.8763708505592529], [4.3972398939016539, -1.3226271310817106, -4.9373517106508293, -3.6013459566886352], [1.0333556564653072, -0.64759510629420447, 0.83185983115091311, 4.3661019610207141]]], [[[2.2207327405828554, -3.121312139724528, 3.8615399039685414, 0.1864132930418485], [-3.4615321691014609, 1.1898630118504165, -3.9345987177126931, 0.8867162816653007], [1.3026581018633578, 3.9419332108943195, 1.8540986093031906, -1.6162040996087201]], [[-1.4590928590052954, -1.3306006805310622, 0.50688042472596173, -0.31010304325613358], [2.2801172589513961, -3.1721758179369566, -3.6745988958416245, -2.7946913449846988], [2.0081154904148306, -4.7531214797906181, 2.9353402632047736, -2.5850968568542632]]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[[4.0272444843661237, -4.4537691931727528, -2.4545376231963036, -4.1582050592919906], [1.6543066371195625, -1.9275830768178883, -2.6203108350435169, 0.80514649820598372], [-0.67283130947634895, -0.79846615755972739, -3.6105745811502334, 1.8988441752814058]], [[-4.438437059141398, -3.5337371378410651, -4.4662693813546808, 0.4436098841195264], [1.3963827694466522, 1.53900054526021, 3.0917496424870077, -2.6136217073070989], [-4.188157107035404, 3.1528634345308166, 3.9434938039059126, 0.79105496323341296]]], [[[-0.025690266477495172, 1.5366069679898384, 0.44235227160539736, -3.2741390369915258], [2.7658074839703382, -0.31929829557352019, -3.1046729479230573, -4.8310084906300998], [1.092883621354126, -3.1685603296106701, 2.5308436039517943, -0.760762545463324]], [[3.9473579365685492, -2.4082200992258929, 0.53266381604287094, 1.2641064564798565], [4.9529699131665463, 0.11227411342775184, 0.57521544544467318, -0.7757556747934089], [3.7454652556785852, 3.6675188960693426, -0.078416898733850715, 4.8706188611431713]]], [[[2.2603649059897748, 3.590343724216396, 2.9596469498186364, -2.812169543029519], [4.9868179453691468, 2.828010560934203, -2.7183780602061436, -0.37830105156183258], [2.9839713966769219, -2.6299880011982779, 1.3522105714009447, 1.4345613253385228]], [[2.0533141462259401, 0.053286732988436114, 0.22827221443525225, -2.0231500841902053], [-2.9821874078453323, -2.3490651251592354, -2.658270541884733, 0.4257584576183131], [-2.1311968264189387, -1.2429699637815284, 0.6158641113129546, -1.8107320154946605]]]]))
      res=arg0/arg1
      s0=numarray.array(0.0234808839733)
      sub=res.substitute({arg0:s0})
      ref=Data(numarray.array([[[[0.041468234899395585, -0.20554193858906181, 0.018980357984215511, -0.0057890163943129383], [-0.0048103328536998934, -0.0077384088436979704, 0.0072192529328020056, 0.36684685409256579], [0.0087192145926065102, 0.014277834757144002, 0.014377201949638345, -0.0049256332075999698]], [[-0.0064532065206991352, 0.0056374300609794321, 0.027977188661162739, 0.0061274822228287685], [-0.01684617979873269, 0.011677808806206769, 0.0048953196006838191, -0.0078279847751019042], [-0.023654332091076858, 0.021669030500463655, 0.0070202371814885684, 0.0075898758151019836]]], [[[0.0067082692842488165, -0.0048466101977756269, 0.0057820000553399104, 0.0099318201258521647], [0.0070837685805495969, 0.01484438220138341, 0.01831050323919051, -0.0059079943363386676], [0.011544376093048788, 0.010877241547960832, 0.058003329318629844, 0.0053359227422976122]], [[0.07859293874958892, 0.012483952198147671, 0.0061801935399971343, 0.004815237538924713], [0.0053399142507316441, -0.017753215113716369, -0.0047557649017950865, -0.0065200300820089339], [0.022722945218735024, -0.036258587727288516, 0.028226971773410856, 0.0053779971661133052]]], [[[0.010573484843191141, -0.0075227605962547069, 0.0060807047336736359, 0.12596142469335514], [-0.006783378812113214, 0.019734106984983783, -0.0059677963772075153, 0.026480718194587322], [0.018025362095966276, 0.0059566924950521828, 0.01266431238096649, -0.014528415055385531]], [[-0.01609279617017571, -0.017646829974534196, 0.046324306143851933, -0.075719617991419741], [0.010298103696706274, -0.0074021382549350869, -0.0063900536191591924, -0.0084019596709559736], [0.011692994793083606, -0.0049400975912708023, 0.0079993737924253325, -0.009083173773962349]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[0.0058305086926022489, -0.0052721375883881304, -0.0095663165850170557, -0.0056468797566537497], [0.01419379179558602, -0.012181515938651055, -0.00896110631582424, 0.029163492638483713], [-0.034898619672746566, -0.029407488033172793, -0.0065033648926456347, 0.0123658825084219]], [[-0.0052903496569743965, -0.0066447738067118315, -0.005257381937452477, 0.052931381409446795], [0.016815506813103953, 0.015257229145010511, 0.0075946912552864697, -0.0089840407690538662], [-0.0056064954998672773, 0.007447478922227844, 0.0059543352014586742, 0.029682999367520242]]], [[[-0.91399923756729196, 0.015280995376487467, 0.053081865925800852, -0.0071716209079828149], [0.0084897029563403142, -0.073539020717774378, -0.0075630780978200056, -0.0048604518122609582], [0.021485255625148268, -0.0074105844707764513, 0.0092778881858471378, -0.030864931657526178]], [[0.005948506406222475, -0.0097503064528358212, 0.044081995559167676, 0.018575084284212982], [0.0047407685459408093, 0.20913889458981161, 0.040821024816500066, -0.030268401168427581], [0.006269150124335353, 0.0064023893642366084, -0.29943652901941409, 0.0048209241254036457]]], [[[0.010388094378526582, 0.0065400100316177733, 0.0079336773512023208, -0.0083497398055294523], [0.0047085905743031861, 0.0083029689838125947, -0.0086378286806620685, -0.062069306644507806], [0.0078690043743316253, -0.0089281334981881136, 0.017364813195480347, 0.01636798898631274]], [[0.011435602300061973, 0.44065159668217585, 0.10286352209542055, -0.011606100880414765], [-0.0078737117297052704, -0.0099958420572692532, -0.0088331430542366949, 0.055150716452429117], [-0.01101769845105588, -0.018890950431251358, 0.03812672883839989, -0.012967619599367704]]]]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_div_overloaded_Symbol_rank1_taggedData_rank0(self):
      arg0=Symbol(shape=(2,))
      arg1=Data(-3.04017426778,self.functionspace)
      arg1.setTaggedValue(1,2.0177990306)
      res=arg0/arg1
      s0=numarray.array([2.6336528375756014, -2.2964782901728977])
      sub=res.substitute({arg0:s0})
      ref=Data(numarray.array([-0.86628351061419373, 0.75537718824459577]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([1.3052106764023088, -1.138110513160504]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_div_overloaded_Symbol_rank1_taggedData_rank1(self):
      arg0=Symbol(shape=(2,))
      arg1=Data(numarray.array([-2.1476994766614013, -2.2925218227652557]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([-2.865748607538686, 2.7969241193125178]))
      res=arg0/arg1
      s0=numarray.array([0.82727816210892335, -3.7841253564403332])
      sub=res.substitute({arg0:s0})
      ref=Data(numarray.array([-0.3851927008870567, 1.6506387502457425]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([-0.28867785538922419, -1.3529596067019756]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_div_overloaded_Symbol_rank2_taggedData_rank0(self):
      arg0=Symbol(shape=(4, 5))
      arg1=Data(3.11905380251,self.functionspace)
      arg1.setTaggedValue(1,-3.26260245328)
      res=arg0/arg1
      s0=numarray.array([[3.0462837092170485, -0.97349888574622412, -2.1904588229979574, 1.9088050283705336, 3.393007741381993], [4.9591954971144467, 1.5138905431237184, 3.5288413529528277, 3.1785441452145164, -1.2645953476570861], [-1.3999242230609554, -1.7693051569458849, 1.8763148280220374, 4.2267861866780674, -0.95866741024447499], [-1.0020755729038622, -2.8366665140756608, 2.373662377734135, -2.2831337439497079, -3.0374760390458109]])
      sub=res.substitute({arg0:s0})
      ref=Data(numarray.array([[0.97666917664908182, -0.31211352781548146, -0.70228311587267933, 0.61198207829481144, 1.0878323864297039], [1.589967923326967, 0.48536852487370369, 1.131382007619864, 1.0190732018349355, -0.40544197943662547], [-0.44882977713834177, -0.56725701734440448, 0.60156539349046501, 1.3551501366481711, -0.30735840769224537], [-0.32127550095447782, -0.90946379693648527, 0.76102001697679744, -0.73199562704427623, -0.97384534906259934]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[-0.93369748623782545, 0.29838109291212128, 0.67138391954514298, -0.58505596550813677, -1.039969714353393], [-1.5200121890839242, -0.46401318113509921, -1.0816032303934637, -0.97423581044115259, 0.38760326020945202], [0.42908207270405729, 0.54229872694706682, -0.57509759613467115, -1.295525963463334, 0.29383518953769777], [0.30713995568099617, 0.86944902258240297, -0.72753650244785883, 0.69978913356645245, 0.93099790199568344]]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_div_overloaded_Symbol_rank2_taggedData_rank2(self):
      arg0=Symbol(shape=(4, 5))
      arg1=Data(numarray.array([[-4.2400152931057988, 2.0380491194835235, 0.91101349191802861, -4.4834079091239971, -2.2154734695518252], [-4.5332053408256243, -3.9823629323026264, -2.1535347807161043, -0.092528910394756636, 4.6087455584438271], [1.0777725216549641, 1.6282680237741873, 0.194097001670678, -2.4480536007048768, 3.6026891519391757], [0.74551046837404567, 4.4225945068445291, 4.5230132131405796, -4.8616083864649928, -4.5205712640253441]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[0.56705377199597873, 2.3039719977109421, 2.9960000717338797, -3.2818407291842089, -1.4460264608849469], [1.3157515984200341, 2.3734508747145036, 2.7570426675429704, -4.8178820558450539, -0.10654482177862601], [-3.1115559014344649, -0.57989246992490528, -2.4903638922672924, -4.6560314177869468, -3.8541104055725994], [4.4341234642152507, 4.4601355033505214, 4.5281414945421545, -3.2369430202845786, -2.4374147482839481]]))
      res=arg0/arg1
      s0=numarray.array([[0.017132904094092183, 2.7183087292861465, -0.86108106344755342, 2.037152925610064, 2.5289640943219185], [4.6078788216918749, -3.5209975243753378, -0.26938305767388204, -1.7418837579301694, 0.71178842325440339], [4.6707026471356468, -1.4975249190877959, -0.46075714347325913, 3.3514661400547681, 4.3608131735861164], [-3.2808604108926698, 1.2496442565578922, -1.309165243333037, -4.8657613996693438, -2.9231190070873971]])
      sub=res.substitute({arg0:s0})
      ref=Data(numarray.array([[-0.0040407646929835435, 1.3337797913207374, -0.94519024261062423, -0.4543759940879657, -1.1415005095202111], [-1.016472556447807, 0.88414782485419419, 0.12508878894647127, 18.82529201412575, 0.15444298545627314], [4.3336627658344735, -0.91970418703958823, -2.3738498766458025, -1.369032989755522, 1.2104328155091799], [-4.4008240662913947, 0.28255908485933051, -0.2894453722862354, 1.0008542467583184, 0.64662602055398299]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[0.030213896706454996, 1.1798358365409212, -0.28741022791405296, -0.62073485391731786, -1.7489058206958603], [3.5020887128125517, -1.4834929013640823, -0.097707250179755706, 0.36154553759092467, -6.6806477440388896], [-1.5010826721713071, 2.5824182874485713, 0.18501599099791549, -0.71981175368609296, -1.1314707454360631], [-0.73991183091094082, 0.28018078276302155, -0.28911756510060382, 1.5031964940926166, 1.1992702551526806]]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_div_overloaded_Symbol_rank3_taggedData_rank0(self):
      arg0=Symbol(shape=(6, 2, 2))
      arg1=Data(-1.67731234215,self.functionspace)
      arg1.setTaggedValue(1,-1.72067089907)
      res=arg0/arg1
      s0=numarray.array([[[4.5907749563300388, 1.5875718307876756], [-1.8879761511868267, -0.5888012600844208]], [[3.6067233527838738, -2.0743244145580011], [-3.5920105448857855, -0.10157831239624304]], [[-2.2109196550890289, -1.5749219083910426], [-2.0748226541734049, 3.8872771127942976]], [[2.2974774134784433, -1.1183945602327396], [3.4266016234789518, -3.3321791567926917]], [[4.574171588479846, 4.2279402312718091], [-0.12309602723303481, 2.8405730382721517]], [[2.4146010338472292, -0.83691233346034366], [2.3832257449536778, -1.5769241986659921]]])
      sub=res.substitute({arg0:s0})
      ref=Data(numarray.array([[[-2.7369827556582464, -0.94649743574193157], [1.1255960525286268, 0.35103853068180096]], [[-2.1502991793113013, 1.2366953741563409], [2.1415275226983246, 0.060560165118535229]], [[1.3181323475202638, 0.93895565471599396], [1.23699242056975, -2.3175630531644127]], [[-1.3697373802944357, 0.6667777563694921], [-2.0429120667395666, 1.9866181587337588]], [[-2.7270839625516126, -2.5206636384971954], [0.07338885199813594, -1.6935265823079702]], [[-1.4395655318111238, 0.49896033817127683], [-1.4208598393142526, 0.94014940392097346]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[-2.6680145278227148, -0.92264699289239427], [1.0972325691120499, 0.34219283908470866]], [[-2.0961145764281777, 1.2055323395513056], [2.0875639535833268, 0.059034131658142433]], [[1.2849172123962946, 0.91529525444929982], [1.2058219008007416, -2.259163629074723]], [[-1.3352218688160773, 0.64997586745664215], [-1.9914334724460609, 1.9365580940473801]], [[-2.6583651707846356, -2.4571463570100476], [0.071539553147154211, -1.6508520251034418]], [[-1.4032904462714451, 0.48638721902657306], [-1.3850561116811149, 0.91645892280449059]]]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_div_overloaded_Symbol_rank3_taggedData_rank3(self):
      arg0=Symbol(shape=(6, 2, 2))
      arg1=Data(numarray.array([[[-1.1948669336416184, -4.8482630862083242], [0.92944539503691459, -3.4094883291268498]], [[1.8841788799368029, 1.825366586557843], [-4.5424287789410833, -0.69073134489368826]], [[-3.801163324551168, -1.701745464906359], [0.37544764774162154, 3.7891887673484721]], [[-3.9790561947478964, 4.7856572382120071], [0.32621319833563778, 2.0137078118978371]], [[0.49765355228984198, 4.9015467368389345], [-0.59290340205704872, 0.79141400459364242]], [[4.1011904097859606, 2.5199788684829034], [-2.5856368937631702, 4.1387732113108342]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[-1.0216083037215498, 3.0257683549384051], [3.6767690562700519, 3.8224721501187275]], [[-2.3159120339101511, -0.044855829302194117], [4.9740059686176359, -1.2924878794982697]], [[-2.5359543133445897, -0.58793341762563589], [4.4426197657945607, -2.850864809224408]], [[-2.1680607667951191, 3.8939752851173761], [-3.7004502417092953, -3.9600228505699064]], [[-2.7257226465019002, -0.93072740919210162], [3.3056380363385927, 1.3462954530613622]], [[1.5375865561259614, -3.3799194674592261], [-4.0972461177403847, 1.7917499356364708]]]))
      res=arg0/arg1
      s0=numarray.array([[[-3.389872055955486, -0.5933997853304902], [-2.423328002705575, 4.9497795406620746]], [[-4.7310145480330732, 0.22504905282839527], [-3.3723177605622832, -3.2680729972445413]], [[-1.9564365277772842, -0.70039232833582243], [1.0017249271848776, 1.0630312237037991]], [[1.4102668307735104, -2.414978988988171], [0.59551903248164084, 1.9132581873595829]], [[-4.0218373652613995, -0.61991406467677024], [-0.87499991587414172, 2.6970179606598919]], [[1.9739600165881015, 0.63286922634186027], [-0.67323236454096236, -1.7729676626032944]]])
      sub=res.substitute({arg0:s0})
      ref=Data(numarray.array([[[2.837028928086669, 0.12239430385255139], [-2.607283887408284, -1.4517660900542471]], [[-2.5109158150587887, 0.12328978435656482], [0.74240410244768373, 4.7313228528054365]], [[0.51469415037784394, 0.41157290721756823], [2.6680815107257043, 0.28054322151062094]], [[-0.35442244636679771, -0.50462849067110438], [1.8255516193704608, 0.95011708056910971]], [[-8.0816008380846682, -0.12647315183544697], [1.4757883203880653, 3.4078471508028172]], [[0.48131391604690738, 0.25114068782761856], [0.26037390097769336, -0.42837999863291837]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[3.3181719878418607, -0.19611540465812358], [-0.65909170949234241, 1.2949157891204865]], [[2.0428299860963626, -5.0171640192456994], [-0.67798828184750048, 2.5285134577147237]], [[0.7714794061873308, 1.1912783103303617], [0.22548068031784835, -0.3728802643549422]], [[-0.65047384850665491, -0.62018344035672945], [-0.16093150659595448, -0.4831432190054753]], [[1.4755123271338295, 0.66605330256135209], [-0.26469925208245532, 2.0032883231738623]], [[1.2838041596575924, -0.18724387738670134], [0.16431338152374586, -0.98951735805336893]]]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_div_overloaded_Symbol_rank4_taggedData_rank0(self):
      arg0=Symbol(shape=(3, 2, 3, 4))
      arg1=Data(-2.34724786312,self.functionspace)
      arg1.setTaggedValue(1,-1.14150112823)
      res=arg0/arg1
      s0=numarray.array([[[[2.2373818557840162, 3.1340257495409869, -1.0536941198940699, 3.0161396623260934], [4.4248609199024767, -0.84999637952951801, -2.7984893689500288, -4.5581163527918536], [-0.23985414177654718, -0.88021658848877582, -1.582528376701331, -3.9645526610286472]], [[-2.1718523722532304, -4.6417248516403644, 3.6813647679482635, 2.0893635746900205], [-3.05829042517784, 0.66742963575652592, 2.0437930000368993, 1.982729909589076], [0.023962079976154627, 4.7181467187026858, 2.4603727771681374, -2.7339273555556751]]], [[[-3.0142761694704867, -4.0787996727202769, 0.2882880314951306, -0.8144833397716571], [-4.0606517594340019, -2.6551868175558901, -0.36122150095975414, 2.8344702233426151], [4.851552973728495, -3.7441147014353779, -1.5930789932971212, -2.5739038690044449]], [[3.1227057076592359, 2.6062531121577113, 4.226008650652318, 3.6576049512725017], [4.1709498204014306, 2.3629490924611467, -2.8826381543852886, -4.934185709330551], [0.94242568243803326, 3.5209248862219802, -1.4876976889685123, -4.3246274027484066]]], [[[-2.4214617470603472, 0.56743293566357877, -4.1180645751103242, 2.7064584738833251], [0.91799564887180019, -3.6714660524712448, -2.0854788736244059, 2.320110352201783], [-0.57135518535499763, 4.6990094353684047, -2.5996606036461545, 4.8034218637291861]], [[3.0823625263780698, 1.6553904381646278, -0.80587803646322165, -3.494766453085246], [-2.5825603806173225, -3.1843609182842911, 3.7592232009521513, 3.2264265481707373], [-4.4497547126401464, -2.2371965590569687, 2.731184887770751, -1.7407215233271445]]]])
      sub=res.substitute({arg0:s0})
      ref=Data(numarray.array([[[[-0.95319369161669543, -1.3351916509486228, 0.44890620051295788, -1.284968541124021], [-1.8851272545313096, 0.3621246792406187, 1.1922428018460964, 1.9418981797425969], [0.10218526366364331, 0.37499942052129687, 0.67420590793498225, 1.6890217361892699]], [[0.92527611011179078, 1.9775179794928794, -1.5683749576661394, -0.89013333765074132], [1.3029260664088755, -0.28434561438696293, -0.8707188670406355, -0.84470410677295249], [-0.010208585276687885, -2.0100760524016494, -1.0481947031792285, 1.1647373924648239]]], [[[1.2841746356805916, 1.7376944875790232, -0.12281959482211907, 0.3469950287610567], [1.7299629166736077, 1.1311914942079531, 0.15389150274059871, -1.2075717557916776], [-2.066911232495773, 1.5951083651060265, 0.67870079608104239, 1.0965624506251836]], [[-1.3303689638947223, -1.1103442261511423, -1.8004100534317697, -1.5582525427950449], [-1.7769532932335648, -1.0066892080681955, 1.2280927803496495, 2.1021153270017194], [-0.4015024136336835, -1.5000226186365406, 0.63380510952637947, 1.8424246841172243]]], [[[1.0316174039859014, -0.24174393534649199, 1.7544225472812072, -1.1530348014841376], [-0.39109446569170936, 1.5641577995071909, 0.88847833515754238, -0.98843858318426248], [0.24341493471262204, -2.00192297933468, 1.1075356141527477, -2.046405894838168]], [[-1.3131815241210671, -0.70524739384202939, 0.3433289040864313, 1.4888783191580883], [1.1002503916172277, 1.3566359856242372, -1.6015450519826775, -1.3745572416396046], [1.8957327781868347, 0.9531147494947495, -1.1635690165859842, 0.74160106850218965]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[-1.960034730104296, -2.7455301374958823, 0.9230775982919327, -2.6422572766116468], [-3.8763526469427698, 0.74463034552363672, 2.4515870372282191, 3.9930896606818651], [0.21012168612436227, 0.77110444021517444, 1.3863572602466003, 3.4731044612948212]], [[1.9026283185728454, 4.0663340025233436, -3.2250207002918914, -1.8303648792093496], [2.6791830069585854, -0.58469467900696848, -1.7904432588743939, -1.7369495838024231], [-0.020991726931807952, -4.133282571536868, -2.1553835702144157, 2.395028167685564]]], [[[2.6406247833888883, 3.5731893485246577, -0.25255168336289763, 0.71351952234562777], [3.5572910608773953, 2.3260483515009933, 0.3164442785263506, -2.4831076844731137], [-4.2501517114146958, 3.279992116381873, 1.395600016416408, 2.2548412834208396]], [[-2.7356133344355964, -2.2831804960184012, -3.7021502179372909, -3.2042061639868735], [-3.6539165115578136, -2.0700365808005237, 2.5253046914242696, 4.3225412461759856], [-0.82560205954360977, -3.0844690374345261, 1.3032818384291351, 3.7885441335079282]]], [[[2.121295973500319, -0.49709362665584034, 3.607586951311903, -2.3709643441876906], [-0.80420038681454797, 3.2163490352078909, 1.8269617278943455, -2.0325081551161883], [0.50052967204766641, -4.1165175567147143, 2.2774051986064929, -4.2079869611494543]], [[-2.7002711168210398, -1.450187299185131, 0.70598093732313305, 3.0615532185274565], [2.2624247289372712, 2.7896257301313043, -3.2932277577168936, -2.8264768806436766], [3.8981605909929611, 1.959872402864782, -2.3926256577649854, 1.5249406945626993]]]]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_div_overloaded_Symbol_rank4_taggedData_rank4(self):
      arg0=Symbol(shape=(3, 2, 3, 4))
      arg1=Data(numarray.array([[[[-4.692244649272256, 1.0356733816668493, -1.4115435735313939, -3.3533239896597], [-1.7559316701608063, 0.25583175712406359, 1.1225449156205647, 1.5491515905051383], [-3.4099511613632316, 1.4749821375305574, 0.88895191602829637, -0.20648918924605741]], [[-4.3419539072386391, -2.5743904544580722, -2.2486440163371837, -3.9767602694345348], [-2.3487522239863603, 2.3113499953832619, -3.9655787887451699, 4.6511096002030143], [-2.3962332651787399, -0.66856762307285855, 3.1652536747762454, -3.8524545464225444]]], [[[0.52869939407037414, -4.6169772559763977, 3.9054435061353825, 3.1123662657564886], [-0.944914545508305, 4.1348614834104538, 4.916828368912519, -3.1901061735337279], [1.5585733480276041, -2.5968351957220404, -0.60243324405629117, 1.3988240180012514]], [[-4.4299304783051818, -2.0781122206261973, -0.52551578674964983, 3.2474443643928588], [-0.13292178094243123, -4.8658444131397838, 0.40539257466406831, 4.1591773218399659], [-4.4274711916813212, 4.5441020180139819, 0.96965640881446635, -1.1281604296420156]]], [[[2.3380322834013754, -0.31956081844297124, 0.2961722340211761, -3.7319983310204363], [-4.5019872727389085, 1.2884371570347, -2.9351049981613642, -4.685290159641041], [1.6944724390118786, 0.055906721011096394, -4.7035466615486481, -0.47983210077196148]], [[-0.86302542714260877, -4.8477625213575104, 4.6227141939572576, 3.0092738439168585], [-4.96716961060479, -0.70539310773829911, -4.2299798154973907, -3.2296469596672295], [-1.9222247911212822, 0.73599414632792737, -4.0955146048137081, -2.3603850862550599]]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[[3.4003771586744396, 3.0662705755449782, -2.7499254065200751, 3.9113769149389412], [4.4222946755925676, 4.215093108259742, 1.4794877017904637, -1.1740072654262166], [-4.765335827712736, -3.3421053903750453, -4.8137826631026268, -1.8772778150029943]], [[3.5882188990795445, 0.51382540173399427, -4.143893994755584, -1.8285016096973838], [-1.8708161869798756, 2.2370449376942094, 1.7499548523941559, -2.5362886583866984], [-1.5477536924401591, 0.48074055259244464, -2.3864247410680459, 4.2043813221572002]]], [[[-1.3895049239395316, 3.2431718872202957, 1.4357238260131, 0.20179321757892765], [0.68941011919723394, -1.78770894200033, 4.0371355207474977, -4.6650351532376799], [1.882751181321737, -1.9112360199045408, -3.076139157936022, 3.8609093825317]], [[-4.6591702336609107, 2.9429556481184926, -4.1993028203300131, 3.7115098940409226], [-1.0393532624583135, 2.3958807218009639, 3.2441749097022985, 3.3881023550429799], [-3.7865124084870896, -2.9548151227110053, -2.6059301846590177, 3.6399756365380327]]], [[[-4.9501548026635902, -1.6891710122974724, -3.9758740967684805, -2.1548334947738712], [3.25685029448222, 1.4989420208118256, 0.42094169001293924, -0.31774079392453114], [0.11496458521239639, -2.3202208701728577, 1.9900496913140007, 3.0570361041433074]], [[3.2562985953506782, -2.6912814261326714, -0.76604404638984569, -1.4344622252523411], [-4.6567619773097508, -4.6660681115099445, 3.0433603387552903, 2.3631818456893843], [1.262914703318474, 4.338064437492319, -2.3846981616547938, -0.88396708643685074]]]]))
      res=arg0/arg1
      s0=numarray.array([[[[-2.1209295269444373, 1.0665616767500126, -2.3101036734749805, 0.35739505998499155], [-2.4118486651096029, -0.94755073159174774, 4.0609633272175429, 3.241288174830018], [4.077556586891669, -1.5508191087143763, 0.04985063800477807, 1.6072176458651164]], [[-3.7145107312034975, 3.9223709738482508, -1.3831440847043952, 1.0221924700528149], [-3.5776623939752525, 4.0531180305170977, 1.3358867116773689, 1.1140419021297143], [2.7257423898833402, -2.9472476788073667, -0.17475536917173162, 3.7154089354077939]]], [[[-2.9260311239199677, -4.9275767527897081, -0.55168176160118065, -4.7260207976806692], [-1.3240177968179956, -2.3260764369285605, 4.2832126128475423, -3.3837842195212318], [-1.9699329042942115, -0.48363898781816328, 0.63404158347792805, 1.4045902260206216]], [[4.05410845868807, 3.5719006793752612, 3.976985979175776, -2.7148922990018143], [-1.5263557864720401, 1.239157450503833, -0.82782452001640117, 2.4361578920361735], [3.9457440108646757, -2.6242296080852667, 2.7048290875229721, 2.005969207848417]]], [[[-4.0429918921704742, -1.0009300986381717, -4.8836419651579019, 1.2944810856306148], [-4.7328465040912331, -3.9494459317315411, 2.608846054382898, -0.14096873524613773], [-0.031606871343319298, 4.9089766217980486, 4.0560091899621309, -0.67116564976284732]], [[1.3369779542251621, 1.1098178792322466, -4.1680232848868028, -4.1932781823317669], [-1.6319622508081189, 3.3109558863002171, 2.0153210378206579, 2.0931334324761046], [-4.1181183898438745, 0.82340257974590259, 4.8184523031135775, 3.4622807772219701]]]])
      sub=res.substitute({arg0:s0})
      ref=Data(numarray.array([[[[0.45200744749602578, 1.0298243593298213, 1.6365797817318333, -0.10657934070404587], [1.3735435758093755, -3.7038041806992732, 3.6176399453669639, 2.0922989039265794], [-1.1957815211821221, -1.0514155183674201, 0.056077991515562767, -7.7835437861587886]], [[0.85549289802705952, -1.5236115279466953, 0.61510140095780863, -0.25704151138035858], [1.5232183103176187, 1.7535717388594887, -0.33687055101988889, 0.23952174811814539], [-1.1375112888602779, 4.4083015346469807, -0.055210541437594331, -0.96442641714176403]]], [[[-5.5343946990234105, 1.0672733434870745, -0.14125969578986314, -1.5184654999246907], [1.4012037417687933, -0.56255244492736944, 0.87113323701288425, 1.0607121003038478], [-1.2639333957475847, 0.18624169474246874, -1.0524677874826633, 1.0041221825942117]], [[-0.91516299827782055, -1.7188199193106815, -7.5677764197602881, -0.83600887170530158], [11.483112667088839, -0.25466442107306136, -2.0420317779682677, 0.58573071151447065], [-0.8911958632905953, -0.57750235309025844, 2.7894716756732261, -1.7780886079162916]]], [[[-1.7292284289114772, 3.1322053295366605, -16.489195826536275, -0.34686003872800936], [1.0512794055972252, -3.0652996230107754, -0.88884249661158821, 0.030087514421292087], [-0.018652927374699972, 87.806555866936151, -0.86232995690674941, 1.3987510395470946]], [[-1.5491756235407372, -0.22893404417868768, -0.90163983971476758, -1.3934518424796505], [0.32854973329759424, -4.6937740813999875, -0.47643750696802845, -0.64809976403481984], [2.1423708657100775, 1.1187624030083383, -1.1765193798723503, -1.4668287803475135]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[-0.62373361188299292, 0.34783677776396138, 0.8400604860036287, 0.091373208912690712], [-0.54538397868894295, -0.22479947826892888, 2.74484426082285, -2.7608757375562636], [-0.85567035237657385, 0.46402459754279207, -0.010355814022697868, -0.8561426726616661]], [[-1.0351962451778931, 7.6336649776587917, 0.3337788289118569, -0.55903285216248033], [1.9123537731148237, 1.8118178862757985, 0.76338352949489507, -0.43924097458147471], [-1.7610957112859387, -6.1306408683728044, 0.073228946282848095, 0.88369932475617541]]], [[[2.1058083879430014, -1.5193695937630696, -0.38425339999626568, -23.420117159448999], [-1.9205082141232774, 1.3011494110030195, 1.0609533890639575, 0.7253502081699813], [-1.0463054937037781, 0.25305037304723843, -0.20611602756727918, 0.36379777064324537]], [[-0.87013529349035668, 1.2137120318679859, -0.94705863076176877, -0.73147920294130309], [1.4685630397328544, 0.51720331451741408, -0.25517259181699498, 0.71903314503179161], [-1.042052312312693, 0.88811972969651298, -1.0379514783036659, 0.55109413033222576]]], [[[0.81674049668002546, 0.59255699473364065, 1.2283190680326721, -0.60073369416714861], [-1.4531974380614476, -2.6348223459587348, 6.1976423725165004, 0.44365954243703504], [-0.27492702456957324, -2.1157367752805047, 2.038144679334116, -0.21954783224613969]], [[0.41058211189050364, -0.41237526051931228, 5.4409707960391405, 2.9232405765122973], [0.35045000340578214, -0.70958155928606625, 0.66220257001998906, 0.88572677396541966], [-3.2608048501003104, 0.18980874802816031, -2.0205711484131599, -3.9167530447066143]]]]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_pow_overloaded_float_rank0_taggedData_rank0(self):
      arg0=0.341812064896
      arg1=Data(4.30670501129,self.functionspace)
      arg1.setTaggedValue(1,3.64191179292)
      res=arg0**arg1
      ref=Data(0.00982109262741,self.functionspace)
      ref.setTaggedValue(1,0.0200490957504)
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_pow_overloaded_float_rank0_taggedData_rank1(self):
      arg0=2.71918984915
      arg1=Data(numarray.array([3.6696137015868118, 0.10205613053632596]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([2.0744420420962988, 0.15604693286805166]))
      res=arg0**arg1
      ref=Data(numarray.array([39.284863912783393, 1.1074833798224062]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([7.9656207691933547, 1.1689419815449242]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_pow_overloaded_float_rank0_taggedData_rank2(self):
      arg0=4.4483395692
      arg1=Data(numarray.array([[2.4529759744254518, 0.7580664327558474, 3.8975000203490939, 3.4541350498163998, 2.9544320655798217], [0.51290472026154688, 4.8961671628638266, 3.2135251243961367, 2.2462684812562461, 0.40911836554684933], [0.49170040047395686, 1.6842515195955219, 1.3170700476689892, 4.1425294249616993, 3.5304507633256805], [3.947444976634118, 0.11124097097693472, 3.9923991533874283, 1.7047022614872385, 2.8975607347873065]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[1.367948443330212, 4.7927959789646231, 2.3429313409787804, 4.9593367032554436, 4.2265558126195799], [3.4900286322554974, 2.8595582096739616, 1.8509445481474043, 0.5564155380820085, 4.3906066414576292], [4.6766848736409896, 3.2257976245481674, 4.7778474579462165, 2.0847486832037205, 1.7898532863269634], [1.4356217054626659, 0.92982462549186062, 2.7611923306294219, 1.3646256492703579, 3.9619562449225665]]))
      res=arg0**arg1
      ref=Data(numarray.array([[38.905764567917963, 3.1001099299365245, 336.00942079583973, 173.36570774432349, 82.235011176537952], [2.150125347731461, 1491.7135365638999, 121.05990834187568, 28.577654722949994, 1.8415761361989709], [2.0831434757725034, 12.351746001040247, 7.1403924396906904, 484.37197478038973, 194.28124800097655], [362.01425445908728, 1.1806092113877813, 387.13717427618201, 12.734575745284882, 75.542765004391114]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[7.7037353055247513, 1278.4402727482807, 33.012867631466662, 1639.1994369435079, 549.09152187901964], [182.90658566677064, 71.377234712123865, 15.840848073557623, 2.294390845812015, 701.42646220920267], [1075.0222789059023, 123.29780636599452, 1250.2326681663551, 22.455864839588571, 14.460363130951452], [8.5225002163523413, 4.0059949692425398, 61.630992150805056, 7.6656241919499521, 369.9404712831535]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_pow_overloaded_float_rank0_taggedData_rank3(self):
      arg0=3.9897936579
      arg1=Data(numarray.array([[[2.889727106362701, 1.3623716131192851], [2.9916597036534092, 3.4367308950490072]], [[3.3335872229779913, 1.5322214297481302], [4.7494147088593879, 3.6775797357334379]], [[4.685707621980133, 4.2506337725961352], [0.15321167564939667, 2.5577348615722117]], [[3.6361368676688279, 4.2834060370927194], [0.37638972870613419, 0.39030513216716933]], [[3.4140922088424324, 3.6871164394652509], [3.9581489155415834, 3.3148416225122186]], [[0.35997218987828361, 2.6122533672231647], [1.5937950637694218, 1.5725008654108865]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[0.68058173710671155, 3.6604896813370336], [0.013910592130982523, 4.1640866365439138]], [[1.2628720805564884, 1.4181377509080724], [3.068393656986165, 2.3871991576613487]], [[2.6698285170199094, 1.4193369447656969], [0.46164979577366916, 2.1969148005263128]], [[1.2834781040798817, 3.0914843479670262], [3.6005580804044293, 4.3792710341621239]], [[3.7534608128402835, 2.9947985761366493], [0.53622360363926969, 2.6873369507418534]], [[1.1972181696962809, 3.2164783088599913], [3.0875364909104346, 1.0164281755144038]]]))
      res=arg0**arg1
      ref=Data(numarray.array([[[54.523379096101252, 6.5874573196153481], [62.782586289507627, 116.22643811597655]], [[100.76754870055993, 8.3327650318245841], [714.76427612640032, 162.19712216078111]], [[654.45235790561503, 358.44309402018331], [1.2361541272919527, 34.440692824698289]], [[153.15741747367267, 375.07206890646461], [1.6834164683828434, 1.7161452365879322]], [[112.64196040084123, 164.35171133165582], [239.13949905472657, 98.187345080054001]], [[1.6456044167800061, 37.139392797469], [9.0738550613751467, 8.8103889216644493]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[2.564459775636728, 158.40645271869869], [1.0194350853765908, 317.98722907748692]], [[5.7401537744364708, 7.1159108619175973], [69.815604851474347, 27.201219423427464]], [[40.219309519822779, 7.127728606939832], [1.8942122717654939, 20.90436147123215]], [[5.9061806413967508, 72.082338184950487], [145.79980629661623, 428.27708277753862]], [[180.15400056508486, 63.05586809159955], [2.1001185365211592, 41.205606541304057]], [[5.2416591987144212, 85.692742263889059], [71.689639962920467, 4.0815296418305298]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_pow_overloaded_float_rank0_taggedData_rank4(self):
      arg0=2.00273786518
      arg1=Data(numarray.array([[[[4.058085214998175, 1.6160604376121306, 3.392298211100885, 1.0452007249155919], [2.5273517683292699, 3.0494177512997704, 0.33690014082657282, 0.12528978101802304], [4.5197516324925351, 0.23226248241823033, 3.5664208665570021, 4.7732489962057079]], [[4.4549507097535654, 0.55109845956885817, 2.7253278884059697, 4.496324732480609], [1.586341752881361, 2.4991507441211032, 3.2436198792465789, 1.8861809587343012], [3.3856069070921238, 2.8132833163000455, 1.8557615185276446, 1.2515630764821439]]], [[[3.9029634096168433, 3.4238838330903647, 0.168526403580252, 2.6183355793979], [4.012617066171174, 3.1192068434369804, 1.5566641170696784, 4.2941982176726397], [1.4311511821530991, 3.0032853336479115, 1.5699302744706125, 3.3894002471002085]], [[2.0541298653067361, 0.041957272399514252, 3.9926465817541326, 2.9475866810662157], [3.6248456625161114, 2.5516057015658311, 0.10278482539076957, 4.5989676951872394], [1.3614783963249981, 3.4546685791640237, 1.0699048554869663, 2.0764514576328352]]], [[[2.2381377204691408, 3.8176327781348736, 0.90064790493230951, 4.6989234806143587], [2.1736357404880438, 3.1637074985297562, 3.1423445423973613, 3.5095763892793981], [2.5804729333454222, 0.89043093205556245, 0.3803504224422426, 1.8258865124301544]], [[4.8909917949317609, 4.6840264802036744, 4.5827397185651009, 2.325986597602165], [4.6542743462709959, 4.3602860031505459, 1.9718692294021449, 1.6727430742597078], [4.0944735363242009, 3.4603064237310965, 3.0807314616342185, 1.2081156932037695]]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[[2.7870810246480366, 2.0753323950124378, 1.6206774020250057, 1.6693164535030807], [0.22495732068957769, 1.4826277903660066, 1.6654536412954513, 3.7011690087174687], [2.8688237888109613, 4.131833355592474, 0.58743394654963033, 3.1170748037096057]], [[2.2316988612632387, 4.8338802120706443, 1.1830725418117809, 2.2558696691891198], [0.1828771012820089, 1.6175444987052734, 2.0276687081781493, 2.1722295435556092], [1.7526525704637648, 2.5413810371959822, 1.2335871661409938, 3.1822782500328279]]], [[[4.8612724338078301, 0.7675517686181661, 2.175206221217064, 0.64847845944287819], [2.7137589100492434, 3.4524463464048054, 1.6167573912489441, 0.16158562025267317], [4.0907368103502781, 1.468174509078422, 3.8588398986692334, 4.8128173918988981]], [[0.15544289923049187, 3.7268756946718211, 2.9147996475422486, 3.6294512035901425], [4.29461385610918, 4.4680526078126217, 0.060265276226098695, 2.316238253151544], [3.1881249924409127, 0.73957031720346222, 0.085295929508293178, 2.3155430777698207]]], [[[1.5940476159630346, 2.2712827258710178, 0.24608800148241564, 3.9476270044554274], [0.31300686021970531, 1.1763364711836799, 0.76136985552643244, 3.8726250916336724], [2.6397833251035379, 3.9748466473005739, 3.8288284623159541, 2.0374679133608966]], [[0.47517472829931101, 4.0767363652225068, 0.52520993483385048, 1.5660106079134684], [1.6486334521439767, 0.28245826998834422, 4.2578225614767797, 4.047421985445852], [3.2269014632928079, 3.0865258235349415, 4.5301478170774354, 3.4909708031440467]]]]))
      res=arg0**arg1
      ref=Data(numarray.array([[[[16.750058845591397, 3.0721526379826374, 10.548699609572795, 2.0666062446181979], [5.7850914043791031, 8.3133853562698778, 1.2636220765441493, 1.0909137572305785], [23.081607888717194, 1.1750489650261489, 11.904701658561461, 27.524977675184346]], [[22.065843738793575, 1.4663058992285734, 6.6378066215549509, 22.709100960148394], [3.0093930782835683, 5.6728867856068153, 9.5137986534737795, 3.7061044164408381], [10.499791295855353, 7.055926912267954, 3.628627724725646, 2.385072570137162]]], [[[15.039308247944584, 10.782659979803462, 1.1241690550540289, 6.1624461340705841], [16.229384415515096, 8.7262567079767237, 2.9479996476896653, 19.734844610529727], [2.7019026677952165, 8.0512490841275621, 2.9752866951568713, 10.527489804478877]], [[4.1646172182532135, 1.0295686853650003, 16.005839869392002, 7.7457451954453456], [12.397692008655882, 5.8833650491927445, 1.0739953013827201, 24.387064856692479], [2.5742736313898518, 11.015680522547886, 2.1023697483406334, 4.2296830097635185]]], [[[4.7323438821950701, 14.173923521480578, 1.8692058081325049, 26.140182058429897], [4.5250245885470779, 9.0001646657529406, 8.8676158851323628, 11.443868303875972], [6.0025094057468991, 1.8559891647626132, 1.3023354347347804, 3.5541143150273866]], [[29.870400260851106, 25.871124951438134, 24.113751679060641, 5.0300654379866412], [25.342027194461846, 20.661763233119618, 3.9333563988776534, 3.1955060146113112], [17.178764738937865, 11.058897730257282, 8.4961639056616765, 2.3141783138707765]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[6.9286852125785368, 4.2263969519979208, 3.0820194655202178, 3.1879102631117733], [1.1691023982577264, 2.8002466491192726, 3.1793692577325836, 13.072594935061897], [7.3334176438266114, 17.6303345843294, 1.503779779154625, 8.7133450051819885]], [[4.7112286301679207, 28.708784932966971, 2.2742761723956582, 4.7909835415904132], [1.1354294192926007, 3.0753207471873583, 4.0887802238112432, 4.5206074931782005], [3.3778648551221635, 5.8417341771948292, 2.3554811322786962, 9.1169976252798239]]], [[[29.260178173166832, 1.7041668707386901, 4.529962828226199, 1.5689053267278315], [6.5846866575461958, 10.998692316424849, 3.0736400576927507, 1.1187630615338042], [17.134239987654585, 2.7722783164873048, 14.585426938009, 28.291876751816698]], [[1.1140003466430173, 13.308084833978867, 7.5713591317368989, 12.437410980682518], [19.740542235230951, 22.267547463257269, 1.042743425368402, 4.9961250421125465], [9.1540938403147862, 1.6713685966647158, 1.0610291332840969, 4.9937134459319727]]], [[[3.0255420398866604, 4.8425445904748727, 1.1863861667386619, 15.513131639293059], [1.2428262437334108, 2.2636612679395824, 1.6968658298480934, 14.725738793712299], [6.254927688836438, 15.809188519363234, 14.284563479653341, 4.1167021282117702]], [[1.3909904683391461, 16.968442210027412, 1.4401773573943464, 2.9671981822001441], [3.1424443542515723, 1.2167356249730308, 19.242519541811749, 16.626469883428879], [9.4039709445950059, 8.530423671641044, 23.248867311915969, 11.296943532689685]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_pow_overloaded_constData_rank0_taggedData_rank0(self):
      arg0=Data(4.55643012421,self.functionspace)
      arg1=Data(1.24128234849,self.functionspace)
      arg1.setTaggedValue(1,1.68030941449)
      res=arg0**arg1
      ref=Data(6.56960460868,self.functionspace)
      ref.setTaggedValue(1,12.7847814496)
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_pow_overloaded_constData_rank0_taggedData_rank1(self):
      arg0=Data(3.0094808045,self.functionspace)
      arg1=Data(numarray.array([1.6051098220873756, 2.0276264453603789]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([2.6474204007584783, 2.7629035821626156]))
      res=arg0**arg1
      ref=Data(numarray.array([5.8618072130665562, 9.3368885872973895]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([18.482825535456261, 20.990659982378546]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_pow_overloaded_constData_rank0_taggedData_rank2(self):
      arg0=Data(0.404198776323,self.functionspace)
      arg1=Data(numarray.array([[0.97551977185426952, 1.4396629950831479, 3.9845454765670216, 1.2181972051930621, 3.2616839565831786], [0.85626854259842944, 4.6833651815307373, 1.4119157027260401, 0.95508116999430259, 4.8209911885144408], [1.7381470133593711, 4.5072491077204067, 1.3229767219652921, 0.86776910285896558, 4.5206676255765155], [2.8467090265669235, 1.0682554785066256, 4.8517256081204776, 3.9112556762572908, 4.4092273617138922]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[2.6887963309577376, 4.8625339153500438, 2.6314904728682365, 2.6171124012857181, 4.9896476348774383], [2.5369341113244834, 0.98224310844198048, 3.5441026151608215, 0.98494092741569816, 3.5575759380562157], [2.208836584701392, 2.9560097019079881, 1.7556379897808643, 2.0904006426361996, 4.3206076980388071], [1.1470996029389111, 3.5983079423163056, 2.6789819577553837, 1.9658666647326677, 3.3649620041934782]]))
      res=arg0**arg1
      ref=Data(numarray.array([[0.41326215751375905, 0.27141220375668262, 0.027068230398711174, 0.33170737054455335, 0.052099937794538795], [0.46040461599628646, 0.014372777236133831, 0.27832056351186385, 0.42098467534134137, 0.012688139195740748], [0.20711152404310507, 0.016858760441714832, 0.30167153649303824, 0.45563312605924511, 0.016655080165313588], [0.075873552614679707, 0.37996443439389815, 0.012339764173418756, 0.028926270208016084, 0.018424167998571637]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[0.087541516222533325, 0.012219538885782245, 0.09220585000478887, 0.093414626369716869, 0.010890495608150232], [0.10045173024294939, 0.41075290575826906, 0.040339665325552373, 0.40975032709065146, 0.039850320457421186], [0.1352174155891166, 0.068721239901470596, 0.20385587252048967, 0.15053099193636521, 0.019964172067855019], [0.35377348048252849, 0.038406757542336099, 0.088323259481604285, 0.16850710359482979, 0.047446819299760634]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_pow_overloaded_constData_rank0_taggedData_rank3(self):
      arg0=Data(3.51376609293,self.functionspace)
      arg1=Data(numarray.array([[[2.5984469242408377, 0.14995120247367932], [2.7094076133144118, 1.1687040910932511]], [[2.4472101354723366, 4.7285854814215922], [0.61224508528374078, 1.4730123228512859]], [[4.6471817455836302, 1.9882426184668387], [3.3701662654356226, 4.1891554248396625]], [[0.48846922731042813, 0.80246059143685977], [4.8090519253362878, 4.6175919072433516]], [[3.8288371151451548, 1.6611872755214603], [3.1071801682823512, 4.5877515888051716]], [[1.9707231333414492, 1.6120114998196269], [2.7893850306343442, 3.0122877358971567]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[4.0867293323314042, 0.70907290248961707], [4.542091993416375, 0.20387639878827887]], [[4.7228145563624917, 0.94255092593510104], [3.3485169069617977, 1.7407908070358624]], [[2.3778740962351432, 0.55914076323186979], [3.7641282570983563, 0.58090273971938888]], [[3.0910039136256184, 4.7416729463419536], [2.6077295836300451, 3.4401684058276936]], [[4.636003987179639, 1.2671364760587556], [0.75112145328996704, 2.5019171247061784]], [[0.11532749358897539, 1.4946942969216137], [3.4556276557334837, 2.8187992220361031]]]))
      res=arg0**arg1
      ref=Data(numarray.array([[[26.191584792065647, 1.2073669814610688], [30.110717798697465, 4.3435713500566751]], [[21.658124430242296, 380.83211412932116], [2.1584736121379988, 6.3669308060171232]], [[343.79979623028174, 12.165468421541469], [69.078872402793337, 193.34248026013202]], [[1.8475374108080622, 2.7413292632790647], [421.35675808290756, 331.25030331340531]], [[122.93494056978768, 8.0654928378703747], [49.638033599327322, 319.05844853111955]], [[11.900553921172152, 7.5821453697021299], [33.294355425836557, 44.058007815730619]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[169.99099086823935, 2.4377700506759994], [301.26625001334003, 1.2920228747569973]], [[378.08021343852414, 3.2690284704038759], [67.224813771077777, 8.9140764817026579]], [[19.850850421354107, 2.0191279779070865], [113.33368186210667, 2.0751091361181033]], [[48.639153511198202, 387.14739971810667], [26.498909431648773, 75.43111151807868]], [[339.00421491012639, 4.9155111202076887], [2.5700507216881081, 23.199489786312373]], [[1.1559594896394381, 6.5427987620000341], [76.910873920393129, 34.548092874879266]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_pow_overloaded_constData_rank0_taggedData_rank4(self):
      arg0=Data(0.859409183721,self.functionspace)
      arg1=Data(numarray.array([[[[3.1722779020615102, 3.980452392169493, 0.39885411307057717, 3.9664167355836888], [4.5000498931226405, 4.1562640627937499, 1.1906820180471309, 1.6979145863247034], [0.65380510076515297, 1.640808663877344, 3.5417612613370983, 0.73214169612184421]], [[4.6771096578068665, 2.0575658482561576, 4.6985172852402552, 3.9992207574885432], [2.005971703636432, 4.818381750058923, 2.7872001720364201, 0.75843022466449894], [1.8581541768642642, 2.810701552925702, 2.8546488472475162, 2.670590983255908]]], [[[4.2023434668858153, 3.4130337406292406, 2.8684982758126978, 3.5064123383619861], [0.049099165945821997, 0.49802490468507565, 3.1111313814594852, 0.45593722381763219], [0.22573568363734348, 3.337830040977984, 1.5386045963145905, 0.37871432064709204]], [[4.9011625181440666, 2.3235558392635238, 0.89988701232286827, 4.2128210031496822], [0.9380486625705533, 2.8682333358141245, 3.9247245616529352, 0.13152891686494483], [4.4106418917646693, 0.14373870268398542, 1.3429776198004182, 2.0535849820635548]]], [[[4.7497133125836841, 4.7814642605114184, 3.0915037504174965, 4.508163599466358], [3.3898605519650959, 2.4509141485178514, 2.7119296335461645, 2.0278660402591462], [2.0962853593817798, 4.6255220974789406, 1.9522225989308395, 0.31555636775161611]], [[3.5477520462704986, 3.9850771077337606, 0.55119256249063775, 4.1938023335119725], [3.2067529513554867, 2.7391649996931271, 0.64688322730450598, 1.4764479332333327], [3.8505106677411098, 1.8643294414412908, 0.46723436448991529, 1.8545192209063364]]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[[2.4114945392277227, 1.9689526755808042, 3.8910153908341822, 4.5151002814095804], [4.6142470282802588, 1.0572478936239902, 3.4963440158528067, 0.81596811482194564], [4.9886580789797526, 4.1747912798153131, 2.906345335400863, 2.8533079075339329]], [[3.9355317714366533, 2.1783757863214817, 4.7317598718408265, 3.5413482362909776], [2.3831136293690305, 2.2541625576595412, 0.062868809934538875, 0.42889416863038482], [0.14755306437990645, 1.1865345922111892, 0.46371499300281771, 4.2115230645788406]]], [[[1.6656140352893634, 3.9390633472979184, 4.9661200710268432, 4.2421214891645285], [4.7146945158527265, 2.997224324168867, 3.4101040487248335, 0.21257910454840898], [3.8816488575019701, 4.4928539418991384, 4.1693388611775379, 3.4009720360107369]], [[0.24893128583744886, 4.1886699992996679, 3.1284848774797176, 0.96158075582490521], [2.048877607130736, 2.1631893952910484, 4.2911839627390806, 1.930258072795624], [2.8023374148218321, 4.3849112741061642, 0.87839812698781494, 2.6460064459762913]]], [[[2.8077656654852752, 2.1997521125690214, 2.4859439752160268, 2.6414782897019635], [0.52447771291670542, 4.3863577132981186, 1.2159720500677496, 4.3695116236484353], [0.72264277950280675, 3.3790437121684724, 4.5467162856855561, 4.7004824213641001]], [[4.6209293319259084, 2.5555594282585528, 1.2308294955012244, 3.5852913739624896], [1.2499019466305032, 2.6693068133646189, 4.4831029325918159, 1.0231665405659587], [1.6762816406713108, 3.6219300396424354, 3.0022725468053117, 3.5933744412530393]]]]))
      res=arg0**arg1
      ref=Data(numarray.array([[[[0.61839231416767804, 0.54712453927737681, 0.94135925227386363, 0.54828926168037795], [0.50570433126143999, 0.53274303960056679, 0.83493585518598967, 0.7731739330702343], [0.90569009472929485, 0.77989255404032776, 0.58472555474439747, 0.89500419163028488]], [[0.49231848114551591, 0.73217036600447338, 0.49072424664722414, 0.54557094735114642], [0.73791619588754065, 0.48189279611406949, 0.65554453557756498, 0.89144649929647579], [0.75462890652915071, 0.65321449082150773, 0.64887953640281837, 0.66722926643287794]]], [[[0.52903664926998428, 0.5962417002955791, 0.64751940141479092, 0.58786558191410021], [0.99258858043192366, 0.92732070439074632, 0.62414791614573251, 0.93325285296064175], [0.96637701053309422, 0.60307420203269568, 0.79206313904923764, 0.94423608625362687]], [[0.47588658088207397, 0.70325042483362366, 0.87254417957571517, 0.52819749479913369], [0.86751379364154724, 0.64754539407193235, 0.55176364972830683, 0.98026928723106677], [0.51260132053673002, 0.9784575573465093, 0.8158908441877234, 0.73261210155342793]]], [[[0.48693256239380822, 0.4845957547074155, 0.62600676024041746, 0.50508304651439795], [0.5983387678052835, 0.68981053888539068, 0.66306331987244527, 0.73547242574025473], [0.72788773743808688, 0.49618153810514082, 0.74394997586268363, 0.95331491532016577]], [[0.5841950608767118, 0.54674130819708833, 0.91988073601266096, 0.52972170190753631], [0.61517067504998779, 0.66033287047139488, 0.90664042085708496, 0.79955751886641302], [0.55800277745514648, 0.7539231945284901, 0.93165683458828807, 0.75504461974598913]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[0.69394273892859104, 0.7420666173132906, 0.55458886994876744, 0.50455249443274774], [0.49702988303005885, 0.85198721612335793, 0.58876302742377939, 0.88370902460593581], [0.46961963852611993, 0.53124969437939484, 0.64381701279335779, 0.64901138001569314]], [[0.55086093026710914, 0.71889067804141893, 0.48825888435009979, 0.58476214653803305], [0.69693311399769553, 0.71068325337924432, 0.99051996057088276, 0.93708451103994828], [0.97789225599406371, 0.83546067454237294, 0.93215374548952523, 0.52830137548896494]]], [[[0.77696701220230291, 0.55056626023279565, 0.47122600686515165, 0.52585785404259355], [0.48952294736457347, 0.63501299133169609, 0.59650641760168766, 0.96830526408700779], [0.55537645937034019, 0.50625598085049339, 0.53168873927290516, 0.59733231053910696]], [[0.96298676637387193, 0.53013377400320172, 0.6225090429705018, 0.86442631032055983], [0.73313479783058622, 0.72054667221679236, 0.52196340257825347, 0.74642985235675907], [0.65404280264618286, 0.51460357094581466, 0.87538962419273381, 0.66971920054367595]]], [[[0.65350511614410911, 0.71656615167719306, 0.68615915504951297, 0.67017882675575369], [0.92361156307824743, 0.51449080783826995, 0.83174275635473172, 0.51580564729469336], [0.89629319289391396, 0.59932016567173108, 0.50214139437069938, 0.49057816113383884]], [[0.49652692641549373, 0.6789599618780302, 0.82987256476634508, 0.58088183107539981], [0.8274779688816184, 0.66735909834906781, 0.5070044643525462, 0.85639797495362269], [0.77571225339837158, 0.5776662146858319, 0.63452748300716411, 0.58017087998006089]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_pow_overloaded_constData_rank1_taggedData_rank0(self):
      arg0=Data(numarray.array([3.5391958432383026, 1.9450830397381134]),self.functionspace)
      arg1=Data(3.31590937776,self.functionspace)
      arg1.setTaggedValue(1,1.51706562434)
      res=arg0**arg1
      ref=Data(numarray.array([66.087282599282702, 9.0801434839837238]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([6.803373161469497, 2.7437095214749605]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_pow_overloaded_constData_rank1_taggedData_rank1(self):
      arg0=Data(numarray.array([3.3958449130427479, 2.8952318997828357]),self.functionspace)
      arg1=Data(numarray.array([4.9106823948703955, 1.7838055128534642]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([2.496556373645741, 1.3417943896900595]))
      res=arg0**arg1
      ref=Data(numarray.array([404.87060773229825, 6.6612128964977932]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([21.161245902132617, 4.1637451116085602]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_pow_overloaded_constData_rank2_taggedData_rank0(self):
      arg0=Data(numarray.array([[0.35769848638550239, 0.15091937181432177, 1.4190265196588672, 2.7114610171671401, 2.9173658951482433], [0.26412607460615301, 2.5846028524569502, 3.8407401276340534, 3.5835416952245507, 1.1154000990552093], [4.4349278884452454, 1.2934621581740866, 4.8568528708242038, 4.1815969632040026, 2.6798793934400686], [0.1249998980288079, 4.1648425043474466, 1.6680885664033112, 1.5246021846062983, 4.9713198216324024]]),self.functionspace)
      arg1=Data(1.94947248667,self.functionspace)
      arg1.setTaggedValue(1,1.09317764771)
      res=arg0**arg1
      ref=Data(numarray.array([[0.13477020078616442, 0.025060281852162209, 1.9783417725360826, 6.990657761388519, 8.0628200899533216], [0.074616863978520812, 6.3672280420212264, 13.781637200658098, 12.039734045162534, 1.2372709129391093], [18.242634455087533, 1.6514324607492401, 21.778606412960162, 16.266325872674194, 6.8328030007062424], [0.017356023388635643, 16.139511673204943, 2.7115026445598378, 2.2754045965490652, 22.790424997904324]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[0.32502358502288781, 0.12653841163990817, 1.4660629897523041, 2.9755567355545685, 3.2234256693313452], [0.23331196524868678, 2.8237074866604583, 4.3538085781340694, 4.0361006996697419, 1.1268086126063177], [5.0952081537676364, 1.3248498986778086, 5.627401306143847, 4.7779034964385563, 2.9376903804250833], [0.10298211929963041, 4.7569799558631711, 1.7495443621944626, 1.5857058671107824, 5.7725446217113978]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_pow_overloaded_constData_rank2_taggedData_rank2(self):
      arg0=Data(numarray.array([[2.7457812865005571, 3.0931272442915452, 1.6429022272051035, 1.5368329131665091, 1.9567401743793102], [3.1808434891387667, 0.074409744661017976, 0.62063284221548787, 1.2418181329687177, 1.9646321910520641], [2.9918106337280559, 2.600021648951667, 4.2647486017796661, 1.1009536050064324, 0.86213176193951802], [0.56915860779403371, 3.0924613375289232, 3.0789113811312436, 3.0390558215791863, 3.6309196224123998]]),self.functionspace)
      arg1=Data(numarray.array([[0.68832922904727833, 2.5907173478693357, 4.6229243852292985, 4.5667512642762231, 0.38817520154153273], [4.1865452862842805, 1.547971611330504, 2.6508878834249976, 3.7681174159929229, 2.5860950601961026], [0.25945385043067015, 4.5406299227197557, 4.1714587495817312, 4.4893418466122963, 4.9921483405188436], [0.13164969867687049, 0.18482565413079788, 0.30822995319226038, 2.139750345146739, 3.57420726659698]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[2.583100525431882, 2.7552932909183427, 0.13265794878114384, 1.6575320793457786, 0.55256629438481963], [4.0013459037911838, 2.6968090087409791, 3.5418258907283411, 4.4913106383055936, 0.38912506142234976], [2.6672432576562191, 3.6737408116005463, 2.7488005905005277, 0.77235196180138643, 3.128266653368339], [4.1779333507268026, 0.7003628276200301, 3.3797825728844577, 0.51834782745249852, 2.9757093541400281]]))
      res=arg0**arg1
      ref=Data(numarray.array([[2.004225525124967, 18.641551381342538, 9.9255977455057387, 7.1166810616641802, 1.2976750175478124], [127.03286689070343, 0.017919050168803352, 0.28237624472236633, 2.2616301076049687, 5.7339408280386408], [1.3288713404690353, 76.604947718096142, 424.20372983835711, 1.5399811318593157, 0.47684153826035858], [0.92848852083166777, 1.2320286552862489, 1.4142905603687692, 10.787982949493889, 100.37268144138348]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[13.58683252569725, 22.448624234398196, 1.0680771112461673, 2.0386358824440118, 1.4490767849670565], [102.52872947306062, 0.00090573493224287334, 0.18461065639354282, 2.6451096687721134, 1.3005381211380833], [18.59653462983767, 33.459373813287264, 53.882960276386797, 1.0771108059203762, 0.62871986570987537], [0.094925102758616223, 2.2049101213229254, 44.73797350583461, 1.7792072705558355, 46.392389222736632]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_pow_overloaded_constData_rank3_taggedData_rank0(self):
      arg0=Data(numarray.array([[[4.5575518630385581, 4.9349015931377602], [1.8411589382041027, 2.3930653709978129]], [[0.046186901666890615, 1.8810616864689984], [0.49082384149634239, 4.0167994250786396]], [[0.77156858335404754, 4.4348861866968114], [2.3125393643298624, 1.5285824676205346]], [[1.7894098418858038, 4.7170988737890269], [4.7300445841058343, 1.7753286914159963]], [[2.8094115822060282, 3.4100416280019203], [4.3840272105721372, 0.90123822626137762]], [[0.41147301824366844, 0.028151667823689275], [3.7327242283090341, 2.9405539484027439]]]),self.functionspace)
      arg1=Data(0.216999669406,self.functionspace)
      arg1.setTaggedValue(1,4.61911701646)
      res=arg0**arg1
      ref=Data(numarray.array([[[1.3897751553621933, 1.4139732864697536], [1.1416282848228925, 1.2084620449270844]], [[0.51309883376599263, 1.1469523313059391], [0.85690162865847408, 1.3522026791780446]], [[0.94527965653651913, 1.3815712402364619], [1.1995192493706337, 1.0964545263684169]], [[1.1345873777874951, 1.400190890441839], [1.4010238637992927, 1.1326439539830571]], [[1.2512652589516813, 1.3049944797665394], [1.3781176062167977, 0.97768782954296807]], [[0.82473077964970176, 0.46083229706179757], [1.3308509912869, 1.2637145068650277]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[1103.4646697269968, 1593.4355487810719], [16.768246330992273, 56.29054679483162]], [[6.7804138282877937e-07, 18.513977910560495], [0.037355057685200109, 615.73389201502596]], [[0.30183514157247809, 972.80516121320318], [48.058511428618566, 7.0998941509833129]], [[14.699285917054956, 1293.5510154233393], [1310.0307430956098, 14.172544094351611]], [[118.08830328643697, 288.9876654593221], [922.33270829649314, 0.61858423436928067]], [[0.016542365939648786, 6.8877621273575302e-08], [438.7878512361267, 145.79044609039326]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_pow_overloaded_constData_rank3_taggedData_rank3(self):
      arg0=Data(numarray.array([[[4.692009822098175, 3.1823621614620525], [3.0894182705666284, 2.4853339333814901]], [[3.9680109734820737, 3.2000616598291303], [2.6233164151941009, 4.2546565787226589]], [[0.43325044572561677, 1.1096207625771133], [1.7621719093999502, 2.6925360239156557]], [[2.6858794331622087, 1.4019402553845153], [3.4718677806556948, 2.3122972003383717]], [[2.1057232484225659, 4.2713345122557245], [1.91041296105223, 4.2258214214528165]], [[0.21361793501913315, 2.6533088483131273], [2.8407683521248468, 1.2256666329154953]]]),self.functionspace)
      arg1=Data(numarray.array([[[1.2610410212105856, 0.86487172691393399], [3.9412523558230461, 1.714371052757677]], [[0.81463942958350288, 0.80440318052801207], [2.4936743716411245, 3.9573577276321998]], [[3.9398281753041262, 4.9444594976695981], [3.1123353166497778, 2.9821929146863484]], [[4.4236709950447262, 4.8233479851334966], [1.8237955989968491, 2.7434583287905361]], [[2.7539286180792772, 4.2916473389516527], [3.1965886928196037, 0.87929345642490286]], [[3.3013728582044419, 1.1067289683056638], [2.0191092299126776, 1.8309068688453256]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[4.8116510609852092, 2.4635209280869117], [2.4191873836550757, 0.28335090516906281]], [[0.69153012233882993, 4.1175302710203097], [0.35848602560338921, 3.0600557538414943]], [[0.33363575050708022, 0.82202955138761269], [4.5938560088527334, 3.136054339659041]], [[2.9703549738383925, 4.7551387644841432], [3.2444553440816826, 3.3122098201112848]], [[3.0191929297252562, 2.0357168057222697], [1.98355691585772, 1.8897328273651959]], [[2.9573300218995691, 4.0195254218997407], [4.4349046716673604, 2.0903934598590559]]]))
      res=arg0**arg1
      ref=Data(numarray.array([[[7.024430642166112, 2.7215349537219478], [85.256547105166959, 4.7625129457539934]], [[3.0734139411165908, 2.5488893378194293], [11.078403991534248, 308.06462592675257]], [[0.03705221273288218, 1.6724912466778368], [5.8315597870941911, 19.178941947929598]], [[79.092911889551331, 5.1018474476926734], [9.680030912698502, 9.9709971663129071]], [[7.7736337137070501, 508.34262914798597], [7.918596387408285, 3.5510727523350569]], [[0.0061218705088494545, 2.9445453034216698], [8.2325893214180397, 1.4514482857323565]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[1699.5925707181773, 17.319452783439502], [15.314525941181614, 1.2942930724062649]], [[2.5937682286527788, 120.22776768951807], [1.4130323817013934, 84.015702963398851]], [[0.75648992722485375, 1.0892682252589054], [13.499271797202081, 22.336231874956876]], [[18.816517991570503, 4.9856198776637397], [56.732652634603241, 16.0616058285012]], [[9.4713283814774627, 19.215375984618493], [3.6110367861639454, 15.233680010891732]], [[0.010411600169168294, 50.515639696350704], [102.55211957959482, 1.5301464887664391]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_pow_overloaded_constData_rank4_taggedData_rank0(self):
      arg0=Data(numarray.array([[[[2.7379924651698673, 4.1941299078956318, 0.44203073284061634, 3.8192444679447246], [0.021962331258120162, 3.1607282709167404, 2.6471697718938625, 4.2498629733206323], [4.0850149046205715, 2.895928204682034, 2.8430118819503853, 1.9231755817431644]], [[2.0331248870964567, 3.5929552184328166, 3.396279671094129, 2.7419744954914398], [3.8913803894861765, 2.8823171428579566, 0.59132618276683702, 2.9360780586665274], [2.3753622831921377, 4.5624619413465251, 0.95485605538176255, 1.8093901423787595]]], [[[1.6875848863927709, 1.9151500617190231, 0.57321394853700613, 1.2304444625367119], [4.9683765853647133, 4.9494552038803734, 4.6982528712891076, 2.508467189464846], [3.042707843462479, 2.5238027952219775, 1.1278624330879075, 0.74076986932468047]], [[4.6915147025112622, 0.079101085383243883, 1.953764615536322, 0.48534516779077669], [1.1110366169278219, 0.17503819045001517, 0.12014628542417337, 0.46547096196544874], [2.6524336981995273, 4.5909173201166, 2.1390961783961724, 4.8341403427006684]]], [[[3.8277690104443973, 0.20826711128911263, 4.1756201441382634, 4.3692950049309882], [3.3522986740933036, 4.8057471738840176, 2.1029133256978447, 0.6353571640630129], [1.2983220548039225, 4.4674827735339528, 3.2589226080975999, 2.8741375361441741]], [[1.5385785926947755, 3.703152386538699, 4.0356204351855478, 3.8954975970185317], [1.6414714870862839, 1.3957207329361061, 2.8115935159689971, 0.87087773644010391], [2.6915281421460446, 0.61585781224579883, 1.9391903443129836, 1.9283600651963395]]]]),self.functionspace)
      arg1=Data(2.93530597987,self.functionspace)
      arg1.setTaggedValue(1,2.06785259012)
      res=arg0**arg1
      ref=Data(numarray.array([[[[19.230806375799322, 67.24258923687745, 0.091053050738393884, 51.083649135287622], [1.3561845788667772e-05, 29.310838480656578, 17.417825325627597, 69.899276772975043], [62.235812300163388, 22.671928511477532, 21.477278936024415, 6.8184000997986915]], [[8.0270468518129814, 42.699324319272392, 36.195750770701835, 19.313018188795997], [53.96782034526683, 22.360563883025691, 0.21391574379449996, 23.607012300448996], [12.6730775970933, 86.089763415430539, 0.8731957580495453, 5.7008007899288122]]], [[[4.6461599279233008, 6.7352169930384616, 0.19524760299372182, 1.8380595364693717], [110.56116439577239, 109.32978234391589, 93.829390954387847, 14.87256713177279], [26.212999150891818, 15.14103871082196, 1.4235991989388794, 0.41445810615531081]], [[93.434938272097767, 0.00058321453003474448, 7.1416576089333681, 0.11980164235605036], [1.36215574056641, 0.0060029292619265999, 0.0019891534250736339, 0.10596517078367518], [17.519686972741663, 87.675343601693427, 9.3180923220884679, 102.0202538663348]]], [[[51.419051826629442, 0.0099986932882039567, 66.375226535828574, 75.823411199918411], [34.837067041403699, 100.27135945097116, 8.862974641728794, 0.26411760814195395], [2.1518507123634922, 80.934460889778109, 32.064857821051902, 22.17481183674143]], [[3.5420405747910686, 46.658585655813837, 60.052648185497851, 54.135597136264593], [4.2832726451270204, 2.6608965504280286, 20.788016604407527, 0.66643220410523518], [18.288513874921033, 0.24102423901628467, 6.986408854507272, 6.8724948088697593]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[8.0268548254695613, 19.387937911992548, 0.18486213403188767, 15.975100330884951], [0.00037225064781162056, 10.801552363014528, 7.4860104626462451, 19.924467411558748], [18.359394875804469, 9.0138241064830744, 8.6765566755011818, 3.8664223521995349]], [[4.3374835669913727, 14.079669232617157, 12.532475097538089, 8.0510135731480066], [16.605327117756392, 8.9264381267066195, 0.33742099102006545, 9.2741568826874197], [5.9834815546940998, 23.074212414069041, 0.90889674517800501, 3.4083066979683938]]], [[[2.9508818150148941, 3.8331323001604587, 0.31639868174538727, 1.5354475058965618], [27.521301640945907, 27.305008388483628, 24.516891213223431, 6.6975774721225045], [9.9841470301254525, 6.7825239415767706, 1.2825017802875944, 0.53768050880761575]], [[24.44423750324923, 0.0052674898847398684, 3.994670060463358, 0.22428444137882492], [1.2432530500039471, 0.027221385816401412, 0.012501918399078677, 0.20570783732994727], [7.5168252294943319, 23.372788889453897, 4.8180089859413524, 26.00586734506809]]], [[[16.048920335648123, 0.038994920189499307, 19.211421236994813, 21.099701272467975], [12.199197820403674, 25.691004348828166, 4.6510072061297798, 0.39144443106845134], [1.7157664090363223, 22.091958753192507, 11.50698368152818, 8.8741347255962673]], [[2.4374511823100207, 14.987259336831928, 17.903304948128543, 16.641677698938025], [2.7865755769440774, 1.9926086669267042, 8.4794495064630855, 0.75134658366979024], [7.7477284543636387, 0.36700891461932583, 3.9332963754062962, 3.8880067590245635]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_pow_overloaded_constData_rank4_taggedData_rank4(self):
      arg0=Data(numarray.array([[[[1.346622666168201, 3.5996273969687294, 3.573481437466143, 1.8477224780185508], [0.85751874904740466, 2.9022910981346453, 3.1496036422380431, 0.57328885840974642], [3.9977112457882451, 0.78583903520298259, 1.4892873271642291, 3.8675115434669989]], [[3.4751311244288225, 4.0106812606313014, 2.3628470956357788, 3.7841379348931437], [2.2521768743275241, 1.0413712423499475, 4.9473304075255067, 1.8573316941947469], [2.1751721872856264, 3.8713290090159567, 0.56441304314432095, 0.26641972032464439]]], [[[1.1088792551897424, 0.4197458163757517, 3.9675628076656908, 4.9101007179304084], [4.7881860208309268, 2.0888699711820768, 2.3124882776417959, 1.7016325808707475], [0.73477843032385848, 4.1931033786858709, 3.7028821843426938, 4.4995219156630668]], [[3.4503338614527537, 3.7035778410044475, 1.1925702191267027, 1.9514316205693765], [0.95181308284451294, 3.7992760674204651, 3.0797240739056426, 3.9440664005844139], [0.3063141826307284, 2.0476212101496736, 4.7533975022354875, 4.4616211037589926]]], [[[0.22243185658225445, 4.0561124914653641, 2.7783114970930161, 1.4076502180511019], [4.7775717062541476, 3.0150330473328832, 4.3375032672054834, 3.2023595579926734], [1.1913676568337979, 4.9833875755247297, 1.6002129139488235, 0.70221739572321296]], [[1.9548235566715575, 0.12791028951721434, 2.9289758344964838, 1.1152094504150518], [1.6997579338679121, 0.6009264745180507, 3.9886868232917934, 3.4449656822424926], [3.5396626345524771, 0.59303933917097029, 1.7465786573598581, 0.87499296253051173]]]]),self.functionspace)
      arg1=Data(numarray.array([[[[4.1343353135818299, 4.7186381311724155, 0.90468338562384065, 3.2162688491197668], [2.2405652882225944, 0.93130243421016401, 3.9812680867304548, 4.5670537293346447], [0.23604760614467127, 1.7877430057627981, 0.95409455701935553, 3.0944249500698979]], [[3.065139148250192, 3.9368839120939114, 1.7457835748191484, 1.5057204086999316], [1.0857228406830948, 1.0444778121415135, 4.7331153531244317, 2.3730918736688209], [2.6253354177438375, 3.1435924805661108, 3.1507084754336945, 0.19473212418852096]]], [[[0.75352999749476202, 4.3405911689159415, 4.2232920635569462, 2.4966644911320865], [1.8176854207642823, 0.087338772698695624, 4.770396794670213, 3.529274278673161], [2.4656217182006483, 3.4159541557242687, 2.4807426271012245, 3.1967278176777123]], [[0.29368926633609449, 1.4526022719698692, 1.1604612126652663, 1.218312755680548], [3.1750527983898151, 4.2408335335057137, 1.822503887603941, 3.9915878893232142], [4.4496668252650808, 1.4815857477975334, 0.99138229191445759, 2.8909983107540773]]], [[[2.2774021277915817, 1.3752818141142769, 4.9857932112820436, 3.3339920420076754], [4.3495641845386128, 4.656847340127193, 4.4113477894945961, 2.4017219081885535], [1.5177290807649788, 1.5902986605513256, 2.3134792356650888, 1.8590111976508168]], [[0.77820035372513541, 0.5203270911122132, 1.0998329722020401, 3.5963807382556645], [4.9568135232936417, 4.9902829428742548, 0.96210777099677569, 0.24878692378494979], [3.1437142359957444, 4.8613999495284475, 3.7630024923948624, 2.4003918001309303]]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[[4.3934142011407982, 4.1998352035690436, 4.4299439842177293, 4.6211659653083794], [2.4407482327785583, 0.09892104065289227, 0.68015519736434848, 0.5244567157497011], [4.4288766221673468, 0.60072503263831889, 4.187728421611995, 2.8740585785101578]], [[0.20437440748393448, 4.8696458923808077, 3.1846600405472492, 4.0530173324077126], [0.47018566563949327, 3.5223232460269212, 1.7224298291974154, 2.6079767097105897], [1.9168971665118839, 4.1568952426115997, 2.8376100846506587, 3.6374783341493178]]], [[[3.48778833993534, 4.5977102111606589, 2.3678029427134697, 4.6004630182214346], [0.64037061093438119, 0.64754346543904173, 1.5776932078747641, 4.9282687267954435], [4.2236388406404535, 3.5344575697924858, 0.94141574504718806, 1.4489609752597121]], [[0.71245952077747987, 3.7249502387795461, 0.52607764618482367, 3.5110252144029355], [3.3783099161750116, 1.1118593366199765, 2.2872527329285623, 0.80819483637358491], [0.21687039672719818, 3.8751904652288216, 2.2895247072893161, 1.6168871901991475]]], [[[4.3370551214389641, 0.5729224872056029, 2.603781071441249, 2.1490216548670973], [4.5535400308262668, 3.5469670471835277, 2.0102614448183687, 1.6818473071779771], [4.762002605490677, 3.9486594883052897, 2.3247943597563059, 1.4132839362252998]], [[4.658701100905021, 3.7136229446172959, 0.081816669008941911, 4.6630619595384664], [3.0640701778227877, 0.7875705536659644, 2.3243846253795346, 2.6088286368364475], [0.15684435148780579, 4.931961664105855, 3.9665556796765262, 2.6046205057066136]]]]))
      res=arg0**arg1
      ref=Data(numarray.array([[[[3.4225198207449958, 421.48107548335349, 3.1649927415520649, 7.2040289233724382], [0.70864378399798733, 2.6974399890980827, 96.314201767452488, 0.078791396713851797], [1.3869351199150115, 0.64995512353498175, 1.4623045778109314, 65.729912951634219]], [[45.51473215515027, 237.02809473686764, 4.486810928926837, 7.4174844549074104], [2.4145076305988007, 1.0432505878118372, 1934.3615093163141, 4.346097005394622], [7.6919067463176063, 70.468095296613484, 0.16495090135133647, 0.77292849541215514]]], [[[1.0809898979948667, 0.023096065045227803, 337.08611106551768, 53.139915982338593], [17.232049618391358, 1.0664504200515592, 54.551144945169888, 6.5281286235186773], [0.46772685968573507, 133.82984249776376, 25.727711123770721, 122.46024083971142]], [[1.4386794420743161, 6.6985507086474492, 1.2267517011693889, 2.2580896244476576], [0.85487067528203775, 287.35238903677333, 7.7680975195560977, 239.20140319968905], [0.0051714795976012268, 2.8916318541339217, 4.6899683254162188, 75.45399818670046]]], [[[0.032606563429657967, 6.8599762445430912, 163.15484632427251, 3.1266575779374413], [900.02665625900238, 170.60432339556829, 647.27144625758876, 16.368112265254151], [1.3044184436358444, 12.860934920325096, 2.9672971084671023, 0.51830924484163665]], [[1.684767628050301, 0.34300363879147377, 3.2606892591844407, 1.4801706634146827], [13.867104195217097, 0.078750966879313267, 3.7849761988073163, 1.3603309487541544], [53.183785971654324, 0.078862066620065063, 8.1536977400079529, 0.72575196690067567]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[3.6968417580230177, 216.8652837702094, 281.94506555812143, 17.06760714543373], [0.68717047948166821, 1.1111554437228695, 2.182183877243264, 0.74692562675887886], [462.75224812080819, 0.86521546233564195, 5.3013558326525709, 48.787985131888199]], [[1.2899137365690097, 865.88213769122774, 15.461993700553963, 220.04428826317778], [1.4648347655268281, 1.1534865770212162, 15.703815265347266, 5.0264049524625642], [4.4354797943096047, 277.76196611887156, 0.19730098782325525, 0.0081378580370470958]]], [[[1.4339922180553752, 0.018475687677895113, 26.132829787874559, 1511.2483175233911], [2.7262239452727091, 1.6112262950810872, 3.7532355155046111, 13.733102593005027], [0.27207771278727449, 158.60817106983339, 3.429512641803949, 8.8391923071932332]], [[2.4165972450196729, 131.2461904681434, 1.0970754625072126, 10.457741211762313], [0.8463322572097054, 4.4110888402244059, 13.10237326614422, 3.0313706379545722], [0.77368621027767437, 16.075021329144089, 35.482784277073428, 11.224226027095618]]], [[[0.0014748822478528518, 2.230487987317709, 14.305676544508321, 2.085059427380763], [1238.2183576310667, 50.122555127147102, 19.099351922486132, 7.081471537622174], [2.302132547867259, 567.920292875928, 2.9831241652999596, 0.60676532728151145]], [[22.708221840859895, 0.00048237379424468144, 1.0919056951703667, 1.6627464095502413], [5.0806838563720369, 0.66958574388215197, 24.920679019096319, 25.201323558131449], [1.2192747180787378, 0.076007515494882605, 9.133826917218629, 0.70622630186247892]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_pow_overloaded_taggedData_rank0_float_rank0(self):
      arg0=Data(2.16580345663,self.functionspace)
      arg0.setTaggedValue(1,1.18334786269)
      arg1=2.95815862423
      res=arg0**arg1
      ref=Data(9.83590589713,self.functionspace)
      ref.setTaggedValue(1,1.64542528761)
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_pow_overloaded_taggedData_rank0_array_rank0(self):
      arg0=Data(0.675638865386,self.functionspace)
      arg0.setTaggedValue(1,0.617788157227)
      arg1=numarray.array(0.487275731526)
      res=arg0**arg1
      ref=Data(0.826083730265,self.functionspace)
      ref.setTaggedValue(1,0.790826479928)
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_pow_overloaded_taggedData_rank0_array_rank1(self):
      arg0=Data(4.34622862568,self.functionspace)
      arg0.setTaggedValue(1,3.90754356958)
      arg1=numarray.array([0.47897677857379489, 0.46963211638940994])
      res=arg0**arg1
      ref=Data(numarray.array([2.0213480606190877, 1.9937842261430883]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([1.9209151833223197, 1.8966056849070569]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_pow_overloaded_taggedData_rank0_array_rank2(self):
      arg0=Data(0.259776342723,self.functionspace)
      arg0.setTaggedValue(1,0.616943624532)
      arg1=numarray.array([[0.79809999986986635, 4.5392007342834546, 0.97230024829123862, 0.19499509320661626, 3.2193220301706376], [1.3556017445308424, 2.0124888252855393, 4.6423068876700446, 1.1321113159953562, 2.1437654760342006], [3.9595096294105363, 3.8447140297383235, 2.3572164303515839, 0.31083931976739215, 1.720062706993172], [2.795182832758786, 1.0776881710793198, 1.015554108219918, 4.6273647676875589, 2.868694774206511]])
      res=arg0**arg1
      ref=Data(numarray.array([[0.3410294930542902, 0.002201659059196141, 0.26965907723492405, 0.76886447339502728, 0.013043903891430644], [0.16085338112204894, 0.066357227638619259, 0.0019159831394310481, 0.21740102171965942, 0.055595396140334374], [0.0048095170899052587, 0.0056143936857400347, 0.041695055350166745, 0.65771013977279413, 0.098418014739191262], [0.023104620887379555, 0.23394884838010949, 0.25438659195531893, 0.0019549641872946464, 0.020924973984978144]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[0.68013467695715468, 0.11165601698546815, 0.62525277618062114, 0.91012050251766863, 0.21121884078654146], [0.51958476399843145, 0.37833051681167096, 0.1062319491242129, 0.57880801322279585, 0.3550875969739492], [0.14773213038437263, 0.1561542671551486, 0.32030461828587736, 0.86059743605990024, 0.43572158379425535], [0.25923746638845441, 0.59422379087874999, 0.6123263323073237, 0.10700136725509758, 0.25019481566649771]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_pow_overloaded_taggedData_rank0_array_rank3(self):
      arg0=Data(0.363020564326,self.functionspace)
      arg0.setTaggedValue(1,1.86697297956)
      arg1=numarray.array([[[1.5513829958945715, 1.9663908633115024], [1.2236662920209518, 1.3756180427976903]], [[3.1163587368170278, 2.9850795790978295], [4.6316359056620735, 3.0488275689887585]], [[3.0231185367348758, 2.6248993241755825], [0.52786232920837328, 2.856804779672323]], [[2.5123889836190374, 1.5085333968372328], [3.3210656245954553, 2.3245141647554219]], [[2.3544209921829085, 3.0201267529046181], [3.8915065633104255, 4.9896053580658153]], [[1.0160014838057025, 3.7791306553944559], [1.98242923218964, 1.6556726365288843]]])
      res=arg0**arg1
      ref=Data(numarray.array([[[0.20762745921431763, 0.13634926044061274], [0.28940276559086869, 0.24810382315056281]], [[0.042519469391453055, 0.048569059525335238], [0.0091571783466884767, 0.045530895739890449]], [[0.046732599210956918, 0.069962251390615585], [0.58573917714879498, 0.055310734730722712]], [[0.07841083236688999, 0.21684107911252015], [0.034554349963189603, 0.094853618916252103]], [[0.092022249230186814, 0.046874486943807255], [0.019385164190236694, 0.0063713358012037679]], [[0.35718192557818423, 0.021723140525633004], [0.13415127398565532, 0.18680572218669517]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[2.6341404848394414, 3.4132126758326922], [2.1467549396113261, 2.3603824104014879]], [[6.997829817073475, 6.4471623110817937], [18.022400926074198, 6.7089276517346921]], [[6.6021047723076123, 5.1488476106670387], [1.3903481181036454, 5.9509791303626622]], [[4.7995907306941179, 2.5646067276050961], [7.9518320592687628, 4.2683910163343093]], [[4.3488364539481417, 6.5897847009955024], [11.353648196689104, 22.535737734583545]], [[1.8857175515920146, 10.584395281483744], [3.4475610192944788, 2.8113558553968154]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_pow_overloaded_taggedData_rank0_array_rank4(self):
      arg0=Data(2.67800590766,self.functionspace)
      arg0.setTaggedValue(1,1.57553145777)
      arg1=numarray.array([[[[0.96314454829521767, 2.4274819153714584, 0.67023319342389454, 4.0377346692047817], [3.8527663208101552, 0.36865352944691143, 2.7821942199166738, 4.0581887476863736], [3.4459384797364985, 2.2759089270865989, 4.1677472733322674, 2.6129444255292036]], [[1.0020359626292699, 4.2376634964948989, 4.8739401697682423, 4.0106343943065594], [1.5834563595796645, 4.3589612884239299, 3.5891268929187055, 4.8302010507511852], [2.8007282572933123, 3.6012146556911153, 2.6417755201522675, 4.7251899918514741]]], [[[0.19331688854679635, 2.2797181451924802, 0.11676619728619565, 4.9555760679913243], [0.71797896704404662, 1.2989543966340527, 1.7978590950362769, 2.1222651459300801], [4.0593234459544432, 3.0119127450133787, 0.64985503420419888, 0.57843166576052762]], [[1.4770464276568014, 4.6721866979088551, 3.9331512079600786, 2.2418090477641814], [1.9758334518668976, 2.056775092685347, 4.7696258010538308, 1.5420551134756484], [4.5398726587131391, 1.2165878561718346, 1.9497330709146845, 1.8458653825506703]]], [[[1.1593328673502195, 2.4842370314221789, 3.6213140304800566, 4.0168339612595201], [4.9509850397039665, 0.4780794697856362, 3.891621423106761, 3.097643967109887], [4.1179932430413624, 0.020535115113955282, 4.4642948565601221, 0.6764067852378518]], [[0.90984946826765745, 2.3507337791678031, 1.7944259972264389, 1.0609573467576996], [4.7031659563506505, 3.3073206021567847, 0.95483768917668077, 1.8676023441937379], [0.78129789736090205, 3.5522592968297295, 0.4280732365176988, 1.7514539459920633]]]])
      res=arg0**arg1
      ref=Data(numarray.array([[[[2.5825238650541622, 10.927095885242855, 1.9352340129682042, 53.381337305302416], [44.489534043947145, 1.4378521486410731, 15.497254600141854, 54.467813296149153], [29.79972222100626, 9.4115267703419541, 60.675077634090066, 13.117399768457126]], [[2.683382227337364, 65.001189946190962, 121.65439539827916, 51.97513660055494], [4.7579611219900837, 73.251057896313654, 34.313883309130269, 116.52408604616194], [15.782792358897375, 34.72491204049097, 13.495284020578573, 105.07291076333874]]], [[[1.2097710679392277, 9.4469085085574225, 1.1218994254191144, 131.84163594194467], [2.0284283927644706, 3.5950726305014684, 5.8768533221182011, 8.0896456876354002], [54.528729277882483, 19.432604053936302, 1.8967735152411631, 1.7679083065074075]], [[4.2844738172744581, 99.72759436140413, 48.155671018798138, 9.1006363388740557], [7.0030033403965346, 7.5842405789719916, 109.77436029241225, 4.5678197564132246], [87.540671053964985, 3.3148990944293355, 6.8252456928309524, 6.1614438467182726]]], [[[3.1331123508251695, 11.555407012421382, 35.419293862714724, 52.293521137096043], [131.24672898293429, 1.6015035650855418, 46.225382982872368, 21.145005732194761], [57.773009701715459, 1.0204345604494003, 81.259999665094796, 1.9470388721407992]], [[2.4504401164870115, 10.131436257749325, 5.8570122538990406, 2.8437393435224081], [102.81787577050611, 25.996201190571078, 2.5614776652198148, 6.2947982825828497], [2.1589781617160955, 33.090054870496878, 1.5245254072638676, 5.6142557651522909]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[1.5493545602258607, 3.0147455562013725, 1.3561951332693942, 6.2684210620002743], [5.7628909350001454, 1.1824483768200194, 3.542260349150784, 6.3269783758801905], [4.7898461951274713, 2.814012688491017, 6.6500692808445088, 3.2799406500630153]], [[1.5769903401619987, 6.8648258690932691, 9.1674335470777475, 6.1916704497930217], [2.0540790997437308, 7.2539906970817079, 5.1119999196939014, 8.98695328153544], [3.5722315238998061, 5.1401677209178231, 3.3232118215541102, 8.5680197204958084]]], [[[1.0918575678402014, 2.8188897740611831, 1.0545151152961225, 9.5140385640495975], [1.3859529595292863, 1.8048818271546838, 2.264363102171854, 2.6241738804008081], [6.330242834482755, 3.9321776935412025, 1.3436896783787533, 1.3007626979020761]], [[1.9570817253056738, 8.3640413636755788, 5.9773757031507975, 2.7707274783268998], [2.455178242795617, 2.547200307794121, 8.7428552765613912, 2.01578141399174], [7.8757840167282938, 1.7385508060558654, 2.4262195890549991, 2.3143221426320624]]], [[[1.693884139199664, 3.0935394625920511, 5.187348796603473, 6.2091449080696082], [9.4942030177157637, 1.2427558987832532, 5.8655865821511117, 4.0884510267294774], [6.5013474561503655, 1.0093788204366185, 7.6097903647853649, 1.3600065993668258]], [[1.512268558209461, 2.911377379385641, 2.2608319551054188, 1.6198011755913677], [8.4826650072214953, 4.4973288569158099, 1.5435148630493085, 2.3373043933134592], [1.4264263788694425, 5.0270380972240352, 1.2148236794859371, 2.2170956834396156]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_pow_overloaded_taggedData_rank0_constData_rank0(self):
      arg0=Data(1.58614620418,self.functionspace)
      arg0.setTaggedValue(1,3.1219516556)
      arg1=Data(0.0696179658204,self.functionspace)
      res=arg0**arg1
      ref=Data(1.03263653672,self.functionspace)
      ref.setTaggedValue(1,1.08248265058)
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_pow_overloaded_taggedData_rank0_constData_rank1(self):
      arg0=Data(4.83309566772,self.functionspace)
      arg0.setTaggedValue(1,4.0635489251)
      arg1=Data(numarray.array([4.3780703542507391, 2.1032966432235587]),self.functionspace)
      res=arg0**arg1
      ref=Data(numarray.array([989.88992339340314, 27.487102993261288]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([463.26670391385045, 19.085734562148602]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_pow_overloaded_taggedData_rank0_constData_rank2(self):
      arg0=Data(0.0206063536738,self.functionspace)
      arg0.setTaggedValue(1,2.90234057977)
      arg1=Data(numarray.array([[2.7689002363803232, 3.5962992109609169, 1.8447118948104604, 0.90152260872700596, 0.094929585181680154], [1.0204187037486598, 1.2572212402211203, 4.4037462422814677, 1.1144988990609237, 4.497261731128928], [3.6395982053480105, 3.2496615664596198, 3.1008551788105114, 3.3735705356875942, 4.4919855757176599], [1.1469895883880559, 4.0289531477595046, 4.1942678530350541, 0.68136312880972671, 0.31548153062931905]]),self.functionspace)
      res=arg0**arg1
      ref=Data(numarray.array([[2.146037884038248e-05, 8.642585093997505e-07, 0.00077592164283023549, 0.030201875849523691, 0.69174945954584566], [0.019035979939018972, 0.007591479684586273, 3.7608749875756482e-08, 0.013211621932265718, 2.6159045358156672e-08], [7.3053597837401227e-07, 3.3195126991372906e-06, 5.9150951211704898e-06, 2.0519366792188081e-06, 2.6700382494355136e-08], [0.011646002324040394, 1.6113490380575662e-07, 8.4814327149062939e-08, 0.070994147421297366, 0.29383160136295]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[19.111909592365699, 46.151052791255715, 7.1390007888879312, 2.6132329250044868, 1.1064416386694382], [2.9661772254470038, 3.8174827628736367, 109.10041772653243, 3.2789330817553384, 120.53149792031648], [48.330150973756567, 31.898892583580615, 27.221728126988708, 36.401080928622669, 119.85579074744311], [3.3944355495523877, 73.179850567585618, 87.275155123110622, 2.0668058399172535, 1.3995504729590491]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_pow_overloaded_taggedData_rank0_constData_rank3(self):
      arg0=Data(0.603378053044,self.functionspace)
      arg0.setTaggedValue(1,1.69343340862)
      arg1=Data(numarray.array([[[1.3284682603133511, 2.0927536356398724], [4.6984221345168322, 0.61821334326790656]], [[1.5711621851666411, 3.135019095109286], [4.3151117147027964, 0.15975724602629285]], [[1.3226971346957037, 4.524559817973115], [3.0600462973860512, 2.0246925845019388]], [[2.5037770576246974, 0.084414861411499967], [2.1929881598139445, 3.3910499612243608]], [[0.44090693721520785, 0.54726622395971891], [3.9892527668447388, 4.6198619372055605]], [[2.1820795803481325, 3.9907464289698975], [0.095446536956184033, 3.5435696163782606]]]),self.functionspace)
      res=arg0**arg1
      ref=Data(numarray.array([[[0.5111167659408693, 0.34739846722960721], [0.093135852485729864, 0.73174119789250436]], [[0.45213750560842675, 0.20518420318936684], [0.11303663523362534, 0.92246008716032712]], [[0.51260917201723721, 0.10168668986000472], [0.21310504950751211, 0.35955158416641747]], [[0.28225721185974656, 0.95824926284946443], [0.33024434666358726, 0.18028851606484084]], [[0.80031396025606716, 0.75844492429685206], [0.13326499674066641, 0.096906704660959742]], [[0.33206939321661533, 0.13316447090621419], [0.95292348090699097, 0.1669181842364339]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[2.0133125046710778, 3.0113089991862623], [11.880896560882885, 1.3849289906212003]], [[2.2878725344612816, 5.2142570294808417], [9.7086760310740843, 1.0877957692269866]], [[2.0072013544520635, 10.841142647421876], [5.0123460755159286, 2.9052607917602682]], [[3.7392489377535156, 1.0454696492134858], [3.1745764194699846, 5.967111266918609]], [[1.2614366724369201, 1.334126673088353], [8.1773741557052233, 11.399272769321083]], [[3.1563870345303058, 8.18381063384812], [1.0515625845207663, 6.4662988357415658]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_pow_overloaded_taggedData_rank0_constData_rank4(self):
      arg0=Data(4.01280851475,self.functionspace)
      arg0.setTaggedValue(1,4.64215634916)
      arg1=Data(numarray.array([[[[3.3047793922284243, 3.6873962481688185, 4.874213250214841, 4.3956069109050677], [0.70369948018689688, 4.852016776753481, 3.1540751936706548, 4.1366746026245238], [1.9664781876616406, 1.2328433573084416, 3.7334678943284141, 0.69260476573136243]], [[3.79379961037221, 1.5181455421059944, 0.092161543594667869, 2.3239539223414103], [2.1580708784677638, 3.2364275337368462, 2.09181566464546, 4.549083925328036], [3.5691319219365027, 4.2736077531172771, 2.8558591643303854, 3.3035310675853133]]], [[[3.2954067165669052, 3.1252532008148681, 3.3143438854622822, 3.1338306557867761], [2.3035058576725813, 2.3730020967068013, 0.75761913272867043, 0.58894625469913209], [0.36412170785150938, 3.7151322836524296, 4.6936401389582532, 3.4004399761947557]], [[0.5809298108908747, 2.9620524291105244, 3.3668371174865994, 2.4963809341199665], [1.3939915247043679, 0.025184652411452433, 3.2675129925856736, 3.1461142586661093], [3.3566925028395747, 0.46672756455999798, 2.3565605335639472, 2.6388502366579498]]], [[[4.3903344306358694, 0.79542837918119047, 3.7650654785146558, 1.2637856593980128], [4.0126355372765445, 2.4326361443865254, 1.495313221067982, 3.8267715645514788], [1.3574249182046028, 1.5121524609937871, 0.19073947025039106, 2.9702716976723544]], [[3.3924825970018806, 0.56605437168057782, 4.8427244741051485, 4.9127579399868946], [4.5898295685031334, 3.6716662117153964, 0.49230707119157624, 4.7686573448201397], [1.2786504551428919, 4.5284784990726568, 4.1998441821231065, 2.8881719373307213]]]]),self.functionspace)
      res=arg0**arg1
      ref=Data(numarray.array([[[[98.687911149777875, 167.93974914374917, 873.64775297488495, 449.28520467680357], [2.6585592947401877, 847.11415172122315, 80.042702561173172, 313.52329923202575], [15.369798980050172, 5.5457130749750672, 179.04218240096384, 2.6178892086547578]], [[194.69842694476679, 8.2437071129659323, 1.1366185494069778, 25.257267307370814], [20.057855447675394, 89.746420217875126, 18.293756409809163, 556.08039184540598], [142.49088288213932, 379.22932772728223, 52.888804110796045, 98.516881754433086]]], [[[97.411006388921408, 76.90049887605808, 100.0082056408703, 77.822505530150679], [24.549746270998376, 27.038612680147729, 2.8653922438329418, 2.2667242794666076], [1.658550407074018, 174.53831034660411, 679.78222215125106, 112.71719858665178]], [[2.2416158357966296, 61.297943810840948, 107.57530695411225, 32.094984568606947], [6.9374841812114711, 1.0356133472979936, 93.707770685290939, 79.162177169488544], [106.06957827244267, 1.9126963056408814, 26.427906955704724, 39.121009141474829]]], [[[446.00573913846767, 3.0199518013383315, 187.07806780193303, 5.789345654786378], [263.887391737744, 29.374499631368117, 7.9862780240979339, 203.82587570133384], [6.5938026440718334, 8.1753440423737906, 1.3034711853901839, 62.002016089745972]], [[111.47778180078046, 2.1957587672096004, 836.24688210027659, 921.71381521930118], [588.47155640176027, 164.30895525490598, 1.9819008882655553, 754.46451486259241], [5.9101651646611337, 540.38497996627677, 342.28621151006507, 55.31753756806318]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[159.7208949238007, 287.38225922431815, 1777.1918198189451, 852.38932120732477], [2.9455768030487728, 1717.6531810816036, 126.73141013620409, 572.79960901686707], [20.468681687948422, 6.6368351677860176, 308.44435872523053, 2.8958314846507101]], [[338.37726755013324, 10.284368673975971, 1.1519826084098241, 35.434475567219351], [27.4680927871735, 143.81036878178693, 24.81160423933602, 1078.8576836397067], [239.66840795311543, 706.80359628685312, 80.178466698029027, 159.41509862702074]]], [[[157.43916827989679, 121.24618292339868, 162.08341243717715, 122.85330200178326], [34.339414081886311, 38.205632753416786, 3.1997765332469865, 2.4698018276273812], [1.7489087031644754, 299.88318698941339, 1346.9226109667054, 184.986713542666]], [[2.4395930426429988, 94.375419502297504, 175.68587533647221, 46.17283129348904], [8.4996628598341335, 1.0394200872515587, 150.83964087331958, 125.19199337890321], [172.97097431702574, 2.0472764534955625, 37.253362780657653, 57.461056360592494]]], [[[845.51775819520356, 3.3910002427824679, 323.77518895814552, 6.9597057109026474], [473.48193799418084, 41.868422200586672, 9.9301286982131014, 355.94609486836686], [8.0356686521858496, 10.190181776990636, 1.3402004965286813, 95.573797811014686]], [[182.74066241513472, 2.384512683459147, 1693.3242043190469, 1885.5272444825282], [1148.4975803192058, 280.52555381782565, 2.1292705828049749, 1511.3258034484438], [7.120353069697245, 1045.2642911190817, 631.13042962737086, 84.256091893623093]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_pow_overloaded_taggedData_rank0_taggedData_rank0(self):
      arg0=Data(3.21624873473,self.functionspace)
      arg0.setTaggedValue(1,3.87656769628)
      arg1=Data(2.22057715602,self.functionspace)
      arg1.setTaggedValue(1,3.36132717172)
      res=arg0**arg1
      ref=Data(13.3847108904,self.functionspace)
      ref.setTaggedValue(1,95.0526309345)
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_pow_overloaded_taggedData_rank0_taggedData_rank1(self):
      arg0=Data(0.691345862589,self.functionspace)
      arg0.setTaggedValue(1,2.32994474478)
      arg1=Data(numarray.array([2.1795132935455408, 3.9418019018279966]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([3.4911708650494941, 4.4502125827689358]))
      res=arg0**arg1
      ref=Data(numarray.array([0.44731547585775422, 0.23340539873489805]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([19.163124980585074, 43.128674223136912]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_pow_overloaded_taggedData_rank0_taggedData_rank2(self):
      arg0=Data(0.0266536379899,self.functionspace)
      arg0.setTaggedValue(1,2.24659085256)
      arg1=Data(numarray.array([[4.0973896349148395, 0.33522118202055967, 0.4226744105109827, 4.3190925318834958, 0.67116533633365705], [0.39103215804155422, 3.8850891152500342, 4.5559091549333814, 1.9568730080115357, 0.1304437913067226], [4.186260326387572, 4.8688738580898985, 4.9697730527048707, 0.91486229741774638, 1.3240215560547821], [1.1710621743200089, 2.1470333098314769, 3.3812349140045708, 1.9243462916699512, 2.2206075141080408]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[2.1217463300838055, 4.3301073689211504, 0.052630199644534865, 2.0221789359913611, 4.4843273723965309], [1.4791081809885487, 0.068288648755175221, 2.6704034058148278, 0.44649297939802302, 2.4930031981204621], [0.81294023424295969, 0.94434357834967675, 1.5522432858003743, 2.0137483877218312, 3.2897778411346885], [3.0960210867313189, 1.2225097292208498, 4.8245592995153865, 0.042859875987852, 1.4620010482781212]]))
      res=arg0**arg1
      ref=Data(numarray.array([[3.5457734116376565e-07, 0.29667450840846288, 0.21607650890744551, 1.5874374928297009e-07, 0.087785407279729791], [0.24233724419997424, 7.6546210138531642e-07, 6.7280560792147883e-08, 0.00083062572374190482, 0.62323194913052105], [2.5692529877603708e-07, 2.1637493549554948e-08, 1.5009528493574359e-08, 0.036289749482658187, 0.0082350770074251286], [0.014337154916582742, 0.00041691426649729916, 4.7545880794340551e-06, 0.00093456679949587582, 0.0003193177374515497]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[5.5698657524943664, 33.276420461335341, 1.0435200010801764, 5.1385951240565557, 37.700632252115035], [3.3108690483405625, 1.0568299148830416, 8.683820746582084, 1.4353340643161967, 7.5222960541450137], [1.9309364988058868, 2.1476297878222947, 3.5127783498090497, 5.1036497297213881, 14.336258410991855], [12.255348733378735, 2.6899331880419983, 49.653322800844521, 1.0353001440943763, 3.2653402102371101]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_pow_overloaded_taggedData_rank0_taggedData_rank3(self):
      arg0=Data(0.387991007185,self.functionspace)
      arg0.setTaggedValue(1,2.8690342128)
      arg1=Data(numarray.array([[[0.37670668063162721, 1.9476692403580376], [2.927535136759349, 1.7605745291709389]], [[4.3160013676115501, 0.53869629510018213], [1.496170047249447, 2.580070938786744]], [[0.37785057125326171, 0.5817543220919843], [2.2579847896449428, 2.5510265044779556]], [[3.500814634915367, 1.9885490130218275], [0.81571117883236399, 1.7382150650975305]], [[1.0109868861545599, 2.1211246085558155], [2.5704104606338412, 1.4599926886117145]], [[3.646023085672716, 4.5212888612759494], [1.9600651412440133, 4.9890964536988296]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[1.834451967872043, 4.197986059072516], [0.18257011287414568, 3.6326805215082665]], [[4.8030356448575411, 1.5531028349732547], [1.3570642756995488, 4.6849520798375659]], [[4.4058172748844537, 2.4308361455679366], [4.5631030643215578, 2.9623425279886693]], [[4.0228362648510236, 1.5181357530843229], [3.5814420751781642, 1.4914773922989069]], [[2.458405915534724, 2.8063520236627064], [3.2653736118462566, 4.0871901648197548]], [[0.75289985482711752, 2.9236754097567794], [2.8836240949687024, 2.6986634243234207]]]))
      res=arg0**arg1
      ref=Data(numarray.array([[[0.70001343013820527, 0.15818328643549337], [0.06255484628360404, 0.18883821521261299]], [[0.016801719145324415, 0.60048166523820079], [0.24255335330493266, 0.08692220074089127]], [[0.69925572254533819, 0.57649457310008279], [0.11791405145654567, 0.089345597138677679]], [[0.036353049569891938, 0.1521779457201636], [0.46195240377321223, 0.19287840873398784]], [[0.38397600879730759, 0.13422688258800547], [0.087720862439622418, 0.25100514838324139]], [[0.031683582279465772, 0.013833878272671138], [0.15633768195130091, 0.0088836532867904872]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[6.9134401180300538, 83.477263031069455], [1.2121848821594188, 46.005278074964863]], [[157.95050309716942, 5.1393791174543457], [4.180005017256339, 139.46651441663982]], [[103.92020005369267, 12.962254697674643], [122.65783627365013, 22.697081190510904]], [[69.405818945700773, 4.9534179419122166], [43.586700330415162, 4.8161775474532078]], [[13.34443588618203, 19.25606681788145], [31.23763634349573, 74.27676186660041]], [[2.2112057882220806, 21.790675316296458], [20.889967869780165, 17.18995203695869]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_pow_overloaded_taggedData_rank0_taggedData_rank4(self):
      arg0=Data(4.23315413486,self.functionspace)
      arg0.setTaggedValue(1,4.05722438026)
      arg1=Data(numarray.array([[[[1.2462372173229352, 1.4613068927245891, 1.797105071774997, 2.6986862220000458], [2.2934530431170286, 0.052242855368271598, 4.3725341077348867, 4.3363292669586091], [4.2594617430231771, 2.0133900850685031, 4.9292897126400774, 0.15791976558402956]], [[2.2433129736276807, 1.6031602830338818, 4.7532024108559803, 2.7362065345635447], [0.97253185178289447, 4.7278468279543349, 4.2173057692331239, 0.60573145662987049], [3.1605040279836558, 0.90660412571011284, 0.74080417633433515, 2.6031006427927856]]], [[[1.1898395967015851, 2.6197468087196207, 3.5275739864044726, 3.5570219364784865], [3.7952153741658003, 3.9895554942934139, 1.5901014218985756, 0.30181541954977625], [3.9290268049784478, 3.2690621609473465, 1.0340996874350805, 2.2558163926348773]], [[2.3957187531023276, 4.022249549632698, 1.2555322333125327, 3.0332631154491914], [1.9124108527773294, 0.72299427435293218, 2.4082596572099058, 4.4818322854222936], [0.12525842699157277, 3.4963529905248278, 3.9359872189050353, 4.7996155761671684]]], [[[1.2976683051396318, 1.5197113799350324, 0.85483340917152828, 4.5481906595917199], [1.7320098511772719, 3.7961863025773548, 3.080896559583429, 0.56079202567767772], [3.7970455403947527, 1.3896661106471033, 3.965503039771721, 2.1500746007210694]], [[2.3665721067566565, 2.5006507929480555, 4.5922332863068629, 1.2105612364126517], [0.6131303067781092, 1.0589498311030854, 0.90699760761303716, 0.53566740684137537], [2.3010444705371507, 4.6917870741271921, 2.0765091350241218, 2.0426947301697735]]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[[3.711689790090146, 0.34063627248276085, 0.64661833133111979, 2.7830979764010153], [3.5167780848999941, 0.85617816127606927, 3.7302930930839451, 4.8144191823917941], [1.4501117166716859, 0.042096414732235701, 4.4600299352436457, 2.1845927963079022]], [[4.5579747674327322, 4.2654867799097769, 4.5451450396103459, 2.9887457567242399], [0.95716171846543696, 2.5420397222735476, 3.2278194831376559, 0.64212723880420886], [4.6062669561499296, 1.8885912652144861, 3.3197334996539305, 3.3726440526305246]]], [[[0.4788295081510352, 0.74199541244257117, 1.4394009509397088, 0.57359131612481351], [0.16390769652846179, 1.473041738292723, 4.9073362381039498, 3.7568660155412452], [4.875416819581007, 3.2461399915405558, 1.9643916378542086, 4.3622241144420197]], [[1.6350514440808062, 2.2706727618065115, 0.76878187351921579, 0.52183226832303597], [1.0162353733706102, 2.826393035001697, 1.7470250886933998, 1.9670929368901844], [3.9082516640739242, 1.1268098845767582, 1.6163744465605516, 2.2447486937233974]]], [[[2.0992080515691049, 2.0082233760514776, 4.4574943855829678, 4.6835534351323433], [1.8031831623563375, 4.6840757818188461, 3.0853534669881664, 2.8681330296018337], [1.7274115222204571, 0.65394764302367425, 1.7321065618235234, 3.7003355629099968]], [[3.6686530820699295, 0.5449841870851142, 3.5164185480360066, 3.9966481688495272], [0.45506021698279109, 0.22796592461210405, 4.4780454456362495, 0.67735971326714939], [1.6219148141548092, 3.9152233919352137, 0.18633464310970649, 3.2232776333630109]]]]))
      res=arg0**arg1
      ref=Data(numarray.array([[[[6.0390983412836148, 8.2366107520619192, 13.371532987801169, 49.109976231967131], [27.366839546277767, 1.0782978046207534, 549.68017358856162, 521.70115639405913], [466.92989790100552, 18.269188186842801, 1227.4641386960077, 1.2559219331530873]], [[25.456791484032063, 10.107481778757611, 952.05321820531617, 51.84207263054919], [4.0686541993613377, 917.85016922919954, 439.37369093475564, 2.39657015809538], [95.625640128558928, 3.6994421649153315, 2.9122950303152404, 42.782846331711525]]], [[[5.5671091800013519, 43.822911622220474, 162.4066895504404, 169.45636514532546], [238.95997187641908, 316.3086957817406, 9.9188071829198705, 1.5457415563331858], [289.85445244116272, 111.84172018303465, 4.4466518866644797, 25.920245398339219]], [[31.718372355062481, 331.58839425337158, 6.1206416663323182, 79.586067468618481], [15.792074767022548, 2.8384061767553685, 32.29756844976847, 643.58114912388328], [1.1981052112419497, 155.25258398301656, 292.78027700207923, 1017.9974474482644]]], [[[6.5043232594166689, 8.9608361615495422, 3.433154859644282, 708.25186125543178], [12.17274049016746, 239.29498908732319, 85.248591909443491, 2.2460955114832197], [239.59185937565218, 7.4276911574738138, 305.51906912271829, 22.25228050687587]], [[30.412052868250651, 36.903540459466036, 754.72312430429406, 5.7360806103413085], [2.4222933720524202, 4.6089906150486888, 3.7015432072030152, 2.1661250451005367], [27.6682646304494, 871.31349361327068, 20.011225728957506, 19.058267479777797]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[180.94953351517219, 1.6113313931211075, 2.4733867971371848, 49.290244557786629], [137.72301167758823, 3.3170529910502338, 185.72592786569564, 847.75330712742141], [7.6207907636247914, 1.0607285575894396, 516.08313356011092, 21.317327133236486]], [[591.96026480552052, 393.00029091677078, 581.41889703390632, 65.7418501605096], [3.8209692291519217, 35.167568795126904, 91.886879296639876, 2.4578785832839247], [633.38134322491237, 14.083027481737094, 104.51010278468043, 112.54857715418471]]], [[[1.9554107824311542, 2.8268524936117689, 7.5073288349749436, 2.2329288648931311], [1.2580370127840452, 7.8694928030645981, 965.57128755365034, 192.76800797098485], [923.35780836458662, 94.275005641133347, 15.660297698481203, 450.01949365586898]], [[9.8738323320707639, 24.048560391281715, 2.934914477435036, 2.076794536364079], [4.150532815426339, 52.371412133152774, 11.550249590312747, 15.71965542674881], [238.2934500562672, 4.8457218240692788, 9.618909887200358, 23.191098089943278]]], [[[18.914691822169292, 16.651744903501257, 514.25375431152531, 705.78617416285988], [12.495347528754069, 706.30267815720617, 75.266467863029064, 55.524129770708797], [11.237296204139865, 2.4989061065146192, 11.31142936732982, 178.09490586165458]], [[170.36535902586144, 2.145236618343934, 137.65368132127043, 269.697813259913], [1.8913888861934598, 1.3761174196070047, 529.26993190082305, 2.5821997754204387], [9.693836010574465, 240.63151887995787, 1.2981776820897453, 91.304255004717774]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_pow_overloaded_taggedData_rank0_expandedData_rank0(self):
      arg0=Data(2.54340659175,self.functionspace)
      arg0.setTaggedValue(1,1.73455701092)
      arg1=Data(4.59752710085,self.functionspace)
      arg1.setTaggedValue(1,4.816864027)
      arg1.expand()
      res=arg0**arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*(73.0987740155)+(1.-msk_ref)*(14.1951132038)
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_pow_overloaded_taggedData_rank0_expandedData_rank1(self):
      arg0=Data(1.3486952286,self.functionspace)
      arg0.setTaggedValue(1,2.24407922103)
      arg1=Data(numarray.array([0.85584484716735632, 1.4248218774593542]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([3.9999132692681911, 2.0721097048777364]))
      arg1.expand()
      res=arg0**arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([1.2917726176082942, 1.5314543452979588])+(1.-msk_ref)*numarray.array([25.358425915468093, 5.3381359334964946])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_pow_overloaded_taggedData_rank0_expandedData_rank2(self):
      arg0=Data(2.88140004989,self.functionspace)
      arg0.setTaggedValue(1,0.0305930739597)
      arg1=Data(numarray.array([[4.2384206017117041, 4.5718774535455555, 1.683386049123017, 2.0212672364028466, 2.124443925459568], [2.5246550937928065, 3.2955412576028458, 3.901675434559682, 2.2681794516265987, 3.6533654531785484], [0.043011389059844959, 4.2375000639331803, 1.6547398676481151, 3.5126013402331138, 1.1125749473495454], [0.022768442159966335, 2.0695740605315942, 1.6413891270466778, 3.037647050912041, 2.324255497171285]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[3.1239324751267064, 3.4809739309258196, 1.4112941734411537, 0.039563555075591117, 0.58107453346624494], [4.9708550631497239, 1.213139976324106, 2.4172145938873451, 3.4039633746423013, 4.333830255379711], [0.34428406352133611, 1.9502545826945228, 4.8964875966211059, 2.4147552832036197, 4.8681965220162544], [1.9449496319390729, 1.1160196781210647, 1.0249037802568783, 2.7288166571750736, 2.0755468692040084]]))
      arg1.expand()
      res=arg0**arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[88.714211039130902, 126.25574549416665, 5.9386840418017899, 8.4914452988238427, 9.4711341882098807], [14.465733745152068, 32.707134132362938, 62.118922960962301, 11.027151701072485, 47.763898404287232], [1.046569773485599, 88.627829217330515, 5.7613509778849732, 41.153244322366497, 3.2459618098143546], [1.0243879403057392, 8.9368322200127732, 5.6805225091670026, 24.895072574022457, 11.701353491750318]])+(1.-msk_ref)*numarray.array([[1.8586125890290954e-05, 5.3517220228500979e-06, 0.0072906916060129969, 0.87113581002028895, 0.13183604288120293], [2.9665522485270356e-08, 0.014549526623742901, 0.00021848724920803684, 7.0002984100250989e-06, 2.7349390031899468e-07], [0.30103997752598211, 0.0011132162654362197, 3.8447877873069375e-08, 0.00022036895900483895, 4.2434171116006171e-08], [0.0011340004791706075, 0.020413881906445323, 0.028048484940973173, 7.3712838547312522e-05, 0.00071918364235304985]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_pow_overloaded_taggedData_rank0_expandedData_rank3(self):
      arg0=Data(4.48332071274,self.functionspace)
      arg0.setTaggedValue(1,3.43587350724)
      arg1=Data(numarray.array([[[4.7614205076397109, 0.51812770886369608], [1.15904756047876, 2.336131135566986]], [[3.3369007758757081, 4.8622011597205459], [3.3764479173992474, 3.0189253163168335]], [[4.4000245304611738, 1.317762923659503], [4.8614066976529529, 4.1461704321146602]], [[0.43611692308779437, 0.72143005899126], [3.0050815879827333, 1.1240345619524563]], [[1.7593989350419086, 1.6372053911700915], [1.6837181639464738, 3.8328846545402531]], [[1.291463577061633, 0.53423035040269251], [0.8781719655595045, 2.6639153669394671]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[0.050221431580143742, 2.4907276736842365], [4.4291586271828836, 3.3025675277309379]], [[1.6687198274535662, 3.253294291940215], [3.4757442065819371, 2.8174336161223272]], [[4.0351290406667566, 3.4993553515798146], [4.906206524143915, 4.2011630559652087]], [[1.2803468872425623, 2.2915794816737627], [3.7017030656912611, 4.0026703252775091]], [[1.4924179590620326, 1.8528404727467638], [1.1050003430295463, 2.5967863307288503]], [[2.7192119475894523, 1.1068311500790913], [2.2898625185296466, 4.7143383540581647]]]))
      arg1.expand()
      res=arg0**arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[[1266.3118885530519, 2.1757646435524571], [5.6916104332406752, 33.283010134999778]], [[149.39081680176324, 1473.0223542485878], [158.52319307447112, 92.710976133867504]], [[736.30056746198477, 7.2219431736791542], [1471.2675837287354, 503.08787873473102]], [[1.9238610537060634, 2.9517779707273806], [90.80517149784437, 5.4003350296754853]], [[14.009544228543763, 11.66279701536917], [12.505769818985179, 314.41763845123199]], [[6.9425244459890489, 2.2289708723234423], [3.7343643064384322, 54.426040333336417]]])+(1.-msk_ref)*numarray.array([[[1.0639483708385502, 21.633291655555208], [236.69748405323637, 58.924911729906825]], [[7.8432462122703139, 55.44809819009901], [72.96726648064643, 32.377933976552946]], [[145.53891687181496, 75.125007465674074], [426.49018869026571, 178.64034205717104]], [[4.8563895722770036, 16.918886336387391], [96.438494844254194, 139.82346512099693]], [[6.3094498739498635, 9.8444477320164854], [3.9113011273088434, 24.658916353329051]], [[28.681289174525578, 3.9201495366107415], [16.88306982843822, 336.5585085798067]]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_pow_overloaded_taggedData_rank0_expandedData_rank4(self):
      arg0=Data(0.767668606025,self.functionspace)
      arg0.setTaggedValue(1,0.638894625878)
      arg1=Data(numarray.array([[[[0.72646318784089736, 0.9948046445515768, 3.8047108428201053, 4.5533549013272516], [1.7720431800982188, 2.1675430524132624, 4.6171344081786678, 2.8181970320501399], [0.71565220634572113, 3.0180498825407245, 0.67205112772693243, 2.7913414485822954]], [[4.3284712846697957, 1.2638355487302591, 2.089372429653678, 1.1556113600115803], [3.3085210031809726, 3.5007648616774403, 2.3702010690633908, 3.0195640086071425], [4.1566166099710573, 4.2789680678758426, 2.5647866411799005, 2.6763629987294562]]], [[[3.0848641148821607, 4.7994191286118397, 2.245264671690899, 4.6889391895361818], [2.5697914947275873, 3.3052971850491222, 3.3489807980938884, 1.121272893040087], [2.2002526907519746, 3.0316553647095144, 0.14662141068519779, 4.1482482690232709]], [[4.8425142060980182, 4.9586901103735261, 0.45851495440306184, 3.857315210604717], [0.43699812226930512, 2.707037810453762, 4.0250578338942624, 1.923107463835404], [4.1641257932635583, 4.7888282376380218, 4.2697734894402624, 2.1147009581402743]]], [[[1.8643845046363388, 4.4826775717849365, 4.3813246242162274, 4.4804884026235277], [2.6618311610388457, 0.94451734584012392, 0.34081674126289607, 0.17774553195995957], [3.3976739488150138, 3.3599869269488614, 3.8843271092231033, 1.0555422248307536]], [[2.1351057957913704, 1.9549144478125351, 0.69950673580688361, 0.31955857889896438], [4.0715018639230021, 1.4524768622241964, 1.8546086195806724, 0.45820792186934106], [0.20430093264058538, 2.4223094546113506, 2.6717262419284844, 0.60409255676375428]]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[[1.7821088009324646, 3.7906162996273864, 1.7580472152217821, 1.5280952210885532], [1.3143490237941766, 2.2210311532168157, 0.52135477349236825, 0.68447991635801586], [4.9055363443236564, 1.1721864996704046, 1.7617550666356561, 2.8172137454736403]], [[1.4824043238698299, 2.806426778148456, 2.0867978451995777, 0.95972609993561542], [4.1571594236615397, 1.470685567422408, 3.510500460595845, 3.3567297131761449], [0.44293616905220345, 3.1422964763604657, 0.53768420021666341, 0.47327343986226739]]], [[[3.0202800236273406, 2.1976884415794733, 2.9833632449708318, 1.9835285639893561], [1.314282396901135, 2.2214995616794946, 4.9174124228854623, 1.3236134754649567], [2.1924609253692511, 4.5813222244802052, 2.5761340089543308, 1.832897997627307]], [[2.9715392354732182, 3.7388230416504955, 0.62722291374262107, 1.4234230215647099], [3.1792755674221489, 4.5409927418232359, 3.2000153932041169, 2.7728820972510908], [2.7648745956569876, 0.51556446256311339, 0.27983267803286427, 1.9283844536378811]]], [[[0.51485153711893661, 3.2422166117084821, 3.4064311362381101, 1.5765091938193925], [3.9959106155854309, 3.6955188909878709, 1.4754736537791167, 0.58237123318943707], [3.9278604832011843, 4.9559904900044245, 3.9360565720921565, 1.5434808352294027]], [[4.3234791692048056, 4.6818133595012235, 2.1745153413071816, 1.4293488480210579], [4.6579315269574622, 3.685181388285506, 1.3182992729307219, 3.5889148738862677], [0.22600693652777096, 2.9692543061709391, 3.3425859124871895, 4.9716123315006815]]]]))
      arg1.expand()
      res=arg0**arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[[[0.82524514585780506, 0.76872382870575318, 0.36569534928891967, 0.30002363614310773], [0.6259259838793696, 0.56377942906067346, 0.29500672107831222, 0.47467579750605915], [0.82760739498894154, 0.45024483700618823, 0.83720325778327487, 0.47805824615124731]], [[0.31840362664359934, 0.71594315584635881, 0.57555292128485158, 0.73672518450956692], [0.41696062089988473, 0.3962966537310636, 0.53436594337046173, 0.45006462629303517], [0.333204937585447, 0.32259844747299515, 0.50756918280239938, 0.49281436049988714]]], [[[0.44236088241594618, 0.28112589119292475, 0.55231233901691645, 0.28945885439136543], [0.50689797644297807, 0.41731617642562197, 0.41252397649621703, 0.74344436247216594], [0.55892469868681749, 0.44862810314039953, 0.96197551399081838, 0.33394299150530499]], [[0.27794086217386171, 0.26953325773576653, 0.88583015686549926, 0.3606443033494548], [0.89088399679410879, 0.4888336364752095, 0.34499899128127365, 0.60141857881590366], [0.33254404658972164, 0.28191420348027513, 0.32338364486201754, 0.57171144108216698]]], [[[0.61082917977206996, 0.30568285489937796, 0.31398511245521754, 0.3058598384285765], [0.49471148238364582, 0.77901289002106411, 0.91382976996638077, 0.95409177631767805], [0.40724704809162177, 0.41132528119979139, 0.3580778047649652, 0.75647760698089461]], [[0.56863537398625019, 0.59638205110684095, 0.83114785029302229, 0.91898050069388793], [0.34078842303959372, 0.68111049598395357, 0.61241004192557369, 0.88590207016925837], [0.94741639574229963, 0.52705430210475535, 0.49341889440841097, 0.85238212836777816]]]])+(1.-msk_ref)*numarray.array([[[[0.4500427060283903, 0.1830024427905301, 0.45492039597563733, 0.5042865021638202], [0.55496565259495956, 0.36970239967725993, 0.79169810041901212, 0.73590239962694182], [0.11105191217082759, 0.59146190274683841, 0.45416532055039682, 0.28304309630303437]], [[0.51471574894882399, 0.28441427810770731, 0.3926179462243975, 0.65052704793319716], [0.15528814813471295, 0.5174252094400994, 0.20747187889005342, 0.22226881388486286], [0.82000702076711718, 0.24468140795114249, 0.78592729846472731, 0.80893723224950387]]], [[[0.25842933224188158, 0.37358899866570922, 0.26273911412344586, 0.41120968042754158], [0.55498221850976404, 0.36962482415485348, 0.11046261070512944, 0.55266697471750426], [0.374464973041363, 0.12841289299786546, 0.31532589366222141, 0.43991790099580474]], [[0.26413462616186195, 0.18729851787021012, 0.7550240018683102, 0.52849817729069182], [0.24066111297035186, 0.13075417611191159, 0.23843530250412998, 0.28872089092917386], [0.28975853345880359, 0.79375455062202971, 0.88217092860643909, 0.42149532469952072]]], [[[0.79400811776488633, 0.23396960059731442, 0.21737424572295089, 0.49346618772302425], [0.1669216291684246, 0.19096776372950597, 0.51631645057245446, 0.77034910736112772], [0.17208902781311416, 0.1085698253539135, 0.17145827964128493, 0.50082240934807065]], [[0.14413762134114269, 0.12275974941085002, 0.37748777076105644, 0.52709694760744075], [0.12408026137946886, 0.19185425619673638, 0.55398435751345665, 0.20030974939240048], [0.90370286156873203, 0.26440515507593793, 0.22368172436465525, 0.10781261638250678]]]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_pow_overloaded_taggedData_rank1_float_rank0(self):
      arg0=Data(numarray.array([0.1843079460728807, 3.4523511483934319]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([4.1351509132691238, 3.6928198015774343]))
      arg1=2.51864000764
      res=arg0**arg1
      ref=Data(numarray.array([0.014130901986314713, 22.663024774245276]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([35.704241664210805, 26.851642067023423]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_pow_overloaded_taggedData_rank1_array_rank0(self):
      arg0=Data(numarray.array([3.2977130332557203, 0.16976095089810644]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([4.7753847272739574, 3.0411337711385587]))
      arg1=numarray.array(4.48472881085)
      res=arg0**arg1
      ref=Data(numarray.array([210.88425048450057, 0.00035158585088039936]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([1109.6049419840365, 146.65042674494293]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_pow_overloaded_taggedData_rank1_array_rank1(self):
      arg0=Data(numarray.array([0.99141704325790569, 1.1719190327244728]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([3.9493585765690904, 4.8989718731726573]))
      arg1=numarray.array([2.8374253519560422, 0.77757166625181273])
      res=arg0**arg1
      ref=Data(numarray.array([0.97583807464127181, 1.1312870806605213]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([49.271933332282316, 3.4403771358889896]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_pow_overloaded_taggedData_rank1_constData_rank0(self):
      arg0=Data(numarray.array([1.1529774124847645, 0.58227358206817148]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([3.5923383012165253, 0.058522953916846698]))
      arg1=Data(2.02891919842,self.functionspace)
      res=arg0**arg1
      ref=Data(numarray.array([1.3348405969977957, 0.33378117300964977]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([13.391077445491712, 0.0031550376089060912]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_pow_overloaded_taggedData_rank1_constData_rank1(self):
      arg0=Data(numarray.array([1.5106824928699971, 3.8786213759531876]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([0.48660734789826637, 0.10423573788557165]))
      arg1=Data(numarray.array([2.5583880125109015, 0.22822211190140054]),self.functionspace)
      res=arg0**arg1
      ref=Data(numarray.array([2.8733898772921491, 1.3625397983061285]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([0.15837318119414756, 0.59688365296278256]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_pow_overloaded_taggedData_rank1_taggedData_rank0(self):
      arg0=Data(numarray.array([2.3271463200997102, 1.1183883755594386]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([3.8629630953883574, 3.7380725394052305]))
      arg1=Data(4.96280973024,self.functionspace)
      arg1.setTaggedValue(1,1.353354768)
      res=arg0**arg1
      ref=Data(numarray.array([66.141826047243441, 1.7424328429281473]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([6.2274713351642141, 5.9565601105055705]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_pow_overloaded_taggedData_rank1_taggedData_rank1(self):
      arg0=Data(numarray.array([1.2079686882705576, 2.6594376980678711]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([1.6896053453375053, 2.5375523643590698]))
      arg1=Data(numarray.array([0.098805780868636978, 0.13165444958329942]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([4.004477227282262, 0.72244156543207416]))
      res=arg0**arg1
      ref=Data(numarray.array([1.0188437255803333, 1.1374320725370723]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([8.1688504567699187, 1.9595945146093983]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_pow_overloaded_taggedData_rank1_expandedData_rank0(self):
      arg0=Data(numarray.array([4.248395681078259, 1.2174837159763772]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([0.91844602062177638, 3.995261276620552]))
      arg1=Data(4.30545570193,self.functionspace)
      arg1.setTaggedValue(1,4.8003197762)
      arg1.expand()
      res=arg0**arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([506.75113534073648, 2.333231626512922])+(1.-msk_ref)*numarray.array([0.66473055520547764, 771.98569434535182])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_pow_overloaded_taggedData_rank1_expandedData_rank1(self):
      arg0=Data(numarray.array([2.9867514125873016, 1.2494856844635471]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([4.2679878552503476, 0.28540340269867942]))
      arg1=Data(numarray.array([4.7415241328563127, 0.65448903117891222]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([4.0446291245465531, 1.7951910398996451]))
      arg1.expand()
      res=arg0**arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([179.12982232493241, 1.1569366120028122])+(1.-msk_ref)*numarray.array([354.01283531313993, 0.10530406568993145])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_pow_overloaded_taggedData_rank2_float_rank0(self):
      arg0=Data(numarray.array([[2.213284476255605, 2.3870043979494246, 1.5377842774413684, 2.0190181444431823, 2.3851110918053759], [1.5855962054755115, 1.7596881846917152, 1.5629572647888756, 1.4986700299641902, 3.8866053580517876], [1.480960106989756, 4.9613505925094463, 0.18004255025718882, 3.7287774026057052, 4.1985753760972147], [4.8197551680693271, 0.50364992539132158, 3.2450221289359114, 0.03242676644481253, 4.3389919966398542]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[0.11011132886270186, 4.9227763157202906, 3.4598999572704989, 1.5490193235496825, 4.1778216155352803], [3.7591935335129385, 4.5462651527486768, 1.0471795913151178, 1.5756351431812692, 0.90275855970555896], [1.4818246085032627, 4.2571843981880875, 1.5162977522140455, 4.6171252329194354, 4.1665818777183832], [2.4076536457088529, 0.53668233871778159, 1.8817675233114148, 1.5251961643909164, 3.1150731775186671]]))
      arg1=3.14515463073
      res=arg0**arg1
      ref=Data(numarray.array([[12.167335031725244, 15.431452345901439, 3.8709270247358849, 9.114087250216075, 15.392989013073482], [4.2622279833329433, 5.9147076729111649, 4.0737430317034002, 3.5696251290901473, 71.4973944695125], [3.4386283415965275, 154.08817143550431, 0.0045502967851355873, 62.757392685738665, 91.149018658066652], [140.67572805310309, 0.11565087795526616, 40.537652858795795, 2.0728205179950791e-05, 101.0849475797838]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[0.00096920018868527121, 150.35151522193598, 49.595034127170422, 3.9605740374012801, 89.739455482407351], [64.381591993431755, 117.06468983271594, 1.15603151632622, 4.1785786376123415, 0.7248795688970523], [3.4449454965586437, 95.211065260901236, 3.7033535884929418, 122.89991574012876, 88.982312323069138], [15.855216333964238, 0.14122745272652729, 7.3038598080960746, 3.7721390041592562, 35.647900915658475]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_pow_overloaded_taggedData_rank2_array_rank0(self):
      arg0=Data(numarray.array([[4.9390795610121199, 3.4776225705946948, 3.137281982259323, 0.11740681496892434, 2.7011963992161081], [1.8173488214839975, 4.5131399649639956, 0.7116895216138498, 2.9876571026210965, 1.471671481647205], [2.2835553764425844, 3.1206574072307953, 0.43934092639492661, 1.8666916282584209, 2.4453129132398082], [3.561676734791893, 3.7974870351757808, 4.6894064154116109, 2.7846248386403882, 1.6264937808485544]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[1.135143555339813, 4.1501411849304519, 3.3167876455513823, 0.26167356416823045, 2.1931042081993275], [0.21587919164480335, 0.091591644943501652, 1.3276505946592416, 4.051283696832563, 4.5861629095093583], [2.6929430426791829, 0.97601741308743484, 1.4156842426769622, 4.0635788409021547, 0.94905912500731315], [3.0317807055456658, 0.42913242100542931, 3.9273532580529138, 0.55478156697722747, 3.740138995878135]]))
      arg1=numarray.array(2.73384318695)
      res=arg0**arg1
      ref=Data(numarray.array([[78.762492542898769, 30.184315165819893, 22.777159034175764, 0.0028621170081324252, 15.128883325582505], [5.1199251465503481, 61.552034864339966, 0.39462590024841704, 19.928735191667432, 2.8758657914525521], [9.5584558077609714, 22.448706157778098, 0.1055542576507446, 5.5089638856087833, 11.52512028149294], [32.220842710279811, 38.39299666519755, 68.348820671088234, 16.440779041350304, 3.7803408014965645]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[1.4141654454824693, 48.942592463925294, 26.51920169966241, 0.025600398889503051, 8.558596598894967], [0.015129921881007225, 0.001451699450863628, 2.1701601906941126, 45.820839727873789, 64.313056196402144], [15.002844635417075, 0.93579051412314751, 2.5865355930487071, 46.202010492592365, 0.86680889373006131], [20.74369923917256, 0.09898338506468736, 42.089730711285021, 0.19974215704921897, 36.828603501093774]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_pow_overloaded_taggedData_rank2_array_rank2(self):
      arg0=Data(numarray.array([[4.1706753303305657, 1.50115112398766, 0.65100932286712199, 1.9957527974506115, 2.8279485552777652], [4.8596584932847975, 0.68063229086534416, 1.8419545326771685, 4.6406165452589185, 1.3779907426676758], [1.5726479160231657, 1.5327479822023027, 1.6407914761717339, 2.0948428010787912, 0.049232865731187139], [2.8091925405995357, 4.94310489546789, 0.13907576988150924, 1.6237948838945435, 1.0130527572757044]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[0.82806184840342822, 4.0844241413225184, 4.650934178825513, 3.1191467104022044, 4.5549266735152516], [3.0396969060532979, 4.0144848596540523, 4.2514297115466189, 2.2065969601545086, 4.1913939248808996], [2.9661325018216189, 0.5638774348744281, 2.098095753207438, 3.1318723257615693, 2.182126388641255], [1.3036461268329453, 4.8618133886977528, 2.4335900028460959, 3.2145997305935858, 2.219739395825874]]))
      arg1=numarray.array([[1.2510065477737611, 0.7353958404259846, 3.7482027687466428, 3.1580838972498779, 4.2469484987718342], [4.6362756927202398, 3.4276604754100202, 1.167942702618318, 3.3170422014099756, 3.0521887938519958], [4.5239494550151056, 2.5932382681451078, 4.4191563194786987, 2.1846434607471146, 2.927479770154326], [2.0423245931405831, 2.8180496956817276, 0.56710916855872495, 3.2976087452789482, 2.3524302892536011]])
      res=arg0**arg1
      ref=Data(numarray.array([[5.9687342961157279, 1.3481610680447362, 0.20011841608937661, 8.8667055042239742, 82.675385606187987], [1525.0832559886007, 0.26747361606035575, 2.0409415259324635, 162.57721308815442, 2.6607617974389393], [7.7544497201238309, 3.0267033293950614, 8.9197884193167347, 5.030386915665563, 0.00014845789793474563], [8.2442099440866112, 90.307953348361863, 0.32668564772558278, 4.9459466009419035, 1.0309771393044869]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[0.78976156791481633, 2.8146414148391856, 317.74300670400174, 36.325074395625883, 625.94554183427579], [173.19458023632211, 117.22981798373705, 5.4211680544133394, 13.808412369507099, 79.351579734792253], [136.82522504869058, 0.22634071442237996, 26.436035662144516, 12.110304803477362, 9.8189275499338802], [1.7186740734621293, 86.185002549516966, 1.6559394363784767, 47.022543135024904, 6.5260634268021027]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_pow_overloaded_taggedData_rank2_constData_rank0(self):
      arg0=Data(numarray.array([[2.1911765240533638, 3.8887183077438205, 3.0224465303080046, 1.6455513410558396, 1.0537393658924092], [1.983844681094485, 3.1179934689910094, 0.98141951215018197, 4.6713795182176741, 2.5859912311019579], [3.5978078972159975, 1.8262346124860565, 0.69146820408303078, 0.85328147842287394, 1.4043348870084789], [1.832745433653205, 2.0223701805622332, 1.1553626878235477, 0.70803416276395514, 4.9878822640159717]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[4.9475826979630124, 3.4612666881506335, 3.5797558687067226, 2.7796794234540103, 0.082257068694058494], [4.547605671971489, 2.6473245019652829, 3.2110798669952292, 2.1585991211721058, 1.359594042503925], [4.1847336835106983, 2.2641263354581191, 3.4478400485699532, 1.0138006265603774, 3.3614437136341815], [3.9183917202738612, 1.3871503691105858, 0.47693396282202644, 3.4842291109869055, 2.4394417083789492]]))
      arg1=Data(1.13365182807,self.functionspace)
      res=arg0**arg1
      ref=Data(numarray.array([[2.4333776737977848, 4.6626755851254282, 3.5039623829671274, 1.7588218641325553, 1.0611371987545102], [2.1740529186056361, 3.6297985652705624, 0.97896249159034421, 5.7400770311468667, 2.9361308563666695], [4.26926843095523, 1.9793112055332243, 0.65819939420062168, 0.83537732192841785, 1.4695366152523821], [1.9873127960595505, 2.2219766382628254, 1.1778792157559048, 0.67610427880513013, 6.1829248622662654]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[6.1263240399809407, 4.0860607055788112, 4.2449925309485019, 3.1866577120147261, 0.058909338753043924], [5.5679672622180254, 3.0152000500050535, 3.7528910303031728, 2.3924049595616372, 1.4165752297413103], [5.0670462213896119, 2.5254209435080708, 4.068096663876517, 1.0156594769268206, 3.9527284993840497], [4.7030305354320507, 1.4491675909386548, 0.43199986119901901, 4.1168046283279418, 2.7482264862892527]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_pow_overloaded_taggedData_rank2_constData_rank2(self):
      arg0=Data(numarray.array([[0.60820118147894964, 3.0139692313073696, 2.9128342222675951, 1.8049562169386011, 1.7927698101005263], [2.0804078500998373, 2.1600870922952065, 1.2854958461590404, 3.4526804270467686, 1.3459591717894852], [3.4002928862146895, 4.9530821346754248, 3.1982202732979701, 2.7813380723031291, 2.982166874137353], [0.41653413917183757, 2.1378394337008424, 4.0371346369499053, 3.3588664114590432, 4.4452889583500221]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[2.0704830621978965, 2.7917071907636455, 0.28062132363566195, 0.20038317894975965, 4.8156530724343112], [2.580305272694992, 2.6328347012181101, 1.2005188058108078, 3.4055966482250204, 0.20028247911903674], [2.3084058161006284, 2.3398445213589127, 4.1206314435313454, 1.0768148008796694, 4.3681589216514611], [0.95238062563227821, 0.70126527244779124, 4.5561577635753432, 3.4418301901913333, 2.0713092399248287]]))
      arg1=Data(numarray.array([[1.3699676169184387, 0.48975147157115745, 0.37033240571819365, 2.4912390141859015, 1.5956374379842557], [0.61427439394995043, 4.3363094344210742, 2.7417603876674348, 4.9060348577260617, 2.8242011845039836], [2.1026510338451105, 2.7283748612412735, 3.6647719933252754, 1.4554304868901258, 2.7497142426496484], [0.63422012373728354, 4.3778896736803148, 2.8466027208956763, 3.5144565175919373, 4.0356127347871951]]),self.functionspace)
      res=arg0**arg1
      ref=Data(numarray.array([[0.50600142357307509, 1.7165598073333233, 1.4857685990490785, 4.3543143444660526, 2.5382432022467776], [1.5683047834938393, 28.207908614146469, 1.9908826571117118, 436.73095264948688, 2.3142592376611844], [13.109718132719754, 78.683003053003532, 70.855580523154572, 4.4318035017257573, 20.175636228018682], [0.57381877995768693, 27.835210578446048, 53.118978493586226, 70.677548062281062, 411.7878021225394]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[2.7102413627770776, 1.6533523713516523, 0.62462764229357826, 0.018229280973140926, 12.282030788403109], [1.7901070758209294, 66.540612549936029, 1.6504816159132816, 408.28031204033221, 0.010658576735365695], [5.8065569316585641, 10.169053462169785, 179.35025945806677, 1.1137276838854338, 57.628552824490285], [0.96952994128901948, 0.2114900088679246, 74.949545636456037, 77.005748208930584, 18.89044189916633]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_pow_overloaded_taggedData_rank2_taggedData_rank0(self):
      arg0=Data(numarray.array([[3.0843575474846765, 2.0468453990532729, 1.2722367615293528, 2.1833092813634041, 4.6349414171283509], [0.72607425453214514, 3.9374088063202026, 3.7232032021398678, 3.174894005180394, 2.5725621689557996], [0.19212697298463383, 3.1716282133933644, 1.6877423354980614, 1.3452957799264114, 2.8605439667242081], [2.378773039225198, 2.752547787299688, 4.8496539514738188, 2.3079531733303971, 2.9018918099617421]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[4.3608050022680009, 1.4105698609126431, 2.6940551524712202, 4.7900025442470557, 0.28915876004130497], [4.4731388471996549, 0.18702194647840764, 2.4864725409148254, 0.24697134254271996, 1.6390238816574831], [3.204651514136577, 3.1876354774963835, 4.7508471939916035, 3.7821112443105114, 3.703596641841755], [2.4214253564483075, 0.77476475705902703, 3.009533532132854, 1.65989396206443, 1.4653382010355396]]))
      arg1=Data(3.49509806178,self.functionspace)
      arg1.setTaggedValue(1,4.30356807358)
      res=arg0**arg1
      ref=Data(numarray.array([[51.248204472492219, 12.225671551136065, 2.3199317360724012, 15.319376554819883, 212.75999173030513], [0.326674393929683, 120.31481119571291, 98.948676475767996, 56.701279895085982, 27.181222623062133], [0.0031337979852387328, 56.497690992384918, 6.2295584462781441, 2.8198809439444337, 39.385168925188637], [20.672388940679202, 34.428371712055345, 249.24491972265659, 18.600043479352319, 41.411048243207645]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[565.48187569989693, 4.3947060523225518, 71.167809048289897, 846.9761624672841, 0.0047969325957539543], [630.89148001902493, 0.0007354279339973097, 50.398921380726357, 0.0024333979471693082, 8.3846003489980134], [150.19730648335164, 146.79511913740859, 817.58014421664689, 306.42125220000548, 279.96950031763362], [44.965151734783184, 0.33345323513151753, 114.61826300751623, 8.8538211960689353, 5.1775574548244627]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_pow_overloaded_taggedData_rank2_taggedData_rank2(self):
      arg0=Data(numarray.array([[2.8439374172103977, 3.427700689872144, 0.84117640683733863, 0.54051097988164853, 1.4751324420159202], [1.2274696644770211, 1.1317232608338919, 0.88574058305913239, 3.9992940280775477, 1.2859055961869039], [2.6435088255963439, 1.2773332509182977, 4.9668961639766644, 0.4373209672140983, 2.7984809122319447], [0.5955895919083527, 3.8717475042779999, 4.6208034642128721, 0.69365616512321382, 2.4046561537956519]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[1.4640213869062095, 3.6913921556825553, 3.0302429225625196, 1.9628424645170339, 1.1913157409514761], [3.1725296070389182, 3.8909920400993947, 2.8504563129783964, 2.4190316154698293, 4.34353253585539], [0.54173994316990026, 0.030827139336133083, 4.0742326662907447, 4.9704067706307331, 2.1093177543484742], [3.8098109818406392, 0.83411190909254385, 0.48196430926825679, 4.2682145031687497, 0.49167461116729855]]))
      arg1=Data(numarray.array([[4.0824282054663792, 3.2162330777580732, 3.3318927420047206, 3.6288460823226254, 3.6477599193237138], [2.7065981877097864, 2.0600223848702157, 4.264816890145303, 0.211975255028231, 1.755782794919958], [3.8791257355286848, 1.3269188164226442, 1.7688403941854822, 1.630720386810649, 1.602031593694881], [1.1567616383068333, 2.0718550006249998, 1.3798750228323227, 2.1334985795578363, 0.28735118090402251]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[4.0559786347474276, 2.0523466815034439, 4.5752042760222258, 1.3324935541842813, 4.4239134121174715], [0.29066876380747975, 4.8314550047839271, 4.8326933026840733, 3.331927299836885, 1.4269201715989821], [3.2990737305766138, 3.1552320545894843, 3.2520700277508876, 2.2468333290331173, 4.5327321627848569], [0.89198747133856682, 4.2066005634302712, 3.5604600125967951, 0.50322289927758324, 1.6753205837804954]]))
      res=arg0**arg1
      ref=Data(numarray.array([[71.30105481765645, 52.564676698066883, 0.56199417941008845, 0.10724788375674234, 4.1290962588876328], [1.741471546032201, 1.2903457685685298, 0.59603540467009941, 1.3415460067433727, 1.5550610186152654], [43.42024496532116, 1.3837481927837354, 17.031912170358993, 0.25956475783492233, 5.1997650797357684], [0.54912022322489507, 16.5218286586685, 8.2646995773807959, 0.45822785339395106, 1.2867554759082402]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[4.6930675246505258, 14.590524156328886, 159.53562121055609, 2.4562239831645512, 2.1693835114725424], [1.3987592458999349, 709.33272134276194, 157.92894064937354, 18.978668285148125, 8.1311347022997378], [0.13235989448850471, 1.7070006094203922e-05, 96.363318603250235, 36.700890614129491, 29.461096440618363], [3.2973008991771842, 0.46625358936250716, 0.074368179672490237, 2.0756510272498372, 0.30441177218783078]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_pow_overloaded_taggedData_rank2_expandedData_rank0(self):
      arg0=Data(numarray.array([[3.9992632507832853, 3.6546088349879216, 1.2501968218917721, 2.6379548433829023, 3.8668993752638174], [0.92760454075334853, 1.8754955560762669, 0.82062377480025661, 4.3462032094977756, 3.5176798342435194], [0.87064537982122547, 0.6796999906931469, 3.1977069397736386, 2.6132339658068116, 1.5589208939987433], [1.2113520046118658, 0.066395392295468425, 0.68924201441627997, 4.160789167822152, 4.6572041705801936]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[0.71420118736153848, 3.7129220066784767, 3.7301455310799376, 4.6237182206937053, 0.8504019455025148], [4.6461761976179377, 0.83966160251132227, 2.6002277456118952, 3.8678407612953185, 2.8123038175697657], [4.8205111505938074, 0.81061572726776354, 1.8239307778076772, 1.2499613517246557, 1.4248461481313899], [1.4371334808760916, 4.9761217145278653, 2.9951176332802882, 1.4558426393221677, 0.694215548944078]]))
      arg1=Data(3.8220695095,self.functionspace)
      arg1.setTaggedValue(1,3.23410267738)
      arg1.expand()
      res=arg0**arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[199.89842595325612, 141.6501509891842, 2.3477840595312447, 40.748640183975631, 175.76877265299274], [0.75034087413563977, 11.062887267948579, 0.4697348298457073, 274.72670817537033, 122.41357556322613], [0.58893757797917168, 0.22861510803670357, 85.0214382779142, 39.30831601390102, 5.4574156095609165], [2.0809666153445114, 3.1486858967620932e-05, 0.24112684697418837, 232.5587062292891, 357.7842778743925]])+(1.-msk_ref)*numarray.array([[0.33669813219391831, 69.585616626834891, 70.634985952867439, 141.46543384798528, 0.59210343769692908], [143.69971622274483, 0.5682579134333462, 21.988187992124548, 79.420702930590238, 28.334358273086103], [161.88000049797174, 0.50710562725918906, 6.9843791887762983, 2.0576594781453923, 3.1426890484953813], [3.2311849419108611, 179.39776628519786, 34.735329081635015, 3.3692158184920502, 0.30716831119392624]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_pow_overloaded_taggedData_rank2_expandedData_rank2(self):
      arg0=Data(numarray.array([[4.2260515028763059, 2.9085486469207855, 2.6633549568197137, 2.0516242085371097, 4.2736188325633622], [1.5103750572936008, 0.45984045985772776, 3.5876917134322079, 0.20698087425851475, 2.7681703801855395], [3.6927140292166656, 1.0847800243529242, 4.0776691350662091, 0.66410383158401876, 4.9736298875063385], [4.2302498121712659, 4.0202125984613444, 3.8747741896484493, 4.3902986332980687, 2.9319340950031512]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[3.1028342262095077, 2.3375203225688188, 1.8113937799653825, 1.4958352048121524, 1.6939444285805896], [2.5394368045005917, 1.0678619811218892, 1.7057161940631731, 0.3211668774009101, 2.342907726139388], [2.9568825198693296, 2.5954747293792564, 0.89271729616716933, 4.5333210046043595, 1.5712115126335786], [1.7426361108626494, 4.7091423038855051, 4.095229410698022, 1.3915627741648775, 2.976893871314819]]))
      arg1=Data(numarray.array([[0.071238510531285576, 3.5263405297906867, 1.181998448797474, 4.1119824457408072, 0.79739865862309256], [4.251862664400579, 2.1689420738419432, 0.35513633766077457, 4.7244515380619596, 4.7213193917640615], [2.6404253767847772, 2.0596063315864117, 2.3148445028548279, 1.2036145216325949, 4.94376186025527], [3.8584629484494766, 3.3002241137121553, 1.1261437485705106, 3.467457752930708, 2.7007552081171209]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[2.6915568796352578, 0.94988973341759131, 0.28188747814901488, 2.3235980905204738, 2.6137950574488795], [2.4827265563240539, 3.7587194013434968, 2.2486204003634431, 0.53099350588101712, 3.843320160578247], [0.36950698155264994, 1.952212129567402, 2.1184073134608217, 4.352473794128989, 1.0282991416611476], [1.6747174249717549, 4.210622165831416, 4.6474173072189098, 1.6346281995892338, 1.303052391408666]]))
      arg1.expand()
      res=arg0**arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[1.108129870574931, 43.159921110205516, 3.1831454077970185, 19.201746704366965, 3.1841660858025644], [5.7735641550892627, 0.18544473980572632, 1.5741097499065619, 0.00058633451720968327, 122.38650233430513], [31.479941837362507, 1.1824694968821152, 25.882655115912652, 0.61099921355741682, 2780.9149126486845], [261.10191704916178, 98.663652124429404, 4.5967406771713053, 168.97444089767563, 18.267080770525403]])+(1.-msk_ref)*numarray.array([[21.066683529362159, 2.2401493016060496, 1.1823079173293956, 2.5489396210754496, 3.9654774987683981], [10.112355181660909, 1.2799127117690554, 3.3225406264964161, 0.54711324815497864, 26.36862932513128], [1.492713552959394, 6.4363413763362605, 0.7863068689085273, 719.50778086573109, 1.5914314078296035], [2.5348547508415353, 681.55941292289356, 700.66829879140903, 1.716223037944089, 4.1432245250993116]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_pow_overloaded_taggedData_rank3_float_rank0(self):
      arg0=Data(numarray.array([[[3.8861678383009233, 2.3675344947576966], [1.1249323059689096, 1.150150971071376]], [[0.99145634263281368, 2.9461805922013911], [3.8154225205177688, 0.66241474951880586]], [[0.080021482338403907, 4.0623077781795924], [2.6877145928773163, 0.7349068630748169]], [[4.4269569810900817, 1.9925575263828372], [0.75733201389724425, 1.2444666972665177]], [[4.9209957793716965, 0.082600750253622485], [2.948664571540164, 3.205809513368568]], [[2.0500679981829326, 1.4245391988933824], [4.4709251028909378, 4.5075056525417612]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[1.9531457890089763, 0.36380750952884416], [0.50809335189257354, 3.6049207828691556]], [[3.520567660319843, 1.4933090863328171], [3.009216033951708, 2.8683095536998651]], [[2.6055166796595519, 0.32530829468360478], [3.3316082008154657, 0.56321590843060487]], [[1.4420082393125568, 4.0752267089324583], [0.8000863850000135, 4.4419459496767741]], [[2.7954754523069938, 4.3725105790349508], [4.2595988108319229, 0.4036134753048411]], [[4.4582686918556602, 3.8486689702547512], [0.10747603507598684, 3.0584845338116233]]]))
      arg1=1.4646435301
      res=arg0**arg1
      ref=Data(numarray.array([[[7.3019512447913142, 3.5335454081015882], [1.1881791714133692, 1.2273945727950819]], [[0.98751146309832194, 4.8674073307718553], [7.1080858321389364, 0.54704015058134892]], [[0.024750765259166137, 7.7917530292693131], [4.2549381502917001, 0.63690991281609921]], [[8.837185066017808, 2.7449231600450825], [0.6655757393593974, 1.3775794170664097]], [[10.31836622507552, 0.025927915990743407], [4.8734191136945135, 5.50831031379784]], [[2.8617347299327771, 1.6791064187602234], [8.9660330626684424, 9.0736817260473313]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[2.6657697846760207, 0.22742254587234417], [0.37094717502855312, 6.5411441734879725]], [[6.3181909566373653, 1.7991494590743939], [5.0206925643139391, 4.6801415518601193]], [[4.0657085955987524, 0.19305729989729645], [5.8277603719757449, 0.43134783721057202]], [[1.709350308135152, 7.8280726605536151], [0.72132346157043337, 8.8810435497048701]], [[4.5071128021320028, 8.6784531175405668], [8.3521981726331607, 0.26477693437839794]], [[8.9288829964740462, 7.1989858915571476], [0.038125614788637893, 5.141545039723308]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_pow_overloaded_taggedData_rank3_array_rank0(self):
      arg0=Data(numarray.array([[[2.8909238346619528, 0.74284756000635455], [4.4251192716769054, 4.68776999408332]], [[0.29914206888462824, 4.7588657317188492], [4.4224428016786606, 4.1304428661793233]], [[4.8619170397775884, 3.7990144092752565], [4.3215612355745048, 4.2385141667153867]], [[4.0419624556932918, 3.7911232056056581], [1.2401098504234196, 4.2786984266139774]], [[2.8682925008246931, 4.4848639143383089], [4.2543856086263867, 1.2829295625741639]], [[0.1467214495611901, 4.3643783932062998], [0.83249011033239673, 0.60255226420688968]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[0.78603789817593017, 4.2363087514901165], [4.7264824277129236, 2.9855400257276066]], [[1.2788878998830324, 0.20469060908505654], [1.919998747007746, 0.76257446632869819]], [[4.9686554148889019, 3.3137308489021549], [4.9536570567198002, 2.1463770292582058]], [[2.0662200957108015, 0.8590626431455336], [1.1058246235907532, 1.0469940664494668]], [[3.1427937747321661, 2.0011924265898404], [1.9972332210656654, 3.2854018159669036]], [[4.9113784996304526, 1.1222501864585857], [4.3132200742454883, 2.7864951626171557]]]))
      arg1=numarray.array(3.63908799207)
      res=arg0**arg1
      ref=Data(numarray.array([[[47.616002899262249, 0.33899450058927966], [224.17018058343953, 276.5065265005066]], [[0.012378615640237824, 292.07519508274993], [223.6771644176855, 174.44796200429863]], [[315.75707223881557, 128.66889165473702], [205.66118506279238, 191.63976181456187]], [[161.22881601396159, 127.69894514979534], [2.1883144886006121, 198.33471866108457]], [[46.273458076007564, 235.38183325622353], [194.26413697406642, 2.4760508329099085]], [[0.00092639649093318268, 213.17384122954732], [0.51315962236281465, 0.15826374466454621]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[0.41639896783141556, 191.27713767892635], [284.9071242971537, 53.536518304073212]], [[2.4477822944542531, 0.0031118933660775352], [10.738832491124866, 0.37291923445210406]], [[341.72326175986763, 78.249250563105662], [337.98438214254179, 16.110438617279318]], [[14.026693643422551, 0.57532144852498146], [1.4420427334224188, 1.181894667299451]], [[64.532169006721219, 12.485807604452688], [12.39614850736019, 75.84221027601501]], [[327.6046142786854, 1.5215308966281427], [204.22031638803918, 41.649164287128521]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_pow_overloaded_taggedData_rank3_array_rank3(self):
      arg0=Data(numarray.array([[[0.059465652059167248, 1.7955361013669817], [4.1566987533767943, 2.1875836785543261]], [[0.11207530677166157, 4.610700171668638], [3.2781140279088739, 1.5640548830179635]], [[3.692937527342921, 2.1435661777240056], [1.5420904679016634, 4.4441570907668524]], [[4.2043321190734462, 2.3608968098455132], [4.3740868709272833, 1.7410980906847371]], [[2.6844979248782392, 4.5575984234582716], [0.23907070265959524, 0.43674784203850192]], [[4.7413578459537922, 3.2982301230357964], [2.7945305588752087, 2.1359078376063985]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[3.1177685613070389, 2.9031017900423257], [3.2374454417508267, 4.0102103423094206]], [[3.8191457844031822, 2.6904658938973771], [4.8676178665109218, 3.1376280347248175]], [[2.0230169710168084, 3.8644228474090618], [2.7434913079828691, 4.5141907926778213]], [[0.57421536327262546, 4.3056518127060297], [4.1170664336971594, 4.9811755563579192]], [[3.3622881407261862, 1.7197889780328774], [4.7727326502523963, 4.2492646569562798]], [[2.0964399456590428, 1.6608009580278598], [4.3392234222946113, 2.3901828752357259]]]))
      arg1=numarray.array([[[1.4068315352804655, 4.343023138508487], [4.458026687624919, 1.7339720534475616]], [[3.969503112450055, 2.7497497117869552], [3.8184456111319705, 1.8758883683179581]], [[2.100639461437662, 2.6500020727994364], [0.024875650350211755, 3.7848569864804844]], [[4.4318021558604448, 0.96777106120044165], [4.6865423583382722, 1.8006397233047693]], [[1.4960970909067164, 4.264775385975355], [0.51932273241888549, 1.9636939617562068]], [[0.37903110589042821, 3.8441737521998256], [4.1941359298416474, 0.044215692099441983]]])
      res=arg0**arg1
      ref=Data(numarray.array([[[0.018862489706619447, 12.704893779263589], [573.32060993528705, 3.8858787444520915]], [[0.00016866568472346586, 66.86406732048502], [93.085581181749163, 2.3141688620561469]], [[15.554065742577915, 7.5424677262703845], [1.0108328680687364, 283.00248132835861]], [[580.90053741849033, 2.2964295643663362], [1008.1983118625353, 2.7141627818942022]], [[4.3814796133381337, 644.7054157036863], [0.47561397835855657, 0.1965727580451474]], [[1.8037990788879124, 98.256669431219379], [74.45262913034432, 1.0341242414102652]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[4.9517092317634388, 102.38150764102242], [188.14651363930074, 11.114117562413989]], [[204.228706834978, 15.202605276555694], [421.1924552813602, 8.5421834978699263]], [[4.3933386351351347, 35.956343096257804], [1.0254230766866297, 300.2557602985791]], [[0.085559298387351379, 4.1077547402062056], [759.08796976782833, 18.015379964135356]], [[6.1361643748072883, 10.098309375986641], [2.251641211941426, 17.132312126417109]], [[1.3238898103328165, 7.0297371071146983], [471.40330392823512, 1.0392800588304076]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_pow_overloaded_taggedData_rank3_constData_rank0(self):
      arg0=Data(numarray.array([[[4.8994945814662652, 1.1697238930135534], [4.8454242003583374, 0.81574176489687478]], [[4.7722116642004861, 3.2823682891975774], [2.2734602418467573, 1.4254823875819453]], [[3.8241878968104959, 4.660939045810391], [0.81473827870144622, 4.9498533355833372]], [[4.7058088636051556, 2.3879504525755419], [3.649770515116316, 4.3802193097407658]], [[1.7142346564295836, 3.9230276978988234], [2.6529339900459061, 2.0270144633140887]], [[2.3552401219934223, 4.7003415526153161], [1.4970379168613501, 2.6787158319845736]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[3.929053937146926, 1.938731481225475], [1.2737321864133102, 1.5983690984891012]], [[1.9447071487375809, 1.3432066477402507], [3.9618400530625695, 2.046581108717203]], [[2.9206073265510266, 0.47799799762736839], [3.6341266055997692, 4.0075383434745611]], [[3.6682682132531017, 3.2167026115984361], [4.318350426814507, 0.54771962179578859]], [[1.4702375646848131, 3.8262877634760604], [2.9439041180386516, 2.0556394171057879]], [[1.1740919950827462, 3.9933404929475032], [4.3922719812439519, 2.307915752685187]]]))
      arg1=Data(1.24194879923,self.functionspace)
      res=arg0**arg1
      ref=Data(numarray.array([[[7.1966860212228214, 1.2149434064056344], [7.0981800467021463, 0.77652059690281283]], [[6.9652244173278079, 4.3760090117904156], [2.7732399194593205, 1.5531476429451057]], [[5.2903437016836392, 6.7640960435013646], [0.77533441656565105, 7.2886670414967689]], [[6.8450612818167755, 2.9477325803209373], [4.9923501166410515, 6.2618838438645161]], [[1.9530047155940047, 5.4606878691809078], [3.3592826615131148, 2.4049192204505832]], [[2.8976682269174412, 6.8351857733769421], [1.6505556284021865, 3.3998752524830147]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[5.4711076049730432, 2.2755281668741083], [1.3505219558977972, 1.7904265046683874]], [[2.284242144718613, 1.4426030198761326], [5.5278644434207758, 2.4337840725839479]], [[3.7852436970698657, 0.39981915932730228], [4.9657879824316629, 5.6071634826484331]], [[5.023793314578044, 4.2675475856498295], [6.1522259934857493, 0.47348125941333563]], [[1.613937538808629, 5.2939517215546141], [3.8227788785379473, 2.4471696187125085]], [[1.2205806282080676, 5.5825027778606353], [6.2832900944525525, 2.8255342925697597]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_pow_overloaded_taggedData_rank3_constData_rank3(self):
      arg0=Data(numarray.array([[[1.6715819775036933, 2.7672586320464347], [2.2838404346993388, 3.4596349878986361]], [[2.4837400260812692, 0.69324424168303322], [4.3355053197146036, 3.270626730328686]], [[3.4768017004467993, 2.6913327030046719], [3.4566866797887106, 0.52943321804907262]], [[3.2327261253705477, 4.5208125444755947], [0.83598371867433752, 4.5436055989650521]], [[4.6523882860451851, 1.7066932605452234], [2.157349122013732, 4.2484825219525408]], [[4.728853186757477, 1.4900070034773103], [1.2146927797748965, 3.9190822979038953]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[3.0968828625951428, 1.1140923940374892], [1.7280599213429817, 4.5950544336523551]], [[2.80243325657149, 2.336121912195622], [2.5644477886514387, 4.1737466398863869]], [[1.5922218135066566, 3.8313611038902962], [3.9173267418109332, 2.5103828003139053]], [[3.6154115923101258, 3.4091736516087376], [0.8535680574810548, 1.7301850471728304]], [[3.9251514582835858, 4.798204872432942], [3.5387268937033012, 2.4811949515099734]], [[1.5724886433562844, 2.5518503667794601], [1.8885216076715601, 2.1559730965289892]]]))
      arg1=Data(numarray.array([[[4.9061321141751124, 3.6836308227611236], [3.9426460326747748, 4.7865090557527221]], [[4.4560153056285881, 2.6877185474411927], [0.5204479700122383, 4.2631657753237047]], [[2.3591560331537202, 0.075050922101009082], [1.1707595306878609, 1.841227784019968]], [[3.6634458010369215, 4.5055894130571987], [4.8492041268793065, 2.2479227922188256]], [[0.21479645735394409, 0.53478591658621444], [0.95248125263556782, 1.465197785608698]], [[2.9017010449514697, 2.6223943760503867], [1.8467504283592753, 3.9254261142171858]]]),self.functionspace)
      res=arg0**arg1
      ref=Data(numarray.array([[[12.43637693759101, 42.496003329196476], [25.947297232696986, 380.25358671831975]], [[57.623414624375222, 0.37354857074196174], [2.1455865145358128, 156.29935604847756]], [[18.911582713872278, 1.0771332913389569], [4.2720993870025872, 0.31007980564134413]], [[73.583102421875864, 895.6462726845466], [0.41948974129151112, 30.045943822359529]], [[1.391279639299434, 1.3309246776343313], [2.0799502709577191, 8.3269666491921637]], [[90.769449158919286, 2.8455619793158187], [1.4321498200162763, 213.05977758460449]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[256.17799533075925, 1.4888138929496875], [8.6419201982403457, 1479.3135792986163]], [[98.678843081701814, 9.781651777386287], [1.6325256926217675, 441.98299177315374]], [[2.9961112798891087, 1.1060663680359548], [4.9459355952017265, 5.4451807892699797]], [[110.86147476292018, 251.12979992624611], [0.46404465483738833, 3.4293647513449073]], [[1.3413998549858199, 2.3132967281574248], [3.3324721028157751, 3.7866595495255462]], [[3.7191029918631551, 11.666344627446565], [3.2354027075587517, 20.402917269270993]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_pow_overloaded_taggedData_rank3_taggedData_rank0(self):
      arg0=Data(numarray.array([[[0.85282167457852587, 4.8379679289148871], [4.5628076576079346, 0.8821232645116841]], [[0.78437170651728227, 2.2239389938937877], [1.2092845184532786, 0.4469146798210587]], [[1.3420068723305845, 4.2100910472497581], [4.2232699896749404, 2.8604103400859207]], [[3.6841366892044176, 4.471116465004628], [0.67467844441486791, 2.0127052298584047]], [[0.24990480318144789, 0.33917985365427239], [0.73329027720668616, 0.27665108729661736]], [[3.6643678696356079, 0.62975084333686604], [0.22109712199243958, 1.8597498504756531]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[2.7002187725438676, 1.830437456984219], [2.735354491997533, 3.7322971778428604]], [[2.3267229722168823, 0.98745879224528421], [3.0961842389902232, 0.42770044787141498]], [[4.1569718167303336, 1.0955192108006104], [0.7016738986180846, 3.6950120837194991]], [[1.5318944521133588, 1.5691569779000418], [2.5287343815325887, 2.8284848570841468]], [[2.3902067798168916, 0.22245223835587999], [0.48690030683777774, 0.33432649120980257]], [[2.4849578086384621, 4.6421569267779264], [4.9695038701938481, 3.6091364860819466]]]))
      arg1=Data(0.515977375963,self.functionspace)
      arg1.setTaggedValue(1,3.92415283247)
      res=arg0**arg1
      ref=Data(numarray.array([[[0.92113738896841257, 2.2556442744512899], [2.1885117414581088, 0.9373339314863699]], [[0.88221755790184719, 1.5104541524045825], [1.1030185982565288, 0.65996942695881111]], [[1.1639077377598237, 2.099521294255156], [2.1029098246867006, 1.7199138621318373]], [[1.959821088238302, 2.1657081556731463], [0.81623992424641179, 1.4346425176092745]], [[0.48895097908680163, 0.57241700704240939], [0.85208991688997471, 0.51528765093885043]], [[1.9543878693173002, 0.7877268024539682], [0.45900741600654371, 1.3773123528327658]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[49.30323548243927, 10.722733995073007], [51.869041682097716, 175.59902077603195]], [[27.489204108897948, 0.95168153741635075], [84.348887707610103, 0.035689119112260144]], [[268.02532515842438, 1.4304573911166938], [0.24900696016702276, 168.81514127251933]], [[5.3317071861619905, 5.859017943418066], [38.111302022040469, 59.15158017349259]], [[30.551929060493606, 0.0027444628824748788], [0.059356321699654914, 0.013576050953892168]], [[35.587071394477562, 413.34287946845376], [540.05595763155736, 153.93442794602839]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_pow_overloaded_taggedData_rank3_taggedData_rank3(self):
      arg0=Data(numarray.array([[[2.6461411684133074, 2.9309074120711323], [2.0782744078114055, 2.036201239721692]], [[1.1696474532283996, 0.066078436652841119], [4.9598754439491026, 3.7143405445851321]], [[1.2342532814897418, 0.40808495753271778], [1.6179390652523264, 3.6058681214909956]], [[2.5550134941791454, 4.7906765189099074], [1.1595487802486859, 1.4594069424110112]], [[1.406227047228046, 4.4535240465887034], [1.5539024923198437, 3.2854069916382054]], [[2.7658237500037739, 0.028052999570504847], [2.0879984578907038, 2.3443204726497329]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[0.27544470039488494, 2.8143366361664937], [2.9528812821268486, 2.4220947954986105]], [[0.30010955779166582, 0.65230752135127845], [3.1385571015079563, 3.291548294255545]], [[2.6036170235761973, 0.49746648730629101], [3.1323445981841105, 2.0078330591818045]], [[3.1401543324252059, 0.40829161947670239], [4.2981461058450572, 1.4349774077768742]], [[4.1650115198558115, 3.7581214461671868], [3.7465079497737666, 3.4317635083860751]], [[3.1028283479589196, 1.5622233124178433], [1.9043774109735641, 2.1739392837328704]]]))
      arg1=Data(numarray.array([[[3.8925591810964466, 1.979616712923375], [1.9373561686368079, 1.3895460317810233]], [[2.4183868021065478, 3.4627214181276957], [3.184736335815515, 0.34934026142091268]], [[2.0912479109674922, 3.0991488125504638], [1.7419564201568696, 2.3969554640193804]], [[0.9203650023075397, 0.21475922745751636], [4.1392026683732661, 2.9029533212537748]], [[2.9525401973686836, 4.2835282789509037], [4.4941683412316999, 2.4662650603246234]], [[2.1839166947742128, 3.2254744030423246], [4.7513480757089628, 3.5095404254593872]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[3.646810859241314, 2.5044711900638568], [0.43736154491928891, 0.41604420638944078]], [[0.50052330226678221, 0.083746010237943494], [4.2808749433741911, 1.1477715649965698]], [[2.141172274491312, 2.4461568456376273], [3.6645416891251648, 4.7247018070302387]], [[1.7595365255878992, 2.4197925545169081], [0.92081128083872543, 2.2591742439261604]], [[2.8331802468226415, 2.0900010091166519], [3.1284027695403647, 4.4598554364974019]], [[4.6269842653925446, 3.4968362049573578], [1.0493962199953597, 2.1720344131065286]]]))
      res=arg0**arg1
      ref=Data(numarray.array([[[44.161737341072872, 8.4039829098677465], [4.1257570751768258, 2.686090091247213]], [[1.4607747869848029, 8.2072120988294371e-05], [164.01781901693477, 1.5815489154681344]], [[1.5529198154994404, 0.06218106302760306], [2.3120806457828587, 21.633549284232505]], [[2.3711031188861744, 1.3999789355464407], [1.845462807875399, 2.9963769564342533]], [[2.7361484619947203, 600.81543176055766], [7.2492089270822273, 18.795151807321815]], [[9.2237581086662637, 9.8627261704266059e-06], [33.048316789175573, 19.887928509167093]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[0.0090763544012117722, 13.349019156068785], [1.6057114761677558, 1.4449090009287444]], [[0.54747762275713063, 0.96485294690428269], [133.79477636177819, 3.925159177800337]], [[7.7592933235078316, 0.18123278513750699], [65.634862486891535, 26.933800680839873]], [[7.4886481188523728, 0.11445353994638974], [3.8294151332253481, 2.2612070352108362]], [[56.948776511457567, 15.910710517126217], [62.306768443440625, 244.52877547160497]], [[188.51910718752688, 4.7586957257699671], [1.9659468084223337, 5.401482597503497]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_pow_overloaded_taggedData_rank3_expandedData_rank0(self):
      arg0=Data(numarray.array([[[3.7194281532760107, 1.4092320891030392], [4.2668037904649916, 4.7271311185272511]], [[2.2076620691041091, 2.570805268764583], [2.8743632035567686, 3.2684405856073502]], [[2.0766991446118195, 3.5369238890072863], [0.33978195867763045, 3.504849203786041]], [[0.57724047154222657, 2.4719387164716178], [0.27050140419303431, 4.8225555808534706]], [[0.32338212796509985, 1.6028708276148709], [4.7648614065797599, 4.229983268008394]], [[2.413523195535396, 0.37049951750406362], [0.89855617429624246, 3.9344239515403383]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[4.5161182317957023, 3.8153171207844836], [4.1785576572074934, 0.19316676027999]], [[2.7791635329717836, 1.9559655633572148], [1.6982643238020152, 2.7018969510265802]], [[1.0742866246206477, 0.54774292180299233], [0.55458384155217544, 2.0297606293031176]], [[0.61863840273693116, 3.379297402262917], [4.1870274666901963, 2.6223590609078506]], [[0.68894970438414849, 3.935461639198973], [4.8996969106316426, 0.85738741867712365]], [[4.7737661332261929, 2.2812751538694069], [3.5600975555527423, 3.1208959886038019]]]))
      arg1=Data(4.1475657467,self.functionspace)
      arg1.setTaggedValue(1,4.05821349019)
      arg1.expand()
      res=arg0**arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[[232.32044918468279, 4.1487265676296561], [410.57477186614307, 627.96884874966554]], [[26.698265887881927, 50.209846096299501], [79.76853544413791, 135.91313578590345]], [[20.717044837326295, 188.56505866471244], [0.011366388252276004, 181.5732579492136]], [[0.10237915132495139, 42.67265850794076], [0.0044145431623930234, 682.24016396166974]], [[0.0092579522324572235, 7.0766888839707782], [649.02001023875425, 396.07800741507373]], [[38.643117816729955, 0.016274903197017705], [0.64169077883166414, 293.29773076882168]]])+(1.-msk_ref)*numarray.array([[[454.12706575450949, 229.07383886035743], [331.32767316772561, 0.001265205924052193]], [[63.313773653221737, 15.219695724497546], [8.5784841978759321, 56.468216519952314]], [[1.3374953721484764, 0.086913799939067254], [0.091403807034493578, 17.687918713314179]], [[0.14243158791014748, 139.9878969566378], [334.06159254971277, 50.019823714663993]], [[0.22046030462692781, 259.78825292566609], [632.19931739143806, 0.53557270027973636]], [[568.80503582538802, 28.41590251192763], [172.96176857484787, 101.36567176808036]]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_pow_overloaded_taggedData_rank3_expandedData_rank3(self):
      arg0=Data(numarray.array([[[3.0621620381138905, 1.1040641717188242], [2.5503315555626931, 2.1995357721586615]], [[3.2997417775911102, 1.1486091922516595], [0.16864701609254204, 1.7638958871801349]], [[2.4369277619972309, 2.4410023383740218], [4.4253947423149329, 4.3464119249551532]], [[4.2696413174135888, 0.019948503910760355], [3.708393047678554, 0.68724270214305738]], [[2.4143780669834234, 4.7580281078080864], [3.132504424796998, 1.1092288298515216]], [[4.6307250081445046, 3.1309566173232959], [2.540403473599175, 3.2615427097669243]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[0.8193246319302242, 3.3270060038889628], [2.7431391303405754, 3.1756086584927314]], [[3.1281204938707727, 4.6565776941640964], [4.5258669207077125, 4.1204292405922258]], [[1.8262774394138523, 4.2929271835681879], [0.36831039366690638, 2.1225583450987711]], [[2.011273473041983, 2.4570149376854489], [0.38698429980788052, 2.4486476023029478]], [[3.9158920439431286, 0.74756021598249844], [3.8921006406765342, 2.1787409907366651]], [[4.4931374141257647, 1.7494998389200733], [1.1168748807402689, 1.6409840815850225]]]))
      arg1=Data(numarray.array([[[1.6188760534649034, 4.025889687479931], [3.8104923594749307, 1.6974108618815162]], [[1.2523763169658566, 4.1600229688920951], [1.0093332046421339, 0.57498541396779024]], [[0.9382833048402105, 4.8695747167238945], [4.11924880691687, 4.169824312305658]], [[3.1606066308601792, 3.9869006653691197], [4.8423710411390317, 0.60304253601793689]], [[0.42504142650704935, 2.9172228977395736], [2.5307249138946624, 4.0572092773224346]], [[2.5194401333953507, 4.296000686945451], [4.6414071677278566, 2.8673439332585242]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[3.6979780164758131, 0.96134121049183652], [0.54592536320549301, 3.3973937228872804]], [[4.6764291776768214, 4.4382022925059301], [3.4125695914047447, 0.19276793861857722]], [[0.81478685407168105, 1.8617068815166189], [3.5967791442630963, 4.4146716091036966]], [[4.4361773886929443, 2.4438931184795387], [0.73654345996827741, 3.0012147219701104]], [[4.6393517107510389, 0.077293632310860019], [4.1485438923723779, 1.2786003153954237]], [[3.4345423056861488, 2.865307216796309], [3.6207434275516817, 4.4523579389007226]]]))
      arg1.expand()
      res=arg0**arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[[6.1209574826066833, 1.4896710444620067], [35.42692087085576, 3.8113287234185149]], [[4.4599708159898208, 1.7795823857911082], [0.16586849158495021, 1.3858567766400827]], [[2.3065772557648034, 77.142247130524908], [457.97004167970778, 458.02973469237588]], [[98.269606078378374, 1.6669069768985575e-07], [570.43824173841062, 0.7975730739417356]], [[1.4544811630563834, 94.668515180462364], [17.987278641851333, 1.5228608517995024]], [[47.540394801158371, 134.71903011327225], [75.73877634139815, 29.659274594042305]]])+(1.-msk_ref)*numarray.array([[[0.47858847193026338, 3.1759351430375355], [1.7348047742266142, 50.687844472191898]], [[207.08950352014597, 922.6050780460946], [172.83351185173467, 1.3138360992765103]], [[1.6335075750261965, 15.066125692893872], [0.027527544370467838, 27.731793629836986]], [[22.194826060309506, 8.9973564856444348], [0.49695633402592465, 14.697765072874603]], [[562.79492210842898, 0.97776312487888528], [280.80477209528948, 2.7066356160028358]], [[174.26475265768315, 4.9661858745299918], [1.4921485556306071, 9.0723885413574621]]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_pow_overloaded_taggedData_rank4_float_rank0(self):
      arg0=Data(numarray.array([[[[1.7114916907441344, 3.6734405915704622, 0.17376313811007227, 4.4420239324611934], [2.4229870678959387, 3.4623712411894112, 4.545258092613305, 0.55686355861508086], [2.0603260224183475, 2.4294595834649915, 4.3602337408709664, 2.1020048987500144]], [[2.9867859167083055, 3.8672826580095014, 2.425725969339275, 1.6252586736193737], [0.062225046982723679, 0.19171318602805718, 1.6976500270614929, 4.2493569543206791], [2.4617358897253525, 0.14228398992346339, 1.7393150852687198, 2.6360959703144951]]], [[[0.38829173084629742, 1.8800439648608323, 0.27581055696689621, 2.3431321151714379], [4.2849148480973556, 0.031620354969934157, 4.7351968223792156, 0.87777539733730769], [1.7168625470798411, 4.3058476742838296, 4.2065605992984096, 2.9851674906832235]], [[0.47568763095013189, 1.3760715826597016, 2.3886671108474555, 2.5992879349058531], [1.8859481787626815, 1.9426151661560995, 2.9549923620333822, 1.1487853245672357], [3.3891431357502539, 4.9466673901634124, 0.43675947601700382, 1.4565006585512372]]], [[[2.7215732875091336, 1.8904455641775857, 0.66222650928621274, 1.6880572788145694], [1.656743075119693, 2.8377734320203536, 3.5330884408960941, 2.6447631505011704], [3.7573956881998516, 4.0384577178344712, 0.73967080092899595, 0.064513439091453462]], [[4.4658785012451707, 2.3299208593571792, 0.43960865572944752, 4.7418686463842583], [4.2775544473282396, 3.2000582139256832, 1.3509621652851067, 3.7847101171743684], [1.6347611832277824, 4.2417395553560473, 1.8443449693799032, 3.077771818391196]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[2.907189388145508, 0.55278905825180658, 2.1440656889838134, 0.43959510412134245], [0.28078301242935244, 4.1167036500689527, 0.95868313390995086, 0.46905007832161166], [4.2950737979950162, 0.24998744974543288, 3.8800069387769183, 4.9135635545287704]], [[1.9884562584476611, 0.884821780397263, 3.2310548553063509, 2.3748423585456608], [3.6577043525068169, 3.2678084731759127, 4.2958334403220562, 2.7570739833019289], [1.667247611044951, 1.5157520530662396, 4.2607208171694921, 3.0247279276743178]]], [[[1.6117892318147309, 0.2037648052375812, 4.2096224132048032, 0.36162939136269878], [3.2101951166768665, 4.9041103330676696, 1.194597360343181, 2.0395689688943377], [1.6367747890267881, 0.79411000158346556, 0.5187328879280193, 2.1817531159250696]], [[4.0826581929310386, 3.8619661839134878, 2.2905794024592425, 2.0856740899828128], [3.585578711880117, 3.0278776464131867, 3.7594371669068858, 3.1508227519307992], [3.7676526918729589, 2.0855339466995888, 1.7049050647204973, 0.80085016279561794]]], [[[4.5085115719252498, 3.9721225982449755, 1.0808742448922464, 0.40710922251048159], [4.7120798432246538, 4.5818667991723689, 0.94969185562215586, 0.39663482140368239], [0.14682087887811149, 2.5518441270402206, 4.9389814424210527, 4.6145891015565637]], [[3.8963353343531475, 2.4587661176249527, 1.9414060944680254, 3.2373835158706634], [3.4818863795080435, 2.2410070243639684, 3.6071058027568546, 2.7720342329929233], [1.7778943572468624, 1.5878457193200497, 0.60985542990269104, 3.8058169664498722]]]]))
      arg1=4.49831281453
      res=arg0**arg1
      ref=Data(numarray.array([[[[11.214833516330151, 348.23723823912496, 0.00038114634796293111, 818.50518389450554], [53.571210683305459, 266.85252701274908, 907.61997652164803, 0.071828791856266686], [25.833431433801195, 54.217954284972009, 752.86134500590094, 28.26880267060643]], [[137.2829710437334, 438.86965942223833, 53.844149356561282, 8.8878220492373394], [3.7573214661225934e-06, 0.00059312226908936057, 10.812570315293327, 670.49318218978465], [57.534250634169119, 0.00015510683678898033, 12.058592627614717, 78.273587263100239]]], [[[0.014187465045314575, 17.111711593262267, 0.0030457396491160608, 46.074600549187629], [696.1032758817463, 1.788056216367262e-07, 1091.1431719988386, 0.55631509101920562], [11.374015815886509, 711.53161935770174, 640.64802676655756, 136.94866560121753]], [[0.035358414499391276, 4.2038838202418285, 50.241467445830821, 73.475884518071368], [17.354776644106817, 19.826859336577002, 130.83071539168844, 1.8662650416047226], [242.3875113614373, 1328.1152379024425, 0.024082273882364603, 5.4277839011020026]]], [[[90.355902763543781, 17.541720145489766, 0.15661433950672057, 10.540438068294028], [9.6889856760478867, 109.05246216179906, 292.26072127705606, 79.437924510907663], [385.49722496791162, 533.26997615776122, 0.25756929756805713, 4.4201215637407784e-06]], [[838.46425393031473, 44.917491088538995, 0.024797064441407213, 1098.0759646241606], [690.74064853231448, 187.22255162673989, 3.8696699033401689, 398.26445444124988], [9.1239792624053742, 665.10346895026862, 15.697886137382753, 157.12313610004733]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[121.57604065653885, 0.069494721952030047, 30.903846017871686, 0.02479362608331033], [0.0033006496769702187, 581.34823867665386, 0.82712054523392153, 0.033192592319228428], [703.55798664613928, 0.0019572565319083963, 445.40264376628204, 1288.5998779827737]], [[22.020061964802043, 0.57668782720433776, 195.51952460797773, 48.946627540214578], [341.57687313065725, 205.72498017137789, 704.11790206744035, 95.779986689485213], [9.9684104493448231, 6.494145130623644, 678.59678328709617, 145.3039485304339]]], [[[8.5612535126984906, 0.00078027359258538793, 642.74828982486122, 0.010302248778884492], [189.90518455597646, 1277.4853919248769, 2.2251879086291311, 24.683147145282629], [9.1746421247610588, 0.35451279665220325, 0.05220690743635651, 33.423628390325511]], [[560.03197391636422, 436.16222077221789, 41.60512061535384, 27.29420059597226], [312.30650409897322, 145.98582159096691, 386.44028981408837, 174.609128227334], [390.25362038463851, 27.285951718921403, 11.021989244704493, 0.36825057512165432]]], [[[875.07620338544348, 494.98408722250628, 1.4188329760458025, 0.017553257500687851], [1067.3848848728862, 940.96997657164763, 0.7927934133119181, 0.015611202794693977], [0.0001786285903613015, 67.632774747599314, 1318.8578227633909, 971.57906120491316]], [[453.8965946957095, 57.222690907942699, 19.771410039852558, 197.24812679387787], [273.68534098744567, 37.705370923559464, 320.82997297229917, 98.140116299684337], [13.309297850889976, 8.0038429919009015, 0.10811436188039793, 408.35343882451156]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_pow_overloaded_taggedData_rank4_array_rank0(self):
      arg0=Data(numarray.array([[[[0.83606959714541085, 4.8693581570833739, 4.0103384116190623, 2.8136385289829269], [0.22793309747956175, 4.4011090716319838, 0.66458879703465445, 1.9422957026025212], [4.559466755360857, 3.7146856285694709, 0.82742247780129696, 0.37728095845972165]], [[4.978734784242933, 4.2075739808090624, 2.1680825645444157, 2.1863885683582143], [1.6353684380993259, 0.99111760682506322, 3.4219936870979968, 3.7488899309976369], [1.0724082997916702, 1.0196201581389881, 1.9989386977667698, 2.5030721559650893]]], [[[3.8714009771446407, 4.9589429638132696, 2.5418915585878121, 4.5509232356118332], [0.29268725667167417, 4.7837553312055912, 4.7832891143569176, 3.0160190391245769], [0.53533846698752952, 2.9420491522060104, 0.54821905802992854, 4.857498003352851]], [[3.5720069277619557, 1.0659688588634448, 0.093933541879710328, 1.6942490447427907], [2.3767410870486518, 2.5126981917424085, 2.9514093079512893, 3.6368093693044745], [4.130916261806421, 0.84209587954519005, 2.8080967596407809, 0.56758976197761757]]], [[[4.9738995028429676, 3.9866410208299965, 3.137382658366425, 2.6977651162972522], [1.1214417887972246, 2.1529422390137452, 3.3442338659151041, 3.923894857456216], [1.7065697876504511, 4.0077696945028567, 4.8628077974787463, 1.7827515769645159]], [[0.53814761702503378, 0.90385984276984643, 3.0487782428692425, 4.7951045667071659], [0.48865585371268111, 4.6625402122580875, 4.8000950357660974, 1.0248440058705499], [1.7684450990030374, 2.1221789825147201, 3.8422433707094878, 1.0930300519243459]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[1.3606399355464449, 4.9044845896688649, 3.8869736767828509, 2.8586722282998758], [3.6896949909658736, 2.7336336520371098, 0.295303169931178, 0.45804583185263803], [1.3971249804564141, 1.6706994001458733, 2.0761500343892227, 1.0500993331846216]], [[0.79951800868683232, 3.5383444423123351, 2.379264371974271, 3.0540411389345863], [1.725959119617529, 4.3348391545500249, 1.6489086271010442, 2.6725321954004055], [1.453771704507939, 3.3004749161300539, 1.8355436184749252, 1.5701177347355273]]], [[[1.2832109563579026, 2.2094496646446666, 1.8594235913498014, 1.1440348556195605], [1.2624115849732718, 1.3359824337107598, 4.4703012697949918, 4.9379145038554046], [0.2890878253021778, 2.2721617359653403, 3.7875592631897308, 3.6497557286196636]], [[1.5606686364475857, 0.36923081032242483, 2.6406407399412521, 4.2243744598729425], [1.6010211972269022, 0.68679399780218331, 3.2350208257241899, 0.19882040779506513], [1.5171226782004184, 2.2598292566335978, 0.27674664042343788, 3.7252347538538073]]], [[[1.5933980206490841, 2.38008862002355, 1.8682386679820568, 3.9699780081993663], [2.2269380188986152, 3.4619933570682546, 3.2667811943701133, 1.5626763049267232], [2.2245474820923326, 0.66735824893082241, 1.2969676185796812, 1.5091742657057245]], [[4.3934553256623845, 3.8029237941947249, 1.5703199061668398, 2.212597123962571], [4.9468374577619629, 3.350876665667772, 4.9975821718160134, 1.5217595295379214], [4.1239803439787304, 4.4940033197216716, 4.7298811521811475, 2.6324972967898486]]]]))
      arg1=numarray.array(1.27378510925)
      res=arg0**arg1
      ref=Data(numarray.array([[[[0.79607423194694182, 7.5108871931576244, 5.865742635660868, 3.7348337415081065], [0.15204936792781237, 6.6032822369729427, 0.59425203035396668, 2.3294414481208863], [6.9074048243331418, 5.3205709706301807, 0.78560145418032334, 0.28890964223459631]], [[7.7264463185364747, 6.2356591013593894, 2.6797135431023564, 2.7085673375868269], [1.8711145909678204, 0.98869952692190499, 4.7924423164612966, 5.3830535492741571], [1.0931312955210872, 1.0250586736332687, 2.4163169085230951, 3.2178770330914848]]], [[[5.6081252243867397, 7.6873436784855755, 3.2815798592804901, 6.8909223508366946], [0.20908030454337689, 7.3431022897607585, 7.3421907220011366, 4.0803365951799897], [0.45116038825190358, 3.9532956519808664, 0.46503287588691622, 7.4875922802324846]], [[5.0616422308960081, 1.0847772115083005, 0.049158010828342938, 1.9573469375980734], [3.0124518386199504, 3.2336483541977983, 3.9693235869931955, 5.1788993503138494], [6.0913102492336471, 0.80339041135442169, 3.7254660966773119, 0.48606335075758578]]], [[[7.7168893322063816, 5.8216275903865746, 4.2906222113662462, 3.5400276060970479], [1.1571905124633233, 2.6558997890477309, 4.6541594020082302, 5.7051666454500056], [1.9754960332550271, 5.8609572566390105, 7.4980194962979478, 2.0885061545400365]], [[0.45417815087573987, 0.8791889566082538, 4.1368738865016486, 7.365300314793461], [0.401658338057576, 7.1069211882180809, 7.3750657536719313, 1.0317529108163099], [2.0671808354453782, 2.6076545475601676, 5.5543788997664798, 1.1199767242873515]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[1.480335363120572, 7.5799712203026051, 5.6368759273604132, 3.8111441225673679], [5.2750188207718436, 3.6000895708450331, 0.21146349472965112, 0.36988851892782548], [1.5310822045440724, 1.9227576886097844, 2.5358260111439916, 1.0642482515511145]], [[0.75201079065052445, 5.0009602735106204, 3.0165262398637411, 4.1459723902519494], [2.0041301781099921, 6.4768927614520733, 1.8908704829492888, 3.4979056512401803], [1.610590951289931, 4.5767263152892159, 2.1676020792630446, 1.7765422608150294]]], [[[1.373878904105662, 2.7450102798509555, 2.2035865560482346, 1.1869681198662945], [1.3455761796715404, 1.4462491586135584, 6.7358021572312179, 7.6458446068305674], [0.20581062313808743, 2.8446379437939044, 5.4538807588562719, 5.2023941724034239]], [[1.7629349782764392, 0.28108039218471847, 3.4448241044392667, 6.267391691969145], [1.8212013322998022, 0.61965793303646333, 4.4614274299237735, 0.12775856278763478], [1.7005189366527289, 2.8249857475152118, 0.19468514490300373, 5.3398248159076713]]], [[[1.8101628458430943, 3.0178574269482072, 2.2169019944264248, 5.7906506752427944], [2.7727163159399595, 4.8639121363411411, 4.5172950743339095, 1.7658242621197859], [2.7689255665813572, 0.59740816176049383, 1.3926675238880888, 1.689178615499273]], [[6.5886582936708162, 5.4820777354988044, 1.7768336456411991, 2.7499922464362401], [7.6634479067685088, 4.6659384437325535, 7.7637226292647687, 1.7071420417204131], [6.0782856441981261, 6.7813270894643694, 7.2379265539935336, 3.4312978220367616]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_pow_overloaded_taggedData_rank4_array_rank4(self):
      arg0=Data(numarray.array([[[[4.0853096712310037, 4.149808666427437, 3.7269172789246801, 1.2296686263181509], [4.7002573911141496, 3.9322207137696967, 2.4590626278712491, 4.2267290262170443], [0.72761702556111352, 2.0256098961520927, 4.2240767042892289, 4.3942713852722122]], [[4.082854756747798, 1.3675909146755434, 2.3699325902547628, 4.2319084244980756], [0.036653021406693284, 3.7962971523888962, 0.029194534467380587, 1.4705071126375393], [2.0242450977478676, 1.8326060102541997, 1.5006310803111396, 2.7191941181269934]]], [[[4.6156690661645445, 3.3488890341588133, 1.4965596888962218, 2.6965166556263975], [0.37717760133779038, 3.4955306321338484, 3.4139775477569381, 2.1363096598974902], [3.0881631743881091, 3.8948743479479813, 2.7069119131001758, 4.0975006260546669]], [[3.3169412700868519, 3.9531512169508791, 0.81215624963725686, 1.3990106417614463], [2.9408625127609609, 0.80654940085001314, 2.4427878577862705, 4.4969213729975861], [2.9729940195181288, 2.3711483769759325, 4.4580747036058899, 3.4285143527134596]]], [[[4.2997451256566839, 4.4506809419658531, 1.4727832068750775, 3.1582020328247329], [4.7287556790341689, 2.8473318165126349, 4.1355168741548916, 3.0433297531535355], [1.5109383198451087, 2.6611283556304319, 3.6340414235999567, 0.013458463489056721]], [[0.76695853830764982, 4.8900414483478567, 3.4996698748564352, 0.074125225962711497], [4.7866338127320365, 4.8963795942238786, 1.8458049543643409, 2.2200845994050735], [1.6890055184809281, 4.4394862692589454, 0.14259340008828128, 0.71068105302950402]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[0.62764039730836352, 0.05237175319108002, 0.58634451610132388, 0.67850017428486176], [1.0537578054154653, 1.884962514577929, 0.66487201200261714, 2.501846689896507], [4.7162730472187677, 2.286977980775593, 4.6324395792471247, 1.3175306229678936]], [[4.5296711991179412, 4.9753816606954722, 1.2086935400817975, 3.4684626466663437], [0.40309854385483807, 1.4370142465337274, 1.939994182169122, 2.3613764538337474], [3.3684289228756685, 4.2258304851496611, 2.7148325283908941, 0.56258302888936662]]], [[[3.265692792254939, 1.8620428571190295, 4.5218467308964554, 2.2700208095990257], [2.420153391338022, 1.6049651845546569, 1.1693580151124854, 2.9857464610471669], [3.2987329773865874, 1.4867344937914977, 1.8711123777574012, 1.5982202959682392]], [[4.4216616539203919, 3.7384403214100423, 4.3143437026198166, 3.660388289663481], [4.8409665946187541, 4.0124313303737145, 0.38809199415065182, 4.0695131116503838], [0.608830363554556, 3.5028351772385071, 2.1747366217311255, 0.025939362481291535]]], [[[4.7527190216330473, 1.8481032712583203, 1.0178220120398944, 0.74884587901548394], [4.8884751769956241, 4.7368001403582509, 1.2458131830522516, 4.9118055971850243], [4.1371135593094355, 4.6826876198626763, 4.0099387434506353, 3.8597741596636714]], [[1.5897205501963403, 2.6923396937403212, 0.14989872378426167, 1.0348182693223946], [3.2659851879179302, 1.1963413571186043, 4.4353741582968835, 0.81456177205999558], [0.9964159118761251, 2.7877409855166526, 1.9430273364086121, 0.8923605076222314]]]]))
      arg1=numarray.array([[[[4.3747475569258771, 2.4633921629654467, 3.9126770347391338, 0.87027170748701865], [3.8269557668497916, 0.099066804721665055, 1.4230589920151888, 3.8541720688278982], [2.698958863953409, 2.5798587539923785, 2.4631841397811938, 1.1632374622119142]], [[3.6319047254258972, 4.7702907932458745, 3.2762086972522257, 1.7151959756446631], [4.1914722115116128, 4.5913634528165046, 0.49334846294829571, 4.9037388523316832], [2.124668733146744, 4.2071424578967447, 3.8324155679169167, 3.099476044784621]]], [[[3.8695040147373194, 2.4955124547508918, 2.4283832177013913, 1.6227702259076529], [1.1403119069044727, 3.6730090545058207, 0.22588040084774477, 2.7074788653473481], [3.529102469625248, 1.7132308886973706, 4.3069941376773162, 1.071189544230863]], [[3.6386730698416967, 2.4757971767092939, 1.45954043496479, 2.9349882496022146], [1.3178001764642608, 4.2654657410354133, 0.73560513706574249, 2.1779083153071457], [2.8479444959480773, 0.16237101704175785, 0.24900863606431944, 3.2324055495163275]]], [[[4.9071015524491823, 3.6457053905800083, 2.9520539776471564, 1.7079277672452817], [0.19953261054168148, 4.5813274464042468, 2.7493103349698913, 1.3887475291876128], [3.8843898159520949, 1.5815027313065164, 2.6752091405666918, 2.4140604674319786]], [[0.024377637406420509, 4.2448335788496001, 3.1984542999828518, 2.1592267050838498], [1.0246336392160897, 3.2819579992073797, 3.2961219647965301, 1.9813382895856617], [4.6503847275178032, 3.8808331102861979, 4.8623403717135201, 1.2045546769493338]]]])
      res=arg0**arg1
      ref=Data(numarray.array([[[[472.01412749457018, 33.300098055866414, 171.9915296848356, 1.1971264781541577], [373.40470864347662, 1.145272612654302, 3.5982238532842423, 258.65965720651843], [0.42391763139660399, 6.1783241520254153, 34.77704164153387, 5.5953865801418416]], [[165.56280920052797, 4.4519537348713714, 16.893254318972417, 11.874968710855851], [9.5831005775650054e-07, 457.14423204036422, 0.17492781875822555, 6.625445246570373], [4.4741199639066558, 12.787015968881617, 4.7375628089632871, 22.209410457063605]]], [[[371.75660741794724, 20.412508450927557, 2.661922673372211, 5.0014330023724352], [0.32895026547749268, 99.158188180195893, 1.3196328917877473, 7.8083426986114874], [53.481345602921579, 10.271919819132185, 72.889255491199918, 4.5302688810702039]], [[78.486424258273814, 30.054593076412765, 0.73810020979185353, 2.6790632959992351], [4.1433924521321446, 0.39970318940131233, 1.9289934466117322, 26.423457746983612], [22.265392179654839, 1.1504888936941802, 1.4509194218002581, 53.663564081750472]]], [[[1283.4167988424263, 231.19149196135322, 3.13584712912205, 7.1286499313119744], [1.3634336414262012, 120.76182100086999, 49.548640540756445, 4.6908305619231507], [4.9689450596658018, 4.7015684075567963, 31.56167995656342, 3.0428598898521481e-05]], [[0.99355293549842882, 843.36780322182619, 54.95987680129231, 0.0036307845180838048], [4.9748709910022795, 183.71348473314359, 7.5401656384128417, 4.8559611169612609], [11.443847048497366, 325.22973250119873, 7.7080315289404367e-05, 0.66272615539377444]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[0.13032754195729446, 0.0006992522387690085, 0.12383888976018326, 0.71351432898231559], [1.2218785845787887, 1.064813039049364, 0.55943004921617556, 34.274035293404431], [65.768181120544938, 8.4497755369498702, 43.652794370264935, 1.3781933621905547]], [[241.41912402401712, 2108.9416566718623, 1.8607372578416741, 8.4419124926039313], [0.022186670454930262, 5.2839782248212712, 1.3867108019598715, 67.59348351128024], [13.201050114689886, 429.83448179268169, 45.949796767637409, 0.1681548641407844]]], [[[97.460715193855819, 4.7180505592534621, 39.026354272849161, 3.7822882309284647], [2.7396849312653493, 5.6843010116204837, 1.0359719767340829, 19.328393454012335], [67.499452463452386, 1.9727661669878347, 14.857048885528005, 1.6524694575909811]], [[223.39559202971438, 26.173717137619946, 8.446635165561279, 45.076022288231421], [7.9910458681924421, 374.81287488440967, 0.49844614534069792, 21.258253172453554], [0.24336461555978481, 1.2257389330720534, 1.2134368348591642, 7.4691852936762926e-06]]], [[[2098.0886048879652, 9.3843733068552737, 1.0535318818465376, 0.61019882581118923], [1.3725006868494287, 1243.4211474123661, 1.8299098950565893, 9.1192572357808839], [248.59550012583506, 11.491850560134672, 41.069516546487819, 26.061288306649498]], [[1.0113645461751333, 66.962189893201284, 0.0023111458967485137, 1.0767005489979229], [3.362608073670823, 1.8010145527941617, 135.63165018673686, 0.66605540824793941], [0.98344129882454745, 53.45032306822354, 25.274504725510567, 0.87181259205510775]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_pow_overloaded_taggedData_rank4_constData_rank0(self):
      arg0=Data(numarray.array([[[[0.090732842572485206, 1.6002378340858412, 3.4337557873353046, 2.8623713810089573], [1.9961638700175006, 4.8901240295242276, 4.6479760677656916, 4.6862050818265786], [0.12848843619269257, 4.6086448471848174, 4.2094543023426763, 1.1717383963094732]], [[4.6637542593792158, 2.6066405531740684, 1.2046317514033098, 3.8059316843910747], [2.2185886368506784, 4.8907999986107598, 1.5757924416605484, 2.2972963479370212], [2.1710934221437044, 3.7372223383287135, 0.13586225377931505, 1.3364004571774282]]], [[[3.1934964605588974, 0.64759605455369329, 4.3511556925471364, 1.4877025982113417], [0.23904752330439052, 0.61422193550794313, 0.067035803750889203, 0.5512040592848706], [4.3746057663850078, 4.8465410258679746, 1.3768086056646471, 3.8603536322408454]], [[3.6501881489866168, 3.9924552577064616, 0.67372427706154281, 0.13434022300526779], [1.5776201478589307, 4.5292933970803722, 0.55448887529048541, 2.4185717641172872], [0.75789053430091635, 2.0104220139099103, 4.8079371300184901, 4.8561583539936208]]], [[[4.1138492830383271, 3.6628645928572476, 4.2126713067243999, 2.764075042734107], [4.1231135958250649, 1.3983454689017896, 0.12036966889385638, 0.033647972712876797], [2.888835354913776, 4.3311682756703611, 1.2556092345407677, 1.8138826779748836]], [[2.9487992859275973, 2.1084151843284227, 4.3481078382181533, 2.3679196645350977], [4.0591458586749916, 2.5293527839137151, 3.1404342337542386, 4.7606942635834493], [4.0883209936378844, 4.2978363896784213, 0.11787620712373871, 2.1532314003281061]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[1.9097638982724048, 2.6660761550680721, 3.1588312746688327, 0.90426614525230442], [0.60901467287087574, 3.9681926872297311, 2.7514203052698054, 0.019080985684708663], [1.0306507545001156, 4.2106215749570586, 3.0003180556653586, 4.7813248449417989]], [[1.4960775863661593, 1.6038300571111415, 2.3058982985605181, 1.2345265235831342], [4.4773391002644525, 0.66787651121027203, 2.2774606234028294, 3.485495939504724], [1.7458703609710684, 3.8230489085353137, 0.18717702228832095, 1.6792339569350994]]], [[[0.38130436541951657, 3.4377846094184226, 2.7268195130498891, 1.7845944783409431], [1.5565990130944745, 0.18642032402829115, 2.766021957728368, 2.7483538758652815], [0.53542571779741643, 0.56308386580914838, 2.1122831910308619, 1.2124224694084162]], [[3.4136875608296298, 1.406447857593597, 3.7260347029518504, 4.0188948655063292], [4.781597554684331, 0.9462960713090891, 0.47690014265281327, 4.8408985210099269], [3.7836041353113412, 2.6101493769997322, 1.4953405466915544, 2.0427754738452508]]], [[[0.50852215261020783, 1.5305401729590173, 2.9679521849913675, 2.2031404940938457], [1.0655090128735534, 4.9061535604620019, 0.16865242062351218, 4.8126304457171116], [1.8122407460239243, 1.1976760226870848, 4.652788832705129, 2.9841761204484656]], [[2.96441513761155, 0.29341938841733906, 3.0112703084346548, 3.3344938878318566], [0.21810971034348328, 0.83303077281718529, 4.6340405284558566, 0.89969316419961975], [0.57421383295993544, 2.3132173599973993, 0.59869064296188312, 1.6570996887079119]]]]))
      arg1=Data(0.235193158339,self.functionspace)
      res=arg0**arg1
      ref=Data(numarray.array([[[[0.56868705828740773, 1.1169218975127575, 1.3366241337240976, 1.2806157121426351], [1.176532938287578, 1.4525240047179311, 1.4352775773806852, 1.4380453364777812], [0.61717868655269714, 1.432411788424157, 1.4022118637054062, 1.0379788411299751]], [[1.4364220118205298, 1.2527356574795687, 1.0447596220232231, 1.3693688775751338], [1.2061321444247548, 1.4525712253730192, 1.1128853275507795, 1.2160621529259348], [1.2000089426143452, 1.3635139721238552, 0.62533217125897955, 1.070580750602546]]], [[[1.3140140728680469, 0.90285922008906483, 1.413173348435727, 1.0979298976330201], [0.71420641620623182, 0.89169342428713849, 0.52960904576855639, 0.86927751871725756], [1.4149609329193744, 1.4494688676959677, 1.0781076159232188, 1.3739492083906517]], [[1.3559781761178449, 1.3848653467332632, 0.91129751543666071, 0.62367743451806967], [1.113188779502952, 1.4265725873854294, 0.87049312910991294, 1.2308650707214626], [0.93688064828762352, 1.1785040565720426, 1.4467451640322158, 1.4501448367589318]]], [[[1.3946557307025436, 1.3570842486665258, 1.4024638270082166, 1.2701338750189848], [1.3953937757449422, 1.0820504982135781, 0.60777650118463222, 0.45035066883327579], [1.2833905828174961, 1.4116438943351939, 1.054993787754205, 1.1503317663649533]], [[1.2896068784114991, 1.1917694998094082, 1.4129404717194165, 1.2247531036594781], [1.3902716558607349, 1.243898818531245, 1.3088460838424314, 1.4433890829127249], [1.3926154112937255, 1.4090812597677957, 0.60479164684384379, 1.1976796068568083]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[1.1643525488053197, 1.2593960018639963, 1.310645372728156, 0.97661003409796598], [0.88990966136903338, 1.3828813512101887, 1.2687638161708112, 0.39410239402425906], [1.0071258451502896, 1.4023033042431516, 1.2948709367961899, 1.4448577752108549]], [[1.0993804537648184, 1.1175110853485741, 1.2171315511329406, 1.0508005077597529], [1.4227069303555882, 0.90943096753952379, 1.2135844433230407, 1.3413339577237557], [1.1400386227034678, 1.3708148895496566, 0.67427766624421459, 1.1296518449454949]]], [[[0.79710950317299978, 1.3369928123000494, 1.2660865729572193, 1.1459360444729709], [1.109682295145932, 0.67363556112414036, 1.2703442307740871, 1.2684311055435709], [0.86335998174388739, 0.87364801752042731, 1.1922833583509724, 1.0463448543810956]], [[1.3347827409083199, 1.0835218303707819, 1.3625528658872832, 1.3870168908000435], [1.4448771569486478, 0.98710129832183258, 0.84017225721466626, 1.4490717977062801], [1.3674752186284496, 1.253132064285605, 1.0992530473549358, 1.1829374222241698]]], [[[0.85295494690855278, 1.1052848484055318, 1.2915720271047557, 1.2041516269923336], [1.0150355380826757, 1.4536424255899565, 0.65795159368891987, 1.4470771927574821], [1.1500867787419253, 1.043337651656935, 1.4356269746116519, 1.2932290814695406]], [[1.2912098464029724, 0.74947475838605893, 1.2959810875813944, 1.327434375812077], [0.69897378009427535, 0.95794377714143208, 1.4342643218033424, 0.97544620140556237], [0.87767912876979193, 1.2180390602094238, 0.88633835949767692, 1.1261319971973982]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_pow_overloaded_taggedData_rank4_constData_rank4(self):
      arg0=Data(numarray.array([[[[0.2315932378340208, 2.2457857395817449, 4.5762605390152578, 2.3520803975274633], [2.5100147880669113, 3.8375509925006974, 2.9012384558287763, 0.099781749640212261], [4.2617293039930697, 1.8427711955617767, 4.5205788469277568, 4.0891359243586543]], [[0.49109845773874145, 3.4781820927027298, 4.5983319351175513, 1.249779635812021], [2.4574249767405996, 2.4020985416700018, 1.1106623305422236, 0.17103533903506626], [1.519426968853838, 3.9463995405914929, 1.4033039823981479, 1.5238844087492236]]], [[[2.3362607340878094, 2.2899572773023373, 1.8739832898517679, 1.5190256726213598], [1.7725610867657255, 3.3705105031882852, 3.5838875404093704, 3.2719100983668499], [3.231141875899362, 1.7522345764886873, 0.088522051179230385, 1.6142077469331815]], [[1.8762022566919165, 2.3252397984448434, 1.4689547177979076, 1.4102160037113827], [3.0081485514430861, 1.5673841230607055, 1.0683259074506197, 1.2400471475499701], [2.0110780046826942, 3.9776740188479054, 1.4909585748666907, 4.8015080162788859]]], [[[4.9412021603990226, 0.086200468366497751, 3.0085102261852676, 4.7395558901425838], [3.5297282428724137, 2.3952307536092996, 4.9856432679300609, 4.5339868040453801], [4.6602074061809624, 0.82560292185689854, 1.6852379471745209, 3.096104403139599]], [[3.6724783230091012, 2.3968507906728513, 2.0358781277956557, 3.1794442792259177], [2.7665942127925467, 4.4049112576601166, 1.0978447800059017, 4.482626941398272], [1.5171238681656007, 0.97292488563956137, 0.81720364501341425, 2.5525757237572253]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[0.34439139517524342, 4.4990685186230541, 0.40689505821553673, 2.6923433609991547], [1.6821064255661866, 3.1699716220751393, 4.1408092137035331, 3.7703937073686764], [2.4486674114030738, 3.203627583804511, 2.3596440148415208, 4.4352486487952643]], [[2.2131371945546428, 2.992501837185753, 3.1680265340863296, 0.086939878971996273], [3.0035277926407002, 4.590278944788019, 2.8654818632948591, 3.4436022575924463], [0.25279881883577832, 4.0651421496766149, 2.957238814132694, 0.69185007062416748]]], [[[4.7594442910702117, 1.3502633657645726, 3.3553925488238354, 2.2506531099657137], [2.0816122391606338, 1.0767763016395557, 3.6507657169106, 3.4125497954545057], [1.7502361212231921, 2.260606722925075, 2.5765610570671607, 3.7853602240471695]], [[0.40183924742849281, 2.9051630911421, 0.93542020950330662, 0.1351810886264587], [1.5609027042896961, 1.114131123269064, 2.3811772264305109, 2.5030358411418185], [0.18215414122538523, 2.9061077780114943, 2.2424591322464971, 0.96416872399673192]]], [[[0.69786575420776709, 4.7058604700201014, 3.6627448616499065, 2.3223597484386191], [2.5715123626536736, 3.6853671217300779, 2.8687280634113592, 0.86634354373314948], [1.0289278572101266, 2.6213956853293015, 2.8931972345629342, 0.09108940119685012]], [[1.3161219312640398, 3.8560682276365994, 1.9048044010009604, 4.5896874593522332], [0.080499785916701844, 3.9131568390143334, 4.3683057345078833, 4.8754748670355568], [2.2964345126716146, 1.7147717355845669, 4.3743201578887803, 3.7764941754578771]]]]))
      arg1=Data(numarray.array([[[[4.1898312389645911, 0.53368890589342577, 2.4078505086444189, 1.3944075849236319], [4.5715263808422044, 2.8051259099342234, 2.1549717757246363, 2.6060087366331901], [1.4307436033226646, 1.8674240383229521, 3.0409535904470397, 0.57594576949990817]], [[2.8224792838057575, 3.5265787564112738, 3.2313946484307623, 2.0661676306338168], [0.35955091104047304, 3.3091755785106791, 3.0668343339076172, 0.38579429220229788], [4.8786405574462668, 3.0414019208039047, 1.7978221186661767, 0.44496542158007302]]], [[[4.017815599694357, 2.5164539913190831, 0.12914382048330347, 2.9286966202512428], [1.2667186986072125, 0.99196534899387212, 2.6258876866187979, 2.8159891812957323], [3.5513221835850093, 0.41251080688620601, 1.3391707016512542, 2.8487476737873823]], [[3.8826119459148387, 2.4348054129798142, 3.5325763289369232, 3.6229705063898474], [0.93484521645074359, 3.7777312517202364, 3.8083724947812607, 4.3588508320695354], [2.5970994193831589, 1.3981000926359437, 0.63574304395075176, 2.4632081801202701]]], [[[3.5857337204492974, 4.8850191505035978, 0.95334139953502117, 3.4305121323071099], [2.5068253904491078, 0.67655401915656133, 3.46231578611388, 1.2042311103888876], [3.7191932670446377, 0.42494875945973676, 1.4865985954229746, 2.8928930024358794]], [[2.3011470576099997, 3.276056219457534, 1.4832738866140409, 3.2742846621335873], [0.26354472502896215, 0.62136849908788405, 2.2507566937457675, 2.2043919300243533], [1.3451869982054792, 0.63256584959916229, 0.42922047245954625, 2.4038167937650972]]]]),self.functionspace)
      res=arg0**arg1
      ref=Data(numarray.array([[[[0.0021792578734120449, 1.5400023166715187, 38.941361017910019, 3.2957610191851119], [67.163088451918327, 43.485598842048354, 9.927827571204384, 0.0024633065432207676], [7.9574870966104809, 3.1314660105051124, 98.268583124111018, 2.2504356650037027]], [[0.13437846856510466, 81.118810399576404, 138.39586733381304, 1.5851637322810794], [1.3816483926349596, 18.173636844980297, 1.3797251249929348, 0.50597481400245481], [7.697515816818763, 65.055950187553393, 1.8388770166295174, 1.2061666750047824]]], [[[30.244796537132999, 8.0443145950228896, 1.0844911352733171, 3.4021161391180024], [2.0649417370467833, 3.3377655983147676, 28.554352931326836, 28.162750410435013], [64.400221483988844, 1.2603304640347672, 0.038897543609406379, 3.91222599661302]], [[11.509033367147008, 7.8032883549434731, 3.8901822698964983, 3.4742212062149922], [2.7998566291368809, 5.461606056905512, 1.2862180844577202, 2.554366240345848], [6.1381155798697264, 6.8919421626732467, 1.2890790014721933, 47.684257176537351]]], [[[307.53817392218235, 6.3087618760922951e-06, 2.8578029545069161, 208.03011204821303], [23.609768180938499, 1.8057140635566054, 260.45405748995074, 6.1738197051253492], [306.1457886173352, 0.92179008774979099, 2.1724723904051055, 26.295231951604684]], [[19.955117766809504, 17.527713110039361, 2.8705389734837508, 44.14087001896511], [1.3075924244450368, 2.5125937130318716, 1.2338086051553452, 27.304435293714203], [1.7518912789667855, 0.98278694733949923, 0.91700217937672601, 9.5126622328361368]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[0.011490190530332643, 2.2313324928204064, 0.11473397367583352, 3.9790294727890108], [10.776930830097401, 25.4403693953222, 21.369838225748691, 31.773772444649705], [3.6012960565089078, 8.7952476210718302, 13.608456456780651, 2.3582490563825318]], [[9.414101668859109, 47.727962304310907, 41.518942362857445, 0.0064305585857795267], [1.4850220310803939, 154.9322090515825, 25.243495572333995, 1.6113005079891825], [0.0012199838747093896, 71.194118179210548, 7.0237651396822134, 0.84881074284017299]]], [[[527.58940085603012, 2.1290806693630859, 1.1692207200018352, 10.75981731157813], [2.5311799503105523, 1.0761365242514518, 29.974857357464675, 31.706236084906354], [7.2998594666175611, 1.3999794044839724, 3.5518393335345348, 44.348770273732235]], [[0.029019433565911405, 13.419306869704149, 0.78991275395949223, 0.00071012382121560854], [1.5162697560341787, 1.5042248243898328, 27.224707591316637, 54.55800891153347], [0.012002913718337702, 4.4438168789281756, 1.6709778179765853, 0.91404091734305593]]], [[[0.27530087225113209, 1931.3217059285332, 3.4474679527450092, 18.00219966796811], [10.67262472453173, 2.4168785813507156, 38.429538777851633, 0.84132642933720836], [1.1118902742351582, 1.5061037878671735, 4.8515883907377875, 0.00097690383865467619]], [[1.8815593832740285, 83.222933708426964, 2.6007270181852036, 146.84741151105092], [0.51478747498701849, 2.3344134185514034, 27.617784146998581, 32.859348660585383], [3.0597450024857142, 1.406536211271298, 1.8840478820297537, 24.390224349724065]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_pow_overloaded_taggedData_rank4_taggedData_rank0(self):
      arg0=Data(numarray.array([[[[1.8452036616040264, 1.897580560990809, 4.0690178268603567, 4.2260807117981809], [2.2587539425516572, 2.4402649307378068, 0.48537202359900189, 4.6561520543599473], [2.872097454312069, 2.0211862636276368, 1.1602655321900619, 1.2294879130234366]], [[1.664368588242658, 3.6453829943865745, 4.0076648597709426, 2.0120301384361157], [4.9615590244865722, 1.1733781400375736, 2.8108639056447116, 2.9299194829849857], [1.6379454151172035, 2.097415943072765, 0.37997460685960149, 3.2356553581630427]]], [[[3.7582893901985774, 0.96759187095809152, 1.3080322463026184, 1.8004071953204688], [3.0873247443920313, 2.6090516823923346, 3.6712021659217724, 3.0545619065263083], [4.3029117654590765, 1.8298571085139606, 2.7660821933873097, 4.0402322645209754]], [[4.7012698381493552, 3.137036201688193, 0.43979216161726131, 1.1000797977111416], [0.69619821872320786, 1.0373205677460744, 0.26571919642703778, 4.9690359936349591], [4.4044195996010576, 2.8396255675714173, 3.5918255274272397, 4.6320280383256014]]], [[[0.09165930617773646, 1.540345335489782, 0.70937009690146235, 3.6344641924521217], [2.8760605321822248, 1.1711343971800532, 4.3779864222474618, 0.66482997577895131], [1.2050523907213007, 2.0622114233746003, 3.4638079539558202, 3.8867355872731761]], [[3.5891541673633225, 4.5654847961824929, 4.962263608357846, 0.74496144744149362], [1.5441237820505538, 0.23261826769478883, 2.8890099279026784, 4.5751322504525325], [2.9227735606483125, 0.38172124963856197, 2.6938145692844691, 0.92259141837238368]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[1.4447397289468407, 2.8108381554596162, 2.9875107058963577, 0.29993082799931786], [0.42042663586203927, 0.048605159882145393, 4.2819205142241445, 1.7364280305495419], [0.59169260086369779, 0.47750584029919207, 0.10864219210686783, 2.3109893325743269]], [[0.94999458792629943, 0.71414829991355344, 0.88863334597572341, 1.4314684093559031], [3.2143139816580777, 2.2168838188878568, 2.3733068514960367, 1.1314240919246432], [3.687991103514161, 3.5240316800478975, 3.023893344318334, 1.797071746544435]]], [[[4.5166803842355998, 0.061043037683383011, 2.8341173847237742, 2.4336445467343224], [2.7924075810125957, 1.1196289003364037, 4.3072408959005255, 1.8219722297200314], [1.128971717942832, 2.7127446169497702, 3.7031951847211309, 0.20035102060577828]], [[2.0396289143137061, 0.36521024847897116, 1.8843143027642193, 3.108708997038375], [3.1380975816842587, 4.8485928944198431, 0.65244199434645711, 2.3424506015649209], [4.8564094369424389, 4.53501107991754, 0.52630026230032045, 3.3248760991951083]]], [[[0.58171859560539607, 4.6918527003497061, 0.55835764465844939, 3.8645584721897102], [2.3845168033506754, 3.4660409422088292, 0.066211439977089837, 1.3374123097363892], [3.325432086846086, 1.8319086334495212, 2.4288196660885304, 2.8675752829488621]], [[0.19841656640104896, 2.3576209105147394, 4.9238438933936965, 2.7359673993867104], [4.2977202082131889, 2.9235253410653024, 2.5271062962120343, 4.0444437471204617], [2.5533365501646954, 1.826528202176577, 1.4433821850682642, 4.859970199789224]]]]))
      arg1=Data(3.60826122777,self.functionspace)
      arg1.setTaggedValue(1,0.262934976949)
      res=arg0**arg1
      ref=Data(numarray.array([[[[9.1192130156915017, 10.088325290823722, 158.19678950467008, 181.36231405098621], [18.916967459286909, 25.00194689431876, 0.073667453441461625, 257.28619284459938], [45.009305014688266, 12.667983833407815, 1.7097788109820695, 2.1074077920219838]], [[6.2853002842000318, 106.39374008228452, 149.75786874423164, 12.462137193669621], [323.57282765098523, 1.7805346028271161, 41.641974657862875, 48.365676824590324], [5.9326442306816229, 14.47844574482224, 0.030454026717175484, 69.195370615907336]]], [[[118.77222976896253, 0.88791983956860843, 2.6350559054863054, 8.3453458509394913], [58.417219303916923, 31.825725583164925, 109.13797547472464, 56.211144312555049], [193.54432519588764, 8.8485014628755785, 39.297474367763989, 154.19576923662495]], [[266.3961642415918, 61.883115603907271, 0.05161117317219447, 1.4108124898239049], [0.27073178626801159, 1.1413483661886077, 0.0083785251220159455, 325.33574037060782], [210.53222619066543, 43.200062311550006, 100.86080343373933, 252.50869291562216]]], [[[0.00017999562118683888, 4.7530798224524737, 0.28967457894074139, 105.24836205115659], [45.233804373591425, 1.7682799726317528, 206.00871403930375, 0.22924163924637944], [1.9601556178190052, 13.620600523540169, 88.481214556450041, 134.08391572499281]], [[100.59039743497385, 239.66301281273874, 323.73865836859289, 0.34564107040727404], [4.795284169434419, 0.0051842441025003556, 45.973003306519672, 241.49541730174172], [47.94139337263821, 0.030962179499438292, 35.717337401411008, 0.74773001297786701]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[1.1015755269734906, 1.3122441377358351, 1.3334461586429431, 0.7286023315745036], [0.79626017934364879, 0.45152610155731504, 1.4658174282018028, 1.1561499160891795], [0.87111622627595886, 0.82336474748565591, 0.55786651327790093, 1.2463935795249765]], [[0.98660226038344734, 0.91528397367887204, 0.96943206331086551, 1.0989058253811466], [1.3593498693218058, 1.2328433878448881, 1.2551443261342599, 1.0329992331787641], [1.4093825174180317, 1.3926304865731638, 1.3376969395731815, 1.1666327177053903]]], [[[1.4865342271269022, 0.47940357215491958, 1.3150930202097519, 1.2634571395556264], [1.3099762674291258, 1.03015671403239, 1.4680915601237519, 1.170861537782542], [1.0324100411674257, 1.3000449297666048, 1.4109079351890392, 0.6552644090067129]], [[1.2061236328155045, 0.76732127941599171, 1.1812652774153187, 1.3474620091729095], [1.3507997763472712, 1.5145107270325087, 0.89379224150520165, 1.2508328803248718], [1.5151523233025881, 1.4881181511320531, 0.8447001270078639, 1.3714911835290253]]], [[[0.86723102075136482, 1.5014812602538594, 0.85793509823957959, 1.4268196906308048], [1.2567004254433811, 1.3865679532180553, 0.48975858131616573, 1.0794426362499512], [1.3715514817223056, 1.1725371379112635, 1.262798032642279, 1.3191574996232638]], [[0.65359492174685452, 1.2529577766236379, 1.5206561010435107, 1.3029619976301718], [1.4672376252558155, 1.325876918257231, 1.276038574522556, 1.4439907273898525], [1.2795078329456131, 1.171630656556359, 1.1013032710429544, 1.5154443449833477]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_pow_overloaded_taggedData_rank4_taggedData_rank4(self):
      arg0=Data(numarray.array([[[[4.7309766796307429, 2.9676820408174054, 0.77669020897607433, 3.8821205118152142], [2.7152691964645919, 4.708173924766939, 3.773460353659809, 1.1820953291073881], [2.5618583084951343, 0.57392912732122214, 3.1419629501415849, 0.14451211473199754]], [[4.7600149389916897, 4.9031756857493694, 1.4965068505962773, 3.8780602047660406], [4.5308149538010909, 0.014976837528035275, 0.82849749537301254, 4.1256682632304722], [1.2658989685560795, 4.1039988553410094, 1.1829765928387381, 1.4161079889247794]]], [[[1.8997561501040234, 2.9480797058842163, 1.466110260686295, 4.5406542164643744], [1.0141998140527666, 2.2007159206048796, 1.3662274894458681, 3.8697288750139376], [4.1972713897767484, 4.198543320488759, 4.0789911842806621, 0.024849896792385771]], [[2.0162816743806538, 0.96269960142559841, 0.56881698447197737, 3.7370064458794423], [3.1570980864874127, 1.4937199841262583, 0.082895265544891669, 0.84001752728386525], [0.40318939343915611, 1.6179963711722154, 3.0812206211262945, 2.6974822416924735]]], [[[4.4350860694829164, 1.1612829117199499, 4.5412686143679792, 1.6269357297637128], [2.0183464056347242, 3.5374258776764789, 4.3220046444852827, 3.8437942099799272], [1.4239043668610596, 2.6745740812951486, 4.9740009496602813, 0.73717491478530739]], [[2.3247815423627318, 2.548913788013039, 0.91745245711787693, 3.5484823885273689], [0.018020759438791802, 1.383052015144594, 4.3885061172569362, 4.7682672528032972], [3.209697285224256, 2.2456970106972403, 2.6578158134135212, 1.1130891254623672]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[0.117778731041541, 2.1167332380355974, 4.8110801559242633, 1.4506652395108408], [4.3174700587085502, 0.77416643143933184, 0.81806198185919599, 0.53733963849147393], [2.7019886027496356, 3.7128437971802968, 2.3366284025365953, 4.347350704807428]], [[2.3670975384055652, 0.31022453953342, 2.7771322413893653, 0.86509590257128988], [1.5636550389954353, 0.70122589819368675, 4.6317784632614956, 3.2805224489057965], [1.2986879730015082, 3.976104977154562, 4.9904234259490323, 3.9498215700260766]]], [[[1.1005347028965524, 4.037567837364695, 3.397219563860947, 4.2878107400808858], [1.7315960267995292, 1.3384201425335074, 1.1199181792442456, 1.3366594637553524], [4.5145167996342801, 2.3823168009410765, 1.3514096813352192, 3.2778680919180356]], [[1.4405924822814151, 0.089434662024189759, 2.70157883752786, 0.74082616439370896], [2.7298019937401845, 3.5114062719574326, 0.81717461479569686, 1.2036785750211549], [3.4575447113263196, 0.36625227425039286, 1.158618005993326, 0.046949395610721346]]], [[[1.3659343294989332, 1.2133979845575333, 3.681563897680356, 3.4573561716325818], [3.6195997777615436, 4.0319557752098145, 0.52853348542383793, 1.73789943799514], [4.5072685815308855, 4.7798359978873206, 3.3113121106153858, 3.1730390293703117]], [[0.68464429071350086, 3.481811508517866, 4.727588373059378, 4.9013675865963249], [4.5459850974274874, 2.1905483783275064, 3.8078992484591194, 0.75287378365947155], [4.0113995027174072, 2.3082074983763605, 4.8601109054937739, 4.9799479935732709]]]]))
      arg1=Data(numarray.array([[[[4.731103529674928, 0.43006451944294005, 0.057656019146625409, 2.4619217880727384], [0.5431222612861768, 2.0942819998880569, 3.9478887366174402, 4.9123481585596966], [3.5565317295535577, 3.6720128584670695, 1.4559718493925946, 4.3806511412920139]], [[4.6876589335266976, 3.6093747011642625, 1.2908310092195034, 3.5098272174002139], [0.17617021233531918, 3.4672587415608223, 0.069393310127091906, 4.5022322902967957], [2.0212612215217356, 1.2105462497257613, 1.3719406668812828, 3.0205433215124278]]], [[[0.14564609496608594, 4.9702391695609229, 1.5624044602845846, 4.0919342394875704], [4.0601966670444103, 4.530124442607808, 0.46313969185404952, 0.94545061115132867], [3.4966576847170856, 4.599478183641649, 3.5813112100389937, 3.9216695536831794]], [[2.7720275127142795, 0.50392512707553994, 3.8216900093274706, 2.5360827760477016], [4.5758367689701327, 0.77411391320855638, 0.75442809445620829, 2.5503357220034322], [2.3380333837065455, 1.0199995109453228, 2.2305595842647037, 3.7792963228016614]]], [[[0.95811189636301841, 2.4712316063351412, 4.8902026080369287, 2.2343653751011039], [3.7093046111490482, 0.61525923947868388, 3.8982355374939033, 2.5002681247971164], [4.8361859868880135, 4.8823145190803681, 3.2917593775742828, 3.1509796586347587]], [[4.4372244566986749, 1.314809705966494, 4.2286296385022064, 0.88998620209454782], [4.0337561188617839, 3.6588638522076713, 1.8838802526801719, 1.9571271844373466], [0.65543969252850043, 0.98069838676198084, 2.5083158648144113, 0.40502901116314571]]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[[0.57660735669226248, 0.92105617100151882, 0.46532651725214191, 2.7070073129023999], [4.37640888332961, 1.7256793143477838, 1.0448838083959833, 1.5970673261602264], [1.9070490706715022, 3.7966990607336273, 4.8930232870520776, 1.607884586775469]], [[0.79924951228072072, 2.3922320504965211, 4.0000058319880205, 0.22142217603007977], [1.0120996391549721, 2.2923803538802328, 0.8315678980771507, 0.81948268907991617], [0.51950758866013735, 3.373657783060628, 1.6498651829119031, 4.5676781757571119]]], [[[0.9308888898735026, 0.25848045289413013, 2.8053767643252669, 0.21763759034719413], [0.82611202713475318, 4.6306773552579426, 2.9978139747993486, 3.9813229712766636], [1.7666710176404379, 0.084894905314504429, 1.5235777456632418, 2.6399387569302619]], [[3.4187828359724355, 1.2269931544503092, 0.56752135617968447, 1.3079446659196885], [1.0122605907306375, 4.8054616426808785, 3.2461525266709632, 2.9546070859749851], [2.3304657640035442, 1.5011531983301873, 3.9237038628267111, 4.8883000802901941]]], [[[4.1370672608450212, 0.2685416149818336, 4.8372157607891157, 3.4285544546714344], [1.9940501541260305, 2.1696518509439704, 1.6431868707853479, 4.7830657136490311], [2.8503911558062525, 3.9403598372653867, 4.1948382649609082, 1.9605303887457712]], [[0.50997879161744686, 0.59554354572841584, 4.4156485213226508, 1.9242665546610764], [3.5621991989396147, 3.4456161702563026, 4.7250716490811664, 0.34782356314257973], [3.0287173187691918, 0.52795565485179152, 2.3835267928682593, 4.9403631048614951]]]]))
      res=arg0**arg1
      ref=Data(numarray.array([[[[1560.494156492764, 1.5965037705579705, 0.98553516909394279, 28.199527902147015], [1.72033664071979, 25.653278417485634, 189.19276587460323, 2.2745442011253529], [28.381751814012652, 0.13017406060309974, 5.2955460157850069, 0.00020884958752500255]], [[1501.0552390949995, 310.59313822158691, 1.682662542099207, 116.39527682581817], [1.3049645756307009, 4.7174733582015733e-07, 0.9870290976881535, 590.33472631398968], [1.6105537404980719, 5.5247892219230517, 1.2592702690088611, 2.8601785144201761]]], [[[1.0979719741869856, 215.63647741747624, 1.8181072090881578, 488.5234380342103], [1.0589189546295952, 35.633418036387475, 1.1554897289909336, 3.5943711842574801], [150.76569227468474, 734.39311123666926, 153.66659484975332, 5.0932301172935643e-07]], [[6.9859313492243587, 0.98102617548216831, 0.11576600966901986, 28.311825126911504], [192.60197310078061, 1.3642821774175902, 0.15279475372408713, 0.64107651743537775], [0.11958235537428777, 1.6336423820293169, 12.306238171514854, 42.532433400197682]]], [[[4.1668181975801266, 1.4470279694648509, 1635.7977762624382, 2.9667345975480495], [13.53075333943713, 2.1756296095061911, 300.6427610840442, 28.977246107390386], [5.5241034148767341, 121.89657169780476, 196.51154074673411, 0.38257579672329528]], [[42.239603369087469, 3.4219975224249337, 0.6946719568577191, 3.0869555268478477], [9.2090329336772731e-08, 3.2757364033619814, 16.219884685700642, 21.26365656590853], [2.1476161319659601, 2.210902122788895, 11.610274669119109, 1.0443497702332372]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[0.29132001515514067, 1.9950638442233293, 2.0771390454056387, 2.7375597362624555], [602.5919175354461, 0.64293003276765082, 0.8107215605902528, 0.37084232748813917], [6.6564341786871726, 145.5475203548063, 63.608879833714163, 10.621641040729454]], [[1.991095443055432, 0.060809494145958452, 59.482447355493896, 0.96842196318507734], [1.5721355349398207, 0.44324902290675833, 3.5777869962463851, 2.6473195603079307], [1.1454248861625949, 105.28478502187684, 14.185105908799432, 530.85256802303843]]], [[[1.0932725925682609, 1.4343995117942903, 30.903086144184176, 1.3727714366532331], [1.5739233850838237, 3.8566378213307675, 1.4042724023031083, 3.1748953644041373], [14.337808141911424, 1.0764784447754812, 1.5822102802882612, 22.968356030591497]], [[3.4835154591910369, 0.051701706764273242, 1.7577302692001575, 0.67545457190794855], [2.7636202873274391, 418.10793445739108, 0.51923108412874264, 1.7293264475003161], [18.012745961183185, 0.22139481590993013, 1.7818974171563891, 3.2101760556523879e-07]]], [[[3.6331411845949573, 1.0533152538806396, 547.0418705595896, 70.325618459078427], [13.0016108049807, 20.594838429741628, 0.35071664662982899, 14.062211944265096], [73.098603445560926, 475.47937274523144, 151.81559660893635, 9.6196171629990967]], [[0.82431012607545096, 2.1021738216080759, 952.73385710363004, 21.298766052329096], [220.09083709073147, 14.907829030591934, 554.34527784656359, 0.905985125539431], [67.175791176589428, 1.5552242163399947, 43.315124469364584, 2783.1955037867879]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_pow_overloaded_taggedData_rank4_expandedData_rank0(self):
      arg0=Data(numarray.array([[[[4.8421422743814935, 0.42642119411257368, 2.8947111290455281, 0.5002686396093674], [2.996761230511769, 0.79767436759951937, 0.28085449182259042, 4.5919255302643043], [1.3953189202575413, 0.6816244409884229, 4.9733921389276423, 1.9058505615045296]], [[0.049012695799109704, 3.9251522607302047, 2.1058349544139894, 2.8076709213365243], [1.4832446984695238, 3.8663897789734833, 1.9466649411969004, 3.7079180698851264], [0.69221565947336872, 0.85498627042234465, 3.5153397595018139, 1.0229574752246471]]], [[[3.2199514869376102, 1.7359885559431574, 3.5974111267432076, 1.8522196456399764], [4.5463075749674084, 2.6558496025643783, 3.7307161056976916, 1.9638697950549617], [1.2568015295634787, 3.8237808986787565, 1.1071671277638808, 1.3804805052424645]], [[3.2204691367849998, 0.54391305266388024, 4.0982920880796181, 3.5498059303604022], [0.26928427159873375, 1.0898700730354585, 4.942165450892448, 2.6496981406978262], [1.0803223107771311, 4.1392990649166075, 3.3530926867063293, 4.2603988688504524]]], [[[0.16904478915356339, 1.792988091743456, 1.7928513357851854, 2.9478986590288243], [4.9407460637608347, 1.275759418010513, 4.7246581014192062, 3.0110983604622343], [3.8858449214031148, 2.2545108198297625, 0.60427821623474354, 0.93717085572701753]], [[1.2994594048706098, 3.9536929023241818, 2.4365409347265863, 4.3445766229901475], [3.6026456881706772, 0.47404728977658322, 1.1999647375386526, 0.9314868761477304], [1.5945292798579167, 3.3729956595116666, 0.13771281014557915, 1.8566793690167864]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[2.5514150967250626, 2.3767708773849816, 0.20742811063013034, 1.3328009064783897], [0.37238536848886444, 4.8364574225497687, 0.91766280293082259, 0.11958275671663812], [2.4528829603244735, 4.9945230022720777, 4.3795138651810079, 2.5494161912339361]], [[4.4176770472686666, 1.3206856307623569, 1.2452758508055759, 0.91974229470413149], [2.1824481460620708, 2.0644819895380433, 4.5859199478794546, 2.639846287206566], [1.624518160986069, 3.8533073635944244, 4.741781192735826, 1.2807677180597794]]], [[[0.60936322385332675, 1.0859260906687249, 2.4566463959630149, 0.70331942509599921], [3.6469586180311953, 2.8649912763372276, 4.4857958263032591, 0.89348835393865023], [2.563613364888143, 2.4199989597064784, 2.6648090278549232, 1.2393260903682217]], [[0.82680792694076055, 3.7614966457201242, 1.164583288998069, 1.3083824347100264], [1.7400777152581375, 1.3537422367872685, 3.703175410531379, 3.9912814010873086], [2.6347696841893455, 2.9214036396036902, 0.3175234021696704, 0.35804661414522898]]], [[[4.6606580900889112, 2.004976723687935, 1.3416843222250203, 4.8808879512810943], [3.2061392102598898, 4.1371732225211604, 2.321235117640446, 3.1135569256916233], [0.22233125808565191, 0.1053897587524691, 0.26283786128843833, 1.636561480921074]], [[3.0447289095591241, 0.73707136629180503, 1.0365394419739771, 2.84764495577791], [0.33370919797500681, 0.98293194596723543, 1.2962702811005531, 2.9037749704050211], [0.44895393167437769, 0.15879520858195767, 4.0193349626528541, 0.48423495650400122]]]]))
      arg1=Data(1.14812882488,self.functionspace)
      arg1.setTaggedValue(1,3.45497215567)
      arg1.expand()
      res=arg0**arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[[[6.1166179185276155, 0.37584366613809556, 3.3883032411799094, 0.45148841842403031], [3.5258031639054219, 0.77140630397499044, 0.23269420520583237, 5.7551328527838983], [1.4658981484172815, 0.64400374647813641, 6.3073517264766386, 2.096901719494709]], [[0.031354908718072866, 4.8064427620275891, 2.3514340145100352, 3.2715924738395348], [1.5724409896932079, 4.7239199269108969, 2.1485406459632479, 4.5023028704489576], [0.65550584572919268, 0.83537279588750701, 4.2348770068300245, 1.0264026675391773]]], [[[3.8289214131120981, 1.8837820418427573, 4.3485876671594559, 2.0292962819917002], [5.6895385104679006, 3.0693063686444866, 4.5341001533242871, 2.1703567630997238], [1.3000826432711752, 4.6641982632023646, 1.1239899543775511, 1.4480141258543229]], [[3.8296281520277486, 0.49699700753713827, 5.0506474723162595, 4.2825828453888022], [0.22172201204456515, 1.1038523887730924, 6.2619043809421679, 3.0611455982003188], [1.0927569135304127, 5.1087123265222907, 4.011245025704695, 5.2806816700707602]]], [[[0.12991120171352902, 1.9549674382279643, 1.9547962410714121, 3.459878848685829], [6.2598396122974211, 1.3226233592711616, 5.9465363673834934, 3.5451768570014015], [4.7512212391163766, 2.5430186766749334, 0.56083075725833009, 0.92820589557577926]], [[1.3508721686520673, 4.8465899340934273, 2.7801360389325671, 5.4006479596608479], [4.3558533403527795, 0.4244255426490276, 1.2328084952866856, 0.9217452902658605], [1.7086307276322232, 4.0385934788323059, 0.10266717719702377, 2.0349071351575221]]]])+(1.-msk_ref)*numarray.array([[[[25.434162765851514, 19.907912008942663, 0.0043631145918506019, 2.6981156838658666], [0.032945143858882454, 231.75173765928162, 0.74314104139739534, 0.00065068464700576505], [22.19844659881662, 258.98665220363063, 164.47831334931246, 25.365383830921338]], [[169.48340467481066, 2.6143200005948324, 2.133732037680856, 0.74897545947899014], [14.826609653284514, 12.236679336995941, 192.84573338130326, 28.611620830908809], [5.3462285979068449, 105.69123116901204, 216.45075010182066, 2.3512951328109564]]], [[[0.18061482722312208, 1.3295017950984174, 22.316340830679774, 0.2964261626079579], [87.388722325700101, 37.961930236485436, 178.68468512340945, 0.67766256923206725], [25.85675954026253, 21.187062970423945, 29.557281786197183, 2.0987157788092996]], [[0.5183645609443055, 97.242278202081039, 1.6928458824452899, 2.5311341035552832], [6.7788803816320371, 2.8474305832694151, 92.131537703459969, 119.35109997159408], [28.421969386784838, 40.607466660202093, 0.018995426620507114, 0.028765613356059778]]], [[[203.92318948287294, 11.060616663247151, 2.760758307390355, 239.19071329276937], [55.995743880800951, 135.11206430317, 18.346339207665899, 50.604430950735747], [0.0055450440165044877, 0.00042052877429901427, 0.0098863945433602003, 5.4844139469360549]], [[46.843253944242406, 0.34853720974737129, 1.1320057080594867, 37.173711504177973], [0.022555389115923252, 0.94225560279293974, 2.4510943944161498, 39.767118835617808], [0.062858907897853963, 0.0017334664821821656, 122.27451297995837, 0.081635249562683906]]]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_pow_overloaded_taggedData_rank4_expandedData_rank4(self):
      arg0=Data(numarray.array([[[[0.94900540262758715, 1.0864741131759976, 4.4226327329560888, 2.01987492400887], [1.6838947226163277, 4.3832366429533511, 0.042100764766585891, 1.0216747573057192], [3.3929777990946062, 1.255402842023789, 3.6675675095585532, 3.8261058198287419]], [[2.1710194759343753, 0.64630041884984146, 4.3650166188468118, 1.9708066684358014], [1.9136886823329529, 4.941158242228231, 0.089609790492551619, 2.8661694692287578], [1.9035195403699186, 4.6057584057673449, 3.4643673362593415, 3.9641879036685022]]], [[[0.4677775206622713, 4.6257333428349749, 4.1138774003105993, 0.84313429965942477], [4.0307805052142376, 2.8548348593063078, 4.0148397471696615, 1.8399398657970056], [2.4549561139867269, 4.9990159683405508, 4.8039763136436289, 0.32628915829494826]], [[2.7267333886331415, 3.0802597826014209, 4.2563260381943904, 4.8614712720042066], [3.7990325343663902, 1.904327995867787, 0.078654898755141547, 3.5084865096212519], [2.5219936872011708, 2.8260330777994023, 1.4477332422024938, 0.92202156051194128]]], [[[1.5961897798371205, 4.4201530983725705, 2.4636688121290327, 3.2068446529637735], [4.7445883348541349, 2.1883628513369264, 0.54575911971233837, 3.0805511974070217], [1.8688580451084023, 3.0023337352834707, 2.0087437364787331, 0.54423856112045521]], [[3.2485115536919751, 1.5467899209436831, 4.8429522078194518, 4.3841799342897323], [2.5274616603021056, 4.5913813146539182, 2.0063796924295598, 0.55615229008354217], [4.2589493293898029, 4.2723313332377408, 0.20055586089393035, 1.6726977322700434]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[3.6048559132673716, 4.3686487162670646, 1.7809221939775355, 0.45441108759745452], [0.064963680457068504, 2.7966286375472169, 4.8502492085953026, 4.0611950916348718], [2.2844969596270328, 0.95308964252436723, 2.620264007206349, 1.765795431802051]], [[4.0678775630399588, 1.1525689994554245, 4.2632829900780846, 0.5600437705382324], [3.4410782456534434, 2.6417119369624982, 4.5105196740174183, 1.5185226069593185], [0.61835993175507753, 0.23444962900343599, 1.5673025467509127, 3.6458621210978546]]], [[[3.4299182627122562, 1.7692370826727641, 0.62618522835145218, 3.4064117571002952], [4.219953658511006, 1.9743917250600644, 0.76154636964850264, 4.3045171359665897], [2.8519586779214929, 2.983741271629504, 4.9114835883223114, 1.0527240242166733]], [[2.1674525114504526, 2.2889705445403519, 2.0208367882538618, 0.53386483200154011], [1.5936979798183153, 1.954855806135414, 4.4582477993016996, 2.8891630108538284], [1.5343538528221281, 1.9345455501870623, 2.1083668803485414, 3.3584656362412275]]], [[[1.2663347145549178, 0.36208409921912765, 0.57259384258704782, 1.2095846370513665], [4.3071761676787803, 0.97312365124040368, 1.2847238073876956, 3.523674589689922], [1.3241363628826592, 3.3134325275878895, 3.3722886350920023, 3.8686769369856857]], [[2.5695000874715559, 2.4401793909872027, 3.6114638620771089, 3.9243493652064316], [0.57298749071395394, 4.7758306910927999, 4.0797004018091192, 3.8105808890636528], [0.66855691666645334, 2.5732553010905779, 3.3516480548767227, 4.2732284096762516]]]]))
      arg1=Data(numarray.array([[[[0.46659675667322409, 4.3299833789729361, 1.6063845157718293, 2.7044564979421244], [2.9118586052244564, 2.0651903308042225, 4.4266864678034104, 3.612315106796681], [4.5994511064945662, 2.7440317542615413, 4.898312630515286, 0.12994353171139181]], [[0.064742157451202251, 4.2338703354947134, 0.017529370434819159, 2.3954919339606753], [1.5971195552860213, 0.83011284310592104, 3.65299752467467, 2.7309029225188817], [3.0661034221198773, 1.8755854354906674, 0.20817668131065847, 0.54135599466274242]]], [[[4.764192221185322, 2.5402895618960897, 4.7333632221741517, 0.30376251966026246], [4.9968220116255226, 4.6237856533808035, 1.1134778682416286, 1.5493256769799451], [4.848680849807101, 2.4639239081127227, 2.9427747966143469, 4.6817288211011832]], [[2.2392706916559924, 4.6963847148225728, 3.0901787220176167, 3.4478445722632496], [0.16786817540017335, 2.08102192091309, 2.7864539372615482, 2.1914918783280681], [2.4970414115451511, 4.5010865715878419, 3.2899467184236246, 3.4983428899664695]]], [[[3.1822879323924771, 3.2086927708983941, 0.10719036179064467, 4.7127314644691065], [0.21147845242172819, 1.0750919822308416, 3.7738785750056381, 4.4982690022106926], [4.3519272499286554, 0.27804739278771318, 2.8369441007803124, 1.6780701976044681]], [[0.61763188310969885, 3.0990442028064886, 1.7119594931898228, 0.40541999428837261], [2.7503511203989106, 3.7162088262884465, 1.8124607225202078, 2.7034494437906043], [0.37435389287267717, 0.22496088661561536, 0.22134223425796645, 3.7534388058142385]]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[[2.9298935142459261, 3.3421541410507594, 2.8918333362494106, 4.4436898755847656], [1.8186689023176217, 4.9558032340528158, 4.6457943294848576, 3.7549994090481058], [1.1913739886050232, 0.44731978363422725, 3.8895312591174296, 2.7552819428809201]], [[2.075040627624622, 1.4777244226679211, 3.908514740586662, 0.42453272737545983], [3.5020529722251985, 1.7067525241963422, 1.2369515684664472, 3.8638990167748322], [0.22301210801524712, 1.7043411700929016, 0.13601856376726254, 0.60306003340398717]]], [[[0.66347407134438952, 0.020576546168177792, 3.4606951280560359, 0.21902215644681217], [1.4416898912057428, 2.8868236359851154, 1.7591655724937492, 1.6000287611945772], [2.5517251022726963, 0.69715495463545218, 0.071666504450347626, 0.33963743633910892]], [[3.1883864225608649, 1.4857941340632896, 0.34008069780420597, 3.8874893025250508], [2.8828816349376094, 2.9302825087986184, 3.8018260808697213, 3.121719724485974], [4.9473496035476776, 1.7891081503884838, 1.5007997529837316, 1.5824885384691958]]], [[[2.6164767479073023, 3.0897577818084505, 3.3688005542235713, 3.3553686356714563], [4.2703963548807673, 1.3974472005433536, 3.192755939298292, 3.1159470818743253], [2.2383852003437701, 0.24560136285705272, 0.13351161205219708, 0.49899177900215824]], [[4.3057859324180612, 1.8305860826995559, 1.1680189954141567, 2.3195399662422211], [2.5805957682176581, 3.6174894003234677, 2.7471759412600125, 3.3412916160096682], [2.7272406260492081, 4.2353981799307716, 3.9773263243112575, 4.1316346948696383]]]]))
      arg1.expand()
      res=arg0**arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[[[0.97587376345987442, 1.4320669766847127, 10.894611831238015, 6.6947870513651893], [4.5603386388695917, 21.155761343120062, 8.131358195920374e-07, 1.0805385717545057], [275.66488647050426, 1.8666546810355016, 581.43404485487133, 1.1904893093046953]], [[1.0514686669467947, 0.1575447690086027, 1.0261681947920389, 5.0794580821880393], [2.819565233168928, 3.7666578022284996, 0.00014892139499701225, 17.735645563259581], [7.1970035173465794, 17.541954598025285, 1.2952008476977661, 2.1077270987168757]]], [[[0.026791931672011549, 48.949844751157535, 808.11789749611137, 0.94948960023279194], [1059.3069642933922, 127.79352529856791, 4.7007937556450079, 2.5719768915996633], [77.839059186923464, 52.722778276189516, 101.34394932996443, 0.0052822564005967432]], [[9.45196003288574, 197.05803207140988, 87.867895722700609, 233.27509158076413], [1.2511478990854137, 3.820750849217291, 0.00083751142793879138, 15.654011137218063], [10.073291292134815, 107.34648296699453, 3.377977531446358, 0.75275248233462422]]], [[[4.428671175881373, 117.76331899817947, 1.1014729879572045, 242.66623241633388], [1.3899571761707874, 2.3209167816180614, 0.10173577892730397, 157.75463372997123], [15.201287165806118, 1.3575512085450514, 7.2340244822022557, 0.36027648322290012]], [[2.0702967923256868, 3.864168678062283, 14.88952633253419, 1.820683176743769], [12.809258079181612, 288.34987407292539, 3.5327418914492488, 0.20471239097386237], [1.7202114362579621, 1.3863565574704111, 0.70073726724891017, 6.895786307433224]]]])+(1.-msk_ref)*numarray.array([[[[42.817595727578293, 138.08254839592053, 5.30668624367192, 0.030047561455100867], [0.0069285280969342451, 163.46854191700626, 1534.3299093198627, 192.97224835329598], [2.6758007406530098, 0.97873724099166215, 42.380507601164759, 4.7906053441170862]], [[18.384977102441695, 1.2334647274275945, 289.31059442466341, 0.78182938008265868], [75.776185075565664, 5.2487280497081086, 6.4453513413525858, 5.0233499625398732], [0.89834735054307036, 0.084401373214573583, 1.0630272778984502, 2.1817213008662781]]], [[[2.2654104662310428, 1.0118090993325235, 0.19790211437921015, 1.3079311047648305], [7.9707605691837271, 7.1262966550835971, 0.61927606604710828, 10.334687241329886], [14.501081782557815, 2.1428022615223186, 1.1208223895704073, 1.0176041071174904]], [[11.779778230586256, 3.4225618530283066, 1.2702970136091969, 0.087175037893126028], [3.8327686360383248, 7.1293247372715829, 293.77132429445601, 27.441079039363576], [8.3145469157469858, 3.2562725857345289, 3.0632211718767555, 6.8016136320886025]]], [[[1.8548799147867556, 0.043333929782993746, 0.15283884233434614, 1.8935427843665384], [510.80356262658773, 0.96264341378579055, 2.2253741877564579, 50.630235803247828], [1.874702585282076, 1.3420880769420969, 1.1762078754127001, 1.9642141684456083]], [[58.17287056571098, 5.1192798657056677, 4.4811002179872759, 23.837890809602168], [0.23761309627935118, 286.0568013634267, 47.588640250962747, 87.349611061522509], [0.33351110783366955, 54.771978176011942, 122.77900102393954, 403.69541404793375]]]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_pow_overloaded_expandedData_rank0_taggedData_rank0(self):
      arg0=Data(0.290978701944,self.functionspace)
      arg0.setTaggedValue(1,4.33256554475)
      arg0.expand()
      arg1=Data(2.87944550352,self.functionspace)
      arg1.setTaggedValue(1,2.68423693728)
      res=arg0**arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*(0.0285902234267)+(1.-msk_ref)*(51.1887858657)
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_pow_overloaded_expandedData_rank0_taggedData_rank1(self):
      arg0=Data(3.66268191098,self.functionspace)
      arg0.setTaggedValue(1,0.26113547426)
      arg0.expand()
      arg1=Data(numarray.array([1.2129035203196619, 0.6408520041688891]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([0.16130243586340109, 2.9807586690757684]))
      res=arg0**arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([4.828742413101911, 2.2977980131132441])+(1.-msk_ref)*numarray.array([0.80526541078777147, 0.018273338360333315])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_pow_overloaded_expandedData_rank0_taggedData_rank2(self):
      arg0=Data(1.1345120031,self.functionspace)
      arg0.setTaggedValue(1,1.36423406524)
      arg0.expand()
      arg1=Data(numarray.array([[0.049140579953681339, 1.9478799151148214, 2.8538301583648402, 1.6150789116044209, 3.9764770067026123], [0.14184127381272654, 2.9945639775316319, 3.6667792892098445, 0.049854388563718051, 4.2739507075436132], [1.681702986758588, 3.4292769369795493, 1.1457686065402337, 3.0035868311864462, 1.5011726544103006], [4.9055846693043232, 2.6070135673466477, 3.5853479684538607, 1.019915640982572, 2.6767526929524741]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[1.5250751478882203, 2.598988094472221, 3.3830444660225245, 4.8222858246721723, 3.3382545876578398], [2.7199819355727457, 1.2390967609641523, 3.6629805518941558, 1.1696266770771038, 1.4974765373712176], [0.058115190493916245, 0.023733434607369167, 1.6109454077767253, 2.4490252787162956, 1.8997826296768394], [0.41233748718478463, 4.2765851601643403, 3.6169911698535939, 0.76644592371932374, 0.39346503881117628]]))
      res=arg0**arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[1.0062209393799328, 1.2786790079992163, 1.4335599138422392, 1.2260862261841985, 1.6517606143205812], [1.0180619168063862, 1.4592487895360631, 1.5884474604280334, 1.0063115883794047, 1.7149496370866695], [1.2364387826820069, 1.5415427236809713, 1.1555760718899237, 1.4609113937090406, 1.2085869894794572], [1.8572512379565849, 1.3895943974354514, 1.5722068265304749, 1.1373670786036605, 1.4018785568449759]])+(1.-msk_ref)*numarray.array([[1.6058896294174243, 2.241685169223107, 2.8597963797611272, 4.4717012496131581, 2.8202879710899285], [2.3275303005091943, 1.4694011872061947, 3.1195746307183909, 1.4380356209898071, 1.5921828716882835], [1.018214068979288, 1.0073986780999193, 1.6492961208928243, 2.1396675529309408, 1.804095693038984], [1.1366316522507964, 3.7745381935446636, 3.0753314046830176, 1.2687762475107272, 1.1299886004246051]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_pow_overloaded_expandedData_rank0_taggedData_rank3(self):
      arg0=Data(3.70418837285,self.functionspace)
      arg0.setTaggedValue(1,1.96574305058)
      arg0.expand()
      arg1=Data(numarray.array([[[2.614717589012538, 1.4331698200280711], [1.485876742403974, 1.8009865340771538]], [[0.82479162184122223, 0.34201465764318179], [0.2772860498381533, 4.7796936329011448]], [[0.89463931304663546, 1.8447725319085986], [2.4982145845884762, 2.794471868169667]], [[1.0526619599072593, 3.608724317581677], [0.46217779263847075, 3.4049695072692598]], [[1.0964011703137477, 3.4302981899476248], [2.7477611175196346, 3.0489415192368372]], [[1.5018122639408436, 1.7866017134779382], [0.71054734952859067, 2.0913444416061022]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[3.3934324263721183, 3.4144492522544074], [4.834801548307655, 3.2671376960498653]], [[1.4412276227188501, 1.6600380529227996], [4.6031863836552676, 3.6202640128406598]], [[1.3978596354389083, 1.5279815017234732], [2.2838301920697788, 2.4665656870642034]], [[1.0305356470116074, 1.5536868663855166], [4.9729042848201566, 0.17787706014311994]], [[0.93076829111447512, 4.1076214014703911], [0.56016987241340588, 3.0783602720110506]], [[4.3224413173161009, 0.17410856679419506], [2.0291032136716094, 0.61295388932027206]]]))
      res=arg0**arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[[30.688224153617799, 6.5318129049170857], [6.9985456159793555, 10.573251207350758]], [[2.9447828470608592, 1.5649532330555238], [1.4377740912446446, 522.61108591270954]], [[3.2268232114198039, 11.197197639043543], [26.346158917133238, 38.832626842947072]], [[3.9686386311495823, 112.78633643478274], [1.8316281313863381, 86.37390259069123]], [[4.2025775976295456, 89.286703456081227], [36.528571560699298, 54.189094637123524]], [[7.1461185762583685, 10.375953168891614], [2.5356152170804296, 15.464400149793622]]])+(1.-msk_ref)*numarray.array([[[9.9097611732132247, 10.051530356993913], [26.250862701083484, 9.0989715359195742]], [[2.648737124731356, 3.0708992820311001], [22.447001429005535, 11.551658094676128]], [[2.5722264180684786, 2.8086876376175995], [4.6812868264212693, 5.2966711160047923]], [[2.0067338577986256, 2.85791070267376], [28.81910091601344, 1.1277469862656915]], [[1.8758814575067817, 16.058196060511307], [1.460242019896741, 8.0090514372116477]], [[18.567445062381751, 1.1248782551627159], [3.9409059424085369, 1.513276759740295]]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_pow_overloaded_expandedData_rank0_taggedData_rank4(self):
      arg0=Data(0.730714736406,self.functionspace)
      arg0.setTaggedValue(1,1.4166621205)
      arg0.expand()
      arg1=Data(numarray.array([[[[1.2290339953863241, 3.9770670450888996, 0.19060256664459632, 4.5759764736689048], [0.57859829269889695, 3.6448775276079632, 0.012906110615228738, 1.7025687306169721], [4.8064049312722608, 2.352747090838665, 3.7191366310274434, 4.125718709856562]], [[2.6060559875940328, 1.2133214535508734, 1.8927039692205638, 0.99085549211502644], [4.0661289840988593, 0.81941694331193715, 2.5008007402410968, 3.3567118107840632], [0.16325672960023926, 1.7051846964512758, 0.36881937324615371, 0.25260556446842258]]], [[[3.5148054722538853, 3.0189279117899233, 4.0586056415707841, 2.8654694519983246], [0.96837632820701103, 3.3183848744669966, 1.1715863950258805, 2.188989465847988], [2.0845513930801749, 4.6504392023104622, 0.80937836720073031, 2.4275338730084446]], [[4.3738886548009317, 1.1830459534010012, 2.7947935341719168, 2.4127883187988917], [2.1976269348487572, 4.842612070386517, 0.86169835807335926, 3.0783413757345639], [2.3182109917874723, 2.7640370217159314, 4.3609083143086869, 3.9055810827930841]]], [[[3.4646714771074865, 2.3359610299416143, 4.4329582831624599, 0.96322118708699789], [4.0404455084062239, 2.3143201360225674, 2.3183335689983795, 1.6011534260758671], [1.3147841996862206, 4.1872271125391975, 4.0875606736791887, 1.1625915492053573]], [[0.90744069607284872, 3.943248496682036, 3.9177151083537942, 0.20987143460120961], [2.6204270514908958, 2.0749404487560699, 1.9351743065377902, 1.1390464737765298], [4.2215433837221399, 4.375555133341714, 2.6690874390134813, 3.0135341491662158]]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[[3.3438159891438453, 0.15422530790010724, 2.094175501307153, 2.8542340411635663], [0.74077514957206836, 0.66323769318626913, 3.6448799704887747, 4.9251673855914673], [3.2045131446283937, 0.86414715738159542, 2.8368640431245313, 3.9234020138010748]], [[0.83952723449920896, 1.0823986821829952, 4.8325400305832291, 3.5212828422917197], [1.6093565350668955, 1.3784767646923228, 2.4236462081199677, 2.6907313642434398], [4.9086602581733025, 4.0972003646165076, 1.6228821628859387, 1.2061431496345567]]], [[[0.59099799989906809, 1.3330447349998142, 4.6943674707120309, 4.5468883386162036], [0.52200427378409031, 2.573945076274716, 3.1077515050414015, 1.9218113431036583], [0.944397915678026, 3.1448511211622923, 0.42742257372754111, 1.8672627812995219]], [[3.5320490376136333, 3.6376604579892202, 4.6797398330841746, 2.6501881748619294], [1.6814847696596846, 3.2720127716058931, 1.2243030345135724, 0.023287513351529121], [4.7437978187626317, 3.2832796669824775, 0.43085966986009844, 4.8949180034116786]]], [[[1.2371039877816559, 4.1621564317908479, 0.95504725431048942, 1.2664964340496423], [1.8799602167507268, 4.3333504665276932, 3.3742329821035839, 4.4866043906777664], [2.2585156850514072, 4.3568191394543669, 1.6207013742717002, 0.68063425643107944]], [[4.851803337279045, 4.5056351498155855, 0.11453714250732401, 3.5971342478892194], [0.9749405351435626, 2.8775081138097645, 2.0402970685117645, 1.491314881810093], [1.9805301389099217, 1.614276967512617, 3.1875718144167995, 1.9130086746663639]]]]))
      res=arg0**arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[[[0.68005101828135861, 0.2871548313537533, 0.94195464816442986, 0.23796519415628301], [0.83399749815400293, 0.31869676737004432, 0.99595912478679072, 0.5861670163282976], [0.22136913637531178, 0.47800582378610257, 0.31135776204519694, 0.27407032896793337]], [[0.44148841323717308, 0.68341162597789196, 0.55222370442898472, 0.73281411292242671], [0.2792423269654824, 0.77330833779049857, 0.45631060495988274, 0.34885170684714739], [0.95007069441472558, 0.58568613906503841, 0.89073306333717628, 0.9238084975858355]]], [[[0.33197108161370603, 0.3878507444009538, 0.2799022050758424, 0.40698056649518011], [0.73800050443253029, 0.35307175726029028, 0.69241880385034371, 0.50320565582162813], [0.51996657171957894, 0.23247043816361251, 0.77574765274936996, 0.46692091638047983]], [[0.25354108030225692, 0.68993386746110841, 0.4161054620086313, 0.46908596859745577], [0.50184388911020916, 0.21886875665184249, 0.76311810927825752, 0.38068820232148382], [0.48321321737549128, 0.4201400251078401, 0.25457569352098713, 0.2936677410521133]]], [[[0.33723381633018723, 0.48052979881795888, 0.24888571666341286, 0.73919506305085625], [0.28150147627601418, 0.48380342937445642, 0.48319463508728022, 0.60511710396162066], [0.66199978274096583, 0.26883225188834642, 0.2773710527991573, 0.69437555008386564]], [[0.75224492867874726, 0.29021775417593298, 0.29255192200947278, 0.93627746187434324], [0.43950237065313968, 0.5215367732915851, 0.54491450800753138, 0.69952378705645724], [0.2659534967379456, 0.25340855660660971, 0.43284373941660098, 0.38850761975654513]]]])+(1.-msk_ref)*numarray.array([[[[3.2048419093792866, 1.0551861662369193, 2.0738538211964128, 2.7023983706209243], [1.2943576725545944, 1.259869318435727, 3.5591594124398878, 5.5591930655186053], [3.0530561235481297, 1.3511897040792433, 2.6860981352790492, 3.9217367151745806]], [[1.339652513033456, 1.45790902334869, 5.3827023039747894, 3.4091912271286584], [1.7516259837059522, 1.6162816954826078, 2.3260334181150952, 2.5528008065307284], [5.527322248788284, 4.166470050250541, 1.7598974026697767, 1.5221196388281089]]], [[[1.2285648052513687, 1.5909067347840793, 5.129789118797567, 4.872938071021423], [1.1993933746521837, 2.4510439621470135, 2.9518753503717856, 1.9530135476537258], [1.3894904336760883, 2.9902667753800554, 1.160525328598615, 1.9162576330518772]], [[3.4219993643720641, 3.5502208595751767, 5.1037200414485193, 2.5170051890659662], [1.7961886540512655, 3.1256849775708626, 1.5317777881068828, 1.008144106332195], [5.2188721398793199, 3.1379751992541882, 1.1619154864184369, 5.5009290732969234]]], [[[1.5386226459969077, 4.2618084593377379, 1.394653904296508, 1.5544551866881773], [1.9247511671082504, 4.5236585045471482, 3.2389756019277423, 4.7716871664379967], [2.1960249485695447, 4.5607874302373661, 1.7585611339198255, 1.2675263987292902]], [[5.4189388487115728, 4.8034212563117711, 1.0407001272352228, 3.5004600240344343], [1.404350876278299, 2.7243942361729165, 2.035298680400162, 1.6810694543853704], [1.9933677597833623, 1.7546305007606446, 3.0350939280178508, 1.9470347780670707]]]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_pow_overloaded_expandedData_rank1_taggedData_rank0(self):
      arg0=Data(numarray.array([3.1643553208943609, 2.0361133128965139]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([2.999012522821106, 3.8647663797687231]))
      arg0.expand()
      arg1=Data(4.03780846025,self.functionspace)
      arg1.setTaggedValue(1,3.52615815834)
      res=arg0**arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([104.72635549052796, 17.655625164955055])+(1.-msk_ref)*numarray.array([48.072958543179119, 117.56807993958545])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_pow_overloaded_expandedData_rank1_taggedData_rank1(self):
      arg0=Data(numarray.array([4.8240661847454618, 0.71283409218871951]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([3.5040005213376251, 1.7417268535230881]))
      arg0.expand()
      arg1=Data(numarray.array([4.8630386052774952, 2.438043971650234]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([3.984367679131966, 2.217029829800643]))
      res=arg0**arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([2106.0324321877029, 0.43810620730388589])+(1.-msk_ref)*numarray.array([147.82362455309129, 3.4218420130188876])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_pow_overloaded_expandedData_rank2_taggedData_rank0(self):
      arg0=Data(numarray.array([[4.72434714455557, 0.23620652583179846, 4.9468941500543018, 1.88457595182454, 4.220257451931098], [4.5474338379092094, 3.153568592759584, 0.018712880810372555, 0.20914159620509945, 4.3571765066935102], [0.75883121814093668, 4.0805727877813665, 4.6425741829993328, 4.7496512910696751, 0.76615802288954982], [3.8184048422099468, 1.1316017702663523, 1.8503851873414872, 3.5706175103611399, 2.1778340295417613]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[2.0710596941529507, 4.4708077264002117, 0.54950984653380786, 1.3599563187428712, 0.25289468983244828], [0.95849310044139635, 1.0975192604189969, 2.5663735041173519, 0.35855567205384381, 4.1805113844736059], [1.2589924746693613, 2.8339456271705203, 1.2438108049901886, 1.1810031991780054, 2.1962503047946265], [0.49473018518697875, 1.973927620630846, 0.17826270489161136, 3.6884986823810983, 2.0356603912539537]]))
      arg0.expand()
      arg1=Data(3.72919937737,self.functionspace)
      arg1.setTaggedValue(1,4.61014763846)
      res=arg0**arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[327.15610444558808, 0.0046012996189977815, 388.42284580845109, 10.624941647026404, 214.78977637370474], [283.75401063748217, 72.465811230664414, 3.6013720776011347e-07, 0.0029227174401894461, 241.9487929071947], [0.35730370106158998, 189.45272406294862, 306.53261892970005, 333.73863607695017, 0.37033953473613684], [147.89513496795149, 1.5857481285465851, 9.9237043672577414, 115.15693141585031, 18.220563220850952]])+(1.-msk_ref)*numarray.array([[28.687628312676111, 996.26632021487001, 0.063277391505582897, 4.1263852791987858, 0.0017679253190124868], [0.82247466759127252, 1.5356985701084267, 77.094784559929607, 0.0088397533618402562, 731.07056705740195], [2.8914881448464107, 121.78440191286083, 2.7342072378541529, 2.1532185789698763, 37.601373032230576], [0.038993591922357587, 22.989024605786593, 0.00035259674283432378, 410.45022241739042, 26.495805787296593]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_pow_overloaded_expandedData_rank2_taggedData_rank2(self):
      arg0=Data(numarray.array([[1.2218347840423545, 4.1389737993683697, 0.050026525651330887, 2.0580516358971637, 2.0229316594488025], [2.9282291469024373, 4.8330431070522781, 2.7417513525270585, 4.3902288938738563, 0.74928299882973526], [3.5689711787328582, 1.8845047580786216, 1.4419818787284271, 0.53265232720948952, 3.3429488091505299], [3.702474735047077, 4.9434586261774927, 1.2549315975325275, 3.0133571452200578, 2.117696032636136]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[3.9269473109688433, 3.7171589715484332, 4.3254954290346284, 0.70558622526299986, 1.5115333784908958], [3.5664836496351562, 2.6645650154204867, 2.3443594877436982, 3.8067013624336243, 2.3508829133940101], [1.3463498224868513, 0.54419872136365899, 1.1664618639788173, 2.0694749467607512, 1.1737539838104745], [4.621380626428464, 1.2734187474726342, 0.51016846608788791, 1.579849580859118, 0.25415795060111696]]))
      arg0.expand()
      arg1=Data(numarray.array([[3.8141721363253707, 0.8194556436698105, 3.9494604233624742, 1.3071816097515467, 1.0895073144002956], [1.7940293096160496, 4.4884546091156698, 1.7734415833506132, 4.1308852274429322, 0.61944018117960442], [2.4485484115944103, 1.8604880253120417, 0.49305605076871506, 4.1878349942453754, 0.040445256883769688], [3.5714028114536487, 3.6483205191618575, 0.87716166214784796, 3.876026600558045, 4.5127051828088716]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[3.8992893521742706, 2.945221949474957, 0.1794385033086755, 0.091407530859525452, 2.7867241733559318], [3.1087790912976585, 1.9054705994746313, 4.6483421787599557, 4.4627512744205982, 4.9508429436798842], [2.5990653626636178, 0.97114420364719956, 0.75717842701781601, 4.392564743156699, 2.9667122206287004], [0.45676313562750653, 2.6368349774578359, 0.33508218001785339, 3.8720242185185954, 3.8327741137337825]]))
      res=arg0**arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[2.147240030022862, 3.2026994550797365, 7.2869070950443113e-06, 2.5688826616086518, 2.154610479209583], [6.8723164962092307, 1177.8592969636186, 5.9815975202737786, 450.85898950224765, 0.83627790063584695], [22.538675192565915, 3.2508817054425836, 1.1977773396050797, 0.071514135578589086, 1.0500223939526865], [107.22950404712837, 340.44517774784515, 1.2204099248635834, 71.913909319362034, 29.547889101958393]])+(1.-msk_ref)*numarray.array([[207.20137144222255, 47.796748156682547, 1.3005567944732468, 0.96862648121202244, 3.1621885267504917], [52.094623457776962, 6.4717009673682178, 52.48064119450337, 389.80277874820047, 68.850385169326884], [2.1661566957275915, 0.55383760979076957, 1.1236548581321422, 24.402608947995613, 1.6084781712795404], [2.0120706411359683, 1.8914368044494225, 0.79810501468180128, 5.8755016518619767, 0.0052468284002347735]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_pow_overloaded_expandedData_rank3_taggedData_rank0(self):
      arg0=Data(numarray.array([[[1.1119034421556613, 0.51777115312915201], [1.3281109896277756, 3.1810372519188035]], [[1.7393617716381891, 4.5190741920336928], [3.3780524283231386, 0.07696547747732474]], [[0.053513305990988851, 4.6713586849908646], [0.7946715875076289, 4.1233530615398353]], [[3.986760745092059, 3.8785033326006442], [1.3573293546680181, 1.7829355838937633]], [[4.4637977201872054, 3.2071296678411874], [4.55402676971267, 0.79203999894074772]], [[4.1120889950754407, 4.2568503831563946], [3.6410191216901873, 2.0182205205372012]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[0.045561542330358404, 0.59631656354375717], [4.1677922207776943, 3.7190805073025399]], [[2.9855480801219834, 4.7709282393338723], [3.8807407053918639, 4.4227259912406574]], [[1.3962308888731882, 3.2181844618230944], [4.2295151095032475, 2.261371029329454]], [[4.7612560979261067, 1.8155985602310414], [0.50529029082311194, 2.5669729700251649]], [[1.8114947811310225, 4.073180444116721], [0.67857165841626277, 2.4854381391548679]], [[2.6559255997719151, 1.6210833800246345], [1.4607212626154282, 3.0068287399170601]]]))
      arg0.expand()
      arg1=Data(4.44672927732,self.functionspace)
      arg1.setTaggedValue(1,1.61565798989)
      res=arg0**arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[[1.6026836622508347, 0.053560967260344386], [3.5317494204049189, 171.70668222019577]], [[11.720574468723932, 818.1400683316856], [224.30362640523549, 1.1159883850407162e-05]], [[2.2172454832791546e-06, 948.05328049691718], [0.35988327127282216, 544.31776991364859]], [[468.59247451458873, 414.60085614456881], [3.8905889451168352, 13.083750674727526]], [[774.56888780772351, 178.05867777981641], [846.65581977837155, 0.35461396110702298]], [[537.73675251965426, 627.17067672071744], [313.04485196633323, 22.704549053940006]]])+(1.-msk_ref)*numarray.array([[[0.006803835660044933, 0.43375791773537387], [10.035896605393662, 8.348891209918671]], [[5.8543196752425422, 12.485046722908082], [8.9430286251236417, 11.046234581210502]], [[1.7147520302508854, 6.6088464361126915], [10.277118893801184, 3.7371770136715869]], [[12.444178272135638, 2.6211233381788919], [0.33191247255859896, 4.5865357976083905]], [[2.6115580365765481, 9.6703941348183093], [0.53446131289541776, 4.3534739372876441]], [[4.8460491701859087, 2.1825977105206618], [1.8445250410480061, 5.9218871817048555]]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_pow_overloaded_expandedData_rank3_taggedData_rank3(self):
      arg0=Data(numarray.array([[[4.6352737794785313, 3.0204903163958812], [3.5946168203782007, 4.4997565667498813]], [[2.0550464292938524, 2.6422374226654468], [0.34743724269677345, 4.6516871630969163]], [[4.4751230984590471, 4.1447933519553022], [1.9596032882419652, 4.6499156538776862]], [[2.1614082266923078, 0.60781855352520586], [4.7615271071176579, 3.3964255383673643]], [[1.1882998388078425, 0.094567545615656334], [0.83733167385771201, 4.6466737777463871]], [[4.268880171509851, 1.4506037865156072], [1.9565641493796417, 4.665635795298547]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[3.8687360267168147, 1.2170681090813134], [1.2354501364663018, 1.6553465539964858]], [[4.7174616968357874, 0.8088377381863634], [2.8312876745107305, 1.3007489254472286]], [[2.4847612743765373, 2.5896212265677274], [2.1709089423919581, 0.80703893791937176]], [[0.59987097615800977, 1.5085615556675982], [3.2311892479615407, 3.5128052792871332]], [[0.94866157737955636, 4.3740473109290052], [4.0452531395063582, 0.13613041800697206]], [[3.5585637103646657, 3.2615126971551298], [0.87521397414700697, 3.8773109721013239]]]))
      arg0.expand()
      arg1=Data(numarray.array([[[1.7298250853133232, 0.58780224705705619], [4.1573161057130559, 0.69473816645079012]], [[2.4634794939865374, 2.3547913805173923], [3.7206945628283945, 3.7732636992026798]], [[1.623352088147106, 1.4354000100341291], [2.2774417274986036, 1.7180437485615785]], [[1.3456747520743881, 1.0345286355587673], [0.95710352358503903, 1.31662846222279]], [[1.9450902806665276, 2.1367207096405725], [4.2646516368223786, 2.1366913867848454]], [[4.3536801552667663, 1.8741181390136004], [1.9919622536089663, 3.811292546229641]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[0.71288488908586733, 2.9880925579509334], [3.4429735882980257, 1.2714836370691041]], [[1.071644158248942, 3.3334798857116343], [4.2219557067171198, 2.9081610735464412]], [[0.43184501531074954, 3.6170644783151467], [3.429299808036383, 1.7701181051148689]], [[4.7865636553069608, 1.7953556939999786], [0.33087615333104714, 3.103957304402654]], [[1.7015837987511115, 4.336203317746258], [0.041905172485572413, 1.2053284289769686]], [[3.3905395294228304, 1.6705878579191957], [4.9839813490695848, 0.97736995816174232]]]))
      res=arg0**arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[[14.196912946434132, 1.9150962352955425], [204.18484851713336, 2.8431209904256955]], [[5.8969804927152163, 9.8549777928457427], [0.01957677751834748, 330.42314745876439]], [[11.38900105345952, 7.6977471927084533], [4.628027788648315, 14.018444898141569]], [[2.8212843548408961, 0.59745880006222307], [4.453211629831535, 5.0021741548938898]], [[1.3987429438864021, 0.0064780899001835252], [0.46901289237895966, 26.636487676180515]], [[554.86252979472044, 2.0079900159624811], [3.8075466022824829, 354.33567243615533]]])+(1.-msk_ref)*numarray.array([[[2.6234278888841822, 1.7985758849322315], [2.0708651189664704, 1.8980764100291567]], [[5.2720030471168053, 0.49301240890753417], [80.957375586665322, 2.1482905653733391]], [[1.4815001995162445, 31.239361400192259], [14.270690924947404, 0.68421446175824641]], [[0.086628295665784033, 2.0921083039642956], [1.4741302895693158, 49.395451255542156]], [[0.91422475744259402, 601.17519883386672], [1.0603131911140993, 0.090392324636910451]], [[73.980764764350496, 7.2062889224954727], [0.5146339914614243, 3.7602105299349033]]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_pow_overloaded_expandedData_rank4_taggedData_rank0(self):
      arg0=Data(numarray.array([[[[3.4084789100372772, 0.32443643115531462, 4.3480592679952288, 0.3715046729532559], [4.7285913806594797, 3.817981513954126, 1.0432103494103531, 1.3510136447170369], [3.8738064380817079, 4.8777876345684055, 4.2590119301580307, 3.7614038109946857]], [[3.0794043364004957, 2.4132508201129599, 3.569467818455621, 1.2053588679409031], [4.1321927526857749, 3.8412185138212602, 0.83495520715199667, 0.40276639817341819], [1.2557867505153064, 1.4609950112131558, 1.1333157589182339, 3.066481285081446]]], [[[2.0397070527326835, 2.1094012252412324, 4.7306094695545307, 2.6366197715948152], [3.7984540899245158, 1.1500679213898481, 4.5114424447497514, 1.4158896649355766], [2.5601966872513611, 1.8181596324372136, 4.9320343315335835, 0.136209118118025]], [[3.1992969903491839, 2.2861784446675166, 0.18472546560483336, 0.24033021492669984], [1.8111529022355928, 2.2163796431213236, 3.2820938415844725, 3.9436523827016772], [4.3567549427324579, 4.570149482980205, 3.3737116564922545, 3.3673086117597801]]], [[[2.7027020548588214, 3.4579748717716692, 3.3778598116554126, 3.6087873566737425], [3.0994322025158429, 0.3441910465809756, 4.8578676353632337, 3.2656533352057657], [4.3505465308521734, 1.6988272727651315, 0.6932515686804106, 4.7009438562362176]], [[1.8265720608741203, 3.0492993072051275, 1.6432808452361347, 1.8810305588502598], [4.8155376549444719, 4.0057784211430878, 3.9494244465911961, 3.7900811357411923], [0.46215568081299507, 0.98050210396692683, 3.5293429303773918, 4.3674868862428209]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[4.5980905002230879, 4.9366536665656406, 0.1254841342903997, 1.5352184575946237], [0.37537989631560686, 0.21049722066770885, 1.7342050840095462, 0.26113001675763048], [2.244413467734919, 2.3933005923172739, 3.2090335085115207, 3.9592429097555204]], [[1.8153847762997266, 3.5397973949296642, 2.4208519085717621, 3.7000571938565203], [1.3213654243101831, 0.22581738309014121, 1.9740703542188627, 1.0670816884664396], [3.9156701979573851, 4.5657896301170222, 1.8037076114423312, 2.2876875720965799]]], [[[1.1976366830576155, 0.6187181471202432, 2.0351353625831829, 2.2271780842298452], [0.85816104472548893, 1.0757216989101244, 0.93828183926187358, 4.3266802357989649], [0.63953135885879309, 1.1326069863388648, 0.56419831162420953, 1.8510936444454675]], [[3.6589391806812066, 2.4956457789348709, 3.0872736931869782, 2.6103523606343182], [0.66625671767459438, 1.7878236939207914, 2.3608975572412172, 4.5382631319001243], [3.1955919951914673, 1.9428946250904118, 3.5099579999798332, 3.2312945021906656]]], [[[4.5842648858848545, 3.2699976165594618, 2.0337751384874418, 4.090405662346936], [2.0234121482833554, 3.8503829518632879, 1.870963122317439, 0.4051588842737251], [3.4313680197676315, 0.11426598218928596, 1.0280433150823958, 0.4817607648661531]], [[4.4084315022805676, 0.67018356076403385, 2.204064292120222, 3.4600724523374815], [0.88970021441273883, 1.4134499893549597, 3.350521003928923, 2.9481028726977856], [0.81727327250165349, 0.41592984538829353, 4.2889103357397049, 4.2943324281804882]]]]))
      arg0.expand()
      arg1=Data(0.661316768979,self.functionspace)
      arg1.setTaggedValue(1,4.22836995859)
      res=arg0**arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[[[2.2500453042982169, 0.47500897654993829, 2.6431115234598233, 0.51952944607446561], [2.7939037771701618, 2.4253614075164664, 1.0283705639211196, 1.2201338446351364], [2.4487557383473373, 2.8518937202381167, 2.6071889076130037, 2.4015330994639315]], [[2.1039297324203075, 1.790694188966609, 2.3197754170088349, 1.131471486340673], [2.5555862615727842, 2.4351132260172892, 0.88755350963570168, 0.54804356025966761], [1.1625583000897139, 1.2849462702175436, 1.0862834925208602, 2.098086566434211]]], [[[1.6022208377245237, 1.6382188197326093, 2.7946922706451378, 1.898653766835986], [2.4171508248236924, 1.0968758183513119, 2.7083810110948665, 1.2585726288258476], [1.862078562782628, 1.484906138966662, 2.87282899454839, 0.26756914389460584]], [[2.1577496165146619, 1.7277684847315191, 0.32729687093086979, 0.38950962614205642], [1.4811193095844144, 1.6927010914184066, 2.1945188106313251, 2.4778656453623951], [2.6466060301810286, 2.7316373577643769, 2.2348411061785516, 2.2320351916531811]]], [[[1.9299913912969391, 2.2716002807285869, 2.2366579300655567, 2.3366430248615222], [2.1129689644067686, 0.49394408316514044, 2.8441862814230903, 2.1872429880314437], [2.6441113143864174, 1.4197162115705431, 0.78483517337178776, 2.783090026298217]], [[1.489446163468459, 2.0903047910325259, 1.3888451480842816, 1.5186670756715144], [2.8277723417617029, 2.50361167681671, 2.480263441232109, 2.4136259202708263], [0.60023163194367479, 0.9870627652767654, 2.3024973187007336, 2.650915591644897]]]])+(1.-msk_ref)*numarray.array([[[[633.31949830881672, 855.24359113962305, 0.00015434765699074468, 6.1262738994691039], [0.015874717381308967, 0.0013754197758514594, 10.256641627565545, 0.0034218013810192768], [30.520582014663397, 40.044288267347021, 138.40050504416101, 336.45365615695704]], [[12.445588157519836, 209.54813355015793, 42.030029938342444, 252.6943236226021], [3.2488507293899982, 0.0018511733025864357, 17.737910399496542, 1.315922065729475], [321.07280972265045, 614.7198082821468, 12.110587229893266, 33.087371216069229]]], [[[2.1438157469656449, 0.13132718895082998, 20.176537641850274, 29.541773223503576], [0.52372619221697625, 1.3615670340016617, 0.76386216822371067, 489.66362609264593], [0.15104698324200261, 1.6930392154436797, 0.0889122529804897, 13.51407015452213]], [[241.03170017182563, 47.800938833856371, 117.51810556501806, 57.804028142625114], [0.17959384287215308, 11.666004331233175, 37.801425975143914, 599.20104129926267], [135.96579410157986, 16.583268400415371, 202.18002961122338, 142.50577570589837]]], [[[625.30651050062136, 149.86386231820541, 20.119577873424483, 386.16649178119764], [19.689644886944492, 299.03857214688458, 14.138145094464431, 0.02192274272483009], [183.71890248654043, 0.00010387818732527204, 1.1240579448970762, 0.045592555660689454]], [[529.9946934081928, 0.1841123668474732, 28.266962602577681, 190.30562902832051], [0.61007547356094727, 4.3195780640768984, 166.09985895841058, 96.694098270597038], [0.42604601578857598, 0.024494916935938041, 471.84235023859912, 474.36976215126481]]]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_pow_overloaded_expandedData_rank4_taggedData_rank4(self):
      arg0=Data(numarray.array([[[[1.2820823759265192, 0.5737001997059058, 3.7609626331257435, 3.8204828650959661], [1.0604623747134183, 4.7962582641552327, 2.1446949998670899, 0.066897088147012368], [4.1166768601596111, 2.8913449676264702, 2.0713795718371202, 4.9269219873251373]], [[3.5301643497227109, 0.48277612418455873, 0.43267166336262558, 3.0891456142822236], [2.3659333826276225, 3.6168080939222143, 2.5712495200534393, 4.2012255827121496], [0.94320445730141611, 2.6067796995502555, 4.6120595372729261, 3.8242523617302866]]], [[[1.0538738206396867, 4.2020691895756537, 2.8358074860040285, 4.6333071485375372], [1.0621760489669283, 4.6430643287225424, 1.3849657379881462, 1.5699023478035214], [1.3954532357888711, 3.1072896426215832, 1.285944921779862, 0.69428905011445086]], [[1.7313925922195177, 3.6721161139136265, 4.8488700700475196, 3.3193214079804969], [4.6145643448172988, 0.47767125545394967, 0.12409881746452923, 1.8020128982243298], [1.9895591854332544, 2.0633774888647434, 0.94620405174907873, 1.3927954222837589]]], [[[2.4774764426942353, 2.09286899747759, 4.4961867087211012, 4.1361410668768315], [4.5333644652587983, 1.2380907645389592, 1.1258875331548717, 0.27812572281804804], [4.1766953559098026, 4.5837093836314278, 3.2787464929266323, 4.5225193728200566]], [[2.3170389487586993, 4.304060954940315, 0.19409007968783312, 3.3012069123820877], [3.5642850470545624, 4.3087464929617108, 0.94420035423206428, 2.787874550703016], [4.4498152813979095, 2.1521332983419006, 4.79423110978711, 3.6417000085160112]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[3.6783788621278308, 2.9976188545820768, 0.88679981323972534, 0.40718149686780147], [2.167618054007117, 3.9409015070286748, 1.8064408981996067, 0.040987166484755762], [3.3596892097211959, 3.0550428350675705, 2.7046391105039498, 1.3792946426817592]], [[4.6980275942829142, 0.13911939144368646, 0.56378578373554955, 0.76497077706936689], [3.1384740665406072, 3.8330531374326919, 4.0035870514054457, 2.3862540617057455], [2.1194254701346158, 4.5821177765583272, 1.5626512541563549, 1.708804809554006]]], [[[1.1701382273126602, 3.8241621803587829, 0.96168279462596018, 3.6825425253989628], [4.4069514213445347, 3.3199935337388373, 0.89602321021802889, 3.9351794313276511], [3.7947334491363609, 0.69928014174106046, 2.9887856764217191, 4.8829990841418036]], [[4.1899396380324188, 2.9578851891688944, 2.3964435283773495, 4.0879258164600829], [2.8413329450538014, 0.11318025307856898, 0.25928799821240439, 3.4650228525241151], [0.51993419830537202, 1.260519227944882, 4.8066000027933597, 4.8177147377827607]]], [[[1.757395849231804, 0.62963600175876266, 2.5609634877578511, 0.054419442014202991], [3.5932417304999391, 1.1980181788253037, 0.75449941759979011, 1.1228778931970349], [2.7235641083288065, 2.5546131233462623, 3.0390999398147853, 4.9590856442580433]], [[0.17582491401253453, 0.77408236718642875, 2.0858943944833186, 1.3333373103048893], [3.276908395823638, 3.7823215992325134, 2.9612996275278762, 1.454004784574541], [2.9488770287829724, 3.1608025237899908, 2.0600376592141023, 1.7760119682546707]]]]))
      arg0.expand()
      arg1=Data(numarray.array([[[[4.8437845810534279, 1.5715362326496751, 1.4386538611494084, 3.6536744605495635], [4.8643590599846815, 3.3734211806014063, 4.6310454957024376, 4.1276942249253539], [2.4321727066451562, 3.8054321412424859, 2.9420600579406244, 4.7934022110342882]], [[0.84033026583373716, 2.9736079150205881, 0.70739031432168253, 3.1059298047737425], [3.1346906018532916, 4.2449852544694702, 3.7907856703555876, 0.97420374473699634], [4.9803116354394366, 4.174148843391106, 4.7549805410665433, 2.5670271743224236]]], [[[3.9957601236819764, 2.5472136139352162, 2.5500266848181412, 1.3101848629572359], [3.078468241243141, 4.4889782447519204, 3.1276462024401113, 0.23175862249726042], [3.3127872007180952, 3.9400824554022535, 1.875740223174623, 0.095601376668153992]], [[4.142824967642726, 0.57774102988950526, 0.94749534311817218, 3.8539940813540836], [3.9956653155085493, 0.89605336362717214, 1.4581185369348182, 4.8714132059709403], [3.5125753696443467, 1.5236927683896921, 3.10002975595309, 2.4105164887910409]]], [[[1.6945896343889169, 4.2045644498304906, 3.751465142175324, 2.6103338128114233], [0.76438975649267471, 0.68163078289497048, 4.6930818585424801, 0.6851962518968453], [0.5517992852642819, 3.1471227359809362, 0.74081474539848047, 3.1688796558443664]], [[0.4401070583813555, 0.98338040258547355, 2.1636006225981435, 1.980221387208823], [3.3066636712819748, 3.4046016644200638, 3.9786707005142175, 3.4748482526793016], [2.5881170748386446, 0.29032271323941605, 4.2599655418490325, 0.11584659317393138]]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[[3.5269262146260809, 0.88975694543990891, 0.62366012397079007, 1.900217985293986], [0.061312700118894461, 4.8433943404324946, 4.9295191010850941, 1.2319515886268293], [3.2854875450450765, 1.3407051227989604, 1.1478059159462932, 3.9580673281004386]], [[3.9419594371892015, 1.5860875022975038, 2.4887881941345813, 3.0133539159818987], [3.2674500418015882, 2.629285704252792, 2.4289846330278468, 2.5821532019157161], [4.8242650351135081, 1.0917355098454273, 2.2633612512435834, 4.9219680944233479]]], [[[0.16658897873599804, 0.65623610488601058, 2.4047870125122102, 0.33726524899786009], [0.91215381398810447, 0.22823238952032532, 1.2714026112147603, 1.2074506875347299], [3.9499868920734644, 1.0464721937927419, 1.1078566577586468, 1.229229207588449]], [[4.2473896981285106, 2.7976195315915495, 2.074467250540494, 4.0448352838338542], [1.7068318924081152, 3.9799229093316355, 3.6298271008316725, 0.50900036396903503], [1.8771884668624439, 3.7101424788114756, 2.9165429744283342, 1.8868993410808803]]], [[[4.9493819596171589, 2.2920620380272987, 1.0446028702438328, 2.4180263121587595], [2.871849913114692, 3.8445810081970038, 3.5112345501990982, 2.8804703923092041], [1.6150686584666465, 1.7809804307403305, 2.7033607425281141, 3.057473069363311]], [[1.9529102633192408, 4.0920796406110744, 1.5783707442983108, 4.0881574066074622], [4.4763491941003108, 0.30874540139038137, 0.17419439879595935, 2.6866005326812123], [2.4867015852038263, 2.6875314195153561, 4.1334170413838578, 2.0017696332697636]]]]))
      res=arg0**arg1
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[[[3.3321267943905228, 0.41760408250499198, 6.7244404870333492, 133.92776018404052], [1.3305099294837668, 198.13952593196277, 34.242769943555409, 1.4178821744525116e-05], [31.238048943885595, 56.843972440626807, 8.5203021976157505, 2088.3044949836849]], [[2.8862148361126372, 0.11470542532130426, 0.55286871308828101, 33.220305721512418], [14.872437744746906, 234.4678872075952, 35.873094843616855, 4.048510173322291], [0.74735886704781784, 54.560885335824217, 1434.8528163967158, 31.290521954752581]]], [[[1.2332690831491147, 38.734142717688115, 14.267168105058111, 7.4548760680055493], [1.2040516202508778, 984.62712385386646, 2.7693078974816796, 1.1101845342919774], [3.0158584274528328, 87.101301612264322, 1.6027758441930624, 0.96571957826986277]], [[9.7192120532873059, 2.120192948738747, 4.4631473505860679, 101.88750911521464], [450.44734072337877, 0.51580144888824919, 0.047709602884676391, 17.615800700038633], [11.204848755336414, 3.0152357399427259, 0.8424655988769878, 2.2225051869202348]]], [[[4.6524795361703895, 22.314162863175945, 281.26958682972196, 40.692996489834066], [3.175127797741379, 1.1567058933568559, 1.7444972872696267, 0.41609847472895994], [2.2007722179430913, 120.48453036886261, 2.4101494393990563, 119.34980950002986]], [[1.4474705494095539, 4.20091224298932, 0.028808694592014881, 10.643558811257895], [66.863203038579073, 144.44824714485787, 0.79577171804004065, 35.257936901068859], [47.641448443842272, 1.2492215851193771, 794.03443628342472, 1.1615159434922919]]]])+(1.-msk_ref)*numarray.array([[[[98.861817660141156, 2.6559208221055575, 0.92781396036543273, 0.18134776403563416], [1.0485762339671856, 766.83912983462164, 18.450902621497409, 0.019536617390137269], [53.598070172115833, 4.4695642433437648, 3.1331243962854844, 3.570853264137142]], [[445.31148466400282, 0.043786263662659489, 0.2402015257667334, 0.44604711786020446], [41.976191127206313, 34.222056607798834, 29.062972669366072, 9.4476182473392534], [37.476826726267532, 5.2687731136617231, 2.7465017852370899, 13.97348884693089]]], [[[1.0265203422028608, 2.4114671706649919, 0.91032234697095948, 1.5521795913087899], [3.8685941748341177, 1.3150443420172147, 0.86971824763970229, 5.2286592791645532], [193.98066604398645, 0.68775189468285081, 3.3634118522281757, 7.0235024174551812]], [[439.29762675635328, 20.779089784257721, 6.1291425833274449, 297.46024759074629], [5.9440989475798602, 0.00017142737502985481, 0.0074495754381368549, 1.8823943167863619], [0.29294195936829015, 2.3607656512482755, 97.411398228320209, 19.429086710146027]]], [[[16.291203266933032, 0.34633851471100841, 2.6706646006903898, 0.00087704143398615513], [39.379814805212682, 2.0028984419197839, 0.37190475745362245, 1.3963084534300367], [5.0440235274127616, 5.3142025232569576, 20.185236066341929, 133.71240214436162]], [[0.033551333964232759, 0.35067779097829088, 3.1912560565676436, 3.2417126605753483], [202.95427738158952, 1.5079268192195761, 1.208174276544064, 2.7336912367481814], [14.719598594574739, 22.040483514277231, 19.832475844911905, 3.1574261676387616]]]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_pow_overloaded_Symbol_rank0_taggedData_rank0(self):
      arg0=Symbol(shape=())
      arg1=Data(4.65477896754,self.functionspace)
      arg1.setTaggedValue(1,3.36988343843)
      res=arg0**arg1
      s0=numarray.array(0.317381592263)
      sub=res.substitute({arg0:s0})
      ref=Data(0.00478600492549,self.functionspace)
      ref.setTaggedValue(1,0.0209116615842)
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_pow_overloaded_Symbol_rank0_taggedData_rank1(self):
      arg0=Symbol(shape=())
      arg1=Data(numarray.array([0.69315572224017752, 2.7333717476088184]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([4.2022862145916609, 3.9020914957330768]))
      res=arg0**arg1
      s0=numarray.array(4.17118475338)
      sub=res.substitute({arg0:s0})
      ref=Data(numarray.array([2.6911404908122494, 49.590626192230708]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([404.11748075379563, 263.21402893239576]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_pow_overloaded_Symbol_rank0_taggedData_rank2(self):
      arg0=Symbol(shape=())
      arg1=Data(numarray.array([[4.6259359281665624, 3.0143973938587245, 1.3792767477593184, 4.8327526211082477, 0.79457161900478102], [3.3601754089748557, 0.4879087713845261, 0.36716830962188074, 3.0505909148744546, 1.0888487044447726], [0.92303676169212312, 2.0600110807479561, 3.5266767887519079, 0.42293318729913754, 3.6875763709098623], [0.5723282892778736, 1.7623530223825936, 0.98966709307246969, 4.2560610852463165, 1.2400354692705746]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[3.6565921773783683, 0.38872713403930653, 3.8064030475853641, 0.43344890716953099, 2.5833714859222687], [1.4972595588951054, 1.1180260225944179, 4.5732741436616449, 0.1793782382062844, 3.0177153207792888], [1.8965829548720592, 1.8424355263337335, 2.5587897209052204, 1.5906794977081009, 1.4615916395499238], [0.71761196868077026, 2.6383825089347113, 2.8946058241228991, 3.0029337617613083, 2.4681682741040514]]))
      res=arg0**arg1
      s0=numarray.array(3.78911380539)
      sub=res.substitute({arg0:s0})
      ref=Data(numarray.array([[474.54576100129918, 55.455213634386546, 6.2800561613170709, 625.07098749106751, 2.8819709361492007], [87.899819404165854, 1.9154622342205596, 1.6308750578366829, 58.194467322694223, 4.2652055932690622], [3.4198851268423875, 15.552276485592849, 109.72745330929344, 1.7566400174321044, 135.95706034622597], [2.1434505229272252, 10.46134621174647, 3.7373147400874354, 289.92894558355022, 5.2168362575887093]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[130.45966026746274, 1.6783915424017426, 159.27494799132256, 1.7814207714482977, 31.23040865459873], [7.3488777995139714, 4.4342497183982008, 442.39608324254181, 1.2699220507588034, 55.700863562089587], [12.50963518488054, 11.639071031639558, 30.224295769379719, 8.3227716202419728, 7.0078660426212629], [2.6011508641075634, 33.604977969281613, 47.27575241020272, 54.614786459824749, 26.787258685624245]]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_pow_overloaded_Symbol_rank0_taggedData_rank3(self):
      arg0=Symbol(shape=())
      arg1=Data(numarray.array([[[1.8098243936930547, 1.4926222202012394], [1.711854900562608, 2.0543349511993045]], [[1.1957677916530671, 3.5268985798570611], [4.0074424624589122, 2.9870116085078529]], [[3.5076682404065038, 4.6792965532537565], [1.2301209356964933, 1.9587806242672154]], [[1.1440226674638707, 4.1318959390611036], [2.0387033697563512, 2.280870862919322]], [[4.2533366277907287, 1.9232652696624144], [0.66929615214251414, 2.8006686894602888]], [[2.3818424983996693, 1.5369180525352804], [3.7304588292584651, 2.9567207153905066]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[1.2362008114807228, 0.90264820476560104], [1.5254197386463493, 1.6634078356881092]], [[3.4486654715991336, 0.21880742770814512], [0.029372782375211341, 3.0779650437104253]], [[0.35644093125037318, 1.8648347231660989], [0.84621358397647595, 3.8154085718745732]], [[4.307553559787233, 1.4362435906291338], [1.2642327938351516, 4.1344024743653911]], [[4.0243140195992853, 3.1108685002123639], [0.20878693482005381, 4.2487319103855796]], [[2.7841582054974854, 0.19407759815247097], [2.1605844909387923, 1.5760394439512817]]]))
      res=arg0**arg1
      s0=numarray.array(2.88409019217)
      sub=res.substitute({arg0:s0})
      ref=Data(numarray.array([[[6.8004118536448974, 4.8598113677717043], [6.130111628562025, 8.8107369042588299]], [[3.548654776288688, 41.918382501370637], [69.736307681047379, 23.662015694702237]], [[41.073185835036938, 142.07503395024588], [3.6801583151427315, 7.9626274767630312]], [[3.3593908694917407, 79.562541628923285], [8.6660575230171144, 11.200070450943738]], [[90.484134847465029, 7.6686518422882006], [2.031805562636873, 19.423717296949746]], [[12.464320256149461, 5.0932604734533271], [52.004871781876915, 22.91488381298398]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[3.7039345028692576, 2.601513904741354], [5.0316052420210404, 5.8234762019787123]], [[38.58483034666704, 1.2608207583305395], [1.0316009644224908, 26.055002675180379]], [[1.4586999849578357, 7.2084261488555175], [2.4505621827909221, 56.901231039967335]], [[95.832475362991758, 4.578094412205262], [3.8155597430518786, 79.774056535612061]], [[70.993733263725332, 26.97907173425941], [1.247509424362266, 90.04388561256269]], [[19.086987098565594, 1.2282235218251325], [9.8602507720014092, 5.3087475394439361]]]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_pow_overloaded_Symbol_rank0_taggedData_rank4(self):
      arg0=Symbol(shape=())
      arg1=Data(numarray.array([[[[1.3346605136955221, 3.5472793723723375, 3.1358961706680035, 0.33786091871554336], [4.8226796986710605, 0.43982467147196058, 0.082956170230268522, 0.34457483268841538], [3.8920260753235287, 1.360121214883441, 1.9811415206892882, 3.9055237354737455]], [[3.8732914688164781, 3.9211979417698268, 4.0714809853839951, 4.8757043397698814], [2.5640840701604612, 1.3612959193812593, 0.9138557382521928, 3.7969909983421268], [1.5795766537060372, 4.3740447365754065, 1.5661695440868157, 3.8978164856262763]]], [[[0.76893651637798022, 0.97823295551311173, 1.5884011904820876, 1.7503375764322524], [4.2618272764204415, 4.8004237318821952, 2.0247093818359065, 1.9312351048047933], [0.17162406879871164, 1.2033899578985241, 3.5488417144857216, 3.859493434018308]], [[2.9054106356400866, 0.56636929542949699, 0.97121406714668923, 0.80642540266171059], [0.78666965574772318, 3.9596175360646324, 0.83459639801642338, 2.6504788310271339], [3.1615336518886861, 1.8079817031279914, 3.229914219501222, 0.78411549533597713]]], [[[1.6500767271702674, 3.6898528033048472, 4.5294849507020993, 0.5407973229336287], [3.0842525297233738, 3.9043689807377455, 4.3070432612440896, 1.5797464815651703], [0.93632040846302067, 1.460113516447904, 3.2827935993516557, 2.4567471688422775]], [[4.947381060922778, 1.8936748319177423, 0.11025475467579147, 1.6098147086472956], [0.46062017638697078, 2.973523557399921, 1.8820665915361474, 0.86755476707673429], [1.0929782152253598, 1.1853564095345503, 3.816067859184507, 4.671814380766806]]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[[0.76349254794982213, 2.0311489905533588, 0.059975962982779248, 1.0955577548640327], [2.339029408353126, 4.2970029550928173, 3.2861535339093448, 1.8199709362905272], [1.0745872523369768, 2.1244704098346703, 1.0899550136420875, 2.4777043438801338]], [[2.5328115472592589, 0.66121345005295551, 4.2295479417790833, 0.74157832662428591], [4.9380135987222928, 0.092051712722764481, 0.81091639918377478, 0.44777255355952889], [4.022432222285703, 4.5956435445480039, 1.47927802345139, 4.5835228455919799]]], [[[0.88624640324640092, 1.9629670185506318, 3.4758123483294994, 2.9389980561353624], [2.3519770542343466, 2.9399392793719334, 1.8693847146102984, 0.77578406680159939], [0.5563526965789799, 1.956090861836008, 1.040544191482826, 3.7342346832531068]], [[4.6247056432963829, 0.98827089528000178, 4.882146918972353, 3.1377851753221329], [1.2922634333409078, 1.5052898946474578, 3.4246959167969884, 3.0283044204050351], [1.0665610587669303, 3.1689467015420578, 2.8634250696396157, 2.2871694198605996]]], [[[4.679760564634619, 0.76380709402294256, 1.78973567261855, 4.9884262601539682], [2.5860232714887106, 4.6489668925054861, 4.328380862176731, 2.3879746771229686], [4.5764010227355296, 4.9181527611755733, 3.5172119060753255, 2.4459995269297266]], [[2.9897876093805928, 3.57384468656055, 2.3041363920519009, 3.2079152271664602], [0.40491938543444617, 1.2808718239123225, 0.81593586791822448, 2.5139644574855988], [0.33153618176738103, 2.420114377485524, 0.29890270126537893, 3.72864427016663]]]]))
      res=arg0**arg1
      s0=numarray.array(1.23644356327)
      sub=res.substitute({arg0:s0})
      ref=Data(numarray.array([[[[1.3274598547988328, 2.1230879533066025, 1.945579709035385, 1.0743408590419603], [2.7830891350867271, 1.0978437413032103, 1.0177624572022288, 1.075872838192123], [2.284255984714143, 1.3346525428132947, 1.5226859097141436, 2.290809148238715]], [[2.2751913201804537, 2.2984426282820323, 2.3729353262555835, 2.8145866599509533], [1.7232276293759814, 1.3349853376022673, 1.2140428377502319, 2.2386437137109354], [1.3982871585783294, 2.5303144938323086, 1.3943139688124093, 2.2870649510106107]]], [[[1.177270288590557, 1.2307445916289208, 1.400908481803397, 1.4498936153476834], [2.4707621378463323, 2.7699739689100609, 1.536831190157413, 1.506642590539186], [1.0370968807978476, 1.2909862735221933, 2.1237920651656217, 2.26853820673636]], [[1.8526960937642902, 1.1277288535536856, 1.2289125372581611, 1.1866747331662479], [1.1817094901532774, 2.3172610771140434, 1.1937911009140534, 1.755116809680233], [1.9561950025077859, 1.4677410619402005, 1.9847923433065411, 1.1810690674617672]]], [[[1.4193668701932347, 2.1883137641116539, 2.6151830683151629, 1.1216248266069266], [1.9243710370840554, 2.2902477759504736, 2.4945871977829368, 1.3983375595209169], [1.2198450729591455, 1.3632796075881704, 2.0071932860431185, 1.6844144008026058]], [[2.8577312002833888, 1.4946797418222595, 1.0236763139889689, 1.4072898026382019], [1.1026999158181219, 1.8796736207446831, 1.491001797183382, 1.2021710121801563], [1.2610854058299701, 1.2860545639699419, 2.2477260361060201, 2.6953875069967124]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[1.1759108285824575, 1.5389330705079589, 1.0128106100193772, 1.2617760130624627], [1.6428518221828257, 2.4892770265521551, 2.0086251455283315, 1.4714806093619834], [1.2561726273272811, 1.5697177482779421, 1.2602765002888874, 1.6919232507975897]], [[1.7118280026247339, 1.1506596542008296, 2.4538929479861005, 1.1704543005807737], [2.8520552680037943, 1.0197290743268086, 1.1878063696364349, 1.0996972038733086], [2.3483610388829304, 2.6521630352173187, 1.368835983944392, 2.6453491483072296]]], [[[1.2069496138133184, 1.5168237042261818, 2.0911277404137345, 1.8659503460503846], [1.6473725836337032, 1.8663231337977275, 1.4869940262776105, 1.1789824810200347], [1.1253339449378481, 1.5146116817433348, 1.2471291500561885, 2.2090241339200261]], [[2.6685724388266525, 1.2333694190298921, 2.818437867043579, 1.9463598887346043], [1.3155685262531154, 1.3764138670262922, 2.0685639042330721, 1.9016554577797551], [1.2540345932110237, 1.9592751837577622, 1.8362600924437522, 1.624868561050258]]], [[[2.6999370902551787, 1.1759893338289511, 1.4620681932316655, 2.8827347864031245], [1.7312703039776991, 2.6823488562809557, 2.505909990725979, 1.6600068860668009], [2.6413536448357173, 2.8400584515067657, 2.1095826183604078, 1.6805765116460227]], [[1.8861732189071827, 2.1350921572496513, 1.630730351721402, 1.9755468536831755], [1.0897406717411389, 1.312391658123951, 1.1890724471176723, 1.7049942125433191], [1.0728996776978683, 1.6713690044477902, 1.0654943390785434, 2.2064046709260339]]]]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_pow_overloaded_Symbol_rank1_taggedData_rank0(self):
      arg0=Symbol(shape=(2,))
      arg1=Data(1.04775739262,self.functionspace)
      arg1.setTaggedValue(1,0.2572415351)
      res=arg0**arg1
      s0=numarray.array([0.53642582183577836, 2.7891902616735034])
      sub=res.substitute({arg0:s0})
      ref=Data(numarray.array([0.52070501756673182, 2.9292269061822047]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([0.85195891861447759, 1.3019535215987847]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_pow_overloaded_Symbol_rank1_taggedData_rank1(self):
      arg0=Symbol(shape=(2,))
      arg1=Data(numarray.array([4.1277661252323785, 2.4836741733783012]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([0.038521639582654491, 0.97388637006947631]))
      res=arg0**arg1
      s0=numarray.array([1.7632566641756298, 0.21763294517021159])
      sub=res.substitute({arg0:s0})
      ref=Data(numarray.array([10.392808310543014, 0.022652899119631507]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([1.0220884443609985, 0.22647436621927075]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_pow_overloaded_Symbol_rank2_taggedData_rank0(self):
      arg0=Symbol(shape=(4, 5))
      arg1=Data(0.412010546129,self.functionspace)
      arg1.setTaggedValue(1,0.770063562017)
      res=arg0**arg1
      s0=numarray.array([[3.9173789764326328, 3.069397472450063, 2.4971315062208164, 0.096635498545861093, 0.71633817290693946], [1.0369762894074914, 0.096594402257553905, 2.7920465254103211, 1.3802983853552735, 2.724556644140574], [3.9127349499944573, 2.2454052023404683, 1.8217562523273612, 2.3019401569243367, 2.7544182648443085], [1.8399846889819911, 4.8388234463073569, 0.88556392763527225, 0.6170810535108987, 2.0716709731271825]])
      sub=res.substitute({arg0:s0})
      ref=Data(numarray.array([[1.7551750477100849, 1.587343897004065, 1.4579749225752394, 0.3818261021513909, 0.87157974138784977], [1.0150721740926474, 0.38175919166879746, 1.5265985126901356, 1.1420111493690255, 1.5112853671034363], [1.7543174585224079, 1.3955234263767262, 1.2803383021131078, 1.4098943128575849, 1.5180880272265036], [1.2856011342778304, 1.9147849671418393, 0.95116103217634007, 0.81963176341670518, 1.3499805075916789]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[2.8618330506998428, 2.3717115527639385, 2.0232760983356788, 0.1653829543339555, 0.77344907439687816], [1.0283548450202671, 0.165328791115289, 2.2048994287073258, 1.2817050383829482, 2.1637419551592614], [2.8592201122445076, 1.8643148842033468, 1.5870626249145658, 1.9003579755967439, 2.1819810983661116], [1.5992773007834433, 3.3673879325935205, 0.91065941479685564, 0.68952525443484614, 1.752213844313306]]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_pow_overloaded_Symbol_rank2_taggedData_rank2(self):
      arg0=Symbol(shape=(4, 5))
      arg1=Data(numarray.array([[4.4874253255108743, 1.6822401699549085, 1.9365163909416403, 2.0605999823499852, 1.6118177180473294], [3.3971563597230587, 0.53810297061804035, 2.1995919752908648, 0.88011385578693535, 4.6373539681678979], [2.8526705771970926, 2.3417366257007033, 3.1213933738109452, 1.6444747846809009, 2.6566682992093105], [2.4424072000570343, 0.78627134772500196, 1.0993718490226783, 4.2060166414298994, 3.8510650981120542]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[4.6062083448558351, 2.7568492364178807, 0.60724104557131786, 4.6453408602004993, 3.3154906420445918], [0.013325862679250709, 0.9824972004476189, 4.6212871573555816, 4.3292948108624136, 0.90646848767723032], [4.6245688113556636, 1.8982790609271212, 2.7313470194491987, 3.7935005308289207, 0.065481431189768152], [4.6847611871428407, 4.130028552337123, 0.7298492922815778, 3.3037100511396216, 1.6079688286695426]]))
      res=arg0**arg1
      s0=numarray.array([[4.0132939832762622, 2.9560460383888878, 3.667879218143792, 3.0293230089344116, 3.0392165788843233], [0.68406737035103404, 4.0148516254484274, 1.6267020144603388, 0.13133860608425243, 1.4327710890222065], [4.2874876899850811, 0.87573186212283938, 1.8898874216427242, 2.3750071881067636, 0.58776643087187164], [0.76374793164629329, 2.8497316167356592, 0.1153544507157519, 1.555612629077086, 4.0606370886981988]])
      sub=res.substitute({arg0:s0})
      ref=Data(numarray.array([[510.69964349255838, 6.1922613570044822, 12.387935894892031, 9.81433099749386, 5.9996205009395176], [0.27529929264126868, 2.1126927948351319, 2.9160259935895163, 0.16752704894349305, 5.2996494972119121], [63.601384856349881, 0.73290623081195649, 7.2923128859959805, 4.1473577796468861, 0.24369894641914477], [0.51774552312935107, 2.2782392157433451, 0.093073699181215663, 6.4141739755155776, 220.66618871273477]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[602.35320094513906, 19.846311093184397, 2.2015876004499244, 172.19252993606634, 39.86499662528076], [0.9949529642796382, 3.9183533172861931, 9.4735983343849774, 0.0001524968257967741, 1.3853814122628199], [838.81415318227687, 0.77732809167897254, 5.689085567200328, 26.612465119919495, 0.96579999449476495], [0.28291040717222043, 75.570682357818882, 0.20674091697813707, 4.3051350846035206, 9.5192003167345156]]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_pow_overloaded_Symbol_rank3_taggedData_rank0(self):
      arg0=Symbol(shape=(6, 2, 2))
      arg1=Data(1.73149105415,self.functionspace)
      arg1.setTaggedValue(1,1.65045033032)
      res=arg0**arg1
      s0=numarray.array([[[2.7209407330256021, 2.6059224053203676], [4.1280136644186269, 1.8664956454482668]], [[1.8012841705649192, 4.0040961027792745], [2.9271350302835586, 0.41601331834497157]], [[0.98307840342340358, 3.3802880581864709], [1.4573349433065892, 4.8724821738976285]], [[2.4021059371424913, 3.2456582990920952], [2.683075116177088, 1.2193585736264103]], [[4.7393493053994318, 1.2189320403878352], [2.377174078421572, 2.7496133511820271]], [[2.0203546703851241, 2.3997591787254806], [0.077212101610221115, 0.085181644589896396]]])
      sub=res.substitute({arg0:s0})
      ref=Data(numarray.array([[[5.6586417803255333, 5.2508979905177755], [11.645288486588937, 2.9463259653241916]], [[2.77037365871736, 11.046663854913032], [6.4215735514266177, 0.21902192105366]], [[0.97088201815970854, 8.2390780860803741], [1.9195595975113799, 15.517916862490157]], [[4.5602842575446276, 7.6792042073648981], [5.5229856295952526, 1.4097295762001381]], [[14.791115102544792, 1.4088758434550015], [4.4786408076972863, 5.7622871175953536]], [[3.3794434584566835, 4.5525728586033951], [0.011858702523086262, 0.014057357954227769]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[5.2177378176391045, 4.8587411421683884], [10.381261840607891, 2.8010223256627222]], [[2.6413489512697441, 9.8719679934920688], [5.8862757400502232, 0.23515564536575362]], [[0.97222574849841148, 7.4646908698141292], [1.8618583207904824, 13.6488996896421]], [[4.2476473232804155, 6.9803928975438883], [5.0984386563263389, 1.3872529512900478]], [[13.038876823537464, 1.3864521400718963], [4.1751297678879267, 5.3087955878155464]], [[3.192222170956418, 4.2408005001299545], [0.014594188701106559, 0.017162843268202201]]]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_pow_overloaded_Symbol_rank3_taggedData_rank3(self):
      arg0=Symbol(shape=(6, 2, 2))
      arg1=Data(numarray.array([[[4.1076049791736216, 4.5619519555442256], [4.6365835265067643, 3.4945050123098143]], [[1.840078461829147, 3.9295523482141692], [1.4612801318000832, 1.6334466170507507]], [[3.8714032298478136, 2.9729692151151488], [2.3850944812454968, 3.7930135336192938]], [[2.7856753618943961, 2.9552079185550415], [1.4503166796516564, 2.3366906988853002]], [[1.5648310291063126, 4.7212840830695502], [3.4765673602705278, 2.4279654660486445]], [[4.5809660151898166, 0.32086037770621822], [4.3197687283770438, 4.0781547961024822]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[2.3342346214845162, 4.0160326737827834], [3.2067238982466453, 1.9337147745723908]], [[1.2605824073557412, 1.7010311333387078], [1.8837220844106868, 3.921191101005038]], [[4.8202630637926251, 2.1811602991547323], [0.49459956221592583, 4.4520862357928035]], [[0.028149987701444695, 4.7934272092743724], [0.53944735781601483, 2.1635431156213252]], [[3.4764990844114387, 4.8160649191538809], [1.1592236523741395, 0.52644741790829963]], [[0.13218133872801044, 3.8984979532443913], [2.2076287980136411, 3.8478056070542137]]]))
      res=arg0**arg1
      s0=numarray.array([[[3.391807494489671, 0.79791379851562305], [3.6150622714083602, 3.7352656072729129]], [[3.2496569153753767, 4.4529478263265041], [3.9333596516493938, 4.1187596223216936]], [[3.4475494953389334, 2.034250318688442], [2.234449915784805, 3.5670511464609516]], [[2.298010590827833, 2.2800929571031614], [1.1224979046023031, 1.4361469386658665]], [[0.91861020326599652, 0.28577349919915324], [2.0041948655733193, 4.41442281937851]], [[2.8870766608268679, 3.04038908209579], [0.36532091058136562, 4.1012870080209876]]])
      sub=res.substitute({arg0:s0})
      ref=Data(numarray.array([[[150.93912205361266, 0.35704904079568928], [387.03518109749217, 99.995466814753556]], [[8.7462358171058092, 353.91154169360516], [7.3980339035360672, 10.096902728764928]], [[120.48137746170251, 8.2580358767054296], [6.8046364894732276, 124.42761830463753]], [[10.153351830851953, 11.424158486875251], [1.1824558228230784, 2.3298349363148567]], [[0.87560182759731042, 0.0027022473738616969], [11.21281245587079, 36.790155838681379]], [[128.63048185844266, 1.4287387839645116], [0.012907885875672927, 315.92449460410018]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[17.304173493989261, 0.403879671293429], [61.620216267766253, 12.785170357387809]], [[4.4178743890176486, 12.687316486616231], [13.193786086258736, 257.4048463300166]], [[389.88996491271422, 4.7062979401040756], [1.4883313784065142, 287.6926688948318]], [[1.0236984720872981, 51.977993170003813], [1.0643205714826451, 2.1882984245896817]], [[0.74443344495709018, 0.0023997522597884484], [2.2388032365446473, 2.185205144814983]], [[1.1504400614693218, 76.330544200390605], [0.10827986399122753, 228.24308938080856]]]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_pow_overloaded_Symbol_rank4_taggedData_rank0(self):
      arg0=Symbol(shape=(3, 2, 3, 4))
      arg1=Data(1.51289274199,self.functionspace)
      arg1.setTaggedValue(1,2.7275614227)
      res=arg0**arg1
      s0=numarray.array([[[[3.0829423550663098, 2.7779717609064956, 0.039211518792650134, 0.74202481609281923], [0.20563685979442486, 2.9884030572235711, 2.6945297293460637, 1.9850273734371318], [1.8152009773313742, 4.0357127396832491, 0.81850596827795563, 2.7705886448248185]], [[4.7214341423083805, 0.30346514181629242, 1.7518794897875192, 1.9551407793738775], [0.70344731771458369, 2.1099089789697727, 3.0770669806992643, 0.9982610342649475], [4.5951904623602573, 3.9576194348954532, 0.820565471248353, 1.2918900986309372]]], [[[3.7278675372018557, 3.2490810524326648, 0.765732576095696, 1.2293499601713287], [2.6752307163595357, 0.87767222923904631, 3.946636714057441, 0.47962983121944269], [4.5462296626509149, 2.4480879665073059, 3.8649409755813671, 2.7216425828587623]], [[2.7407290366205919, 0.76588327270205858, 2.7467331389564102, 4.7851549369225825], [2.5024278383434209, 4.9309588860819433, 3.2371478547877772, 1.9851588080568587], [4.209861654422645, 3.9279700533102195, 2.3576015534984749, 3.1486503892224142]]], [[[2.6724300811349293, 2.9221189217832002, 3.6974184188476014, 0.81389649988207691], [2.5503641850148173, 3.1441366102362363, 1.0910785740133326, 1.2581287707864433], [0.84348102424780935, 1.1473767554459879, 3.5001170437421529, 3.6709848481574046]], [[3.0922201442827943, 0.60755909488006621, 4.6550348750995205, 2.0252914605963377], [2.6110870703358438, 1.6417490523332474, 1.9277276373075587, 4.2103529202973489], [1.5392449766728198, 1.7510709543039815, 1.0869762132685941, 4.0871289181090074]]]])
      sub=res.substitute({arg0:s0})
      ref=Data(numarray.array([[[[5.4922742027317799, 4.6915095896434753, 0.0074470752409480159, 0.63673244951726671], [0.091368276518189087, 5.2394834469007954, 4.4799645292964962, 2.8215566659219982], [2.4644801506957004, 8.2545298440483421, 0.73860354693838959, 4.6726585030562164]], [[10.46650211886679, 0.16462135827023866, 2.3355855485497998, 2.7575356413531442], [0.5873240205768272, 3.0943984080711386, 5.4764464913867155, 0.99737030493203527], [10.0460233577625, 8.014078791093139, 0.74141700295535784, 1.4732361166844672]]], [[[7.3207976106497723, 5.9461904481200074, 0.66776110841899372, 1.3666882503394204], [4.4315098771258752, 0.82085780892997418, 7.9804564195920484, 0.32903741605755854], [9.884529146664244, 3.874838223083882, 7.7318635354266823, 4.5483387450532691]], [[4.5966818511501844, 0.66795993641106544, 4.6119251302001603, 10.680946262991833], [4.0056990454250059, 11.177144296030901, 5.9131813427076763, 2.8218393149935577], [8.7993432702962053, 7.9234205775006554, 3.6602249612101927, 5.6703367554936248]]], [[[4.4244930862050609, 5.0646676588426374, 7.2305223128334202, 0.73231977687276417], [4.1223562337378672, 5.6580433243356811, 1.1409644399894523, 1.4153810304942227], [0.77296509575939021, 1.2312006770462307, 6.6548545401535524, 7.1524607658655359]], [[5.5172992162719581, 0.47053577909984318, 10.244617941958552, 2.908591710271681], [4.2717517056006171, 2.1170740854355188, 2.6992526162732551, 8.8008968021731064], [1.9203329236178726, 2.3339549488184335, 1.1344805019380191, 8.4141522060691614]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[21.56170867763397, 16.229117410083362, 0.00014569658521260915, 0.44315770893524631], [0.01337952471686015, 19.805670267811688, 14.933746274440303, 6.4889797442706927], [5.0843222482793493, 44.945341809764585, 0.57911092067480396, 16.111740195508123]], [[68.956953230426066, 0.038674078526695757, 4.6150109830470907, 6.2259549372242695], [0.38310228780806727, 7.6638891472072883, 21.449813163977922, 0.9952639857341341], [64.043273544573623, 42.612598001479611, 0.58309401253009863, 2.0108263756007716]]], [[[36.198747034214158, 24.880455191874052, 0.48285110966131001, 1.7562871356991832], [14.643808400004959, 0.70054416931792762, 42.290827010060646, 0.13478824693195862], [62.199158608155678, 11.496074710498664, 39.945533934020709, 15.347177287113823]], [[15.64251878714907, 0.48311034126472807, 15.736163804756888, 71.525040525484414], [12.20550156646587, 77.627018229691274, 24.63199867240267, 6.4901517212181448], [50.434629483062551, 41.747471207643471, 10.373753370936804, 22.838365024990264]]], [[[14.60203199316563, 18.63028891102709, 35.397966532442659, 0.57025873666285054], [12.853827804781856, 22.749174756036474, 1.2683953465397984, 1.870709358752171], [0.62858771028236105, 1.4549628730546003, 30.480256791415592, 34.711965867884928]], [[21.739154221308418, 0.2568765225030748, 66.343876177409314, 6.8543072418371001], [13.705845942680639, 3.8660053576121167, 5.9907277508904739, 50.450683951189227], [3.2426000068713301, 4.6092037536069368, 1.2554296599580146, 46.524430765087025]]]]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_pow_overloaded_Symbol_rank4_taggedData_rank4(self):
      arg0=Symbol(shape=(3, 2, 3, 4))
      arg1=Data(numarray.array([[[[2.8307007372947415, 4.7001557528011162, 4.062523101652233, 1.4929736801066029], [3.4463802257978688, 2.9217042261272579, 1.5843757270563776, 3.5133564917211286], [2.9507106732440533, 4.6594237212403762, 3.6892405936301995, 3.7664516458688468]], [[3.1116292470933371, 0.87323606501307638, 2.6986378511787663, 1.4559832046715342], [4.3684926293241615, 2.9173472858069043, 0.59799136898996241, 2.0868207731941926], [2.6948455406752077, 0.1556466874360608, 1.4973065429280021, 1.7570095893398783]]], [[[0.50740195407162558, 3.1043562639605273, 1.537102071136617, 4.0440447580361765], [0.43736392703292071, 0.10471422889962825, 1.346940210558623, 4.173709021817694], [2.3368629722716747, 1.7898374164578175, 1.1168302223300897, 1.811251773168238]], [[1.6917965630046721, 2.2793974168280289, 2.3300601183057692, 4.9549551147300832], [1.3344980229763928, 2.3321157308147531, 3.2951771056568147, 4.6567042014166615], [1.1395071193562423, 0.731302788116171, 2.5366459136839103, 4.520458252596848]]], [[[0.20540954537277034, 2.7794626866877321, 1.434872670134359, 0.40911980386178998], [4.3398385019239232, 0.93215581499416489, 0.066958479266484058, 3.1354651053571145], [2.3280536742075384, 1.6831587199346851, 1.5337803946393682, 3.3937120827854819]], [[4.0022905826422086, 0.80161485513342723, 2.9888358488696314, 3.0391744972228771], [0.48779816182565822, 3.4421879700717337, 4.8522182280838173, 2.2085539590870322], [2.1959025600235815, 3.9200726323709292, 1.094548400146774, 2.272319553063451]]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[[0.60498564348641093, 3.9169820651812621, 4.1093138863048013, 1.6683495355225548], [0.65241991087866769, 0.56412794138887168, 4.9308383367454365, 1.1283214430108595], [0.37140807653109709, 0.58692101053503254, 4.4763525632413135, 3.1045814932365072]], [[3.4166404288976282, 4.5300018081386026, 4.5430084955055099, 0.82764386514904587], [4.374267282632414, 4.2101377177339181, 3.9127269458410527, 3.4051544533278539], [1.7367841663305779, 4.1039096968934423, 0.55877602884109567, 4.7793265060104808]]], [[[0.34956855775650103, 1.1588551021008606, 3.1407612573972035, 1.1795931629979293], [0.01449238734386377, 2.9480101688375151, 0.3192335134700367, 2.9568683687105506], [4.890073374444122, 0.32692129150535265, 0.71946469694323101, 0.49939964673599097]], [[0.12139231563548469, 1.6861549972227898, 1.2738995089003222, 1.411478385066568], [0.27647755094401583, 4.695785498972838, 2.9690216149174065, 0.20592427830252583], [0.94206142968111972, 4.1799707089410933, 4.442336056219597, 2.6963529058961724]]], [[[0.52364890016542909, 3.3135340499341486, 3.438264318002056, 1.2481354732757362], [0.58075557910079934, 2.9653928728411203, 2.1392202014974839, 4.6886776861395116], [3.1792376387968186, 1.5165935995227202, 0.78016680721582066, 4.7727793403933987]], [[2.8347619262995107, 4.5534974884954238, 2.645637486486307, 3.4902038431725315], [3.9967048627907324, 2.0811634976344608, 1.4268463621902889, 0.56705530408743243], [4.1087764064068031, 2.3614068946897304, 2.1548942137288369, 4.1251275128266878]]]]))
      res=arg0**arg1
      s0=numarray.array([[[[2.3074332425080248, 4.864101486213368, 1.03321887752215, 0.014041853619900013], [0.41835611481918433, 2.4285199093148959, 1.691052707565305, 0.74804905285392598], [3.8079329153544514, 0.23923569387514901, 1.1754007816191763, 3.3404951733666994]], [[4.5890197006697004, 3.0142935921495448, 4.1785589438496498, 2.0719082938577946], [2.9628388133709866, 1.8638007306994626, 1.703579087923351, 1.8745228629326072], [3.8949965656075642, 3.3875093043515903, 2.2987239492894136, 3.0436982850942731]]], [[[0.59467618336306582, 2.6101616196205408, 2.3334784456742983, 0.51237655037426699], [0.38869679320393785, 3.3861183112043651, 3.9345558940805643, 1.0728613144534545], [0.89795493472214538, 2.642500024678522, 1.0311194308497693, 3.1543413719617934]], [[0.045080553159700158, 3.4963151011414029, 4.964363861817831, 3.1266244960189469], [0.68933456001049764, 3.4641601829691497, 1.4807605250825593, 0.13516279192206973], [3.0340609151781703, 2.1755603705041406, 2.5658807393943288, 2.6256793858762091]]], [[[3.6328322563001101, 3.442585166700002, 3.1862300090190501, 0.89954811757635278], [1.0993864044399091, 4.4745188281214441, 4.861258038238315, 1.8844364057239058], [0.45003778949420137, 2.3751782115018862, 3.2754971037917819, 4.9776124773171881]], [[2.9022734218377706, 4.4186943706067963, 0.74465902091027769, 0.99366783202873166], [0.81661580961165692, 4.8671348787301341, 1.626311177206023, 1.5057864655500486], [2.8658156929182637, 4.7058812538370169, 3.592222401883951, 1.8396482137284957]]]])
      sub=res.substitute({arg0:s0})
      ref=Data(numarray.array([[[[10.663749601706906, 1694.413302779835, 1.141975214893425, 0.0017145630122718414], [0.049625401734341747, 13.361474296440226, 2.2987229993833966, 0.36063794444154729], [51.694707489055446, 0.001275519260588208, 1.815235384639486, 93.952476627189171]], [[114.55843263345636, 2.6208496308790434, 47.416086668750367, 2.8882193716207376], [114.98813540798513, 6.1496327688121672, 1.3751581868474365, 3.7108557164456979], [39.023423649781066, 1.2091331944357226, 3.4774154680453782, 7.0687275994709573]]], [[[0.76819151819155995, 19.655497982674706, 3.6784037225115296, 0.066921537523614849], [0.66147073816705981, 1.1362328729197377, 6.328327775680199, 1.3411582918415146], [0.77761077328753447, 5.6929613763543312, 1.0348177298263213, 8.0103087021296613]], [[0.00528230673503344, 17.342213154695003, 41.821926549901953, 283.84287774169525], [0.60867466379478252, 18.130296390713482, 3.6456729246355604, 8.9672413193902668e-05], [3.5421758428465493, 1.7654959079279755, 10.916615426628919, 78.5533259752372]]], [[[1.3034060773197174, 31.063541806609621, 5.2739813563735733, 0.95761396578064495], [1.5086410657990468, 4.0420062879966645, 1.1116898663912413, 7.2915850617215439], [0.15586371394692936, 4.2890028631721915, 6.1705247339013347, 232.00047246161878]], [[71.123519492385981, 3.2906161674561303, 0.41428752044221462, 0.98087941078905183], [0.90590454082287941, 232.12620243187149, 10.587811112548204, 2.4694488620946711], [10.094216541879673, 433.3127170589072, 4.0538896300545444, 3.9954161798705874]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[1.6583947701429991, 490.88184599277952, 1.1437227203741798, 0.00081144002765838141], [0.56635554133036514, 1.6496127400292844, 13.33539834066241, 0.72069681538071628], [1.643132901185326, 0.43193650963262842, 2.061470716119381, 42.287641740178003]], [[182.33038060612085, 148.1533272438341, 662.71807318433093, 1.8274357946958033], [115.71162216865314, 13.753683931673098, 8.0400269900048684, 8.4964034085150804], [10.606774724398981, 149.47952488385221, 1.592172688995517, 204.33091417747542]]], [[[0.83386467424051225, 3.0398849111287811, 14.315682496057395, 0.45439491163862283], [0.98639868141309095, 36.439068018071012, 1.548498006545491, 1.2311567833899368], [0.59076026663621717, 1.3739334240057166, 1.0222928769434536, 1.774822086585842]], [[0.68644324637031484, 8.2529967176430539, 7.6994606775668091, 4.9979129355460312], [0.90225549686632889, 341.85056513392249, 3.2075478218628564, 0.66225064002948308], [2.845093198054208, 25.765434702692957, 65.7606219181759, 13.502791490784379]]], [[[1.9650420973675413, 60.115395908086398, 53.752637190338291, 0.87622617321691232], [1.0565700657358881, 85.058664239695105, 29.45144700561023, 19.509102583053913], [0.078994365475356293, 3.7134574608247428, 2.5234934590688263, 2121.9142136150099]], [[20.4999586349319, 867.64974324199909, 0.45840130257458123, 0.97807314045497684], [0.44500106234086201, 26.935700519263577, 2.0014979753351412, 1.2612514332070035], [75.636399695304092, 38.75957536713382, 15.730733826681861, 12.361316815165388]]]]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_float_rank0_taggedData_rank0_offset0(self):
      arg0=-0.26757248589
      arg1=Data(-0.845346619976,self.functionspace)
      arg1.setTaggedValue(1,-0.164939544191)
      res=generalTensorProduct(arg0,arg1,offset=0)
      ref=Data(0.22619149654580534,self.functionspace)
      ref.setTaggedValue(1,0.044133283860763033)
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_float_rank0_taggedData_rank1_offset0(self):
      arg0=0.796750749318
      arg1=Data(numarray.array([0.71795366535495631, 0.52653855960302054]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([0.24254790248497127, -0.89703657103420276]))
      res=generalTensorProduct(arg0,arg1,offset=0)
      ref=Data(numarray.array([0.57203012084690563, 0.41951999190833605]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([0.19325022305032208, -0.71471456013682511]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_float_rank0_taggedData_rank2_offset0(self):
      arg0=0.695709993643
      arg1=Data(numarray.array([[0.020860044940730571, -0.029660347286396993, -0.52432778011587056, 0.16323818055966832, 0.23656513789445799], [-0.94714247989983846, 0.88028874793065404, -0.80492047695032132, -0.1705466841006269, 0.26041675138028464], [0.51077512727642538, 0.30844961603752541, 0.92974442192889684, -0.29528156956238738, 0.82263550865498036], [0.64585924254051674, -0.53641015540398373, -0.99798834032979333, 0.30966027448251321, 0.043112098114223008]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[0.64188692087685117, 0.39360124259112728, -0.75019784742320894, -0.526723465119322, -0.39782285568476472], [-0.81062105747380531, 0.41798281693760542, -0.85685874165134712, -0.19118971519642813, -0.84993495899479599], [0.89086613100115342, 0.94117717592473626, 0.23970421209032811, 0.84662298079483556, 0.61042317686862524], [0.43617096051797755, 0.47613540926509823, 0.87963467661658368, 0.52339361553568819, 0.84472192299856874]]))
      res=generalTensorProduct(arg0,arg1,offset=0)
      ref=Data(numarray.array([[0.014512541733110847, -0.020635000022071963, -0.36478007657132311, 0.11356643355948121, 0.16458073058073699], [-0.65893648867024479, 0.61242567922694469, -0.55999121990232459, -0.11865103251150221, 0.18117453644733958], [0.35535136055054534, 0.21459148041268938, 0.6468324858698784, -0.2054303388831788, 0.57231574449696054], [0.4493307295222127, -0.37318590580621014, -0.69431046190674761, 0.21543374759175582, 0.029993517504987622]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[0.44656714564283551, 0.273832317980997, -0.52192013966188244, -0.36644677856984526, -0.27676933639953522], [-0.56395717074207974, 0.29079482291459452, -0.59612518970730988, -0.1330125955439368, -0.59130824491933431], [0.61978447033568274, 0.65478636707964721, 0.16676461586959107, 0.58900406858689369, 0.42467750449888392], [0.30344849616927538, 0.33125216255308548, 0.61197063527719064, 0.36413016893718281, 0.58768148367953776]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_float_rank0_taggedData_rank3_offset0(self):
      arg0=0.484037306122
      arg1=Data(numarray.array([[[0.68265538612757171, -0.1110965724433548], [-0.5662762533652177, 0.78934646910807293]], [[-0.1302879130937733, 0.44955885333630219], [-0.70642464431652807, -0.38736932551572267]], [[0.91760749190540047, -0.47273734671155543], [-0.15302376331735901, -0.70016811030317783]], [[0.45013141661922829, 0.81567106675810264], [-0.59615473801203045, 0.34671300912721348]], [[0.23903112608792654, -0.31114947887937272], [0.62016389414155948, -0.82747459961955983]], [[-0.91511460631251573, -0.32568238555751816], [-0.40329157753955713, -0.82101250044004104]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[0.018775740122862317, -0.11443654923919833], [0.43486736144027782, 0.38480797876112471]], [[0.55181515928391778, 0.11140381764071683], [0.18926828403697682, -0.20016270876144659]], [[0.7280994039969968, 0.073961476761866152], [-0.6697897808718698, 0.030058399297158145]], [[-0.15297116577480252, 0.54959167221419425], [-0.73596162012515909, -0.62944147322810307]], [[-0.130497384390585, -0.074648690607898249], [0.89655273131792357, 0.57515634235572155]], [[-0.53168430120443966, 0.91631417471415899], [-0.19868649938767047, 0.97447626383861796]]]))
      res=generalTensorProduct(arg0,arg1,offset=0)
      ref=Data(numarray.array([[[0.33043067411119004, -0.053774885644922214], [-0.27409883220002995, 0.38207313850436164]], [[-0.063064210474229596, 0.21760325631241403], [-0.34193588181350215, -0.1875012047971118]], [[0.44415625845969386, -0.22882251180574931], [-0.074069210168858174, -0.33890748594401643]], [[0.21788039830146622, 0.39481522583564016], [-0.28856113341949502, 0.16782203093555464]], [[0.11569998235102241, -0.15060795555818454], [0.30018246067470628, -0.40052857608462805]], [[-0.4429496088328424, -0.15764242455680341], [-0.1952081687741318, -0.3974006790058775]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[0.0090881586695260048, -0.055391559015693904], [0.21049202615214219, 0.18626141741397065]], [[0.26709912317733386, 0.053923603782572403], [0.09161291033968233, -0.096886218335068802]], [[0.35242727410008834, 0.035800113968653971], [-0.32420324120158489, 0.014549386622150223]], [[-0.07404375099605047, 0.26602287248590667], [-0.35623288001491671, -0.30467315506309506]], [[-0.06316560239644832, -0.036132751107417413], [0.43396496886387781, 0.27839712655312132]], [[-0.2573550368626093, 0.44353024469048347], [-0.096171677926513446, 0.47168286562874207]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_float_rank0_taggedData_rank4_offset0(self):
      arg0=-0.82612164061
      arg1=Data(numarray.array([[[[0.49137230608321159, 0.21103397397591972, 0.36894695797613597, -0.98934457807391096], [0.72704960548443953, 0.40167275033472238, 0.58725780128843574, -0.10728333413432201], [0.99124949932668827, -0.646519831641438, 0.029197269026953077, 0.030911350424682515]], [[-0.2062470776840899, 0.47074529044667623, 0.39284725161264755, -0.79430925885241277], [-0.39637287434231028, -0.9461043990096667, 0.98357675278498369, 0.09119868886628546], [0.91396857840844747, 0.85432450564711382, -0.35423417818924774, -0.4192775306299914]]], [[[-0.83191415405301505, -0.10956248737146823, 0.25400718228889407, -0.11693553662376077], [-0.0080216603023453015, 0.23885756457584106, -0.34713262645684284, 0.46501360266582159], [-0.29131559484184577, -0.33852545531854772, 0.13787465227116202, -0.25170735763681362]], [[0.28495381018787858, 0.65120424561293389, 0.35994204133054541, 0.9204717883540452], [-0.88451718169770621, 0.30533185395629858, -0.082085559206255709, 0.59340273277123412], [-0.53028926744778127, 0.71911169474982639, -0.92543659627885555, -0.25163796630716662]]], [[[-0.2406854475941016, 0.73809304974413026, 0.68357891676627713, -0.40738060369549856], [0.69230516626747285, 0.61465390677783716, -0.50936848663217682, 0.29742832750319681], [0.36009425257419814, -0.10656686018273454, 0.44342857915480227, -0.18332317751439375]], [[0.80444079297957383, -0.087904217723211442, -0.76307780635792777, 0.12779018458029689], [0.23309964011556872, 0.5126085720989233, -0.98215495805790787, 0.37699412625362849], [0.93486132495407115, -0.4472239943844849, 0.026263762762378962, -0.66190224340523462]]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[[0.16616967377174974, -0.34107493762952257, -0.013366504122305445, 0.3916585189816173], [-0.51443295867620642, -0.061956143344672032, -0.46825145806797974, 0.93626982523512203], [-0.38827530515953357, 0.76492363380102857, 0.9106638908219844, 0.82366217715856216]], [[0.0777021432639875, -0.1266865881760002, 0.94159533967464126, -0.52875807266097596], [0.72286575971810585, -0.77732888911952047, -0.34573213185526286, -0.50543303426366437], [-0.30623465226307678, 0.72745029312048759, 0.029705243092159828, -0.46235736717130349]]], [[[-0.023779335438608662, 0.062125873920558128, 0.55432211434727252, -0.4910628288412513], [-0.34836515769635312, 0.75268152200559157, 0.18972705449311222, 0.20609273075803891], [0.40002294900947777, -0.069504408378212146, 0.33361971327149709, 0.96462084486009525]], [[-0.37425750917278622, -0.36854032805550929, -0.76003840737679318, 0.28810224841584242], [-0.63434214294045788, -0.64508629082812363, -0.88595356937835024, 0.018348107926466239], [0.19521376070150187, 0.27345548434566203, 0.38107788831816691, 0.11669712593060977]]], [[[0.38397614572939998, 0.86441444697364211, 0.84537640188458707, -0.87984981292402931], [-0.89945185236059189, -0.18316500042027717, 0.52176022932540378, 0.90446948037966424], [0.84249247342924782, -0.5831061613180073, 0.81322201875229028, -0.72602553774982126]], [[0.65265301490599925, -0.35965776340528843, -0.74966085019277862, 0.50894589155692227], [0.59793303791118579, 0.89854331043644731, -0.59261270886988227, -0.02537886281454127], [0.66860854165544392, -0.87533172628080691, 0.94974216080754914, 0.60985323529838964]]]]))
      res=generalTensorProduct(arg0,arg1,offset=0)
      ref=Data(numarray.array([[[[-0.40593329565157654, -0.17433973280534668, -0.30479506622115998, 0.81731896596661413], [-0.60063141288735467, -0.33183055149468393, -0.48514637826117851, 0.088629084005112088], [-0.81889266263719063, 0.53410402400225565, -0.024120495789865814, -0.025536535526296422]], [[0.17038517418731228, -0.38889287165304243, -0.32453961601120573, 0.65619606807453645], [0.32745220924480511, 0.78159731829780854, -0.81255404067617609, -0.075341210467658584], [-0.7550492214603941, -0.70577596221816385, 0.29264052044568839, 0.34637424147478285]]], [[[0.68726228579260951, 0.090511941816583966, -0.20984083015911836, 0.096602977361183132], [0.0066268671693862575, -0.19732540311940303, 0.28677377487764028, -0.38415780034006092], [0.24066211714590197, 0.27966320453586446, -0.11390123393272802, 0.2079408952444273]], [[-0.23540650917036171, -0.53797391975768227, -0.29735590970835218, -0.76042166392987987], [0.73071878529147294, -0.25224125212074272, 0.067812656841826954, -0.49022283913918141], [0.43808343962161456, -0.59407373304826361, 0.76452319919803569, 0.20788356956533524]]], [[[0.19883545683729081, -0.60975464117715084, -0.56471933620507786, 0.33654593267744726], [-0.57192827975937421, -0.50777889387439601, 0.42080032985139393, -0.24571197788070506], [-0.29748165471067783, 0.088037189368772611, -0.36632594530454121, 0.15144724416995262]], [[-0.66456594766955879, 0.072619576562001339, 0.63039508930117227, -0.1055702369392762], [-0.19256865711777679, -0.42347703457289781, 0.81137946528363425, -0.31144300608082354], [-0.77230917151350498, 0.36946141996088122, -0.021697062781837358, 0.54681176724509539]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[-0.13727636351587694, 0.28176938704531207, 0.011042358314733717, -0.32355757825981285], [0.424984199805229, 0.051183310785742904, 0.38683266275694839, -0.7734727640764858], [0.32076263210658001, -0.63191996729674893, -0.75231914752976314, -0.6804451491022917]], [[-0.06419142207212615, 0.10465853206718778, -0.77787228680235143, 0.43681848647224614], [-0.59717504735881366, 0.64216821717264227, 0.28561679597971812, 0.41754916748417759], [0.25298707333907788, -0.60096242961461865, -0.024540144158001535, 0.38196342671548422]]], [[[0.019644623605148966, -0.051323528887555536, -0.45793749453074117, 0.40567762980471694], [0.28779199560732704, -0.62180649381577657, -0.15673762552587348, -0.17025766485154001], [-0.33046761491719301, 0.057419095879007002, -0.27561046486754759, -0.79689415492202309]], [[0.30918222748827789, 0.30445914044401096, 0.62788417602841029, -0.23800750212460514], [0.52404377183376916, 0.53291974491367955, 0.73190541623875793, -0.015157769022293969], [-0.16127031226029109, -0.22590749336132623, -0.31481669029743919, -0.096406021128218347]]], [[[-0.31721100346491593, -0.71411148110048983, -0.69838374005752057, 0.72686297094283303], [0.74305663992145987, 0.15131657064945417, -0.4310374166551344, -0.74720181101254446], [-0.69600126435059506, 0.48171661863758786, -0.67182030831147843, 0.59978540837033645]], [[-0.53917077942293423, 0.2971210615623498, 0.61931105146203247, -0.4204512149145111], [-0.49396542225386031, -0.74230607377652291, 0.48957018329767582, 0.020966027785154353], [-0.55235198535797547, 0.72313048179271788, -0.78460255204242213, -0.50381295527576719]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_array_rank0_taggedData_rank0_offset0(self):
      arg0=numarray.array(-0.0102127620888)
      arg1=Data(-0.229005763458,self.functionspace)
      arg1.setTaggedValue(1,0.607738889454)
      res=generalTensorProduct(arg0,arg1,offset=0)
      ref=Data(0.0023387813791681139,self.functionspace)
      ref.setTaggedValue(1,-0.0062066926901362569)
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_array_rank1_taggedData_rank1_offset1(self):
      arg0=numarray.array([-0.81150477379380859, -0.73587893035477503, 0.27818054841543649])
      arg1=Data(numarray.array([0.053483962561304388, -0.0042571315280595101, 0.83151744596001032]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([0.30066592295644945, 0.87745173727212933, -0.45405038562992828]))
      res=generalTensorProduct(arg0,arg1,offset=1)
      ref=Data(0.19104222158949891,self.functionspace)
      ref.setTaggedValue(1,-1.0159980629408079)
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_array_rank2_taggedData_rank2_offset2(self):
      arg0=numarray.array([[-0.62605686995587884, -0.72929095095918695, 0.4214186314345667], [-0.85483526226718332, -0.33406596197755456, 0.93287608203809058]])
      arg1=Data(numarray.array([[-0.93868821320947071, 0.71743669634732843, -0.9363554874116542], [-0.72841321266812575, 0.62456893465181174, -0.48655379087510675]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[-0.57443404126190778, 0.10887243568313831, 0.00061471288556869119], [-0.085390418078078012, 0.38307914000270271, -0.78776523313850433]]))
      res=generalTensorProduct(arg0,arg1,offset=2)
      ref=Data(-0.37001385036509371,self.functionspace)
      ref.setTaggedValue(1,-0.50937855806283105)
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_array_rank3_taggedData_rank3_offset3(self):
      arg0=numarray.array([[[0.86883447826937132, 0.97325833302667242, -0.071522808192899578], [0.32113897493125232, 0.54800038651893357, -0.69343772406267701], [-0.10212755477106628, 0.42020867036993614, 0.64244693405959641], [-0.32714722303726496, 0.39492940125511034, -0.28509015499323831]], [[-0.22658357894136105, -0.55394354325330775, 0.25179354148662747], [0.25368652940318426, 0.95083690434953394, 0.26073816945524531], [-0.66933686181802154, -0.65545265142391451, -0.747708988224695], [-0.91415569034671429, -0.6807068113459025, 0.98006373141429948]]])
      arg1=Data(numarray.array([[[-0.11198855242982608, 0.79843327477455861, -0.90494891601357152], [0.55551817149205518, 0.73698837688900976, -0.16791015090254402], [-0.76554690630950684, 0.67339179748468236, 0.82732663029929476], [-0.732763959593981, -0.12026973749619319, -0.0094463456757079012]], [[-0.24350864090647728, -0.2119063679675417, 0.070472523613789528], [0.57111505730538226, 0.93787468279206654, -0.39143680271366321], [0.34039581332629565, 0.67185435411187444, -0.43437841675905275], [0.23295582653355118, -0.99609080306487097, -0.56516572190345205]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[0.37662867699049896, 0.18670139809775721, -0.89991915637376607], [-0.13363681073289313, 0.35731067515164239, 0.43760700193387425], [0.98049776027741564, -0.61083838250889011, -0.56317193133285559], [0.68051023955452572, 0.75186330901953524, -0.93914363223259567]], [[-0.77507351317097828, -0.39401581699087473, -0.30219396622800621], [-0.49635536015912063, 0.99958173243776227, -0.60017647351193304], [0.40262135749217465, -0.85130379852049964, 0.91534014247622664], [0.92547162623221846, 0.14277112080183629, 0.78769427784298318]]]))
      res=generalTensorProduct(arg0,arg1,offset=3)
      ref=Data(3.2234503848434359,self.functionspace)
      ref.setTaggedValue(1,0.46485630943087264)
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_array_rank4_taggedData_rank4_offset4(self):
      arg0=numarray.array([[[[0.63858810145799172, -0.55320224350092806], [-0.065465869663912546, 0.0071510902302500678], [-0.96026607434360045, 0.34535275577055824]], [[0.2357434014948816, 0.74902526877312803], [0.05916209892193014, 0.050231845572323852], [0.21241397832314424, 0.7980749192608414]]], [[[-0.99734371539495315, -0.63811234751267754], [-0.37921775291358562, 0.57918693993930326], [-0.61869100903708252, -0.60931759110848227]], [[0.55290353158673766, -0.30821017407074502], [-0.78705790903275452, -0.77101989637883461], [-0.56072604812729465, 0.18522694644085624]]], [[[-0.25495079078062188, 0.3640643797006422], [0.25992158376471108, 0.24306141621815192], [0.10818066453792441, 0.64722047258592963]], [[-0.2457097682304612, -0.81174030154562749], [0.98356321362361054, -0.87401304345915376], [-0.85393948464423475, 0.033089134015780841]]], [[[0.70735936535490218, 0.86654159429498745], [-0.10220632038685951, -0.67792783829704772], [0.99473473361256648, -0.63819896364880435]], [[-0.74696846320322585, -0.28249884289217331], [-0.59906245718739082, 0.35842438303043256], [0.18267370125116966, 0.37419240157333156]]]])
      arg1=Data(numarray.array([[[[-0.27338610365113292, -0.69941687164857469], [0.96041442269000377, 0.14947987866291101], [0.24205187951344054, -0.66249364226801122]], [[-0.95036798683289914, -0.93371239428923913], [-0.20692236402935826, -0.17715629492434104], [0.73767702970444304, 0.31151235744893557]]], [[[0.75255271591089601, 0.91384191105966361], [0.61192355817863819, -0.24224148764215014], [-0.82142070491023556, -0.28210832813750275]], [[-0.79158161174906039, 0.21852307437879936], [-0.84107518537691095, -0.063759290970212934], [0.59934349486300476, 0.44818165737795246]]], [[[-0.80000689071967779, -0.1180797235748472], [0.13362776392406084, 0.48306899711621254], [-0.32295130096289459, 0.90514191780022246]], [[-0.93481762421204606, 0.97785675665689675], [0.14424912459319827, 0.20296806616924212], [-0.93265092738291844, -0.41649448774686815]]], [[[0.52903709102043295, 0.046338963704659841], [-0.80770405114770538, 0.4009150936706487], [-0.76170364921368239, -0.49565245476858744]], [[0.83314254291881329, 0.33180501826174469], [-0.22475028459570678, 0.11148664823922361], [0.96717010076239007, 0.61165031610874432]]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[[-0.13354686484545741, 0.86759773467117141], [-0.74796939099902371, 0.22742151340850003], [0.10014487420830642, -0.89440562345228503]], [[0.0096960607877947247, -0.91032884354826438], [-0.93275279094762453, 0.14969186045954119], [0.34168402124262554, 0.37730133502290908]]], [[[0.8152733448213465, 0.76167626660345911], [-0.39794288252225751, -0.64665109463402182], [0.92027071530795945, -0.17284316507878916]], [[0.95108208711677844, -0.70723370777515271], [-0.92065464061774849, 0.69296454624741188], [0.50467776595823799, 0.52314005463612068]]], [[[-0.35805631296738127, -0.79128285558381073], [0.10586782228350877, 0.53754619043445251], [0.8156391710668407, -0.16295842240024849]], [[-0.91682927048081386, 0.12878647356532835], [0.47464488857490461, -0.5292559411292701], [0.35780514690980803, 0.84457459679176394]]], [[[0.69231673242905645, 0.93345428019305321], [0.25973721344056133, -0.45384073586554519], [-0.38819559882810517, -0.34981743990222447]], [[0.2417716413724571, -0.34597744971571776], [0.4506352179368085, 0.55601884817522773], [-0.59878566046623516, 0.69774156231643536]]]]))
      res=generalTensorProduct(arg0,arg1,offset=4)
      ref=Data(-1.2279131717080729,self.functionspace)
      ref.setTaggedValue(1,-0.38028445735883404)
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_array_rank0_taggedData_rank1_offset0(self):
      arg0=numarray.array(0.69487888948)
      arg1=Data(numarray.array([-0.085411859244966859, -0.93976988791956928]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([-0.17110762709715743, 0.13308663639577833]))
      res=generalTensorProduct(arg0,arg1,offset=0)
      ref=Data(numarray.array([-0.05935089790057875, -0.65302625608444964]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([-0.11889907789885898, 0.09247909410334898]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_array_rank1_taggedData_rank2_offset1(self):
      arg0=numarray.array([-0.32613135700346207, 0.63748147302895064, 0.89226805858255775])
      arg1=Data(numarray.array([[-0.24713405338076999, -0.93371680139605906], [0.96171369766723491, 0.52912048660806432], [-0.52027265624071983, -0.15173627714919369]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[-0.30174403541125216, -0.10659890826349483], [0.68506814425883755, 0.076052956971514041], [-0.6386793142448135, 0.60048580620335112]]))
      res=generalTensorProduct(arg0,arg1,offset=1)
      ref=Data(numarray.array([0.22945015589436679, 0.50642940128047687]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([-0.03474671031435328, 0.61904190215291544]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_array_rank2_taggedData_rank3_offset2(self):
      arg0=numarray.array([[-0.66023662685401807, -0.6337825435454385, 0.29167431468884431], [0.94451796051735859, -0.46614319856030928, -0.73737604523225175]])
      arg1=Data(numarray.array([[[-0.0060283542426766701, 0.71406187318960157], [0.92212413020320705, 0.89112593211943336], [0.64525035258227614, -0.51627877735664796]], [[-0.35826829628537338, -0.81040252251512035], [-0.87556249165537858, 0.677296367513883], [0.99375934249904518, -0.11604810185775438]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[0.61310976502454229, 0.62241916467380132], [-0.92023902084014209, -0.25732227835122035], [-0.81498828919605315, 0.70489623209589447]], [[-0.72779245586313923, 0.99173129910639624], [-0.47667764076270491, -0.52944752798384442], [0.6355937890106369, 0.63794148710475773]]]))
      res=generalTensorProduct(arg0,arg1,offset=2)
      ref=Data(numarray.array([-1.0552707560523431, -2.1824008634573371]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([-0.99316188704323527, 0.67084618106069027]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_array_rank3_taggedData_rank4_offset3(self):
      arg0=numarray.array([[[-0.74685877344840801, -0.16360461431784912, 0.89253201770767854], [0.89860614630092472, 0.47676723892163486, 0.48020432075163932], [0.013580892482476958, 0.25313284444681972, -0.72832906654802665], [0.26289995867973825, -0.1360145930930865, 0.94781534365153175]], [[0.47953323688846838, -0.8523199123772367, -0.78669408239144056], [0.47064706798376865, -0.52917691133499445, 0.38705915220782594], [-0.51179429530166454, 0.89291169791364888, -0.37093149308364692], [-0.59098447214724015, 0.20392341234660272, 0.75021054578123447]]])
      arg1=Data(numarray.array([[[[-0.948726908067689, -0.61359244635228216], [0.51406989321292351, -0.20831361699124851], [-0.90887786246436675, 0.71557916436556557]], [[-0.33948934639119055, -0.11879393723738341], [0.66775794225840568, 0.38619015351541419], [-0.50169383818448554, 0.77809610456164169]], [[0.46281994107991742, -0.12121076996123858], [0.45900624905883958, 0.13335478380393551], [0.64177917199497481, -0.36723521898217437]], [[-0.21115889555960488, -0.92200311409040769], [-0.35381854759532994, 0.28459921984618863], [-0.56501090309887148, -0.42917182777686236]]], [[[-0.28147914690114639, -0.43376256312999462], [-0.18080881572087293, -0.7480329684389726], [-0.9362532384762221, -0.17001401319349574]], [[0.68258052502730049, -0.15250537079951965], [-0.491822032621269, 0.31288325262049366], [0.7292840447092217, 0.78949294782556589]], [[-0.27348585811977233, -0.93508885485956417], [-0.089855343129160659, 0.17963413276601603], [0.39170832397406197, 0.022221855343987906]], [[-0.36665620287309819, 0.59902334934212997], [-0.75219744958946966, -0.57660766622631288], [0.57891388936935617, 0.23998616632484904]]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[[-0.35731026425218015, 0.99152998811224546], [0.79800053990160791, 0.27164889730872921], [-0.95279011187792828, 0.31036848513884108]], [[-0.21537138768454889, 0.10894661998552935], [0.90897136217505681, -0.56164069232482583], [0.69957436310479881, 0.16551674625297719]], [[-0.10499888039026151, -0.73434354160487425], [0.40904030171036698, -0.72447746397597257], [-0.30469361993786692, -0.56304032593086295]], [[-0.69946972076599057, 0.88812864772400646], [0.044511443534362538, 0.8450203105358105], [0.25449548459351878, -0.92842541838005133]]], [[[-0.2086920545125277, 0.41567438517325517], [-0.69642364513634414, 0.52837637336666488], [0.90713301716266415, -0.49475890473689677]], [[-0.88844899113900211, -0.026939483778334772], [-0.61677873926225968, 0.27404045611980465], [0.99954591637071166, -0.60794701713577792]], [[-0.93898753827103998, 0.72421176195554837], [0.48954923821785079, 0.14541684755214557], [-0.047368487689250838, 0.97197315297147746]], [[0.25890938559966403, 0.47985481856960965], [0.04573552164070005, 0.48384639750352409], [0.1800915705972943, -0.29781619273194293]]]]))
      res=generalTensorProduct(arg0,arg1,offset=3)
      ref=Data(numarray.array([0.72928212095209821, 2.1644559316464433]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([1.2386553559099351, -2.4075383396127519]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_array_rank0_taggedData_rank2_offset0(self):
      arg0=numarray.array(-0.0076382108537)
      arg1=Data(numarray.array([[-0.075123626895323259, 0.11399208783031467, 0.60140159468235499, -0.98165605446860571, 0.060573134459918299], [-0.97590893810982315, -0.13712945450626957, -0.8678711738674707, -0.93647549303944011, 0.0036135746306817929], [0.46790176650093729, -0.0031086896429830535, 0.79123192468144699, -0.86737865848473561, -0.69107968660714869], [0.48522695497603041, 0.4362608490834381, -0.7023029697526848, 0.93155259344417329, -0.32450611701628529]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[-0.7082078622672543, -0.52202390988029146, -0.64107419017997391, -0.41105073481237553, -0.97052336964914154], [-0.74928802689753127, 0.70062301179706465, -0.80287402010931563, 0.46013161789334478, 0.36560859855389038], [0.24429050931245033, -0.91368022088344514, 0.8183212394058752, 0.9809479061635149, 0.75105884497194331], [-0.15985102541033358, 0.70866470229741796, -0.9309045534066176, 0.89989361052339345, 0.66014865163971725]]))
      res=generalTensorProduct(arg0,arg1,offset=0)
      ref=Data(numarray.array([[0.00057381010232110733, -0.00087069560250134211, -0.0045936321879347713, 0.0074980959298416383, -0.00046267037307432907], [0.0074541982432925133, 0.0010474236877716389, 0.0066289830198471809, 0.0071529972751571622, -2.7601244964725752e-05], [-0.0035739323513524885, 2.3744826971815454e-05, -0.0060435962748951371, 0.00662522108350516, 0.0052786123630137651], [-0.0037062657940053292, -0.0033322523525131458, 0.0053643381661501385, -0.007115395130036924, 0.0024786461450855735]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[0.0054094409802448503, 0.0039873286943381357, 0.0048966598374591023, 0.0031396921840649186, 0.0074130621358227946], [0.0057232199395955826, -0.0053515062930597629, 0.0061325210545520852, -0.0035145823179231197, -0.0027925955656800797], [-0.0018659424196860639, 0.006978882179962214, -0.0062505101726425382, -0.0074926869437716651, -0.0057367458214314833], [0.0012209758372641567, -0.0054129304207216509, 0.007110445263588434, -0.0068735771430743454, -0.0050423545960093814]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_array_rank1_taggedData_rank3_offset1(self):
      arg0=numarray.array([0.52740927894754619, 0.92711635622544497, 0.21953387453373652])
      arg1=Data(numarray.array([[[-0.22392083741334945, -0.30235339921774051, -0.44301386367935147, -0.44316180861534993, -0.34678833213783067], [0.24961880731273012, -0.34290109081328413, 0.30476011903078648, -0.54998551867196577, -0.60074692863908941], [-0.054957962474853961, -0.31713965784080411, 0.67226015328839228, -0.40104591242338672, -0.27476582162654783], [-0.55431697141969027, -0.98638218261212662, -0.50493365105734789, -0.61607491179943263, -0.45151520465277417]], [[0.62037337363985312, -0.4699399301026328, -0.43684235853569309, -0.81141634353422165, -0.10467810077998818], [-0.95312119770637804, 0.80983653946537681, 0.42287272543192134, -0.9508587478867887, 0.61493229981631248], [-0.75010300220466064, -0.54128732884328623, -0.27407300025939274, 0.74075697682554398, 0.38349161839485557], [0.081815350248955809, 0.0010176467460347727, 0.31177535891296349, -0.3669373686248969, -0.87042994098830673]], [[0.49295499304477453, 0.055622465425793299, -0.010386088290052387, 0.81505746647294064, -0.77343467126360155], [-0.58146206038521808, 0.95689279311332753, 0.74334666823582407, 0.44198050892095098, -0.12228012023773438], [-0.0086209706464153157, -0.47622892188030197, 0.21304959604044371, -0.24780747212868359, -0.41185326075899065], [0.75057587354167299, -0.94687789776507936, 0.86807083386192563, 0.61905742512961437, -0.87380510227827601]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[-0.47772886840682971, 0.82937879318125907, 0.76787340171351004, 0.16621086364583793, 0.18152740122415612], [0.91497129773452923, -0.30525725027576911, -0.36759867967555082, 0.31289389636080789, 0.077081290109164868], [-0.012168268656227443, 0.12902953418448226, 0.1653049562908786, 0.96836951312686659, -0.35988740090935911], [-0.7027905520405886, -0.15582576511362611, 0.20893018306932798, 0.1043578739462987, 0.95038966575449146]], [[-0.34180614792928532, 0.55817412305655556, 0.80340700894833295, -0.38906512510488467, -0.055328925918995742], [0.87269858310438142, -0.77333065440838111, 0.81333771330487292, 0.32356542101737107, -0.23253008388033614], [-0.43032440113284087, 0.24272854626442864, -0.85853886191583628, 0.18931503172877528, 0.75173310356815737], [0.077368186035134068, 0.97387660394662023, -0.84595593322080997, -0.7471304205282947, -0.65158921764464806]], [[-0.67980354539778176, -0.16189355298404062, 0.88985599897969214, 0.18548328718475338, -0.18500125474439311], [0.089257110145460006, -0.45151890952274298, 0.63995871137991989, -0.26764206985479366, -0.61832181853185442], [-0.83242006142831837, -0.52355863033399275, 0.92733756893871022, 0.53040270974090964, -0.70935580393293662], [-0.16990796114502094, 0.45594468811813837, -0.40363535084664948, 0.23305336309042524, 0.11799611368699803]]]))
      res=generalTensorProduct(arg0,arg1,offset=1)
      ref=Data(numarray.array([[0.56528069386063218, -0.58294196856431812, -0.64093341630099909, -0.80707229015567794, -0.44974327365320321], [-0.87965359569295198, 0.78003386693678067, 0.71597530917911589, -1.0745944698684531, 0.22642966009329638], [-0.72631069664728998, -0.7736471146410886, 0.14723028465734023, 0.42085043921217474, 0.12021156595197509], [-0.051722735148578641, -0.72715541236178716, 0.2133162954231993, -0.52921318607469647, -1.2369529634488794]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[-0.71809261466547358, 0.91937331144502155, 1.3451888710559841, -0.23232762467601459, 0.0038288413493277468], [1.3112524420666287, -0.97708670036676659, 0.70067635800104822, 0.40624943781746714, -0.310671640974157], [-0.58812284989616681, 0.17815012428895433, -0.50520004402371166, 0.80268549100072839, 0.3514084731578524], [-0.3362295006025029, 0.92080827799982512, -0.76271949760214919, -0.58647441428250191, -0.076950548866088903]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_array_rank2_taggedData_rank4_offset2(self):
      arg0=numarray.array([[-0.76138663657763317, 0.80092007493119932, -0.98971611690740446], [0.75715842943795186, 0.01562270901778029, -0.38091063327663566]])
      arg1=Data(numarray.array([[[[-0.83560266279859596, 0.94972397975532652, 0.51790321138093542, -0.35108261741873115, -0.7558030663647346], [0.76866496798455497, 0.32329226903774777, 0.18277980840079411, -0.41611349763614047, -0.4525356521615802], [-0.62407471049943641, 0.32997092851807164, 0.39298327813600942, 0.61459204766562525, -0.40374203768111694], [-0.36958010356839588, 0.130290489890591, 0.52784207925456461, -0.013331249269650014, -0.48885545816485432]], [[-0.60656815128196495, -0.92171018240763503, 0.83493650000587016, -0.11537767407957666, -0.73241479886343486], [0.69662876488115466, -0.087621660009356006, -0.90948252971332599, -0.71217814456830242, 0.20256163098854674], [-0.97342367325530232, -0.57072983710846326, 0.03503208896765031, 0.70699915978400285, 0.72440201922663094], [0.74547327019524356, 0.97297254530034283, -0.58951415091607595, -0.41980643030845344, 0.29443960392186463]], [[0.81240516981927713, 0.17076029887909439, 0.60923893487117731, -0.65823188302962343, 0.19929739541515312], [-0.54576807848190523, -0.87664684771412693, 0.7118913928917272, 0.32860264688503271, -0.40950453449411039], [-0.43908673805979204, 0.21041762838464684, -0.09981594555110318, -0.75062986784109698, -0.17311623787883579], [0.22543750122783401, 0.69863807744901796, 0.75262958723213336, -0.53295555007159501, 0.85046365633145293]]], [[[-0.074036833028703342, -0.92720818819344886, 0.72032563471394706, 0.64441117277034921, 0.045442245710698215], [-0.78568537805326177, 0.35074022872924404, 0.31824612766681404, 0.29228555462829897, 0.83224024774781702], [-0.0046869498532340348, 0.59996749812581229, -0.18882966967554982, 0.87421098203459002, -0.61295306962921736], [-0.97960434870771862, -0.25937841927809524, -0.28323316224046646, 0.16847602797927097, -0.77946458750487246]], [[0.56763161211707347, -0.71441422905678742, -0.27214555251106165, 0.84727293819297866, 0.62628776695923127], [0.20926041225147207, -0.33859524655723838, -0.87617609217009451, -0.54354868398764422, 0.75200065121873916], [0.9834287056106954, 0.14876321381519064, 0.71015677349810402, -0.17349392311933332, 0.34178317580874418], [-0.33072036523627535, 0.054308903287552113, 0.41789047604471818, 0.4908857254600163, 0.60690408590192035]], [[-0.37349313311496157, 0.17229126932529448, -0.45309742100365535, -0.21421206402079895, -0.25944799274278929], [-0.88837643198407057, 0.12396242411471858, -0.48501999385140415, 0.76676098267292869, -0.31038593086399779], [0.76221633431653291, -0.043016731102265116, 0.83645122278429795, 0.87282057354773968, -0.97056738175325097], [0.89228999713355339, -0.45326930544372179, -0.024369698992643629, -0.74354718806835263, 0.14533480220560291]]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[[-0.54616467991324735, 0.57976852853613936, 0.87163217022266126, 0.71011664635055594, 0.50754000460374971], [-0.78853022483669521, 0.72142688375821606, 0.10151618279453345, -0.66935246313485708, 0.70871039280972581], [0.0034131995502404422, 0.93219696292007304, 0.14725236304446976, -0.28615780109996458, 0.67600289302425476], [0.91233652376908148, -0.51809013667738624, 0.06302259539682864, 0.47885132598761948, -0.52093582320586607]], [[0.94999034900719725, 0.1975211900443965, -0.048413626501447871, 0.82151298158854247, -0.34962118595097302], [0.75566873370493193, 0.10471544578061809, -0.3099457447634919, -0.36447232118223027, -0.43103358490236943], [-0.8494665093926812, 0.81143768027144403, -0.31237288709870081, -0.22268973845108597, 0.87542232699259093], [-0.5643206003802943, 0.60819778774195354, 0.90949825644039461, -0.53257175928094114, -0.78146968055884325]], [[-0.090586768142021823, -0.52471831864791896, 0.38046081371520724, -0.87361293455675804, 0.11260402434948946], [0.89892173200322256, -0.63820307236641494, 0.66205833636038491, -0.7957983919689875, -0.70891832300808733], [0.65933150514376959, 0.93240803419396845, -0.78634040125152627, 0.12092377170633051, 0.62601033740309497], [-0.11408834710747562, 0.41385372129246845, 0.74295472908869642, 0.81468219143823251, 0.48346774551718208]]], [[[-0.066272271442725961, 0.3753925200719368, 0.75857190268529484, 0.046011153717615549, 0.28863549112330622], [0.030112130465934195, 0.75777389859688893, -0.21405833739685987, -0.94453677876875797, 0.9240945675018446], [0.36824884990768991, -0.76613538827943906, 0.40520295835890252, 0.9447577968236347, -0.047156645282012466], [-0.95076389050031174, -0.55975642463374919, -0.38375619207501988, -0.72414130365717311, -0.54397128836307385]], [[-0.82355282945908725, -0.3641967149858707, -0.69125020596022768, -0.0021277378568234084, 0.023294816806539664], [-0.32021514108363802, -0.63832842229099795, 0.12688907386527437, -0.99733790248339216, 0.37167480564299438], [0.61512520175202301, -0.80837769263390458, -0.98056282722667731, -0.89126884506029591, 0.19639999711538403], [-0.82428132190749781, -0.48132118639227772, -0.42991106475729324, 0.89257199639701001, -0.23988407656889144]], [[0.29537576510772245, -0.6825254346998586, -0.53347892938144836, -0.027034592242984434, 0.79998183116566612], [-0.78222470426821711, 0.01719557578261921, -0.56604241752467988, 0.46161110357886903, -0.79642373068196659], [-0.12251174175032631, 0.66818100405956393, 0.18270975218241503, -0.5806255802463951, -0.31811949714885945], [-0.94534450094670319, -0.3659484714049297, 0.26582629308042072, -0.94695118235117159, 0.86122803933277337]]]]))
      res=generalTensorProduct(arg0,arg1,offset=2)
      ref=Data(numarray.array([[-0.55856856111300834, -2.4091597125703794, 0.38515782812896204, 1.4091177241855979, -0.065377415116906423], [0.25962112825162037, 0.7643606944057818, -1.1601355373594284, -0.65805049511175451, 1.6721988202763136], [-0.14842244482558523, -0.44361809414647629, -0.62285743148322625, 1.1679572576959438, 0.96986427396587116], [-0.43142645493959875, -0.03426856532053163, -1.817576373339632, 0.61985057479541072, -0.86974325330188351]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[1.0908075096580985, 0.77461592037346438, -0.31220502451238352, 1.0270239706055124, -0.86371368384610814], [0.63168404145424284, 0.72345627877112817, -0.92526678767769799, 0.09875963454669584, 0.82566064277544293], [-1.0004058938966083, -1.8299170077110427, 0.63783977134757019, 0.8424135912158347, -0.34459042594026901], [-1.406366087735972, 0.18003685414173182, -0.45340009253688762, -1.77108403392749, -1.4514280038897776]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_array_rank0_taggedData_rank3_offset0(self):
      arg0=numarray.array(0.84121522304)
      arg1=Data(numarray.array([[[-0.24663267372525488, -0.10945073511887027], [0.07976282727299, 0.88633763806907062]], [[0.53808827163431161, 0.6076693685094583], [0.96671768664174396, 0.58574426669171742]], [[-0.21762565032479775, 0.64396881762222979], [0.60007030508547787, 0.99010151798972967]], [[0.36959047235068376, -0.53305754128374727], [-0.8905661243165508, 0.74527279917455913]], [[-0.69200858827200951, -0.057174151772140247], [0.96690253534400239, 0.050290458877692013]], [[-0.22433285107592305, 0.025151062814394942], [-0.61874077043938303, -0.98454723496273244]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[-0.4779573584418142, -0.0045526128203858818], [0.54735205145689259, -0.93002745869130887]], [[-0.62140461535825908, -0.43216463942865202], [-0.92150865752954636, -0.16114691786312174]], [[-0.46941067876706266, -0.37180115368988087], [0.89405889226075397, 0.97023721849019973]], [[-0.70666390709389337, 0.48146728631103541], [-0.68371114216712026, -0.22462783564116995]], [[-0.66876253568521737, 0.67427863310824754], [0.59421080091382783, 0.96155507641187588]], [[-0.14702837535604285, -0.39837316006264301], [-0.71270454603859346, 0.38307482381540092]]]))
      res=generalTensorProduct(arg0,arg1,offset=0)
      ref=Data(numarray.array([[[-0.20747115963676183, -0.092071624554921294], [0.067097704534755748, 0.74560071389709193]], [[0.45264804543810921, 0.51118072336530918], [0.81321763438512584, 0.49273699394952181]], [[-0.18307000997721745, 0.54171637254694138], [0.50478827553220984, 0.83288846928805338]], [[0.31090513163196937, -0.44841611848420471], [-0.74915778089888785, 0.62693482398333233]], [[-0.58212815892889014, -0.048095766835128409], [0.81337313192742489, 0.042305099581585716]], [[-0.18871220935304991, 0.021157456915106333], [-0.52049415520915721, -0.82821612185267013]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[-0.40206500588527871, -0.0038297272091160424], [0.46044087804775585, -0.78235325609640927]], [[-0.52273502210673373, -0.36354347354700972], [-0.77518711087708303, -0.13555924045244758]], [[-0.39487540883643046, -0.31276479042779259], [0.75209595046409805, 0.81617831815402131]], [[-0.5944564362203647, 0.40501761064064024], [-0.5751482209531027, -0.18896035485989746]], [[-0.5625732256172904, 0.56721345074131546], [0.49985917142355091, 0.80887476806913838]], [[-0.12368250756835435, -0.33511756669527815], [-0.59953791365753517, 0.32224837335691225]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_array_rank1_taggedData_rank4_offset1(self):
      arg0=numarray.array([0.42093743503457759, 0.73232104743133641, -0.14878028119271147])
      arg1=Data(numarray.array([[[[0.78710133320156928, 0.904724510416687], [0.93931026404524087, 0.33920904332744928]], [[-0.2134005921995239, 0.72390751268435372], [0.70865659976324258, 0.98172103290744883]], [[-0.79074618041986167, -0.93341388720727814], [0.38353829871662426, 0.37510038487326991]], [[0.69463855148963516, 0.52754187859703827], [0.80642127398576968, -0.67835838831204365]], [[0.24239534106723437, -0.94389821715748812], [-0.15941542047845481, 0.10399532721392379]], [[-0.85811785598565238, 0.87283109258759617], [-0.95715898043356629, 0.96715075002913675]]], [[[0.35114265767724029, -0.45652844828617067], [-0.49969511579070458, -0.071084423661412321]], [[0.90148295948000401, 0.76115766848635191], [0.13596698489371928, 0.55564758782612578]], [[-0.027187721926189568, 0.71252579494387103], [-0.084338009995321039, -0.031439903447676221]], [[0.26131987950229241, 0.21349573526510168], [-0.80575084479471548, -0.42163110489689082]], [[0.76330786219251001, -0.097052741051362412], [-0.049644380109131525, -0.21398058844109635]], [[0.61692348762788818, 0.78743716730880053], [-0.93025574372390896, -0.63110722448927659]]], [[[-0.45922726881258291, 0.81781316410212512], [-0.094373391050986521, -0.80898932595614026]], [[-0.27291296745026328, -0.14257988381332853], [0.52608589713760812, -0.38588992920541965]], [[-0.41893846259883638, 0.8437687258479718], [0.79421526301617784, -0.68484288241585789]], [[0.14738914609420384, -0.18098211922538043], [0.55329310979645951, -0.044039760411740403]], [[0.073553284988028045, -0.82310691807778436], [0.38518083347142995, 0.076513809513227393]], [[0.9563736030517862, -0.25691712039803405], [-0.3159249966356894, -0.40807898933024167]]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[[-0.59902293892645742, 0.4070901207828046], [-0.58232546518699757, 0.016474213083368383]], [[-0.0063369947838824991, -0.27273602166135791], [0.49777404662155611, 0.8968769635346312]], [[-0.1947627413450721, 0.55225148576229288], [-0.41409491470290827, -0.00037383529193713017]], [[0.88420803364689848, 0.59274534715690419], [0.14686033077843708, -0.051809538429408164]], [[-0.75154817288548004, -0.069156268280767375], [-0.81540598499408379, -0.61361644721131858]], [[-0.9375451831238315, 0.28241674539865769], [0.13820212902557283, -0.94335883578878055]]], [[[0.31973402954805219, 0.65088994807161171], [-0.96912795413198638, 0.53303010014969732]], [[0.068703252510207369, 0.85202495380431698], [0.23775787160462536, 0.21090896562691852]], [[0.80605616424216842, -0.43022031403036332], [-0.53971829450800479, 0.74403488368144433]], [[0.57493907808226519, 0.81629775999724274], [-0.93354186509027159, -0.24530797435127139]], [[0.45780232465399995, 0.14244524006220605], [0.68820230081584288, 0.54350829611983786]], [[-0.82440439539658161, -0.94278875347999214], [0.48863959060190076, 0.35307808213677983]]], [[[0.0048311838336423385, 0.56093315064741223], [0.39594424465558009, -0.78995903451792149]], [[-0.97450267991323059, -0.15338149665392442], [-0.21339127777779088, -0.64160851143172914]], [[-0.2747128459425876, 0.17586609366777384], [-0.48934715104038151, 0.75585706624331261]], [[-0.60605449209671014, 0.26414574917197986], [-0.74638775621562625, -0.26512756020803163]], [[-0.7242484515935883, -0.1470599651505875], [-0.49430181346352131, 0.57217102808038067]], [[0.88200942050607933, -0.004129854055393567], [0.41075967962180182, -0.86332013700981358]]]]))
      res=generalTensorProduct(arg0,arg1,offset=1)
      ref=Data(numarray.array([[[0.65679353736348178, -0.075167449121632299], [0.043494502314359279, 0.2110908244446677]], [[0.61095071525095745, 0.88334462784410306], [0.31960036851046053, 0.87756836920769954]], [[-0.29043502767968787, 0.0033526406751779037], [-0.018480442277836823, 0.23676080748375314]], [[0.46184081941128147, 0.40533611631062733], [-0.33293450445737099, -0.58776352444026603]], [[0.65007640786339993, -0.34593378072352088], [-0.16076685535568036, -0.12431070845865026]], [[-0.05171740819865478, 0.98228829389823713], [-1.0371464969316624, 0.0056509591109529522]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[-0.018722004909768934, 0.56456408792092538], [-1.0137440821925492, 0.51481410153988194]], [[0.19263214225060102, 0.53197114740987628], [0.41539523829205621, 0.62744085793888238]], [[0.54918082017080083, -0.10876147395429514], [-0.49674991127522072, 0.4322584172169564]], [[0.88340520734295869, 0.80800105784027532], [-0.51078556526914831, -0.16200701397729445]], [[0.12665740598926073, 0.097084808184588325], [0.23429248874403077, 0.054600664869816032]], [[-1.1296021645545062, -0.57092982618838128], [0.35490256587758595, -0.010083524975030317]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_array_rank0_taggedData_rank4_offset0(self):
      arg0=numarray.array(0.464020914261)
      arg1=Data(numarray.array([[[[0.11755054365974438, -0.40139218168795487, 0.072053551538426852, -0.63910577791810352], [-0.9885988547294926, -0.51537118206750909, 0.017311984926075663, -0.71554041516954614], [0.25716158315488369, -0.88728977354765681, -0.6512584186524295, 0.68403791372467526]], [[-0.63913374179799098, -0.64105966578682705, -0.95279874560421329, -0.23077283221130096], [-0.3326978349817924, -0.61138317009375087, 0.48993034100732724, 0.84778608858395454], [-0.35571974316190991, -0.29304817739334843, -0.72513731196938713, -0.98942127245414069]]], [[[-0.39657781945210124, 0.37692677760236193, -0.31404653104418712, 0.41778097807877179], [-0.34710424161643005, 0.12962754032322188, -0.96696015549094971, 0.20848949876280631], [0.025666093688795355, 0.87242748402315495, -0.61910922207732333, -0.044747570019129324]], [[-0.3891671617621455, 0.12759808814452844, -0.84124650726607753, 0.54935118507065783], [-0.48136806482263128, 0.16087111290615841, 0.86835387578259549, 0.33110786434002559], [-0.32761023920530863, -0.69432465536524446, -0.28222797289790558, 0.66513243224571172]]], [[[0.6222624392443965, -0.53063302368843623, -0.47302474748247691, 0.13453245785733903], [-0.49870171866403679, 0.65281221055036598, 0.34202992462184656, 0.086433419350200769], [0.70716969703380084, -0.14193436916590918, 0.38041134593159431, -0.35589153091671943]], [[0.012712130264437294, -0.43705521649742418, 0.080814362740557089, 0.14475814648714169], [0.85058446626966422, 0.27223143191434351, -0.49974204521291887, -0.21680225173838563], [-0.32862029476237842, -0.55064101990928904, -0.074830426465927413, 0.56014719098101096]]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[[0.94235013960670733, 0.23753869332318622, 0.34445182508806926, -0.43898912547214897], [0.6484129358186046, 0.50652938193724073, 0.14349385661291381, 0.1555221218478291], [0.91342837368031393, -0.87492912091299946, 0.65119952454917862, 0.28616208790855735]], [[-0.12350894618284292, -0.079138253112442269, -0.65818254675768939, -0.28326940787473243], [0.7340736177001439, 0.74023518082487083, 0.17736271698233086, -0.9074183880543305], [0.23742924822012035, 0.96963692173118532, 0.49276573413361269, -0.75334982863930433]]], [[[0.61167448833554627, -0.38184812763530651, 0.11645034265615961, -0.0097980587298938104], [-0.49419370788806272, -0.85192409314259043, -0.54550910351696724, -0.84478106898579086], [0.1255336192447527, -0.5729965356597122, -0.47505660164996732, -0.69958280725247368]], [[0.47768102726509931, -0.042787916060617714, -0.77318323993787486, -0.85897627930666265], [0.66247649900125816, 0.78050397294784135, 0.66574531944311421, -0.30518127411058704], [-0.51160104022414243, -0.85653020373257127, 0.17642821423058619, 0.48136904697170735]]], [[[-0.39952034191463071, -0.46045030874902393, -0.24889982425522517, 0.90030435639981743], [0.98071830657317527, 0.72124751798397924, -0.31609723237781506, 0.89766269999854198], [-0.67621439651540105, 0.11408732098376295, 0.56058240438295281, 0.43992669788420891]], [[-0.89857052858038888, 0.2556546028438913, 0.32676286327184934, 0.66749218006576982], [-0.37365600978104041, -0.52585609277581868, -0.81382732296486404, 0.19119409464947301], [0.67596105053607691, 0.60253883499193339, 0.57689653606691316, 0.38803565768413417]]]]))
      res=generalTensorProduct(arg0,arg1,offset=0)
      ref=Data(numarray.array([[[[0.054545910740921112, -0.18625436712422933, 0.033434354860642904, -0.29655844737931203], [-0.45873054440936817, -0.23914300708695238, 0.0080331230730774847, -0.33202571763796612], [0.11932835292844235, -0.41172101193638866, -0.30219752684354451, 0.31740789811599557]], [[-0.2965714232044237, -0.29746509221452144, -0.44211854504239761, -0.10708342058938428], [-0.15437875356104511, -0.28369457755094524, 0.22733792475862741, 0.3933904759228366], [-0.16506140044282561, -0.13598048319670322, -0.33647887846510083, -0.45911216343386418]]], [[[-0.18402040235796288, 0.17490190795265748, -0.14572415845574993, 0.19385911140914039], [-0.16106362753887138, 0.060149889774240017, -0.44868973540527168, 0.096743487829821798], [0.011909604258993985, 0.40482459876321147, -0.28727962725599376, -0.020763808351253125]], [[-0.18058170220139122, 0.059208181518832864, -0.39035597342082845, 0.25491043914707912], [-0.22336484953524605, 0.074647560888967138, 0.40293435934308419, 0.15364097393020365], [-0.15201800271744859, -0.32218116137682346, -0.13095968201423236, 0.30863535931557462]]], [[[0.28874278596872383, -0.2462248207892079, -0.21949337579509448, 0.062425874092797907], [-0.23140802743822594, 0.30291851878059695, 0.15870903832779251, 0.040106914269620549], [0.32814152935559299, -0.065860515745482545, 0.17651882053459428, -0.16514111355387123]], [[0.0058986943075144118, -0.20280276114185597, 0.037499554484327034, 0.067170807479751501], [0.39468898169500832, 0.12632107792758815, -0.23189076071456863, -0.10060077906557942], [-0.15248668962049491, -0.25550894948814701, -0.034722882903291313, 0.25992001167997281]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[0.43727017333467755, 0.11022292164828704, 0.15983285079637932, -0.20370013535240614], [0.30087716329747793, 0.23504022690678852, 0.066584150536420833, 0.072165517167705029], [0.42384986906745781, -0.40598541059998722, 0.3021701987479094, 0.13278519365828453]], [[-0.057310734127226821, -0.036721804562286832, -0.30541046709741038, -0.13144292962432336], [0.34062551122040613, 0.34348460537482134, 0.082300010090029976, -0.421061110042591], [0.11017213683150097, 0.4499318109233299, 0.22865360646937691, -0.34957007624389125]]], [[[0.28382975530784416, -0.1771855172943449, 0.054035394465366378, -0.0045465041698323763], [-0.22931621615645811, -0.3953105965813527, -0.25312763295186869, -0.39199608398152319], [0.058250224772494662, -0.26588237634544382, -0.22043619862353925, -0.32462105382286094]], [[0.22165398699688388, -0.019854487929788566, -0.35877319388757661, -0.39858295845274722], [0.30740295074326601, 0.36217016711192501, 0.30891975179325248, -0.14161049382825847], [-0.23739358242189815, -0.39744792822850483, 0.081866381268785607, 0.22336530527295825]]], [[[-0.18538579432126054, -0.21365857323767345, -0.1154947240104154, 0.41776005057017918], [0.45507380524899266, 0.33467393270370327, -0.14667572676345708, 0.41653426675169486], [-0.31377762250780822, 0.052938902988521344, 0.26012195980064073, 0.20413518856023646]], [[-0.41695551820023607, 0.1186290825467617, 0.15162480256208166, 0.30973033165646441], [-0.17338420327787105, -0.24400822493977151, -0.37763289845307707, 0.088718058600632213], [0.3136600646748578, 0.27959062109096555, 0.26769205810001312, 0.18005666064462189]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_array_rank1_taggedData_rank0_offset0(self):
      arg0=numarray.array([-0.29596901469549852, -0.49790487372373438])
      arg1=Data(0.76831355123,self.functionspace)
      arg1.setTaggedValue(1,-0.977087069153)
      res=generalTensorProduct(arg0,arg1,offset=0)
      ref=Data(numarray.array([-0.22739700473472377, -0.3825470617053755]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([0.28918749712898151, 0.48649641378381187]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_array_rank2_taggedData_rank1_offset1(self):
      arg0=numarray.array([[0.84839100899258657, 0.63995278205392858, -0.22518927308060821], [0.62417961980622882, -0.4093347205638358, -0.51820930075503857]])
      arg1=Data(numarray.array([0.65029528476596887, 0.29675757149284943, -0.14657175516773702]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([-0.72595920843424988, 0.47967681592024913, 0.87755655741797622]))
      res=generalTensorProduct(arg0,arg1,offset=1)
      ref=Data(numarray.array([0.77462189325851005, 0.36038273276068944]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([-0.50654307574813429, -1.1042352881135549]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_array_rank3_taggedData_rank2_offset2(self):
      arg0=numarray.array([[[0.8857634315941374, -0.64922027003957394, 0.85767802430130113], [0.42528203997287828, -0.98510131120740763, 0.45263861034439823]], [[-0.95501468604731632, -0.34680321085215726, 0.077101031514611007], [0.14296036018536684, 0.66344300477160645, -0.62889213379515763]]])
      arg1=Data(numarray.array([[-0.35560670830392649, -0.61743818620771229, 0.45709664415266604], [0.12643609028121605, -0.50595462018719806, -0.62871884269372935]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[0.2522731192686205, 0.59077343967396301, 0.54825792352365998], [0.12661367864362116, -0.49523494116892963, 0.21035303725414334]]))
      res=generalTensorProduct(arg0,arg1,offset=2)
      ref=Data(numarray.array([0.7455168493135651, 0.66678142718364053]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([0.94705800434800325, -0.84628419890463791]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_array_rank4_taggedData_rank3_offset3(self):
      arg0=numarray.array([[[[0.87551146721810813, 0.28771538582234579, -0.15437310094017409], [0.68756318950966588, 0.26445838583723247, 0.32373630114498408], [-0.42086758680556158, -0.44783064702669684, -0.96968127630088774], [-0.40709420019735032, -0.37187645584025053, -0.70581627335802555]], [[0.62630296308633016, -0.68840738003201962, 0.57242186156020569], [0.57690971093873333, -0.38540897970548937, 0.34128114677934795], [0.37546178565646726, -0.61921118479761872, 0.19502756047360448], [0.6034121430542152, 0.61080731194605797, -0.38418196703132956]]], [[[0.55965256611451597, 0.58288566512371065, 0.8987568378413251], [0.53992736465257307, -0.1882635916615969, 0.48973640021427478], [0.85203661150963406, 0.73584633064344884, -0.83545478061497325], [0.31840175110958402, -0.5256509231279165, 0.38644604785950043]], [[0.99756206683886961, -0.20610203025004581, -0.82590744308615416], [-0.80000573771481376, -0.26824634148243276, 0.088637756291022773], [-0.63150830084355314, -0.94550055175344494, 0.071483302182796749], [-0.71377309004963307, -0.25811353825233896, 0.98811890657582868]]]])
      arg1=Data(numarray.array([[[-0.51467600396146573, 0.70926095678837009, -0.63163248147737239], [0.89624331515459543, -0.17156805907961159, -0.66137665466444351], [-0.30885327027632603, 0.45453584110717959, -0.73658812703020882], [-0.92589776828624393, 0.24725623516500517, 0.021740237804729334]], [[0.85508637600310866, 0.055474021033104615, 0.17700727428001617], [-0.75254843473403477, 0.48904243298864114, -0.96428353955560886], [0.82776641672164297, -0.50627909794708992, -0.24334660876215253], [0.075193245557573896, 0.73737517900426397, -0.80335726058193346]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[0.71678653318238461, -0.12311602951580936, 0.78030860477591557], [-0.81933373807095333, -0.62288568144102952, -0.67387286214342379], [0.49544626539819636, -0.26546931588256939, 0.73901268961381517], [0.66246297549622035, -0.034973761870373599, 0.60053617311110807]], [[0.68982518244318047, 0.97893984565288683, -0.96628203885355646], [0.77657969122611714, -0.90916620475638554, 0.66453360641437875], [-0.62638542087033366, 0.039691984103488176, -0.94760416787934099], [-0.69310132536482261, 0.83247979072344003, -0.30187713547481998]]]))
      res=generalTensorProduct(arg0,arg1,offset=3)
      ref=Data(numarray.array([2.1462111553154131, 0.0018289197595722229]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([-1.9694567861709098, 1.6841424416510264]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_array_rank1_taggedData_rank1_offset0(self):
      arg0=numarray.array([0.059107512318066879, -0.86443238423224034])
      arg1=Data(numarray.array([0.26323295908478461, -0.87200177116993149]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([-0.47160488168708659, 0.42588097415230286]))
      res=generalTensorProduct(arg0,arg1,offset=0)
      ref=Data(numarray.array([[0.015559045371625101, -0.051541855430802863], [-0.22754709443016813, 0.75378657010716033]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[-0.027875391353579942, 0.025172764925737563], [0.40767053229233186, -0.36814530588562427]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_array_rank2_taggedData_rank2_offset1(self):
      arg0=numarray.array([[0.87928940892560026, 0.45857057701152892, -0.71636944869938413], [0.76469394956908654, -0.50617870808981302, -0.083669068487796316]])
      arg1=Data(numarray.array([[-0.83918291402612999, 0.8724655907290082], [-0.094317633486005636, -0.80716341399646141], [0.99731604189303447, -0.45791272693117469]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[-0.22043261953143589, -0.11771151518581213], [-0.30304403419134207, 0.52493670858736796], [0.38255222091814534, 0.85310429105915486]]))
      res=generalTensorProduct(arg0,arg1,offset=1)
      ref=Data(numarray.array([[-1.4955826831745032, 0.72504304882519865], [-0.67742102328262799, 1.1140512238628213]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[-0.6068398689526, -0.47391980992915317], [-0.047176840694213712, -0.4271035097947341]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_array_rank3_taggedData_rank3_offset2(self):
      arg0=numarray.array([[[0.37992305691385031, 0.61876747772662832, 0.045342680899379761], [-0.40047632827023083, 0.15466055705712312, -0.44357459958403056]], [[0.26840869814605517, 0.35523465362518025, 0.12287957687473106], [0.96647751860299635, -0.83792974311338519, 0.11310600361644152]]])
      arg1=Data(numarray.array([[[-0.33392279167171579, -0.16857351354564298], [0.48812062095085551, -0.90127622553897191], [0.095331239457839168, -0.67514724967494399]], [[-0.227343232057865, -0.87380676579834726], [0.71691550383695035, 0.56596215351114809], [-0.1787430650852746, -0.61636758001639991]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[0.19105980102157649, 0.55225511738960664], [0.31364782767761445, 0.066291571998562615], [0.89294308496599561, 0.37611031397199723]], [[-0.69376612638867541, 0.44512740294672049], [-0.0021026829686792148, 0.62442153616194274], [-0.94301525256393903, 0.7585189049994816]]]))
      res=generalTensorProduct(arg0,arg1,offset=2)
      ref=Data(numarray.array([[0.46070078917902513, 0.058537581927444071], [-0.74518002023611196, -1.8368389438660175]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[1.0029608541597337, -0.15026195374089973], [-0.50298299195057006, 0.21077270944283164]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_array_rank4_taggedData_rank4_offset3(self):
      arg0=numarray.array([[[[-0.61546786905714113, 0.34200095706599187, -0.67725239113864366], [0.17407072378649335, 0.84698639438965584, -0.42975648201283567], [-0.57536506925096598, -0.79317715559584712, -0.73361547399143356], [-0.7002702232491993, 0.98896696424550123, 0.65605734602693122]], [[-0.30808828957772616, -0.070763991246238112, 0.60774598069649932], [-0.63600270873331155, 0.90222920400083306, -0.012275760089776711], [0.87283900920781021, 0.056673859347249556, 0.9432602104953689], [0.4343386152088522, 0.7107991114815817, 0.60797773546841971]]], [[[-0.69884981878846908, -0.25757270411503752, 0.11220990577376755], [-0.84541038008283231, -0.19034334027332811, 0.074447637946352785], [-0.92533114503742264, -0.32731062957647827, 0.24029755350320103], [-0.15299749270921947, -0.88849469120659563, 0.60409851902810163]], [[0.71870093649187239, 0.72975851765435706, -0.28581724447909718], [0.664496911158583, -0.42258317841023563, 0.92299811801373566], [-0.98627335468525934, -0.65705514628041994, -0.09471298660013594], [0.74351034831609031, 0.26572364611908172, -0.27564782915741848]]]])
      arg1=Data(numarray.array([[[[-0.96921695920171946, -0.5922961744113111], [0.56190773201135058, 0.76518603343873259], [-0.17647849278961325, -0.50945810515064949]], [[0.31126802113913499, 0.23258593772300729], [0.97455326060444847, -0.28369994849870439], [0.98035521753269084, -0.85511927625213602]], [[0.38339994997336069, -0.65721861891924882], [0.075926095106743086, -0.57399673715209554], [-0.90753911660658404, -0.54289774857786566]], [[-0.62402562744698176, 0.66703809474065334], [0.82414796342391683, -0.57305964310379354], [-0.85623483030897729, -0.13909735365466758]]], [[[-0.62593854542200256, 0.52575575419030862], [0.74899377632797459, -0.039698835476366323], [-0.61817268137373804, 0.57286255922030938]], [[0.91905663496752221, 0.027610009453794548], [0.025214277099854687, -0.087764585983104215], [0.36798094858842911, -0.71891970910694347]], [[-0.22343883963304356, -0.90043265375422066], [0.76482057048380625, -0.2894811449114616], [-0.52726175037652601, 0.15862094154987227]], [[0.53659080546361282, 0.49607298862018956], [-0.37678803022644169, -0.16916353550817376], [-0.24755481351496988, -0.73079475063142141]]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[[-0.59444047512941078, 0.53901487019967731], [-0.31319432109864609, 0.36940660854357721], [-0.6672875825163096, 0.95564332389476592]], [[0.23939308181449048, -0.68257836162101415], [-0.24928289801867032, 0.31742773731707974], [-0.20563742773914284, 0.44419533719687676]], [[-0.87273092703619004, -0.87182077844058625], [-0.63464610808657018, 0.9956113250522074], [0.16620779844743439, -0.13008744379427717]], [[0.4219543335847582, 0.91568937346148371], [-0.89783154145263411, 0.16469762532269905], [-0.056535595551029383, 0.57627853197835277]]], [[[-0.86295991570102748, 0.93732150602472575], [-0.8977138529577815, 0.47639603485582982], [0.23188662733580179, 0.4243051486476237]], [[-0.76772154085180988, -0.84446394855099927], [0.35459670897292916, -0.26919624579062162], [-0.18543153201953366, 0.10806739277464006]], [[-0.90268407049897781, -0.075622028793681517], [-0.6963545495159067, -0.72392206054995811], [-0.13118357172955375, 0.66158888699708829]], [[0.34057044179408491, -0.40966284225674565], [0.35900784813561559, -0.044626226028205318], [0.22461046221218828, 0.15862503012972917]]]]))
      res=generalTensorProduct(arg0,arg1,offset=3)
      ref=Data(numarray.array([[0.8053545834640129, 0.34481884841545885], [-0.26662556839391527, 2.1076275303048049]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[1.1620281025951451, -0.55433761671616688], [1.4794244899203972, 1.3761904293335239]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_array_rank1_taggedData_rank2_offset0(self):
      arg0=numarray.array([0.66484862689771274, 0.72553508726535809])
      arg1=Data(numarray.array([[-0.51221898631706297, -0.51809842019505048, -0.02187182893195061, -0.7962451876597898, 0.12143693258814547], [0.45620444128430182, -0.6046263745508067, -0.5134609878933003, -0.086509872094893803, 0.5733979856537581], [-0.56026806868308721, -0.39193072466011092, 0.60062602131125997, 0.38888432064924983, 0.34665168732642582], [-0.44179592020373004, 0.53383139073126173, 0.41057201198526605, -0.69715124606327605, -0.69175332417877922]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[-0.0041382735503339152, -0.69484345181630047, 0.9593286736949711, 0.19264539868155439, -0.28449996479281303], [0.47632162141551704, 0.89774914930591199, -0.73449846172960198, -0.044225409872406862, -0.41843152689395513], [-0.60194886015824411, -0.1098618632946633, -0.10258058007083726, -0.45778840146333399, -0.062624769043876594], [0.45037818310025113, -0.60866396866914707, -0.73432087482115671, -0.19303524626358159, 0.26259632947310374]]))
      res=generalTensorProduct(arg0,arg1,offset=0)
      ref=Data(numarray.array([[[-0.3405480897238376, -0.34445702326455352, -0.014541455433149031, -0.52938251968952288, 0.080737177885898626], [0.3033068963725063, -0.401985014906246, -0.34137383276640382, -0.057515969675386899, 0.38122286342781547], [-0.37249345615858392, -0.26057460412930028, 0.39932538554782754, 0.25854920660570357, 0.23047089833074946], [-0.29372741091646137, 0.35491706712257576, 0.2729682384110354, -0.46350004868519856, -0.45991124773218972]], [[-0.37163284693652354, -0.37589858250826014, -0.015868779312795768, -0.57770382171336698, 0.088106755482577528], [0.33099232911804988, -0.43867764942265663, -0.37253396265852262, -0.062765947599683736, 0.41602035755907996], [-0.40649414210397733, -0.2843594925182486, 0.43577525278590984, 0.28214921951838295, 0.251507962215062], [-0.32053844151849248, 0.38731340465919345, 0.29788440054444365, -0.50580769014967208, -0.50189130842415208]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[-0.002751325487666626, -0.46196571484893439, 0.63780835144970549, 0.12808002879159389, -0.18914941094494936], [0.31668177595979868, 0.59686728921462529, -0.48833029373940806, -0.02940320302765825, -0.27819362610615944], [-0.40020487313885189, -0.073041508959881124, -0.068200557806467027, -0.30435999012259646, -0.041635991708607739], [0.29943331661888861, -0.40466940381179489, -0.48821222532717323, -0.12833921842120405, 0.17458680907857241]], [[-0.0030024626614694404, -0.50413330444930216, 0.69602661298544111, 0.13977099614369126, -0.20641470678294491], [0.34558804916008401, 0.6513485073840658, -0.53290440552725804, -0.032087086611122945, -0.30358675437958277], [-0.43673501878419446, -0.079708636572628375, -0.074425810113425958, -0.33214154780476879, -0.045436467273221898], [0.32676517437805414, -0.44160706562364882, -0.53277555999414206, -0.14005384424313755, 0.19052285081983106]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2, 4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_array_rank2_taggedData_rank3_offset1(self):
      arg0=numarray.array([[0.95322201885270963, -0.48200264234421142, -0.37020216926657001], [-0.70595367061499514, -0.60747507159722836, 0.80480718386176364]])
      arg1=Data(numarray.array([[[-0.31322950695610285, -0.99499481700580406, 0.58546341180249728, 0.28384135329916638, -0.1984389488706666], [-0.78686313407124264, -0.89653210958071883, -0.80262437307241963, -0.96230437203829622, -0.48621126148303984], [-0.69219670884665785, 0.95556284182638551, -0.046202966615932262, -0.024201411944125617, 0.38164363750859298], [-0.76334599583993712, -0.36949735602723566, 0.084190155548220513, 0.068607556568999639, 0.029669754951712646]], [[0.030986270509970826, 0.96766026127592952, 0.53478944495752323, 0.66397904661804485, -0.79460537857981239], [0.29951865537893085, 0.22451524083321295, 0.15719465627174523, -0.67196781733483513, 0.65466821560762001], [0.79381818886643218, 0.49053548421964632, -0.73636225696901136, -0.83445161304546378, -0.34227808107644764], [-0.6948373185554837, 0.85546741629875278, -0.29047823422142383, 0.69958367831181612, 0.47192056256679682]], [[0.072418924746935343, -0.19448736954170021, -0.15161502091328449, 0.96142366925202483, -0.87117031462984951], [0.36642822255508567, 0.67684254902181573, -0.77753268558809285, -0.0062228787228446603, 0.89280565188288818], [0.29154792964993415, -0.93927842693402508, 0.041070093952475961, 0.67189354145444158, 0.54819065803803935], [-0.59083725800019571, 0.069344530416675099, -0.02946230968310326, -0.53771686934796437, -0.60508705376318628]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[-0.56354100231698689, -0.70490986460644445, -0.67097817037855401, 0.95857752023009191, 0.54446439378400391], [0.16080153145239007, -0.14858740739811749, 0.52435513112404841, 0.32013093642198731, -0.33184072028109024], [-0.56176273620507655, 0.51316092184560369, -0.98702898765093883, 0.59376858435936142, -0.65309467088958595], [-0.2736022409756369, 0.16600692055009292, 0.36151844930580745, -0.98082007027832474, 0.20780486533878828]], [[0.57801309242457211, -0.82473156778595591, -0.012720481006593953, 0.76230058755900809, 0.97881700035566666], [0.10665039307478086, 0.071384350937912844, -0.87092249175846903, -0.83055751456791516, -0.95375591914865665], [-0.49728118783721809, -0.87198976072779733, 0.75622885382502592, -0.36401727314002796, -0.19289550346643725], [0.16475426037693897, -0.67897218363485323, -0.35286923301517503, -0.11066256566767341, -0.48972704669247791]], [[0.68036554365556179, 0.66691199771725995, 0.31121469680603187, 0.70382368348875723, 0.007303501281651803], [-0.2609379113027559, 0.65295747116197367, -0.015430180390434645, 0.77442378963256431, -0.11296582799335697], [-0.49096751497710067, -0.41185842938267281, 0.56380341452230076, 0.24943737026852908, -0.48607875340021023], [0.22850877967859207, 0.73884012848509562, -0.61849192850118895, -0.62805870772334171, 0.49532178198341126]]]))
      res=generalTensorProduct(arg0,arg1,offset=1)
      ref=Data(numarray.array([[[-0.3403223702844016, -1.3428661249414564, 0.35643489943094564, -0.40539695504669626, 0.51635465691149618], [-1.0300765714145763, -1.2133796666887582, -0.55300317808547961, -0.59109572953719092, -1.109537679101928], [-1.1503712848261121, 1.0221470528651806, 0.29568263059379896, 0.13040211708120517, 0.32582868734623605], [-0.17399555309938264, -0.79022206635541914, 0.23117019743369371, -0.072738996422079621, 0.02481944547842313]], [[0.26058540416788833, -0.041934075369783108, -0.86020215895012786, 0.17003111163153528, -0.078332463988673107], [0.66844286703022138, 1.0412504673789538, -0.15464010382647331, 1.0825377841353594, 0.66408440601736385], [0.24107391450339019, -1.7285091997308237, 0.51299237530439656, 1.064738377928093, 0.37969045475694863], [0.48547318781863713, -0.20301813895435741, 0.093312458306060719, -0.90617180079743309, -0.79460385767823971]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[-1.0676563299485886, -0.52130507761666178, -0.74867221658250593, 0.28574924718783973, 0.04449929607563001], [0.19847356998472965, -0.41777050649320058, 0.92532608524314275, 0.41879340730033793, 0.18521518643334137], [-0.11403652391207814, 1.0619285426740668, -1.5140833171314259, 0.64910832065721591, -0.34962066937702929], [-0.42481011527804446, 0.21198762023412565, 0.7436583024200768, -0.64909094243561305, 0.25076470562361464]], [[0.5942683716089886, 1.5353731413273577, 0.7318747011043607, -0.57334756633767081, -0.97309565438381151], [-0.38831059209664409, 0.58703647551030325, 0.14647495348727874, 0.90180720523298175, 0.72273140991312412], [0.3035302077277372, -0.16402241676410789, 0.69115959800767479, 0.0027072949547045921, 0.18703411729359298], [0.2769719076476258, 0.8898893240864324, -0.5386227609103964, 0.25417211896526259, 0.54943489375849952]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2, 4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_array_rank3_taggedData_rank4_offset2(self):
      arg0=numarray.array([[[-0.20115544979504363, -0.10426060898394729, 0.23321087065509727], [0.82881689391239144, -0.59021651882393966, -0.74482747740833122]], [[0.083292845684861172, -0.17116430430443663, 0.05955894127476169], [0.6256115035535379, 0.030493783347750547, 0.36257173345990279]]])
      arg1=Data(numarray.array([[[[0.06400882468549618, -0.25231790485272576, -0.88481418693171499, -0.89872896533103264, 0.30356836951057264], [0.82744828785793545, -0.41112123230833597, 0.055863040996112279, 0.35076577115425578, 0.56370988196498661], [-0.39928198117711378, -0.98234699133660519, 0.19992835360698691, -0.097354804151298602, -0.64149765151343652], [0.85752789322011291, 0.95083977102613382, -0.26352142819452884, -0.83589075322103734, -0.98302534551661158]], [[-0.4555971920642683, 0.64268176344885175, -0.79808901629752227, -0.40720314428976145, -0.76663216671528134], [-0.15506620691027195, -0.087529516693947595, -0.22616631293793654, -0.45536674360059148, 0.67359530765165299], [0.68547933048150989, 0.92718611605211931, 0.28936782965944907, 0.12803237092160002, 0.6249711001717273], [0.46877756894613376, -0.47081665245959647, -0.97362346992708448, -0.34896780061130772, -0.68827999040627796]], [[0.40076937131619927, -0.3788002231033718, 0.77909962910922825, -0.0086251102034939908, 0.21006155678822469], [0.41201467165861017, -0.11218953318580027, 0.85481405246992614, -0.97607140842928586, 0.11467431413459206], [-0.081308549567401966, 0.49994426757353705, 0.66688575333019862, 0.55116191203534548, -0.39133483970082183], [0.60030008843098592, 0.31494153264668534, 0.41127784123378919, 0.40201623277116427, -0.21990382801920405]]], [[[0.40056255472115221, -0.47452333734600716, 0.47473421522536619, -0.17821798793926891, 0.29449277396325568], [0.14014974348771081, 0.46519319912855583, 0.26529870554232637, 0.13424549971514987, -0.3352374089871033], [-0.032403164287071906, -0.11760474652456576, 0.68042233020582876, -0.56189181213484884, -0.44364370901054384], [0.090975354339726922, -0.091417417619367169, 0.29870972560772335, 0.96523897744135967, -0.61511337345955552]], [[-0.57683406853394592, -0.544107682768461, 0.72318743551010045, 0.11531385554559193, -0.75021409139011674], [0.85075533367234346, -0.03460583108605686, 0.16072060205355521, 0.14236821737348504, 0.96388409066918213], [0.55892453688973776, -0.95245273059231872, -0.48190409193064987, -0.17053192632216585, -0.49306096248669062], [-0.66093818083888234, -0.3791663435248136, -0.5947955160169931, -0.59686135867030798, -0.99629344781475515]], [[0.45123927451689139, -0.00023079043286933221, -0.96609902973249717, 0.63960051498495107, -0.45082964506061396], [-0.34593939922137729, -0.30636058181877202, 0.71324906144185385, 0.91748765008496491, 0.24783605815808785], [-0.92459450672605858, -0.06121876373741908, 0.41936488290413454, 0.55040342522471941, 0.39153063657720066], [-0.96084935105307645, -0.2928200413392319, -0.20687690184198471, -0.63184051275385089, 0.26078369392211997]]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[[0.98120809834875899, 0.26617920243837512, -0.025551809426254568, -0.037552784001149364, -0.033986968598348932], [0.40603768535472029, 0.47705066349326897, 0.9455645928092371, 0.49741063043814537, 0.34381856289637769], [0.01060961405479155, -0.65430240866499356, 0.81259523822628688, 0.72331145854880385, 0.086355882347096236], [-0.68898728702530798, -0.014829478859357481, -0.81262523651734897, 0.95538018114569057, 0.37429408436602496]], [[-0.8382948465362603, 0.080834596199491626, 0.63193793966774781, 0.16365252729099433, -0.19256673756218734], [-0.83666574838729346, 0.13305912175455381, 0.76458430637043229, -0.24417922474927201, 0.86030671986479335], [-0.67263248203825943, -0.2483151853416059, -0.0092308857864205063, -0.27123064976135214, -0.81563649857126075], [-0.85690968837383741, -0.067784923047385481, 0.18914087842449856, 0.30419871937760035, 0.74914171038862865]], [[0.20587774316035268, 0.450619024816582, 0.34467783615050362, 0.27735548251050846, -0.72246936529842753], [0.3211573003128565, 0.91144856458654777, 0.41540125250241267, 0.25481920034176331, -0.66326985735203725], [0.83398199294768705, 0.15763273908912367, 0.86219814538120798, -0.35538255215022141, 0.073891808078063503], [0.80962804332580207, -0.084079329886502574, -0.17568296590268018, -0.21938332631256596, 0.48005623047788193]]], [[[-0.74666255256748792, -0.43156374213987281, 0.62897284922345165, 0.16886597738567222, -0.62818588314662449], [0.77583442363108501, -0.41619548664379713, 0.6808789336151162, -0.82039996336200494, 0.96663698437680234], [0.84816088102778453, 0.57914746190234911, 0.9080686099429458, 0.54011108914090711, -0.5342931551205985], [-0.14675849544344555, -0.41508711808093213, 0.92668050598478491, 0.58532432668039336, -0.68447282021523592]], [[-0.50892577819528895, 0.49050230953278406, 0.66588777272999145, 0.69832917328993682, -0.94387968812427459], [-0.74594948153098017, 0.98654549368671129, 0.89775124891782832, 0.15327688814022356, 0.55436001391885603], [-0.70037355161374371, 0.64043700360416356, 0.26649516076660862, -0.77287041653467936, -0.75067270809771247], [0.58388579979978839, -0.95930079777754029, 0.45509662598276468, 0.066258199403117501, 0.085791938753821517]], [[-0.25187405801218121, -0.34643313833975053, -0.30185340525829507, -0.57470259088422959, -0.4718693333845505], [-0.44866959613698842, 0.50051300676940769, -0.30695990654524352, 0.78203730328499366, 0.64089954182796105], [-0.43350108608521531, -0.073580561924833532, -0.88360765618067827, -0.3918977387159448, 0.51412103057562297], [-0.67672207271504026, 0.52053729602280319, -0.9349073508126462, -0.63997953029688448, -0.9911100939502282]]]]))
      res=generalTensorProduct(arg0,arg1,offset=2)
      ref=Data(numarray.array([[[0.46444348853685213, -0.17657131733551781, 1.1290966157468236, -0.47093425211196371, 1.0905133860659175], [-0.18249834133340231, 0.69983203326615262, -0.19452839255356902, -0.90684524297154878, -1.1882253217971495], [0.32180782608519387, 0.72780585135122511, 0.62115745309338255, -0.64023859547872464, -0.39569210998181453], [1.0997906035617753, 0.29739117005037208, 1.0031552175183163, 1.9211781112531385, 0.1021910673041633]], [[0.50379614801032724, -0.46712423191675478, 0.07807971602267233, 0.11824944722197427, 0.1669192939872933], [0.10819567253849852, 0.15295384847211146, 0.52375526109549997, 0.47000699364308296, -0.15199014889647866], [-0.49388947793373128, -0.33556245440258531, 0.56987697829734318, -0.1543623314775518, -0.33433835759949337], [-0.28467490255074918, 0.0036204649399823319, 0.26292636507314826, 0.37062730952423484, -0.29781721487390689]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[-0.19282871464665902, -0.34603897168095399, 0.37275034003870544, 0.21102159079714616, 0.24632963607627767], [1.4979297877072959, -1.1972955902382447, 0.090043110229474116, -1.3680827494324976, -0.31692578477597388], [1.7017141840622438, 0.3510831821100141, 1.2920464575412998, 0.99561184267869152, -0.29780305641158689], [0.45453576429916204, -0.17510440551511242, 1.2985604703804141, 0.64763589538471023, 0.07882464049468374]], [[-0.33648653906175718, -0.34546761608930665, 0.21458972125298689, -0.096052068402981222, -0.60576908991865108], [0.49610433899196588, 0.022423535684276047, 0.31467662369795313, -0.12663076589092154, 0.69589598402722785], [0.51777238478008136, 0.35256485521113712, 0.37646843112549744, 0.25774639167828101, -0.019543442891586327], [-0.18186398291752573, -0.094844383161166557, 0.14412509702426224, 0.15060974075746128, -0.85340511365081695]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2, 4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_array_rank1_taggedData_rank3_offset0(self):
      arg0=numarray.array([-0.28830826619867556, 0.51785028715795067])
      arg1=Data(numarray.array([[[-0.067702749520540229, 0.92793411828539685], [0.10341905614488822, 0.67457913821200655]], [[0.24335712711469193, -0.32655548077163732], [0.92163595348050764, -0.56461270504568173]], [[0.70281949062250915, 0.4949031338984724], [0.89164031858407156, -0.52816005485009465]], [[0.18585167940247938, 0.060040974202638875], [0.470063328222045, 0.46847177881613322]], [[-0.4827557519357013, -0.25037842031504165], [0.37508441154911787, 0.8391653125014622]], [[-0.61493161328444579, -0.4726227710794515], [0.29819516122237832, -0.56382300584954215]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[0.77370685669720074, -0.78659228154590344], [0.48346687966119717, 0.69606325210085473]], [[-0.37494320050678631, 0.92152158030255271], [-0.34260824402042056, 0.21082430573726385]], [[0.96433276722036099, -0.3026491443454391], [0.96957176973519044, -0.12076341653246758]], [[-0.52649849414921435, -0.58994693520606911], [-0.8681962354972832, 0.35048228962873695]], [[-0.38978379796424067, -0.3764469265569601], [0.0031439409462998835, 0.51192267060998753]], [[0.24085097843900827, -0.31908467461996626], [0.7834775485254053, -0.33643091832834005]]]))
      res=generalTensorProduct(arg0,arg1,offset=0)
      ref=Data(numarray.array([[[[0.019519262331150165, -0.26753107678945948], [-0.029816568769036208, -0.19448674175170033]], [[-0.070161871385527527, 0.094148644478945692], [-0.26571526381432836, 0.16278251006546468]], [[-0.20262866879201191, -0.14268466447055955], [-0.25706727432380838, 0.15227290968922816]], [[-0.053582575458640931, -0.017310309173242222], [-0.13552314316327674, -0.1350642863134888]], [[0.13918247383801996, 0.072186168254592897], [-0.10813993637187665, -0.24193829630136632]], [[0.17728986725679302, 0.1362610516959302], [-0.085972129920858426, 0.1625548332594072]]], [[[-0.035059888280594566, 0.4805309496177525], [0.053555587922234589, 0.34933100043385046]], [[0.12602255815827712, -0.16910684949059501], [0.47726944316497255, -0.29238485144093357]], [[0.36395527503907099, 0.25628573000469362], [0.46173619502036806, -0.27350783606948048]], [[0.096243345547361331, 0.03109223573207965], [0.24342242950220802, 0.24259824518533055]], [[-0.24999520476705533, -0.1296585368582984], [0.19423757022918164, 0.43456199805187362]], [[-0.31844251252185213, -0.24474783772088035], [0.15442044986812001, -0.29197590548544428]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[-0.22306608240039708, 0.22678105689775988], [-0.13938749783960347, -0.20068078937780903]], [[0.10809922406109393, -0.26568228908169256], [0.098776788818900202, -0.060782390059650027]], [[-0.27802510815587328, 0.087256250072746233], [-0.27953555588753426, 0.034817091240704201]], [[0.15179386800437353, 0.17008657803848418], [0.25030815137643875, -0.1010469412562032]], [[0.11237789098340507, 0.10853276071145732], [-0.00090642416325874275, -0.14759153759136118]], [[-0.069439328006005066, 0.091994749310251006], [-0.22588305362094829, 0.096995814758871937]]], [[[0.4006643179167208, -0.40733703887477368], [0.25036346246390934, 0.36045655498052465]], [[-0.19416444405036037, 0.4772102149819254], [-0.17741977754865601, 0.10917542726591767]], [[0.49938000042088515, -0.1567269463073937], [0.50209301937761075, -0.062537369929513545]], [[-0.27264739638339924, -0.30550418980441579], [-0.44959566986171989, 0.18149735432801747]], [[-0.20184965170529867, -0.19494314901724977], [0.0016280907218490339, 0.26509930197804704]], [[0.12472474834691381, -0.16523809037965079], [0.40572407348568834, -0.17422084766514395]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2, 6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_array_rank2_taggedData_rank4_offset1(self):
      arg0=numarray.array([[-0.96461849532995259, -0.8659993297919848, 0.53640564380180988], [-0.040321483021674265, 0.88194098878283489, -0.88833259283583987]])
      arg1=Data(numarray.array([[[[0.92355522878680851, 0.68800685011804252], [-0.35435914027371251, 0.84468321698284088]], [[0.34292454898307456, 0.71245359372014505], [0.21721341674729833, -0.26026400634808988]], [[-0.16202493099652537, -0.98136614038307357], [-0.85725738434172749, -0.63737518099150758]], [[-0.31756275107870024, 0.89925117118555442], [0.21115762924963133, 0.34273345404821409]], [[0.28908545866110558, -0.27873486262640812], [-0.9384364179156679, -0.30958792208457164]], [[0.42004254816485531, 0.92940824714251646], [-0.28416393637051929, -0.96144721859954885]]], [[[-0.82305589374618493, 0.33583911012139156], [-0.48452231851359673, 0.95034864436654276]], [[0.1609191448435161, 0.51422308908261494], [0.019477384643793005, -0.51688718250406729]], [[-0.96969459013710391, -0.46031324755998315], [0.20452219128743643, 0.72259889640138586]], [[-0.45466164329288428, 0.46621685835597071], [0.87788999980684723, 0.16467875822998312]], [[0.25986390952809013, 0.61356373498147176], [0.19048624667810699, -0.70470806447934531]], [[-0.3028087578316494, 0.16494292761644203], [0.39118785501856768, -0.83358745752163088]]], [[[-0.98235167763796549, -0.06749602767659324], [0.98493944933424382, 0.57417485666836221]], [[-0.099336772784693217, -0.28240932688051301], [0.16982108069221269, 0.026640475470107283]], [[0.49095487107432834, -0.85832427716922366], [0.89619644536847809, -0.93168603448021692]], [[-0.85379375008844782, -0.44036784129967055], [0.43363915877017645, 0.75900554579177215]], [[0.88465779450791793, 0.61958511392629756], [-0.029005739141984233, 0.74591302319697816]], [[0.76976798260645296, -0.27177624454159655], [0.30922548958859397, 0.112855687934027]]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[[-0.33244902563807899, -0.80768241532344276], [-0.055910392338577974, 0.2148013390726462]], [[-0.55893702924428257, 0.16033477262861395], [0.63132322565968746, 0.49660959731787258]], [[0.31414658833325682, -0.27747064620635542], [-0.12154885398577431, -0.054951326438927639]], [[0.44498909088933436, -0.6367413650432272], [-0.14950359408316749, 0.49597754652117265]], [[-0.97246357881926371, -0.12334010237544635], [-0.74148984795187567, -0.049510683398589439]], [[0.01933628939617682, -0.21458882283421277], [0.27729032138144194, -0.54981647257490862]]], [[[0.13768120625938352, 0.23674808881347809], [0.3635202879867252, -0.54523319840137763]], [[0.91444740650717016, -0.45178034921952848], [-0.67169605241794583, 0.53488299134002104]], [[-0.87214268257116045, -0.11387034478271785], [-0.26448544548312647, 0.45984120545759355]], [[-0.0092187880136218592, 0.37652331297852282], [0.45543376079636144, 0.43657609655352103]], [[-0.65895078552003494, 0.69745935933719516], [-0.39944235686314844, 0.5954872482838609]], [[0.48928184230489524, 0.25361189307894727], [0.64923116558548433, -0.061233367000464556]]], [[[-0.71571172030753072, -0.79162794768463796], [0.14156455957950032, -0.85495728506607893]], [[0.3549375107231747, 0.49591429321842417], [-0.24258541933596511, 0.35893544355848128]], [[-0.31092340781198891, 0.44238778634629727], [-0.75284335775883959, -0.76433343023166955]], [[-0.3114967813177052, 0.66916433308351042], [-0.43777633266033855, 0.043431747176143842]], [[0.081514927013966343, -0.10927509160380522], [-0.87129957803214952, -0.68305315607494554]], [[0.21511490285304102, 0.99674941737047296], [-0.57160380130876587, 0.17625050969603095]]]]))
      res=generalTensorProduct(arg0,arg1,offset=1)
      ref=Data(numarray.array([[[[-0.70505158686408298, -0.99070582700055587], [1.2897444632252126, -1.3298077092405944]], [[-0.52343203959570772, -1.2840487208768299], [-0.1353024951560568, 0.71296952921435841]], [[1.2593980740017128, 0.88486490709972032], [1.1305350788624722, -0.5107079190898598]], [[0.24208379530198088, -1.5073935939686656], [-0.73133221393024306, -0.066083864561787775]], [[-0.029363717836586922, 0.069875972429718769], [0.72471332127640742, 1.3090229025397953]], [[0.26995926084004479, -1.1851471610990028], [0.10121166628262254, 1.7098523768243497]]], [[[0.10952916764161502, 0.32840774159864489], [-1.2879856214325047, 0.29403430394343555]], [[0.21633805626961372, 0.67566064374635793], [-0.14243806415330332, -0.46903536476243329]], [[-1.2848115337254624, 0.39607844809629722], [-0.58117811932442964, 1.4906365684431619]], [[0.37027267759168703, 0.76610972247777065], [0.38051718744406438, -0.5428319387534708]], [[-0.56834207346269405, 0.0019683594051507214], [0.23160352029584694, -1.2716467329726946]], [[-0.96780618163916099, 0.34942250580224316], [0.081767434053480137, -0.79666135470130539]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[-0.18245715956872749, 0.14944801100247218], [-0.1849400985105854, -0.19363367301409917]], [[-0.062359361082538201, 0.5025908182395652], [-0.15742191682067722, -0.7497121168634947]], [[0.2854622984981019, 0.60356426485196324], [-0.057536934831586839, -0.75520787563377545]], [[-0.58834987457553756, 0.64708708566874851], [-0.48501709520523129, -0.8332066873557884]], [[1.5524323596944551, -0.54363896963915359], [0.59380162366921063, -0.83432620492603105]], [[-0.32698104194178218, 0.52203063089700663], [-1.1363246318982145, 0.677932961390036]]], [[[0.7706215851518402, 0.94459370366498341], [0.19710141990012719, 0.26996180714485102]], [[0.51372326062427454, -0.84544537363472982], [-0.40235563481274833, 0.1328571455818976]], [[-0.50564183911934035, -0.48222638580460375], [0.44041576674138405, 1.086750824269197]], [[0.25063969631873806, -0.23669478795348503], [0.79658489262665555, 0.32645396747180311]], [[-0.61435690012734878, 0.71716387831029382], [0.45161719643137688, 1.1339593379198454]], [[0.23964446452220456, -0.65312173101464088], [1.0691771060308763, -0.18840387294183944]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2, 6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_array_rank2_taggedData_rank0_offset0(self):
      arg0=numarray.array([[-0.3892584490959401, -0.33577445592520094, 0.55394562403743186, -0.72254584494657714, 0.67372719753051968], [0.014677243288410136, 0.4280444513920163, 0.0070366694707448829, 0.027462227985203036, 0.87722162869312093], [0.27276707326054117, -0.93879042125255463, 0.99546427933437398, -0.061260432860653635, 0.016977506928772756], [0.50407957563580386, -0.04030245615703465, -0.23999141800007728, -0.54091629978512157, -0.25122928009656742]])
      arg1=Data(-0.945239857493,self.functionspace)
      arg1.setTaggedValue(1,-0.286469622324)
      res=generalTensorProduct(arg0,arg1,offset=0)
      ref=Data(numarray.array([[0.3679426009514663, 0.31738739886859013, -0.52361148272411795, 0.68297913150959866, -0.63683380018303426], [-0.013873515354329666, -0.40460467623453988, -0.006651340447753569, -0.025958392467178792, -0.82918484729582898], [-0.25783030945762825, 0.88738212400073591, -0.94095251353758402, 0.057905802827175334, -0.016047816229942793], [-0.47647610623921455, 0.038095487914500945, 0.22684945374998147, 0.51129564612463152, 0.23747192891659594]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[0.11151072089904668, 0.096189181575030966, -0.15868859370618749, 0.20698743531381955, -0.19300237582615964], [-0.0042045843415923394, -0.12262173232827206, -0.0020157920457050372, -0.0078670940791042265, -0.25129734866640302], [-0.078139480459444854, 0.26893493741786562, -0.28517027613822393, 0.017549253065013003, -0.0048635399978932802], [-0.14440348565376915, 0.011545429394046335, 0.06875025087554916, 0.15495608810848766, 0.071969556986062971]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_array_rank3_taggedData_rank1_offset1(self):
      arg0=numarray.array([[[-0.32172363035345031, 0.14499624949202183, -0.45611378928770696], [0.56406557247396893, -0.14353446769287914, 0.3925299170507961], [0.91800570446354079, -0.8242550750499964, -0.18953471105491149], [0.033358006966433873, 0.26074211199858421, 0.476071556546799], [0.39683919195503581, 0.96976017580404839, -0.66744478808777208]], [[-0.08032318878323963, -0.060702805719327735, -0.96465904355518695], [0.48031114267932895, -0.050099798155710529, -0.075567260700116101], [0.21151748581138952, -0.27607101910529419, -0.64806739705491623], [0.54237082457705887, 0.37723009166313926, -0.079221030456413155], [0.4691460968199419, -0.23642008788996471, 0.20046866106345407]], [[-0.79899416232988663, -0.37072171768814655, 0.51481993615742017], [0.29449526313966978, -0.41927604915786043, -0.84624291379545036], [0.80170474982347284, 0.25841996076897167, 0.079542409118780411], [0.080543009159201429, -0.31569641023103601, 0.3146334686490142], [-0.22736254847266713, 0.61404600670169107, -0.91025061278305319]], [[-0.080364959730342855, 0.68095888792923254, -0.9188976511741378], [-0.92344259901949965, -0.80745521132215958, 0.57707834414708925], [0.477510166859765, 0.17356017984827488, 0.54469285528980405], [-0.15673711707838667, 0.17897824162100751, -0.1828288701177998], [0.095795110018410234, -0.15108268926816915, -0.68843761318710617]]])
      arg1=Data(numarray.array([0.096764415194981357, -0.53029956611873641, -0.21595031634951312]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([0.709317644235822, 0.34185637918602718, 0.81199180756327682]))
      res=generalTensorProduct(arg0,arg1,offset=1)
      ref=Data(numarray.array([[-0.0095249300519657243, 0.045930781428916004, 0.56686247461977279, -0.23785136406684149, -0.33172857499875019], [0.23273667077110455, 0.089363701911464283, 0.30681806687736146, -0.13045495168827814, 0.12747884695477538], [0.0081038351025302796, 0.43358499381045501, -0.076640710208902424, 0.10726216946119593, -0.15106002718320918], [-0.1704524326801645, 0.21421651418718118, -0.16345949043633964, -0.070596707009989157, 0.23805696272109167]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[-0.54899701494867004, 0.66976456651662353, 0.21548015557736513, 0.49936398095688467, 0.071044043229091969], [-0.86102153687351701, 0.26220623602156268, -0.47056897139656301, 0.44934488112988524, 0.41473079944255037], [-0.27544467054642907, -0.62158381896607184, 0.7215936211736268, 0.204687544721077, -0.69047276317469775], [-0.57035150885553998, -0.46246495605138044, 0.84032517744300006, -0.19844709373841976, -0.54270512126968018]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_array_rank4_taggedData_rank2_offset2(self):
      arg0=numarray.array([[[[0.34394142670491901, 0.42181785763440138, -0.78053682698696836], [-0.21339997592323345, -0.25562372239682252, 0.37851419787675078]], [[-0.90903384152478717, -0.78901523864928036, -0.85972464421312922], [-0.60874105736015882, 0.87895662304292199, -0.91924490466595921]], [[-0.26010492366888904, -0.33304325039617821, -0.56061112482850928], [-0.8831997202589954, 0.59692575176610174, 0.4297534428119838]], [[-0.98297094637089777, -0.61755457981928341, 0.76652377626228785], [0.48310116073776732, -0.41977320248746142, -0.26493812422923946]], [[0.59948677069099898, 0.83106531027612962, -0.55831956801788296], [-0.80926577711085401, 0.16423627369625726, 0.64943473539690921]]], [[[0.60106824562496053, -0.067641295547717251, -0.88618637595206273], [0.92444262005463251, -0.026049792677669936, 0.79344758817061778]], [[-0.98368629659098095, -0.057525167303634328, 0.61260839864426941], [-0.45575307302007362, -0.91573103026900915, -0.0005366725202806677]], [[0.26291472884239275, -0.52596042952849364, -0.64751584546129037], [-0.074417820048855443, 0.28672617905052689, -0.14303430832454711]], [[-0.54100510321841155, 0.26684883293285244, -0.7446117628259743], [-0.25415023481085242, 0.3069962355525897, 0.7058869685782212]], [[-0.66608658382621733, 0.37518004777645664, -0.30208329639878961], [0.90585453729478815, -0.79849785406077722, 0.38714006068582885]]], [[[0.68982021045953235, -0.069134518433657144, -0.092494954721243028], [-0.047968254539919597, -0.89840935363937979, 0.74913248541370669]], [[0.50330424341259161, -0.88835387914840469, -0.093176844280321136], [0.71037947004371027, -0.14024272069589827, -0.19419207191705956]], [[-0.48595552662549535, 0.59180666107469526, -0.48390535342607732], [0.47499108984307958, -0.33346753162158604, -0.72265698339587536]], [[0.47409543906098328, -0.59901741170413847, -0.28700914492164875], [0.24931557956873718, -0.47221932344089157, 0.41262174310096777]], [[-0.64994446871361622, 0.88638041231936837, -0.0030157682651761331], [0.48189478968277877, 0.23056139766060935, 0.88323073629279136]]], [[[-0.6065224118758521, -0.5004568738888262, 0.60805360921696017], [0.43243425271086489, 0.46744736881152971, 0.57125340750980924]], [[-0.11513469999721182, -0.2303049507029491, 0.30451179750693202], [0.51880307538501502, 0.99649402950333421, 0.30571594821796322]], [[0.84479162813785269, 0.48016393111996392, 0.19160227116354855], [0.73826679933103456, 0.62800508822190859, -0.48618883903375498]], [[-0.88938478603580773, -0.4496096452212639, 0.42508575884863764], [-0.1489201846211381, -0.18500101610795916, -0.33969169544003575]], [[-0.21543886054319206, 0.93365614743230707, -0.67477086868569769], [0.15609116682528024, -0.32562832877017756, -0.37696736348528348]]]])
      arg1=Data(numarray.array([[0.416301626002056, 0.95180601572720858, 0.82466132418882032], [0.80681126538239512, -0.72771350887478303, 0.38703615287081283]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[0.2628734536927313, -0.33499940834651487, -0.47506070215672391], [-0.21931025455150177, 0.43880363489548091, 0.5729696203998329]]))
      res=generalTensorProduct(arg0,arg1,offset=2)
      ref=Data(numarray.array([[0.061339626626125493, -3.3249521430293214, -1.8682252824890153, 0.22782340152160929, 0.059068745757442365], [0.52694107383205868, 0.33940686420283583, -1.2491968441202654, -0.74053830565874701, 1.292457807730655], [1.050118263026993, -0.11281420208299336, 0.30812564579608959, 0.095023515762209826, 1.1334600096952978], [0.0024249479137856689, -0.20428017476318658, 0.91717955564578513, -0.56463742381595772, 0.45951479912270909]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[0.47141603181717784, 0.42627327909139301, 1.0113825389280993, -0.85761041414978756, 0.76607258789768329], [0.84210787498585871, -0.83252257239257232, 0.61310183500593496, 0.71702631096523306, -0.4845011282464296], [0.29396095796712501, 0.14556932996626556, -0.76067295123865319, 0.43617505456861494, 0.035193702160263407], [0.15694292753133937, 0.4008768962315078, -0.19471404815638724, -0.52827064082611574, -0.44196042662507129]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_array_rank2_taggedData_rank1_offset0(self):
      arg0=numarray.array([[-0.20638740454294613, -0.46982967124083563, 0.61274231631602594, 0.59055732442665998, -0.62101753905962465], [-0.92022976426769731, -0.83164439946045299, -0.31845096911905091, 0.42772928890422524, -0.49576097264016106], [0.010195000771948015, -0.95999569921397554, 0.40243901535163817, -0.087677977862951284, 0.72857983178155061], [-0.052645968656485964, -0.19822425590114379, -0.42613204525544024, 0.98161872665017036, -0.50009635161373756]])
      arg1=Data(numarray.array([0.82859455535615578, -0.63395112558791578]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([-0.19989299907040969, 0.43791619466699894]))
      res=generalTensorProduct(arg0,arg1,offset=0)
      ref=Data(numarray.array([[[-0.17101147969837349, 0.13083952741716923], [-0.38929830753492906, 0.29784904891772818], [0.50771494713577847, -0.38844868112389136], [0.48933258364562937, -0.37438448054446904], [-0.51457175164548374, 0.3936947678966865]], [[-0.7624973723488927, 0.58338069485700916], [-0.68909602138537129, 0.52722190312684047], [-0.26386673915993686, 0.20188235031758492], [0.35441415995240122, -0.27115946414775238], [-0.41078484268770954, 0.31428822662779005]], [[0.0084475221314879306, -0.006463132214746114], [-0.79544720953402592, 0.60859035407625806], [0.33345877698325976, -0.25512666676266355], [-0.072649495081878984, 0.055583552755490331], [0.60369728175649673, -0.46188400443856836]], [[-0.043622162990215103, 0.033374971087445408], [-0.16424753917921309, 0.12566449014735717], [-0.35309069256144077, 0.27014688973876699], [0.81336393233797377, -0.62229829665805214], [-0.41437711410062061, 0.31703664500793904]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[0.041255397264447401, -0.090380386824645456], [0.093915662036595252, -0.20574602177143389], [-0.12248289926576006, 0.26832978347255665], [-0.11804827470264198, 0.2586146162456473], [0.12413705835795366, -0.27195363752645518]], [[0.18394748741332614, -0.40298351658741949], [0.16623989316825977, -0.36419055072784318], [0.063656119274085515, -0.13945483658463276], [-0.085500090349319297, 0.18730958254455973], [0.099099147643105123, -0.2171017586029895]], [[-0.0020379092798298308, 0.0044645559426785917], [0.19189641941057653, -0.42039766349646907], [-0.0804447417215816, 0.17623456218832337], [0.017526213947454322, -0.038395606421840998], [-0.14563800763702875, 0.31905690744489884]], [[0.010523560563711766, -0.023054522258606432], [0.039623641000579989, -0.0868056118349263], [0.085180812526117491, -0.18661012368392776], [-0.19621871121377926, 0.42986673738850761], [0.099965759548240121, -0.21900029126553744]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_array_rank3_taggedData_rank2_offset1(self):
      arg0=numarray.array([[[0.42755025064893437, -0.28215544807457271, 0.30981263016541205], [-0.72628827469501189, 0.18289260582950018, 0.12961604333074539], [0.22884007759478453, -0.14789371345617308, 0.87255923698023485], [-0.84973208273614453, 0.76887809306454225, -0.48984860182559653], [0.78555581135814867, -0.32758380456486935, 0.052588360850076787]], [[-0.40981427009095772, 0.36768280837279388, 0.52107289203710594], [-0.69467790563691323, 0.21709929167288577, 0.6842873048643725], [0.7537219893748075, -0.18136604297427361, -0.5074278384153903], [0.12775029577949648, -0.49553225168880832, 0.42637231271498632], [0.92563798043710843, -0.32028382833624458, 0.42405325823388251]], [[-0.61424144461332775, -0.26841376712118969, 0.46903796892346539], [-0.74867582255602305, 0.36399532336283857, 0.98443512517672316], [-0.51827247943733923, 0.8632431190107035, -0.1426266789655839], [-0.74220887454679074, 0.38296298321562072, 0.16038704163831774], [0.92931648050543325, 0.32730270971029629, 0.20311810123090357]], [[0.55637022912337919, -0.59716175984911546, 0.76585232270996739], [-0.92236850733908815, 0.14133291962252259, -0.14108294052082559], [-0.2574358002206949, 0.52547314126271072, -0.53118509022417459], [-0.070006870815329414, -0.88913284281045457, -0.73060433594114205], [-0.93492520324576889, 0.11497007562327499, -0.66300948139030802]]])
      arg1=Data(numarray.array([[0.15176526988904859, -0.29595753284131221], [-0.70585048133843342, 0.85795688884304377], [-0.10600582704861039, 0.37407844797358725]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[-0.093552243615000252, 0.84278948392042397], [-0.92637043494223814, -0.62544883433330911], [-0.76373622773095295, 0.42906183258782926]]))
      res=generalTensorProduct(arg0,arg1,offset=1)
      ref=Data(numarray.array([[[0.23120489392577459, -0.25271969989302634], [-0.25306022575637721, 0.42035102532182655], [0.046624461402577186, 0.13179223007811403], [-0.61974598478489051, 0.72790706269497529], [0.34487060316942514, -0.4938717692302842]], [[-0.37696142344754585, 0.63166575738622754], [-0.33120606105149697, 0.64783412489706171], [0.2961964375493284, -0.56849176464861673], [0.32396178685066335, -0.30345727833963465], [0.32160007596490536, -0.3901100652022117]], [[0.046518710288640769, 0.12695893741028041], [-0.47490512209027946, 0.90212450828421198], [-0.67285707472072653, 0.84065845834834052], [-0.39995809719393882, 0.60822537259665688], [-0.11152051102566365, 0.081755505797582603]], [[0.42475978474157627, -0.3905121577175833], [-0.22478780100563928, 0.34146337238746338], [-0.35366656858519557, 0.32831847160891314], [0.69441855030493438, -1.0154219228890191], [-0.15275799059902262, 0.12731996714531524]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[-0.015232949518136141, 0.66973742605112441], [-0.20047287318784265, -0.67088479024763337], [-0.55080923915148827, 0.65974582684298366], [-0.25865646736058256, -1.407214509321334], [0.18980980653924268, 0.88950874403591618]], [[-0.70023368361791327, -0.35178145112506409], [-0.65874069349185671, -0.42765016745235435], [0.48504078010289758, 0.53094622835398531], [0.12145911901035028, 0.60053676090221142], [-0.11375887628490222, 1.1623841710111176]], [[-0.052107045590758572, -0.14855086184366645], [-1.0190029720284706, -0.436253021943599], [-0.64226818859659884, -1.0379046622595376], [-0.40782367404119113, -0.79623362777678797], [-0.54527184774974335, 0.6656572834873723]], [[-0.083765847958285344, 1.1709951059512218], [0.063113157869583644, -0.92629229312233707], [-0.057013788689795508, -0.77353199714178134], [1.3882046776445547, 0.18363161030240444], [0.48732383168226578, -1.1443250924379207]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_array_rank4_taggedData_rank3_offset2(self):
      arg0=numarray.array([[[[0.6446513576364028, 0.80028804838252299, -0.14360652937626761], [0.32302010953836713, -0.60604301917287318, 0.5134766598938918]], [[-0.19580528894333993, 0.99422108250674168, 0.038214245374039724], [0.19589109134359961, 0.7505908134810837, 0.29158432744876039]], [[-0.36723230223067849, -0.93326043575299278, -0.62645429881920012], [0.94644308742651662, 0.74368884950369196, -0.60826123233240215]], [[-0.81573856941822442, 0.8841849749987456, 0.36237815646150251], [-0.74159572037253185, 0.60984108812104543, 0.589596356918068]], [[-0.78843485947541514, 0.4111284112397513, -0.55161605208043873], [-0.51028668061112259, -0.98732626866358797, 0.47705400586186664]]], [[[-0.1766026414717401, -0.38285517652364454, 0.71825911131865916], [0.72938956683799638, 0.15483132795919108, 0.97641123799618801]], [[-0.011286708295776604, 0.19452785900201608, -0.70912898541553271], [-0.91778721168094557, 0.26311626496118157, -0.76995304223547545]], [[0.048559305085811744, -0.12641830968371126, 0.66981820192244035], [-0.49053403582962662, -0.9819926749063701, 0.00010572712329492973]], [[0.36888442432725776, 0.0052647747818306279, -0.86247272133228803], [0.59292352989852137, -0.13388840094145849, -0.45354959536044626]], [[0.5902506282477884, -0.46413945778632071, -0.15279521399471552], [-0.27418596263846706, 0.91315283309755779, -0.25385906672411296]]], [[[0.87973752850541231, -0.24753415270333012, -0.3321949064471732], [0.81408819781812136, 0.34502077804447984, -0.10291635981290703]], [[0.29441983963832752, -0.60375817169409229, -0.7152568662238592], [-0.887307545278464, 0.69906752840147113, 0.05848532257691641]], [[-0.84967154412476509, 0.35087886838912419, 0.036102452676464614], [0.83726275694075913, 0.96944086593539303, 0.28282705297688482]], [[-0.89782755121886271, 0.11540215173671209, -0.1192345607042582], [0.44248313300899444, 0.44386524392427029, 0.1103615588836353]], [[-0.35875597823354233, -0.36467473494987779, 0.9650274689160292], [0.10968307586687986, 0.22941547717903199, 0.43273310992979908]]], [[[-0.90154945908529971, -0.46451295367949852, -0.81398919952822912], [0.18275229132820936, -0.12197220442451617, -0.22848150824543878]], [[0.82893248829801891, -0.71227718889552416, 0.35266254481389758], [0.49074642871667318, -0.27459280301816746, 0.73348581034901317]], [[-0.94431103927943738, 0.74129811715390326, 0.392460128373191], [0.76150054683136537, 0.59849843819543813, -0.1206193839256422]], [[0.30923022856451166, -0.96914430247262828, 0.96234737367655687], [0.54252606723144203, -0.63943874596282768, 0.36440143174735939]], [[0.96775783223731193, 0.48070358857609086, -0.75690885877994374], [-0.6745342962753158, 0.22436230260793111, -0.80538877647492479]]]])
      arg1=Data(numarray.array([[[0.25844500961342676, -0.24057576647031964], [-0.4557699928422243, -0.44332305123307236], [-0.4003119865366993, -0.73083691857074462]], [[0.51899190049650712, -0.15001177493549744], [0.10509905236496708, -0.22779166263021811], [-0.27868125954458356, -0.1192892142667259]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[-0.24234882833461246, -0.99048408132677723], [-0.88689279477074456, -0.95029799025034922], [0.31361448341549303, 0.96572893160361706]], [[-0.67081795212362727, 0.19415851959805575], [0.26462840562762802, -0.91137043638672455], [-0.54215522435513841, 0.67875609105144941]]]))
      res=generalTensorProduct(arg0,arg1,offset=2)
      ref=Data(numarray.array([[[-0.17979898549265788, -0.37657818083974842], [-0.41974547056010975, -0.65673066274350334], [1.3200882074285079, 0.72109426347490846], [-1.2439707690626269, -0.55857309587630433], [-0.67187625087518588, 0.65510330010716189]], [[-0.035963512306954631, -0.57387707332754134], [-0.041803497008610052, 0.60432455767420346], [-0.55578782810394323, -0.14790289857194006], [0.85824171870762056, 0.53490498206578274], [0.4496708903376449, 0.038837276126462969]], [[0.96061141449142351, -0.047564493043498787], [0.23425923504379673, 0.68645391741405648], [0.063635632142889961, -0.35769534869071135], [0.0086344162995526837, 0.071324710494647586], [-0.35238158492590838, -0.57763406961539476]], [[0.4502610508330297, 1.0453382456638425], [0.41911821913206471, -0.23995571722824288], [-0.24729181023606536, -0.62445895341993318], [0.24919709077631394, -0.32726392283973205], [0.23197078768452847, 0.25340529353670216]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[-1.5664852326111789, -0.57414180429287098], [-0.91319336825572539, -1.1620773870970198], [0.61191731867845811, -0.26124883367810792], [-0.13363270658959539, 0.018109785362887876], [-0.52414777626370923, 0.98207287199569615]], [[-0.37007390097060877, 1.8956457928337405], [0.71054708343665918, -1.7991094147993127], [0.37955444762292662, 1.5186901568244755], [-0.55183207534405954, -1.2739985800010647], [0.7838826641440928, -1.3488862405035746]], [[-0.49685427392356929, -1.1831797258155898], [0.98830838918575459, -1.1783027653772415], [-0.5523982466355849, 0.014024375697666014], [-0.16135493999032618, 0.4207639887839465], [0.46554203630743651, 1.7397803540127461]], [[0.34418546003658312, 0.53986475417900315], [-0.25810696283901607, 1.0398038938617242], [-0.59257222524953734, 0.13040793630310121], [0.35567956862079175, 2.479496283450457], [0.05026297986769801, -3.028435452767507]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_array_rank2_taggedData_rank2_offset0(self):
      arg0=numarray.array([[-0.86736935003086435, 0.84535952205984666, 0.18654935911191228, -0.97290443815535044, -0.041146078452910961], [0.7715753639040086, -0.9016974914949285, -0.37705471864412687, 0.036699168751018529, -0.18786439329735716], [-0.078656941195251573, -0.78154725219550381, -0.13304107060699821, -0.92478925432589887, -0.99685724223988914], [0.14499199361245219, 0.46757568422600482, -0.69195411677140495, -0.88566041750293123, -0.62741454349407322]])
      arg1=Data(numarray.array([[-0.59222744720075426, 0.41594254787990481, -0.47337739967064918, -0.95528482283443772, -0.19737685412720185], [0.046286272318936117, 0.38529318753412012, 0.35544746009379469, -0.92311602992588226, -0.81148384650552652], [0.53414350723379234, -0.90813290473925878, 0.37531695853840685, 0.71460321617606404, 0.52658026888255094], [-0.46003086980639218, 0.05069994221038443, 0.92651004111077029, -0.13634797345474858, 0.26561273167238997]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[-0.22932975435162972, -0.46088679837245783, 0.27362719346863673, -0.3475766380511458, 0.83715896373429], [0.0060625596157315442, -0.58774624531312769, 0.73802945018602162, -0.43159817378079657, 0.36762242847379323], [-0.40298914046960577, 0.36413753237448954, 0.75352858501328335, 0.99216000271882598, -0.09067551717619815], [0.046971777975209905, 0.2331976311861359, -0.68597585256510385, 0.95860115472180629, -0.080016842972410851]]))
      res=generalTensorProduct(arg0,arg1,offset=0)
      ref=Data(numarray.array([[[[0.51367993594895622, -0.36077581740477471, 0.41059304747163167, 0.82858477587625567, 0.1711986336754478], [-0.040147293936627207, -0.33419150164278971, -0.30830423243167632, 0.80068255087988438, 0.70385621650404417], [-0.46329970669258075, 0.78768664732533178, -0.32553842638301883, -0.61982492714459791, -0.45673958555973598], [0.39901667653810358, -0.04397557592162353, -0.80362641215531827, 0.11826405311347082, -0.23038434243060327]], [[-0.50064511171635273, 0.35162099348011122, -0.40017409233951301, -0.80755912126234553, -0.16685440307064742], [0.039128541045467743, 0.32571126486675867, 0.3004808949822767, -0.78036492586392692, -0.68599559664119791], [0.45154329998652892, -0.7676987983172, 0.3172777646909829, 0.60409663328902674, 0.44514964442869881], [-0.38889147623230724, 0.04285967891543243, 0.78323408553704965, -0.11526305767353492, 0.22453825189958188]], [[-0.11047965072378457, 0.077593815734372129, -0.088308250526623167, -0.17820777146910102, -0.036820525640954907], [0.0086346744367769793, 0.071876197204675946, 0.066308495878454415, -0.17220670376860617, -0.15138179149527536], [0.099644128948253044, -0.16941161136754801, 0.070015138079171951, 0.13330877199695607, 0.098233211681018326], [-0.085818463934078021, 0.0094580417263582049, 0.17283985437996571, -0.025435627064191377, 0.049549884865448673]], [[0.5761807117790273, -0.40467235085000375, 0.4605509730620137, 0.92940084383807209, 0.19202881736949587], [-0.045032119764760091, -0.37485345214296723, -0.34581641145629965, 0.89810368244723815, 0.78949623575660188], [-0.51967058879962114, 0.88352653345573495, -0.36514753467698369, -0.69524064053778001, -0.51231228064087153], [0.44756607492310513, -0.049326198790702797, -0.90140573099216459, 0.1326535485076128, -0.25841580547463444]], [[0.024367837004489419, -0.017114404706970236, 0.01947762362468352, 0.039306224265220922, 0.0081212835247066097], [-0.0019044985921277465, -0.015853303721651044, -0.014625269078907214, 0.037982604588470054, 0.033389378011586347], [-0.021977910653754634, 0.03736610774407146, -0.015442821020729219, -0.029403119995482823, -0.02166671305519639], [0.018928466259814682, -0.0020861037997465296, -0.038122254838953512, 0.0056101844126645066, -0.010928922295484146]]], [[[-0.45694810808786401, 0.32093102274359808, -0.36524633941481444, -0.73707423481045764, -0.15229111804942419], [0.035713347408243175, 0.29728273138137418, 0.27425450337062524, -0.71225358671568628, -0.6261209441697263], [0.41213197097087678, -0.70069297644739803, 0.28958531886361699, 0.55137023656802153, 0.40629636258772495], [-0.35494848577794463, 0.039118826360889571, 0.71487232213076057, -0.10520273723592174, 0.20494024009766207]], [[0.53401000353536532, -0.37505435202931936, 0.42684321381341656, 0.86137792841298966, 0.17797421424565835], [-0.041736215640635843, -0.34741790068960116, -0.32050608312481838, 0.83237140854292535, 0.73171294878268889], [-0.48163586057101376, 0.81886116214739246, -0.33842236002958753, -0.64435592744016501, -0.47481610752212117], [0.41480868131465387, -0.045716010710041478, -0.83543177991444462, 0.1229446256345639, -0.23950233385810957]], [[0.2233021534776099, -0.15683310036297879, 0.17848918224530502, 0.36019465009884349, 0.074421874199794971], [-0.017452457386301894, -0.14527661442117648, -0.13402314205843527, 0.34806525493958695, 0.30597381342839514], [-0.20140132983562473, 0.34241579688793489, -0.14151503020406841, -0.269444514617454, -0.19854957512705892], [0.17345681018246217, -0.019116652445409991, -0.3493449828719799, 0.051410646768677105, -0.10015053380903097]], [[-0.021734255023805396, 0.015264745755373231, -0.017372557073431497, -0.035058158918487868, -0.0072435664771593484], [0.0016986677186882342, 0.014139939707932503, 0.013044626320103095, -0.033877590959020223, -0.029780782621631936], [0.019602622709233831, -0.033327722719378693, 0.013773820396520017, 0.02622534402046595, 0.019325058148677448], [-0.016882750521702621, 0.0018606457348457855, 0.034002148348237275, -0.0050038572866752135, 0.009747766462064043]], [[0.11125845006241232, -0.078140794404015251, 0.088930757989807069, 0.17946400366796497, 0.037080082951547744], [-0.0086955424671931909, -0.072382870917702333, -0.066775921439607311, 0.17342063290509085, 0.15244892049436645], [-0.1003465459201989, 0.17060583718220748, -0.07050869271002716, -0.13424849965525643, -0.098925682735979639], [0.086423420254233371, -0.0095247138835649406, -0.17405824675718429, 0.025614929310400502, -0.049899174687687266]]], [[[0.046582799488683685, -0.032716768529192787, 0.037234418289055354, 0.075139782134404684, 0.015525059608387064], [-0.003640736599937959, -0.030305983594802324, -0.027958409966599138, 0.072609483282274206, 0.063828837195481755], [-0.042014094438313838, 0.071430956485548883, -0.029521283937336142, -0.056208503152698319, -0.041419193244074573], [0.036184621074361822, -0.0039879023730448613, -0.072876445820459976, 0.010724714530121882, -0.020892285015865313]], [[0.4628537340345073, -0.32507875536673636, 0.36996680596404863, 0.74660022835032347, 0.15425933799010738], [-0.036174908945237332, -0.30112483200693851, -0.27779898573617623, 0.72145879664619572, 0.63421297043743219], [-0.41745839035663962, 0.70974877632728894, -0.2933279376480657, -0.55849618001247248, -0.41154736220552723], [0.35953586222229339, -0.039624400520996791, -0.72411137676166581, 0.10656238399598425, -0.20758890058669804]], [[0.078790573618437859, -0.055337441880945151, 0.062978636053340045, 0.12709211556451019, 0.026259227986124248], [-0.0061579752237183264, -0.05125981816712228, -0.047289110635416721, 0.12281234491582117, 0.10796067971938025], [-0.071063024060160629, 0.12081897389995411, -0.049932569980912007, -0.095071576939267738, -0.070056802732655563], [0.061202999431311023, -0.0067451745913824843, -0.12326388779751081, 0.018139880363514323, -0.035337402188544101]], [[0.54768557928811623, -0.38465919869627163, 0.43777433245615266, 0.8834371389779081, 0.18253199374948673], [-0.042805047263354427, -0.35631499959652768, -0.32871399157217507, 0.85368778497144082, 0.75045154130735803], [-0.4939701757577592, 0.83983155180263169, -0.3470890902225976, -0.66085737542635137, -0.48697577420262561], [0.4254316050551481, -0.046886761751107585, -0.85682653004428722, 0.12609314070006439, -0.24563580006277458]], [[0.59036621979531345, -0.41463534120979495, 0.47188968917437313, 0.95228259404435867, 0.19675654648722732], [-0.046140805777419178, -0.38408230437907942, -0.35433037483027324, 0.92021489985935001, 0.80893354934971662], [-0.53246482358142055, 0.9052788630056775, -0.37413742825445906, -0.71235739137302656, -0.52492535465619905], [0.45858510422041759, -0.050540604573565573, -0.92359824448924877, 0.13591946480309827, -0.2647779751987423]]], [[[-0.08586823824165063, 0.060308339245350243, -0.068635932909325986, -0.13850865093048331, -0.028618063572857157], [0.0067111389004114079, 0.055864427385868484, 0.05153703586348183, -0.13384443351456574, -0.11765866068913743], [0.077446531988974832, -0.13167200032321225, 0.054417954055045667, 0.10361174495523767, 0.076349922982262175], [-0.066700792936499234, 0.0073510856971197545, 0.13433653796260561, -0.019769364496221707, 0.038511719494029144]], [[-0.2769111538423128, 0.19448462142365427, -0.22133976154813073, -0.44666795466753001, -0.092288617618902752], [0.021642335449797743, 0.18015372578888461, 0.1661985893597516, -0.43162660931258756, -0.37943011476817184], [0.24975251586971842, -0.42462086430160817, 0.17548908369021868, 0.33413108775362677, 0.24621612952267236], [-0.21509924871480796, 0.023706060169239401, 0.43321356641463227, -0.063752996980933216, 0.12419405475085596]], [[0.40979422015558176, -0.28781315834588733, 0.32755544048864843, 0.66101326584953135, 0.13657572676870638], [-0.03202797668109017, -0.26660520727821135, -0.24595333330784092, 0.63875393716488971, 0.56150958828299391], [-0.36960279877713931, 0.6283863020099042, -0.25970211455477332, -0.49447263729111374, -0.36436938486387449], [0.3183202542044633, -0.035082033732547833, -0.64110243717664117, 0.094346541545451523, -0.18379182314760878]], [[0.52451240814451516, -0.36838385061254947, 0.4192516254287591, 0.84605795502576175, 0.17480886703171275], [-0.040993919266643329, -0.341238925332504, -0.3148057459070267, 0.81756732846780522, 0.71869912229296917], [-0.4730697616231605, 0.80429736755952164, -0.33240337419505572, -0.63289578278743031, -0.46637130078732586], [0.40743113221696592, -0.044902931985423562, -0.82057326983082279, 0.12075800309561122, -0.23524268282706295]], [[0.37157211343012159, -0.26096840379783215, 0.29700386511477178, 0.59935959102548531, 0.12383710882851463], [-0.029040680417027662, -0.24173854936809633, -0.223012905910876, 0.5791764225080086, 0.50913676710807954], [-0.33512940475141301, 0.56977579185892868, -0.23547931820695855, -0.44835245065650176, -0.33038411901393205], [0.288630058172759, -0.03180988109710424, -0.58130587448618898, 0.085546701521453092, -0.16664929078844631]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[0.19891359997471086, 0.39975908274212479, -0.23733584094966101, 0.30147732263233534, -0.72612602624672307], [-0.0052584783934204364, 0.50979307878032853, -0.64014412451148572, 0.37435502746675758, -0.31886442684208194], [0.34954042883861863, -0.31584173477750382, -0.65358759901264851, -0.86056917668484867, 0.078649164396831464], [-0.040741880532151886, -0.20226847779065593, 0.59499442937626212, -0.83146126050988911, 0.069404157080501738]], [[-0.19386609153279574, -0.38961504359583388, 0.23131335349322393, -0.29382722062208494, 0.70770030147053586], [0.0051250424992141455, -0.49685688503037501, 0.62390022327534667, -0.36485562590923681, 0.31077312043308603], [-0.34067070718269432, 0.30782713033215042, 0.63700256448526171, 0.83873190570528289, -0.076653411862600287], [0.039708039779424678, 0.19713583804500023, -0.57989621886903198, 0.81036261400164333, -0.067643000131895031]], [[-0.042781318699588802, -0.085978136859523144, 0.051044977577165411, -0.064840199070714352, 0.15617146815942443], [0.0011309666108924809, -0.10964368538359674, 0.13767892093791934, -0.080514362712679338, 0.068579728426950939], [-0.075177365883665345, 0.067929623293054228, 0.14057027460673413, 0.18508681264367013, -0.01691545961636096], [0.0087625550776224449, 0.043502868644189743, -0.12796835566226775, 0.17882643105729204, -0.014927090774661766]], [[0.22311593580977684, 0.44839881162377437, -0.26621311092562938, 0.33815885375907562, -0.81447567125862486], [-0.0058982911567266151, 0.57182093057428529, -0.71803212757533352, 0.4199037787710812, -0.3576614922276013], [0.39206992329128937, -0.35427102134607846, -0.73311130463634466, -0.96527687000537032, 0.088218613092754888], [-0.045699051260129457, -0.22687901034830618, 0.66738895142798982, -0.93262731784968911, 0.077848741655038287]], [[0.0094360200641389561, 0.018963684363744106, -0.011258685969310372, 0.014301415617651482, -0.034445808399368741], [-0.00024945055357433987, 0.024183453120057805, -0.030367017657912786, 0.017758572318517754, -0.015126221283032345], [0.016581422789433555, -0.014982831474730151, -0.031004746275467544, -0.040823493309709163, 0.0037309419434901243], [-0.0019327044616407019, -0.009595168027817744, 0.028225216246446246, -0.039442678317234484, 0.0032923792984970741]]], [[[-0.17694518866787559, -0.3556088991727826, 0.21112400137459594, -0.26818157098884471, 0.64593123208878755], [0.0046777216416978131, -0.45349052311069121, 0.56944534159915505, -0.33301051799522363, 0.28364840902894239], [-0.3109364927071997, 0.2809595490529545, 0.58140409219369682, 0.76552621514878028, -0.069962995162409267], [0.036242266684440881, 0.17992954714399559, -0.52928206807228251, 0.73963303479328057, -0.061739024734887814]], [[0.20678606422401269, 0.41558046995557413, -0.24672895395546723, 0.31340898263295891, -0.75486413758170312], [-0.005466594797543591, 0.52996931503441014, -0.66547930388211696, 0.3891709906319365, -0.33148422157209312], [0.36337429706114088, -0.32834189950123055, -0.67945483487620062, -0.89462818561316682, 0.081761886377783172], [-0.042354334371303502, -0.21027371906309825, 0.6185427054840491, -0.86436825655679461, 0.072150986585566457]], [[0.086469866003780482, 0.17377954208711952, -0.1031724244466989, 0.13105541146764629, -0.31565473753124151], [-0.0022859167101729034, 0.22161249516068335, -0.27827748669097002, 0.16273612798223722, -0.13861377133545677], [0.15194895697640573, -0.1372997748172298, -0.28412150861249058, -0.37409861067510308, 0.034189631616782089], [-0.017710930528657166, -0.087928267215365341, 0.25865043208560029, -0.3614450886855658, 0.030170728213753654]], [[-0.0084162113545800856, -0.016914162388587482, 0.010041890547973095, -0.012755773693750689, 0.03072303808151251], [0.00022249089840084199, -0.021569798639524008, 0.027085067335598231, -0.015839294212212873, 0.013491437539218977], [-0.014789366470921973, 0.013363544749190864, 0.027653872700118699, 0.036411447367789194, -0.003327716106435175], [0.0017238252064476038, 0.0085581592192377834, -0.025174743572410552, 0.035179865542056793, -0.0029365516231682569]], [[0.043082895166300872, 0.086584218755003162, -0.051404806690644012, 0.065297274231813612, -0.15727236081538662], [-0.0011389390840384653, 0.11041659178855039, -0.13864945489477903, 0.081081929065576666, -0.069063164487730241], [0.075707310379745929, -0.068408476596330231, -0.14156119045573648, -0.18639153696467647, 0.017034701021230555], [-0.0088243245714109721, -0.043809531501164276, 0.12887043735878057, -0.18008702434595814, 0.015032315658581862]]], [[[0.018038377002357629, 0.036251945797250183, -0.021522678066084284, 0.027339315180032214, -0.06584836338152579], [-0.00047686239518730306, 0.046230321855324587, -0.05805113906364575, 0.033948192175054084, -0.028916055738518732], [0.03169789312424276, -0.028641944470964239, -0.059270253600330954, -0.07804027099013533, 0.0071322588223772417], [-0.0036946563780324987, -0.018342612363079856, 0.053956762296575936, -0.075400634656653379, 0.0062938801123105991]], [[0.17923203936018609, 0.36020481084117761, -0.21385258118138054, 0.27164756639622417, -0.65427928775736977], [-0.0047381768089464179, 0.45935146301269947, -0.57680488883224368, 0.33731436677097909, -0.28731429881913123], [0.31495505539864826, -0.28459068784853359, -0.58891819506789767, -0.77541992386318204, 0.07086720129046388], [-0.036710664007262583, -0.18225496787202503, 0.53612254264472492, -0.74919209842426471, 0.062536943754446808]], [[0.030510276040980725, 0.06131687308410351, -0.036403654766255657, 0.046241968044305554, -0.11137652480345513], [-0.00080656942189567631, 0.07819438972170191, -0.098188228192242571, 0.057420283111822443, -0.048908881463298075], [0.053614106691070341, -0.04844524715529256, -0.10025024968314368, -0.13199802897515486, 0.012063567882964657], [-0.0062491756301361447, -0.031024862516019436, 0.091262961835809772, -0.12753332390929384, 0.010645526455641601]], [[0.21208169252158521, 0.42622315859551618, -0.25304748821114903, 0.32143513992442196, -0.77419561382407631], [-0.005606589986338683, 0.54354141193597416, -0.68252170490808406, 0.39913735329916256, -0.33997327150175533], [0.37268002671632161, -0.33675047703667704, -0.69685513824768397, -0.91753890908632485, 0.083855743914991523], [-0.043438995528056051, -0.21565866345519261, 0.63438309717925512, -0.88650404707112485, 0.073998716545968374]], [[0.22860902648651682, 0.45943834281034013, -0.27276724948298581, 0.3464842888746773, -0.83452797590456773], [-0.006043506459453069, 0.5858991012396938, -0.7357100024042591, 0.4302417652708973, -0.36646708023391644], [0.40172264322115453, -0.36299313631887198, -0.75116042720526754, -0.9890418841710098, 0.090390545990940582], [-0.046824157055472111, -0.2324647475210862, 0.68381999663120618, -0.95558850350395308, 0.079765369418219739]]], [[[-0.033250978278096727, -0.06682489572568294, 0.039673752287597792, -0.050395829684149338, 0.12138134712236927], [0.00087902260507925864, -0.085218499846183765, 0.10700836132717324, -0.062578279655971278, 0.053302308801066386], [-0.058430198880856675, 0.052797026768096091, 0.10925561178504611, 0.14385525677673855, -0.01314722400721712], [0.006810531732147157, 0.0338117894513792, -0.099461006433415974, 0.13898949250231343, -0.011601801585144384]], [[-0.10722901680434488, -0.2154994600997347, 0.12794142220893923, -0.16251838435773891, 0.3914351752739938], [0.0028347054604866218, -0.27481585280355098, 0.3450846251496712, -0.20180481141625009, 0.17189130853045939], [-0.18842792309072548, 0.17026185585237091, 0.35233164372143921, 0.46390989213292988, -0.042397666986207699], [0.021962861226070756, 0.10903754196174101, -0.32074562862564543, 0.44821859081888688, -0.037413930102429792]], [[0.15868566762178521, 0.31891251749941463, -0.18933746298122889, 0.24050708559305489, -0.57927559134802531], [-0.0041950130842775086, 0.40669343406135477, -0.51068251635475415, 0.29864613313864241, -0.25437785279994257], [0.2788499947621137, -0.25196646459750877, -0.52140720650487304, -0.68652919837721993, 0.062743297400446554], [-0.0325023151420189, -0.1613620609205865, 0.47466381518819795, -0.66330801535157635, 0.055367983905810748]], [[0.20310828598490904, 0.40818919426814027, -0.24234077440758814, 0.307834870370643, -0.74143855733723252], [-0.00536936908040521, 0.52054358500980491, -0.65364347098121067, 0.38224941878420293, -0.32558863348554118], [0.35691153039745843, -0.32250219895127752, -0.6673704412032575, -0.87871684223766477, 0.080307716399565868], [-0.041601044492379391, -0.20653391139700769, 0.60754165997973908, -0.84899509890970692, 0.070867750554211878]], [[0.14388482313613571, 0.28916708020330062, -0.17167768067768915, 0.21807463769206437, -0.52524570906332091], [-0.0038037380737098109, 0.36876054219349158, -0.4630504105736446, 0.27079097117555417, -0.23065165813906757], [0.25284124760080667, -0.22846518364379867, -0.47277479317584409, -0.62249561517891061, 0.056891138215193357], [-0.029470776635421286, -0.14631158531454871, 0.43039122638509231, -0.6014403058826735, 0.050203731005372093]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5, 4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_array_rank3_taggedData_rank3_offset1(self):
      arg0=numarray.array([[[-0.42968821070122565, -0.83374541198634078, 0.8180517380411263], [0.4127367793558312, 0.67706145652552485, -0.10954772861839124], [-0.31600498783913777, 0.93953932632353809, -0.65512725277830897], [0.1938593357262639, -0.82489459737761561, -0.83309972270078969], [-0.63947596278675967, -0.84091472907262421, -0.54829662970565041]], [[-0.022576215107380726, 0.034985935016746961, -0.50174860162054236], [0.43216583525662289, 0.22715297905752618, -0.23575606496128443], [0.37569069115540055, -0.058249639476874782, -0.43053065733867468], [0.56335713850872371, 0.13086344165573927, 0.78487741378766596], [0.12286952981818144, 0.086273954040547718, -0.37256737261195561]], [[0.022025573296951872, -0.84334403517116607, 0.90027253814442121], [-0.89645525423054218, 0.13559938837843388, -0.10285619911413035], [0.86981784095304748, -0.57762876314464084, -0.31009363368501885], [0.1653595785969284, -0.84429993630952227, 0.31109981806634668], [-0.30411067189018137, -0.80605311138183655, 0.69552605006501911]], [[-0.092108334609104059, -0.70362190241263756, 0.033367789574625384], [-0.071623885021385059, -0.84965491357802425, 0.15214272840821597], [-0.59701980560933521, 0.19395368649287548, 0.84514896608958079], [-0.58214093158961955, 0.87895849382572, 0.71039035504350689], [0.80553437635252911, 0.38777013343842359, -0.77270431489354463]]])
      arg1=Data(numarray.array([[[0.77403238851807066, 0.70296753122563782, -0.75386369060124636, -0.80579617722296915, -0.9618133994511604], [-0.34498860729233605, -0.98058941499024499, 0.89345126752310899, 0.6394562141116833, -0.84059506330536427], [0.69310205109384904, 0.48750817635799715, 0.57501556145761512, 0.620615386904392, -0.91998069662511539], [-0.071426656659054233, 0.047995785009673497, -0.58048370729409049, -0.4585784298071558, 0.94365855674721977]], [[0.93153984797621692, 0.26781040393137534, -0.049679753157566342, -0.87549619804124434, -0.27646634568328032], [-0.22303685233366921, 0.35619062350746544, -0.31646489833116709, 0.034909682620052562, -0.37962010535389323], [0.022545982462432113, 0.30252089211916688, -0.021817360092728499, 0.71065108612848316, -0.6964014602416646], [-0.96644651532705805, 0.12929236310612691, -0.84759224195965155, 0.19330387536996896, 0.71955306457964774]], [[-0.91728052250968162, -0.79166682565260627, -0.3497725720023559, -0.28397144874865909, 0.034883139753032477], [-0.63499436911936424, -0.57864964958269649, 0.44241438550054313, -0.25160360132570414, 0.060722569967385231], [-0.46820611179689076, 0.10247994249724535, 0.57340187810386811, -0.66361132944864387, 0.96953620914722349], [-0.7182160939222344, 0.019061836373879482, 0.25998281659517919, -0.13574557328924874, -0.52438000113221817]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[0.49853649221077445, -0.1940857985371891, 0.0069489947090366488, -0.37068216541438059, -0.41599851687627654], [0.35046575405175973, 0.6223480987364578, -0.49909147714515734, -0.017436973483088147, -0.21424653086323864], [-0.88756498804568129, 0.51563279706762621, 0.85959818041996572, -0.91310658962114322, -0.17275956054323416], [0.92229669926294178, 0.25038482131697903, -0.18712082639030858, 0.66332130401746192, 0.012252590305697142]], [[-0.48332507911860079, 0.32236748673253057, -0.39241561612975029, 0.44816629632140836, 0.82104880598604191], [0.97596006059032403, 0.53950651148422391, -0.120331294282777, -0.17018973904244694, 0.33568634797261532], [-0.79726752448487925, -0.27722145393612529, -0.25404852632081032, 0.40709336256049933, -0.69364884627254253], [0.41373083939385458, -0.31478102230563954, -0.25978247503936092, 0.47535298871345621, 0.99849895883978257]], [[0.79240723161997395, 0.33940229495872054, -0.71593019979163275, 0.13170920320488699, -0.086900131719012563], [-0.81819207508585046, -0.89432541313797254, -0.49206721218418581, 0.45681575482362624, 0.97354790378483358], [0.36865562581280642, -0.68395164642352047, 0.10515883131149528, 0.77066022872421724, 0.91648287343592116], [0.96893807077186977, 0.77959117164407932, 0.90634099521087874, 0.96048707363846542, 0.79386641447240458]]]))
      res=generalTensorProduct(arg0,arg1,offset=1)
      ref=Data(numarray.array([[[[-1.8596425920900677, -1.1729669789080108, 0.079214546145164544, 0.84387871870630027, 0.67231863902399669], [-0.18526475758760108, -0.348989938540197, 0.24186353754070372, -0.50969734754369611, 0.72737451371268869], [-0.69963221312156709, -0.37786802676162923, 0.24018511912979831, -1.4020415991545754, 1.7690571627762801], [0.24892361645812855, -0.11282656915070499, 1.1687825434740013, -0.075167376399535704, -1.4343729943558252]], [[1.0506673591832201, 0.55818995956103057, -0.30646672696887878, -0.89423802282972364, -0.58798184024638922], [-0.22383695196570025, -0.10017261988318051, 0.1060285226258852, 0.31512570195054374, -0.61062266024414558], [0.35262464013080713, 0.39481134553772207, 0.15974350398177806, 0.81000236929171876, -0.95742694631767178], [-0.6051451518046147, 0.10526032053175491, -0.84193954073584631, -0.043522961566801299, 0.93410887753206462]], [[1.2315556944291739, 0.5481196729413691, 0.4206941487603415, -0.38189006183613616, 0.021333931907998108], [0.31546834323602224, 1.0236153998643878, -0.86950399527418853, -0.0044399573473734022, -0.13081679572998825], [0.10889371570237338, 0.063037856645849252, -0.57785725044951874, 0.90631695209499297, -0.99874766312463714], [-0.41492039165673889, 0.093820423776667689, -0.78323232554910827, 0.41546028848113314, 0.72138322035363278]], [[0.14581736577283122, 0.57489887623862601, 0.18623247843412738, 0.80255750734910714, 0.012537954145464283], [0.64611626509323683, -0.0018432709698336103, 0.065678752239511806, 0.30477863879923806, 0.099601417173685175], [0.50582862599453848, -0.24041584994992157, -0.34823178839847285, 0.086954259623630903, -0.41160939155842557], [1.3817154136204988, -0.11322855140603998, 0.37005046286333193, -0.13526543276051883, 0.026242418998253692]], [[-0.77537886677030599, -0.240668299748034, 0.71563326791647042, 1.4072055227010347, 0.8284148638530523], [0.75633216852232144, 0.6448090712309511, -0.54779493176448601, -0.30031953785281007, 0.82347449500500236], [-0.20546551706096705, -0.62233344156181392, -0.663756407560262, -0.63060973224668548, 0.64232635113146341], [1.2521702033330409, -0.14986754396111404, 0.94141047599495553, 0.20512664726070212, -0.92101394716642304]]], [[[0.47536029034653576, 0.39071697391086635, 0.19077919511244151, 0.13004405204741004, -0.0054608939964402425], [0.31859292092830149, 0.32493631207878199, -0.25322336763336839, 0.11302660197392823, -0.024771373937518805], [0.2200629331447391, -0.051841281025321997, -0.30144856625320809, 0.343817702815574, -0.49005801129203708], [0.32816442936959106, -0.0061243986977469987, -0.1469946967276991, 0.085226033671169737, 0.26697693047930793]], [[0.76236685173069707, 0.55127273694227485, -0.25461803024024876, -0.48016115619642574, -0.48668695692759706], [-0.05005200133556334, -0.20644731795414131, 0.20993129425927831, 0.34359804226534701, -0.46382401963707237], [0.41503884441923017, 0.25524263212158682, 0.10836323163947412, 0.58608567403373912, -0.78434793399689862], [-0.081075565695984314, 0.045617340432005257, -0.50469085480082476, -0.12226953680003994, 0.69489137619428665]], [[0.63145228903611827, 0.58933533703024521, -0.12973792790500172, -0.12947437035682394, -0.36025853692670162], [0.1567673510674133, -0.14001987645807604, 0.16362233423866718, 0.34652733448389716, -0.31983393400332449], [0.4606557783484857, 0.12140979381231223, -0.029568240430428244, 0.47746927597187017, -0.72247811121227135], [0.33867487811187841, 0.0022936311606565774, -0.28064095560570296, -0.12510089739395661, 0.53837169538553475]], [[-0.16199158217095289, -0.19029304267421793, -0.70572434676861995, -0.79140425053717656, -0.55064479347809936], [-0.72193190293890419, -0.95997875645676323, 0.80915952242408651, 0.16733264029016767, -0.47557384934205232], [0.025930030912579394, 0.39466432858047296, 0.77113420961832668, -0.078227188589741092, 0.15155588781367635], [-0.73042282441894757, 0.058919616554575033, -0.23388383747722111, -0.33959065607806627, 0.21420595561258415]], [[0.51722141589205206, 0.40442758173693655, 0.03340090221080802, -0.06874181962006029, -0.15502572469087128], [0.17494732460796586, 0.12583139272547414, -0.082353906149717271, 0.17532077340677293, -0.1586580960689786], [0.26154457510170842, 0.04781889103299769, -0.14486120942341033, 0.38480532937859357, -0.53433646130492718], [0.17542856111407162, 0.0099499646348296181, -0.24131000921341339, 0.010906145188442372, 0.3733924504717992]]], [[[-1.5943625313977099, -0.92308894632292726, -0.2895977976489022, 0.46494467674378553, 0.24337608479387124], [-0.39116976521208413, -0.84293167047919648, 0.68486108247490241, -0.24186829566500037, 0.3563026254885574], [-0.42526115444024809, -0.15213166487123342, 0.54728255207050402, -1.1830850007850122, 1.4398897391458916], [0.16688346513989116, -0.090819960724055224, 0.93608176524141296, -0.29533013489383392, -1.0581310788649234]], [[-0.47322117992915713, -0.51243616929484392, 0.70504479958069333, 0.63285169180359901, 0.82114606097729459], [0.34433629616108807, 0.98687146757940358, -0.88935659195297778, -0.54263116126323585, 0.69583391433091746], [-0.57011985292731615, -0.40654831560412041, -0.57741207976427811, -0.39173353278110851, 0.6305671078292352], [0.0068542228387506038, -0.027454736331200821, 0.37870383544501102, 0.45126920386386626, -0.69444098212490402]], [[0.41962582113558966, 0.70224955052513227, -0.51856538554637077, -0.10712636670263194, -0.68772458076252763], [0.025662966890502514, -0.87924454463890123, 0.82274919592105267, 0.61406626173236556, -0.53071477352753393], [0.73503705619955717, 0.21752016291766027, 0.33495285696386845, 0.33511147649490319, -0.69860111520908486], [0.71883336334754999, -0.038846351798964583, -0.095940442906484819, -0.46844374008560069, 0.56778340169950159]], [[-0.94387116839894525, -0.35615729768118104, -0.19152815328507233, 0.51759180190310083, 0.085227598060748241], [-0.066283803208797454, -0.64289937389012963, 0.55256705343887025, -0.0020078673132650354, 0.20040356580264737], [-0.050083344661085716, -0.14292273187705432, 0.2918899466230549, -0.70382733176553069, 0.73746662649109473], [0.58072275333993695, -0.095294837324257822, 0.70051414162558201, -0.28126720872339822, -0.61461014826267601]], [[-1.6242546011971206, -0.98027423780099165, 0.026026577641813736, 0.7532381112165345, 0.53960640967673901], [-0.15696085943262461, -0.39136675962790585, 0.29109018071452236, -0.39760137622330227, 0.60386202579218229], [-0.5546025373140091, -0.32082687579885161, 0.24153352562014346, -1.2231172481274362, 1.5154502015184896], [0.30119082631210475, -0.10555453822668216, 1.040560475572416, -0.11076917818481445, -1.2316945751566584]]], [[[-0.75735429770211682, -0.27960260653714586, 0.092721753910120636, 0.68076334479215506, 0.28428277979788835], [0.16752158193410716, -0.17961132592850537, 0.15513971562482037, -0.09185792026026661, 0.34656101002198597], [-0.095327325728379209, -0.25434436270824523, -0.0184794001158478, -0.57933676209425855, 0.60709249034864621], [0.66262664259494408, -0.0947576989766266, 0.6585269052215863, -0.098303474799560461, -0.610709515822914]], [[-0.98648417723510173, -0.39834204208293944, 0.042989939246292679, 0.75837970823005707, 0.30909701744054863], [0.11760400599499843, -0.32044282640105909, 0.27220363668185699, -0.11374118010834805, 0.39199126944146673], [-0.14003312170246257, -0.27636401396085986, 0.064591304953858231, -0.74922271054768808, 0.80510139830442973], [0.71699052898598403, -0.11039141639388576, 0.80129190645569415, -0.15204912068153686, -0.75874089296309122]], [[-1.0566757637115558, -1.0368191229060888, 0.1448260551554415, 0.071272385656916876, 0.55008143133253362], [-0.37395862300471283, 0.16547063337060242, -0.22088157524604224, -0.58763968653101706, 0.47954279961677188], [-0.80512668669925369, -0.14576617696812047, 0.13708276829001259, -0.79353670865189074, 1.233579590917762], [-0.7518023249792366, 0.01253238752641905, 0.40189083876374121, 0.19654717334482114, -0.86700209440328968]], [[-0.2834383100767785, -0.73622442158608936, 0.14671340851995604, -0.50216846059932185, 0.34168915161078944], [-0.44630202188719825, 0.47285087948945453, -0.48398715119961561, -0.52030624581408313, 0.19881120525268581], [-0.71627519691638208, 0.054905606480731367, 0.053422515176998253, -0.20807589913018709, 0.61219961302939807], [-1.3180997789865296, 0.099243654450444446, -0.22238578884818239, 0.34043101147617144, -0.28939948863876513]], [[1.6935196462255453, 1.2818377600704332, -0.35625666675675499, -0.76916183487118239, -0.90893350125543815], [0.12627567633656456, -0.20465331621086597, 0.25513456908390469, 0.72305608331420168, -0.87125415081891266], [0.92884506994948701, 0.43082646775659456, 0.011664575678406675, 1.2882716328182244, -1.7602845761304908], [0.12267295326342753, 0.07406880842365797, -0.99716038208528801, -0.18955202970875162, 1.4443612843859226]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[0.83698492696883231, 0.092272603745276738, -0.26147912581840177, -0.10663389437135447, -0.57688482042553579], [-1.633616674645106, -1.4488311782579726, -0.087757049842947021, 0.52308629822782216, 0.60859481076442989], [1.3476737276941848, -0.54993705172028018, -0.071522046100075357, 0.68337885293591683, 1.4022896970598842], [0.051395265265320123, 0.79260574019421526, 1.0384298861452932, 0.10438340229887599, -0.1883349192790893]], [[-0.20828284822168153, 0.10097550219605872, -0.18439285568771707, 0.13601351818601229, 0.39372232443359267], [0.89506613013508352, 0.72011633203619319, -0.23356024483117371, -0.17246892121692509, 0.032202902996595686], [-0.94651521245338766, 0.10005000796031992, 0.17126140815339952, -0.18566952560499989, -0.64134573989864241], [0.55464200916888695, -0.19518551480345409, -0.35240794554377708, 0.49040110831595202, 0.59413599154094499]], [[-1.1307705101216519, 0.14185731863682777, 0.09813956436461313, 0.45192098483945009, 0.95979589288060807], [1.3422238578945289, 0.89611943197303123, 0.36702605390029991, -0.45366223265709649, -0.25470426604442453], [-0.71010557696035048, 0.0246723693142476, -0.57921831008557556, 0.1661459418903416, -1.1975303939958901], [-0.53751169952837863, -0.88560342462126074, -0.77871342339408511, -0.39224127170960321, 0.41417363628626092]], [[-0.16481604517137582, -0.58630049996830724, 0.92148990008982867, -0.55127705558220352, -0.68552744474820249], [-0.055487532092004743, 0.42067423612768623, 0.41244815034411453, -0.24356480250020213, -1.1295020336899166], [0.17847201497904247, 0.89843863812346614, 0.28859659587635528, -1.1548601751623444, -0.22482549559932496], [-0.96971054679713975, -0.34127658912329262, -0.57705439073376152, -1.063706599573027, -1.4826510073749528]], [[-0.34684113983141246, -0.33306349932493218, 0.71808647208989973, -0.2120430172528128, -0.37676393280132137], [-0.59620165821160698, -0.36130001168201481, 0.69014415462606937, -0.096204955062232089, -0.67907112226350275], [1.0358778424617459, 0.27839320709621257, -0.39371745914331857, -0.1809714952175846, 0.19127064725594989], [-1.468964405051804, -0.32285828855024334, -0.15882953280925322, -1.3505411845931869, -1.2827619979261489]]], [[[-0.42575386727636411, -0.15463457620294119, 0.34533106735856378, -0.04203679130594621, 0.081718851743811008], [0.43675941453884581, 0.45355140063884675, 0.2539517293207651, -0.2347672524674673, -0.47189512281169299], [-0.19282773644181314, 0.32183189345339253, -0.081057895218627676, -0.35182065937539897, -0.48021169661510205], [-0.4925105304806216, -0.40782443018470249, -0.45961957970098738, -0.48026766174436797, -0.36366456076114878]], [[-0.081153102786418629, -0.090666665771988231, 0.082649628559878771, -0.089445101775223843, 0.027210568818693558], [0.56604530453762469, 0.60235073741167078, -0.12701606741906624, -0.15389185520771817, -0.24585769983804395], [-0.65158975736332292, 0.32111294809479074, 0.28898925378139567, -0.48382882486796963, -0.44829157747702164], [0.26413228933132604, -0.1470890284328325, -0.35355297788701662, 0.1682019999571949, 0.044948342028875488]], [[-0.12570657537562155, -0.23781711082795323, 0.33369864031462715, -0.22207221394327051, -0.16669939643467147], [0.42707417160879446, 0.58741883555713992, 0.031355252827790142, -0.19331060488451249, -0.5191862549715438], [-0.44572690684914018, 0.5043286435823503, 0.29246716881621526, -0.6985515422133064, -0.4190733374252697], [-0.094758932368598003, -0.22323477194449015, -0.44537490152381998, -0.19200463223126049, -0.39534284951196197]], [[0.8395470470225751, 0.19923569420343748, -0.60935553597634506, -0.046802281249851571, -0.19511641221404946], [-0.31702560307965094, -0.28072989439929513, -0.68312615463615212, 0.32644950975215647, 0.68734751917105108], [-0.31499976991415823, -0.28261093588633085, 0.53355189824348748, 0.14374233024752264, 0.53122810048165592], [1.3342222780228452, 0.7117462511280247, 0.571954694254725, 1.1897577301813793, 0.76065741274137177]], [[-0.27566850159074596, -0.12248553436736001, 0.23373080639175811, -0.055951016711953537, 0.052097738533222818], [0.4320931675371531, 0.45620944768427002, 0.11162359670627273, -0.18702006000002575, -0.36007556658030632], [-0.31518717243737593, 0.29425663626022613, 0.044521903888227382, -0.36419427988118691, -0.42252233085901569], [-0.21197835403685161, -0.28684297271331749, -0.38307699254607447, -0.23533358680891875, -0.20811880095046359]]], [[[1.1319723442282057, 0.02941301748395081, -0.31343787333730888, -0.26754868130537734, -0.77982302108537815], [-1.5519467426373905, -1.2464186343440666, -0.35250669468464479, 0.55440312099068179, 0.58864046042530949], [0.98471221946171139, -0.37059271712912373, 0.32785506001854769, 0.33037278496971095, 1.4062638512778647], [0.54370501426053575, 0.97282808959190259, 1.0309184654722399, 0.47842406000819521, -0.12711213883161188]], [[-0.59395823897943378, 0.18279243787415073, 0.014197078825710731, 0.37952394247828208, 0.49319598937753656], [-0.097681152361107998, -0.39276355732269636, 0.48170849027488061, -0.054432490262258722, 0.13744585472625598], [0.6496347918573353, -0.42948412305500833, -0.81585636784402049, 0.79449362897952969, -0.033453088451236776], [-0.87035736037522038, -0.34732868752520574, 0.039296313398070923, -0.6289723433888097, 0.042757867160706758]], [[0.46709796512782054, -0.46027451380740825, 0.45472030367650718, -0.62214188963934858, -0.80915716045963892], [-0.0051850835444171017, 0.50701961768387716, -0.21202494456086241, -0.058516159502640386, -0.68214855194217816], [-0.4258129701305392, 0.82072674312854721, 0.86183048530201967, -1.2683620685060975, -0.033793327260429384], [0.26278576345574689, 0.15786949805728764, -0.29375377602716635, 0.0045502188189245341, -0.8122771180742967]], [[0.73702686337522527, -0.19868080216133577, 0.10973980763858851, -0.39870791295185459, -0.78903540921635917], [-1.0205895532969289, -0.63081856725637619, -0.13401587242996535, 0.28292311346237387, -0.015977102526319231], [0.64105424586311166, 0.10654564516722642, 0.38935084075819593, -0.2549475640086164, 0.84219788378589922], [0.10463412971662711, 0.54970379728874375, 0.47035462484762802, 0.0071533870753847095, -0.59403482707253374]], [[0.78911528807602482, 0.035241384504029222, -0.18375353909705511, -0.15691025332216468, -0.59574066155348215], [-1.4623299215413792, -1.2461602227215607, -0.093473105854459726, 0.46021199596204732, 0.47170155928777213], [1.1689675448313332, -0.40906040795025678, 0.016504331451304408, 0.48556085178901237, 1.2490935496897846], [0.059952369858593313, 0.71981149447077331, 0.89668768493717477, 0.083160937465312945, -0.25641456441732091]]], [[[0.32059962337587616, -0.19762280025685777, 0.25158315377101864, -0.27680186011169794, -0.5422906575613996], [-0.74628895244763904, -0.46677370709312027, 0.11421902378772621, 0.13659825052563562, -0.18397723402654134], [0.65502824856372543, 0.12474305398332208, 0.10308686831859187, -0.17661985058817167, 0.53456012389961338], [-0.34372997162930541, 0.22443752702483924, 0.23026662260120245, -0.36351686429756674, -0.67720473519511348]], [[0.4955114061606013, -0.20836234897835196, 0.22399656846519772, -0.33419840144236812, -0.68103394549036123], [-0.97881295447415262, -0.63903445549670335, 0.063122497796836097, 0.21535264712057556, -0.12175415176529195], [0.79706139502175499, 0.094552676729480103, 0.1702849689486913, -0.16323828452343242, 0.74117206633782973], [-0.2701700315875355, 0.368130836546881, 0.37202096881274033, -0.30526452737138987, -0.72847612241055271]], [[0.27832331198717825, 0.46524292684421631, -0.68532681100231285, 0.41954199658502928, 0.334161239915441], [-0.71143813105690235, -1.022753062400898, -0.14124129708417288, 0.36347865411136449, 1.0158100312254947], [0.68682982213259414, -0.93965214206704317, -0.47359590924637085, 1.2754226725642397, 0.74316968130976324], [0.34851223412581567, 0.44833303562319271, 0.82732222570394864, 0.50793516579330134, 0.85728289434835103]], [[-0.15212272696772799, 0.63744104498386889, -0.85755224197697399, 0.70327378152331854, 0.90210457059595606], [0.072572165622558749, -0.52341061899164343, -0.16478443729796033, 0.18507856555283039, 1.1113750829000062], [0.077812247399798473, -1.0297097613863779, -0.64900157608467057, 1.4368444830266041, 0.14194246020342671], [0.51506983584271238, 0.13137534282496915, 0.5244485805901008, 0.71398981838789577, 1.4344614506475879]], [[-0.39812723510757514, -0.29359591713642952, 0.40663295283085843, -0.22658399204252838, 0.050425205945255749], [1.2929809223792248, 1.401576405189654, -0.068473765753479743, -0.43302408424208272, -0.79467847168792005], [-1.3089824362486766, 0.83635413179797369, 0.51266677052355558, -1.1731725837439195, -1.1163103413696143], [0.15467153110206533, -0.52276256031792312, -0.95180174096421943, -0.023516701383092919, -0.21636604671386178]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5, 4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_array_rank4_taggedData_rank4_offset2(self):
      arg0=numarray.array([[[[0.69079744014592626, 0.3566915419398673, -0.87284341892512707], [-0.82266517844895848, 0.4522542675018415, 0.096784466025259919]], [[-0.5076306659088905, -0.095699566381052481, 0.79389811289557977], [0.52110375542735543, -0.86904451842104646, 0.54119699476144434]], [[-0.36728391510877234, 0.65596888208732973, 0.96020034816796751], [-0.56696571703700993, -0.37518784509413838, 0.98458655365938075]], [[-0.087191266011665602, 0.92588903696292735, -0.089924194546759928], [-0.14135322359620006, -0.85690345236800303, -0.39809990654327287]], [[-0.54541146022392217, -0.44915501106538147, 0.29841991629153464], [0.89676382950072586, 0.78991739329160771, 0.61497395664161369]]], [[[-0.5224030514706679, 0.42228857186801561, -0.25273782914847631], [-0.27152963135360575, -0.21754031172712485, -0.36349385210428897]], [[-0.46058716047680726, -0.77674388918985171, 0.79919989860937313], [-0.69629334087003736, -0.6911303475196271, 0.47538728799862695]], [[-0.49948429762299718, -0.14874034016946269, -0.61373944557310578], [-0.85592623206203089, 0.41753617449607261, 0.72460840065374565]], [[0.97895485083493017, -0.55102889424699586, -0.66686223729991356], [0.63977770419395008, -0.080069788166967637, -0.69382801188463072]], [[0.82106162988944176, 0.46461366926673242, 0.56354185127934797], [-0.5418147089553389, -0.97839638723236866, -0.3860093272049514]]], [[[-0.087625109154173098, -0.3321346162392409, 0.90467938600602094], [-0.45005907171369564, 0.8893167115455618, -0.49608708139283797]], [[-0.75570596151623382, -0.2830899957777635, 0.81801509682235563], [-0.28799530220433667, -0.034182925800529507, 0.22457434383830854]], [[0.47387919038353576, -0.60708122430973499, 0.28874590541356193], [-0.89623930481337899, -0.74274953532093124, -0.98655593240747352]], [[0.24583976827970155, 0.91040980395649007, 0.1444370141600908], [-0.34055882788069702, -0.61574685627833392, 0.26490482514144009]], [[-0.61471539328545965, -0.69751490639700986, 0.5172956246422149], [-0.88303860098763498, -0.0060546728220165491, -0.54578401763454365]]], [[[0.38356471800371739, -0.29957239541481306, -0.3323322590095743], [-0.77170064621748158, -0.32358037600638978, -0.90164962915282465]], [[0.35805061062780807, 0.49075216568092772, -0.07312351896115965], [-0.37712492321527002, -0.0070333690181851871, 0.83057683707673968]], [[0.857725389389844, 0.93752836826431341, 0.14298284891321367], [-0.29256910971361272, 0.38614812186350567, 0.60427646276043601]], [[0.1889368283091486, 0.12166067055497898, -0.88614960998223702], [-0.66068851760713598, 0.54891822191137618, 0.59071202554706215]], [[-0.41250689103182836, 0.45145305258558621, -0.1031842485266028], [0.6759124358059212, 0.97585570452437209, 0.045263343498228581]]]])
      arg1=Data(numarray.array([[[[-0.21753877321921866, 0.63824271192960258, -0.080955748034408304, -0.62553507864495184, 0.6539449769219905], [0.30734183227923895, 0.30497292281566879, -0.33280855158561162, 0.23389286795940634, -0.65303153710420347], [0.87022311976255384, 0.22800230044733794, -0.83879236861499096, 0.76256843627832382, 0.24775200803958697], [0.14887968439780219, 0.48897438283198613, 0.63461940155293206, 0.9554122286565716, 0.71762652406248284]], [[-0.52829365851207277, -0.24991629964834527, -0.2060106581668355, 0.023433714453521493, -0.66517231356470807], [0.12257237472906368, -0.6849248945756865, 0.43887920799977187, -0.15299674676778774, 0.68122004655971158], [0.02807056245299, 0.22219509846757091, -0.19416266662234793, 0.21634347210883043, 0.23476279186248816], [0.23716968039483954, -0.75091942849231086, -0.96991537824118512, 0.93446835286330576, -0.1720444756589834]], [[0.67952158084580727, 0.24853221705642503, 0.75905525192373635, 0.022827843118645275, -0.87324431931910085], [-0.42179692548829761, -0.85341875393915134, 0.27981350834166152, -0.15436613689488432, -0.052444876987625788], [0.48932535247830389, 0.25258392481260783, 0.21150502497094537, 0.44674362340375429, 0.51014876606492976], [0.051036586192672928, -0.39156491539108651, -0.086581243470585489, -0.91030814052316833, -0.6178547506116836]]], [[[0.17514937660246255, -0.34398510632595936, 0.13318660224414169, -0.30730004426004043, 0.066427711079595886], [0.5272830871618297, -0.61268747244639044, 0.62627341218291543, -0.082686582431648281, 0.87721472485761764], [-0.40405750376567462, -0.43591876591064604, 0.79086580502160508, 0.81038985983551792, 0.46060363858354569], [-0.21081267109498292, 0.48748222535218044, -0.97658402554891577, -0.03283186813873451, -0.44848378765053232]], [[0.80961539786241499, 0.2728319683096998, 0.8108019846216703, -0.90150422123961116, -0.19534770140315683], [-0.57470165704514997, 0.70854278123111292, -0.94450804802256627, -0.21181929812474776, -0.56823427146417971], [0.79892890869754596, 0.18904003645212297, -0.4585664704635124, 0.96761582115315092, 0.5583066341524916], [0.12368083697219756, -0.856184770515382, -0.19570713299020315, -0.2843913377572389, -0.31306125047319733]], [[0.61135590532021178, 0.89915834638147651, 0.79271873470706677, 0.42171687555508219, 0.84240685921972336], [0.46738261759305821, -0.69122689219396038, -0.075519537264111758, -0.87657308278125412, 0.6994531335810692], [-0.89680304878880657, -0.39885437074149643, 0.69012603936788097, 0.28150270468803718, -0.51265812541046629], [-0.55715252339839028, 0.559640736575582, 0.80406736601630935, -0.62945344058074415, -0.66848147994929419]]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[[0.69625845341408232, 0.32323604103306702, -0.92628333399331653, -0.15877517454042378, -0.93623730416005269], [-0.80497714559859168, -0.78769680322806401, -0.7012831553271921, -0.0045967348927868912, 0.35125105929897216], [0.30605575383774397, 0.49362908144276862, -0.98516859591775341, -0.41797026075460764, -0.14508816580149775], [0.15411569983660289, -0.94150214911997088, 0.61038885276948252, 0.092038357819816508, 0.78253730971853575]], [[-0.82071408524668543, -0.097565178092365423, -0.80932739490215821, -0.84661495842900059, -0.57655214463390903], [0.25178025972569884, -0.29326845562940607, -0.72128053784396107, 0.41190067132482588, 0.91941907304369441], [-0.076081169386111647, -0.81025509238089377, 0.7928484572947172, 0.68855087875995569, 0.98064177826800969], [-0.41355809878711036, -0.45372924375725665, 0.45206998685278088, 0.5680028563259194, -0.4333141166676806]], [[-0.43950016121661517, 0.28622705287677541, 0.062585252679246528, 0.13342518208055143, -0.15090811677465776], [0.058938775412302968, -0.93842378130725024, -0.058452716729163079, 0.38824701438887677, -0.21660885254575923], [-0.036224211793492556, -0.88890143857454573, -0.70765257282460903, -0.73663131997041442, 0.3508463422507162], [-0.002706809358857587, -0.12405575875958363, 0.45748308337858767, 0.37164796408621958, -0.73409411753887466]]], [[[-0.78318500180645745, -0.61447471560798683, 0.48128973816662457, -0.12027201673192667, -0.36414344139682542], [-0.65875389508748605, 0.93343609877458888, 0.14849504694511606, 0.98517096077227295, -0.72711467278624276], [0.42806894651730887, 0.83037007107459648, -0.23507194561828215, -0.41592854077681984, 0.14720643612891471], [-0.34961038737412542, 0.99308726643053236, 0.43857603578198656, 0.36766600576912611, 0.41914109616228767]], [[0.011256521932447638, 0.61885749256573797, -0.62401938336487106, -0.9598719193551668, 0.59938460046867781], [0.26546804133755586, -0.61106721903584638, 0.1367413866428433, -0.2334805835046565, -0.51560748116746646], [-0.37689536238314236, 0.58480388090117064, -0.037792704440944958, 0.14745618388985116, 0.48940235742429139], [-0.34353004888437089, -0.32838784225202056, -0.92334943693126403, -0.69529854123459089, 0.64967008094341439]], [[-0.40045341631111664, 0.13396325611790583, -0.6353862943650519, 0.83614067132619563, 0.68064056681912377], [0.91565402513512173, -0.68409755407926776, -0.30239605853942031, -0.019087163356744652, -0.63377630695569809], [0.39700490215997464, 0.26503974267776509, 0.31073900169113267, 0.54283993131963815, -0.82343577033017512], [0.13385251309770041, -0.94521960740420918, -0.4156731201840973, -0.68314085122263801, -0.10649689685252217]]]]))
      res=generalTensorProduct(arg0,arg1,offset=2)
      ref=Data(numarray.array([[[[-0.65059656677451205, 0.62822224255182246, -0.45809912687826232, -0.55777299880551279, 0.91522503675441513], [-0.024259183994010163, 1.4688466603084065, -1.2672724152375159, 0.12912594845816122, -1.0732951039536072], [0.79098246468957867, 0.42179874654856897, -1.6245154927206507, 0.01218493345943554, -0.36643899754913067], [0.3183348960332687, -0.32237283567343444, 0.9607182310507788, 1.625340872552038, 1.1363282950195326]], [[0.41900088011270559, -0.03249869559634605, 0.45722129828225633, 1.1849651741687919, -0.30128319995535235], [0.52454654445728632, -2.0759130103850807, 1.4553887151357587, -0.5600470615534836, 1.5541531822073023], [-1.4461715947347209, -0.54378093313458753, 1.7964234088711917, -0.31939378820658404, -0.26584714252120684], [-0.57662377872733206, 0.81374900940719708, -0.20173302407756383, -1.4077350639360784, -1.1617609594605325]], [[0.5847024057492205, 0.81825086527871105, 1.0242272003058863, 1.194718844278607, -0.64995299517166549], [-0.060639319139596248, -1.9797906018618292, 0.60374022346612333, -1.0711981986879238, 1.0408656094750397], [-0.78499705156477995, 0.088061486802727129, 0.78694106271061814, -0.25453833745847543, -0.42252585065427833], [-0.32554470777129452, -0.45229381812422864, 0.4663353716885521, -1.1064402534934483, -1.2561390167015882]], [[-1.4931801437893317, -0.85251511709107808, -1.2811284374560357, 0.72223992196967468, -0.77172599448280677], [0.35648633682998843, -0.82938247712856483, 1.1611002040315803, 0.39399018988349538, 0.77686143537265928], [-0.36436071715450291, 0.22154814114672886, -0.119240485952606, -0.96212307603651037, -0.18954577243762574], [0.34764125684193814, -0.26072362554896794, -0.95993526119962702, 1.3626912932656146, 0.43147554189828419]], [[1.7312815276217748, 0.29831351414818114, 1.6106070113586064, -0.3908836200137657, 0.10482259722836107], [-0.042244653827850254, -0.52820766579378597, -0.16301181414197408, -0.88545422594948242, 0.80248865338074937], [-0.6239800982072452, -0.63565425537905473, 1.3792131750576477, 1.2844135890947159, 0.45046429134745941], [-0.60648212837215454, 0.058741885976065222, -0.47220111890514754, -1.8536535700856487, -1.5590825214367934]]], [[[-0.72709660956189626, -0.79455856386960044, -0.73724100540062276, 0.45717084963401666, -0.68356645053793863], [-0.19023427139087137, 0.030619373912106396, 0.35134209217623635, 0.2393790566011314, 0.27324906843720276], [-0.30452762684676721, 0.13310598547557517, -0.063103683191163801, -0.9527825255266188, -0.21939631118209202], [0.24233780416863535, -0.62312027024145022, -0.70375678934789498, 0.42515820697348689, 0.14148155424191236]], [[0.66274372527689684, 0.57718201643928779, 0.52768318612809006, 1.325662183011276, 0.0068001624099237601], [-0.32162729631870951, -0.68219325694349298, 0.21682467133420352, -0.32500100345170346, -0.1558332010199987], [-0.72869869582014224, -0.092472839824858738, 0.80051821137612345, -1.2614301564378734, -0.83904017607882719], [-0.41555908441031952, 0.56346885683760828, 1.5893740710562292, -1.9732334306090589, -0.47982971407466579]], [[0.40130897639788998, 0.62572718121641813, 0.40416797768188434, 0.48714419884920829, 0.78024032766733475], [-0.26547525110129094, 0.79271223777057986, -1.0559111947305093, -0.65216926349043314, -0.22421825471885315], [-0.70956216521061832, -0.13892152863949345, -0.050285291343271421, -0.77289425142042367, -1.004371261048485], [-0.31259900977621746, -0.26144073986764221, 1.2172244873739388, -0.60426379809270547, -0.18488404886167836]], [[-0.75194776818852027, -0.26899569655350192, -1.0016408688269678, -1.057525726038826, 1.062700373483993], [0.5736903494289014, 1.2759567945311259, -0.22553683729598564, 0.98846738702492365, -0.85826616856729476], [0.80987887988143803, -0.084961810457874598, -0.79132848139002565, 0.57507022163912846, 0.3786550134078781], [0.2228164529237151, 1.1457223744341842, 0.046441982577314578, 1.4659349820255105, 1.4112974415140633]], [[-1.1641387157003311, 0.12033524785116773, -0.90587064242995596, 0.39589072757764165, -0.4342696716170239], [0.16777740908177982, -0.64321367306335531, 0.70226993101042523, 0.62437372948045333, -0.43855479192446811], [0.78673357749008321, 0.6379730508839293, -0.9059569610669862, -0.51606509316375937, 0.0020676475902739466], [0.46947151671965237, 0.18946395745469799, 0.43186278166718867, 1.2446335027767679, 0.96842757405087998]]], [[[1.1471668074536943, 0.20330854723695541, 1.0300790590460269, -0.804946579902864, -1.2479109130596882], [-1.4294951769703101, 0.67746684986448935, -0.94782563373379669, 0.17436475288871151, -1.463608940189365], [1.6943489400547858, 0.69690221916889961, -0.77677811650692474, 0.62162820526260221, 0.90537457302212065], [0.43561964758208338, -1.4061265667432497, 0.054793054623489434, -1.1434983672128001, -0.30964201130942232]], [[0.92898653966009381, 0.083395882878392932, 0.85236854300820375, 0.69878406987365405, -0.84348387163299454], [-0.63924324403074495, -0.73768467228403034, 0.19111726484687136, -0.42551809094006854, 0.18162196309150208], [-0.37764579020986255, 0.00092171312615552115, 0.8047543149619778, -0.4753252848226166, -0.10324337541074877], [-0.20653780718649764, -0.46269382959522543, 0.1926772661195145, -1.8533775022878165, -1.0092863024056382]], [[-0.94761487389785914, -0.25549075311806435, -1.1977751813556066, 0.22489615562170001, -0.28396337853314835], [-0.55737215666624995, 1.0186829585012822, -0.12860505536333822, 1.2553698507020248, -1.7923454119481594], [1.1901047165419705, 0.68985792529585099, -1.2675954539260288, -1.363694964132397, -0.19953935776892262], [0.58804317446645071, 0.22143432564411758, 1.0919073042099749, 0.48425180404674978, 1.5600794838882659]], [[-0.83251101271282968, 0.15261956475532742, -0.43243221952269084, 0.64231703830541254, -0.25012268477458743], [0.4243365870643091, -1.0825893245841169, 0.70644721647878195, -0.17770748037403386, 0.68850706367094239], [-0.2817322106286243, 0.22121982514535452, -0.15658471370597316, -0.3482632152285482, -0.28812179305056712], [0.10793935930423371, -0.1105632909154137, -0.073419631070122254, 0.97369428215111131, 0.098966689958354281]], [[0.36049677588808055, -0.2780986828837223, 0.030944942582675328, 0.42663920373415171, -0.90699557201696845], [-1.2098391697418758, 0.7628012702481719, -0.46288350049321919, 0.4358045574668814, -1.2537864364506417], [0.54002857149913508, 0.43699650459896849, -0.31178776752965209, -1.263670633625769, -0.18246034051803323], [0.25894480337407755, -0.71008207592861783, 0.66633123768488223, -1.3357512966089846, 0.12202444390686076]]], [[[-1.0993723107319824, -0.39647519438876222, -1.3014895601435186, -0.10592785551966077, -0.007302715798295889], [-0.42101497623894168, 1.4725652767195745, -0.46169993400718762, 1.1095591530943878, -1.5608648234137841], [1.024654976567402, 0.57180437659662964, -1.4180357552664979, -1.1130801815653788, -0.21870560216370233], [0.59411434979163191, -0.061107914841919797, 0.65472169413552839, 1.073952551022469, 1.5822608404165792]], [[0.049190378292509718, 0.96232920142334111, 0.41689193988843298, 0.25835706311641843, 0.64757137410552024], [0.39442753584453061, -0.51256842433233385, -0.2165073489391599, -0.67543852970958784, 0.35845346342981771], [-0.30852442945678438, 0.003996304342906154, -0.13290909643943449, 0.26792746919197474, -0.43681961939960912], [-0.21815913980280463, 0.12219964460326577, 0.79507930283844264, 0.35881573158399105, -0.16619381428799618]], [[0.046097263022764123, 1.0980023959170888, 0.5990978965934497, -0.51467763646289477, 0.22660712844187336], [0.22446185120940387, -0.46741399337509909, -0.42757104648859051, -0.55218921528201681, 0.017637208954356831], [0.72749721344097595, 0.39950825116971034, -0.86267549184309444, 1.227432578199207, 0.27658591179565678], [0.13011078757601574, -0.47564824777383374, 0.31865171937390319, 1.084837975521818, -0.027735854751685829]], [[-0.017702682630575894, 0.77811893885412164, 0.11234218185859157, -0.17827379031675783, 1.1629560163837893], [0.059010049124651964, 1.11596047470589, -1.2342817141566669, -0.41707487635438578, -0.47233447725585842], [-0.090032746912934447, 0.002449260393818431, -0.73609152268447176, -0.06347022028987423, -0.67738142275006674], [-0.1101874925890135, -0.11344981273534943, 1.091389259905841, 0.59462814028929867, 0.3917497941861674]], [[0.71724599313171677, -0.32730986859510114, 0.77919744073714281, -0.80209636398233819, -0.58754752366615548], [-0.21119554685517783, -0.10093030106557022, -0.19526901337357228, -0.45189570261743628, 0.65239563737446149], [0.069148375727866071, -0.14802514641810391, 0.35482705513186807, 1.2417550375695097, 0.78409547165332216], [-0.0066239331137739124, -0.9809931223401156, -1.505394746274562, -0.20652362077519423, -0.94883909525855759]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[1.182478777359629, 0.73701201224005319, -1.7228327790021096, -0.78235831446060322, -0.084164643522646992], [0.23290144640090404, -0.94012144003427556, -0.78028627631134306, -1.1130385539713825, 1.0633044877691626], [-0.26828295830776017, 0.4348735763696247, 0.42628858623880478, 1.0612273768166958, -0.036136922151299017], [0.10651688083046412, -1.7609230967567664, -0.63502715790023723, -0.74124397819572097, 0.96546054592926012]], [[-1.2584457586446638, -0.71303174627656229, 1.0465817818909475, 1.491559881091244, 0.06834510025483187], [0.35289373723028261, 0.33014198093922037, 0.17350470434825283, 0.97709469321913944, -0.7120733391436509], [0.58862435967405402, -0.81081030534790499, -0.059059822498073511, -0.48963428699422296, -0.5359031153187479], [0.14799474247881411, 0.71420456933385246, 0.81609429765744057, 0.62009524402158189, -1.3423799210508744]], [[-1.1705609526823157, 0.34021290570639801, -0.79493333122660237, 0.88265265532696646, 0.47248719118245991], [1.6928393388444762, -1.7776559837927088, -0.70492428422205577, 0.15492520050907144, 0.24780466337964979], [0.092493094121191721, -1.9955757234098055, 0.65583878864387768, 0.61283440670732803, -0.044380785174831017], [0.12841024665262341, -1.4414418750467095, 0.20013899631604204, 0.07544673922042866, -1.8627737332482184]], [[-0.5205956922545284, -0.64103052538537564, 0.045428258266913601, -0.27537497640165204, -1.1717261334506315], [-0.20087773958824043, 0.54555381661338054, -0.61920424017387821, 0.41527413589405021, 1.6370445143244405], [0.01053572101627942, -1.4373209534516425, 0.82553058799270174, 0.4565386454016469, 0.77669734706713633], [-0.10559907795941864, 0.19045587266511943, 1.2189138842394629, 1.3002537871862327, -0.9769734623390629]], [[-1.0819837778942947, -0.02686738742536951, 0.43532912723795775, 0.15480550069965887, 1.2900517291195559], [0.52559843582011978, 0.21497444001558502, 0.7442248689602331, 0.62065770405605258, -2.1182718117824963], [0.18674411767502008, 1.1990184252243214, -0.07952797607434281, -0.22380481039942657, -0.2444225961951873], [-0.40167504323751552, 0.73016014618312508, -0.99113931032605995, -0.83404561818145928, 0.37231553829385827]]], [[[-0.24345586057497662, -0.29887373673828832, 0.36232982725410456, -0.37075651751356925, 0.0048387927038891776], [0.30023697840713365, 0.65296793431751787, 0.11638868372806327, -0.13155601535664269, 0.79948317568371796], [-0.36140974925065106, -0.82440459920148745, 0.98741521722292935, 0.57883098900998553, 0.55411436308950979], [-0.13346060975085786, 0.47695899486264182, -0.010714332804649701, 0.39759124232336696, -0.62267781630724672]], [[0.31272477615047717, 0.21948530494228241, 0.89939777280060396, 1.9819980579117733, 0.9213121242818636], [0.93280043742373175, -0.71222019737021358, 0.49487938549946298, -0.54121341540940215, -0.48770076500924214], [0.040333196051934556, -1.1647688007428216, -0.39011996592198256, -0.48527559576884227, -1.2466759815660753], [0.79256894160987434, -0.2269367636499702, -0.1314879076562207, -0.28678136399240822, -1.4020196234691917]], [[0.42891839610820465, 0.5588030369095226, -0.58827285059247869, 0.43138048563029341, 1.7011532077161715], [1.6666283597628089, -0.53678722083984431, 0.2043131199078517, -1.25180373338538, -0.23142558648711137], [-0.35541127760593633, 0.14500279227531201, 1.2190505071116882, 1.3693728021858373, -0.80704310935234413], [0.23899081044150852, -1.0581460191310454, -1.7150168651895203, -1.4585685396445289, -0.040532937660146456]], [[1.2028090140435952, -0.35630576115198609, 0.29616982778527035, -0.35812907148227113, -1.2514131795360353], [-2.044096959536589, 1.1370448416054115, 0.043767602402647265, 0.17185192496668991, -0.0024947019914756119], [0.39428802409887242, 1.8230244905791311, -1.2923783662552073, -0.95189997617969779, -0.2900470390787242], [0.091522666969651015, 0.72852680570546602, 0.68629052850527494, 0.29415659681325312, 1.7844056521795186]], [[0.51058595075715485, 0.057099956463172299, -0.50625737853158759, 0.23301985608767101, -1.773496636068286], [-0.76700224708606513, -0.95566064150222463, -1.0413704201953291, 0.10841818597017236, 1.7365787700653965], [0.179099839507602, -1.5964733910933875, -0.79491421280776686, -0.56684744404384046, 0.29347562312043252], [0.4067326321013563, -0.90566293489264915, 1.795244132938479, 1.2936797082707621, -0.79412793634731249]]], [[[0.37512099325970916, 1.0234776836213584, -0.049761836477284827, -0.79848937377174989, 0.49627916761878038], [0.11855116461975379, -1.3067077408513241, 0.45292091521495415, -0.4267190290612668, -0.3489964336875373], [-0.75910493670567469, -0.56343385715144478, -0.89917263386226309, -0.80945027809656878, 0.78188969031227451], [-0.093160428763678998, -0.14910976375885598, -0.60208310986144964, -0.3054107123260757, -0.14681517280129669]], [[-0.51811122678762245, 0.20338255505089431, 0.72033617243525261, 0.72402413320856762, 0.98452842839315624], [0.9715383178381678, -0.49092418967017382, 0.57098546784970727, -0.075569306573225636, -0.61820948857247426], [-0.26062363593528332, -1.0704099862104905, 0.079955315369506397, -0.24498188471112439, -0.12501479474645297], [0.14088264802684802, 0.25141422977535932, -0.40311748769643196, -0.1618708689758114, -1.2360360507992569]], [[1.7899087305406631, 0.25394974259168029, 0.72943574958998747, 0.47308716043157029, -0.92754645241120925], [-1.0274136981939679, -0.17401310162404715, 0.15235332195146045, -0.8308315130153503, 1.2056353331850758], [-0.31461959171846188, -0.97090508424842037, -1.2203162663945015, -1.1010664571063502, -0.24584815251658765], [0.75975236372892163, 0.07984972331665019, 0.8497368078612344, 0.66697562338416683, -0.33120938939889194]], [[-0.48579086760144263, -0.10432549402804236, -0.9034836388357228, 0.062967236615095096, -0.84161175419612144], [0.34328527458672575, -0.71903273331247353, -1.0523824504271877, 0.23314557466524788, 1.2893318856957841], [0.19220150614902159, -1.3173714931085969, 0.5630549906793173, 0.61236630184699448, 0.33818012300914524], [0.027038084786639625, -1.0488505541692572, 0.93677904995852534, 0.71537045910865715, -0.87913104378885931]], [[0.8271835170859001, 0.48316190751679539, 1.0918581240562772, 0.41281268916345992, 0.84604998357794303], [0.43004859216653424, -0.24386482973726364, 0.93704429574032733, -0.94175556237127089, 0.021818383696371457], [-0.74620641568461432, -1.0795452925483682, -0.27528085260192425, -0.5342831081602859, -0.096867105081235638], [0.43007029192979357, 0.47200491905844189, -0.60870822563804827, -0.20812210055268249, -0.8744653523788174]]], [[[1.6207941999340507, 0.21123976674687642, 0.26976808359389165, -0.20211579273162472, -0.66287553516371867], [-0.80691305804294489, 0.19180335251369629, 0.080328727216194551, -0.92168162175005952, 1.2306805463184392], [-0.41412198117311694, -0.34152178435412217, -0.46675920389488956, -0.33797615718587926, 0.0044687907812067662], [0.44416957076629976, 0.0081761653477622209, 0.28177941519247218, 0.29884464735877392, 0.2362767505505933]], [[-0.15866157148707402, 0.38557246447411408, -1.4382664747031015, 0.2645035912599259, 0.091306543956205799], [0.8381157400103596, -1.2732563404948136, -0.90891667731373582, -0.21363842875784866, 0.34425136144784541], [0.24585374426061496, -0.25302116572646771, 0.43510784312021855, 0.84880858058134989, -0.33923599003462757], [0.097862380304470559, -1.7079884328622836, -0.09720050829596788, -0.41663987533791946, -0.12987411334006066]], [[-0.24358731961718197, 0.72640101788909162, -2.310038913088786, -0.74103826107225002, -0.61586233577934046], [0.40257823602763726, -2.007194627196943, -1.4594605238012293, 0.047815888969561626, 0.76294139113235793], [0.15512762611726341, -0.32029903259589432, 0.039085094788766372, 0.68835979733231989, 0.49342958285634053], [-0.20540488845195282, -2.2391991476403361, 0.27674175417271923, -0.12426016689761904, 0.22388254976254712]], [[0.70823073354903121, 0.62037360589345369, -1.3647807850079199, -0.20474339168821998, 0.85835482902261817], [0.94815257716201584, -0.7091614003959994, -0.37012995875230803, -1.0851292263521159, 0.1931599397351883], [-0.17452021148267063, 0.71134389664998254, 0.85553139277599555, 1.3339678158037578, -0.53403845293388796], [0.10268496806957612, -1.5178854849613734, -1.277222977145001, -1.2709569178765574, 0.76243508579895103]], [[-1.148881396848932, -0.012269177672930495, -0.30213574074980065, -1.31062174835718, 0.5110813234522017], [0.29488814861468371, 0.2930070655993906, 0.18981328762241739, 0.58497101946947794, -0.73077949970658984], [-0.21734801138930501, 0.66624133989557721, 0.65563809847377363, 0.44660819345114128, 1.0061750633080804], [-0.81547970834212957, 0.50433635682632971, -0.71833785449056931, -0.28081031066030587, 0.46979046459671908]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5, 4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_array_rank3_taggedData_rank0_offset0(self):
      arg0=numarray.array([[[-0.65590950908765722, -0.46988154727868836], [-0.56002222895730047, 0.18275989657489777]], [[0.28710912532944843, 0.31189706769489933], [-0.78555221112349671, -0.16965858921661914]], [[-0.89400426039850012, 0.18690490149727879], [-0.89830085160412732, -0.27093063385147098]], [[0.28913151430735495, -0.22822318441708522], [-0.47244075715807643, -0.33915573165506507]], [[-0.34901448804707647, 0.43942461967929081], [-0.73123884683499285, 0.026663240237298158]], [[-0.83509468944898413, 0.91738526705431234], [-0.66522592342333553, -0.079832586935975058]]])
      arg1=Data(-0.322663700561,self.functionspace)
      arg1.setTaggedValue(1,-0.843936317446)
      res=generalTensorProduct(arg0,arg1,offset=0)
      ref=Data(numarray.array([[[0.21163818943517851, 0.1516137188701312], [0.18069884479161669, -0.058969984542948134]], [[-0.092639692843546922, -0.10063786205646877], [0.25346918342475128, 0.054742668228542762]], [[0.2884627229772157, -0.060307427170045926], [0.28984907699541995, 0.087419480913772898]], [[-0.093292244355131421, 0.073639337237764821], [0.15243948300032609, 0.10943324344219656]], [[0.11261430626256945, -0.14178637390320015], [0.23594423231352099, -0.0086032597639056994]], [[0.26945474281620152, -0.29600692510761456], [0.21464425816068528, 0.025759077926095865]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[0.55354585567745385, 0.39655010264634999], [0.47262309759429788, -0.15423771409228754]], [[-0.24230181793576552, -0.26322126273273549], [0.66295604021736931, 0.14318104500660964]], [[0.75448266330202129, -0.15773583428227858], [0.75810871266167057, 0.22864820141600473]], [[-0.24400858544222395, 0.19260583381282476], [0.39870991280753298, 0.28622583921378419]], [[0.29454600177785856, -0.37084639532738556], [0.61711901957160953, -0.022502076777051658]], [[0.70476673693254477, -0.77421474395731515], [0.56140831608371011, 0.067373619430959111]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_array_rank4_taggedData_rank1_offset1(self):
      arg0=numarray.array([[[[0.68965020543072919, -0.094139047419195876, -0.46166224871606376], [0.15793774243892189, -0.82152500574941345, 0.33184214763585174]], [[-0.76600140804105554, 0.84953547557526665, 0.36112585321477431], [0.62880894911077245, 0.73264056989712412, -0.092343222566488858]]], [[[0.43177254075985649, -0.89710320727681503, 0.87685335462556946], [0.9377044313675158, -0.9141659776883122, -0.13428782570132602]], [[-0.030314881784600622, -0.94799535670875668, 0.59929003441477247], [0.11006622394486132, -0.89565878319483949, -0.73000744027758557]]], [[[-0.28707232956824313, 0.43039543826290338, -0.71379819559912905], [-0.33793069144070009, -0.32045614125497779, 0.81065065001309544]], [[0.66944057472219187, 0.75139552448607771, -0.10979925865985596], [-0.38500613248348636, 0.46265740756604634, 0.22267963158655246]]], [[[0.7896479076065166, -0.14678484206764142, -0.05607593286453838], [-0.89028632652983419, 0.36552158111930066, 0.04787257209062723]], [[0.25566692772403599, -0.49270585612275819, -0.24530870374434466], [0.31094196313533051, 0.067242185088332684, 0.28356651675093758]]], [[[-0.29133422634503514, 0.021108073872341038, -0.55482430118110426], [0.60553005605455823, -0.71864499164781748, -0.70957499933337909]], [[-0.54387465680309544, -0.29800894824108171, -0.82287899226862593], [0.85871706099972411, 0.79871348615582605, -0.46444526770665862]]], [[[0.16660006897236546, -0.034708852612158392, -0.20574623779807899], [-0.16213598027542608, 0.35573079816432096, -0.2473294696115611]], [[0.42069947492940596, 0.35990759267564787, 0.84817564311353077], [0.64841022050128028, -0.21764105808290246, 0.42544198057290061]]]])
      arg1=Data(numarray.array([-0.27228979651819207, 0.38945841128763004, -0.28307131109442474]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([-0.98313351326312581, 0.48992129032425114, -0.38851144512181368]))
      res=generalTensorProduct(arg0,arg1,offset=1)
      ref=Data(numarray.array([[[-0.093764619926616916, -0.45688965113113456], [0.43720873543857319, 0.14025448867738766]], [[-0.71516367586411445, -0.57334394724966709], [-0.5305921483068532, -0.17214759325228501]], [[0.44784378090053401, -0.26226120278964238], [0.14143648944889745, 0.22198484512608166]], [[-0.25630617163915603, 0.37121998522064648], [-0.19206407929230468, -0.13874783497424256]], [[0.24460289648832159, -0.24390166709459107], [0.26496286331438607, 0.20871692244726262]], [[-0.00064029619010236294, 0.25270220181186365], [-0.21447732650452894, -0.38174804694791542]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[-0.54477788556239348, -0.68668095078154545], [1.0289856447186452, -0.22339053911616216]], [[-1.2046675797563555, -1.3175856701468476], [-0.66747056946468675, -0.26339585461966109]], [[0.77040908489005067, -0.13971435382596173], [-0.24736653059218355, 0.51866456028228414]], [[-0.82645619915813551, 1.0357480865100985], [-0.39743657466782345, -0.38292292376653847]], [[0.51231732730875723, -0.67171836457517387], [0.70839838011382583, -0.27248447720609992]], [[-0.10085994880079562, 0.42977173721927969], [-0.56680330543731239, -0.9093898848085169]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_array_rank3_taggedData_rank1_offset0(self):
      arg0=numarray.array([[[0.62589245777823987, 0.8301479093180546], [0.67651428666337998, -0.28985020239866821]], [[0.53549468750700191, -0.02054906142579993], [-0.39407483689239431, 0.53006101674119188]], [[0.42853734777667807, 0.61236009553921966], [-0.0034079816261691764, 0.94706672745249088]], [[-0.72146223543335575, 0.33150359968843546], [-0.94844082018950737, 0.38989527543494029]], [[-0.79653750960766545, 0.87584891107449292], [-0.37533385704590394, -0.39611594341595624]], [[-0.35376180070975582, 0.30775706129022407], [-0.088232531469656594, 0.37511453253578764]]])
      arg1=Data(numarray.array([0.20183985169116592, -0.99186803419920611]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([0.35804070734088111, 0.90962704264589256]))
      res=generalTensorProduct(arg0,arg1,offset=0)
      ref=Data(numarray.array([[[[0.12633004085257926, -0.62080272171661244], [0.16755693089848758, -0.82339717490987963]], [[0.13654754328709151, -0.67101289562048494], [-0.058503321864801616, 0.28749315046540908]]], [[[0.1080841683078205, -0.53114006302168815], [-0.0041476195105761161, 0.020381957161046911]], [[-0.079540006633581267, 0.39087023379583191], [0.10698743700631079, -0.52575057868071851]]], [[[0.086495914719370293, -0.42505249672019518], [0.12359867086522429, -0.60738040418452388]], [[-0.00068786650599220503, 0.0033802680361354346], [0.19115580781064861, -0.93936521321377742]]], [[[-0.14561983060064554, 0.71559532920824742], [0.066910637396201442, -0.32880782375292905]], [[-0.19143315448489792, 0.94072813187564941], [0.078696404568874639, -0.38672466038921222]]], [[[-0.16077301280566184, 0.79006009382048636], [0.17678121431514482, -0.86872653768297259]], [[-0.075757330040818527, 0.3722816549565266], [-0.079951983271582872, 0.39289474211094849]]], [[[-0.071403229389256903, 0.35088502184475684], [0.062117639607727884, -0.30525439139285915]], [[-0.017808841066171616, 0.087515027541227877], [0.075713061614224406, -0.37206411398582584]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[0.22409497830224356, 0.56932870538318947], [0.29722674464978988, 0.7551249877116526]], [[0.24221965372316817, 0.61537568988530589], [-0.10377817148971673, -0.26365558241821396]]], [[[0.19172889669229107, 0.48710044894958054], [-0.0073574004880846222, -0.01869198197389918]], [[-0.14109483334619521, -0.35846112846359113], [0.18978342136784296, 0.4821578350801653]]], [[[0.15343381511994697, 0.38980916032141405], [0.21924984175419174, 0.55701930273969658]], [[-0.0012201961520383383, -0.0030999922480038078], [0.3390884409961033, 0.8614775064809328]]], [[[-0.25831284909429197, -0.65626155959793808], [0.11869178331849572, 0.30154463901105938]], [[-0.33958042213161665, -0.86272741839362632], [0.1395983802055937, 0.35465928633549043]]], [[[-0.28519285336347244, -0.7245520592209449], [0.31358956364485191, 0.79669585478531635]], [[-0.13438479966569661, -0.34141382638954182], [-0.14182563256964942, -0.36031777415434402]]], [[[-0.1266611253563048, -0.32179130058070082], [0.11018955591350273, 0.27994414551481722]], [[-0.031590837977872398, -0.080258696665904378], [0.13430627256295738, 0.34121432288402498]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_array_rank4_taggedData_rank2_offset1(self):
      arg0=numarray.array([[[[0.6809077681853386, -0.78537506508661004, -0.98746396631714961], [0.64118138172840511, 0.50773530821417356, 0.58062405787449323]], [[-0.46881572060841714, -0.22729222687793715, -0.42362144226351983], [0.1715374591413128, -0.51403200198225818, -0.93489892518219264]]], [[[0.69692267629515658, -0.89745882802967336, -0.44171402140210225], [-0.15863386560102288, -0.72221244799160256, 0.77027516144143338]], [[0.3205087143828782, -0.68331579974575707, 0.55924865682280367], [0.24532277173791583, 0.028573542338105939, 0.32923664829465049]]], [[[-0.99465676613247744, -0.22803937585115031, -0.061528796537834385], [-0.27749729416656943, -0.21946188718968873, -0.42001900758175159]], [[-0.0093003374032845088, 0.91334655352400862, 0.28136441403867929], [0.93927325016175067, 0.61343305369157686, -0.8527350550779571]]], [[[0.716871273478767, 0.16418580511913805, -0.10984383791417418], [-0.15212146625373291, 0.16158669270434145, -0.57126567841025988]], [[0.66122223136475733, -0.43713955417871864, -0.91316383492301778], [-0.86258625561646363, 0.12885297969100118, -0.89410138655347571]]], [[[0.49932232623255812, -0.45798749151718998, 0.23836904068094422], [0.47983871977895487, -0.20110252712904919, 0.05283684026889035]], [[-0.58529188572426105, 0.6386139162688742, -0.98910387220867357], [-0.77606364027197117, -0.27301767017896905, 0.77637893135663938]]], [[[0.54693529643968342, 0.78019293949918334, 0.095065467419950922], [-0.76720278110163731, -0.26547621238494434, 0.29951860247754936]], [[0.32164845805958131, -0.62662174363575662, -0.64404855380835602], [0.21622141809489204, 0.74226726622085692, -0.48364764667492821]]]])
      arg1=Data(numarray.array([[-0.042209530010759222, -0.17963061651045953], [0.75137285674644483, -0.43173041879407825], [0.18106341740506693, -0.32861523401628157]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[0.94593827152453103, 0.12443000210954058], [-0.36500923568442434, -0.52469437798074536], [-0.0096993146174519929, -0.22328769328810893]]))
      res=generalTensorProduct(arg0,arg1,offset=1)
      ref=Data(numarray.array([[[[-0.79764390345307434, 0.54125412594833089], [0.45956434037586813, -0.52518249480065693]], [[-0.22769506461929617, 0.32155108460507703], [-0.56274620363991001, 0.49833190102948338]]], [[[-0.78372123228003054, 0.40742558218399977], [-0.39648631624165892, 0.087172429273054408]], [[-0.42569399372987471, 0.053657410196158245], [0.070727137913173477, -0.16459572635748013]]], [[[-0.14049921683344285, 0.29734164322745482], [-0.22923475164649079, 0.2826200269646319]], [[0.73760117433360561, -0.48510949747871546], [0.26687154032041671, -0.15333821249240348]]], [[[0.073217257224199986, -0.16355967671634469], [0.02439751452540298, 0.14529038685109513]], [[-0.52170523984058104, 0.37003023303499438], [-0.028663060661950318, 0.39313248638152565]]], [[[-0.32203561746030523, 0.029701856130969553], [-0.16178992828674624, -0.016734637431153693]], [[0.32545153076982392, 0.15446188918499448], [-0.031806962757584822, 0.002144879024882862]]], [[[0.5803427943641597, -0.46631930982403103], [-0.11285648954367922, 0.15400088926525446]], [[-0.60101683198574929, 0.42439792321204012], [0.461021976126813, -0.20036535974431202]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[0.94034359322044092, 0.71729578753299372], [0.41555827577284066, -0.31626986759161135]], [[-0.3563981327589143, 0.15551366716768972], [0.3589581545735816, 0.49980553240656111]]], [[[0.9911109159427598, 0.65623899654984097], [0.10608522787847649, 0.18720903494214211]], [[0.54717370841626756, 0.2735395159623662], [0.2184372219783374, -0.057981355762552693]]], [[[-0.85705063667450021, 0.0096244580089301507], [-0.17831579859184399, 0.17440650483102627]], [[-0.34490651447857562, -0.54321025376890453], [0.67285673026024129, -0.014585858606203872]]], [[[0.61925204804604372, 0.027579702370746886], [-0.19733726650556571, 0.02384449200156491]], [[0.79389245252117346, 0.51553879640825917], [-0.85431370866324563, 0.024701792533272621]]], [[[0.63718574612112555, 0.24920926684608438], [0.5267896077826687, 0.15342588211239427]], [[-0.77715634254818766, -0.1870502800941003], [-0.64198467086912525, -0.12667062446398375]]], [[[0.23166733053916871, -0.36253463793727797], [-0.63173032844828081, -0.023047985389009595]], [[0.53922913971544195, 0.51261574026646795], [-0.061711242328486612, -0.25456646264527849]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_array_rank4_taggedData_rank0_offset0(self):
      arg0=numarray.array([[[[0.16992284518875045, 0.42497736497777039, -0.074963218142345633, 0.97051998593000821], [0.81693189585072234, -0.63930099715264865, -0.9931787666195806, 0.40602348957161172], [-0.42831467221506303, -0.79207734334941238, 0.1485277136291494, 0.051447066660140983]], [[-0.67343740545494946, -0.67790610273855445, -0.67654514153315626, 0.28771164156543128], [0.064054802746138062, 0.35149736436897916, 0.10847423144672375, 0.42368673297321013], [-0.95771239186921786, 0.14722577091748601, -0.0009995572991936541, 0.063408872479891576]]], [[[0.12784763234468977, 0.95493904501362792, 0.67978190938023864, 0.35617240624013236], [-0.99685884977636419, -0.40141336064735023, 0.10779272763182468, 0.91497666469124583], [0.13094617326647007, 0.8381927121985524, 0.8706382906307859, 0.93951718023900344]], [[-0.12540967012050319, 0.0054633136930497539, 0.88220321896824005, 0.89557268474210838], [-0.023691013748486256, -0.64494980770820209, 0.69053546080581119, -0.40368092749650741], [0.20600107892128561, 0.37543465009484334, -0.018722743929924235, 0.69517897873875367]]], [[[0.075487907440475732, 0.30861398900694503, -0.4005243908970173, -0.86375140685204066], [0.67716402915219165, -0.89838919173531528, 0.77418695015852435, 0.22798804476379453], [-0.69654217111037253, -0.1531317258266347, 0.11155192386356028, 0.12876961872860271]], [[-0.35332410430278216, 0.43728334948685199, -0.72270457504499075, -0.88541837356764641], [-0.25178433700068892, 0.64293972365899466, 0.60059338858797284, -0.34182315985696765], [-0.21217506051739021, -0.05910483575713954, -0.068049735526407584, 0.84531835454571769]]]])
      arg1=Data(-0.508619867477,self.functionspace)
      arg1.setTaggedValue(1,-0.387813583798)
      res=generalTensorProduct(arg0,arg1,offset=0)
      ref=Data(numarray.array([[[[-0.086426135001248419, -0.21615193105579672, 0.038127782077223123, -0.49362574662767994], [-0.41550779260547965, 0.32516118844981218, 0.50515045265920477, -0.20651161345853722], [0.21784935182055915, 0.40286627340605863, -0.075544146022747213, -0.026167000226770792]], [[0.3425236439166755, 0.3447965121368583, 0.34410430022892707, -0.1463358570046529], [-0.032579545284017949, -0.17877854288392989, -0.055172149223122094, -0.21549548997667548], [0.48711154983377913, -0.074881952093278081, 0.00050839470105172894, -0.032251012317600157]]], [[[-0.065025845820427933, -0.48570097052362071, -0.34575058466236452, -0.18115636206088612], [0.50702221606671316, 0.20416681029602662, -0.054825522843102936, -0.46537530993997789], [-0.066601825293436473, -0.42632146619876971, -0.44282393200119291, -0.47785710370570017]], [[0.063785849797047781, -0.0027787498865452544, -0.44870608431957199, -0.45550606022971768], [0.01204972027315524, 0.32803428572598148, -0.35122005456334832, 0.20532013984634059], [-0.10477624146110134, -0.19095352197758242, 0.009522759536447328, -0.35358184003902948]]], [[[-0.038394649478504753, -0.1569672061903177, 0.20371466261942106, 0.43932112608631674], [-0.34441907876770417, 0.4569385916433511, -0.39376686399219446, -0.11595924911414363], [0.3542751867624282, 0.077885838096495519, -0.056737524732309023, -0.065494786412829506]], [[0.17970765910697603, -0.2224109992659821, 0.36758190518453826, 0.45034137582584072], [0.12806251611812119, -0.32701191704325561, -0.30547372971128806, 0.1738580502670834], [0.10791645116231866, 0.03006189373005708, 0.034611447465298893, -0.42994570946507477]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[-0.065898387561759586, -0.16481199494495358, 0.029071754280795579, -0.37638083389085847], [-0.31681728624855898, 0.2479296108312439, 0.38516821683456881, -0.15746142459683515], [0.16610624802488222, 0.30717835316933662, -0.057601064915806362, -0.019951871297351022]], [[0.26116817367294243, 0.26290119518140459, 0.26237339593892939, -0.11157848281582362], [-0.024841322612437766, -0.13631545257139741, -0.04206778044706054, -0.16431147032190099], [0.37141387493831662, -0.05709615384689682, 0.00038764189841149096, -0.024590822081001284]]], [[[-0.049581048479651293, -0.37033833335513605, -0.26362865847762773, -0.13812849731385385], [0.3865954030722748, 0.15567355397694765, -0.041803484010232692, -0.35484037942522434], [-0.050782704739070893, -0.32506251963087673, -0.33764535568107218, -0.36435752470804467]], [[0.048635573612325962, -0.0021187472627129463, -0.34213039198598444, -0.3473152524212097], [0.0091876969456022237, 0.25012029629698768, -0.26779903179453246, 0.15655294720322027], [-0.079890016682666931, -0.14559865713513551, 0.0072609344219914896, -0.26959985112553597]]], [[[-0.029275235917883738, -0.11968469708690281, 0.15532879943218325, 0.3349745286016384], [-0.26261340896443558, 0.34840753209203668, -0.30024021567042747, -0.088416860702889025], [0.27012851564457924, 0.05938656338596169, -0.043261351373061072, -0.049938607323409295]], [[0.137023887131792, -0.16958442289958012, 0.28027465127522788, 0.34337727261364404], [0.097645386076377627, -0.24934075839812983, -0.23291827443353649, 0.13256366464920186], [0.082284370611753616, 0.022921658174753692, 0.0263906118109852, -0.32782594052639191]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_Symbol_rank0_taggedData_rank0_offset0(self):
      arg0=Symbol(shape=())
      arg1=Data(-0.167809933918,self.functionspace)
      arg1.setTaggedValue(1,0.40615815881)
      res=generalTensorProduct(arg0,arg1,offset=0)
      s0=numarray.array(0.915122477631)
      sub=res.substitute({arg0:s0})
      ref=Data(-0.15356664249772489,self.functionspace)
      ref.setTaggedValue(1,0.37168446059989751)
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_Symbol_rank1_taggedData_rank1_offset1(self):
      arg0=Symbol(shape=(3,))
      arg1=Data(numarray.array([-0.70595359985013251, 0.2438999137740876, -0.99846126486433207]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([-0.87349595301467287, 0.87823531156670054, 0.45898540029030532]))
      res=generalTensorProduct(arg0,arg1,offset=1)
      s0=numarray.array([-0.0031254981919577318, -0.49148490455195581, 0.80154351471610763])
      sub=res.substitute({arg0:s0})
      ref=Data(-0.91797682068879727,self.functionspace)
      ref.setTaggedValue(1,-0.061012517305616298)
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_Symbol_rank2_taggedData_rank2_offset2(self):
      arg0=Symbol(shape=(2, 3))
      arg1=Data(numarray.array([[-0.93074172873498373, -0.64051633155646925, 0.18923282981434042], [0.14381211673174188, 0.17256013000469084, -0.26321858552082955]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[0.28816893408260258, 0.063101374125867249, -0.20878877378723515], [-0.81182382338976589, -0.11904129955094844, -0.54509430483885968]]))
      res=generalTensorProduct(arg0,arg1,offset=2)
      s0=numarray.array([[-0.30071377941136923, -0.67483970932541149, 0.3333757368181578], [-0.62868570493317621, -0.7594387531566924, 0.45815298708807317]])
      sub=res.substitute({arg0:s0})
      ref=Data(0.43316249880484375,self.functionspace)
      ref.setTaggedValue(1,0.152205231237107)
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_Symbol_rank3_taggedData_rank3_offset3(self):
      arg0=Symbol(shape=(2, 4, 3))
      arg1=Data(numarray.array([[[0.338763458023154, -0.99171534740386225, 0.83965976831207301], [-0.88676822185898496, -0.22516535066263677, -0.23055962847069944], [-0.21863716675324829, 0.85117245923828233, -0.8094179946330029], [-0.91642537436470262, 0.73127043092393351, -0.48119910407205468]], [[-0.29567851515334542, 0.46079889844225441, -0.8599054065534546], [-0.5407248731177452, 0.89489625288626873, 0.51137695424642815], [-0.9111870671491531, -0.51812695483698623, 0.034999963460251582], [-0.40263342388187628, -0.10112434670170845, 0.92816835792758456]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[0.65304071202653668, -0.26899219838924449, 0.95536095752490335], [0.39235741128201274, 0.13449560449636522, 0.93385225132171801], [0.27926780526419859, -0.96019697686038885, 0.52421149520737864], [0.50089402219921531, -0.84797143792164253, 0.59792551111964909]], [[-0.22237286202330586, -0.58739228623859097, -0.88956882067764598], [-0.68586543238655673, 0.47476373167683739, -0.042095220082579043], [-0.93703162370675797, -0.1567908399718323, 0.8790435650941808], [0.75189154976346995, -0.87842233148061566, -0.29801159649978093]]]))
      res=generalTensorProduct(arg0,arg1,offset=3)
      s0=numarray.array([[[-0.65595025284840558, -0.53971855931246049, 0.47979976444242878], [0.69227206459202617, 0.88281924161707903, -0.36735231753544251], [0.035340701387385431, 0.64520906787846077, -0.019888621792771843], [-0.10956597460369877, 0.37892372931031626, 0.87313482417823085]], [[0.91914032356442665, -0.17973444306632569, 0.86368169796714978], [0.88650019814183767, 0.72137146505017857, 0.19482387226402698], [-0.89968498159075216, -0.95734140282817792, -0.79390329750247868], [0.065462492474112732, 0.00030927061150465285, -0.43687898324532215]]])
      sub=res.substitute({arg0:s0})
      ref=Data(0.52752939272015253,self.functionspace)
      ref.setTaggedValue(1,-0.91816900824285219)
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_Symbol_rank4_taggedData_rank4_offset4(self):
      arg0=Symbol(shape=(4, 2, 3, 2))
      arg1=Data(numarray.array([[[[0.18277127255586367, 0.36613822209614932], [-0.46324145456981114, 0.97170929935368], [0.77171337682793961, -0.88027109611283216]], [[-0.72318804822595606, -0.72555507250023177], [0.71702514365294134, 0.5012884781452831], [0.56025949138680042, 0.13660616065195441]]], [[[0.92841341907928276, 0.11013000105001391], [-0.81943390991928733, -0.82165717971247121], [0.17867872242553529, 0.1004921728478898]], [[0.34615164735316317, 0.35670016488623313], [0.90457920335512609, -0.21233780010749381], [-0.71726631760078097, -0.29543663001474574]]], [[[-0.46496532672005286, -0.78116397361492007], [0.57767196344266125, 0.97103796085770178], [0.76883595661676418, 0.70591842900658563]], [[0.20589462703207273, 0.79787555511809716], [0.93841289115569859, -0.40005740246926669], [0.45997016976806915, 0.57745884326129793]]], [[[0.98749860853231164, -0.17879245564403945], [0.39777173253183906, 0.82223615109719583], [-0.52495355463362525, -0.22616044597492269]], [[0.9126604179102249, -0.79924398400106189], [-0.71021207410430676, 0.23883656788179497], [-0.42232418523553217, 0.23617328007704286]]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[[0.2900796263966956, 0.7001214339766737], [0.06102986364713936, 0.41616548935691977], [0.81111398675538315, 0.71498696017103569]], [[0.38932379950953733, 0.42819850642932944], [0.85299183068860329, -0.25786174287691077], [0.63437747881104034, 0.65618827321264606]]], [[[-0.028493296771181509, -0.50880204351211744], [-0.22173677406728354, -0.9811948831436228], [0.74505135342714102, 0.65634056862456691]], [[-0.17273772499006035, -0.1048731049297269], [0.9530459236812534, -0.93600888406176463], [-0.47436919193551597, 0.79731250652611108]]], [[[-0.54234349656447245, 0.84331223671560651], [0.37140994774826952, 0.091564165437392209], [0.99645194722587482, 0.17326898921423495]], [[0.50948075965188666, 0.071530667260559788], [0.56968723586063064, 0.77233124482637439], [-0.027086287653206087, 0.8126994122958684]]], [[[-0.12253727602072173, -0.40736419156677983], [0.016231428664967629, -0.45348486047398096], [-0.14107885356515437, 0.93633917339456141]], [[0.40556372823313991, 0.99277660127674627], [0.87884594695894491, -0.64055121428508377], [0.36809903127275834, -0.080164354202874488]]]]))
      res=generalTensorProduct(arg0,arg1,offset=4)
      s0=numarray.array([[[[-0.41354698038544146, -0.30054069872569111], [0.25458756705083663, 0.68388991922674869], [0.91645308897366706, 0.37529094468558233]], [[0.23266243370999717, -0.089549440298144711], [0.41771345019814965, -0.7610883670438322], [0.040473784113955302, 0.40546969846349712]]], [[[0.90256117085447118, 0.99331644564316868], [-0.42629137025658781, -0.72774267994145148], [0.33467696232402022, 0.30605220732219229]], [[0.6976481718401053, 0.69854386939839808], [0.64907101060191952, -0.44442655759051508], [0.52746909752027693, 0.66023853945534849]]], [[[0.31999319202424359, -0.80359430646849694], [-0.79384942794740332, 0.49362744512371837], [0.42956711824723981, -0.59719910431169265]], [[-0.94464463085895467, -0.62550309866010378], [-0.98593037109551496, -0.27051002644324318], [0.50588836505468837, -0.15434037803005562]]], [[[-0.27259569645007731, 0.19895229046523832], [-0.39141519932954738, -0.72204296583465744], [0.58215225131898141, -0.8813091097381589]], [[-0.76537468434523315, 0.6178434289556638], [0.7734315901108253, 0.22048189992798184], [-0.78578446335942531, -0.45830764498826015]]]])
      sub=res.substitute({arg0:s0})
      ref=Data(-0.36981406321933746,self.functionspace)
      ref.setTaggedValue(1,1.4657025816529778)
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_Symbol_rank0_taggedData_rank1_offset0(self):
      arg0=Symbol(shape=())
      arg1=Data(numarray.array([0.28138237725660642, 0.19716248503489986]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([0.2251704384541191, -0.77629093481779443]))
      res=generalTensorProduct(arg0,arg1,offset=0)
      s0=numarray.array(0.855950990257)
      sub=res.substitute({arg0:s0})
      ref=Data(numarray.array([0.24084952445378083, 0.16876142430723742]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([0.19273485977150201, -0.664466994385154]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_Symbol_rank1_taggedData_rank2_offset1(self):
      arg0=Symbol(shape=(3,))
      arg1=Data(numarray.array([[0.44577229612815805, -0.11439167324795663], [0.56029144170168355, -0.63873596744636418], [0.47184604620641135, 0.93227983697187433]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[-0.26602274335170928, 0.33664142669925279], [-0.096827128766988402, -0.91625774483800071], [-0.67099066361764104, -0.53488685466413211]]))
      res=generalTensorProduct(arg0,arg1,offset=1)
      s0=numarray.array([-0.39283591937188311, -0.4370939277733672, -0.1069694501011067])
      sub=res.substitute({arg0:s0})
      ref=Data(numarray.array([-0.47048846882629292, 0.22439930944887121]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([0.21860134129633552, 0.3254624048976788]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_Symbol_rank2_taggedData_rank3_offset2(self):
      arg0=Symbol(shape=(2, 3))
      arg1=Data(numarray.array([[[0.48748575379055015, 0.53922382201059627], [-0.5461912866930394, 0.29786698947171297], [-0.68212863255680745, -0.48367269355243847]], [[-0.27912031235522772, -0.067523361045184638], [0.26812683418528871, -0.084419112598145718], [0.54087173050106041, 0.045578991720064854]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[-0.3033353855794958, -0.19098806051859318], [0.67076932487858998, -0.51246050158819934], [-0.21476337901362075, -0.50418244612200858]], [[0.32316361890289902, 0.34275172090119455], [-0.027240426583106547, -0.50232236443509071], [0.59432220061991026, -0.70554618638328037]]]))
      res=generalTensorProduct(arg0,arg1,offset=2)
      s0=numarray.array([[0.048335264526378152, -0.69693997521695894, -0.35753012589910971], [-0.011034693633192427, 0.2865390131917982, -0.59459060747678927]])
      sub=res.substitute({arg0:s0})
      ref=Data(numarray.array([0.40641838535698244, -0.059149437155990005]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([-0.77011322960568751, 0.79997718501089743]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_Symbol_rank3_taggedData_rank4_offset3(self):
      arg0=Symbol(shape=(2, 4, 3))
      arg1=Data(numarray.array([[[[-0.036806182949287392, 0.3588620396258293], [0.60382800793994829, -0.83114799758347169], [0.13455967654205647, 0.77315772887346967]], [[-0.25248012468754344, -0.74575171654228489], [0.56620954335080054, 0.24979784840523167], [0.65866378850217489, -0.2360823464400188]], [[-0.20206335952576882, -0.86131297427387676], [-0.51179990993312341, -0.02823131378193211], [0.8136428634606383, 0.85051841892711533]], [[0.65078494752592109, 0.17332258987598959], [0.9921406434394151, 0.61736183509425779], [-0.9448085875211969, 0.39955760323828393]]], [[[-0.0052904814975156533, -0.54290559300635777], [0.24729749573869753, -0.73604871032772734], [-0.47627728383915935, 0.64889240137708515]], [[-0.92551942815095822, 0.30881466964716098], [-0.78943794939284961, -0.70452042584007391], [0.38194023466788085, 0.87556968092905074]], [[0.51130821924921754, 0.98075564315162844], [-0.48542269521623771, 0.17115154173386915], [0.71050968704210882, -0.40949724594856951]], [[0.96023113091117507, 0.48630935089896155], [0.77646686005574495, -0.092768987372596978], [-0.68798489936228546, -0.99191392196581507]]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[[0.095312325889383764, -0.69037255617432303], [0.028230158133491834, -0.37462235159427304], [0.01811388441846784, -0.10902084133002643]], [[-0.55561459241054334, -0.3962736770112314], [-0.16371959487362919, 0.26418728785990231], [0.93030812021133213, 0.69416468925862662]], [[-0.30646013674203543, -0.72275899449227965], [-0.83905662638681577, 0.70228322937336185], [-0.60987395821236268, -0.27075247060184116]], [[0.25244655936316907, -0.076444296594003758], [0.18703204511739724, -0.94036028644460279], [-0.72987860381405856, -0.1148766364079874]]], [[[0.40137498756944168, -0.061083231009979144], [-0.95727920651358867, 0.57368791065782454], [-0.92247079704626289, 0.57293216252151691]], [[-0.86404795466396989, -0.39410396517585622], [0.65446139567582162, -0.37293588347152062], [0.18340987025489031, 0.20094559856738381]], [[-0.46970973445923048, 0.15028418272336896], [-0.21400435037119347, -0.67576536535541631], [-0.69009375807966622, 0.57121507339578015]], [[0.66515649940144828, -0.81018622007830521], [-0.14538578476566566, -0.29488917587085117], [0.19687425335497988, 0.75086905609185428]]]]))
      res=generalTensorProduct(arg0,arg1,offset=3)
      s0=numarray.array([[[-0.49853801091014716, 0.060460383247491922, -0.73321921420642178], [-0.90329519922371948, -0.57921441581767819, -0.013620829544860991], [0.53098072083157954, 0.23592231826088383, -0.30240001259970328], [0.75741886442810857, -0.63324338093302157, 0.73961497735830672]], [[-0.54263874305269066, -0.13866484377034327, 0.55513283528798829], [-0.1066522224455162, 0.64052261707004399, 0.16552311090728633], [0.36093716879763593, -0.38915318316290781, -0.87222679737207498], [0.16870017186486619, 0.7677796606440821, 0.50092271794631915]]])
      sub=res.substitute({arg0:s0})
      ref=Data(numarray.array([-1.9331899783448643, -0.37310967166496833]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([0.44106448543702037, 0.85343786530973487]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_Symbol_rank0_taggedData_rank2_offset0(self):
      arg0=Symbol(shape=())
      arg1=Data(numarray.array([[0.96541525508569892, -0.20650686853630895, -0.48763896957938879, -0.8104297616673195, -0.42132709781723676], [-0.021156033231873206, 0.12656458056491204, -0.49355873426137675, 0.41110080826654594, 0.17286851537255687], [-0.22623928477888366, -0.36090330096799406, 0.27673576413418366, -0.90984744619519198, -0.33293232304086673], [0.22563792818349548, -0.71485160842341267, 0.15043900244238584, 0.25666644923042137, -0.42353203248171623]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[-0.35560944761073765, -0.41872814713152362, 0.56471375879078201, -0.80781183568053083, 0.25404603802263126], [-0.91908712869599429, 0.98539720891027205, -0.10218832145119006, 0.63064091551821999, -0.98598359223603227], [0.019346565065388566, -0.086583298571799361, 0.64441947468352145, -0.18441950916748695, 0.8052302653511989], [-0.19346796771248709, -0.99970607126853617, 0.63336324244368947, -0.57823062772004219, -0.15006923970790553]]))
      res=generalTensorProduct(arg0,arg1,offset=0)
      s0=numarray.array(0.77467869957)
      sub=res.substitute({arg0:s0})
      ref=Data(numarray.array([[0.74788663435451319, -0.15997647236991322, -0.37776352281325615, -0.62782267386099899, -0.3263931282305213], [-0.016389128312120319, 0.098046884683607144, -0.38234943841885705, 0.31847103953996919, 0.13391755668535235], [-0.17526275492407847, -0.27958409986428789, 0.2143813018838891, -0.70483943642527924, -0.25791557905800888], [0.17479689677878552, -0.55378031439873832, 0.1165418907766263, 0.19883403111298828, -0.32810124414903635]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[-0.27548306442977594, -0.32437977649306737, 0.43747172028914488, -0.62579462236198391, 0.19680405436619963], [-0.71199722164943735, 0.76336622835819479, -0.079163115973015619, 0.48854408432908258, -0.76382048703044403], [0.014987371865995277, -0.067074237142054238, 0.49921804062520209, -0.14286586553714614, 0.62379473481640935], [-0.14987551363589696, -0.77445099924221628, 0.49065301301150877, -0.44794295073351792, -0.11625544346232977]]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_Symbol_rank1_taggedData_rank3_offset1(self):
      arg0=Symbol(shape=(3,))
      arg1=Data(numarray.array([[[-0.46969319757533445, 0.31741733885211709, 0.89160593117172393, -0.73296587057481388, -0.68123650605634767], [-0.40087112758962018, -0.785669163134739, -0.098530479474193911, 0.61389289600537955, -0.88969078415468705], [0.28884729417843369, 0.38068005484844503, 0.81683833385617288, 0.16671895078033439, -0.25793638946192599], [0.83517021532658742, -0.75150118475354399, 0.81650415661993447, -0.83295081227032575, 0.60624083565135178]], [[0.17761092478171636, -0.72983225192512236, -0.24131387922551739, -0.24564107075664476, 0.23034554942942997], [-0.8777815205858448, -0.75307763715135967, 0.38055491373991956, 0.75929330953955776, 0.99468974085861328], [-0.56418194068141281, -0.71932111214903283, 0.088703198989380949, -0.99974975808785671, -0.27396665144620114], [0.93209099404596274, -0.9987875168592284, -0.83551964385737554, -0.36511084117990311, 0.29829241174313315]], [[-0.96015043699245028, -0.23994553624337489, -0.15171900856196108, 0.18849909781007135, 0.51386047279648528], [-0.95368762778309013, -0.14276396574660222, 0.57643259567835381, -0.041226815520055693, 0.96843930154676561], [0.64094544073717663, 0.040454660622616156, 0.53717915175424968, 0.93223198969685916, 0.13089946216661463], [-0.026294728813930579, 0.070012595024297353, -0.2335859123348496, -0.62987472346802553, -0.73986293550244309]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[0.52397275570150859, -0.19452026281363266, 0.750779482504776, 0.34121465788292715, -0.56383141418793548], [0.21390723793137245, 0.82890325495706763, -0.41833947444046449, 0.65296352492447585, -0.57679961245000588], [0.65584950662155128, 0.69274815905694265, 0.90764618890502091, -0.23490028557772402, 0.064406219113518626], [-0.5538309997965436, 0.23720805103493992, -0.97051838622617526, -0.29952566307093598, 0.01319689239740951]], [[-0.89952948189768112, 0.98694148208147636, 0.90262801291098849, 0.0059895175507025389, 0.48579122787765239], [-0.60246545240467797, 0.075296722142718764, -0.90011787056343362, 0.023517562350129362, 0.81832781681840894], [0.4999377444357529, 0.71906643294314199, 0.3753375948771942, -0.49248646606323865, 0.92701607943236741], [-0.43784605394358223, -0.70113096439614142, 0.89232866632495922, -0.17951823344850237, 0.11029858632855571]], [[-0.75417724270741049, -0.25038914685886349, 0.84919964975308404, -0.84258665249792664, -0.56826073428102153], [0.69893431498583314, -0.64691255600587261, -0.67384222356321644, -0.21561639379588038, -0.00038413167707651574], [0.27131261135302154, -0.39264118719173879, -0.46859208057346513, 0.0087898863425512896, 0.42425692667826365], [0.6017244774840329, -0.21679156583281745, 0.03167184890280117, -0.093447699960699238, -0.56744098661025788]]]))
      res=generalTensorProduct(arg0,arg1,offset=1)
      s0=numarray.array([0.26546413279143044, -0.37027387618261609, -0.16758675846063209])
      sub=res.substitute({arg0:s0})
      ref=Data(numarray.array([[-0.029542883573551254, 0.39471243010086887, 0.35146771758945344, -0.13521163055389118, -0.35225100869177256], [0.37842807794626809, 0.094203342966405035, -0.2636683214787453, -0.11127086324319053, -0.76678622172705346], [0.17816646174330203, 0.3606230516083801, 0.093972689853203201, 0.25820938254202014, 0.011032817483150673], [-0.1190145600088736, 0.15859513119640545, 0.56526957088576535, 0.01963110450501207, 0.17447654123296955]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[0.5985583606115441, -0.37511489553810623, -0.27722916543885834, 0.22956885718497602, -0.23431984395112204], [0.16272978151787731, 0.30057765284204835, 0.3351630411208682, 0.20076490942598552, -0.45606064625230075], [-0.056477767031384851, -0.016550262272155419, 0.18049963011050946, 0.11852420359397838, -0.3972521390081698], [-0.085740365177014013, 0.35891210523727735, -0.5933515983587524, 0.0026181888705438632, 0.057758212062198958]]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_Symbol_rank2_taggedData_rank4_offset2(self):
      arg0=Symbol(shape=(2, 3))
      arg1=Data(numarray.array([[[[0.65206519402992469, -0.084496441996423144, 0.1265613032025743, -0.82643907452689769, -0.25157847987724025], [0.78585186169490062, -0.57362518202386825, -0.13572412135205836, 0.52670045722978798, -0.90374131312767081], [-0.7870380409680291, -0.9030447273069766, -0.47252916627647035, -0.32051925002090265, 0.0012403388742363575], [-0.31140499409550659, -0.29723168867551619, 0.68712584451280856, 0.90430205234318484, -0.92200358530334858]], [[-0.49389963631288847, 0.1422761172629381, -0.70918224407775998, -0.7150134559394683, 0.76843800986365118], [0.7646658725966724, -0.10427300712857979, -0.37145318399321448, -0.5241160785963479, 0.99705113285563018], [-0.42544130322230789, 0.81563521758816226, 0.60971212619617332, 0.3095741798143663, -0.63028912537404502], [-0.30682669045306232, -0.65156161433635607, -0.31303855358837351, -0.63650047468578386, -0.5474917376758206]], [[0.77932335635551331, -0.7242040345373757, -0.57444565021579397, -0.45015378470060052, 0.64486273072563738], [-0.97023539368526257, 0.69561036202187099, -0.094524717512552092, 0.00031769334701170493, 0.69782809474330487], [-0.71610930023436503, -0.2749361962735779, 0.032323525998753544, 0.73386963331248301, 0.74311443804909971], [-0.29630874540012453, 0.78348025580615643, -0.39496044899816884, -0.11008081498596622, -0.13331207304660397]]], [[[-0.64521910105640057, 0.43403776783968584, -0.8199504454244535, 0.57969375595057859, 0.41008067869949327], [0.86604691212566332, 0.84468575301976423, -0.44534740478769241, 0.45318746902110618, -0.51933456340806394], [-0.13423995759008855, 0.46263642048193421, -0.23612645344781469, 0.84608860365803373, 0.077331957567117637], [0.68255739326807841, -0.1565272122774104, 0.1089760576278882, 0.2468473938342941, -0.84158183722444191]], [[0.32399882204442187, -0.49428383616166016, 0.16209968446167866, -0.93559632821071093, -0.2850658783088682], [-0.089379404662826456, 0.53581715314306821, -0.47166418398061039, 0.72678215882685815, 0.085883841674558647], [-0.84577392535695828, 0.31731197965785451, 0.86850228299858778, -0.23002591369425529, 0.30514861237095636], [-0.88004243378404334, -0.40543754791133235, -0.9420018919286719, 0.12173171685507822, 0.65382403270217582]], [[0.62448241434559226, -0.20800521049327125, 0.067823535063860296, 0.50825165565253516, 0.92081759475023861], [0.3556940492192493, 0.85742521810918837, 0.57402744341358747, 0.91821623051129464, 0.71924074598813559], [0.2575053376401506, 0.024331353668862743, -0.59681521278592164, -0.31812748832888582, -0.96740840516471915], [-0.89470588678054708, -0.67741295523314982, -0.40438755274067217, -0.15337443255935712, 0.46667263137137027]]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[[0.5555201769204432, 0.2137586583858424, -0.074674558163822402, -0.90217021309394196, -0.092735040035575977], [0.088816651131417901, 0.95537035153650951, 0.36547901464690891, -0.10409150538975886, 0.67832851309630104], [0.78376193218939738, 0.73172977519974181, -0.92075716316977796, -0.22557053824067985, 0.032868622167917527], [-0.85935510892535527, -0.64834503094857121, 0.11909293346484517, 0.11132593426528326, -0.19796899985352012]], [[-0.92508230679029446, -0.63323157898543303, -0.40138959741621227, 0.089098911652681467, -0.89574583957038878], [-0.030375770612454778, 0.73455399354541906, 0.38078806485591254, -0.61547028421327221, 0.053136658674380888], [-0.69539110686167827, 0.16306554375091209, 0.43537061649521425, -0.15072994650208416, 0.58357039754604401], [-0.73855576137305889, -0.95673383605013673, -0.85442392267229672, -0.53301351259829977, 0.54170562225600927]], [[0.14184612247223094, 0.71130466015714777, 0.20222916639765476, 0.91130520315606955, -0.80046968406361518], [0.59313937149107643, 0.029552405001408877, -0.24448563132027323, 0.68882175304121374, 0.030973118196141902], [-0.1620226004693488, 0.47770458471962463, -0.36817477483769401, -0.80008491667028037, 0.34999862033091333], [0.9569250464153034, -0.47124438702930749, -0.13772907068493034, 0.97703359922633859, -0.92370358485600157]]], [[[0.43547016541417305, 0.37098072863055065, -0.14661001231210236, -0.67845888980854707, 0.99596986428514467], [0.55943239401005229, -0.082956422825952281, -0.36240528227607371, -0.63481108186174384, -0.66735489443001628], [-0.28682192125624151, -0.43744084953124696, -0.23672560233565831, 0.0063826170018141948, 0.39365476631870333], [0.7204188286906783, 0.9915093763736702, -0.56172521043278767, -0.95450696043400995, -0.92594883605422762]], [[-0.31712213365546305, 0.62801436625720219, -0.09648806135059429, 0.27930320147078991, -0.43898236986193573], [0.32932831427924114, -0.91682084122371266, -0.71528166755263833, -0.084035728288651246, 0.41954657017123376], [-0.1931553176037788, 0.062693110307928901, -0.60716673331098603, -0.61796689778932934, -0.98476103953648542], [-0.74840071470011882, 0.74346740075672191, -0.95978376966767764, 0.24047831105555351, 0.25779721684021206]], [[0.39705799887473248, -0.06715627229080634, 0.53527103266814824, -0.48636466118823973, 0.63727113177539119], [-0.33349746831295302, 0.67782443017311, 0.36122168404487809, 0.60173350373944934, -0.27683729057472339], [-0.96690462154553414, 0.034469853285622687, 0.42746215180997305, -0.70042482612232004, 0.8165905769042705], [0.28502574957139482, 0.79910876802051267, 0.14739330996653055, 0.96924795436903977, 0.029998734076815525]]]]))
      res=generalTensorProduct(arg0,arg1,offset=2)
      s0=numarray.array([[-0.43891274835281902, 0.18003313903237661, 0.72241188305328707], [-0.32305174453889274, 0.19260742829293265, 0.26837850990104428]])
      sub=res.substitute({arg0:s0})
      ref=Data(numarray.array([[0.62631582097442584, -0.75171614379214069, -0.28390163439753036, -0.32225797450188132, 0.77436637831031296], [-1.109697244996342, 0.79595566006604246, 0.13149224568299839, -0.085294158857436603, 1.4576276989932211], [-0.29890536111440902, 0.26277319049212178, 0.42390703873539148, 0.3235560595990542, 0.19697740966330379], [-0.7627402084384145, 0.36982456764843696, -0.96844012422056747, -0.68848501638547999, 0.7328569973667729]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[-0.40309667590093712, 0.28912182998667746, 0.27903848429081479, 1.2127958485701626, -0.93410134651558441], [0.17724143972969358, -0.23360493366956603, -0.19222701997851954, 0.78287832419409176, -0.043684554597730602], [-0.79028484793508991, 0.21593329979852446, 0.2907908145046274, -0.81518735342555071, 0.24579092752090026], [0.63512611487598591, -0.19075731059479234, -0.26943112241718359, 1.1757965841459233, -0.1260443033500947]]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_Symbol_rank0_taggedData_rank3_offset0(self):
      arg0=Symbol(shape=())
      arg1=Data(numarray.array([[[0.21417192563810494, -0.48597810108817985], [0.72280139021776324, -0.91479987450310629]], [[-0.80183266849887147, 0.71571618379819046], [-0.40326029235487471, -0.00907546705161133]], [[0.073736673252838614, -0.06278229370323607], [0.87945152927928993, -0.9056699897623286]], [[0.18037238754633123, -0.66136611056107619], [-0.13119247994422811, 0.38008748576918006]], [[0.73471764522594918, 0.34531166342792297], [0.66429153247276607, 0.058504913266755221]], [[-0.42756928737326905, -0.44310186437079713], [0.5582879988821825, 0.52268289820653835]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[-0.67966421272013933, -0.5494549558100561], [0.36392105539243902, -0.98341641061496476]], [[0.87163349279672309, 0.51529910406370427], [0.45158194725139422, -0.43170764903577497]], [[0.57256079785977931, -0.4811147538578624], [-0.22394340849531025, -0.43062058731879382]], [[0.22453334616903642, 0.9636493841567082], [0.92559807691233287, -0.6971407902308826]], [[-0.01154201672925792, -0.3261767534917468], [-0.46599299361341529, -0.11365072288173939]], [[0.15572712373352848, 0.37661181183071069], [0.40410121030067025, -0.97124125351070822]]]))
      res=generalTensorProduct(arg0,arg1,offset=0)
      s0=numarray.array(-0.225987122939)
      sub=res.substitute({arg0:s0})
      ref=Data(numarray.array([[[-0.048400097289301169, 0.1098247928763679], [-0.16334380663175804, 0.20673299170408774]], [[0.18120385783271209, -0.16174264121756854], [0.09113163326489418, 0.0020509386883230448]], [[-0.016663538643516017, 0.014187989925517452], [-0.19874472086629627, 0.20466975531875298]], [[-0.040761836919267713, 0.14946022453517888], [0.029647811093853307, -0.085894877374166775]], [[-0.16603672681726769, -0.078035989335421718], [-0.15012133221638493, -0.013221357026960775]], [[0.096625153110644194, 0.10013531549814698], [-0.12616589863886132, -0.11811960437521235]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[0.15359535999735291, 0.12416974464819355], [-0.08224147228513036, 0.22223944528605957]], [[-0.19697794529456739, -0.11645096198049805], [-0.10205170503061899, 0.097560369556435739]], [[-0.12939136741609783, 0.10872573902793418], [0.050608326587050598, 0.097314707606557832]], [[-0.050741644904649413, -0.21777235184769533], [-0.20917324639946386, 0.15754484146782952]], [[0.0026083471535609803, 0.073711746091244784], [0.10530841593651538, 0.025683599884003289]], [[-0.035192324656135129, -0.085109419820537352], [-0.09132166989209245, 0.21948801656073602]]]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_Symbol_rank1_taggedData_rank4_offset1(self):
      arg0=Symbol(shape=(3,))
      arg1=Data(numarray.array([[[[-0.52720010860745536, -0.43582412739616982], [0.55603792789365669, -0.13018372552516499]], [[0.30212091134987307, 0.57810929262132182], [-0.89131866944614258, -0.90520915179819039]], [[0.55463359346312879, 0.060934115849946124], [-0.65176368868408296, -0.004133900756547515]], [[0.57037626582711964, 0.47420884642764416], [0.49542054574174066, 0.63954429342544028]], [[-0.52052905739577637, -0.070045473711700001], [-0.68824095024287568, 0.62381192807304209]], [[-0.95909587074617697, 0.057851504558286582], [-0.10115725221495508, -0.43702150878017787]]], [[[-0.40227402449963923, 0.74786820883631644], [-0.72869176270591351, 0.0006267164799997893]], [[-0.19228402267274936, 0.34352178018874446], [0.13450232523559791, -0.88582881402028013]], [[0.11266257586021, -0.022385185652000983], [0.63974491071253281, 0.30009785135666189]], [[-0.03873825730749525, 0.73996354997196323], [0.97307767897398079, 0.70021560435554453]], [[-0.38030486374970129, -0.60496968355677971], [0.47021961606538265, 0.86367706719230308]], [[-0.2932506491264486, 0.17599307943727704], [-0.47054282914449952, 0.48558775492097772]]], [[[0.29994496052748731, 0.72722523440744435], [-0.56839464223024883, 0.14168746190617809]], [[-0.26995286119658712, -0.14048506023338492], [-0.80651706885193919, -0.94270854011254879]], [[-0.50365113088964164, -0.72683091361471464], [0.60581607091017275, 0.74728325942009177]], [[0.69493327361610202, 0.33137199979913623], [-0.036916665708520924, -0.42245292599936768]], [[-0.96024284812193517, 0.20795206175424008], [0.67887305036044387, -0.042704376359294915]], [[0.73601900251191377, -0.55815380624156563], [-0.44566284067718254, -0.35692839692754874]]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[[-0.19775388904889946, 0.46642448288048932], [-0.7253900790210599, 0.24177601480065514]], [[0.81364883295460455, -0.48538370580475032], [-0.027115535996981466, 0.21022282689211269]], [[0.95134604608249029, -0.8749470190530162], [-0.43210870255718881, 0.075333254430226981]], [[-0.1169113804017361, 0.43003885977005285], [-0.091183202753062353, 0.57730929892895277]], [[-0.30924098523996468, -0.81739915277948838], [-0.1102058120784517, 0.85905074495882605]], [[0.71812044375996953, 0.32821978550659647], [0.41972981457384106, -0.12992679767431747]]], [[[0.87806757327605522, -0.40912891945383256], [0.85102528877749317, 0.99503432133000547]], [[0.93267849734130626, 0.18395636083785694], [-0.89664644340459443, -0.85204946245960844]], [[-0.48972878527703689, -0.83039291662715686], [-0.71119947999399913, 0.23396242554689262]], [[0.04085526525206018, -0.36422308003909087], [-0.55729141586280595, -0.35272810493440576]], [[0.14295653160616673, 0.62240417485974531], [0.096336399538830886, 0.87054226796753431]], [[-0.062004736897307788, 0.45597068558472054], [-0.51120181356639072, -0.62977734494831572]]], [[[0.099672906477919598, 0.30544508944065596], [0.91827340792157064, 0.93026667538507701]], [[-0.39849518474515744, -0.71221820698867866], [0.89941963036301176, -0.54654339892239068]], [[-0.47509745553746185, -0.6499550117282582], [-0.27097458309822575, 0.93280164920136976]], [[0.68324322390143566, -0.21780101590731449], [-0.29413465350200196, 0.89236105698159696]], [[0.19825445666237163, -0.12876579902034657], [0.11362320627639888, -0.1100515242962381]], [[0.18722105562871549, -0.58594261555280447], [-0.76711133566699563, -0.84802558040919207]]]]))
      res=generalTensorProduct(arg0,arg1,offset=1)
      s0=numarray.array([0.95777129851918019, -0.6045100367976044, -0.84364551499680251])
      sub=res.substitute({arg0:s0})
      ref=Data(numarray.array([[[-0.51480566794232563, -1.4830339862659572], [1.4525822431778463, -0.24459908401311559]], [[0.63334487980391629, 0.46455371488720248], [-0.25457293710204865, 0.46382089602571441]], [[0.88800949683268526, 0.68508065709601573], [-1.5220667850908702, -0.81581366490399809]], [[-0.016569657392079717, -0.2726922716362129], [-0.082591064661710775, 0.54565032393603119]], [[0.54145488808654862, 0.12318487712279522], [-1.5161581102076203, 0.11139506029885943]], [[-1.3622606672561952, 0.41990288302941753], [0.56354380689048011, -0.41098828829802364]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[-0.80429226065026627, 0.43636314099917728], [-1.983908368685368, -1.1547574149952715]], [[0.55166466188749397, 0.024769647377149262], [-0.24273004488075678, 1.1775067290476517]], [[1.6080317414567549, 0.21231334060709861], [0.24467240238091914, -0.85623453328965093]], [[-0.71308686401634169, 0.81580223488459191], [0.49770098103837818, 0.013321553095497096]], [[-0.54985728136167111, -1.0504983297850405], [-0.25964599254354725, 0.38936708394124264]], [[0.56732943180244055, 0.53304849389951059], [1.3582018345002909, 0.97169954576280926]]]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_Symbol_rank0_taggedData_rank4_offset0(self):
      arg0=Symbol(shape=())
      arg1=Data(numarray.array([[[[-0.94388637562013988, -0.87340524767109917, 0.31932331878035725, -0.93660547221612167], [-0.28298509395638782, -0.61059996871422606, -0.74198306696054317, -0.28271834302624077], [-0.54700932120894374, -0.84297532191002955, -0.40502641654066629, 0.023785736053669959]], [[-0.84105667414994856, 0.84872930515742095, -0.79866971162953315, 0.87056966561179627], [0.12350788416860836, 0.24616008035556258, -0.29425290735985632, 0.48122897806422205], [-0.79649977631284585, -0.57392842383024245, -0.50328573946407951, -0.9002932502642822]]], [[[0.15110951257186622, 0.80281415753278185, 0.41833516623396627, 0.73239706274731042], [0.30887491865797179, 0.60021735335437865, -0.19086252853848484, 0.22485091970316962], [0.50892397461551675, 0.24663504303752459, 0.76920321129387537, 0.13236805457657952]], [[0.72542249651132029, 0.19461964645025742, 0.41843216150713158, -0.27659965537199671], [0.26611899619532586, -0.92028487126210456, -0.09647002601906407, 0.060919222498406311], [-0.47583468968846421, 0.072001087900416705, 0.59645481122894783, -0.24710921356050863]]], [[[-0.74416365638424242, -0.77874792408186067, 0.41060304001323855, 0.5887659324185408], [-0.6146940472420841, 0.11956317752524015, 0.076800675342375779, 0.26669320345368774], [-0.27258722294330284, 0.00070962542748786994, 0.85009407388262703, -0.052445836811541247]], [[-0.94846471850847824, -0.012847166544237565, 0.13867172194895905, -0.50999171249124653], [0.17351169703453984, -0.047719015849063684, -0.75367947687132553, 0.23830489099343088], [-0.13000624971462749, 0.14720959984068216, -0.023049583913567373, 0.95169515900465584]]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[[-0.38232379176539166, -0.047392979775825683, 0.71973214757751891, 0.58909318917226838], [-0.31488001512273023, -0.81418131935772542, -0.61712155580920069, -0.51894040765221972], [0.65007616830143777, -0.31244290346844505, -0.8534372608833658, -0.70624245191406754]], [[-0.72550781722850766, -0.70009477274141618, -0.69693580611189332, 0.90681359133506323], [-0.78356288325102441, 0.41830022132112066, -0.35639486650084296, -0.078223007794027799], [-0.017984408983787947, -0.089482877895976198, -0.64307128346017661, -0.73276722763994351]]], [[[0.99546982369172587, -0.25159938469968002, 0.5063085184917504, -0.46879884658015114], [-0.00010552860679213794, 0.81642299012183495, 0.41311420025220547, 0.70854408573626926], [0.23691182023228485, -0.62685048696403278, 0.37645931375363073, -0.65847370090902402]], [[-0.44724356112764974, -0.53271246711955356, -0.37538581801198445, -0.12380101797247622], [0.022127263403553865, 0.56379943467285587, 0.063902232694374339, -0.96732417034432006], [-0.35327573618934305, -0.13654085968330643, -0.3022300688214572, 0.52210806003351418]]], [[[-0.67850462804637823, -0.6031824595469728, 0.89831532714762963, -0.41740496329721521], [-0.95231422950473221, -0.16284788102220515, 0.015299389381570494, 0.099184180228980123], [0.19006093243843569, -0.8318706856506668, -0.62601164880979487, 0.30083766151275015]], [[-0.36613744209104415, 0.99523134946627212, 0.13596454712010186, -0.16438154096209412], [-0.066653406362238599, 0.38925662501114999, -0.1096159498880751, 0.17852867868671463], [0.72875814043845022, 0.97443944150322537, 0.11725849058665427, -0.38916729188624299]]]]))
      res=generalTensorProduct(arg0,arg1,offset=0)
      s0=numarray.array(0.727835895248)
      sub=res.substitute({arg0:s0})
      ref=Data(numarray.array([[[[-0.68699438521193523, -0.63569569035305185, 0.23241497359808436, -0.68169508236465703], [-0.20596670920160515, -0.44441657486755881, -0.54004190980013145, -0.20577255829955329], [-0.39813301901114756, -0.61354769809441156, -0.29479276448199127, 0.017312112494757035]], [[-0.61215123738428734, 0.61773565364251903, -0.5813004845713946, 0.63363185194636973], [0.089893471444053297, 0.17916414245992635, -0.21416782825760677, 0.35025572406868416], [-0.57972112775754314, -0.41772570816679505, -0.36630942674842237, -0.65526574379189351]]], [[[0.10998292736324289, 0.58431696106569286, 0.30447935022964667, 0.53306487184174145], [0.22481025294109797, 0.43685973472210798, -0.13891659932811734, 0.1636545704395071], [0.37041313667748782, 0.17950983734876158, 0.55985370791976374, 0.096342221504989403]], [[0.52798853218140263, 0.14165116460698488, 0.30454994687112574, -0.20131915779298329], [0.19369095783834123, -0.66981636315830351, -0.070214347752189557, 0.044339196844943585], [-0.34632956735948822, 0.052404976270834368, 0.43412122150583649, -0.17985495567585794]]], [[[-0.54162902105549804, -0.56680069249669274, 0.29885163121961228, 0.42852497951341001], [-0.44739639217809823, 0.087022372352786412, 0.05589828829347402, 0.194108886492289], [-0.19839876544412252, 0.00051649085830642418, 0.61872898130943599, -0.038171962587762009]], [[-0.69032666750682159, -0.0093506289631261289, 0.10093025689031127, -0.37119027463015986], [0.12628804134714522, -0.034731612620859838, -0.54855497677873399, 0.17344685367819615], [-0.094623215148889314, 0.10714443088915221, -0.01677631454282669, 0.69267789805740265]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[-0.27826897925419836, -0.034494311863611495, 0.5238468919708954, 0.42876316872573528], [-0.22918097770257639, -0.59259038946898024, -0.4491632200492679, -0.37770345618394879], [0.47314876993510829, -0.22740716035986025, -0.62116227281310044, -0.51402860725106336]], [[-0.52805063166197996, -0.50955410567673876, -0.50725489637188126, 0.66001148207246807], [-0.5703051926141639, 0.30445391606772132, -0.2593969767214554, -0.056933512906762539], [-0.013089698413222632, -0.065128850542791064, -0.46805036330555938, -0.53333429113776043]]], [[[0.72453867031910013, -0.18312306340675374, 0.36850951382816433, -0.34120862819192427], [-7.680750799883668e-05, 0.59422195791642729, 0.30067934378025207, 0.51570381896457884], [0.17243292677361352, -0.45624428536615191, 0.27400060165034579, -0.47926079559842566]], [[-0.32551991770727534, -0.3877272554157653, -0.27321927291617965, -0.090106824748618933], [0.016105016568715359, 0.41035346627547065, 0.046510338741460072, -0.70405325351764925], [-0.25712676171878951, -0.099379338845539664, -0.21997389271154941, 0.38000898729072291]]], [[[-0.49384002338409061, -0.43901784544230033, 0.65382614034955278, -0.30380231514241407], [-0.69312847978904735, -0.11852653327304696, 0.01113544476728409, 0.072189806611405116], [0.13833316891301073, -0.60546534522117423, -0.45563374884719393, 0.21896044869146666]], [[-0.26648797294817145, 0.72436510021772338, 0.098959877875156976, -0.11964278602840213], [-0.048512741690992962, 0.28331494414623043, -0.079782423020254109, 0.12993958067939895], [0.53041633356533402, 0.70923200327152391, 0.085344938471574247, -0.28324992429128842]]]]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_Symbol_rank1_taggedData_rank0_offset0(self):
      arg0=Symbol(shape=(2,))
      arg1=Data(0.363357642396,self.functionspace)
      arg1.setTaggedValue(1,-0.354225708992)
      res=generalTensorProduct(arg0,arg1,offset=0)
      s0=numarray.array([0.97101040830607976, 0.4645088154062762])
      sub=res.substitute({arg0:s0})
      ref=Data(numarray.array([0.35282405270406575, 0.16878282803817909]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([-0.34395685032066908, -0.16454096447024405]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_Symbol_rank2_taggedData_rank1_offset1(self):
      arg0=Symbol(shape=(2, 3))
      arg1=Data(numarray.array([-0.55108445415083862, 0.71294288546312079, -0.82071588233446202]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([-0.040215664686230834, -0.47728968658172843, 0.036717397135321628]))
      res=generalTensorProduct(arg0,arg1,offset=1)
      s0=numarray.array([[0.69200608286042531, -0.3796562551520406, 0.44140291267963838], [-0.87117794862889997, 0.5282176103735492, -0.21743086004379553]])
      sub=res.substitute({arg0:s0})
      ref=Data(numarray.array([-1.014293401419287, 1.0351305717281418]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([0.16958369648270921, -0.22506131267574514]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_Symbol_rank3_taggedData_rank2_offset2(self):
      arg0=Symbol(shape=(2, 2, 3))
      arg1=Data(numarray.array([[0.15814298245943426, 0.98142395353051226, 0.67900156424941005], [-0.12516556697134518, 0.40383089237577452, 0.083359923338467645]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[0.71096660585325311, 0.23226806775857178, -0.72749271916024805], [0.85320437925522263, -0.78769082412249114, -0.79678572764970168]]))
      res=generalTensorProduct(arg0,arg1,offset=2)
      s0=numarray.array([[[0.23793370998659125, 0.24191362835018526, -0.92426800442359625], [-0.90113808206765134, 0.2475162500826773, 0.074006471903230731]], [[-0.66018383669805569, 0.15777611279342496, 0.51500027725401987], [0.10680299716902342, -0.15148688030229951, 0.67348617215975137]]])
      sub=res.substitute({arg0:s0})
      ref=Data(numarray.array([-0.13361670378177018, 0.38172642525797124]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([-0.12503856051176798, -1.1335558200822786]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_Symbol_rank4_taggedData_rank3_offset3(self):
      arg0=Symbol(shape=(2, 2, 4, 3))
      arg1=Data(numarray.array([[[-0.36510061199868704, -0.70329946518178255, -0.99928901922175317], [-0.23966160152903559, -0.94007906129141561, 0.29149473710434526], [0.60704835425197912, 0.0052234638279098355, -0.76500561586875793], [-0.77511588975672652, -0.98112756710815585, 0.21644714824974476]], [[0.17249876458884827, -0.23987052092438099, 0.03559468175775593], [-0.48868446684056743, -0.8670798136394946, 0.77290844323827557], [0.26944707598438478, -0.94555504940269386, -0.12078554454547774], [-0.16331974101896218, 0.2763217186261091, 0.41718874970512188]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[-0.43768975440259239, 0.15673244145311993, -0.88043900860784552], [-0.59999346829644362, -0.99857397002992965, 0.18155238201136514], [0.73436315472611557, -0.97599224317962019, -0.25013889403080047], [-0.15998695057909185, 0.42489531424848992, -0.15719471980263311]], [[0.046315724148287218, 0.84868175903614862, -0.32880771958633059], [0.45266700945423088, 0.23718632651728488, -0.332759414330559], [0.024662226358104888, -0.5787957692527117, -0.99161958817620222], [-0.033645369224803545, 0.14649993451573295, -0.1029075913532258]]]))
      res=generalTensorProduct(arg0,arg1,offset=3)
      s0=numarray.array([[[[-0.53780694826662079, 0.52779721661353629, 0.23555444164262918], [0.33563551557834814, -0.13516869655645958, -0.058084577574881058], [0.40748951616784246, -0.759855976748258, 0.25647000642062356], [0.82110371877144916, 0.27961418358470946, 0.55030771710621185]], [[-0.77581583222442174, 0.40121727083612302, 0.30702753859141696], [-0.77938106031552268, 0.37896029097115758, 0.91034872102889031], [-0.65782432741940422, 0.97756333152953623, 0.17333138754380251], [-0.7248631213906922, 0.10446516646810666, -0.038500351621914231]]], [[[-0.76599252603266321, 0.42210458508827542, 0.045569179264311144], [-0.34549493925414132, 0.93683966957377085, -0.07364438303272336], [-0.85840211353407581, -0.8538797503262312, 0.27226842629495285], [0.77356574298250158, -0.39198958068925127, 0.79087922589406423]], [[-0.62725106772394867, -0.76103897835583534, -0.07529815032601106], [-0.27171956440490797, 0.89256684966444899, -0.13058476891643234], [0.026709197950465002, 0.91775278702854668, 0.6476145997957734], [-0.29063594996582442, -0.44941149178840623, 0.074754920455710083]]]])
      sub=res.substitute({arg0:s0})
      ref=Data(numarray.array([-1.5795895585059447, -3.3145145180530711]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([-0.16106328480761281, -2.4145029137807197]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_Symbol_rank1_taggedData_rank1_offset0(self):
      arg0=Symbol(shape=(2,))
      arg1=Data(numarray.array([0.56615354028150966, 0.75174540511110455]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([-0.92404779635643308, -0.98655984258257834]))
      res=generalTensorProduct(arg0,arg1,offset=0)
      s0=numarray.array([-0.82965982076257383, 0.59652466496008416])
      sub=res.substitute({arg0:s0})
      ref=Data(numarray.array([[-0.46971484475405395, -0.6236929580635675], [0.33772455093239306, 0.4484346759191844]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[0.76664532910112959, 0.81850906216861496], [-0.5512173021286253, -0.58850727955964588]]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2, 2),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_Symbol_rank2_taggedData_rank2_offset1(self):
      arg0=Symbol(shape=(2, 3))
      arg1=Data(numarray.array([[-0.22252911117681085, -0.62190939907192311], [-0.62588365404022017, 0.35076925387805713], [0.57948410821676322, 0.13190553964243734]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[-0.0806230555964218, -0.41818850437652699], [0.75183075825482315, -0.12091813894991121], [-0.59043340624533824, -0.99231929450506762]]))
      res=generalTensorProduct(arg0,arg1,offset=1)
      s0=numarray.array([[0.62644409384395838, 0.26259804270315668, 0.35445935188059985], [-0.59366723673319832, 0.79891498579741183, 0.71236583072370507]])
      sub=res.substitute({arg0:s0})
      ref=Data(numarray.array([[-0.098354308492298981, -0.25072499835470796], [0.04488509008767716, 0.7434070472500327]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[-0.062361193950662336, -0.64546143928454902], [0.2279075422591369, -0.55523285800827948]]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2, 2),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_Symbol_rank3_taggedData_rank3_offset2(self):
      arg0=Symbol(shape=(2, 2, 3))
      arg1=Data(numarray.array([[[-0.68511042797993826, 0.88461426286446287], [-0.36260706188793335, 0.66688054990059253], [-0.58242006898765464, 0.23873790834149422]], [[-0.31385279465390248, -0.36454605018889619], [0.64495094877017145, -0.63402630941336602], [-0.85542377281489346, 0.044327320735303877]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[-0.84290796235387133, 0.89984921252679162], [0.50034384639755491, 0.019545751777773956], [-0.37641007418666961, 0.51835187454003084]], [[-0.22616675265883979, 0.58844196329297649], [-0.82349371263519688, -0.066098611292759291], [0.55730405273437067, 0.91453787369920647]]]))
      res=generalTensorProduct(arg0,arg1,offset=2)
      s0=numarray.array([[[-0.81885580916066769, 0.34618581026602491, 0.7000091135902371], [0.87869941106263494, 0.44600046950983163, 0.88760800005759632]], [[0.84860913355606016, 0.81331502284617563, -0.63644791303574699], [-0.46803389024928643, 0.63926242399450284, -0.16880169404990109]]])
      sub=res.substitute({arg0:s0})
      ref=Data(numarray.array([[-0.71963694593953575, -0.89014537967680707], [0.19795893321304497, 0.89895965307258285]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[0.5285978998947447, 0.93210547106547637], [-0.58344557256899643, -0.022427536738860332]]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2, 2),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_Symbol_rank4_taggedData_rank4_offset3(self):
      arg0=Symbol(shape=(2, 2, 4, 3))
      arg1=Data(numarray.array([[[[0.34932755635774959, -0.74424381395219852], [-0.54819955297529877, 0.63959217816188008], [-0.010273910321024982, 0.56247673691958355]], [[0.24073673367288562, 0.60191231882953367], [0.51632416596746467, -0.54846172027982121], [-0.83255202008750051, -0.49428556138934887]], [[0.85733282024950674, 0.97678795162853338], [0.32177177547802849, 0.44150861125260565], [-0.89510922530581594, -0.11022500618668296]], [[0.45158215644196642, -0.076728054320795103], [0.83360254719630578, 0.74581624954887737], [-0.69144973303714763, 0.54400223421006766]]], [[[-0.11958079621533146, -0.41206554888449887], [-0.48300873711771808, 0.69228409638818333], [0.48665261214791089, 0.59667696702594464]], [[0.90087159794983762, 0.40381245716119363], [-0.17900820678654727, -0.06792846734150082], [-0.37901740156232555, 0.34417332717469895]], [[0.58984616432424208, 0.0025128073736202516], [-0.057522073977472443, -0.44542225640177358], [-0.9717040071260048, -0.42151480864750024]], [[-0.47729057350045023, -0.5988290686489135], [-0.45221438509529799, 0.10663682085616077], [-0.63083796560409988, -0.33017190918157757]]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[[-0.45815459525227897, 0.04060064355699966], [-0.5130880268380924, -0.90690884973826003], [0.71844818991326154, -0.0096396319053368984]], [[0.086788012504435574, -0.19917758264625562], [0.84632245345713586, -0.030065029762226025], [0.73607845867824007, 0.30411044790082586]], [[-0.73253659802084603, -0.15031960596651084], [-0.74245391214729195, 0.43025275600296298], [-0.13510673730238243, -0.0047682348791997509]], [[-0.32613739486356796, -0.54692619763357286], [-0.98144937685579481, -0.62849319586058106], [0.36562622305234904, 0.75356016560724037]]], [[[0.13054528604012217, -0.55809697479008413], [-0.249719623622086, 0.11198803939996549], [-0.68047360552236413, 0.82892725166976144]], [[0.81959327370496071, -0.97885845309807507], [0.90211428047374254, 0.43159208421499984], [-0.50782383836067968, -0.998151071663961]], [[-0.81033945755080894, 0.060298287371805204], [0.33664923513654532, 0.37499963037950379], [0.8363055645171138, -0.93789499130129839]], [[-0.32514294725877524, 0.63360023194222115], [-0.71724675255467418, -0.22083402911426142], [0.65280483731320582, -0.74647746534758697]]]]))
      res=generalTensorProduct(arg0,arg1,offset=3)
      s0=numarray.array([[[[0.62493138805864845, 0.17352331207873917, -0.24927644147127981], [0.32185652576798329, 0.82568239660989229, -0.75343909420944244], [0.9662902160521103, 0.76903550182249703, -0.27446928115940628], [-0.30910412594164871, 0.15103130723873992, 0.61332089752936292]], [[-0.30936266204328744, -0.29369343709938645, 0.10145037474368723], [0.65561968627401246, -0.17325803571712428, 0.5039962673274454], [0.59880610068707685, -0.53875524346089243, -0.19192422287685118], [0.28188510996907379, -0.86050788005977163, 0.73225853462137525]]], [[[-0.25586242673816262, -0.92353650239934471, -0.85386183356723211], [0.69804864781019282, -0.52495634449993767, -0.27821219104784345], [-0.95811949825113141, 0.080275165184550801, -0.53138104040206269], [0.47231483693545795, 0.31641265912120797, -0.43508479310832682]], [[-0.47536332423886996, -0.44561854739579387, 0.041228711613561897], [-0.54594004675046515, -0.076824499185028428, 0.14349037219468186], [0.059475793819251832, 0.57725401036676449, 0.8866737242306586], [-0.41859531683489259, -0.76840411755167604, -0.59739879490718417]]]])
      sub=res.substitute({arg0:s0})
      ref=Data(numarray.array([[3.1628065415254367, 1.6573284996617701], [0.83635727248193825, -1.4323625157000262]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[-1.1817373700859699, -0.88405330085228306], [0.095995353961629282, 0.37004400299691059]]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2, 2),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_Symbol_rank1_taggedData_rank2_offset0(self):
      arg0=Symbol(shape=(2,))
      arg1=Data(numarray.array([[-0.23298424464823353, -0.62904372007593223, -0.79684710354776112, -0.80918221755065201, 0.86469780711665467], [-0.23079237051661305, -0.80735689580739223, -0.70676775229230704, -0.82847030763543539, 0.56161385054186352], [-0.95330520243206007, -0.35878150602871806, 0.39862211333973829, -0.36782386272916545, 0.49114367147188198], [-0.097061222513623813, -0.51201676761443649, 0.40136034768912143, 0.83366790627140319, -0.71676629357597399]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[0.052561221926250568, 0.017185109654445752, 0.16615656970089598, 0.76782162394430009, 0.80794852769199133], [0.76320728242019453, -0.069800210255412942, 0.2544651649572236, 0.43968820617083093, -0.72839650091806329], [0.94055165624606185, -0.57243124514878341, -0.24667196317941409, -0.43535223287784719, 0.838355791834138], [-0.17773250019532139, -0.4446233347654398, -0.040147021816919759, -0.95764454974412883, 0.10212397304303678]]))
      res=generalTensorProduct(arg0,arg1,offset=0)
      s0=numarray.array([0.083504074965395025, 0.51158396499375458])
      sub=res.substitute({arg0:s0})
      ref=Data(numarray.array([[[-0.019455133830862028, -0.052527713957731606, -0.06653998027061013, -0.067570012555014228, 0.072205790507881826], [-0.019272103409060482, -0.067417590751329096, -0.059017987370540551, -0.069180646675393281, 0.046897045077251932], [-0.079604869088787819, -0.029959717775619399, 0.0332865708351857, -0.030714791407397402, 0.041012497961367377], [-0.0081050076010105304, -0.042755486546415152, 0.033515224561569405, 0.06961466734153117, -0.059852906311436471]], [[-0.11919100365821826, -0.32180868047086686, -0.40765420072675257, -0.41396464725700144, 0.44236553268614304], [-0.11806967599919661, -0.4130308419221953, -0.36157104904742221, -0.42383212485973165, 0.28731264045561644], [-0.48769565530936715, -0.18354686542060225, 0.20392868127653316, -0.18817279011430496, 0.25126122683317537], [-0.04965496506066075, -0.26193956811947927, 0.20532951806207267, 0.42649113297836622, -0.36668614244147429]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[0.0043890762160023918, 0.0014350266848733718, 0.013874750652296501, 0.064116234445896189, 0.067466994424572588], [0.063730918125351338, -0.0058286019897683368, 0.021248878210669609, 0.036715756929489127, -0.060824076017193383], [0.078539896011997595, -0.047800341607438429, -0.020598114105194954, -0.036353685490583862, 0.070006124888990967], [-0.014841388020097202, -0.037127860277617213, -0.0033524399194374173, -0.079967222272035704, 0.0085277679007497234]], [[0.026889478317947937, 0.0087916265358738092, 0.085003036737345508, 0.39280523078536861, 0.41333351130753526], [0.39044460765263139, -0.035708668319861886, 0.13018029804160627, 0.22493743587386511, -0.3726359700272398], [0.48117114558380319, -0.29284664607952654, -0.1261934209761181, -0.22271922146453346, 0.42888938006198707], [-0.090925097158175774, -0.22746216852804918, -0.020538572603790578, -0.48991559581276029, 0.052244987050272064]]]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2, 4, 5),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_Symbol_rank2_taggedData_rank3_offset1(self):
      arg0=Symbol(shape=(2, 3))
      arg1=Data(numarray.array([[[0.02481087041232799, -0.68134580421745472, -0.85402651508985072, 0.58190795716363941, 0.82109679443344863], [0.11141292556583537, -0.055411836391080049, 0.48537099380271886, -0.13885020730308861, 0.44734988461600733], [0.9797241013591893, -0.79781119043448889, 0.92461518184500568, 0.75091465809136615, 0.95205276730783384], [0.18082181892302929, -0.366853287679757, 0.56144803732337611, 0.88407887606157587, 0.70391653730603432]], [[0.057545924469279974, -0.81438196960055254, 0.75984057537050842, 0.29396183697228495, -0.19857104972233497], [0.54654878846180877, -0.044207857496574743, -0.90175833254050031, -0.94920930397933678, 0.54227073045811203], [-0.30689091060060014, -0.041394150877339886, 0.86891804451317478, 0.93762315337986202, 0.38746692741885025], [0.25256128559004876, -0.24410999682127699, 0.55735348587034528, 0.13029734864664544, -0.85837239261892373]], [[-0.84358563091087269, 0.92198846333735474, -0.87216015328120178, -0.0049659222308380269, 0.23631603068963747], [-0.70920392461490622, -0.17344351922870294, 0.14310338195314931, 0.18960962890592237, -0.26497519306866879], [0.73429152187103752, -0.41180790613027085, 0.37283988422024295, 0.51769466407775355, -0.2946268762605242], [-0.44293967816095248, -0.41224486670574856, -0.0051708370991814245, 0.98355632355129186, 0.30145938032746855]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[-0.16174908496583451, 0.80220858650460602, 0.85441040790978118, -0.84461957444753177, 0.63276963609075443], [0.53106075511124251, 0.7896185214688487, 0.750700071981242, -0.64368352551345609, -0.44116882653564615], [0.92685259519578778, 0.77717823754290949, -0.80267913291766835, -0.39339442481714593, -0.068131332104359066], [0.50434289450602243, -0.3337289950019533, -0.24656523015635146, 0.058770138194863097, -0.43916126934244804]], [[0.48035369585330789, 0.56795700367103086, 0.13102455981567407, 0.30999847209392195, -0.69020973614369208], [0.79188162650155136, -0.67962979040532634, -0.55528124820000402, 0.61899500721642076, -0.43875739823597026], [0.91497757608030428, -0.61087986591892918, -0.24509093340712962, -0.897735064831509, -0.804222050658145], [0.88271163483519199, -0.61325650409760701, 0.73054108832169318, 0.83006137917673306, 0.043143058402431267]], [[-0.43689924550007975, -0.65262618875978617, -0.83277307660194277, 0.24519270343801614, -0.73973180361634583], [0.30401281884499487, 0.91534284483358075, -0.96296047113040806, 0.53961842974989005, 0.039942280519574824], [0.13330500695419767, 0.60527568776917495, -0.93970850767631742, 0.45151050829829908, 0.4322543195268187], [0.44516553747012977, -0.81425265414017201, -0.22766145679809702, -0.56800009855324962, -0.99936019064194404]]]))
      res=generalTensorProduct(arg0,arg1,offset=1)
      s0=numarray.array([[0.63159154774570192, 0.69403078468270163, -0.22127949369185029], [0.21515325220870274, -0.22193729721133804, -0.7463990005418335]])
      sub=res.substitute({arg0:s0})
      ref=Data(numarray.array([[[0.24227718045302415, -1.1995555487860747, 0.18094797941295346, 0.57264556844811898, 0.32849148216892571], [0.60662143198359131, -0.02729976741810259, -0.35095766982470372, -0.78843381808767155, 0.71752856314192581], [0.24331006586325249, -0.44149497462322679, 1.1045331852207148, 1.0104554708516573, 0.93541734252157371], [0.38750430741780928, -0.30989995302230727, 0.7425705122313625, 0.43116627149147058, -0.21785590896588755]], [[0.62221802430042861, -0.65402329997144926, 0.29859592091821652, 0.063664853278836558, 0.044345918661531702], [0.43202039288114225, 0.12734740500065853, 0.19775073364227977, 0.039266436233428903, 0.17367590155046425], [-0.26917309211878243, 0.14490824324645754, -0.27219867582604329, -0.43293859749783048, 0.33875309250407215], [0.31346136638716293, 0.28294659147670009, 0.00095935257372901841, -0.57283085287406155, 0.11694580092317233]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[0.32789774137689365, 1.045260600307985, 0.81484907475403545, -0.37256221871754974, 0.084312628025581343], [0.817731908254544, -0.17551421388479838, 0.30183694544460604, -0.096349976486213615, -0.59198805096212426], [1.1909172057805046, -0.067045324500124459, -0.46912778593727433, -0.97143038179977714, -0.69683505134218215], [0.83266175316837399, -0.45622189018615145, 0.40166630132956632, 0.73889364709334016, -0.026290018136272464]], [[0.18469191754339934, 0.5336664790269442, 0.77633093336279557, -0.43353446014397184, 0.84146080734077333], [-0.28840348345228894, -0.36248679285178675, 1.0035059145507481, -0.6786393394355803, -0.027355154965443575], [-0.10315102402762945, -0.14898771668712663, 0.5830932843343456, -0.2224061881276162, -0.1588060014734434], [-0.41966673271437566, 0.67205897962444416, -0.045257341977674892, 0.25237771321918834, 0.64185941835804694]]]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2, 4, 5),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_Symbol_rank3_taggedData_rank4_offset2(self):
      arg0=Symbol(shape=(2, 2, 3))
      arg1=Data(numarray.array([[[[0.49525303017452438, -0.72252067135385656, -0.75095045535043803, -0.96844393670492068, -0.69466924001935948], [-0.99530790860740082, 0.66187525664595026, -0.49504656706145611, -0.073374708225051766, 0.0375301262329093], [0.79275110020525141, 0.30869146647175927, 0.4653951051867653, 0.57319645947711484, 0.46294885093814608], [-0.26795299063665179, -0.98272576036504078, -0.30468776701833367, 0.94313731509948751, -0.89348816247694263]], [[-0.92123077624021565, -0.21062184129868, -0.43560859641117, -0.20089824000459555, 0.61741780913852917], [0.90938483221151611, -0.17426274357134064, -0.86432819150694118, 0.57681673767815655, 0.96991602061244153], [0.033258624055275465, -0.56971083196212846, -0.22067726093817353, -0.96822186845868208, 0.0041068334591567446], [0.92165812550792769, -0.39616524258061414, -0.72571258351599455, -0.94807535871578796, -0.049208825657581112]], [[-0.45830872978692438, -0.7629183693331083, 0.81507538938468316, 0.29255150755387227, -0.15897434426637802], [0.20682766192322299, -0.11431402391520584, -0.17713715377949235, 0.1604238489140497, -0.78001798654820109], [0.97659847377248954, 0.95595193664312261, 0.26953314946967377, 0.75287562607651437, 0.32374130717399408], [0.27025639041943816, 0.42820310111724025, 0.41052301542183334, 0.44387605997638779, 0.14491533418496161]]], [[[0.22195086258567454, -0.62627758131156819, 0.62203104399283982, 0.68365085969144279, -0.57752792529940766], [0.28231384040369689, -0.42100027107755089, -0.35584905086965479, 0.27222925038196011, 0.30555568042403003], [0.82224210261114794, -0.90073685289988514, 0.39182316666311245, -0.37159535489084461, -0.19196804273720169], [-0.77364694236546527, -0.6889408212832806, 0.89514448012370695, -0.75523905434077832, -0.042091403912800862]], [[0.75286188342006199, 0.43681763776796667, -0.26926979596892742, 0.089099505011855928, 0.50189201932808336], [-0.52656955864311472, 0.43219600714830375, -0.84312042806482279, 0.93344399762780017, -0.71312845373246914], [-0.93768387266673159, 0.76265021219977114, 0.7417560658230431, 0.0036000913732225914, -0.61971026795082573], [-0.19142043873982173, 0.36185705910037624, -0.28251341169327371, 0.068751588400508545, 0.81711972443528325]], [[0.055568625844194752, -0.74782084026103934, 0.70147035585515671, 0.58829585144601526, 0.61130551658966792], [-0.73323758007244, -0.66590177734916001, 0.48736525604216463, 0.6600996248470552, 0.39802305888059464], [0.45701505150362065, 0.17032380753266052, 0.84444536056339903, 0.52396318114128726, -0.54828108683957311], [-0.83898192418872775, -0.92964687326264506, -0.95306146574096595, 0.70870456850412356, 0.90782611660239687]]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[[0.85782802051811746, 0.71668841808922057, 0.51579272308283497, 0.61780642258045826, -0.55894189879695144], [-0.93862053619730634, 0.37739489916269009, -0.93902944548930889, -0.13178895080183617, -0.91747602790497029], [-0.66079995974613714, -0.94720221961453577, 0.68478394066358805, 0.39479057097783632, -0.13071749535800503], [-0.26715812139617312, -0.73588716947805555, 0.75579255118211619, 0.4052889839316669, 0.46336103923704686]], [[-0.67234299226121985, -0.17843115521793873, -0.9679593903642405, 0.70703076268189791, -0.98780993040308518], [-0.37696782163336517, 0.95782797355043936, -0.4506263333572067, -0.38149198377259164, 0.41721164105183051], [-0.15759811541513624, -0.48163390222838598, -0.80758125277032344, -0.19782844926561549, 0.54948096580900407], [-0.98576737050544039, -0.35754639155094159, -0.56148941837813826, -0.95569540655423868, -0.14382751572534458]], [[-0.90345957045831615, 0.30804927053578557, 0.51802911218669245, 0.17029819069157992, 0.21593736141123787], [0.012970539888272903, -0.86420455471101287, -0.17733141163599297, 0.087641288032835662, -0.50020201454750191], [-0.83551576539434991, 0.0085811905321793169, 0.77761913969803076, -0.5995245434845129, -0.5751334558190333], [0.51916808994031172, -0.21781999673497476, -0.30594453944221023, -0.99245928836504538, -0.66560706205159303]]], [[[0.35351965181670009, -0.98029303694812331, -0.10876461349671529, -0.72368114885359591, 0.74871114493681845], [-0.80536646090872499, 0.6925175429434538, -0.36194540300838041, -0.30808172933560263, -0.73571225278514829], [-0.073595890975787226, -0.18209460613663064, 0.79591551140844863, 0.64959352771251777, 0.91497138400339684], [-0.58068192481766867, -0.55242569224477966, 0.78042584637022938, -0.15130503208211077, -0.2353984398818012]], [[0.015127859558093926, -0.24977012187443082, -0.85785424685122735, -0.42450436736760699, -0.51481529935742332], [-0.35886370313341809, 0.76372579430133802, 0.80844024130859449, 0.22356301669460876, 0.0050601121116178316], [-0.3658337798757183, -0.66096412965911266, 0.29441275812045653, -0.011316848605614549, 0.19309299044382766], [-0.074265146364622669, 0.98813398338080516, -0.44587687621194205, 0.10362184214907577, 0.60583843642841018]], [[0.83100858421474344, -0.54482957720040193, 0.67856991158795665, 0.64968982151909893, 0.58608964154879173], [-0.62389573405162069, -0.47504073832295513, 0.69267341151352468, -0.73483711442783339, 0.99945327212297896], [0.26529231017322319, -0.43872831022788139, -0.36160275704042255, 0.79254197879426558, -0.15969695021457975], [-0.94070846860745694, 0.63932716245513066, -0.60259006496458523, 0.62687035340762431, -0.83575149514064262]]]]))
      res=generalTensorProduct(arg0,arg1,offset=2)
      s0=numarray.array([[[-0.3893265660982439, -0.61475543860190007, -0.74591976266188742], [0.10225570341250068, 0.47401286492223083, -0.64748812440509784]], [[-0.4857713037071627, 0.33407886034122125, -0.33088702206502929], [0.45090826302193032, 0.5282805582575314, 0.69026909549022775]]])
      sub=res.substitute({arg0:s0})
      ref=Data(numarray.array([[[1.0589599417658322, 1.6070751418933766, -0.56604797567915066, 0.013551220635456274, -0.207490973775939], [-0.071796220884501327, 0.52769271964282061, 0.10461460006263557, -0.40280303364525655, -0.59354424667448558], [-1.7138561782234807, -0.3238945090884956, -0.40167850604481992, -0.56507695036442018, -0.38262299784176396], [-0.29047744042033941, 1.0097529109187129, 0.83325618712356264, -0.61896600975929206, 0.065229405589933509]], [[0.13946405190301001, -0.034773794735462049, 0.57199693742471514, 1.0679407246633632, 1.0230121562766452], [0.061851621402662982, -0.76307564869758915, -0.2591082089715212, 1.246780541966559, 0.5996839094776627], [-0.50626952820366911, -0.54228104048914572, 0.76244193126395732, -0.65499959029430022, -1.1230394105830417], [-0.68044475158823547, -0.55785087410778589, -0.63376057315219325, -0.73678034732634079, 1.4089740924898853]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[0.25851163309635772, -0.26497848048030165, -0.84928337316531932, -1.4980957458674424, 0.11684533883800724], [0.7390036993804503, 0.64928039712589436, 0.67259138823947473, 0.77072677976021131, -0.24614110626499802], [0.62466986117653245, 0.61060282673219879, 0.10489472934895755, -0.036990345127395741, 0.43059027515873849], [0.83727675627035592, 0.66672305110105712, 0.53776016261459925, 0.79777935167048231, 1.2087529949309708]], [[0.39863546033635022, -1.4597361993815838, -0.7791759280800441, -0.22236846963142759, 0.34025334349504388], [-0.65765689543809569, 0.81043396779817978, 1.1062956270345057, -0.62047643401707342, 1.1114016017806498], [0.50148399680156153, -0.43774250847285423, -0.59493408465743203, 0.77450251061196251, 0.84171454034584658], [-1.3217413688189965, 1.0243244339412303, -0.75308792170188354, 0.23146245534215659, -0.41588035286905511]]]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2, 4, 5),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_Symbol_rank1_taggedData_rank3_offset0(self):
      arg0=Symbol(shape=(2,))
      arg1=Data(numarray.array([[[-0.48938767041804687, -0.17946858197962912], [-0.87490456944922124, -0.65741406313135586]], [[-0.44585118815096836, -0.057276939847211494], [0.35084658697862192, 0.30038348583731045]], [[-0.13488388654510763, 0.71934667088244386], [0.89713758879513916, -0.06869414472947688]], [[-0.86210103041803543, 0.069238859297329425], [0.31120179009040094, 0.67072421447610209]], [[0.50858025936959739, 0.16359134037891043], [-0.92818541713598801, 0.22174540585464042]], [[0.78969663544121049, 0.96885468345121395], [-0.58454506174656329, 0.56730621124916514]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[-0.027128178836059336, -0.8466632278144528], [-0.82444364026575334, -0.78484978039149134]], [[-0.20694437633631391, -0.25922875302662884], [0.15360299181084058, -0.23262907299653435]], [[0.66268962529174291, 0.4699109016855878], [-0.95006416238010827, -0.41887342355179213]], [[-0.43574358017636561, -0.15674162932145141], [0.85759270685276845, 0.39560550568810693]], [[-0.39825098413245064, -0.021778642704622042], [0.4619331010879939, -0.1122359682222891]], [[-0.84142180679198453, -0.8095654460980477], [0.49359900947042679, 0.98789655480278227]]]))
      res=generalTensorProduct(arg0,arg1,offset=0)
      s0=numarray.array([-0.57577157070941287, 0.89544705286965876])
      sub=res.substitute({arg0:s0})
      ref=Data(numarray.array([[[[0.28177550768241932, 0.10333290733940209], [0.50374517817262066, 0.37852032773559791]], [[0.25670843890434103, 0.032978433621257519], [-0.20200749046271779, -0.1729522714557169]], [[0.077662307219466861, -0.4141793625785718], [-0.51654631864303269, 0.03955213560943064]], [[0.49637326439399559, -0.039865766771751396], [-0.17918114348793115, -0.38618393448174243]], [[-0.29282605476903367, -0.094191243004423456], [0.53442277553395945, -0.12767470062652256]], [[-0.45468487217192438, -0.55783898287987643], [0.33656442835224948, -0.32663878832413779]]], [[[-0.43822074718658793, -0.16070461281635565], [-0.78343071825550281, -0.58867948534604042]], [[-0.39923613244822032, -0.051288466983578258], [0.3141645423193854, 0.26897750712373453]], [[-0.12078137868642205, 0.64413685643328478], [0.80333920990519914, -0.061511969447411871]], [[-0.77196582696372584, 0.061999732501850605], [0.2786647257842117, 0.60059802114094252]], [[0.45540669440019266, 0.14648738361729255], [-0.83114089629101529, 0.19856127015992414]], [[0.70713152486691722, 0.86755807095535564], [-0.52342915281047275, 0.50799267493771694]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[0.015619634138923736, 0.48748461654062897], [0.47469120971719897, 0.45189419082694671]], [[0.11915268861263931, 0.14925654630318455], [-0.08844023586059277, 0.13394120675188925]], [[-0.38155784644705909, -0.27056133795698739], [0.54701993504831758, 0.24117540900684453]], [[0.25088876558468903, 0.09024737410996464], [-0.49377749985355557, -0.2277784033913329]], [[0.22930159467051056, 0.012539523317959329], [-0.26596794717610422, 0.064622279713439146]], [[0.48446675532577305, 0.46612476849193946], [-0.284200276983398, -0.56880275105721556]]], [[[-0.024291847788470381, -0.75814209211956429], [-0.738245627933102, -0.70279142279695983]], [[-0.18530773189830183, -0.23212562291677144], [0.13754334632897952, -0.2083070178265474]], [[0.59340347193478971, 0.42078033202568355], [-0.85073215424034887, -0.37507897264487655]], [[-0.39018530467580043, -0.14035383003788215], [0.7679288619138247, 0.35424378416742636]], [[-0.35661267004384417, -0.019501621425355102], [0.41363663399218631, -0.10050136697062144]], [[-0.75344867711214591, -0.72492299281360739], [0.44199177832967645, 0.88460905853824068]]]]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2, 6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_Symbol_rank2_taggedData_rank4_offset1(self):
      arg0=Symbol(shape=(2, 3))
      arg1=Data(numarray.array([[[[-0.79412473195678968, 0.078872739876912012], [0.14117394911957137, 0.35030172814355365]], [[-0.25200338921931276, -0.36341265289108771], [0.76045730076854778, 0.039422275079277203]], [[0.91748185572883889, 0.96293458406186105], [0.47102786084695669, -0.13532591079822431]], [[0.21088255840178638, 0.61718786785299495], [0.44668833934965058, 0.85669855767971237]], [[-0.51690330184871636, 0.66784287119072183], [0.47994360090736077, 0.017872538534659865]], [[0.21021269812291443, 0.53001029897497109], [0.67818705460357398, 0.7386705602995014]]], [[[-0.4348693150236953, -0.89665441145061453], [0.03680706197322503, 0.89963230828883245]], [[-0.63514990637761226, -0.73443340265484958], [0.98729892653933238, -0.42012150703872142]], [[0.59528300259904277, -0.39520336898366915], [-0.95457824551701553, 0.65904699083903706]], [[0.7772086971749288, 0.42980346183676432], [-0.033697323425560644, 0.30070444978931254]], [[-0.51625321429876969, 0.12464939571463174], [0.82618315361111239, -0.43234683257975237]], [[0.32914788025082165, 0.18699526780010078], [0.19940193458618549, -0.3699909883731709]]], [[[-0.64109459555283599, 0.80614245400495887], [-0.52584653946633853, -0.85808963384420855]], [[0.62555197509288818, -0.8724782084610152], [0.50983746797752461, -0.58251076099132737]], [[-0.31204161316464596, 0.41733410914284175], [0.75396091484277927, 0.3292927152165428]], [[0.25182592840146745, -0.35674033234050695], [-0.49407691159411149, 0.44630036598976153]], [[-0.09779198656534227, -0.28457633059430343], [0.37303106717386258, -0.77082995491430584]], [[0.27092814019890032, -0.058268848979110555], [0.13294234415524531, -0.79394137806681497]]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[[-0.18757426106239694, -0.20957632807740678], [0.41259263866108342, 0.48080263722904504]], [[-0.043273824886633117, -0.52973034975840472], [-0.11951874141908569, -0.77180655449488711]], [[-0.80384260512604233, 0.63062538636276932], [0.83067944871530908, 0.99471428178686194]], [[-0.77892223795746385, -0.23458646594236021], [0.011880572557519731, -0.52299568314230283]], [[-0.50758804175202732, -0.90329623799437986], [0.1358789829747824, 0.91841351530836213]], [[0.082980586056692118, -0.55989170071407623], [-0.64510151934509508, -0.60760187097822249]]], [[[0.02077070479234755, 0.80728811819445201], [-0.0015691508614950056, 0.075931510652821332]], [[-0.48702371723274562, 0.36728600133298772], [-0.46978445406324498, -0.029625286278367913]], [[-0.79457577695954851, -0.19875550673676989], [0.269677449127258, -0.61783090948341823]], [[0.54960640372695346, -0.53198578193862889], [-0.42319854782643462, -0.68387286709915496]], [[0.89342895975519454, 0.5874303704502748], [0.26583738910986177, 0.65296055959206267]], [[0.10345829937163242, -0.68545995586490394], [-0.31362066119921805, -0.81991939399693425]]], [[[-0.70500933383342423, 0.22846759035347453], [-0.69865586742726848, 0.074886817165394026]], [[-0.46782382275200329, -0.61477034782693729], [-0.92488599246656111, 0.35824215296214135]], [[-0.12042793780080907, -0.68906253231698855], [-0.83719396219928366, -0.37349323191521777]], [[-0.99630471598125059, 0.70281240177048332], [0.51713683902730745, 0.20116638531933706]], [[0.99127990749181416, -0.74915482906575592], [-0.39750856467171092, 0.64628329886312885]], [[0.62618531630120078, 0.88691249921889037], [-0.33105486130409378, -0.2965959453555147]]]]))
      res=generalTensorProduct(arg0,arg1,offset=1)
      s0=numarray.array([[-0.4261279881465212, -0.30651338408481799, -0.78842419830608956], [0.89994041854893037, 0.58524791770562867, 0.19929691944017724]])
      sub=res.substitute({arg0:s0})
      ref=Data(numarray.array([[[[0.97714653228581327, -0.39435552197440721], [0.34315010827012432, 0.25151591773467774]], [[-0.19113267000231354, 1.0678569023215441], [-1.0286406716813006, 0.5712395098208185]], [[-0.32740574625999619, -0.61823456542081368], [-0.50256817613554861, -0.40396291032308457]], [[-0.52663348397079812, -0.11347882748658211], [0.20952447018732809, -0.80910717960555978]], [[0.45560705245100797, -0.098426381897415594], [-0.75186031544547727, 0.73264509109715714]], [[-0.40407204650887107, -0.23722820419782248], [-0.45492880803983871, 0.42460158466801756]]], [[[-1.0969394827123677, -0.29312265295297601], [0.043789803821645559, 0.67074399834197029]], [[-0.47383761412246883, -0.93075757377095814], [1.363789939235484, -0.32649013864909143]], [[1.1118782107314473, 0.71846520617740883], [0.015494167469355558, 0.3295476459911863]], [[0.69482964128267966, 0.73587663990605512], [0.28380359626096552, 1.0359105997393403]], [[-0.78680793416065853, 0.61725440627651662], [0.9897865579180567, -0.39056989911114232]], [[0.4358071587983478, 0.57480347929473297], [0.75352250843074198, 0.28999296682565506]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[0.62941056230478809, -0.33826765075584764], [0.37550088687217409, -0.28720006357414379]], [[0.53656309803866054, 0.59785467163495587], [0.92412800076706358, 0.055522138808244914]], [[0.68103624273077212, 0.33546767043527631], [0.22342846865459565, 0.059968949125022125]], [[0.94896959442845852, -0.29108968334003305], [-0.28306982317255364, 0.27387483897356169]], [[-0.83909952921608766, 0.79551633334925853], [0.17402081602232233, -1.1010482461441833]], [[-0.56077135963943603, -0.25057510143229877], [0.63203640639089376, 0.74407585144254407]]], [[[-0.29715583569007309, 0.3293903687032369], [0.23115048752554757, 0.49205719705288559]], [[-0.41720932717961073, -0.38429422168216704], [-0.56682704882007973, -0.64052149329781294]], [[-1.2124351864477354, 0.31387598770824654], [0.7385399986705099, 0.45916328326606326]], [[-0.57788806222441491, -0.38238906685745577], [-0.13392048250427832, -0.83080828454246669]], [[0.26363747543594457, -0.61842464300780464], [0.19864153484501779, 1.3374635217618156]], [[0.26002314216141081, -0.72827425441591198], [-0.83007698426588161, -1.0857722583302225]]]]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2, 6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_Symbol_rank2_taggedData_rank0_offset0(self):
      arg0=Symbol(shape=(4, 5))
      arg1=Data(0.534603257087,self.functionspace)
      arg1.setTaggedValue(1,-0.981117351887)
      res=generalTensorProduct(arg0,arg1,offset=0)
      s0=numarray.array([[-0.57186484566737983, 0.9727812008214678, -0.5572419712245178, -0.91272257242384125, -0.67323119467258663], [-0.7637546905646635, 0.93063887136043233, -0.75952665408943676, -0.98819953256794668, 0.98659845572265503], [-0.08433762128919442, -0.56035891207066579, -0.25253982630212679, 0.86342593947330748, 0.60083346105569357], [0.7182742556331001, -0.95065323078659647, 0.8893530179391631, -0.014976934734816982, -0.4065612085688759]])
      sub=res.substitute({arg0:s0})
      ref=Data(numarray.array([[-0.30572080910761196, 0.52005199839262939, -0.29790337280247658, -0.48794446003505143, -0.35991158944486201], [-0.40830574519171164, 0.49752257180150605, -0.40604542312097075, -0.52829468876315233, 0.52743874786681211], [-0.045087167036213967, -0.29956969953097629, -0.13500861368542413, 0.46159031949624996, 0.32120752524751905], [0.38399175654354256, -0.50822231353925296, 0.4754510200908591, -0.0080067180904198135, -0.21734894630634446]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[0.56106652301852444, -0.95441251571554508, 0.54671976716816562, 0.89548795326409236, 0.66051880692498], [0.74933297949818034, -0.91306594503237881, 0.74518477954792373, 0.96953970852916782, -0.96796886425454742], [0.082745103663714431, 0.54977785191712714, 0.24777120562757951, -0.84712217128671252, -0.58948813423614377], [-0.70471133561544974, 0.93270238035229425, -0.8725596778533028, 0.014694130546410078, 0.39888425633112845]]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_Symbol_rank3_taggedData_rank1_offset1(self):
      arg0=Symbol(shape=(4, 5, 3))
      arg1=Data(numarray.array([0.77000447834650387, -0.30459229698740642, -0.33042213174562263]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([0.47725553244593666, -0.19804999504718968, -0.27627135670469816]))
      res=generalTensorProduct(arg0,arg1,offset=1)
      s0=numarray.array([[[0.8671101855281016, -0.070877228936592429, 0.60040671934273071], [0.25215256888677295, 0.59476713639706191, -0.56655117243373887], [0.97178772493884891, -0.47045287774625222, 0.39419023583537993], [-0.88038969536301304, -0.18598390712099566, 0.48801709450679431], [-0.0064999202971329773, -0.9958568560976726, 0.85116384168065351]], [[0.47639005985199456, -0.14342463168480113, 0.23192726068880321], [-0.31385320396188465, 0.6576930299019077, -0.57054441268631018], [0.54953839231690127, -0.7664786464036768, 0.96386427250940176], [-0.55900143583437933, 0.53866177913516533, 0.92531496881963338], [-0.68690296982403343, 0.40852142389633816, 0.68052013438293901]], [[-0.83798891884883053, -0.06182415902392413, 0.73583746087591639], [-0.58398683974005561, 0.20113429654599724, -0.753940277413919], [-0.4270252447720555, -0.93313952361173569, -0.96946021546492633], [0.8571508865889812, 0.383323961773266, -0.80799214039312384], [-0.97098007392855123, -0.33838722330006155, -0.33670498158875373]], [[0.3945722656559485, -0.61202307948727874, -0.72952487905698393], [0.97234512779090809, 0.19280079958938057, -0.23011399651129594], [-0.16839442682929895, 0.69647226132384854, -0.065505934555669665], [0.5696845567258102, 0.22299463722326496, -0.87844657522035252], [-0.015529859502507293, 0.78752345069168084, -0.22109491952562199]]])
      sub=res.substitute({arg0:s0})
      ref=Data(numarray.array([[0.49087971592278412, 0.20019816516012517, 0.76132804482410465, -0.78250639134219768, 0.017081988498844236], [0.33387461764852405, -0.25347610218911409, 0.33812842697124568, -0.90025038213421849, -0.87820975532579904], [-0.8695610401528393, -0.26181788561116315, 0.2757468711016296, 0.81023098074776434, -0.53333408590812115], [0.73129109287621918, 0.76601922176123205, -0.3201599381139234, 0.66099540116495947, -0.17877698351486729]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[0.26199518919592657, 0.15906944115490468, 0.44806078694371176, -0.51816188573069755, -0.041024866823507478], [0.19169018029413532, -0.1224192003282043, 0.14778323990335224, -0.62910651240197524, -0.59674412937224286], [-0.59098138689083823, -0.11025349326085498, 0.24884220646582161, 0.55638777886800772, -0.30336608220580075], [0.51106979268215436, 0.48944680029420701, -0.20020608633113457, 0.47041064677750893, -0.10229853349685317]]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_Symbol_rank4_taggedData_rank2_offset2(self):
      arg0=Symbol(shape=(4, 5, 2, 3))
      arg1=Data(numarray.array([[-0.83366785662866527, -0.8212715491846847, 0.72712171256208302], [-0.94070455409205733, 0.68289289969514422, 0.19256860284029953]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[-0.58677121731508031, -0.611485698544181, 0.52884730670453295], [0.33807509347654929, -0.016520163711764679, 0.83516212814968682]]))
      res=generalTensorProduct(arg0,arg1,offset=2)
      s0=numarray.array([[[[-0.38877225820887462, -0.046865346339239444, 0.70324292436831892], [-0.62475974967659198, 0.40707326194201277, -0.33982211968722509]], [[0.99840132864776709, -0.71815861333499509, -0.9944258981363201], [-0.59222566286017431, 0.90611774958207492, -0.51798741567420103]], [[-0.7698853017615761, -0.43838184858452478, 0.63618499594256361], [0.56344947067266138, 0.9476531959526191, -0.40999809733775927]], [[0.16180623882821799, 0.26495916036166856, 0.12946713393457943], [-0.31567990142785285, -0.50539161073833938, -0.4454026196193337]], [[0.28748581058530531, 0.81406087206205768, -0.11238863877523686], [-0.10623460031761423, 0.19092160239523515, -0.76057401501120436]]], [[[-0.31516183298405598, 0.26525864558622336, 0.45173474279243542], [0.14084219780601703, -0.67591014703808572, 0.73120574845941455]], [[0.12874600437028105, 0.74469373309718256, -0.29328227245217708], [-0.39815920007741878, -0.11244821862939336, 0.1247949351276223]], [[0.91453844037574283, 0.42817273894237506, 0.91891133476994225], [-0.69399341722872099, 0.19822157745209368, 0.9819020505968139]], [[-0.88286373062973511, -0.4983467344703314, 0.23470934722940862], [-0.99060581070092013, 0.10377836720397826, 0.98466703671658418]], [[0.027635286963112682, -0.16870607028613338, 0.41758918807197531], [0.81354566826410801, -0.44653130296961718, -0.75871730396927584]]], [[[-0.43507530803394179, 0.59251147589059516, -0.24715130859281276], [-0.5086954385435829, 0.99530835927973649, -0.99705234347980709]], [[0.3258233422805592, 0.19598031161021812, -0.63534763371263758], [0.48848628481993051, -0.89338520432256407, -0.27590003410776287]], [[-0.93063540922278531, 0.39492215773819361, 0.46319307797043319], [-0.71243499437025726, 0.12420621922075803, 0.72195904976159775]], [[-0.075674316500414562, -0.58211033151791747, 0.77030338664199105], [0.75474721648629517, -0.94313810784168917, -0.040538030340477871]], [[-0.46644793732717016, -0.57627758387684769, -0.51555487613000328], [-0.47309694099372268, 0.92785128402896633, 0.33138586943106407]]], [[[0.51729048454564897, 0.97471079414114814, -0.25192254696553906], [-0.34953838040724228, -0.3524565618927602, -0.65147279352116971]], [[-0.051546350010283515, 0.5623722400219231, 0.21070894705007515], [-0.70961682638053802, -0.99400975846698536, -0.072087964585704656]], [[0.44664572235769273, -0.73012523645532967, -0.57103208224637325], [0.52124063719398905, -0.63454681573737082, -0.50810266533281045]], [[0.95873390557475036, -0.25926273145066259, 0.16850066162321498], [-0.3151716904323465, -0.92157817587826352, 0.7151562691110982]], [[0.80689757319146094, -0.42507749013552076, -0.32147786392489031], [-0.15860591701227467, 0.065717747622027201, 0.2258576517427846]]]])
      sub=res.substitute({arg0:s0})
      ref=Data(numarray.array([[1.6742020214903701, 0.11054212181084896, 1.5025964881024132, -0.39229509805864698, -0.90610122898190881], [-0.079900816956261167, -0.6103874205910822, 0.5313833753230347, 2.5083082342360048, -0.79719129173440639], [0.66260654954098108, -2.017293930579759, 1.6823372731402451, -0.2606005961901609, 1.6297539063935471], [-1.4522599901248068, -0.29082103989009295, -1.2094385000986883, -0.65895915014153983, -0.31976147237079411]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[0.12693879438993982, -1.3203783319107216, 0.88867345130641695, -0.65885139561845285, -1.4001833505213899], [0.9310814607416491, -0.71454159938410633, 0.26966830808144238, 1.432639363366389, -0.04344898448749801], [-1.2588482015423379, -0.69754214524196179, 0.90958365426248922, 1.0446147289004191, 0.4549242975226474], [-1.6892144238120106, -0.48589151722954071, -0.35525330159163376, 0.19103346797464799, -0.24962678886196418]]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_Symbol_rank2_taggedData_rank1_offset0(self):
      arg0=Symbol(shape=(4, 5))
      arg1=Data(numarray.array([0.041512455680745575, -0.49181972327797818]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([-0.032051080013596911, -0.88147919316825241]))
      res=generalTensorProduct(arg0,arg1,offset=0)
      s0=numarray.array([[0.99675886761085719, 0.86004350022644682, -0.52008358146487899, 0.58783718314393685, -0.27452865335287191], [-0.265034364238663, 0.42779030177850186, 0.10466019521277459, -0.16162022726520964, -0.38932038784819811], [-0.6162248855167467, 0.88684947232669953, -0.096505574095581581, -0.94919211954284055, 0.79254031063022379], [-0.43482032502233547, 0.48052961188924037, -0.49761875963164925, 0.47040768157734014, -0.66087566638036965]])
      sub=res.substitute({arg0:s0})
      ref=Data(numarray.array([[[0.041377908316085857, -0.49022567044324267], [0.035702517686663673, -0.42298635628839482], [-0.021589946625844219, 0.25578736311747663], [0.024402565012756998, -0.28910992074635722], [-0.011396358555405861, 0.13501860632388546]], [[-0.011002227299332078, 0.1303491276790141], [0.017758625943232832, -0.21039570784170555], [0.0043447017153084855, -0.051473948247765973], [-0.0067092525214590424, 0.079488015449699342], [-0.016161645346159003, 0.19147544541797593]], [[-0.025581008249386462, 0.30307155267185015], [0.036815299415454715, -0.43617006206893832], [-0.0040061833675877389, 0.047463344746471355], [-0.039403295795035126, 0.4668314055711974], [0.032900294520241499, -0.38978695626079951]], [[-0.018050459471577088, 0.21385321192812556], [0.019947964216837963, -0.23633394074624045], [-0.020657376705116425, 0.24473872065996849], [0.019527778033361608, -0.2313557757812027], [-0.027434571811098294, 0.32503168736034282]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[-0.031947198220057836, -0.87862220240491928], [-0.027565323040931799, -0.75811045066920801], [0.016669240483288883, 0.45844285576971661], [-0.01884081659191374, -0.51816624591201565], [0.0087989398346379078, 0.24199129585905638]], [[0.0084946376145661751, 0.23362227755095738], [-0.013711141191343533, -0.37708825005691704], [-0.0033544722910033107, -0.092255784432988333], [0.005180102835892951, 0.14246486752940657], [0.01247813890184718, 0.3431778213643808]], [[0.019750673112066845, 0.54318941489550054], [-0.028424483397559246, -0.78173935732822952], [0.0030931078770955905, 0.085067655590012253], [0.030422632571743227, 0.83669310369628647], [-0.025401772910010254, -0.6986077935676458]], [[0.013936461028829089, 0.38328506927384554], [-0.015401493039564713, -0.42357685458158106], [0.015949218681220838, 0.43864058274549272], [-0.015077074241245946, -0.41465458361694196], [0.021181778862196406, 0.58254814918549935]]]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5, 2),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_Symbol_rank3_taggedData_rank2_offset1(self):
      arg0=Symbol(shape=(4, 5, 3))
      arg1=Data(numarray.array([[0.016065970725355205, -0.29443813429062993], [-0.12315085992541119, -0.56157249218351546], [-0.082799124550330339, -0.52262592831423049]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[-0.64307127204165138, -0.28571601050843953], [-0.31396957519294788, -0.83270438078672981], [-0.19163027934994115, 0.44925818243720905]]))
      res=generalTensorProduct(arg0,arg1,offset=1)
      s0=numarray.array([[[0.013840411962372068, -0.49339519668540177, 0.45107171731207041], [-0.59259859610546783, -0.83523377225139939, -0.49821129851078805], [-0.83860658786483322, 0.75573684801275975, 0.058689785929783911], [0.0048224906161957737, -0.75193134037801967, -0.22280929986745468], [0.93515954147020941, -0.58589909552083297, -0.77023961104073857]], [[-0.075061395318757995, -0.99948890810131119, -0.3753168420801527], [0.6798623026432089, 0.88496430996660469, 0.056825910830342163], [0.9787130499175376, 0.16412389896589041, -0.56530367879825016], [0.0480631768208577, -0.33164913968497611, -0.52208873887202678], [-0.69231880371335763, 0.38994564522220321, -0.24518781330096662]], [[-0.17775788115294344, 0.68139261003203933, -0.92941760272324103], [0.57444648400267062, -0.46541054677072635, 0.64090954074733131], [0.16039858261023898, 0.53233742660561423, 0.35391902514097207], [0.83402729837796041, -0.10362230677600293, -0.95347993409300025], [0.79560981838597544, 0.96692583461715564, -0.30810772117203555]], [[-0.23558681240791457, -0.80721582012854731, 0.76261433545760959], [-0.33224594684834807, -0.8749846449222709, 0.91941599520236195], [-0.10159916307227213, 0.3704172208323635, -0.21788283886563153], [0.7615629001169113, 0.46155393053605764, 0.59222464350647974], [0.36966931691834026, 0.3321634858065059, 0.52121354303322875]]])
      sub=res.substitute({arg0:s0})
      ref=Data(numarray.array([[[0.023636059105435432, 0.03726025016146739], [0.13459054495236439, 0.90390607844043636], [-0.11140213449584997, -0.20815606989280422], [0.11112688413618056, 0.5372899488075813], [0.15095338874786829, 0.45622537632969012]], [[0.1529578902920225, 0.77953672723124579], [-0.1027666035926746, -0.72684769540621852], [0.042318625626113812, -0.084895551481377451], [0.08484354885368893, 0.44495051360759574], [-0.038843578874625501, 0.11300381763389417]], [[-0.0098149749399192993, 0.15542509012582606], [0.013478000558607595, -0.2427331340595503], [-0.092285038367736133, -0.53114077381046232], [0.10510793816601402, 0.31093533106448912], [-0.080784454385962573, -0.61623173745313808]], [[0.032480592217379312, 0.12411391633413849], [0.026290418287698472, 0.10868254638737296], [-0.029208980143711236, -0.064230232904142148], [-0.093641198208142096, -0.79294110458675404], [-0.078123147556148478, -0.56777833229234131]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[0.059571709783963728, 0.60954557431783341], [0.7387934959771344, 0.64099222540828393], [0.29075868799981075, -0.36333518883690114], [0.27567936671314991, 0.52465975731548098], [-0.26981851393839984, -0.12534575753589466]], [[0.43400100614804438, 0.68511087242637703], [-0.72594134940180299, -0.90563169714041769], [-0.5725828549259081, -0.67026798097765139], [0.17326770211895176, 0.027880634469631099], [0.36976467433961363, -0.23705551180762663]], [[0.078478993279685938, -0.93415880169452192], [-0.34610295385898254, 0.51135469888330032], [-0.33810707789853939, -0.3301071323410531], [-0.32108911792159689, -0.58036686572904994], [-0.75617634281806045, -1.1709017564207747]], [[0.25880032112617113, 1.0820938040792294], [0.31218843693761505, 1.2365866922973161], [-0.0092112851562571457, -0.37730518313498151], [-0.74814128829001858, -0.33586692656310513], [-0.44189324325115309, -0.14805498320099]]]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5, 2),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_Symbol_rank4_taggedData_rank3_offset2(self):
      arg0=Symbol(shape=(4, 5, 2, 3))
      arg1=Data(numarray.array([[[-0.20250273440407751, 0.21362420193910614], [0.093557688243805615, 0.68664266023733256], [0.32270540757636379, -0.40408852527959493]], [[0.046222372395351874, -0.22743534848221847], [0.92091907229150727, -0.65499140301338188], [0.66430762226474527, 0.92091712324457831]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[-0.12644889934058035, -0.59693610679182929], [-0.32390945586632092, -0.5124513765137777], [0.21700725808854759, -0.19999121974959011]], [[-0.25557526927246865, 0.57323714725296804], [-0.90759880121687964, 0.52206839132514604], [0.82721007715169614, 0.65642730758897638]]]))
      res=generalTensorProduct(arg0,arg1,offset=2)
      s0=numarray.array([[[[-0.78616747682728527, -0.77287251896247433, 0.84378720460345757], [-0.052020391531933718, -0.3042480918289665, 0.11413094764585563]], [[-0.077758629053176875, 0.98956793042352187, 0.24625081255961812], [-0.43692794479450314, -0.94574418745957511, -0.5302761741362414]], [[0.40895644267795328, 0.65752170693815848, 0.95355876905765569], [-0.4340684994848627, 0.13641288874133362, -0.42162571612635924]], [[0.58955391452197814, -0.5043013842840276, 0.99328244654473563], [-0.55565115506324281, -0.38205342058232117, 0.3480984569486405]], [[0.62083136227537716, -0.49847807722356041, 0.6322739124910195], [-0.7582604727629243, 0.14230878401363189, -0.15384209754562339]]], [[[-0.44402928570422384, -0.32085752923597299, 0.51282177383405658], [0.98606884228941993, 0.36200655480812016, 0.99531969222567307]], [[0.089452734100162301, 0.10305928863678271, -0.05309436675205248], [0.046618255497360872, 0.48565710917995952, -0.21768057683498965]], [[-0.67900894777302723, 0.25004888995056906, -0.24288857088994131], [0.25778866437015746, -0.31259716821961914, -0.66542272259198554]], [[0.51007169874544345, 0.37042976465279853, 0.81358193230657294], [-0.028397204104971374, -0.20702510989647394, -0.57625321808221885]], [[0.95784526923537294, -0.46001630769083524, 0.31494245300374812], [0.82947492933933709, -0.40410005448490582, -0.32750486642402521]]], [[[-0.48801238142776437, 0.54496808409037278, -0.26748652864107347], [0.33581571302027147, 0.25771230730265082, -0.88493861368929161]], [[-0.98787482179237984, 0.81476887852646285, -0.81159829797195537], [-0.12637368201951005, -0.88487409914955051, -0.27345488236041082]], [[0.04030222981736431, 0.043215022009002402, 0.33411672314931695], [-0.82498815702169703, 0.82060775742668834, 0.79408138157885233]], [[-0.65413898538829729, -0.044887206435541227, -0.60657262938433099], [-0.64660412990657923, -0.54585866992281851, -0.091197073347304647]], [[-0.63972089595200998, 0.35575313301825418, 0.017001807874047259], [0.54033510709087373, 0.65223113006205602, -0.51540339901088594]]], [[[-0.43460348033789797, -0.58394768615901227, -0.98548183892582752], [0.61483912218774495, -0.96545471593993937, 0.083548106858432725]], [[-0.23918743282406552, -0.098782292076166067, -0.39250206712239932], [0.17023995277205528, -0.42872193622235777, -0.57815683300586396]], [[0.74738591537055843, -0.19995366501775136, 0.50794710035926327], [0.37525628398437627, 0.60972578782988918, 0.6890786749536475]], [[-0.025758421467011905, 0.97420298924563631, 0.93106231829236741], [0.1016173917468266, 0.44931747529766342, 0.10508191925806298]], [[-0.55651712971288858, 0.35489989356316132, 0.24503711471617362], [0.73852586496848893, 0.32384664577411892, 0.79798815538814338]]]])
      sub=res.substitute({arg0:s0})
      ref=Data(numarray.array([[[0.15241327341936933, -0.72338006504378938], [-1.0556217185282022, 0.79384806627124371], [0.11189236234799221, -0.2253857995665145], [0.0076907272794429771, 0.075480351051959937], [0.025489503003779598, -0.52757795872590318]], [[1.2655444553476196, -0.067166407882009671], [0.27919256067230885, -0.41784064370834262], [-0.63549276772406182, -0.34189100153088997], [-0.38086243565535555, -0.3540658452664619], [-0.6867378431054374, -0.46408721882857462]], [[-0.27152664187748388, -0.68209551544126024], [-0.98802880271788651, 1.0328761456565023], [1.3487977984882886, 0.28469365959795723], [-0.66064102537989378, 0.49515607497431202], [0.45155649798645409, -0.92399572556333109]], [[-1.0898294151740973, 0.4738859598152747], [-0.85849157756296113, -0.25066270670511087], [1.0304759405704291, -0.033019933379419331], [0.88510792460255439, 0.06655637911623373], [1.087457240331648, 0.38058449311366049]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[0.91669927589198663, 0.58286164482798897], [0.27411476982811922, -1.6022307516191434], [-0.41940445828965789, -1.2261461164974947], [1.0810615151420353, -0.58162041277409615], [0.15753995778128899, -0.70295441673628656]], [[0.51412880351634227, 1.7345196391932436], [-0.68897879087712699, 0.041786032558701308], [-0.38045782245111698, -0.12646206692204376], [-0.28945962837544653, -1.1596446466338732], [-0.01991792915825813, -0.34948732201453858]], [[-1.2246139165943688, -0.18831485721591135], [0.29408564358159778, -0.37942888827687071], [0.17634790149485113, 0.36373235281826471], [0.55086144318547714, -0.1807064238630032], [-1.1870576525638972, 0.50809065271215781]], [[0.81846430177925511, 0.65902151295676992], [-0.15559305612441793, -0.2338545362968926], [0.0012091678971866138, 0.54049939435441963], [-0.45709522697215438, -0.30825586309929592], [0.18602244879786434, 1.2175727320684708]]]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5, 2),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_Symbol_rank2_taggedData_rank2_offset0(self):
      arg0=Symbol(shape=(4, 5))
      arg1=Data(numarray.array([[-0.0059470173977480556, 0.4833492877384844, -0.10726294373506073, 0.74803182985675476, -0.36927935185428074], [-0.91544753559503667, -0.83188374182886915, -0.51755114828956295, -0.88945856130612833, 0.61251346547919416], [-0.43905018566273757, -0.52844236135091482, 0.64602272473381461, -0.55619830234677003, -0.72018370430454182], [0.34301010174370172, -0.66646984138423049, 0.31633717567291497, 0.35697076367429315, 0.79089575924017219]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[-0.67916597973087267, -0.050218651828837002, 0.80939874251156252, 0.75676633802949156, 0.80557832107940786], [0.66818277325294773, -0.70787258100919948, 0.83604108553184053, -0.58228274768370336, 0.90389133244690378], [-0.48712326805463668, 0.77055366196718067, 0.57829366342298405, -0.75110972386950214, -0.56383764452914309], [-0.26123848753706347, -0.5342334189539848, -0.83147873895199398, 0.79128790279036298, 0.83143565515202789]]))
      res=generalTensorProduct(arg0,arg1,offset=0)
      s0=numarray.array([[-0.8216551880107823, -0.23082917025743477, -0.64129384706752313, -0.24174040832667432, 0.067253891482346839], [-0.33090157331948511, -0.28905628045203868, -0.26462388415087945, -0.21417534818463579, -0.8456359006740426], [0.24024833547264657, 0.49050269904712485, -0.54801791800866129, -0.10425275210230289, -0.62884075397116712], [-0.49539671495703175, 0.31059177803063664, -0.39042284638690106, -0.89579879881371771, 0.40892776536053543]])
      sub=res.substitute({arg0:s0})
      ref=Data(numarray.array([[[[0.0048863976980500715, -0.39714644989164211, 0.088133154201221295, -0.61462423379900133, 0.30342029527632886], [0.7521822169733472, 0.68352159229551257, 0.4252485860530571, 0.73082824141778679, -0.50327486663744314], [0.36074786284688554, 0.43419740776864768, -0.53080792335040028, 0.45700322068601329, 0.59174267696264993], [-0.28183602963781879, 0.54760840282607615, -0.25992008155232882, -0.2933068799411539, -0.64984360375541406]], [[0.0013727450914287126, -0.11157111503319644, 0.024759416301733981, -0.17266756661198532, 0.085240446381726925], [0.21131199505561579, 0.19202303387700795, 0.11946590212546239, 0.20531298168466527, -0.14138597500806829], [0.10134559005790239, 0.12197991179951119, -0.1491208895177536, 0.12838679262929875, 0.16623940689754313], [-0.079176737175416942, 0.15384068048832608, -0.073019847782159336, -0.082399265185099921, -0.18256181186553283]], [[0.0038137856655793409, -0.30996892421115985, 0.068787065835644381, -0.47970820989779717, 0.23681657619323318], [0.58707087189022433, 0.53348192511036174, 0.33190236694082798, 0.57040430258715136, -0.39280111665781292], [0.28156018261936727, 0.33888683486417437, -0.41429039843759152, 0.35668654904438551, 0.46184937832879913], [-0.219970267730241, 0.42740300853577512, -0.20286508435775852, -0.22892315432731908, -0.50719658407251955]], [[0.001437634414057451, -0.11684505418230841, 0.025929787816834676, -0.18082951999092126, 0.089269741303863462], [0.22130066105639187, 0.20109991543003256, 0.12511302591745813, 0.21501807579979973, -0.14806925525052672], [0.10613617115801235, 0.12774587221008213, -0.15616979726546307, 0.13445560471991125, 0.17409750274879682], [-0.082919402055696562, 0.16111269159363775, -0.076471478016077371, -0.086294258171308383, -0.19119146378255433]], [[-0.0003999600627117764, 0.032507120545633671, -0.007213850378034849, 0.050308051510527516, -0.024835473456279171], [-0.06156740921669044, -0.055947418898887401, -0.034807328763630262, -0.059819549560126695, 0.041193914138813924], [-0.029527833541865986, -0.035539805224969544, 0.043447542224377994, -0.037406500268695207, -0.048435156696652222], [0.023068764160019663, -0.04482269038871195, 0.021274906084538314, 0.02400767300252139, 0.053190817565786856]]], [[[0.0019678774134731817, -0.15994103977551699, 0.035493476840811007, -0.24752490939265354, 0.12219511852298122], [0.30292302981984298, 0.27527163899007318, 0.17125848924232254, 0.29432323733868354, -0.20268166940643548], [0.14528239720201191, 0.17486240877968159, -0.2137699360145599, 0.18404689332417287, 0.23830992083342772], [-0.11350258233146757, 0.22053591908402956, -0.10467646912960991, -0.1181221873288817, -0.26170865106428171]], [[0.0017190227287766152, -0.13971514727282849, 0.03100502754639296, -0.21622329839812579, 0.10674251589473804], [0.26461585958808659, 0.24046122018157695, 0.14960140986826256, 0.25710358334737105, -0.17705086405820405], [0.12691021359944793, 0.15274958340538761, -0.1867369258990477, 0.16077261247009578, 0.20817362280844173], [-0.099149224167509764, 0.19264729338398587, -0.091439247368715934, -0.1031846411778149, -0.22861338639125528]], [[0.001573722842904946, -0.1279057659229188, 0.028384336796629012, -0.19794708828518423, 0.097720136424399043], [0.24224928260550907, 0.22013630692472277, 0.13695639510713192, 0.23537197928408082, -0.16208569232981998], [0.11618316546723838, 0.13983847021054166, -0.17095304266879643, 0.14718335512512751, 0.19057780913523631], [-0.0907686654264067, 0.17636383809651562, -0.08371037212788586, -0.094462990011797116, -0.20928990776859319]], [[0.0012737045218227765, -0.10352150199618561, 0.022973078321765632, -0.16020997761276068, 0.079090533760787202], [0.19606629468083375, 0.17816899005533574, 0.11084669738827521, 0.19050009706354526, -0.13118528473678431], [0.094033726384845806, 0.11317932673784331, -0.13836214200505187, 0.1191239650648228, 0.15424559562632603], [-0.073464307971804671, 0.14274141033302656, -0.067751624743490863, -0.07645433760167708, -0.16939037461301576]], [[0.005029011413468878, -0.4087375102768902, 0.090705396034347241, -0.63256257017376905, 0.3122758773056214], [0.77413530128274155, 0.70347075727754849, 0.43765983142872955, 0.75215809160234592, -0.51796337605547749], [0.37127659919401473, 0.44686983219529874, -0.54630000868617845, 0.47034125235838437, 0.60901319544033961], [-0.2900616563283302, 0.56359082459104004, -0.26750607246684827, -0.30186729325401168, -0.66880984770434371]]], [[[-0.0014287610308358406, 0.11612386183106017, -0.025769743690244484, 0.1797134020036433, -0.088718749607408734], [-0.21993474663924392, -0.19985868428114267, -0.12434080189852437, -0.21369093882569229, 0.14715534053595877], [-0.10548107629442914, -0.1269573977077921, 0.1552058842948027, -0.13362571633152331, -0.17302293619369086], [0.082407605994227487, -0.16011827003528015, 0.075999479903536005, 0.085761631785148423, 0.19001138968982639]], [[-0.0029170280848756299, 0.23708413021823196, -0.052612763409787183, 0.36691163151789785, -0.18113251878689759], [-0.44902948704540435, -0.40804122066048193, -0.25386023513096939, -0.43628182501122853, 0.30043950802025265], [-0.21535530108471404, -0.25920240453345977, 0.31687589012771383, -0.27281676850651948, -0.35325205077113425], [0.1682473807057146, -0.32690525603247422, 0.15516423847650929, 0.17509512306315414, 0.3879365045722295]], [[0.0032590720926751761, -0.26488407033741357, 0.058782015105168159, -0.4099348460023079, 0.20237170156677081], [0.50168165250295182, 0.45588719622231155, 0.28362730274863823, 0.48743922892196367, -0.335668354104178], [0.24060736864820964, 0.28959588265510899, -0.35403202859490757, 0.30480663565202881, 0.39467357421674037], [-0.1879756818135225, 0.36523741489094874, -0.173358440401011, -0.195626374698748, -0.4334250473406786]], [[0.00061999293051551044, -0.050390493473424884, 0.011182457082974551, -0.077984376922688267, 0.038498388725363417], [0.095437924991053455, 0.086726169514821233, 0.053956131562894007, 0.092728502897118772, -0.063856214475924891], [0.045772190166367438, 0.055091570498272492, -0.067349646974128638, 0.057985203734279532, 0.075081133192979613], [-0.035759747105671827, 0.069481315157491313, -0.032979021156171046, -0.037215184533105836, -0.082453059526828298]], [[0.0037397269042795354, -0.30394973053289515, 0.067451310411522469, -0.47039289988155347, 0.23221790604602982], [0.5756707185046297, 0.52312239942802186, 0.32545725430905209, 0.55932779231785534, -0.38517342944942889], [0.27609264978333681, 0.33230609294221325, -0.40624541730411973, 0.34976015980522607, 0.45288086361261615], [-0.21569873100023615, 0.41910339755510367, -0.1989257080592654, -0.22447776417460583, -0.49734748555318853]]], [[[0.0029461328826367022, -0.23944964932246629, 0.053137709962970014, -0.3705725111943336, 0.18293977781007253], [0.45350970184929157, 0.41211247292818526, 0.25639313868488911, 0.44063484936146358, -0.30343715866534005], [0.21750401967859506, 0.26178860985737989, -0.32003753562072257, 0.27553881184726781, 0.35677664127805636], [-0.16992607760090706, 0.33016697003968182, -0.15671239764714753, -0.17684214365994774, -0.3918071610010288]], [[-0.0018470947075456985, 0.15012431468853768, -0.033314988411472651, 0.23233253605872012, -0.11469513048242214], [-0.28433047777422699, -0.25837625048940754, -0.16074713136905305, -0.27625851604064244, 0.19024164631088988], [-0.13636537780967078, -0.16412985259868881, 0.20064934672327203, -0.17275061966350494, -0.22368313722863792], [0.1065361173830459, -0.20700005303932453, 0.098251725849440516, 0.11087218419455291, 0.24564572009929539]], [[0.0023218514599412173, -0.18871060471794032, 0.041877903804880427, -0.29204871620067629, 0.14417509566285824], [0.35741163256488812, 0.32478641834781302, 0.20206379246602027, 0.34726494324833657, -0.23913925064269184], [0.17141522319314337, 0.20631597087003947, -0.25222203102119739, 0.21715252435778815, 0.28117617175604148], [-0.13391898026223656, 0.26020505250425774, -0.12350526054421261, -0.13936954163062332, -0.30878377351787722]], [[0.0053273310414269897, -0.43298371136360037, 0.096086016155090798, -0.6700860146601082, 0.33079999981777292], [0.82005680276301196, 0.74520045668296186, 0.46362169696245076, 0.79677591081260724, -0.54868882663348972], [0.39330062893562007, 0.47337803254043409, -0.57870638082291614, 0.49824177114446561, 0.64513969724122222], [-0.30726803712297912, 0.59702288335756259, -0.28337446198792121, -0.31977398131104728, -0.70848347111420951]], [[-0.0024319005350213387, 0.19765494412350487, -0.043862795887571228, 0.30589098460187497, -0.15100858014755791], [-0.37435191503568754, -0.34018035958584003, -0.21164103452983007, -0.36372430185571186, 0.25047376269164434], [-0.17953981130419147, -0.21609475394907418, 0.26417662919752311, -0.22744492887598813, -0.29450311285032893], [0.14026635440214186, -0.27253802291744389, 0.12935905434838826, 0.1459752566883725, 0.32341923545920764]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[0.55804025076629737, 0.041262415810071083, -0.66504667595402867, -0.62180098775385306, -0.66190760686391126], [-0.54901584218271671, 0.58162717863679148, -0.686937495317403, 0.47843564052348819, -0.74268700270297727], [0.40024736039785919, -0.63312941399604061, -0.475157988745256, 0.61715320138272256, 0.4632801258231497], [0.2146479585929183, 0.43895566029227939, 0.68318881958056876, -0.65016581053787337, -0.68315341955280739]], [[0.15677131956835511, 0.011591929733097455, -0.18683284014135507, -0.17468374588610494, -0.18595097543213709], [-0.15423607513028961, 0.16339764052234229, -0.19298267007443981, 0.13440784350304849, -0.20864448627160592], [0.11244225977814176, -0.17786626243071219, -0.13348704649305967, 0.17337803433308813, 0.13015017564656856], [0.060301463317487577, 0.12331665682094084, 0.19192954739898699, -0.18265233003584519, -0.19191960240118927]], [[0.43554496393899478, 0.032204912425859385, -0.51906243339685554, -0.48530959624613429, -0.51661242063920987], [-0.42850150120362934, 0.45395433070900643, -0.53614800404722218, 0.37341434334313001, -0.57965994991586445], [0.31238915456686223, -0.49415132225490105, -0.37085616815129685, 0.48168204439009804, 0.36158561218158475], [0.16753063467474463, 0.34260060447303675, 0.53322219925737702, -0.50744806331842418, -0.53319456988155045]], [[0.16418186126172699, 0.012139877398718147, -0.19566438251384186, -0.18294100356313134, -0.19474083227685279], [-0.16152677644301722, 0.17112140677642074, -0.20210491339434317, 0.14076126918663631, -0.21850705978865625], [0.1177573777249519, -0.18627395688156043, -0.13979694632860054, 0.18157357134634905, 0.13630234241842529], [0.063151898647852547, 0.12914580483969154, 0.20100200986920327, -0.19128626072450011, -0.20099159477380721]], [[-0.045676555099321885, -0.0033773997604863624, 0.05443521519482062, 0.050895481175328432, 0.054178276986405656], [0.044937891722727309, -0.047607185746521473, 0.056227016441141857, -0.039160780724762534, 0.060790209584217957], [-0.032760935408272684, 0.05182273236326574, 0.038892499284778177, -0.050515051860454997, -0.037920275758825041], [-0.017569304891830083, -0.035929276384574431, -0.055920180879355998, 0.053217190745556885, 0.055917283326148433]]], [[[0.2247370912380153, 0.016617430900145603, -0.26783131733988885, -0.25041517188918405, -0.2665671338772454], [-0.22110273093437718, 0.23423615076566878, -0.27664731056221625, 0.19267827732533022, -0.29909906401652619], [0.16118985579980855, -0.25497741907203075, -0.1913582830673542, 0.24854338936398229, 0.18657476367144601], [0.086444226537617005, 0.17677867885172122, 0.27513762290091626, -0.26183841198200691, -0.27512336640372287]], [[0.19631719191057076, 0.014516016706959593, -0.23396178991294966, -0.21874806284211501, -0.23285747310401178], [-0.19314242709862503, 0.20461501530050363, -0.24166292648891854, 0.16831248521684425, -0.26127546648993916], [0.14080603998551466, -0.22273337541693078, -0.16715941535803094, 0.21711298299307616, 0.16298081230643288], [0.075512625518379825, 0.1544235249760145, 0.24034415155641503, -0.22872673794727669, -0.2403316979134491]], [[0.179723539539521, 0.013289054703767513, -0.21418623907024723, -0.20025844776400145, -0.21317526431177719], [-0.17681712078090139, 0.18731999187056242, -0.22123643936315326, 0.1540859223661081, -0.23919123524241354], [0.12890445125288796, -0.20390690297643915, -0.15303031539483142, 0.19876157255384219, 0.14920490752578472], [0.06912994326175885, 0.14137092236680751, 0.2200291334903518, -0.20939367831798938, -0.22001773248786077]], [[0.14546061018401896, 0.010755597240804162, -0.17335325749762029, -0.16208069394187813, -0.1725350174071765], [-0.14310827811242563, 0.1516088565080021, -0.17905939059044282, 0.1247106102270636, -0.19359124084789001], [0.10432979554443948, -0.16503359884676708, -0.1238562467165862, 0.16086918663461627, 0.12076012383663413], [0.055950844027478207, 0.11441962851633811, 0.1780822484231652, -0.16947436209441624, -0.17807302093530636]], [[0.57432713497688503, 0.042466694869914737, -0.68445663462820261, -0.63994878385936604, -0.6812259491094681], [-0.56503934127463606, 0.59860246760417357, -0.70698635636422225, 0.49239919578446478, -0.76436296102519796], [0.41192892352066579, -0.65160783995529858, -0.48902588292278676, 0.63516534784941792, 0.47680135436533261], [0.22091264369912933, 0.45176695840732606, 0.70312827230498653, -0.66914145836860284, -0.70309183909699779]]], [[[-0.16316849613999138, -0.012064947511558469, 0.19445670062205614, 0.18181185305331554, 0.19353885073217697], [0.16052979906551751, -0.17006520931418634, 0.20085747918576924, -0.13989246090544877, 0.21715838806852125], [-0.1170305543201223, 0.18512423467996753, 0.13893409005175084, -0.18045286091696708, -0.13546105557494442], [-0.062762111792171227, -0.12834868965755589, -0.19976138301411178, 0.19010560152502606, 0.19975103220288409]], [[-0.33313274615897792, -0.02463238426455238, 0.39701226780727022, 0.37119593135147444, 0.3951383407833009], [0.32774545373736386, -0.34721341156646685, 0.41008040896765596, -0.28561125934743248, 0.44336113821050832], [-0.23893527774945539, 0.37795865095554798, 0.28365460275082327, -0.36842134683853145, -0.27656388646591801], [-0.12813818323191831, -0.26204293391810296, -0.40784256565625276, 0.38812885204201197, 0.40782143293608419]], [[0.37219512619442552, 0.027520721020441105, -0.443565013710015, -0.41472151298596077, -0.44147135431084994], [-0.36617613224733381, 0.38792685806007893, -0.45816549506286036, 0.31910137907798575, -0.49534864611362694], [0.26695227917287701, -0.42227721354520414, -0.31691528942666525, 0.41162158707102503, 0.30899313204976864], [0.14316337204379312, 0.29276948598581165, 0.45566524738893893, -0.43363994903261466, -0.45564163669458158]], [[0.070804922521200339, 0.0052354326600236034, -0.084382046454973617, -0.078894973437956137, -0.083983757006480877], [-0.069659893018968827, 0.07379766470796939, -0.087159584037291182, 0.060704578947716907, -0.094233159009007306], [0.050783941307763682, -0.080332339902586189, -0.06028870593516894, 0.078305255844196384, 0.058781626181043135], [0.02723483128078202, 0.0556953041909755, 0.08668394685029765, -0.082493941571154861, -0.086679455245580156]], [[0.42708724676552839, 0.031579534879461392, -0.50898291550428554, -0.47588551458646461, -0.5065804788104018], [-0.42018055892292905, 0.44513912755734109, -0.52573670657671567, 0.36616312207782287, -0.56840370700391385], [0.30632296316037666, -0.48455554576668575, -0.36365462332365767, 0.47232840507317286, 0.35456408950303325], [0.16427740746909433, 0.33594774597161819, 0.52286771711356717, -0.49759408139895545, -0.52284062426431255]]], [[[0.33645659526924832, 0.024878155145576786, -0.40097347813058049, -0.37489955784987278, -0.39908085390333964], [-0.33101555086038953, 0.35067775124011275, -0.4141720073415846, 0.28846096037866081, -0.44778479677233041], [0.24131926677340063, -0.38172975283665239, -0.2864847811402137, 0.37209728977723455, 0.27932331686884809], [0.12941668854620472, 0.26465748077006773, 0.41191183583343316, -0.39200142762758489, -0.41189049226046209]], [[-0.21094336922253107, -0.015597500361819967, 0.25139259457242763, 0.23504540248231359, 0.25020600308698837], [0.20753207559407474, -0.21985940355478314, 0.2596674872619979, -0.180852233919646, 0.28074121609116515], [-0.15129648194518402, 0.23932763193840481, 0.17961325714639517, -0.23328850463272918, -0.17512333653491263], [-0.08113852633417086, -0.16592850747630417, -0.25825045992577139, 0.24576751666179242, 0.2582370784517356]], [[0.26516191497567565, 0.019606508988727296, -0.31600776091334265, -0.2954588677432658, -0.31451618110340329], [-0.26087382024010913, 0.27636962795685388, -0.32640954030973579, 0.22733648775265719, -0.35289982683836885], [0.19018405285518064, -0.30084175399907664, -0.22577905812110996, 0.29325039634201033, 0.22013509807715376], [0.1019934738900293, 0.20857693206302055, 0.32462829597182857, -0.30893687531893499, -0.3246114750720126]], [[0.60839606883805752, 0.044985807986316496, -0.72505842130319131, -0.67791037658947439, -0.72163609237330495], [-0.59855732566800923, 0.634111407781207, -0.74892460017833939, 0.52160818594501257, -0.80970476986406714], [0.43636443839755618, -0.69026104481171191, -0.51803476905589352, 0.67284318841960322, 0.50508508469516233], [0.23401712333961383, 0.47856565498512521, 0.74483765559234094, -0.70883475283543296, -0.74479906117608297]], [[-0.27772982640024446, -0.020535801071785081, 0.3309856190608807, 0.30946276751047558, 0.32942334266189416], [0.27323848831873326, -0.28946875271208655, 0.3418804128561318, -0.23811158281828931, 0.36962626270626919], [-0.19919822946070367, 0.31510078707861661, 0.23648033550571848, -0.30714962092252435, -0.23056886800345042], [-0.10682767093469744, -0.21846287819377172, -0.34001474266443488, 0.32357959384488771, 0.3399971245023915]]]]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5, 4, 5),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_Symbol_rank3_taggedData_rank3_offset1(self):
      arg0=Symbol(shape=(4, 5, 3))
      arg1=Data(numarray.array([[[-0.39873691198559769, 0.82203444300814055, 0.28675720142965599, -0.93462201913300702, -0.95781986092276927], [-0.045745598871428594, 0.13256933289495332, -0.082332459256467372, 0.67872449665454271, 0.53838146072917481], [0.48501165149153236, -0.90199998879464816, 0.59287248489307465, 0.32531990979428138, 0.83871572235303971], [0.85799958906321305, 0.89643666360638763, -0.92139485938184396, 0.015051055404468272, -0.33892305916074839]], [[-0.11006641495369074, -0.79559820393827074, -0.78666008610988647, 0.53572079303286269, 0.55220559491529531], [-0.28956207109261012, -0.42356182831369926, 0.96389334483532529, 0.43923833724494754, 0.444118652264619], [0.66005263046389162, 0.84835688414274757, -0.15037642263476991, -0.43738537801262978, 0.59916056368837367], [0.77404680457764297, -0.21544175769392071, -0.37763991442199063, -0.98390223238449126, -0.24991433168028232]], [[0.95988045061583493, 0.88586657126437784, 0.94886851801295191, -0.4840612431388569, -0.39645228683696199], [0.6968505523987798, 0.3381786638442057, 0.7179793347559591, -0.95819236434609389, 0.84416491656637627], [0.23510173320485062, -0.056266742052958785, 0.81083225788382429, 0.40689910312441557, -0.03569218529718432], [0.093176739798073616, -0.66687459133671823, 0.75432666633720036, -0.75498614650675533, -0.86514342446904213]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[-0.067045478629749855, 0.57496891696761021, 0.11110058613690166, -0.24506032952444068, -0.3836580023569407], [0.1856551997234217, 0.67867634168805702, -0.33741646546662252, -0.42151657861776815, -0.32461370613084894], [0.47365269976270885, -0.91785888632418366, 0.18571308448729651, -0.23186479551911532, 0.69271343355572412], [0.3199937790834344, -0.83617680434872055, 0.67909787071976391, 0.94443934036789656, 0.80916041998200749]], [[0.12504618913761667, -0.26557196521361681, -0.54829546772810533, -0.68524098995503602, -0.3696535527994782], [0.65324981429802276, -0.82868880809096135, 0.17725848123152188, 0.69307249567939877, -0.41875225343822353], [0.78465264501784238, -0.95054046999448394, 0.38478827738616661, -0.2364131244546086, -0.066376506987678052], [-0.5748226171537798, 0.24499964583918699, -0.32513095509594558, -0.24487939486062671, 0.6434427451806799]], [[-0.13193390081940293, 0.82859639376057537, 0.36515704269397276, 0.9161016658389689, 0.5740735476659069], [-0.93087656462110857, 0.028395674890503875, -0.84122050086883937, 0.22102960221661361, -0.26635342607791213], [0.41466706949027698, -0.087098592095985028, -0.36230651756720555, 0.36868841901877425, -0.31213561783138899], [0.18212750808963807, 0.79668794047428748, 0.53795409322166887, 0.016737554398564614, 0.35304865204523894]]]))
      res=generalTensorProduct(arg0,arg1,offset=1)
      s0=numarray.array([[[-0.9182048398495084, -0.69910146255269723, 0.66383750940216091], [-0.0005150163296845367, 0.9016198126774797, -0.19930817476841045], [-0.17471607861051308, 0.7444792841434289, 0.20512112467920884], [-0.96277870438741675, 0.31533791902739794, -0.37159406295034136], [0.94215643465922327, 0.089642857560435774, -0.47578907712820917]], [[0.27167905812116944, -0.59218682321163474, 0.88988006867561054], [-0.85986542917393072, 0.58890900595779017, 0.70490683853189728], [0.72590827490806631, -0.90755454506022581, 0.88781094202769539], [0.075734922525497739, 0.50272948297617548, -0.72950794284634224], [-0.6406846476205974, -0.43438719627032096, -0.02652777790255656]], [[0.33752615374402928, 0.715859865565456, 0.58474429872752243], [0.050966794903708923, -0.56728423656257698, -0.17187865720919904], [0.67886038740745724, -0.48516344499384179, -0.24807186478906051], [-0.3189776443982133, 0.47173618897274516, 0.52442983188385428], [0.35252158852890836, 0.34711820086529999, 0.862991708404095]], [[0.42517611191332771, -0.88726598789252864, -0.051551951210816238], [0.13199948423997587, 0.72594279671972428, -0.62068216745184213], [-0.98748670209376743, 0.67726173808963663, -0.37738030482380691], [-0.49381832565550843, -0.74893961812235821, 0.48015473107403617], [-0.84888831931468856, -0.71808450070717478, -0.16693535590556086]]])
      sub=res.substitute({arg0:s0})
      ref=Data(numarray.array([[[[1.0802744017445203, 0.38947932221525106, 0.91654788026467937, 0.1623132614252692, 0.23024719427756463], [0.70703263281611783, 0.39888257251512294, -0.1216395711665702, -1.5663643144054593, -0.24444012653379799], [-0.7507144560751503, 0.19778124287799431, 0.099010858571513038, 0.27718132899136422, -1.2126806732936815], [-1.2671024135494371, -1.1151932030397378, 1.6107881712444772, 0.17283941462145636, -0.088398388126619709]], [[-0.29034472501982922, -0.89431091417012853, -0.8985332565410048, 0.5799751895097901, 0.57738897958849345], [-0.39993935225155153, -0.44936178390919312, 0.72600858884082775, 0.58665200436327103, 0.23189993209315363], [0.5480090427855776, 0.77657434134677905, -0.29749319838038546, -0.47562118521616198, 0.54689682720854738], [0.6788831652076408, -0.06179467913643405, -0.49035656654883281, -0.73663858715907438, -0.052723005161202291]], [[0.18461534143433747, -0.55421906828545753, -0.44112025393090004, 0.46283534005755628, 0.49713141716058662], [-0.06464170271224387, -0.26912741285064712, 0.87925616041884058, 0.011874264934391532, 0.40972929579833217], [0.45488050792474616, 0.77763652934173233, -0.049217662488459518, -0.29899937038698687, 0.29220428427276968], [0.4454680049762389, -0.45380389032554724, 0.034565737704816413, -0.88998809850063365, -0.30429992713518728]], [[-0.0074985833243123579, -1.3715022964610573, -0.87674138921611289, 1.2486415407822791, 1.2436192439433358], [-0.30621254054979896, -0.38686521978697536, 0.11642320186035093, -0.1588943945458271, -0.69198142476769786], [-0.34618167474503275, 1.1568538622957547, -0.91952484413498481, -0.60233656711953554, -0.6052965870494843], [-0.61660134745192829, -0.68320044622198262, 0.48771185345333579, -0.044204148456847059, 0.56898259863184508]], [[-0.84223984907317839, 0.28167970512004403, -0.25180959203720116, -0.60222555441177927, -0.66428719004419556], [-0.40061056305001397, -0.073969956992987307, -0.33277062753593734, 1.1347366923281761, 0.14540717601498609], [0.40426701559973122, -0.74700485690541329, 0.15931332265538994, 0.07369562243537503, 0.86089383163455857], [0.83342512618039888, 1.1425624024560264, -1.2608512051159753, 0.28519480291772659, 0.069904215631849342]]], [[[0.81102989324172414, 1.482787321436871, 1.3881348457081666, -1.0019204766995169, -0.94002346291490557], [0.77916013921359906, 0.58778249764576207, 0.045742556943837442, -0.92839221057972277, 0.63447128827481203], [-0.049894615241795115, -0.79751092783348976, 0.97166543961778018, 0.70948786603789271, -0.15871525762746125], [-0.14236367438442804, -0.22231356862697793, 0.64456995932891781, -0.08510412999994299, -0.71395621331629644]], [[0.95466727674444929, -0.5509205424449739, -0.040979906198712723, 0.77792188273627927, 0.8693331056265845], [0.36002406737680154, -0.12504670880954527, 1.1445488499638663, -1.0003766682978528, 0.3936674907796377], [0.13739100610899244, 1.2355408055627035, -0.026787379756762708, -0.25048557165507807, -0.3934912680833233], [-0.21624012955650301, -1.3677749477208958, 1.1016100651768446, -1.1245656655175418, -0.46559409514137384]], [[0.66263721832328537, 2.1052524056100541, 1.7645122148112646, -1.594400566470384, -1.5484207386339508], [0.84825781031343617, 0.78087735626879717, -0.29712168998029775, -0.75663468646085408, 0.73721250579514863], [-0.038233902282989701, -1.4746536311367666, 1.2867115992795546, 0.9943529783253735, 0.033371877703616992], [0.0030626351201197277, 0.25419737928475084, 0.34358013608423849, 0.23358566661162872, -0.78729996427674109]], [[-0.78577235392717337, -0.98396065890756734, -1.0659668045413992, 0.55166563278520586, 0.49428471247510897], [-0.65739394262807971, -0.44960091217604464, -0.045429467033887783, 0.97123014992194856, -0.35177919305683514], [0.19705165574997158, 0.3992281537207199, -0.62220608193439186, -0.4920845744516707, 0.39077348332793371], [0.38614351049806894, 0.44607294907284673, -0.80991978181300062, 0.057271620544854407, 0.47982138546984204]], [[0.27781256393713449, -0.20456724593801681, 0.13282275936783944, 0.37892879486664677, 0.3843064381534459], [0.13660466241597199, 0.090083570231375615, -0.385000181251203, -0.60022916055155473, -0.56024601204111835], [-0.60369465712876091, 0.21087480827176963, -0.33603228450755951, -0.029226992762406923, -0.79667313004152918], [-0.88841495745911303, -0.46305736580479179, 0.73435487415744993, 0.43777965681551728, 0.34865271919343982]]], [[[0.34790835568732359, 0.22592672745842785, 0.088495127918727379, -0.21501041260172143, -0.15981064514174934], [0.18475318625730972, -0.060717250804667472, 1.0820575245548576, -0.016777156276600702, 0.99326516454025537], [0.77368370267147912, 0.26995440151550154, 0.56659106381701452, 0.034629270694145287, 0.69113269056289384], [0.89819091004772778, -0.24160640380815376, -0.14024390381813501, -1.1407298397519425, -0.79918672149309256]], [[-0.12286636316873453, 0.34096522385682138, 0.29778471511137594, -0.26834085337026575, -0.29393285103440348], [0.042158754660031675, 0.18891088777382159, -0.67440304577930688, -0.049887755663986399, -0.36959586542673617], [-0.39012693340715648, -0.51756048371597074, -0.023841775254000247, 0.19476507190545511, -0.29101296586493697], [-0.41139015443490295, 0.28252672590117589, 0.037615973217860171, 0.68868533587746394, 0.27319832890001916]], [[-0.45540582684597564, 0.72428321360853876, 0.34093923956753402, -0.77430803623326261, -0.81978727253103378], [-0.063438959034053943, 0.21160017270827575, -0.70164853342691758, 0.48535735652068301, -0.059397853357246955], [-0.049300335815704047, -1.0099656147029112, 0.27429011778470469, 0.3321099774877761, 0.28753430398287555], [0.18380819153485439, 0.8785126295537341, -0.62940861212543031, 0.67486178315739742, 0.10578560148618221]], [[0.57865579314069748, -0.17294821788463061, 0.035049789716709301, 0.2969862589637276, 0.35810707973386058], [0.24344413352397393, -0.064745116382784212, 0.85749536880209742, -0.51179798242198693, 0.48048045561711439], [0.27995720073823832, 0.65841051701173869, 0.16517355550323048, -0.096710261592872271, -0.0036038912737730924], [0.14032786385175922, -0.73730385885180794, 0.51134935458554631, -0.86488049751263718, -0.46349177600291691]], [[0.64959944438795891, 0.77811377626551304, 0.6468897337979399, -0.56125684020377653, -0.48810660260042288], [0.48473767237810111, 0.19155291487960346, 0.92517116706057356, -0.43517940637711938, 1.0724600788379965], [0.60298420578907685, -0.072052085438240071, 0.85654347235235784, 0.31400841803366153, 0.47284287569871908], [0.65155986614610362, -0.33427772152085045, 0.19508039131636129, -0.98777133516772619, -0.95283911028484547]]], [[[-0.12135893367505163, 1.0097484844587361, 0.77098302685883502, -0.84775149327908617, -0.87675747812437277], [0.20154463552039834, 0.41474354757250431, -0.92724881137498938, -0.051747108650654676, -0.20866278713672967], [-0.39154683409553004, -1.1333263967348104, 0.34369911817343124, 0.50541898117445538, -0.17317289782151782], [-0.32678791618156078, 0.60667628557864239, -0.09557504361165528, 0.91830334441291217, 0.12223832946365557]], [[-0.72831566640882284, -1.0188922462530732, -1.1221641886746729, 0.56598120784116202, 0.52050881098568269], [-0.64876660642309047, -0.49988404072238457, 0.24322661864926276, 1.0031861040036942, -0.13048729846023371], [0.39725828705115795, 0.53171879919854392, -0.53417494184543646, -0.52712972151443449, 0.56781984099401361], [0.61733606452755074, 0.3758479519087457, -0.86396573207716176, -0.24366356891539365, 0.31081791796957559]], [[-0.043036350324938022, -1.684884900250794, -1.1740279909113758, 1.468425190287199, 1.4694353815123191], [-0.41391381486905443, -0.54539464061780252, 0.46315903051524637, -0.011149168576758295, -0.5494311763084978], [-0.12063692821126495, 1.4865066123656561, -0.99329001687169849, -0.77102917374564872, -0.40896257013496146], [-0.3581939668383417, -0.77946440729558031, 0.36943607892461, -0.3963051509729123, 0.49191268854931958]], [[0.74022783266596071, 0.61527236805184993, 0.90315865149471586, -0.17211334156790847, -0.13093808855030512], [0.57405061157344561, 0.41413515333810763, -0.33649946201805897, -1.1242101841000482, -0.19315090683326352], [-0.62096199718123168, -0.21696069903233306, 0.2091765074559333, 0.36230083425903947, -0.88004604910888995], [-0.95867098627342229, -0.6015269746068117, 1.1000246776396132, 0.36694070507201981, -0.060865546583664998]], [[0.25728210904048809, -0.27439114906428619, 0.16306387262540248, 0.48950385273633745, 0.48273371663520193], [0.13043394480860634, 0.13516265020089491, -0.74212194407809939, -0.73161535596666449, -0.91686142480475463], [-0.92494108077637527, 0.16589823354887442, -0.53065612045253108, -0.030006457275783271, -1.1362656064950394], [-1.2997313345419965, -0.4949442784866076, 0.9274149124866069, 0.81978215923115383, 0.6115904596252586]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[-0.11344116287055006, 0.20777587330477626, 0.5237060092613387, 1.3122112071127923, 0.9917935281072513], [-1.2451081837362148, -0.024976229794784536, -0.37253795399726813, 0.049238307818751992, 0.41399679388843758], [-0.70819045841620309, 1.4494873920609836, -0.68004135675540223, 0.62292534033608149, -0.79685624534230559], [0.22894256704827998, 1.1253733161670103, -0.03913731998068154, -0.68488221374856983, -0.95843984019537432]], [[0.13907415610500815, -0.40488709876969808, -0.56719005920418974, -0.80028719385139246, -0.44750692786252033], [0.77441866876875476, -0.75317126745118002, 0.32765565623901549, 0.58105197506001272, -0.32430173174884541], [0.62456789518622624, -0.83919394676843795, 0.41904774002927736, -0.28651795868217339, 0.0020080477436954999], [-0.55473576363505972, 0.062540760220385405, -0.40071290575133733, -0.22461044722276371, 0.50935851410527855]], [[0.077745790369400394, -0.1282065168530058, -0.35270425277255379, -0.27941993785256336, -0.090413578924068844], [0.26295155777349194, -0.72969276692113094, 0.018365253679119037, 0.63496167972238504, -0.30967185839399086], [0.58645987279958545, -0.56515874448318193, 0.17970311906496036, -0.059868382649819696, -0.23446971809982242], [-0.44649338949494649, 0.4919082195990786, -0.25035682904019252, -0.34388314863928093, 0.41007419534730116]], [[0.15300761836151655, -0.94521424030708356, -0.41555381929268798, -0.32056154133307913, 0.039489650326717196], [0.37315776914608334, -0.92528379741629707, 0.69334625181741472, 0.54224593604212923, 0.27945805100484822], [-0.36267982149147648, 0.61631885534049102, 0.077168682682807896, 0.011682037140741397, -0.57187302923486016], [-0.55702406464718757, 0.58626639010667025, -0.9562476340961803, -0.99272541912276346, -0.70733130754593498]], [[0.010814877528300806, 0.12366692150128289, -0.11821437274152125, -0.72818329294341078, -0.66774057985708657], [0.67637632270321879, 0.55162289763617367, 0.098234388454781441, -0.44016902830768428, -0.21664698983428521], [0.31929938185866502, -0.90853526106410831, 0.38184578192160801, -0.41506357974298269, 0.79520495658499413], [0.16330117702871716, -1.144902308333049, 0.35471807921456827, 0.85989436739927305, 0.652059050374173]]], [[[-0.20967090670735133, 1.0508266480086559, 0.67982302804352279, 1.1544335387784279, 0.62552872642202284], [-1.1647758037501281, 0.70038948709500659, -0.9452244815048545, -0.32825578893321272, -0.077233784348752776], [0.033024522445881055, 0.23602720241950381, -0.49982154045443161, 0.40509640351454979, -0.050260239046682198], [0.58940962747504055, 0.33669943059657614, 0.85574956273569436, 0.41649315741388721, 0.15296458431037041]], [[0.038289807278198904, -0.066710352249533922, -0.16102599551793695, 0.45294064422443786, 0.51687031609472234], [-0.43111504543869128, -1.0515763206219437, -0.19846021390722146, 0.9264094463848096, -0.15523722108566662], [0.34711308023643339, 0.16805688870818797, -0.18847532103398604, 0.32003769164527845, -0.8547565881467285], [-0.48528687831749379, 1.4248728020439831, -0.39619781050103231, -0.9445040031852544, -0.067973435182123759]], [[-0.27928746579867464, 1.394032683617239, 0.90244729665866097, 1.2573273367834084, 0.56664902044167476], [-1.2845335920147487, 1.2699470575132386, -1.1526499099939675, -0.73875096657970785, -0.092070750685422503], [-0.0001406984971479841, 0.11905887992852764, -0.53606537590379555, 0.37357084448723599, 0.28596929725268594], [0.91566380548331405, -0.12202993274783747, 1.2656383701358069, 0.9226775240569608, 0.31685731307216236]], [[0.15403355046204203, -0.69443328104587221, -0.53361506575704909, -1.0313539153490778, -0.63368326136423547], [1.0215503712644518, -0.38592166625718388, 0.67723589182071986, 0.15526160157189509, -0.040796757822468083], [0.12783714823625686, -0.48383957592860471, 0.47181486012153162, -0.4053732402605344, 0.24679858363628304], [-0.39760903681940907, -0.52134942075877477, -0.50446327622065212, -0.063791230174582381, 0.12720754444929444]], [[-0.0078635414345669501, -0.27499351768758756, 0.15730528614643319, 0.43036416173568276, 0.39114766686659336], [-0.3780157047497944, -0.075598979052510687, 0.16149444521570039, -0.036866041769776314, 0.39694139975874781], [-0.65530527148034989, 1.0032712389591683, -0.27651943623406972, 0.2414665646111554, -0.40669749296579999], [0.039849045340797064, 0.40816657125682415, -0.3081255827039262, -0.49915932235047183, -0.80728554481447423]]], [[[-0.010261650695328375, 0.48847175294835565, -0.14147986744499161, -0.037565567254657983, -0.058428518453561951], [-0.014025954251987605, -0.34754983450781263, -0.47889354110988464, 0.48311571381014839, -0.56508219488006017], [0.9640457156939235, -1.0411855578008777, 0.12628083708851534, -0.031910649082106279, 0.0037731005492825098], [-0.19698814996677355, 0.35901260396953871, 0.31103067950215502, 0.15326083682344821, 0.94017082783943018]], [[-0.051677203385325318, 0.037541076877773277, 0.25393911443945838, 0.21877814810260726, 0.091473824261066164], [-0.20111825774699993, 0.49981144528791882, 0.026834872113948471, -0.4526427218374075, 0.26678750143459873], [-0.49225293578422186, 0.50741668828709219, -0.14654636574964902, 0.058926362951463543, 0.12660918044729697], [0.31109303530868809, -0.31853534216194773, 0.12659028035785189, 0.18417443834795, -0.38445614154518221]], [[-0.073453270696703751, 0.31361797869902441, 0.25084951642161762, -0.061166919482622928, -0.22351932447714923], [0.040025315736027606, 0.85573183318185042, -0.10637486952366723, -0.67723557308888027, 0.048870690675367118], [-0.16200795831795384, -0.14032383996507056, 0.029266103669888563, -0.13416604264221957, 0.57989122944530658], [0.45093331147407933, -0.88414804458732565, 0.48530302277647774, 0.75579687097192239, 0.14955061980148651]], [[0.011184748123712146, 0.12585852997503227, -0.10259017112308932, 0.23534683612230545, 0.24906066169987917], [-0.2392377207228219, -0.59251354194459449, -0.2499135761129278, 0.57731626024773286, -0.23367975929943272], [0.43652820753549465, -0.20130497334012218, -0.067724112786340732, 0.15578626554374425, -0.41596552930657149], [-0.27772239417670541, 0.80010382926625567, -0.087873902122591718, -0.40799583571767201, 0.23058038896647143]], [[-0.094087032896281841, 0.82557591062786639, 0.16396951892135392, 0.46633946543248633, 0.23185950701588326], [-0.51113639063583216, -0.023899674087839107, -0.78338326049825002, 0.28273109790864315, -0.48965066637553056], [0.79719425929248233, -0.72868033323902337, -0.11363263444685168, 0.15437440413585979, -0.048214503778985618], [0.0704478519924151, 0.4778085477311424, 0.59078770992655305, 0.2623775322276049, 0.81327526407200679]]], [[[-0.13265391644445404, 0.437380259794522, 0.51489667702650743, 0.45657039742403077, 0.13526419543536067], [-0.45268168260620967, 1.0223605097262445, -0.25737028412652285, -0.80555293983345022, 0.24725767720860028], [-0.51618668748697716, 0.45762065893933385, -0.24377117595377606, 0.09217134478233259, 0.36951002153623336], [0.6366852396878796, -0.6139730731815024, 0.54948124718147218, 0.61796335128340563, -0.24506952855819186]], [[0.16381543118291914, -0.63118946028587819, -0.61001238992205997, -1.0984015653390304, -0.6753072062143346], [1.076506871517263, -0.52962043292448602, 0.60627128197602742, 0.31030188229205086, -0.18151820197386742], [0.37475839219320251, -0.75713436385880784, 0.52872550420515907, -0.43106676520072329, 0.23698928065084346], [-0.48809262098903161, -0.4270091764879459, -0.48028441872944694, -0.063491628481595841, 0.35478038150311675]], [[0.20068477368703774, -1.0603318500244983, -0.61885296894563169, -0.56781241315501652, -0.088139082590089873], [0.61038354544682205, -1.2421390533915722, 0.77070470884767839, 0.80222128048346941, 0.13746337625321189], [-0.0927977133497076, 0.29547804704562924, 0.21394052024221474, -0.070285909270825342, -0.61120573788520904], [-0.77402630090409286, 0.6909880230403791, -1.0938121521921911, -1.1047851575140892, -0.4964896105570723]], [[-0.12389244580815653, 0.31282165694520925, 0.53110857442755144, 1.0740899559464445, 0.74194967291569713], [-1.0278893928842927, 0.2991293824002304, -0.37004946858580157, -0.20478842994445462, 0.34602949195517718], [-0.6224514802210307, 1.1233321539753787, -0.55385489846624458, 0.46858572893392558, -0.44223598576037698], [0.35993802384005058, 0.61196297208890438, 0.16645368283528775, -0.27494495733963575, -0.71196002706261052]], [[-0.010855173931267188, -0.43570331943506402, 0.23845286645937172, 0.54716002776415285, 0.4952921117134847], [-0.47129288658332796, 0.01420792785138085, 0.29957177199540819, -0.17676177233939655, 0.62072409023310138], [-1.0347477418943074, 1.4762679006481569, -0.37347839875300143, 0.30504478456391887, -0.48826593104540772], [0.11072871033363446, 0.40089488884890184, -0.43281030858377767, -0.62867351594812171, -1.2078693937623668]]]]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5, 4, 5),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_Symbol_rank4_taggedData_rank4_offset2(self):
      arg0=Symbol(shape=(4, 5, 2, 3))
      arg1=Data(numarray.array([[[[-0.62053096866277424, -0.33567919427718373, 0.86866680906028448, 0.62111674679199691, -0.76620776218107567], [0.55554150476437214, 0.31939925734467955, 0.14654913825162907, 0.29307594299499873, -0.83889133865987109], [-0.83126947121055283, -0.88712931180285226, 0.55440910250531372, -0.80916065856700436, -0.23831164024095242], [-0.58064721592149571, -0.057744879471248733, 0.49008176056911745, -0.22287332984103503, 0.579539567790194]], [[0.18089261437108606, -0.72683334585900727, 0.71462618074091155, -0.67143159976551359, 0.71929851359355879], [0.1850717646583111, -0.95892925961993014, 0.37079182129308608, 0.36901865561817737, -0.63854201334408422], [-0.020897708743589316, 0.28823686430440287, 0.24599834423521805, 0.2727361431612767, 0.031444860587171997], [0.93825217792829996, 0.46522418022340251, -0.089019393608482433, -0.80323264352051327, -0.32849846471559196]], [[-0.97300775316999943, -0.49668251267385233, 0.87916409996290201, -0.82051533359740936, -0.74083868108162521], [0.26320991676383665, -0.067105594157473858, -0.44998321936705499, 0.57313906488377064, -0.04176890207332673], [-0.70652083318863634, 0.64238362050306197, 0.97437840700837564, 0.016125692775973866, -0.36667840096636151], [0.7614166634493893, 0.72296117684324179, 0.72695533285598035, 0.75309798219955892, -0.39502403432830224]]], [[[-0.21845946545975803, -0.63281204640980881, -0.66587831025041355, 0.68704753166663823, -0.67519711736242294], [-0.79275624755534957, 0.82999130507201335, -0.73686553223101781, 0.060763351265059828, -0.56103069290456675], [0.3028682355007819, -0.31438257205600428, 0.77395658745656082, 0.84124532436268784, -0.021901496571839596], [0.64638352892920214, -0.676776358002108, 0.86152288107352826, -0.68453948141759624, 0.54723636853138924]], [[-0.523959289593805, -0.62820680669036677, -0.72256749868154291, 0.77489635001277457, -0.74280775014195188], [0.41361131744835289, -0.70081614003085102, 0.32248279794643397, -0.64227038773636491, -0.28502899986504304], [0.94278298038706954, 0.65665650738659442, -0.69284665890067987, -0.4438833857531117, 0.57015243579037889], [-0.38768806518973742, 0.25195276686885282, -0.64690408772262464, 0.37093220395431681, -0.31342838188892008]], [[0.21230897657278169, -0.15076374814927429, -0.032866435374891978, 0.52050324567871242, 0.88708449509605614], [0.75877108170169971, -0.51796640717593956, 0.46081224388583597, 0.99458271667747966, 0.8886595752914197], [-0.64290176926237597, 0.20716120675860572, 0.63803225271325048, 0.29023169957734085, -0.013908839867053491], [-0.84966161961503506, 0.75964150595385038, 0.80528051897963238, -0.47998493574297174, -0.16178334431601393]]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[[0.25327854020126273, -0.29571253746208837, -0.76070864357894696, -0.35184348259947473, 0.029945959130158961], [-0.98695784196209502, -0.45487664327547095, -0.61006163779866029, -0.23131319050169541, -0.50600513060696928], [0.82043782514227193, -0.45051903585561548, -0.24985316690118475, 0.053062569708355767, 0.24223338274080319], [-0.2579029440983498, -0.24033957601635647, -0.58452197229559544, 0.4044108317974322, 0.067454290720194043]], [[-0.33970971032748953, -0.94248508608457282, 0.79654428064233063, -0.5454074292452149, -0.8044352138841484], [0.714994582833959, -0.2236500812493345, -0.11489708523366016, -0.10019231641441628, -0.56095625598945498], [-0.50172460440597622, 0.92634295206747974, 0.28849417132834554, 0.64758176591046013, -0.28278927498444317], [0.27540574905916482, 0.70414130676807729, 0.57121670458045237, -0.50152314508503748, -0.22931388748020387]], [[-0.38932556513541061, -0.83021000460232308, -0.51345571456558847, 0.064102223506964595, 0.44956068286320483], [-0.78410277250739546, 0.027924992175904606, -0.83749997702389956, 0.48504198834598888, -0.094125722634308628], [0.93290391857929245, 0.75304844595453457, -0.36433243078994226, -0.058563302867714828, 0.47977593992150758], [-0.39604448018678973, -0.57658280711142851, 0.6340894308896583, 0.75205198881640678, 0.34585707673980326]]], [[[-0.074024467761931945, -0.40411904805114474, 0.20043729739892657, -0.9001857184560591, -0.047643681340638233], [0.58834677930600665, 0.24589764825996463, -0.7012034253268733, 0.77121014173988911, 0.75595456311302978], [0.45791099240893596, -0.42371681786775128, -0.60703227618665578, -0.73015376580213776, -0.8112373139457465], [0.70320062729025445, -0.074878727234215292, 0.78980344697196525, -0.092540294053193417, 0.94531132080201852]], [[-0.64561445253469163, -0.80161760166352702, -0.97961905621343615, 0.8740449746699297, -0.137728598924308], [-0.7713408487322635, -0.39983511117114157, -0.8915177106961969, -0.53467091628789376, -0.078167608139335654], [-0.86059272052336699, -0.49548227652943977, -0.43142111090635904, 0.65550021980632511, -0.46408099218342524], [-0.53495885560152656, -0.65159763606435606, -0.52903369518584098, 0.90460533219606032, -0.67114895385210871]], [[0.43721147936115923, -0.34948808060426018, -0.58002043367125045, 0.49297825565895947, -0.44201876528243522], [0.79526445232141474, 0.78853293976182015, -0.62463171446680565, 0.62425167958367167, -0.27921804123877592], [-0.10558021446220822, 0.22639726609816679, -0.82945657820803476, -0.46932475774243465, -0.4984001216852767], [0.092569115951812053, -0.071511003121370376, 0.14395830293143108, 0.18355520909773815, 0.43811732247507118]]]]))
      res=generalTensorProduct(arg0,arg1,offset=2)
      s0=numarray.array([[[[-0.30702143062854748, -0.54278082244937975, -0.29731396289408574], [0.24645599524161343, -0.051886967289286545, 0.54572135458009341]], [[0.61746138689370422, 0.51566051162410331, -0.6753423099534781], [-0.052681935938310831, -0.34359848865219056, 0.5851798107322117]], [[-0.33824901667062579, -0.15934168352795908, -0.12630195941525568], [0.71362829672666916, 0.75560693993553563, 0.94750035665369614]], [[-0.61456902644542488, -0.97952000438677778, 0.21924286978951169], [0.66637005747869371, 0.011100156569260999, -0.6691551750522442]], [[0.083937822042731369, 0.31309530257976004, -0.53020617250982993], [0.0084021226060004839, -0.01311830828671301, 0.11552358381132488]]], [[[0.48241195665256353, -0.76428792810343449, -0.57902480046813665], [-0.70032589006215895, -0.44533960530381589, 0.89195644974298993]], [[-0.81537521274786329, -0.15522039109122132, 0.0656100975525582], [0.97877732281922003, 0.42694052867973298, 0.10486590804242168]], [[-0.8678127207409525, 0.39622725363665978, 0.4640029208548202], [0.80648944350781404, -0.54582863888222843, 0.39460350803746969]], [[-0.78432230216259868, 0.15204772716293213, 0.4089954973702008], [0.0092877913230517972, -0.28893667560587688, 0.83881761385152909]], [[0.94619795853802802, 0.5235478045491988, 0.25963016086104629], [-0.86573519172223889, -0.11850091495479242, 0.017998874687546129]]], [[[0.32968854474496379, 0.28401973549689097, 0.63215739287426831], [-0.033939826409320251, 0.75288159305554836, 0.7952721724780214]], [[-0.89495795144784629, -0.26913579069730043, 0.75724256537242396], [-0.78918955733764062, -0.36780611554939013, 0.092596009524696044]], [[0.42268924110511774, 0.26573268796859795, -0.64336068743564589], [0.24375675531467533, -0.59648832831180743, 0.69377643871371486]], [[0.12859042947251798, 0.29068813117194181, -0.90384540561105253], [0.050803378514198805, 0.43479483111384054, -0.5617251777379948]], [[0.12422801310858711, 0.1273402127965968, 0.7004223583384841], [0.50468431117134149, -0.017648088186096755, 0.0056152027504523527]]], [[[0.098526154956356526, -0.47267202959168286, -0.4990574779791439], [0.28280601661364591, -0.47830893530061447, 0.56540123261177233]], [[-0.83004208871491381, 0.73340634352854606, -0.56848971890532218], [0.6478923163769732, -0.65798459032169787, -0.78147284475118917]], [[-0.48926825384669392, -0.017911959713092784, -0.46094668020695018], [-0.12980232880699161, -0.85235202728054005, -0.40610196590588243]], [[-0.86020213731443196, 0.92451049214889092, 0.48366261842993064], [-0.0059146624778017021, 0.17888082701462693, 0.40474646768121714]], [[0.19018691577774427, 0.30647822455708051, -0.75102044650422672], [-0.35157393308068774, 0.4702893703273765, 0.31408851897896306]]]])
      sub=res.substitute({arg0:s0})
      ref=Data(numarray.array([[[[0.47082761059149747, 0.43960298032070533, -1.0605262563050013, 0.83086440712362564, 0.42131906482704684], [-0.15203551997749609, 0.40063165332289763, -0.05932862216967294, 0.13038689083004545, 0.9780448757100042], [0.15149924496997208, -0.073572441748152473, -0.018551186777190254, 0.48434667389161129, 0.12254613507633513], [-0.84163139160592748, -0.2150483643800733, 0.36707059151536259, -0.16939381771006001, 0.18066166695623054]], [[0.68301798349486209, -0.085672708995697802, 0.57525608510198545, 0.59355334840078666, 1.2080320867639336], [0.60436806393274012, -0.35797566358731825, 0.78325676366822206, 0.78367809643498321, -0.17152824523301513], [-0.7630171400674528, -0.92080190966895381, 0.38179000761897275, -0.091839606723338962, -0.086188798959587545], [-0.78697305361459158, 0.10960640576093811, 0.41388155909289248, -1.4326763355924139, 0.43941776293613488]], [[-0.046680258673348046, -0.77702872990693872, -1.571043161370844, 1.5695182375179519, 0.035526578661430497], [0.21508521928316382, -0.37477312730378848, 0.10262297824702671, 0.2701046730719715, 0.61704402034183214], [0.69309997311500371, 0.64111539220497193, 0.28354133838460427, 0.76813259430289538, 0.52391338034106938], [-0.68598465173779977, 0.281262228764108, 0.64560441049156925, -0.55475631885706833, -0.093387960356977662]], [[-0.30261236035373595, 0.48157588692921122, -1.4708451294780758, 0.21420136621861852, -1.4478769280592418], [-1.4964066718229203, 1.6201871655658413, -1.3477185952548578, -1.0480884946281692, 0.16019469977772993], [1.0189309465059333, 0.062877315223234032, -0.28694923786630183, 0.59511348952175214, 0.036307909787696171], [0.59972889206795221, -1.2182089238521758, -0.026558331792415735, 0.95801004635731668, 0.34843853504067313]], [[0.55000995656834095, -0.0068928751596483324, -0.16939090852490399, 0.33269313029582792, 0.66024288863033198], [0.040589760273724379, -0.28151689320395895, 0.40979109197446345, -0.039909904016998898, -0.1465066985279555], [0.21419048521720407, -0.31213755315545083, -0.30376500052167155, 0.055343131584427059, 0.17498677609859184], [-0.24632287805381489, -0.1637409952163586, -0.26341756333614874, -0.73556023573910545, 0.14525794965730085]]], [[[0.70149302373620581, 1.2696311212967366, 0.12262159038591552, 0.92591695699463072, 1.1044854824109156], [1.0219276632307208, 0.19466918708171577, 0.83131288829953254, 0.65808386454762291, 1.4200086319403984], [-1.1813548277469752, -0.90769991133838035, -0.14912204302277343, -0.74072788673809586, -0.17766077911925829], [-2.4759725362927751, 0.2372921039994661, 0.28655296773710015, -0.043593894021445534, 0.37140751808658795]], [[-0.0012104386022196399, -0.5494625416089044, -1.7252184054537756, 0.60182683140692705, -0.42048691700199531], [-0.98420764062418364, 0.34286516930467775, -0.74179323149147502, -0.36908201836871085, 0.20276102482342925], [1.2662197186461452, 0.71511675681377918, 0.10232833257743638, 1.2828087913433894, 0.38590064620737718], [0.75581135395539079, -0.4528789905107754, 0.313408674326697, -0.2061654799805516, -0.062628392278861258]], [[0.35228541261390173, -0.45410151504393881, -0.21834603199017052, -0.84924565594198231, 0.81713225489519936], [-0.85234205424196574, 0.15924354706166632, -0.77750940119961098, 0.94985881905844183, 0.50939177975454419], [-0.13875096022217198, 0.65191566477780971, 1.3225955350171574, 1.8530139587124461, -0.28522799617891553], [1.6265869654739229, 0.1863235168912436, 1.2424127062600967, -0.71935371507192691, -0.26780589314687636]], [[0.44369535731598952, -0.0012023185202043041, -0.038060539326492233, -0.70573997307639713, 1.3597772667456978], [0.20966793459298672, -0.64803993509326396, 0.043911651546132635, 1.0810670756342391, 1.3663569314398867], [-0.44902703454714471, 0.98347147377305799, 0.74365429609715994, 1.0622259595307797, -0.13488390687339524], [0.31479930298160186, 0.96983126508404904, 0.76980365145177898, -0.15546508710671686, -0.70611945127458919]], [[-0.49002233902612213, -0.20752756962276256, 2.0858368835264343, -0.65411635051259132, 0.14779069781626872], [1.3418440748208444, -0.86208115981037337, 0.8239725418308369, 0.66071698027845527, -0.60343392394620032], [-1.3664163878485467, -0.3236256756074033, 0.32989604752353402, -1.289120288919209, -0.35308090443129048], [-0.38944914257404856, 0.94635670666935057, -0.048849823897330502, 0.10414889841839983, -0.16571779818331758]]], [[[-0.98652033130583094, -1.2024721459078547, 0.49758178362163319, 0.46940908836022605, -0.34749819340351351], [1.3438456822291314, -1.1771994584470615, 0.50343915354104785, 0.86909456663504059, 0.026838509264000221], [-0.5383849817736247, 0.86528037115894829, 0.82812107551142466, -0.31104473347152789, 0.11750317497807326], [-0.43314902236242186, 1.386902299384889, 0.71997633640870173, 0.095246267466559786, -0.53515921251956911]], [[0.15464188445744256, 0.83643333387907581, 0.48421438136176043, -1.7755220633005948, 0.81934840333596526], [0.19608338421169969, -0.52379956364436131, -0.066110301093448273, 0.35277008744949068, 1.5208790969737611], [-0.43074403666942895, 1.2285762606383284, -0.12142496678411085, 0.18920806475100641, -0.2665575564390294], [0.39751434345620146, 0.98570257568467334, -0.23156656133854708, 1.3452743469219717, -1.0609547073530035]], [[0.81835184934248817, 0.10038412072879568, 0.23734481502736904, 0.67837408837904278, 1.2378304495424926], [0.20112560643874788, 0.18435262709477046, 0.39770526591022154, 0.94114154685302454, 0.1523931663467748], [-0.83693710280876632, -1.0362676803223854, 0.71741963822263677, 0.39126317129504895, -0.21154690735781426], [-0.68663806079228173, -0.15414198220943598, 0.87035985263506999, -1.5132850560990709, 0.61992275503528704]], [[0.4940650122356855, -0.026125020726689485, -0.80472842266300637, 0.70575697203333432, -0.075400767012727965], [-0.39932504141824243, -0.14861468443810794, 0.37727361916073948, -1.2079240203563291, -0.90735120020414095], [1.3120556017846867, -0.45773329507873217, -1.3582122600856978, -0.35263484030280967, 0.56451624719712212], [-0.14857983115989437, -0.87717995416555006, -1.3097609179793788, -0.5467116144971198, 0.31847548948952825]], [[-0.83538283760548127, -0.79127364078175788, 0.49120864083720683, -0.24705802604345392, -0.84515991439477789], [-0.12619143039614397, 0.29890898935967986, -0.62474421426460436, 0.53242450982832967, -0.48790492114784673], [-0.46818655579380131, 0.20734825069674417, 1.1890888911200459, 0.37953137339799886, -0.30362407981909928], [0.90894839408462591, 0.21670703330538574, 1.0094574190629337, 0.042797944433411568, 0.034284894043325707]]], [[[0.64781790158161323, 0.59462560029207889, -0.55223744963919907, 0.90600199905902057, 0.6201377346332877], [-0.15711987600672389, 0.79529208020226283, -0.038349108025262701, 0.4551477132175209, 0.72013157556816854], [-0.44821553429142319, -0.830098049389843, 0.363094979503854, 0.39763410717005454, -0.14211639238289128], [-0.99284908885584944, -0.46879246181884687, 0.73594081160193658, -0.66052857385285679, 0.62271637047977046]], [[1.2381847458195518, 0.14909668593937125, -0.62700932494664496, -1.0130268977574159, 0.94275054250136459], [-1.8537517069151739, 0.47339710336501928, -0.64360052841253901, -0.61371566944424716, -0.61865656464818564], [1.1546115699353452, -0.21508584560097696, -0.37497217832991442, 1.4727931477558471, 0.050851505378292784], [2.075091359586704, -1.2197653998880691, -0.53082039080705179, -1.144710483426207, 0.18981258521472344]], [[1.1376058732124428, 1.0850196152455198, -0.127397669699016, -0.87469446709975995, 1.0640133110698771], [-0.95422882307375345, 0.59179091584093135, -0.23728394067107184, -0.27853790537124923, 0.39601541179095123], [0.15094419960136002, -0.4702467637022818, -0.49381584318380373, 0.53486393689476897, -0.19242503938695543], [0.5079077059917253, -0.74872410803161848, -0.46073825030321247, -0.25609287025947447, 0.16623805196819624]], [[0.22390885908458685, -0.79309223649769756, 0.20005156700426352, -1.2066618107754723, 1.1959404154551223], [0.20631353125730012, -1.5336613157781496, 0.24765541360058424, 0.6535675957570688, 0.42308918296907422], [0.26066412433269098, 1.5434559718742098, 0.35152119227694878, 0.98908089457977844, 0.15320797567891903], [1.3180960947045648, 1.1859808396487446, 0.052852468754661208, -0.31050627777376866, -1.1180640946609035]], [[0.56524747457902347, -0.033893587467501214, -0.39207711805260076, 0.81493451315855392, 0.79778180963325696], [0.67625188527960778, -0.9668246944890454, 1.034916726527777, -0.27263249846542409, 0.018439348849544013], [0.50108249490790002, -0.078411049430442026, -0.94848638834384469, -0.4957699267572846, 0.51116440400408569], [-1.0711632593761709, 0.1836624440510764, -0.83422542409921663, -0.58979893569388708, -0.084396026407757299]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[0.47622874569248086, 0.60045877831584071, -0.26243865166068203, 0.38682274760186297, 0.047962456667817205], [0.76707348610057213, 0.76441580771349704, 0.031233865225822277, 0.53967010640062929, 0.52580577534313688], [-0.1570397843743796, -0.54354266284274388, -0.55143148615429993, -0.82045785593958509, -0.51136446431205584], [0.29902867220999307, -0.16064884532952431, -0.018445473383485608, -0.045115544274009392, 0.50782063440843506]], [[0.72572209530837339, -0.015706471588736559, 0.27441654024657652, -0.50620186605664452, -0.9087595081379074], [0.98823289632985467, 0.17080672513567119, 0.1074047978334387, -0.013678806202330529, -0.71449417510536628], [-0.17236906553466694, 0.015987187853235163, -0.064626491845937328, -0.055155634979905332, -0.40972510243409987], [0.45117101564023715, 0.79007414740579396, -0.27018497454794976, -0.7153331564493105, 0.12701273384454898]], [[-0.10876740136056873, -0.87017990630787634, -0.95150209119071805, 0.68295413430031426, -0.49561102717369077], [0.90948655939897549, 0.8064679532568777, -1.4354358153911129, 0.77077953206395633, 0.48827510170406418], [-0.73892311870181471, -0.55258358631247817, -1.4605312574734086, -0.58418171929640872, -1.4992907396808179], [0.27868750780979146, -0.57162487309930587, 0.32689371385843491, 0.63954165688202236, 0.55263290669179377]], [[-0.25731797745413404, 0.8785719815650378, 0.085520572166270792, -0.15551017435333575, 1.1306215121129073], [-0.41436736974276384, 0.13651488012871449, 0.24467167305925336, 0.43689547166483422, 1.5295245715165362], [0.55800115088121849, -0.90474293818153884, -0.063172894975345173, -0.84499485396816709, 0.021087465069478784], [0.20261440472691206, -0.6777047256877301, 0.36282906511496082, 0.23314388002894748, 0.58829774742934782]], [[0.17967659598904104, 0.087019642836494618, 0.40530843933691713, -0.19636372166713884, -0.53736827078903338], [0.66368833185078679, -0.024605774218385459, 0.29051058724272166, -0.22234835388845264, -0.19307891725919962], [-0.5799133284898913, -0.11795890188743244, 0.16726270184819406, 0.16930741672648791, -0.38089274189029998], [0.29818571199194049, 0.50565502929295525, -0.17620973293468362, -0.51326125388831412, -0.18215084790621694]]], [[[1.336582320148938, 1.3866658429133445, -0.89992176206680696, 0.89088968919784794, 0.069400241781208627], [0.072248364149600786, 0.64451682534648924, 0.60940145586436523, -0.061046793670237687, -0.50452345598815218], [0.20747271550966245, -0.64202799053423643, -0.25265707289963868, -0.63462317124943923, 0.38543947805861539], [-0.27724879668020785, -0.041416595830737882, -1.274823534377814, -0.031381011812087273, 0.035187557076598708]], [[-0.48157472509259408, -0.44149557011354246, 0.18005521192961838, -0.080470969462604541, -0.02184389893563235], [0.97225410690694347, 0.56010580517747854, -0.67213457303294033, 0.82801561804747292, 1.1707381026914518], [-0.46017964070019768, -0.3295622014271839, -0.73028228588936794, -0.6316406476790597, -1.166559139702668], [0.61114311800705223, -0.31014191599920859, 0.9918150126769486, 0.11232727624382143, 0.68793751667002667]], [[-0.069828694451816609, -0.52831616699634598, 1.2049968417597265, -0.8895655278607506, -0.27379923760776459], [1.9852984682307768, 1.046801934113867, -0.23008766983918591, 1.5462419413426556, 0.71533199764744149], [0.31946101148955602, 1.1254875838966096, -0.4193059026864222, -0.94848166479654894, -0.69726066124172048], [1.0448167680746026, 0.48708686594216938, 2.0103429127569368, -0.69667642122868889, 1.3126791437972396]], [[0.14305835945433254, -0.316214337115725, 0.30613056380362902, 0.37186270874095417, -0.29335232147354234], [1.457526777548529, 1.1134317984145943, -0.15439116388067431, 1.0498522496431213, 0.068475614410108604], [-0.17387302948502248, 1.1313275144512425, -0.48592742488426399, -0.55696439194872815, -0.32827169637228693], [0.3209224588540468, 0.18733731068950824, 1.0855930697196163, -0.1941218215852602, 0.62388135600440842]], [[0.10917751030289018, -0.5502240453274464, -0.50394012873317573, 0.082802803664419375, -0.22649403610521532], [-1.166734430322105, -0.69155340565432821, -0.15337396842348333, -0.73846094585162625, -1.4471254604505879], [0.45948081351156789, 0.68383527565218616, 0.3817619613244756, 0.92003802431818593, 0.95405140500347219], [-0.74639053214210194, 0.13229747985827967, -0.70786407857064682, 0.2915593576325422, -0.69740863536357778]]], [[[-0.39495299988840149, -1.7577463447853328, -1.5547615287296359, 0.85027386325568743, -0.38801106020302151], [-0.58623751260496126, 0.12188841989008481, -1.9073559476313464, 0.26963633426819167, -0.69221127225535306], [-0.029699472358490117, 0.41200269243095122, -1.1946013064562493, 0.30945332050705082, -0.41539078691912706], [-0.61017896507848468, -0.7886434675561339, 0.059751449628327499, 1.2964802271730247, -0.013211535624119364]], [[-0.093695172514133451, 0.47104158915205696, 0.22603243218229122, 0.94480061529174164, 0.57745656085548303], [-0.0098757971395948968, 0.51445064951732011, 0.76616148317326949, 0.24710281389432712, -0.06114468218774291], [0.052585635052980556, 1.2617216704117942, 0.43101443404668233, 0.025552312900525384, 0.98738876799302477], [-0.49283691406206181, -0.11889538526708082, 0.43415439488847385, 0.099841856190836326, -0.19536369674558834]], [[0.93764744728007199, 0.29586307524949329, 0.45124648264281231, -0.73366116458801067, -0.72645873917808068], [1.4325269248078596, 0.57583332213835181, 0.17791822970798205, 0.5035488324296129, -0.26521034966738621], [0.16497525333255511, -0.079417065449636892, -0.26063874243511875, -0.66239465473231562, -0.54812982965838053], [0.77369984762465005, 0.77728066031096454, 0.10472881805227968, -0.88096923526970183, 0.67977917417729272]], [[-0.24435347710357561, 0.26563291932675487, 0.50787237673074337, -0.20434620799666187, -0.45033343637063961], [0.037429719012574192, -0.75303769702525791, 0.57274376477967048, -1.041222308091994, 0.018206336842366222], [-1.1751566323818472, -0.83342733598684704, 0.62854098343207387, 0.75954520636351641, -0.44772758616871777], [0.1559855352530802, 0.44797602689763688, -0.75299826994561292, -0.48801341751733385, -0.86047479703455987]], [[-0.30799684311180076, -0.93001765344228948, -0.23751603711664659, -0.53522914348575579, 0.1920691323675239], [-0.26575571099786638, 0.070156001199301127, -1.0186816916817056, 0.70039904279756682, 0.1811099892569604], [0.93715386145588764, 0.38561794351039669, -0.55289190893332618, -0.33466481892584826, -0.07389969973653418], [0.090488167164362948, -0.37073510880544702, 0.85300146501931762, 0.45149162817512062, 0.712813268920231]]], [[[0.9148901794904456, 0.90220600209694846, 0.0020911677784220539, -0.20276858803540376, -0.038687190110125363], [0.94108398098511525, 0.75358325182864017, 0.28711103551828704, 0.60929728884028334, 0.35557427734981373], [0.33384708276105401, -0.61288954179779753, -0.41345295274674226, -1.0570195691923363, -0.37114761737067692], [0.54914584084414442, 0.18129673432702947, -0.086239021551041836, -0.45348558546488643, 0.77850205684669138]], [[-0.20287394532554603, 0.56493701123527484, 2.735211361176896, -1.6879824789723048, -0.46522393890418107], [2.0565906521342434, 0.003848758947835651, 1.5186540384181315, 0.20640723281902357, 0.82151773610867318], [-0.63387038729739176, 0.49980877602993257, 1.1648660281692957, -0.073416460212542112, -0.51196116037371242], [1.3764545533805279, 1.4798068213676041, 1.2909425705425099, -1.9296480170829444, 0.29090246801107089]], [[0.44396893879185451, 1.4218908352608648, 1.6391091266511826, -0.67597978711262052, 0.095616100539228019], [1.0896364522610762, 0.20234818295145174, 1.7911535911644341, -0.0064965200158687286, 0.38289966388234248], [-0.10547990596329719, 0.24210124091927171, 1.06837635982441, -0.28391430456786382, 0.3686592154531726], [0.63090974086803331, 0.96490266296629668, 0.27341788204298628, -1.3691103611045961, 0.083113801310564311]], [[-0.6583285709137171, -1.3009641965824035, 0.73125560303240311, 0.19063086439817797, -0.75529341980255549], [1.311184555084195, 0.44420397398000688, -0.39466019174081768, 0.49340377011409248, -0.26033476131289629], [-0.91776642505552564, 1.6136799555464572, -0.10387605516314524, 0.45634421744234688, -0.51770432351687856], [0.22252620385901312, 0.43379582526851412, 1.2965494498928856, -0.21114182038871537, -0.0510697192932619]], [[0.096170660222725884, -0.066271830574049548, -0.22828833088145664, 0.60016109663722172, -0.76533085026739034], [0.30048365741535998, -0.20284796854539483, 0.10880430390395743, -0.7654931019961182, -0.58770058554801829], [-1.2972397543399663, -0.38027714042557231, 0.064520657106427903, 0.67011205295574849, -0.49050489612916059], [-0.13694397525882313, 0.30054519368239163, -0.89357465460949659, -0.1259850837101896, -0.82756994278076679]]]]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5, 4, 5),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_Symbol_rank3_taggedData_rank0_offset0(self):
      arg0=Symbol(shape=(6, 2, 2))
      arg1=Data(-0.527067293034,self.functionspace)
      arg1.setTaggedValue(1,-0.615807934334)
      res=generalTensorProduct(arg0,arg1,offset=0)
      s0=numarray.array([[[0.90043919410278894, -0.73384132889912013], [0.087323656627105839, 0.13531493313085696]], [[-0.17282276627921989, 0.69468752976848513], [-0.10515920676755575, 0.37331896692677846]], [[-0.56470960347630084, -0.48039987961639752], [-0.46245608537130001, 0.57079529752000635]], [[-0.59864210218251612, -0.88758673456942372], [0.3450777363344899, -0.92563702953212679]], [[0.47242162082496408, -0.25681676739807968], [0.11662982999942439, 0.1282904861394043]], [[-0.84683859727648048, 0.87698008996850274], [-0.57762900970794173, 0.93807811376819927]]])
      sub=res.substitute({arg0:s0})
      ref=Data(numarray.array([[[-0.47459204857786508, 0.38678376273965165], [-0.046025443316317166, -0.071320075512416342]], [[0.091089227597511244, -0.36614707581985384], [0.055425978448624035, -0.19676421733650884]], [[0.29763996205480298, 0.25320306412348303], [0.24374547706395261, -0.30084753234065464]], [[0.31552467229378234, 0.46781793752277961], [-0.18187918837627004, 0.48787300348793333]], [[-0.24899798485915403, 0.13535971839835997], [-0.061471768784862942, -0.06761771925156751]], [[0.44634092710359252, -0.46222752206479389], [0.30444935852492616, -0.49443029207865347]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[-0.55449760011365989, 0.45190531287816227], [-0.053774600606014987, -0.083328009455833796]], [[0.10642563070826525, -0.4277940927142041], [0.064757873895712956, -0.22989278187082005]], [[0.34775265441521885, 0.29583405752079589], [0.28478412665261105, -0.35150027309326087]], [[0.36864855635027877, 0.54658295355730913], [-0.21250160799673737, 0.57001462709908435]], [[-0.29092098245486253, 0.15814980303370396], [-0.071821574693651663, -0.079002299264189821]], [[0.52148992730299026, -0.54005129765540283], [0.35570852727954527, -0.57767594548337331]]]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_Symbol_rank4_taggedData_rank1_offset1(self):
      arg0=Symbol(shape=(6, 2, 2, 3))
      arg1=Data(numarray.array([-0.16764631630883375, 0.2596922241939692, -0.8687751596863782]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([-0.66209571146434087, -0.28419802052765308, -0.52362763745408047]))
      res=generalTensorProduct(arg0,arg1,offset=1)
      s0=numarray.array([[[[-0.024318095995042643, 0.016205844004471226, 0.092169154220779426], [0.075431172627815624, -0.66929809253951067, 0.9609668525450823]], [[-0.46364915017831732, 0.059372277162021092, -0.22858193959016782], [0.37028314317801914, 0.52790843906991802, -0.84924156558912101]]], [[[-0.34500414592734363, 0.43747835622941733, 0.89639057484188878], [0.85085926053973937, -0.35296116092045682, -0.33113858355070636]], [[-0.90667151574677241, -0.67952786345094185, -0.70043520715701146], [0.80987105025213779, -0.024428400720639232, 0.5612963309258856]]], [[[0.87678568108009869, -0.93604816323494267, -0.60044806464923517], [0.77417278779366283, -0.49621388882294171, 0.58967796088830204]], [[-0.68841989372265, -0.10171255099368381, 0.4805764348254602], [-0.38010370318769238, 0.22526487032312792, -0.57315824139640048]]], [[[-0.071237591115200116, -0.22074704525548117, 0.3822043486315283], [-0.78361183798902245, 0.098338060374752345, 0.97181737672769541]], [[0.046547197752218938, 0.27716060025831912, -0.037042599372237417], [-0.99164654764381144, -0.93481372800767804, 0.32101475706262139]]], [[[-0.2745469825795086, -0.98812209805091267, -0.38479379820320925], [0.31607992208062985, -0.88076422739425486, 0.55734292952687658]], [[-0.11996910286942919, 0.56967590705511761, -0.2940472509045442], [-0.42292676884468627, -0.031404218736186262, -0.53953359460002392]]], [[[0.77397018126843742, 0.71307373384307815, -0.91813632119013366], [-0.9413076708721253, -0.98242371917570748, 0.9933919212878366]], [[0.59545977660078342, -0.034343175700075834, -0.091068403885083304], [-0.51377646121001885, 0.78059179945141555, 0.043857404002119571]]]])
      sub=res.substitute({arg0:s0})
      ref=Data(numarray.array([[[-0.071788900788640919, -1.0213213992994457], [0.2917339018676523, 0.81281708852478052]], [[-0.60731346325769286, 0.053380286142321542], [0.58405274640353622, -0.62975607350809604]], [[0.13158004416044378, -0.77094766915878921], [-0.32851576824667067, 0.62016816355646354]], [[-0.37743321544864866, -0.68738352897610622], [0.096354676687174248, -0.35540761226927553]], [[0.12371845834542847, -0.76592294839828368], [0.4235137288997316, 0.53148006825733662]], [[0.85308048318929575, -0.96035526224668932], [-0.029627326612992555, 0.2507441285497875]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[-0.036767078188522283, -0.36291826553480544], [0.40979845130575537, 0.049492940088019077]], [[-0.36527959634874335, -0.28964609003179848], [1.1601910286822399, -0.82317991775596533]], [[-8.1802700404476347e-05, -0.68032515528744975], [0.23306326179196618, 0.48776669738176714]], [[-0.09023078322724265, -0.017991881728557146], [-0.090190665179654517, 0.75414493871664867]], [[0.66408739152719731, -0.25080387235244755], [0.071501530681727418, 0.57145771818409719]], [[-0.23433492874200584, 0.38227118355215284], [-0.33680516871123806, 0.095361598531768704]]]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_Symbol_rank3_taggedData_rank1_offset0(self):
      arg0=Symbol(shape=(6, 2, 2))
      arg1=Data(numarray.array([-0.43386040389491898, 0.85504248642395431]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([-0.81714174116797889, -0.84749591884094033]))
      res=generalTensorProduct(arg0,arg1,offset=0)
      s0=numarray.array([[[-0.18824187700589778, 0.11336791171898142], [0.97665710322199129, -0.96694291221059392]], [[0.77221668781167185, -0.54915539380741563], [-0.48596856574740888, 0.36634432281489282]], [[0.054432406479553164, 0.41933540082419807], [0.70394384228488649, 0.32997857827454546]], [[0.52922994619686192, -0.50277255744767757], [0.94154145039637305, 0.69157962618354052]], [[-0.96868783665488234, -0.18614158264087211], [0.6126384749684668, -0.57123255417576924]], [[0.43807729160847408, 0.065512380469513465], [-0.067198606992218801, 0.35660110623428665]]])
      sub=res.substitute({arg0:s0})
      ref=Data(numarray.array([[[[0.081670696787716476, -0.16095480256423503], [-0.049185847967120798, 0.096934381116889221]], [[-0.42373284527073474, 0.83508331792254797], [0.41951824243501745, -0.82677727188656558]]], [[[-0.33503424406836851, 0.66027807680456241], [0.23825678095835864, -0.46955119335421847]], [[0.21084251821540531, -0.41552377078054742], [-0.15894229586107997, 0.3132399606669457]]], [[[-0.02361606586019134, 0.046542020178316497], [-0.18193302636902431, 0.3585495837663078]], [[-0.305413359733062, 0.60190189321010124], [-0.14316463924686543, 0.28214570403450878]]], [[[-0.22961191821025675, 0.4525140890861804], [0.21813310484153076, -0.42989189762579266]], [[-0.40849755395277826, 0.80505794281813103], [-0.30004901594148797, 0.59132996313212338]]], [[[0.42027529605918257, -0.82826925642203186], [0.080759462226208209, -0.15915896164814125]], [[-0.26579957619138622, 0.52383192491601738], [0.24783518667262544, -0.48842810344875592]]], [[[-0.19006439067444478, 0.37457469666278137], [-0.028423227850620715, 0.056015868688204899]], [[0.029154814770819975, -0.057457664006852885], [-0.15471509998018251, 0.3049090965360971]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[0.15382029513732784, 0.15953422251745661], [-0.092637652774626197, -0.096078842509356763]], [[-0.79806728585089248, -0.8277129090876526], [0.79012941489380084, 0.81948017185065203]]], [[[-0.63101048883739908, -0.65445049138126044], [0.44873779466757874, 0.46540695506127416]], [[0.39710519996774313, 0.41185637615591419], [-0.29935523781196566, -0.31047531847616966]]], [[[-0.044478991406665246, -0.046131242344112464], [-0.34265645956285756, -0.35538504082403777]], [[-0.57522189696914927, -0.59658953342965182], [-0.2696392699993963, -0.27965549839261306]]], [[[-0.43245587971353955, -0.4485202195302509], [0.41083644300427297, 0.42609769054212898]], [[-0.76937282015871644, -0.7979525366305058], [-0.56511857989591829, -0.58611091074409372]]], [[[0.79155526549241328, 0.82095898819587221], [0.15210405694292548, 0.15775423161473273]], [[-0.50061247014222821, -0.51920860726071316], [0.46677796393101989, 0.48411725837305075]]], [[[-0.35797124083110093, -0.37126871677507428], [-0.053532900644917329, -0.05552147508146759]], [[0.054910786721684389, 0.056950545177701713], [-0.29139364885071239, -0.30221798218772256]]]]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_Symbol_rank4_taggedData_rank2_offset1(self):
      arg0=Symbol(shape=(6, 2, 2, 3))
      arg1=Data(numarray.array([[0.86706498853234426, 0.95137487066683368], [-0.32556126408857344, 0.56409548013195376], [0.21197658281604537, -0.32602074224417432]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[0.75907516066885106, -0.10132574928736049], [0.76053218718673166, 0.67159231974352629], [0.17905683792161486, 0.4072431934705012]]))
      res=generalTensorProduct(arg0,arg1,offset=1)
      s0=numarray.array([[[[0.06137970300061224, 0.091798905794803654, -0.94474185792118703], [0.0024983776194322793, 0.32273095298441534, -0.59405517572139277]], [[-0.29032868486493668, 0.45504475829254565, -0.0075328642405725343], [0.37784076291699775, 0.049898598418347317, 0.016775874985824224]]], [[[-0.45096043623707915, 0.47084727133734972, 0.8902748788373922], [0.34193078254366061, -0.75214499178079142, 0.28856025514287809]], [[-0.41291393828984879, -0.11451870214656967, 0.35568459198618951], [0.91656007906262138, -0.44923106440517291, 0.47554743632591179]]], [[[0.17806197489923292, -0.16354566540531223, 0.68724901662850257], [-0.076309578925283006, -0.44154033978213603, -0.8471648995889034]], [[-0.61206146604875, 0.97651112755189651, 0.0078272346459036246], [-0.20820524619980696, -0.38775429839216202, 0.39373350310011301]]], [[[0.12683670557935645, -0.057161229542175063, -0.17393826802477785], [-0.14289646570139447, 0.19705634196594768, -0.40695558084988792]], [[-0.022672202361789795, -0.029441249959461846, -0.63585471721076869], [0.81517889360852047, -0.3187574863807674, 0.062430860413080325]]], [[[0.92107152155854788, -0.14365502625662296, 0.28696418563091308], [-0.13454264486693801, -0.9631530492153646, -0.83687271679339248]], [[-0.39407465142573272, -0.87798873404555922, -0.4466003290630387], [-0.68882584795271962, 0.53045727944483079, -0.83031651317362321]]], [[[0.70174421647230756, 0.11277921113579015, -0.21457370016193611], [0.57813411881081156, 0.95216558739043844, -0.33570406469653546]], [[-0.070130725639784064, -0.72678184074184848, -0.37573115620702269], [0.2176268725285353, -0.41009421616797148, 0.97550147322188607]]]])
      sub=res.substitute({arg0:s0})
      ref=Data(numarray.array([[[[-0.17692912701957467, 0.41818389659228955], [-0.2288282274057799, 0.37810227488443293]], [[-0.40147557536016121, -0.017066853612752619], [0.31492353864159783, 0.38214649757085178]]], [[[-0.35558421174076782, -0.45367768590695645], [0.60251350116883218, -0.19305386481179507]], [[-0.24534356136596097, -0.57339598159264904], [1.0417743081565376, 0.46354468554747164]]], [[[0.35331613587820776, -0.14690911681767405], [-0.10199605350674204, -0.04547659638052598]], [[-0.84695207466986477, -0.034006225600676301], [0.029172582659073396, -0.54517697522735087]]], [[[0.091714309138418826, 0.14513234638894562], [-0.27431948756827434, 0.10788644578800549]], [[-0.14485965244947982, 0.16912438724326684], [0.82382204869493003, 0.57537730170071022]]], [[[0.90622706767904482, 0.70169287189118379], [0.019510688626811767, -0.39847290880427277]], [[-0.15051802264724629, -0.72458122624748567], [-0.9459607755152305, -0.085402642347609525]]], [[[0.52625669874539827, 0.80119553343495997], [0.12013022037255491, 1.1965810650426036]], [[0.096157911415625685, -0.35419881100890355], [0.52899090196993526, -0.34232127042323113]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[-0.052754659209092419, -0.32930759553000177], [0.14097409262333582, -0.025434447474909055]], [[0.12434608133004962, 0.33195462865306613], [0.32776286313944941, 0.0020583779523447544]]], [[[0.17519144419481533, 0.72446970002734035], [-0.26081062514789832, -0.42226699274613894]], [[-0.3368401147286047, 0.10977906246848924], [0.43923332554307276, -0.2009078128065519]]], [[[0.13383731537227561, 0.15199920840144879], [-0.54542101434753354, -0.6338051148969237]], [[0.27946900785442397, 0.72102254809849531], [-0.3824423793095571, -0.078970966992143232]]], [[[0.021660801474285483, -0.12207604271472866], [-0.03146964638845326, -0.018909273067157312]], [[-0.15345505891697594, -0.27642274508431686], [0.38753539379472596, -0.27124914894646596]]], [[[0.64129114157106359, -0.072941663027676892], [-0.9844846572964101, -0.97402427400362723]], [[-1.0468378143122687, -0.73159552548807993], [-0.26811460558523753, 0.087906081583386864]]], [[[0.58002793572931355, -0.082746785405326692], [1.1028897175644559, 0.44417402747036361]], [[-0.67325270751890098, -0.63400900998788234], [0.027975511238589601, 0.099799003316389689]]]]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_Symbol_rank4_taggedData_rank0_offset0(self):
      arg0=Symbol(shape=(3, 2, 3, 4))
      arg1=Data(-0.0806949187395,self.functionspace)
      arg1.setTaggedValue(1,0.585582516623)
      res=generalTensorProduct(arg0,arg1,offset=0)
      s0=numarray.array([[[[-0.79549487278417108, -0.88359433650990171, -0.085471692268111132, -0.4519865490071131], [0.086579757546228597, -0.16043098140395018, -0.72096630826129138, 0.1138122810458202], [-0.21394967660170794, 0.99972993386961506, 0.077532899475746486, -0.015192257334262438]], [[-0.081051872353998577, 0.016285353013201664, -0.56588208087157832, 0.19917455705547282], [-0.94943665677971101, -0.47531274663566503, 0.31260845509492219, 0.67724976303382589], [-0.84307266765718691, -0.60129849197939422, 0.10838614608880115, -0.82591591149093424]]], [[[0.85845916924764731, -0.22380785043621398, 0.77286487303714968, 0.42173680207348019], [-0.27457641574956759, -0.94885429285488421, 0.70781339692228307, -0.29478458734780655], [0.071746792638299972, 0.4896667834395112, 0.65040844455041791, -0.1559346300094413]], [[0.20701364597941052, -0.12404655446831314, -0.94644101092672295, 0.85223378244632442], [-0.62791729568103238, -0.32375187871527689, 0.063061100926105285, -0.70491463569574675], [0.46343589978510713, -0.57091489005544394, -0.22131564722310459, -0.056292834234945355]]], [[[-0.98519788081417414, -0.46732059158815353, -0.29232445271559238, 0.10748557366947753], [0.77176104626530329, 0.4339254749021888, -0.38707234420177317, -0.087146801203628277], [0.91910466305150007, 0.33009435057658343, 0.43634127710741932, -0.96608684177205051]], [[-0.41830587308857492, -0.10707330159263817, -0.5068672399930958, 0.66819600640874133], [0.30752472145788667, 0.40400429611487043, 0.3854893053109576, 0.42279905854837652], [-0.62934659993034425, 0.95977988053413377, 0.85634863755746071, -0.68885680429640894]]]])
      sub=res.substitute({arg0:s0})
      ref=Data(numarray.array([[[[0.064192394117008347, 0.071301573183349787, 0.006897131262102861, 0.036473017843476466], [-0.0069865464996786125, 0.012945965007690151, 0.058178317659062909, -0.0091840727705497071], [0.017264651767717333, -0.080673125775055254, -0.0062565110228332598, 0.001225937971057895]], [[0.0065404742532903203, -0.0013141452380443955, 0.045663808532071727, -0.016072374696567478], [0.076614713867142248, 0.038355323465614002, -0.025225913881165681, -0.054650614594360866], [0.068031680408091003, 0.048521732948461689, -0.0087462112511234886, 0.066647217363421815]]], [[[-0.069273292903618403, 0.018060156304212673, -0.062366268126347525, -0.034032016972776483], [0.022156921556694791, 0.076567720057551539, -0.057116944547373774, 0.023787618321688575], [-0.0057896016017674424, -0.039513621299084173, -0.052484656580481195, 0.012583132297286014]], [[-0.016704949340276352, 0.010009926632735609, 0.076372980468463053, -0.068770935821563697], [0.050669735150108107, 0.026125131544690039, -0.0050887104148555351, 0.056883029245753211], [-0.037396922274126734, 0.046069930660195178, 0.017859048168448487, 0.004542545684205113]]], [[[0.079500462934628341, 0.037710397163501566, 0.023589097957453817, -0.0086735396329271335], [-0.062277194914690893, -0.035015580936231493, 0.031234771361670233, 0.0070323040415342288], [-0.074167076098037216, -0.026636936796145743, -0.035210523898873275, 0.077958299192096736]], [[0.033755158437138555, 0.0086402713711880158, 0.040901610742957999, -0.053920022439212449], [-0.024815682408431832, -0.032601093845398756, -0.031107028167014401, -0.034117735672698754], [0.05078507274036035, -0.077449359467509873, -0.06910298372038165, 0.055587243845851037]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[-0.4658278895654549, -0.51741739524708352, -0.050050728658366364, -0.2646754208472204], [0.050699592312508687, -0.093945577834783883, -0.42218526519186544, 0.066646481957387899], [-0.12528519005505315, 0.58542437061847163, 0.04540191039606687, -0.0088963202829779372]], [[-0.047462559390040959, 0.0095364180015606297, -0.33137065302850138, 0.11663313836776669], [-0.55597350685096003, -0.27833483435778761, 0.18305804585203667, 0.39658562061951363], [-0.49368861442255679, -0.35210988417476236, 0.063469032193721978, -0.48364191796963957]]], [[[0.50269868074591861, -0.1310579642983678, 0.45257615736242174, 0.24696169791062211], [-0.16078714853988821, -0.55563248471826965, 0.41448315026905297, -0.1726207005207295], [0.042013667392746798, 0.28674030735307954, 0.38086781379252665, -0.091312593069567127]], [[0.12122357178787571, -0.072639493543936715, -0.55421930901345673, 0.49905320307584988], [-0.36769739023585479, -0.18958343989943746, 0.036927478181310411, -0.41278568637492935], [0.27137996048949486, -0.33431777809607149, -0.12959857366889987, -0.032964099539126997]]], [[[-0.57691465441857115, -0.27365476809182659, -0.17118008869156673, 0.062941672730013401], [0.45192977570344833, 0.25409917161994872, -0.22666279743274437, -0.051031643164443759], [0.53821162162940861, 0.19329748053359036, 0.25551382315495041, -0.56572356408100866]], [[-0.24495260588128734, -0.062700253409724516, -0.29681259398878801, 0.39128389903010663], [0.18008110031502167, 0.23657785244535137, 0.22573579753514891, 0.24758373673049072], [-0.36853436581518645, 0.56203031784706714, 0.50146279028736707, -0.40338250105260121]]]]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_constData_rank0_taggedData_rank0_offset0(self):
      arg0=Data(0.118106855721,self.functionspace)
      arg1=Data(-0.644111582962,self.functionspace)
      arg1.setTaggedValue(1,-0.767090362899)
      res=generalTensorProduct(arg0,arg1,offset=0)
      ref=Data(-0.076073993797220338,self.functionspace)
      ref.setTaggedValue(1,-0.090598630816026038)
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_constData_rank1_taggedData_rank1_offset1(self):
      arg0=Data(numarray.array([0.37376228196226391, -0.55129387447668154, -0.77701381576825024]),self.functionspace)
      arg1=Data(numarray.array([-0.57252584798582173, 0.50380239175281805, 0.15575410083804675]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([0.11446691451846114, -0.94692979917264108, -0.37986777206207667]))
      res=generalTensorProduct(arg0,arg1,offset=1)
      ref=Data(-0.61275482815931448,self.functionspace)
      ref.setTaggedValue(1,0.85998252008024867)
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_constData_rank2_taggedData_rank2_offset2(self):
      arg0=Data(numarray.array([[-0.90323409790000508, -0.8560997431479056, 0.62391789286481836], [0.3129572742096598, 0.89095711066971517, 0.43708246428048936]]),self.functionspace)
      arg1=Data(numarray.array([[0.23404066574972826, 0.87708192850520739, 0.6498312324467812], [0.80962956042892831, -0.45946524916668907, 0.3326362942729002]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[0.28266459112087872, 0.92745878411148186, -0.2580623885076232], [-0.68591538854472001, 0.93487156424515638, -0.79626492384674941]]))
      res=generalTensorProduct(arg0,arg1,offset=2)
      ref=Data(-0.56741666933676871,self.functionspace)
      ref.setTaggedValue(1,-0.94008444323811458)
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_constData_rank3_taggedData_rank3_offset3(self):
      arg0=Data(numarray.array([[[0.74770436811343011, -0.37520726513743763, -0.60593712636600428], [-0.63625230083582984, -0.58186923087689801, -0.51143672714357291], [-0.7593895565724158, -0.38744587426678523, -0.33301582531738361], [0.81145271140939079, -0.8228063061609785, 0.031396957346351506]], [[0.73938492206412532, -0.66875780845462729, 0.66385344430147497], [-0.2598712502669549, -0.36236638294490242, 0.69900996126303871], [-0.72280777218274617, -0.1302227373737872, -0.57995996166949615], [0.11780200933286267, -0.66405700282952251, -0.61405794577863682]]]),self.functionspace)
      arg1=Data(numarray.array([[[-0.3860575189681541, 0.1338403935622865, 0.2133886099349227], [0.18512524522056295, 0.56023816956224426, -0.23329174652761675], [-0.91921756340638083, 0.24349574372246297, 0.66457540938519566], [-0.33037641979488042, 0.71325425237913787, -0.85076141141770267]], [[0.61180128041358928, -0.58593228417826015, -0.15387005773143159], [0.63454174426158105, 0.95181571775174145, 0.7760719711472992], [-0.9058707958285932, -0.9622623764836078, -0.92089354655884237], [0.077663217115428784, 0.75380685063112995, 0.56539643159106734]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[0.54489403137027259, -0.99431467001100526, -0.56981382162729299], [-0.85349525389728598, -0.42777075326939218, 0.43752959862643515], [-0.9710015042282758, 0.054935021467208855, -0.16073836217793835], [-0.69596585131411359, -0.65417176346768868, -0.82496122060109855]], [[0.230072101763382, 0.27493684695375098, -0.58802409159726521], [-0.95075543263111695, -0.056318263710385619, 0.045443224868996213], [0.73611875038000552, 0.80125778636355505, -0.59427273495188659], [0.81135439566077983, 0.43320131154857289, 0.21042863808346768]]]))
      res=generalTensorProduct(arg0,arg1,offset=3)
      ref=Data(-0.041624801184147353,self.functionspace)
      ref.setTaggedValue(1,1.6932302821255176)
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_constData_rank4_taggedData_rank4_offset4(self):
      arg0=Data(numarray.array([[[[-0.92143019856019825, -0.69243406225967563], [0.19067777432636457, 0.026590599702902562], [-0.13298368399242411, -0.46767265841875494]], [[0.32936120586917705, -0.29548785479000883], [-0.027274093640498487, 0.78700471946215345], [0.73634704476412582, -0.16532728905967331]]], [[[0.70317969746577136, 0.44495834335727724], [0.33445719544820718, -0.96009640197776802], [-0.44988057866983611, -0.40765141538734029]], [[-0.70294649319050206, -0.88462308111771781], [-0.47317355638675784, 0.71183542215595974], [-0.98147603415075757, 0.92713507070582257]]], [[[-0.44785930264414398, -0.50808538668428027], [0.4978397583882237, 0.74102815224890928], [0.14908224301731954, -0.7342594657825452]], [[-0.48753254750747388, -0.64032214293697254], [0.93312935003303243, 0.26798073349568519], [-0.24684945615930176, 0.36926507333723047]]], [[[0.4813145411849582, 0.11653620424260769], [-0.51502808706930492, 0.97314600079314428], [-0.57397818779306631, 0.094137886250654779]], [[-0.40967046757860826, 0.54343164324690707], [0.4231168834677681, -0.88479992222009729], [-0.38184913537970155, 0.25104342903233912]]]]),self.functionspace)
      arg1=Data(numarray.array([[[[-0.80781478216054503, 0.83621274752404706], [-0.27568194683984393, -0.12061898085176637], [0.47605885899530564, 0.49491726609967923]], [[0.17017324655387944, -0.79779408406043184], [-0.045658182909630085, 0.28427602974218091], [-0.86000915188470173, 0.12560704707993398]]], [[[0.27716608227394568, -0.83434322873422828], [-0.64145304547163495, -0.06589994806432431], [-0.94420586329205691, -0.52384481635700841]], [[-0.48110077761771586, 0.85774517255717786], [0.53721987103003688, -0.65893185260364073], [-0.52745627787167049, -0.20509101871476543]]], [[[-0.51832581920400234, 0.635288087851821], [0.98063507720922138, 0.79861333003562196], [0.020892198898146752, -0.90937368392829976]], [[0.85321334370195534, 0.49861617395194768], [-0.89937750849041409, -0.78312558271242882], [-0.85515622498392174, -0.25876372075058374]]], [[[0.53354819691759592, 0.3584925614424268], [0.66388940661458662, 0.46146824897892746], [-0.68241531157048918, 0.21761482566973012]], [[-0.3927356863639162, -0.085765108063680762], [0.15288004585108772, 0.3403500313747625], [0.44021176092408942, 0.20202027109594423]]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[[0.67224171939027966, -0.55844482291825104], [-0.38978444532224099, -0.11067835330345455], [-0.76066197047216244, -0.95131305714936487]], [[0.15990539206232013, -0.38291512539479178], [-0.32019008106407654, -0.70450392122946504], [0.45040241278251081, 0.77347401073978705]]], [[[0.83970148829015789, -0.23469059760440114], [0.42198718977873773, -0.12824138417946696], [0.69709049538568002, -0.010693471863277626]], [[0.040518696120396713, 0.26788410618100045], [0.80779902835127171, -0.22150069873501144], [0.49620621467250725, -0.4313845404437231]]], [[[0.44815113370802573, -0.42713446917274744], [0.68973799687606707, -0.52083297019798569], [0.10349272086294214, -0.35788480662990141]], [[-0.75010925811056439, -0.68906485911245907], [0.41234509473712566, -0.059206634907000844], [-0.021132645262399663, 0.97568795095889516]]], [[[0.77684404230191384, 0.72727628908260411], [0.050516148706542197, -0.85980474368933169], [0.11020422965861454, -0.68481808033384217]], [[0.37763810160909661, 0.63302531019814712], [0.94178206288306487, 0.79882214405617802], [-0.684718127402, -0.4636599912332926]]]]))
      res=generalTensorProduct(arg0,arg1,offset=4)
      ref=Data(-0.25834195356130368,self.functionspace)
      ref.setTaggedValue(1,0.096183363928172408)
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_constData_rank0_taggedData_rank1_offset0(self):
      arg0=Data(0.105505313708,self.functionspace)
      arg1=Data(numarray.array([0.50563614125360479, -0.82693353197641661]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([0.36304249194180516, 0.66970317828147974]))
      res=generalTensorProduct(arg0,arg1,offset=0)
      ref=Data(numarray.array([0.05334729970492124, -0.087245881706602524]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([0.038302912001551587, 0.070657243915642862]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_constData_rank1_taggedData_rank2_offset1(self):
      arg0=Data(numarray.array([0.67232526074182997, 0.13682999498425286, -0.58286155274913254]),self.functionspace)
      arg1=Data(numarray.array([[0.88384300504142943, -0.061761297810958959], [0.60039287468836045, 0.15674906783714326], [-0.069914881094524706, 0.051698906755892837]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[0.48476561781581951, -0.9322434444015657], [-0.76744121321571956, -0.33012568865468639], [0.7158049689314645, 0.66123510666060592]]))
      res=generalTensorProduct(arg0,arg1,offset=1)
      ref=Data(numarray.array([0.71713242900653684, -0.050209011555736496]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([-0.19630400261525871, -1.057350434155377]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_constData_rank2_taggedData_rank3_offset2(self):
      arg0=Data(numarray.array([[0.72915019899133138, 0.73463793477870598, 0.65414716729603395], [-0.088667665975812548, 0.45659923993982243, -0.48658570563803449]]),self.functionspace)
      arg1=Data(numarray.array([[[-0.9938380654264265, -0.76470060557046859], [0.41860461099460311, 0.49818232768153559], [0.70215445931516274, 0.45636641708339676]], [[0.036908377314580854, -0.92436485505227606], [0.073568026948994669, 0.8929989858323979], [0.22113622595201288, -0.59735135939686135]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[0.16959480543542149, -0.29155768374094149], [0.78626397878319509, 0.47290378047547232], [-0.45975961860170633, 0.24172422524073145]], [[-0.84707208156684444, 0.75818529926495337], [-0.15156339429693633, -0.46816803482051483], [-0.3626284889582756, -0.95254761177082092]]]))
      res=generalTensorProduct(arg0,arg1,offset=2)
      ref=Data(numarray.array([-0.035105246725275041, 0.88729940174647925]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([0.58288299248123843, 0.47545129282960297]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_constData_rank3_taggedData_rank4_offset3(self):
      arg0=Data(numarray.array([[[0.73238112171369085, 0.041875074567568449, -0.19081848335645102], [-0.63342404704522037, -0.92507272317536171, -0.51592094317867776], [0.46867549772982398, -0.74993257448282424, -0.66033859866765088], [0.073371525219228406, -0.030578976935515145, 0.19543096681737637]], [[0.97822197106865816, -0.6977770238185883, 0.22283977787018538], [-0.47245271635452601, -0.74829724233800943, 0.1545630407887193], [-0.37543924087230929, 0.97235838223227433, 0.89705122940241044], [-0.26304515101502579, 0.69926818715017736, 0.35189693102410979]]]),self.functionspace)
      arg1=Data(numarray.array([[[[0.19516831202874574, 0.7217756021126196], [0.94637321976444611, -0.17912130902409418], [0.23855777686122015, -0.59991239910241689]], [[-0.3490739776315972, -0.74562436564512646], [-0.62588731908697692, 0.4183401515372378], [0.12738526638559122, -0.68298548824266891]], [[0.14289168109666162, -0.73635912281902893], [0.15246650531634143, -0.40196069523009448], [0.65882285444639566, -0.98194347308631214]], [[0.89055504056667623, 0.19130069076914635], [0.069548980863522569, 0.14466562819520346], [-0.66930787687128368, -0.20323845746386215]]], [[[-0.81266723812104313, 0.30758096631716048], [0.42897781176151306, 0.23990619860756901], [0.23721308436078981, 0.76734128202161811]], [[-0.23771522334260653, -0.79652925079298842], [0.0027175852450833649, 0.064585974700822613], [0.61649556211772172, -0.47055511271796036]], [[-0.88646433098717181, 0.78539769537541115], [0.72032629897794509, 0.37444567761252334], [-0.60392831779783296, -0.31815177231963032]], [[0.018553753076584911, 0.36902552606553063], [0.4007148521579047, -0.037504362716830553], [0.24322422380664932, 0.47250474661578212]]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[[-0.6581229630417571, -0.1091222137425103], [0.73599725157460005, -0.61722480938904178], [-0.28845963059550717, 0.39245571868558482]], [[0.062826625348181731, 0.79261498362543459], [0.89579845111000411, 0.042061291016960212], [-0.43867581804772082, -0.04063365302370503]], [[0.76871222991039834, 0.80202851972224964], [0.09909297715784593, -0.41834432779539177], [-0.30641515498285132, -0.11210361899099586]], [[0.60665679860451727, 0.9261568435652594], [0.91619670395983199, 0.32242881256360412], [0.63967792795822076, -0.8665787715537252]]], [[[0.19388926658729777, 0.65301135659413845], [0.92740961097241903, 0.50384377568353278], [0.46127317017758052, -0.11926790838192747]], [[-0.2092317267476238, 0.04724053003558959], [-0.091201753759187376, -0.61128204200197178], [-0.28360690566041646, -0.64989330493259834]], [[0.14636169897699824, 0.13251654833284099], [-0.9304582385849256, 0.0020032563495684386], [-0.32393792797824528, -0.28127409540249859]], [[0.21412601264619657, -0.81650085497452163], [0.15004480872969483, 0.28487460595172931], [-0.96586824076573352, -0.49136092114509955]]]]))
      res=generalTensorProduct(arg0,arg1,offset=3)
      ref=Data(numarray.array([0.33793791922692995, 2.0344375509472195]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([-2.1814493098737855, 0.48796930418346995]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_constData_rank0_taggedData_rank2_offset0(self):
      arg0=Data(-0.125917415508,self.functionspace)
      arg1=Data(numarray.array([[0.097017941718090972, 0.73217166894475949, 0.83450365737975107, -0.56986079746969631, -0.34078588377946839], [-0.2465606068124564, -0.69603885390034592, -0.7779887608653242, -0.82870452319452181, -0.51228612561430542], [-0.77217946192872056, 0.62814707830858629, -0.44181222692623079, 0.48703001010506997, 0.040078144117731807], [0.25971625829708334, 0.77732135886620002, 0.012702853304611628, -0.87705544252452183, 0.79823651290603204]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[0.95282027438982553, 0.93038667091440796, 0.015947231736786582, 0.31923193175906306, 0.61142380106440952], [0.73827991659744518, -0.71146084990353842, 0.44446785347293982, 0.2590049552817193, 0.91693348252414886], [0.065364339652047576, 0.30614610761026384, 0.63892596221619025, -0.38006537331342627, 0.56177788681693919], [0.077021199902235882, -0.6306351905072527, -0.83853022065592464, -0.40001353759165137, 0.83646677118163937]]))
      res=generalTensorProduct(arg0,arg1,offset=0)
      ref=Data(numarray.array([[-0.012216248479014383, -0.092193164261450994, -0.10507854376894445, 0.07175539881651577, 0.042910877727002979], [0.031046274375823791, 0.087643413576042301, 0.097962334062165188, 0.10434833178015829, 0.064505744937783577], [0.097230842154156685, -0.079094656659302182, 0.055631853754232859, -0.061325560147097835, -0.005046536325648142], [-0.03270280001008747, -0.097878296527330835, -0.0015995104576895793, 0.11043655457961103, -0.10051187866897099]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[-0.11997666639446215, -0.11715188502431401, -0.0020080342047978294, -0.040196859794617526, -0.076988904809897452], [-0.092962299019157882, 0.089585311454733696, -0.055966243385547981, -0.032613234572750026, -0.11545789431187499], [-0.0082305087153504083, -0.038549126638013055, -0.080451905863004741, 0.047856849531578961, -0.070737619597341289], [-0.0096983104309880438, 0.079407953316851326, 0.10558555821005826, 0.050368670821615211, -0.10532573398522563]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_constData_rank1_taggedData_rank3_offset1(self):
      arg0=Data(numarray.array([0.54240161472037096, 0.61020298653288196, 0.74145151652228369]),self.functionspace)
      arg1=Data(numarray.array([[[-0.93449853454742415, -0.81138188617816875, -0.86241436172520203, -0.96836366946333174, 0.52945031888009675], [-0.55248495762256122, -0.54653644099074228, 0.9015789541377075, 0.40187512663214098, -0.17118171011676497], [-0.20545443849317935, 0.20490204109500976, 0.14900744366489249, 0.84060975330592957, 0.99209955278665896], [0.26334023825970543, -0.78182490249271797, 0.14475837343563969, 0.15011626107398879, -0.73962160071080896]], [[0.35150517506626988, -0.7520877692511132, -0.52179432055768271, -0.16241337532930999, 0.96547970428602259], [-0.18410489762311166, -0.31885849105320507, 0.87864678498630888, 0.4967097760328707, 0.70024161223571557], [0.34448948528998868, 0.68551574417734984, 0.13045295707799132, 0.87407450294520705, 0.2713270177343039], [-0.27335397394206873, 0.85829651397458906, 0.87668181607152662, 0.97950578646734221, 0.20567674512675871]], [[-0.53062380303616985, -0.013793655599982468, 0.64252382302821487, 0.77888732026942598, -0.85428259469916745], [-0.45822799022683625, -0.50428227647109014, 0.061131762213650909, -0.52433228731227821, -0.14693266313824349], [-0.094567584055777143, -0.1496467678136939, -0.67822608206103907, -0.95629095099041939, -0.32145962313716359], [0.95194555493372701, 0.38333455519434323, 0.87301143785354873, -0.68513214269177003, -0.33648398767166321]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[0.64063158778159046, -0.060680558749783398, -0.8935227444706193, -0.71096746148202072, 0.59928250520421433], [-0.27214308772194373, 0.5134023686574134, 0.39112260940093768, -0.92368153069487535, 0.75501950006827978], [-0.12680205108188836, 0.78319895148091279, -0.39714672437098542, -0.60415333888263612, 0.94483501697840766], [0.88071057256968333, 0.3316968175365349, 0.22208737889028995, 0.27467190343314485, 0.12112979869592722]], [[0.1350992575374963, 0.39472615237037312, 0.6247974282310591, -0.50360083711337511, -0.66532554727014381], [0.28903028569957101, 0.94628696173044879, 0.60453879806935751, -0.68499758676944644, -0.40481117103860553], [-0.11995907015545204, 0.71583306157325977, 0.82752615090737369, 0.35401930476525423, 0.33559477200782362], [0.60329982884389866, -0.26614235410945142, 0.18438242020978701, -0.033400627402723426, -0.030538147788549574]], [[0.23151368878167111, -0.46525848009301862, 0.2498190655656316, 0.96886816370289908, 0.64596934008880424], [0.45188134598992491, 0.050790402441542204, 0.37794641343554525, 0.58099785523017378, 0.4199267583976678], [-0.72000928590332047, -0.67187321832739322, 0.87746527135652119, 0.51884782427005915, 0.45894049337301235], [0.53103742970926082, -0.23781388751523691, 0.31708256636069687, -0.0788597033832521, 0.23441815784500331]]]))
      res=generalTensorProduct(arg0,arg1,offset=1)
      ref=Data(numarray.array([[-0.68581582994913148, -0.90924837501277433, -0.3097751321320163, -0.046839959818542054, 0.24290418148870518], [-0.751763929754792, -0.86491151026373658, 1.0704970106293477, 0.13230453678727694, 0.22549684119239766], [0.028652414950954302, 0.41848712942364164, -0.3424470950288957, 0.28026758384385531, 0.46533423086764236], [0.68185623452508826, 0.38389599390164975, 1.2607666924395149, 0.17112839241395328, -0.52515394931551784]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[0.60157375372420296, -0.13701676164880316, 0.081833802314232346, 0.025440135339142689, 0.3980231093713118], [0.36380440258932112, 0.89355602484114971, 0.86126585635557751, -0.48821218609421091, 0.47386214227500922], [-0.67582899707037902, 0.36345043132197491, 0.9401438602809411, 0.27303039665873008, 1.0575430958023382], [1.2395727015864493, -0.1588154374392865, 0.46807260608619727, 0.070130674681231991, 0.2208762280542067]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_constData_rank2_taggedData_rank4_offset2(self):
      arg0=Data(numarray.array([[0.79585434676766953, -0.16744977672340289, 0.85075718261804867], [-0.36063610270899904, -0.11700692402626234, -0.53200876667055286]]),self.functionspace)
      arg1=Data(numarray.array([[[[0.4653525617480776, -0.84184178934352261, -0.36334960384991488, 0.69796885418246646, 0.69494080489383614], [-0.74004838764693925, -0.2418144523262693, -0.62436297978155975, 0.064098737511398607, 0.87232247429348431], [-0.835573747698797, -0.16967422852384617, -0.95804581914081277, 0.001453429819676888, 0.83946032440489571], [0.94607755429698037, -0.071348983185793857, 0.75389170675254791, -0.76707643899942268, 0.47286870058642916]], [[0.38670308635576167, 0.28320430793129647, 0.50048733255577327, 0.68947110514714494, -0.22820990745227321], [-0.780599211020371, 0.79218525788368854, -0.86296786357817479, -0.39610418035373485, -0.026728041825688109], [-0.95953165884323055, 0.46368104133483201, 0.38682434585948533, -0.84630345312965116, -0.19335265222415776], [-0.56922876323930049, 0.9612593159766456, 0.056341543191664734, -0.58256586567726321, 0.05243347658328501]], [[-0.20944684141558922, 0.1121656890581284, -0.78441215120503882, 0.8246058828387568, 0.83684006232069086], [0.077608385676014802, -0.36817770675793682, 0.22010344631255885, 0.70106482196964492, -0.4347377835374], [-0.68482460228050424, 0.89612758208361942, -0.13117197892974497, -0.63604914484994834, -0.50607629043303426], [0.051752217633831643, -0.41131565153100458, -0.35072311822822666, 0.444181644952095, -0.45953580584866405]]], [[[-0.78576611900177085, -0.82858871414459112, -0.89115670922192258, 0.026220550144515409, -0.65524228820145702], [-0.64771446258702525, -0.34329321436290239, 0.70358933407855373, -0.69468873096297301, 0.79851454816979106], [-0.39978405645846626, 0.7305339428630182, -0.012490682299889588, 0.61559948009482546, 0.74831611598303294], [-0.92301266515515668, -0.57449296792773152, -0.628093007345919, 0.61990039633373684, 0.1548730281699664]], [[0.96485289717641498, 0.35138752590918254, 0.96811775332254379, -0.43017056500149553, -0.90920975718503305], [-0.26118729514762618, 0.38251487887052971, 0.6131024877459077, 0.55606425021260164, 0.21005577613820203], [0.5938176182895194, 0.37601476752513907, -0.71762815528323998, 0.016826385611039107, 0.86748941446318617], [0.28444263902134947, 0.66531071881855475, -0.41643618243375569, 0.83086755400347023, 0.8839283706540384]], [[-0.8884722840377941, 0.63350057787928171, 0.90516893469156967, -0.82638422188812499, 0.042864897752095121], [-0.11537066788701078, 0.76640012268973523, 0.09559461396102642, -0.40805615758393587, -0.64149445836340613], [0.66740086739269677, -0.2636664794576784, 0.17404258245129189, -0.62909910408270031, 0.84656906357734663], [0.64885065877136694, -0.14710062694580217, -0.52546796582163924, -0.21467068872260975, 0.21710773569423036]]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[[-0.23627797382377946, 0.20115798140153474, 0.72253853148678182, 0.95438677737325217, -0.267297067082509], [-0.60970364418670453, -0.16177390388989643, 0.810626278607955, -0.55498941168053273, 0.043863499851317878], [0.35068997831396342, -0.035707587933487162, -0.17640359741949019, 0.48536485700974996, 0.99796322298944573], [-0.45192674871797234, -0.48724380016385993, -0.88528975579428604, -0.40297282910188126, 0.43032142573717902]], [[-0.006823628928143366, -0.47707800497852237, -0.0020211350364061076, 0.88877520693377199, 0.85383889037384098], [0.73754351812113628, -0.54349359701661326, -0.73484076891555317, -0.82689948257102985, 0.69434168187077061], [0.38462133180149904, -0.6130491231248052, 0.84520600038865901, -0.81334760181652355, 0.012491125858899998], [-0.59474267504335709, -0.98121797854245951, 0.24854034010221748, 0.70472673594115798, -0.83319025171798722]], [[-0.5649538845259241, -0.78354773350969564, -0.49152179618246938, -0.94071286770898421, 0.45583977634086836], [0.24550116169048164, 0.0044643427902792965, 0.62562466083309243, 0.1042297623151649, -0.858864814764976], [-0.16571103926267061, 0.59362606743954061, -0.47808854963875147, 0.13979876933690294, 0.66890590011316675], [-0.38157605248220428, -0.63237533885406494, 0.0014780238741600726, -0.0072209250657411239, -0.13172986463698222]]], [[[-0.63153299667628038, 0.76312550653925304, 0.35227094981896578, 0.64313186803258859, 0.72377174685022894], [-0.6969483416170712, -0.71671115826957754, -0.47413006781600564, 0.095309201746312411, 0.27163921735587193], [0.47816455599390451, 0.69070520663545443, 0.58671978452085671, 0.43323980198125067, 0.73018379211239171], [-0.47777530577936322, 0.52706818726121529, 0.98854498564038407, -0.24724567012993814, 0.68035807307409857]], [[0.34930896272645473, 0.429171944195754, 0.39763405112007377, -0.93397675645413458, 0.69486989015521305], [0.20303598666576028, -0.70617976630066903, -0.296904966956131, 0.11524282677941167, 0.23537105621665289], [0.3024930094439966, -0.34262401493878425, 0.026233876157299107, -0.28533457791293237, -0.10984446404457904], [-0.18591011930419032, 0.94464787918264159, -0.43217252339125878, 0.43642426129899037, -0.56335688043928811]], [[-0.98059137781766048, 0.20639994554939123, 0.96765906957325876, -0.17651710242942209, -0.66245568041531322], [0.60921609722528802, -0.70557466259539781, 0.78679728323065201, 0.53690455464035969, 0.82846266546322989], [-0.45432260125310919, 0.74600976800290586, -0.40323074559139505, -0.89345955149343004, -0.083016577890519416], [0.96763321853379036, -0.67004792899327437, -0.27071313849809098, 0.53657480270513869, -0.67859871101286529]]]]))
      res=generalTensorProduct(arg0,arg1,offset=2)
      ref=Data(numarray.array([[0.77056731408022916, -0.70130380991311614, -1.3137751319486588, 1.6220896498347743, 1.6231164128352316], [-0.066705522798006678, -0.96701470256041955, -0.54147775170239676, 1.1163326703822798, 0.35759046645730902], [-1.3673084075811199, 0.38252735101355984, -0.94295420875278779, -0.28754329824996872, -0.5518372715675206], [0.84668142747640296, -0.36008003372824848, 0.84696589653002796, -0.34160890073742678, -0.298180514335594]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[0.041026428429544737, -0.86186308100620845, -0.53116249672531712, -0.21833675074367678, 0.04221371860945039], [-0.49639510332679271, 0.6825292357533691, 1.0875893484178307, -0.5480464607162352, -1.3782961655056807], [0.10757995884550436, -0.026619047973952703, -0.68879798335532127, 0.99388193429173632, 1.1549057047384179], [-0.90544046633777675, -0.705607013745705, -0.90683835575693206, -0.69221871063053175, 0.55149600539263777]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_constData_rank0_taggedData_rank3_offset0(self):
      arg0=Data(0.522536815678,self.functionspace)
      arg1=Data(numarray.array([[[0.27749852528881691, 0.85318703903697601], [-0.57649627632713951, -0.98923154675138925]], [[-0.30713374189444798, 0.56529812990574535], [-0.46268929031243156, -0.4895845882305061]], [[-0.12789443289717362, -0.076152967597240551], [0.0072684923169654692, 0.067550846705466627]], [[0.16238158157640137, 0.61936719413071728], [0.70948579284630076, 0.52432988031269967]], [[0.051346807795746852, -0.36905337659925164], [0.88448123780832932, -0.79623461393574457]], [[-0.20787121909864847, 0.56230662052382763], [-0.81353983206563307, 0.034904580807112673]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[0.28516437480470103, 0.61701287075291122], [0.013744149007031137, 0.49928568580284027]], [[0.5063916960052457, 0.55405134832479797], [0.48257983170453755, 0.83242175134357521]], [[-0.22563587261405393, -0.44367035949489608], [-0.0010269845772017394, -0.034793578303684569]], [[-0.86553996507449371, -0.9437985666509292], [-0.67453534391299397, -0.53789935959208424]], [[0.50350529909458164, 0.55338167414729078], [-0.28757999355622821, -0.91861735380498377]], [[0.90052663662367971, 0.67660601071352033], [0.84897913411738402, 0.2257252064774542]]]))
      res=generalTensorProduct(arg0,arg1,offset=0)
      ref=Data(numarray.array([[[0.14500319575964254, 0.44582163855576384], [-0.30124052848196525, -0.51690990240727719]], [[-0.16048868747666434, 0.29538908470943864], [-0.24177218840797696, -0.25582597173878746]], [[-0.066829549708978919, -0.039792729192659942], [0.0037980548300840856, 0.035297804333798817]], [[0.084850354561621821, 0.32364216135622198], [0.37073244696238855, 0.27398166602320428]], [[0.026830597440798257, -0.19284397622323135], [0.46217400953092802, -0.41606189969825058]], [[-0.10862036489882415, 0.29382591092294175], [-0.42510451327444843, 0.018238928507509401]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[0.14900888435513615, 0.32241194071530793], [0.0071818238563322112, 0.26089515237281247]], [[0.26460830431614979, 0.28951222727550918], [0.25216572856911112, 0.43497101124782539]], [[-0.11790305037837963, -0.2318340968609898], [-0.00053663725072098181, -0.018180925612835842]], [[-0.45227649719170904, -0.49316949765883999], [-0.35246955067027658, -0.2810722185162568]], [[0.26310005566566974, 0.28916229786325304], [-0.15027113408545023, -0.48001138688342032]], [[0.470558321134178, 0.35355155030655294], [0.44362285331840623, 0.11794973061089298]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_constData_rank1_taggedData_rank4_offset1(self):
      arg0=Data(numarray.array([-0.30541259661539644, -0.13803451398952071, -0.89858489181939794]),self.functionspace)
      arg1=Data(numarray.array([[[[0.77109605284546423, -0.52464855680671696], [-0.85674793431992713, 0.35614336591544582]], [[0.9168453631760316, 0.77817291156000024], [0.26127602810127093, -0.66780258173961737]], [[0.57758884134699584, -0.78086858304625162], [-0.51857117421985399, -0.79450459732897971]], [[-0.65043362883443034, -0.99567035870775822], [0.47223981813558868, 0.059675108646178643]], [[0.87065624984766021, 0.57459113830825448], [-0.37455027206520874, 0.81768097568853348]], [[0.88141124136166704, -0.68133399856634025], [0.32040041566023647, -0.22060673054869873]]], [[[-0.58791602794104914, -0.7230475952824158], [0.77235378539765032, 0.11700996144296294]], [[0.70315440521764683, 0.82557647862390349], [-0.28034256355249498, -0.89408595219731768]], [[0.24611807385331308, 0.095381209519354027], [0.46942131455652536, -0.91981243671519808]], [[-0.79915657288003472, -0.25331855768802369], [-0.099804116716655455, -0.75739627650055419]], [[0.88555486342896672, 0.7994082376740359], [-0.41057558054532861, -0.86015848617682833]], [[-0.1210434207488218, 0.56186308646247074], [-0.59345519564520299, 0.86278361153577698]]], [[[0.95435522389733629, -0.71131790349789403], [-0.11505427408175573, 0.30677929936722137]], [[-0.81519148331014546, 0.71405874824118465], [-0.99104850084992568, -0.25691308183044903]], [[-0.58265510365152484, 0.5123326401964774], [0.90008248250650191, -0.17335204230598222]], [[-0.039215432770570491, 0.46654275731888251], [-0.3020014251635037, 0.5265060317398198]], [[0.98909673351497829, 0.61731416061419786], [0.44478155499770899, -0.75601566243014995]], [[0.36691553985807701, -0.89954609910336036], [-0.54176910180814497, -0.56933538429499775]]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[[-0.29722363729279233, 0.99199553218144354], [-0.97836471923296342, -0.95128231701857269]], [[-0.58822114100004574, 0.54019632457631217], [0.016273735246155274, -0.64901109880541274]], [[0.82556556303317996, 0.98265497499926791], [0.76161666703900877, -0.37332887374446622]], [[0.65498619968551619, -0.36040408293033499], [0.51679903674091476, -0.60903787876441373]], [[-0.53194606753968987, 0.48280889874879129], [-0.016645452024896201, -0.85001150176757401]], [[0.30575474328557517, -0.77840551556277271], [-0.39366537559822601, 0.42825368870409508]]], [[[-0.59353919882116424, 0.024259812295290839], [-0.35559113161455458, -0.66635814792935122]], [[-0.67743607860399346, -0.91302013915324931], [-0.42897292557296685, -0.66938027520524157]], [[-0.67897428347518041, 0.95173937951383669], [-0.66739190734918497, -0.84156741056713114]], [[-0.49709734474265921, -0.40924231746305129], [0.14466732121730241, -0.93535089278838357]], [[0.76022332194412412, 0.13439016649885249], [-0.85333533305919285, 0.22078072422735295]], [[-0.39316306026288972, -0.58450341799472438], [0.91745787172529569, -0.40209657027604528]]], [[[0.53480652754574609, 0.84219409310172577], [0.55178329290621853, 0.92423442242888876]], [[-0.55323594097799611, 0.69944710462578774], [-0.38288723709841177, -0.18086627299181646]], [[-0.18876983811808312, -0.30009453935583208], [-0.60110018592764924, 0.78375614690422246]], [[-0.1988871597105728, -0.26011125602742236], [0.47545310621750758, 0.036212566369265842]], [[0.95781348847131698, 0.013928463679332204], [0.15456332537600193, -0.59589799374232744]], [[0.875410231404814, 0.37177000088678636], [0.7753859900045017, -0.7579865969003412]]]]))
      res=generalTensorProduct(arg0,arg1,offset=1)
      ref=Data(numarray.array([[[-1.0119189301789893, 0.89921932281481576], [0.25843616429930866, -0.40058932684562087]], [[0.35544305119615527, -0.99326426056433292], [0.84944116925878554, 0.55822825423557876]], [[0.31318937676248221, -0.23505316740269383], [-0.71521869433439134, 0.52538910093880553]], [[0.34420020806111895, -0.080171299493599302], [0.1409223416230152, -0.38678906853389516]], [[-1.2769339024943478, -0.84054247734356657], [-0.22860801360990163, 0.5483457408439012]], [[-0.58219068684580011, 0.93885002174535204], [0.4708885063413607, 0.45987833261692262]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[-0.30786432801492869, -1.0630995107548145], [-0.14793537219465414, -0.4479890628466886]], [[0.77028916410027959, -0.66746707184383625], [0.39829955208507206, 0.45313744623062896]], [[0.011209487512767374, -0.16182767100479195], [0.39965533920995316, -0.4740867432498666]], [[0.04729255128662252, 0.40029355605191075], [-0.60504099712943038, 0.28257848085285187]], [[-0.80315075694256888, -0.17852230778203138], [-0.016014810318569078, 0.76459379418315587]], [[-0.82574168621678978, -0.015650411072662129], [-0.70316062281690361, 0.60582443775391437]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_constData_rank0_taggedData_rank4_offset0(self):
      arg0=Data(-0.400095192518,self.functionspace)
      arg1=Data(numarray.array([[[[-0.40664302220817716, 0.9483012836732756, 0.68612978012144166, 0.44260553190447993], [-0.43621989283242479, -0.96937235184782211, 0.71123078008260032, -0.27532312369765011], [-0.40119221609069222, -0.15943276274732754, 0.092910995496688686, 0.27144353283344391]], [[-0.92124741339042382, -0.48788874632517332, -0.82005340994867759, 0.94909122226011799], [-0.58918553995604173, -0.36668582197213984, 0.91379468155598831, -0.27173658622234131], [0.13123388148095794, 0.50889244285868784, 0.85332897660901286, 0.097372134839740498]]], [[[0.91463359392029586, -0.51209756282689467, -0.22266383258106215, 0.71867854488635419], [0.46264574743509179, -0.70442760612882793, -0.606584628839554, -0.83765655669145977], [0.21014961768709517, 0.60401874715692605, 0.536336158191421, -0.43861622966435343]], [[-0.14637169438039654, 0.80225975941914252, -0.20302688938218294, 0.047613646806506926], [0.87137850466320765, 0.61298290289269275, -0.13072144948777442, -0.22780831748453867], [0.13874017044615972, 0.55933065424916961, -0.77096511918314192, -0.93761278623855926]]], [[[0.93507003416071166, -0.85751806386878093, -0.42785650152006838, -0.86869376024675615], [0.4808129595440549, -0.70575142616230657, 0.35169332318158486, 0.13492105279786637], [0.97898471876778892, -0.035424147553888785, -0.338206627554408, 0.43972274581281634]], [[-0.34753092838704491, 0.95911577966939565, 0.49936030327399972, -0.6124900164735656], [0.81589984466017085, 0.27828823130202029, -0.021495056821058345, 0.19697339336982322], [0.8802573948891288, 0.5839555676159105, 0.71382978197512315, 0.74512614928394338]]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[[0.095101014117379146, -0.27798226677389004, -0.59957978675289159, -0.17434594797491276], [-0.8711170086348683, -0.99323386843544959, 0.81277665268465715, -0.78146640943795442], [-0.26060861190481477, -0.021567049802825533, 0.39664157527624599, -0.11531766386205944]], [[-0.8697820126971918, 0.75575358852930519, 0.69466677220590234, 0.53535279412284997], [-0.47245588382941106, -0.80139025701081179, -0.45688406327757591, 0.79173748327460225], [-0.855345836791783, -0.092328895635258812, -0.68709897271079257, 0.73796868307020436]]], [[[0.14709889691754041, 0.027135222588636099, 0.068767816941918136, -0.045776553648539497], [0.83919965087959603, 0.81909194723618928, 0.38262305588459156, -0.037187341764107984], [0.99037334258789222, -0.57806793891398978, 0.21649611831733973, -0.036760491931859818]], [[-0.821266316633956, -0.14135564194907779, 0.1713401471995748, -0.20795181639799276], [0.84878241369697749, 0.42158199918239814, -0.062196349535690754, 0.35470973493091651], [-0.31051255259878885, -0.4754438418060003, 0.28861648254061922, -0.26300502510839063]]], [[[0.041594324638908331, -0.031666312292024656, 0.39055634515736304, -0.81911741608151845], [-0.49089609357784014, -0.85131651858393242, -0.7735233826057295, -0.042660659871630813], [0.72807871997106743, -0.83851394522903111, -0.009078664166171535, -0.18192422466222835]], [[-0.40832846898398589, -0.43634849158223843, -0.0056137779585061498, -0.31514339516070522], [-0.49843404033536576, -0.77383540044398447, 0.77015332927319458, -0.084430012124871334], [-0.30755898517106983, 0.40763848583646634, -0.30103639687647288, -0.75941992210877984]]]]))
      res=generalTensorProduct(arg0,arg1,offset=0)
      ref=Data(numarray.array([[[[0.16269591825641413, -0.37941078465616745, -0.27451722646990667, -0.17708434549678082], [0.17452948200289753, 0.38784121773401903, -0.28456001588175661, 0.11015545818042249], [0.16051507693346159, 0.063788281905042016, -0.037173242630271185, -0.10860325252671749]], [[0.3685866612169974, 0.19520194188825446, 0.32809942692832167, -0.37972683528714746], [0.23573030203743595, 0.14670923453550316, -0.36560485903891515, 0.1087205017787664], [-0.052506045075986357, -0.20360541989641709, -0.34141282117742849, -0.038958123034578379]]], [[[-0.36594050384281834, 0.20488777298713956, 0.089086728963278614, -0.28753983077474204], [-0.18510233938759985, 0.28183809868898974, 0.2426915938539197, 0.33514236131329478], [-0.084079851746067372, -0.24166499692813068, -0.21458551846587157, 0.17548824484900558]], [[0.058562611242286185, -0.3209802728941123, 0.081230082393661293, -0.019049991185525497], [-0.34863435057912762, -0.2452515125429921, 0.052301023499021299, 0.091145012641140138], [-0.055509275204613247, -0.22378550579294706, 0.30845943778411333, 0.37513436821729829]]], [[[-0.3741170253351867, 0.34308885485109941, 0.17118332934567831, 0.34756019724496623], [-0.19237095361384773, 0.28236775272014331, -0.14071080784557269, -0.053981264593871071], [-0.39168707952741522, 0.014173031135353261, 0.13531484576218794, -0.17593095664044894]], [[0.13904545369891599, -0.38373761251371846, -0.19979165667417445, 0.24505431105624201], [-0.32643760542458117, -0.11134178347822908, 0.0086000688970030992, -0.078808107741190292], [-0.3521867518734122, -0.23363781524714822, -0.28559986404429971, -0.29812139014783096]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[-0.038049458551933972, 0.11121936854144318, 0.23988899021069948, 0.069754975619726836], [0.3485297272753265, 0.39738809580691331, -0.32518803132986784, 0.31266095353029816], [0.10426825275186212, 0.0086288729429031766, -0.15869438742072622, 0.046138042923597439]], [[0.34799560181863132, -0.3023733774986756, -0.27793283596146223, -0.21419207922954153], [0.1890273277969112, 0.32063238916065651, 0.18279711725537157, -0.31677036079433663], [0.34221975724053549, 0.036940347274147793, 0.2749049957655299, -0.29525772232510517]]], [[[-0.058853561481384216, -0.010856672105614614, -0.027513672958407842, 0.018314979044815324], [-0.3357597458795703, -0.32771475031926994, -0.15308564520590728, 0.014878476662337239], [-0.39624361316723261, 0.23128220330817972, -0.086619056137539605, 0.014707696096527704]], [[0.32858470506207432, 0.056555712779098162, -0.068552369179847736, 0.083200522016187994], [-0.33959376321384327, -0.16867293112493453, 0.024884460441388631, -0.14191765968513459], [0.12423457951121621, 0.19022279541878986, -0.11547406714590887, 0.10522704615389908]]], [[[-0.016641689324053278, 0.01266953931280743, -0.15625971610479644, 0.32772494028184512], [0.19640516706627817, 0.34060764639644986, 0.3094829866806848, 0.017068324924277928], [-0.2913007956349617, 0.33548539834529695, 0.0036323298873691531, 0.07278700768989177]], [[0.16337025740865987, 0.17458093374446176, 0.002246045573060886, 0.12608735735754589], [0.19942106332541956, 0.30960782351775046, -0.3081346445438089, 0.03378004195538338], [0.12305287138260856, -0.16309419846841897, 0.12044321516316722, 0.30384025993799008]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_constData_rank1_taggedData_rank0_offset0(self):
      arg0=Data(numarray.array([0.83911466182307914, 0.94114511565462133]),self.functionspace)
      arg1=Data(-0.918246497072,self.functionspace)
      arg1.setTaggedValue(1,0.45404995297)
      res=generalTensorProduct(arg0,arg1,offset=0)
      ref=Data(numarray.array([-0.77051409886077826, -0.86420320568625586]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([0.38099997273703901, 0.4273268955007381]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_constData_rank2_taggedData_rank1_offset1(self):
      arg0=Data(numarray.array([[-0.81711728007368856, 0.19718816037447295, -0.31681711928081535], [-0.7851439340763422, -0.39658617165284471, -0.78370664682841773]]),self.functionspace)
      arg1=Data(numarray.array([-0.90011367758669603, -0.571701134588954, -0.068886476005719954]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([0.085523409485441348, -0.97962287684653071, 0.37828950222006452]))
      res=generalTensorProduct(arg0,arg1,offset=1)
      ref=Data(numarray.array([0.64459015985871049, 0.98743434735483293]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([-0.3829012790350228, 0.024888702897812309]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_constData_rank3_taggedData_rank2_offset2(self):
      arg0=Data(numarray.array([[[-0.2894743100965762, -0.97242719173104919, -0.40898761800222139], [0.82518610871480313, 0.54244201500704547, -0.86770021963455646]], [[0.65552207117426065, -0.70005192101807934, 0.022770333305628387], [-0.44920943323240659, 0.84388660304422869, -0.38732678558906963]]]),self.functionspace)
      arg1=Data(numarray.array([[-0.32155056666816528, 0.30219908433244003, 0.63007601138494529], [-0.99598495984198587, 0.22285467486031774, -0.55823014187431474]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[-0.11783103548958485, 0.19769579367144563, 0.055801384517148778], [0.035319442731455819, -0.56875955308706816, -0.26408594121720363]]))
      res=generalTensorProduct(arg0,arg1,offset=2)
      ref=Data(numarray.array([-0.67509006328486287, 0.44369589815084198]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([-0.23118431841049114, -0.60791438376941664]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_constData_rank4_taggedData_rank3_offset3(self):
      arg0=Data(numarray.array([[[[0.877475286342567, -0.0011241207497745265, 0.28175846235967339], [0.062524000960885395, -0.70863458265619084, -0.53111920871179397], [0.77579232573571932, -0.96327290512293096, 0.20043580994267285], [-0.76867438030735857, -0.90591882225177423, -0.61679356003614139]], [[0.13384573350357676, -0.48532040540639598, 0.75010768532899452], [0.40492339713890613, 0.6499520489047661, 0.56923385297684681], [-0.58808969462760463, -0.39194716429584342, -0.8797516368732059], [-0.31201142959879302, 0.43327838137972186, 0.28399126683402764]]], [[[0.1395429002260089, 0.76773167956599853, 0.62022888972464529], [-0.30016076624922361, -0.21217326185065333, 0.30431543051561438], [-0.51866218705414058, -0.52659851767215438, 0.060161345835767932], [-0.65537823020235897, 0.8174308209592176, 0.2708619816044171]], [[-0.67072430488564216, 0.74355381068272219, 0.86171821994894748], [-0.70080565637904058, -0.73806729850579922, 0.21958474765495573], [-0.14005923890940197, 0.58106664181398626, -0.93003086411557745], [0.34049044207967571, 0.35819834550353002, 0.28805219356926703]]]]),self.functionspace)
      arg1=Data(numarray.array([[[-0.80996286058405431, -0.70067762020599855, -0.60724205980824308], [0.75374696827685939, 0.46963218766467674, -0.17166255923344287], [0.022497855928525379, 0.78224985572029948, 0.2748954723959709], [-0.84903599375344863, 0.44958564738248663, 0.40362939408937004]], [[-0.80382654082766858, -0.53733389040097523, 0.51560949822743862], [-0.30658339251209465, -0.65718322322350819, 0.39955870663994864], [-0.11236849058309728, -0.35147032307883608, -0.019155909317917441], [-0.22770559741920793, 0.91531714552683963, 0.8996377291181894]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[-0.081222499284025362, 0.82470447347811593, 0.64874558009183536], [0.14988527739336366, 0.13887609718313176, 0.23940810610809948], [0.96342580837879011, -0.14854778201385299, 0.86091059322104213], [0.03826222200248619, -0.99573815310993385, 0.41263456587909197]], [[0.043851000878251778, 0.2979981275821868, -0.086392852929235264], [-0.22976560705604276, 0.62912383594357935, 0.19354375013517067], [0.45651537433803391, 0.72139624086056631, -0.046302708818167559], [0.36938804072535869, -0.54729006203016062, 0.70523790755005322]]]))
      res=generalTensorProduct(arg0,arg1,offset=3)
      ref=Data(numarray.array([-0.60017571586492191, 0.93085567692808036]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([1.1354887631966599, 0.31374541346142559]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_constData_rank1_taggedData_rank1_offset0(self):
      arg0=Data(numarray.array([-0.66783426138074486, 0.79346716980885423]),self.functionspace)
      arg1=Data(numarray.array([0.47256305561442535, -0.95148418425022352]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([-0.16546126462732857, 0.18206674634983533]))
      res=generalTensorProduct(arg0,arg1,offset=0)
      ref=Data(numarray.array([[-0.31559379920208763, 0.63543373740420861], [0.37496327029460225, -0.75497146279491123]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[0.11050070144951595, -0.1215904110705377], [-0.13128808135684028, 0.14446398594251039]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_constData_rank2_taggedData_rank2_offset1(self):
      arg0=Data(numarray.array([[0.33591746630433605, -0.5188690402104803, 0.52171480110956803], [-0.052364700320806978, 0.46271674433042231, 0.57270845205352283]]),self.functionspace)
      arg1=Data(numarray.array([[-0.0027128209064872788, 0.19193038529318285], [0.4034288909883692, 0.20823357454313585], [0.99720808998149879, 0.65681681505608602]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[-0.10569837548709859, 0.19163327489852278], [0.39870117828734619, -0.24882651305588555], [0.32744380163143094, 0.012652841147333671]]))
      res=generalTensorProduct(arg0,arg1,offset=1)
      ref=Data(numarray.array([[0.31002017494379153, 0.29909786780411241], [0.75792486064931763, 0.46246732599804763]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[-0.071547350352150596, 0.20008251267439414], [0.37755040770145976, -0.11792462396829806]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_constData_rank3_taggedData_rank3_offset2(self):
      arg0=Data(numarray.array([[[-0.96639794650556698, 0.65432342912824226, -0.85594621049492692], [-0.72303540893056883, -0.27193676647981713, -0.71929869264879942]], [[-0.2435532946169614, -0.41582327218556392, 0.0031558445782764455], [-0.82550543579652902, -0.95559183599640507, -0.16430112930312291]]]),self.functionspace)
      arg1=Data(numarray.array([[[-0.4009446144930835, -0.22735130241671042], [-0.13421075999567877, 0.34987774951373196], [-0.16459269856248304, -0.8392898937784532]], [[0.3583265912981628, -0.54247269964967271], [-0.3344736063036915, 0.56206237216867572], [0.49315075555050902, -0.17769621217886833]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[-0.2115882695773359, 0.91517614567656813], [-0.66110241513619838, 0.84334404025967213], [0.65768716816439343, 0.51260331720010721]], [[-0.33436084091118978, -0.25215604831257443], [0.43769524895035183, 0.14409998118940237], [0.54571443329961999, 0.93173662989898509]]]))
      res=generalTensorProduct(arg0,arg1,offset=2)
      ref=Data(numarray.array([[-0.082312532233150326, 1.5342302440009781], [0.09573438280662197, -0.15285618388881864]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[-1.060843551130672, -1.2984307215674891], [0.096607535623602581, -0.65458850498027388]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_constData_rank4_taggedData_rank4_offset3(self):
      arg0=Data(numarray.array([[[[-0.20464072097603214, 0.37910050363058923, -0.36356717521535087], [-0.95078551444877335, -0.41589697179670981, -0.41650604786276846], [-0.49134533939710523, -0.20151486310078526, -0.63287635830390898], [-0.7202436520637745, -0.46757729748788535, -0.37052152122269266]], [[-0.12418472749835874, 0.61849657173467643, -0.85455002009900483], [-0.10044655998976526, -0.94815515970816966, 0.54022978055176529], [-0.6732428411274074, -0.38789022696998976, 0.32871844678402673], [0.67453376059209535, 0.14593423770486313, -0.46340862826359785]]], [[[-0.98919896230828952, -0.21511096636238602, 0.13780483447396352], [0.17716131082869424, -0.39719002977309703, 0.69408138058136637], [0.6674781834496335, 0.59581908420498353, -0.23089771679337523], [-0.25456949850469202, 0.7963130123647888, -0.70749773446909492]], [[-0.59624274487327655, -0.50331439547098622, 0.20694367800352587], [0.65338178741785224, 0.40572354968055713, -0.82573091956151035], [-0.66050777127006088, 0.41255881109750225, 0.36505481212979607], [0.044083953765034156, 0.82435578279305721, -0.99930998677708693]]]]),self.functionspace)
      arg1=Data(numarray.array([[[[0.47940338277706629, -0.20306353640611885], [-0.15206474816443905, -0.9817147235626229], [-0.10562623149337713, 0.0092807771510958759]], [[0.11275307743018703, -0.53539405909730897], [0.72948912993130999, -0.19040640957015498], [0.45846256553388809, 0.95447254041141427]], [[0.21941173458868501, -0.32833938596621159], [0.64605542873030131, -0.76663434262380381], [-0.1557600782260975, 0.90005568318215667]], [[-0.69727973331557802, 0.56912120761330787], [-0.54426095598284818, -0.36416851771121328], [0.587534210067995, -0.07579105336823555]]], [[[0.17033630368242414, -0.89117324241915652], [0.87247099332780409, -0.51104444101283431], [-0.0063399015296825567, 0.25997360854555551]], [[-0.76645421832145955, -0.32120004226368915], [-0.67913112396308728, 0.87041854144061914], [0.98095613000427617, 0.55789458381975177]], [[0.1250516194018112, -0.0187633273513097], [-0.82364553136061502, -0.81514282470050348], [0.42382822762230155, 0.57882096058466681]], [[-0.28489970310194357, 0.42406613538948013], [0.72592907075890967, -0.29245819494543701], [0.94894930525669641, 0.48322462754521589]]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[[0.096982038961196837, -0.43793352758445514], [0.45412866152362752, 0.23470604431715958], [0.38428028463128805, -0.23264127226322118]], [[-0.33245992420649606, -0.59394274368466871], [-0.99376340677420472, 0.63696569133218262], [-0.41467843613111577, -0.11417481927032713]], [[0.96860421086224346, 0.57337355164875126], [0.1037104195417502, 0.58580423662797232], [0.64412996370343123, -0.036676056721024253]], [[0.44440361723126043, 0.16086406055998359], [-0.93605385095640359, -0.29968245433737528], [-0.67764410421257226, -0.56032044485867027]]], [[[0.96847475769428915, 0.56146990857188883], [-0.26506958921034052, -0.48157396909520456], [-0.25608704572275842, -0.34394363871932421]], [[-0.93387825375821998, -0.0018714568541720045], [0.98018389460948896, 0.043062457044829916], [-0.98624921383609854, 0.92586048589033121]], [[-0.56984180599848866, -0.37735070476338084], [0.33495245035893939, -0.42911809467623119], [-0.61990785906219914, -0.14552280948426088]], [[0.31127477767175926, -0.13972369584738176], [0.52789379167405759, 0.97673224600267194], [0.95804389987424243, -0.43046783954487999]]]]))
      res=generalTensorProduct(arg0,arg1,offset=3)
      ref=Data(numarray.array([[1.3040439163565438, -0.9893339612586487], [-3.2702990128883771, -0.5013239800388577]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[-1.1618317014625343, 1.4721552890306451], [-0.027542039184875855, 1.1066789345164625]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_constData_rank1_taggedData_rank2_offset0(self):
      arg0=Data(numarray.array([-0.91385507888486295, 0.46842963998639364]),self.functionspace)
      arg1=Data(numarray.array([[-0.31640200396182694, -0.79314790170437011, 0.92798654893880062, -0.043335203892089558, -0.76765990948076657], [-0.83931028420100251, 0.52009896880253415, -0.73017157886577744, -0.98666682493971392, 0.69220291532130185], [-0.6462368244336345, 0.67605016801477236, -0.86723627209572185, 0.79022904748794698, -0.64002957119087611], [-0.71470916198876511, -0.33537714568463439, -0.58058385784359601, -0.52289953231438835, 0.80660417274955587]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[-0.51799653276233726, -0.34732452450744367, 0.58983408907464563, 0.48940462331789258, -0.18272913668371582], [-0.8793664337521967, 0.4254893142274121, -0.60922283335359784, 0.92231788661338565, 0.9847843629799109], [0.29601821340316969, -0.24511108684593141, -0.79635916432588938, 0.34430837356763089, 0.018631375718176635], [-0.52818825362591371, 0.28168758004102568, -0.25670328399572773, -0.37503497685993348, 0.035865213277915586]]))
      res=generalTensorProduct(arg0,arg1,offset=0)
      ref=Data(numarray.array([[[0.28914557828986409, 0.72482223827941061, -0.84804522088455936, 0.039602096171297126, 0.70152990713529273], [0.76700796597738385, -0.47529508416297572, 0.66727100580387, 0.90167048913835957, -0.63257314978528045], [0.59056680417110241, -0.6178118796212646, 0.79252827184785035, -0.72215482852920787, 0.58489427426928309], [0.65314059760897725, 0.30648610792581171, 0.53056950720893747, 0.47785439335202329, -0.73711931991690505]], [[-0.14821207680681209, -0.37153398605134164, 0.43469640503161822, -0.020299493957908477, -0.35959465503006299], [-0.39315781426515334, 0.24362977271346564, -0.34203400981639276, -0.46218398559302826, 0.32424836242148952], [-0.30271648301539766, 0.31668193681590073, -0.40623917472094112, 0.37016670822156977, -0.29980882161358802], [-0.33479095544537435, -0.15710059561271758, -0.2719626875115872, -0.24494163967108254, 0.37783730225259732]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[0.4733737623096112, 0.31740428074239746, -0.53902287800029158, -0.44724490064878936, 0.16698794961866004], [0.80361348168531432, -0.38883557081795794, 0.55674138043281185, -0.84286488502799561, -0.89995019171558599], [-0.27051774776090981, 0.22399601160514315, 0.72775686693571917, -0.31464795588736616, -0.017026377326667827], [0.48268751818336736, -0.25742162567927768, 0.23458959984591915, 0.34272761836291726, -0.032775607309311984]], [[-0.2426449293560618, -0.16269710197346718, 0.27629576999693867, 0.22925163150847702, -0.085595743711777514], [-0.41192130197866039, 0.19931180628160416, -0.28537803249931654, 0.43204103557931967, 0.46130218461490968], [0.13866370513386223, -0.11481729816791332, -0.37303823664504165, 0.16128424747458606, 0.0087274886201167169], [-0.24741903349102873, 0.13195081170725609, -0.12024742690544371, -0.17567749919280412, 0.016800328943809222]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2, 4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_constData_rank2_taggedData_rank3_offset1(self):
      arg0=Data(numarray.array([[0.48373557234139475, 0.40581940948080475, -0.2701375546860143], [0.93401929629849101, 0.52303603588330172, -0.39130846028158817]]),self.functionspace)
      arg1=Data(numarray.array([[[0.48577208537024097, 0.59195009362880824, -0.41017828313231397, 0.17799563331738355, -0.79246289997966013], [-0.892441674011208, 0.043434825071949179, 0.59147359064992888, 0.20982735250273477, 0.632700015213566], [-0.76772137167064081, -0.72285763052278496, -0.89096166146697975, -0.85195951043717888, -0.2456755624035607], [0.21020710621204297, 0.5050246116509236, -0.82260492459747581, -0.69205171806663968, -0.46437085996150795]], [[-0.58833573697048314, 0.95185631020344608, 0.63473048066798055, -0.88020447417597425, 0.39866545910359341], [0.51720525563343189, -0.92351965167879646, -0.70470272372181264, -0.12736945071433081, 0.10328350167472067], [0.54643263898002403, -0.56276708995688463, -0.90085365074571455, 0.08356625364267467, 0.55418559248178201], [0.70015043985701775, -0.81368924422510402, -0.053316880171113024, 0.30834892419323712, 0.50512344603114334]], [[0.52006529710762073, -0.45097298420987797, -0.77495222510645867, -0.10163862140712454, -0.39721080728363312], [0.97700460572278947, 0.783054816665256, -0.61676418887518225, 0.52323071414391786, 0.72686651296963256], [-0.19528639065501263, 0.058274611162821621, 0.40474867024811068, 0.35319248641782153, 0.055620977502709223], [0.75013870007770023, 0.74629605698343515, 0.46312500658996836, 0.62276234051954726, 0.16766749681159743]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[-0.58922161980707655, -0.53957957781175092, 0.89570813428191132, -0.76443279857877466, 0.25084619121682139], [0.79687758553381349, 0.98309092078317373, -0.10993423519491441, -0.21265040921538025, 0.61854300279084629], [-0.10014299872238874, -0.69091195576491327, -0.53455460115673481, -0.73446652420222081, -0.090524296098382084], [0.84162253427179934, -0.58869740324321729, -0.53191868134592535, -0.48837900907604537, -0.42979318386428411]], [[-0.52070721523394181, 0.076348701986234335, -0.48043868055639827, 0.073199964021263053, -0.57413893068013833], [-0.14018306885655885, -0.56323683734634389, -0.96719395835177902, -0.56845729181812876, -0.77050026134246252], [-0.003456339293569366, -0.31158868536551965, 0.21644118040111127, 0.79061513423914942, -0.28192286631040764], [-0.40671663381498324, 0.51709967636992937, 0.54582298041321398, -0.76798132861483892, -0.25892324266095201]], [[0.39929748612323523, -0.95742905467992756, -0.92232620369739338, -0.96362444429656446, -0.57809198956424268], [0.28472730268042601, -0.38010852378296689, -0.83637715979280136, 0.93089404384223084, -0.32276372233253459], [0.21437416425403621, -0.58331661650874578, 0.44620351109413647, -0.70289476500280168, -0.2170221926583713], [0.47586367994295964, -0.74952749099443805, -0.56303918575235334, 0.24890635210707468, -0.95381708484218852]]]))
      res=generalTensorProduct(arg0,arg1,offset=1)
      ref=Data(numarray.array([[[-0.14426199124747729, 0.7944538222403249, 0.26851182137987106, -0.24364483172682436, -0.11425475711270983], [-0.48573948764452402, -0.56530374308153752, 0.16674594249820732, -0.09153230647444914, 0.15162001124172172], [-0.096866978216904112, -0.59379591870362058, -0.90591156186146304, -0.47362086830161343, 0.091031946242318529], [0.18317865876987621, -0.28751511093418347, -0.54466774563156806, -0.37786755141716, -0.064937092727888002]], [[-0.057506240951629178, 1.2272175051940826, 0.25211784509291518, -0.2543552503164756, -0.37622728940315842], [-0.94535092565628087, -0.74888106755121786, 0.42520787293193602, -0.075380621589169694, 0.36054600024551786], [-0.35484539711059937, -0.99231379160914868, -1.4617358854251703, -0.89024566841764119, 0.038628360455458394], [0.26900578428084221, -0.24591802532517221, -0.97744025570119242, -0.72880423232191516, -0.23514328901554496]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[-0.60420579858553591, 0.028607492874762025, 0.48746949064221723, -0.079766220145969235, 0.044510860513831033], [0.25167348740321738, 0.34966519562898934, -0.21974830047198521, -0.58502701056643991, 0.073717895102257694], [-0.10775589289348322, -0.30309170226399607, -0.29128336929985571, 0.15543765547242014, -0.099573748871848722], [0.11352060328688748, 0.12755073360059049, 0.11629560066393752, -0.61514698204970308, -0.055320514305530977]], [[-0.9789414848970488, -0.089394525917393941, 0.94623598495379224, -0.29863436800016191, 0.16021211898777868], [0.55956204263163545, 0.77237240853967604, -0.28127653228925159, -0.86020994903565162, 0.30103187307815038], [-0.1792297073370816, -0.58004048248472628, -0.56068098430511926, 0.0025629678648673715, -0.14708463770349922], [0.38715474742869938, 0.01390347901484279, 0.0089847723855464856, -0.95523648953258511, -0.16362461872637152]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2, 4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_constData_rank3_taggedData_rank4_offset2(self):
      arg0=Data(numarray.array([[[-0.41481238210399418, 0.99773884987115258, 0.9159195810682581], [0.064953017388735379, 0.47792781432108167, -0.42183821197846116]], [[-0.61839058052277385, -0.92011139891242166, 0.63035709839884246], [0.25509013546720616, 0.6649468754789194, -0.75539893963423088]]]),self.functionspace)
      arg1=Data(numarray.array([[[[0.65482798383481211, -0.10331799400442576, -0.74356161451890412, 0.67718282402668262, 0.0068763194261545202], [-0.60181349185193134, -0.88914902325259493, -0.53466990820728233, 0.83412113832350321, -0.41738904989989378], [-0.13200167039582844, 0.18668861984658003, -0.52456078363366987, -0.79244616009715441, 0.3799607481895666], [0.26560759910454035, -0.86197221340278363, -0.91860218436377528, 0.90943969994788887, -0.94909498885829402]], [[0.43003366315468128, 0.68133548562254109, 0.47230111782791528, -0.56198938733832482, -0.83220033972170881], [-0.26382934925364143, 0.24281785191101735, 0.74404924790543459, 0.27044349366107823, 0.38300515527554424], [0.81281327136663362, -0.66503742745636218, 0.66439425228279325, 0.29589222979768692, -0.14224061155773815], [-0.67827911595231338, 0.76832132913835505, 0.98129651976788423, 0.18704102483917073, -0.984347958338325]], [[0.47332614953274477, 0.77324686954622979, -0.37989834304937897, 0.95432679709692136, 0.59423935314258136], [0.94709177067127048, 0.16594883747197287, 0.082639075112675986, 0.12904137060193621, 0.39667454733977059], [-0.22968073147121859, -0.51034223097659681, -0.9471242313628141, -0.071901454495097328, 0.17285522938352393], [-0.2001471277129736, -0.52656996101821729, -0.25910943635638217, -0.23414763313424714, 0.6533902055613181]]], [[[-0.56629645182455923, 0.45653778211250429, 0.66178256357951515, -0.96187867297253282, -0.54179166323317762], [0.86228329576861529, 0.35766154329838074, -0.22712792465328135, 0.17773799600600415, -0.81899074876504718], [-0.13097689670193158, -0.5639522136966566, -0.68722266331555004, 0.20964131665019825, -0.8682086057035352], [0.55118088345775607, 0.79082222872169239, 0.20070980370527614, 0.034610475433977772, -0.8821592153656399]], [[-0.48319024531924581, 0.70764423011107924, -0.29093224156535125, 0.57548256772711026, -0.28410645482295793], [-0.086874530091161306, 0.12371431839628211, 0.72041432208259959, -0.21862162381438011, 0.095672175054245523], [-0.82091538338543368, -0.99481638018875529, 0.02288506486288111, -0.26091726373707402, -0.6972072168861827], [0.73694153955140673, -0.22408107517490272, 0.80049846977156425, 0.50472464316711418, 0.6485004150658451]], [[0.79648653965217697, 0.16935634156018797, 0.23270526000635217, 0.97190268424835624, -0.63197483902037788], [0.096573926026477075, -0.3142657497580259, -0.95312248086691742, -0.93030134803357334, -0.69026635732380348], [0.37974108295469788, 0.91255236039365051, 0.80445592890000595, -0.68837616736408269, 0.20426463056061839], [-0.99506138005611766, 0.93500240207752916, 0.31244475230443047, -0.25358570884695175, 0.35225097878931733]]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[[-0.70440580866195601, -0.43432399793083798, 0.38142495587831537, -0.44585575714281545, 0.77065728010483836], [-0.29954108056229534, 0.39383424768978648, -0.65039513610470046, 0.063280615649639715, 0.61245826503533585], [-0.65661216708984127, -0.95717243880529224, -0.9645803152166128, 0.83403612871473243, -0.60715595691196045], [-0.22178147235915802, 0.42366944844551013, 0.87729200920856232, 0.58987989944367292, -0.35380670676996573]], [[-0.42081125749386028, 0.15085950597796538, 0.5809920830923847, 0.41615099220464113, 0.98701465237702002], [-0.27619395094410626, -0.98566238863672884, 0.72969901669072024, 0.9736931196212284, 0.52257065247816659], [0.6427415780918877, -0.43035994550715029, 0.27625165978923905, 0.35511316880586974, 0.031472017151763731], [0.38350669699330231, 0.26630928355853523, 0.65814631501962073, 0.84826270132702652, -0.30944203361737044]], [[-0.30110733698382686, 0.1066889532433235, 0.62277922887381076, 0.85325562193763038, -0.46200517021301568], [-0.81027600004030642, -0.6253937914313672, 0.4477735875579687, 0.47550682139521938, -0.095273453380010364], [0.54919641466516267, 0.085246545423976583, -0.15463597090546322, -0.14480212474138843, 0.83890390797211878], [0.32980602304374029, -0.89266029944358372, 0.58914124882863717, -0.044705049781017081, -0.43019334474371362]]], [[[-0.53593082491997501, 0.56747449492563851, -0.70173724338084176, 0.48393247434819742, 0.56473692890931915], [-0.4007231268772764, 0.092330929409160323, -0.83575912531823127, 0.22824785220970067, -0.72807663465741124], [0.13831166089715818, -0.23748809299529183, -0.95363824713660783, 0.75486944619428531, 0.54080966859084745], [0.044022225990509423, 0.97528793078030995, 0.25223852153178772, 0.31680228623992535, -0.94848695526247684]], [[-0.63729183352144325, -0.15089389353279836, -0.81712012812938739, 0.57088556804804913, -0.59300015367968739], [-0.10229546091219133, 0.11629201435209802, 0.041897977936742103, -0.80558908009119334, -0.5995580083473997], [-0.15806879531258211, 0.43348162694717596, 0.79834964413634513, 0.98638069410835261, 0.1645942136186842], [0.96445320162412584, -0.81854398329566558, -0.3536473767506132, -0.57313352563704556, -0.99326541354501985]], [[0.94353209373046365, -0.64483229932738007, 0.43521047667784196, -0.21411420324857633, 0.62521147215577622], [-0.27819316040679753, -0.20394659003356019, 0.93619661127551734, -0.049497770897608317, -0.56693271464717765], [-0.66670947718861862, -0.36397632346469977, 0.45927379771336918, 0.68717684975062898, 0.019268117912187188], [0.94584254221100306, 0.25682965567539306, -0.20821324902151628, -0.76412882236033686, -0.60962705006938855]]]]))
      res=generalTensorProduct(arg0,arg1,offset=2)
      ref=Data(numarray.array([[[-0.012741953653380766, 1.7272998062288618, 0.23749160067366817, -0.16495935205605772, -0.19327777707633736], [0.82761636981595021, 0.97802163056732005, 1.771462167616966, 0.34151564363939141, 1.2023084535239539], [0.094327287502053853, -2.1054371437216313, -0.36005339109077117, 0.73738429244260195, -0.61698403444544336], [-0.16248078513876263, 0.1916970183126524, 1.3866178706605721, -0.054647011003182352, 0.11407159674090825]], [[-1.569671404218739, 0.38348048413229008, -0.41465534885461358, 0.10302134963244214, 1.2863194770607314], [1.3011553807556318, 0.8419243300607433, 0.83920563901605982, -0.080592556631200685, 0.53187559154127861], [-1.6771630909710307, -1.3199355898794805, -1.6517312852708119, 0.57244377474252084, -0.83450491533179871], [1.7159750378813059, -1.1594037126797687, -0.15071103523069793, -0.3460819047518704, 1.8445885273254345]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[-1.1408613031859238, 0.66515755971270474, 0.37218147107280569, 1.776266551662977, -0.26852288932962881], [-0.85102925720309208, -1.5720025743039185, 0.97878123757051028, 1.0314598886240829, 0.085388608274103522], [1.6313606697086283, 0.39102560231055417, 0.65998533911022628, 0.10628695375139297, 1.1572885231021393], [0.84151888634981509, -1.1638388680176208, 0.76755060501298744, 0.629708482630841, -0.83515371703905594]], [[-0.64023301880793682, 0.72855281503355995, -1.4289789877337999, 1.0954600841924893, -2.3984977366771951], [-0.031495388458374823, 0.52409615321267677, -0.87948480427880771, -1.0753587773859536, -1.0757569539662959], [0.59464500590058567, 1.5442299890108704, 0.18549064998394893, -0.60442296130201523, 1.1081573000501512], [-0.069774417191147742, -1.5592329431415479, -0.79023676534093568, -0.89652060651902155, -0.20957032328688746]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2, 4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_constData_rank1_taggedData_rank3_offset0(self):
      arg0=Data(numarray.array([-0.37852904203796855, 0.41496979212984408]),self.functionspace)
      arg1=Data(numarray.array([[[0.12243172645596911, -0.4835688578554973], [-0.22100628921626786, 0.079583337472789006]], [[0.37552975656181631, -0.91235172020842548], [-0.13609390627194062, 0.65309257234093843]], [[0.96767861234450159, -0.82190160273060275], [-0.2667050602758263, -0.60386658356611411]], [[-0.27851266147427745, -0.5549642000004722], [0.61509408120688547, -0.90750197811589373]], [[-0.93848073843569435, 0.81035303808547487], [0.49669195647458264, 0.85630835713040554]], [[-0.3943675484614575, 0.28804306996967743], [-0.99687669117066435, 0.81226861996663668]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[0.42379445149120509, -0.57607066100565252], [-0.6644763075495832, -0.99133591977542945]], [[0.95448731654052144, 0.37506171833528246], [-0.21775682044497713, 0.20118778077611199]], [[-0.79850605679503461, 0.21656385342684747], [0.83506707280605563, -0.10344408462571075]], [[-0.9763496982409976, -0.30444327106733349], [0.62079677327037741, -0.60352046326586417]], [[0.47868341231643807, 0.577006954180175], [-0.41037083485379244, -0.43946694285869659]], [[0.49920014899425702, -0.29448914484264943], [-0.12401953407423738, 0.049847012612411756]]]))
      res=generalTensorProduct(arg0,arg1,offset=0)
      ref=Data(numarray.array([[[[-0.046343964130432597, 0.18304485652343597], [0.083657298941400088, -0.030124604495759186]], [[-0.14214891900809587, 0.345351622652188], [0.051515495968322764, -0.24721450577032811]], [[-0.36629445813139494, 0.31111362633108608], [0.10095561097288719, 0.22858103939602206]], [[0.10542513094330327, 0.21007006699154632], [-0.2328309733224668, 0.34351585442377075]], [[0.35524221489114871, -0.30674215921905224], [-0.18801233047228813, -0.32413758211367905]], [[0.14927957032997766, -0.10903266734129755], [0.37734677893881141, -0.30746726259347373]]], [[[0.050805468077531439, -0.20066646842476182], [-0.091710933895462879, 0.033024681008082486]], [[0.15583350501902787, -0.37859840368419601], [-0.056474859995805683, 0.27101368898586436]], [[0.40155739261309381, -0.34106433723630392], [-0.11067454342263718, -0.2505863906565895]], [[-0.11557434123751055, -0.23029337871370117], [0.2552454630187187, -0.37658590721617474]], [[-0.38944115694652265, 0.33627203176611714], [0.20611215793082313, 0.35534210095745267]], [[-0.16365061960780722, 0.11952917286975918], [-0.41367371331417735, 0.33706694038115054]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[-0.16041850774397221, 0.21805947545664897], [0.25152358015367032, 0.37524943605042177]], [[-0.36130116956747482, -0.14197175294656886], [0.082427280640271119, -0.076155417926926497]], [[0.30225773274014017, -0.081975707977715612], [-0.31609713910672677, 0.039156590257864846]], [[0.36957671596922448, 0.11524061975202333], [-0.23498960788629791, 0.22845002281033855]], [[-0.18119557350360721, -0.21841388961506766], [0.15533727899752744, 0.16635100088765709]], [[-0.18896175418400729, 0.11147269388786865], [0.046944995427116276, -0.01886854193263076]]], [[[0.17586189544108666, -0.23905192244961751], [-0.27573759521905689, -0.41137446056005778]], [[0.39608340333539288, 0.15563928329345431], [-0.090362502514907947, 0.083486851567727838]], [[-0.331355892402657, 0.089867457239376919], [0.34652760961680629, -0.04292617029419319]], [[-0.40515563132510279, -0.12633476091014115], [0.25761190795888644, -0.25044276118754288]], [[0.19863915610495675, 0.2394404558336217], [-0.17029150003542884, -0.18236550592601139]], [[0.20715298205933402, -0.12220409921984977], [-0.051464360274826398, 0.020685004462066222]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2, 6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_constData_rank2_taggedData_rank4_offset1(self):
      arg0=Data(numarray.array([[-0.90676789347500697, -0.44370684938196514, 0.20069519432798666], [-0.96911277876736968, -0.46931050080877856, -0.76067414291505653]]),self.functionspace)
      arg1=Data(numarray.array([[[[-0.54439006736510609, -0.71839825179571948], [-0.92128833634997687, 0.8994569742057188]], [[-0.76036425714539702, -0.62951137343131469], [-0.84924993584375752, -0.27017315068167314]], [[-0.54804988120544218, 0.67091052918388527], [0.87962256914843473, -0.70440969697992362]], [[0.31147144861537912, -0.91205010195990388], [-0.96230391346882627, 0.28647336083209662]], [[-0.21469253143147915, -0.69126131524449197], [0.8264967641556511, -0.72513970306497799]], [[0.58936243768170637, 0.25933315254960831], [0.51858120579558586, -0.97760546212177823]]], [[[0.64780397257678479, 0.7496533190488095], [0.05595518732477256, 0.97670831795466895]], [[0.24982369956918049, 0.81561080304790168], [0.90159650314170214, -0.20326733104134775]], [[0.71454126411921193, -0.82452189611384052], [0.34106129576893296, 0.18765715942841887]], [[-0.41435437516251139, 0.88735092666161908], [0.90381846689479728, 0.60120461001719594]], [[0.42077484283556243, -0.71709751150518319], [-0.76285848895470143, -0.84458306027789942]], [[0.020988449196071013, 0.19620847833144284], [0.82828592775537335, 0.33422701918619113]]], [[[-0.55039454082569694, -0.92316381038128315], [-0.76111511073025828, 0.98820239084046513]], [[0.66525110817429312, 0.086733063088390905], [0.28338640492462819, 0.714288644562181]], [[-0.84878848860138834, 0.035602076485214296], [-0.41978918981234625, 0.61775656584916949]], [[0.25029590195886331, 0.53692470376790857], [0.15626274517970451, -0.10998168588596191]], [[0.52512622650230423, 0.37088679394886293], [0.66594438027324299, -0.30782362337436897]], [[-0.78006050079291689, -0.53544657240487314], [0.20154995275063459, 0.073145558201775263]]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[[-0.62998701785511524, 0.56887795194588198], [-0.87647731736755707, 0.72069713446052686]], [[0.55837458493614411, -0.029441266894175477], [-0.92112022587378584, -0.14296590494631034]], [[-0.26148693285624347, -0.065321654115454653], [-0.21400915327468972, 0.74502521562446922]], [[0.13432711907583972, 0.36474586026838351], [0.52622955916382241, 0.059296025222255633]], [[0.86282232133794423, 0.75922046282495481], [-0.12670261331518073, -0.14808394325845886]], [[-0.26454468103945072, 0.78733596057246236], [0.90583269559407786, 0.96299633661727979]]], [[[-0.89830531075722364, -0.27216097723459232], [-0.24245324398974621, -0.43384061534570817]], [[0.50120066681209963, 0.012318628061694703], [-0.6325072621041341, 0.13278247372925089]], [[-0.32039649943496351, -0.11525237895959561], [0.63375477146953174, 0.12697575017216178]], [[0.21036974882178772, 0.98058511259916803], [-0.35117936216892587, -0.79697863178272743]], [[-0.88537709507353579, -0.81082946275033296], [-0.93683083583364479, -0.67928299387910873]], [[0.039952777006626583, -0.73758468529010845], [-0.84158977397872037, 0.16342791196252859]]], [[[-0.88102308699695109, 0.89780599568105512], [0.56406414487141721, -0.31973948455503098]], [[0.29584601326477222, -0.026087850533856649], [0.38592380748331356, -0.74381368742564358]], [[0.61503377638287837, 0.2945805357164899], [0.43924661069005766, 0.49108063027183446]], [[0.1462324267694739, -0.47156013574140521], [-0.23777696144869065, 0.20498459905087452]], [[0.90530786344404812, -0.33853347017759283], [0.93432794835007815, -0.64962506618086469]], [[-0.55046494322645789, -0.58276945210012787], [0.62722431213717122, -0.85066345425404921]]]]))
      res=generalTensorProduct(arg0,arg1,offset=1)
      ref=Data(numarray.array([[[[0.095738835596132055, 0.13351961681201557], [0.65781483910673344, -1.0506434054316398]], [[0.71213810952058076, 0.22633551121377887], [0.42690232114228488, 0.47852974408244486]], [[0.0095594125809307373, -0.23536894882847773], [-1.0331944100977404, 0.67945210413038926]], [[-0.048347250324452744, 0.54105227349485019], [0.50291703014982003, -0.54859624510447158]], [[0.11336592473178239, 1.0194298413798741], [-0.27730335632838299, 0.97050196782874343]], [[-0.70028204857035914, -0.4296755760891654], [-0.79729882003266206, 0.75284238989392938]]], [[[0.64222505972933952, 1.0466155916955908], [1.4455325272142927, -2.0817547241767804]], [[0.11359451602507664, 0.1613172035010646], [0.18432554809685781, -0.18611715676176432]], [[0.84143188084883513, -0.29031276226507802], [-0.69319433761222871, 0.12467151710172492]], [[-0.29778372245223073, 0.059011562052152577], [0.38954449250274337, -0.4761164067268801]], [[-0.38886271876958933, 0.72432757221863819], [-0.94951774694901103, 1.3332673225047831]], [[0.01236308357630489, 0.063894591218370766], [-1.0446007944959905, 0.73491376138371967]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[0.79301912066396341, -0.21489522362482499], [1.0155446189295507, -0.52517714786637082]], [[-0.66932744180853199, 0.015994829684412307], [1.1933431048708936, -0.078559433146341451]], [[0.50270439986403193, 0.16949074651337565], [0.0010099800600776726, -0.63334743289124829]], [[-0.18579787194840378, -0.86047201931148076], [-0.36906807397598179, 0.34099656979159737]], [[-0.20784075981223044, -0.39660819403970204], [0.71808324950539237, 0.3053036534412934]], [[0.11167763359491173, -0.50361862200060004], [-0.32207995292884367, -1.1164523107557991]]], [[[1.7022840663213805, -1.1065166945318763], [0.53412221197100407, -0.2516132877976387]], [[-1.0013890941228407, 0.042594999810672655], [0.89594942013076762, 0.64203371533799647]], [[-0.064064520994983498, -0.10668659510315895], [-0.42415230309163554, -1.1551568474036693]], [[-0.34014208570523086, -0.45497516238013491], [-0.16429284166264463, 0.16063942084903624]], [[-1.1092996526203072, -0.097725813916068549], [-0.14826544090762206, 0.95645767422359174]], [[0.65634782205815934, 0.026436550961872807], [-0.96000043847444227, -0.3628727969573764]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2, 6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_constData_rank2_taggedData_rank0_offset0(self):
      arg0=Data(numarray.array([[0.24870805835700072, 0.081758170316929668, -0.18602519373334214, 0.23683157813059719, -0.59600118149457848], [0.67597359786843914, -0.055221654129998576, -0.65302894327452488, -0.30467500917702406, -0.45653971140485794], [0.84258228192155338, 0.79117496655379083, 0.24677770063396465, -0.17510047031292775, 0.19285200217953768], [-0.27463660308249294, -0.52472724496884537, -0.27769998320051181, 0.92090148616781753, 0.21862529524195273]]),self.functionspace)
      arg1=Data(0.345371783352,self.functionspace)
      arg1.setTaggedValue(1,0.978273349627)
      res=generalTensorProduct(arg0,arg1,offset=0)
      ref=Data(numarray.array([[0.085896745648779083, 0.028236965085957331, -0.064247852908091999, 0.081794944493040922, -0.20584199093270186], [0.23346220699471351, -0.019072001166526822, -0.22553777071921691, -0.10522615126226613, -0.15767593429891871], [0.29100414532807317, 0.27324950914216861, 0.085230054559466736, -0.060474761697755744, 0.066605639915757284], [-0.094851733380345304, -0.18122598436828974, -0.095909738434790642, 0.31805338856931759, 0.075507008103578174]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[0.24330446532813765, 0.079981839135319907, -0.18198348938853359, 0.23168602123527471, -0.58305207220236799], [0.66128695584619213, -0.054021872557698955, -0.6388408117405685, -0.29805544177525306, -0.44662063271378744], [0.82427579127178352, 0.77398538467162947, 0.24141604781244475, -0.17129612361429594, 0.1886619741544554], [-0.26866966962769917, -0.5133266795762349, -0.27166649275693433, 0.90089338154989984, 0.21387529988954324]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_constData_rank3_taggedData_rank1_offset1(self):
      arg0=Data(numarray.array([[[-0.23278108373856576, 0.65862132421972719, 0.10340510142998216], [-0.14633461960081595, 0.62388290215052478, 0.10829666393258819], [0.87140512117461655, -0.43682099360315441, -0.4758266506273654], [-0.046246540054774021, -0.45579169189402213, 0.36422582951431526], [-0.2243596257915923, 0.56884725350787657, -0.87156404050156344]], [[-0.70189767512955581, 0.72413139278009275, -0.54256069388651196], [-0.39497705112217729, 0.23443894276614818, 0.13670737478159567], [-0.39674381164337991, -0.035785619632231702, -0.18528924542416148], [-0.88073984983720432, 0.069639687732127031, -0.018949567123409006], [-0.37629339406544826, 0.50245817092966227, -0.42468554099304812]], [[0.17641609233996824, 0.72558124680867442, 0.82138264873435629], [-0.22505787618236628, -0.58815003904544683, -0.71453644154806129], [-0.4570243163580916, 0.51442699926378599, -0.84044888716172794], [-0.80401089195229214, 0.62646364742091731, -0.97236009948509672], [-0.26728604240032272, -0.076878212636768417, 0.93249714801241157]], [[-0.18137385261739269, -0.50548471261254169, -0.88014202571674494], [0.89214650525787453, 0.6677166469054332, -0.54072067358761977], [0.35559593661801547, 0.14739100937000793, -0.79197824643134007], [0.80478179203905564, 0.16136468396090131, 0.99831763124255057], [-0.63412014579901976, -0.1526534309947658, -0.64466532339633753]]]),self.functionspace)
      arg1=Data(numarray.array([0.68964770742137715, 0.6456895195654615, -0.023759679336675665]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([0.85715887187925643, -0.76173100068662469, -0.94918400685879978]))
      res=generalTensorProduct(arg0,arg1,offset=1)
      ref=Data(numarray.array([[0.26227107362788538, 0.29934222242232605, 0.33021729519634391, -0.3348476278013206, 0.23327769038223795], [-0.0036070032836183746, -0.12426837285612617, -0.29231744662535097, -0.56198436612200897, 0.07501249072718634], [0.57064937194546095, -0.51799580776440379, 0.036943146051784483, -0.12688029268473211, -0.25612849576874142], [-0.43055835057648306, 1.05925178279647, 0.35922190166219192, 0.63548769632127644, -0.52056918393566176]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[-0.79937312000857341, -0.70345642622128524, 1.5313197700067824, -0.038167302790453606, 0.20165421680615292], [-0.63824121645241216, -0.64689794779359577, -0.13693987376111585, -0.78999405907882392, -0.30217646304340046], [-1.1811243842095167, 0.93332832517516451, 0.014143201915876813, -0.24341319482930457, -1.055657464064951], [1.0649939036468641, 0.76933423792275368, 0.94426299610942321, -0.38067775855644481, 0.1846451566851518]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_constData_rank4_taggedData_rank2_offset2(self):
      arg0=Data(numarray.array([[[[-0.80013086485362184, 0.21562322994679817, 0.47004126926515832], [-0.42420743699753638, 0.024926284330090809, 0.8015902783913551]], [[0.67604938199183651, -0.82882429049959017, -0.53838412797435753], [0.82923074434106447, 0.70995523403687133, 0.65704451835348565]], [[0.93876017687146174, 0.81662335030196309, 0.41754067275278617], [-0.80807508073103262, 0.80725418011010674, -0.6995263918881327]], [[0.42662967919076866, 0.46925849928376251, -0.78368763499213046], [-0.57274122669520189, -0.2351775790268904, -0.89821414477427663]], [[-0.8805237481539443, 0.85776666373585075, -0.90775476155800749], [-0.90746001697201173, -0.39460809915186212, -0.6668322801751172]]], [[[0.333062742014677, -0.62614550668236801, 0.94166237335611047], [0.13972833689251907, 0.84975527936516171, -0.57824623121382124]], [[-0.36521461163112545, 0.43040346267470508, -0.75138726670064893], [0.7833237711132004, -0.091393807806916305, -0.009930011398738392]], [[0.035788998361372837, 0.91691400870333784, 0.73786290168230972], [-0.25038393695110339, -0.44906039009248677, -0.72841605057582215]], [[0.32255667814841638, 0.25779201982397781, -0.94388159411181416], [-0.71419141865588776, -0.048834281599605678, 0.70147978029892677]], [[0.13851517804520341, -0.59002190982703961, 0.3998373024060109], [-0.77255705275597197, -0.36904318592068486, -0.67763926329416502]]], [[[0.012076578338784838, 0.95416395018793421, -0.48467908824277428], [0.89881781938845751, -0.007930716828827844, -0.91491258291291611]], [[0.51742089237686395, 0.75283401377588355, -0.34126257319038689], [0.67183959221319256, -0.89008859446550859, -0.094156404485188583]], [[-0.10705636343792468, -0.31764898504140793, 0.18201482903511068], [0.83102694918592612, 0.32942968738643996, 0.044129236422181695]], [[0.24522726334898892, -0.81409691108494431, -0.24670082014790751], [0.90391916162045005, -0.13980309017192782, -0.027029185539776845]], [[0.39758554958357761, 0.65940095508742913, -0.36564254409242891], [-0.59672775318714044, 0.67235980164419695, 0.43866501374157307]]], [[[0.88721953723479996, 0.87663612656589662, 0.57250554780266905], [0.79020209071984038, 0.40834097987581353, -0.59085876571410623]], [[0.28856397497504283, -0.81996410967520061, -0.71531068691236044], [0.20949048849847052, -0.4753184756145914, 0.95156236022828344]], [[-0.83868320904517302, 0.24249963531045737, -0.26201145335844367], [0.09808012131307442, -0.27808740860091685, -0.48474647736535115]], [[-0.37209144031714292, 0.21918311630495846, -0.3763249855194486], [-0.56034471645078687, 0.88878282347066873, -0.11635706636782683]], [[-0.80840174387970665, -0.4504357990300516, -0.45226791069169003], [0.88855779038273908, -0.40061406122392107, -0.96042140874997628]]]]),self.functionspace)
      arg1=Data(numarray.array([[-0.82213761925641871, -0.13918276970644694, 0.68347363304802311], [0.10185713452525436, 0.13357095912831629, -0.56140878377022196]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[0.47099620783308693, 0.77162404763874881, -0.27159076959313699], [-0.61642391646398909, 0.82756626150629375, 0.90673785883316138]]))
      res=generalTensorProduct(arg0,arg1,offset=2)
      ref=Data(numarray.array([[0.4591685104093321, -0.99799701988527778, -0.18183415223794974, -0.53717620584433035, 0.21332495327002729], [0.90929412858113434, -0.20004710791401797, 0.67072207655410199, -1.4192696126057194, 0.49396933327854164], [0.13013448650985138, -0.76101477352282099, 0.36050238788325728, -0.16834439641270804, -0.88579795376291615], [0.0066067625061939084, -1.1883765286345258, 0.72167001448941881, 0.1451599987644307, 0.99438175615216562]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[0.67081461061348924, 0.4972405765822917, 1.490764572880422, 0.11985602137043261, 0.12186148740166614], [-0.48924528899233588, -0.20333304508540745, -0.3537943633025864, 1.6430803640934215, -0.94225331155783421], [-0.51662363200441508, -0.318828587838068, -0.54458862680399822, -1.143076073279554, 2.1173897814918012], [0.25389906999575551, 0.03780542844933299, -0.86687084120262747, 1.0715109044317899, -2.3556028661486543]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_constData_rank2_taggedData_rank1_offset0(self):
      arg0=Data(numarray.array([[-0.6218422117291611, 0.63997070729232775, 0.98931991054654933, 0.65320968618526165, 0.34153776516110779], [0.16946577485828951, -0.83288997689003974, 0.88637896602081079, -0.54785070950025427, 0.57946201233032224], [0.45091874165793211, -0.74409892493235819, -0.049373812556165797, -0.41068546989464516, 0.24744380499265239], [0.1575580491711579, -0.97980530266842059, -0.64247367728252591, 0.015247459005106823, 0.80901495300603621]]),self.functionspace)
      arg1=Data(numarray.array([-0.68355881992285217, 0.26484298234724757]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([0.0635007962715608, -0.43783763144875465]))
      res=generalTensorProduct(arg0,arg1,offset=0)
      ref=Data(numarray.array([[[0.42506572842780171, -0.16469054590375959], [-0.43745762146193662, 0.16949175073417749], [-0.67625835057938088, 0.26201443560466031], [-0.44650724225097405, 0.17299800138741436], [-0.23346115171261506, 0.090453880309481649]], [[-0.11583982507944413, 0.044881821219256601], [0.56932928972852714, -0.22058506544668824], [-0.60589216001762325, 0.23475124885082113], [0.37448818447989113, -0.1450944157851029], [-0.39609636933863629, 0.15346644750250008]], [[-0.30822948292879349, 0.1194226643369548], [0.50863538303262568, -0.19706937844046643], [0.033749905045984796, -0.013076307767228929], [0.28072767516064567, -0.10876716465357858], [-0.16914239533799783, 0.065533755277604813]], [[-0.10770019416078341, 0.041728143635303735], [0.66975455644617854, -0.25949455847835207], [0.43916854867473876, -0.17015464477110726], [-0.010422535084352886, 0.0040381825161298875], [-0.55300930657674785, 0.21426193291763698]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[-0.039487475600070238, 0.27226592111835091], [0.040638649503536774, -0.28020325867745705], [0.062822602087015178, -0.43316148637879498], [0.041479335205060461, -0.28599978183873925], [0.02168792004453968, -0.14953808614844041]], [[0.010761211644278432, -0.074198493475581398], [-0.052889176739119394, 0.36467057473894299], [0.05628577014068422, -0.38809006704854798], [-0.034788956291205687, 0.23986965703511107], [0.036796299192096447, -0.25371027499323734]], [[0.028633699149048904, -0.19742919382336188], [-0.04725087423801709, 0.3257945108559484], [-0.0031352764122793151, 0.021617713145186415], [-0.026078854355470079, 0.17981355340909028], [0.015712878649498239, -0.10834020949465045]], [[0.010005061581362256, -0.068984843064786194], [-0.062218416910542342, 0.42899563300127141], [-0.04079759009095818, 0.28129915312955273], [0.00096822578794226349, -0.0066759113364079558], [0.051373093711482638, -0.35421719083078845]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_constData_rank3_taggedData_rank2_offset1(self):
      arg0=Data(numarray.array([[[-0.055045165018387188, -0.99605658080886372, 0.28709760980871435], [-0.12923699376913822, -0.31529246489322471, 0.91428686541539017], [0.56818755497859286, -0.49396334949279774, 0.044485292282422373], [0.23067167500712715, -0.44568593501168952, 0.79964391909786947], [-0.82163321562185221, 0.69768473152146959, -0.2516490883478808]], [[0.73696096424597846, -0.90592628072930781, -0.90568657092761518], [0.83136916667147021, 0.65699336067417424, -0.1586776867368398], [-0.84224710153301152, -0.64992095035711195, -0.4369078252416041], [0.80110940310601797, 0.92501218395773877, 0.8684333630162866], [-0.45407138212607134, -0.69074114875382908, 0.91841613567499469]], [[-0.52289658250275117, 0.06631593318216078, -0.99200224727848707], [0.4443448817950133, 0.45442385049659983, -0.94122197339268632], [-0.75790010535038821, -0.83736301284623393, -0.60837439392873471], [0.26327665096042008, 0.52425582969874629, -0.28257691983358257], [0.17948748395643954, 0.96388125974797911, 0.72407095189617054]], [[0.81368932259619209, 0.7796569096047008, -0.57607513414532741], [0.88844721977457053, 0.26213201023814392, 0.40191634108605756], [-0.69507976975463559, 0.43147648276882844, 0.17686493732334596], [-0.45741771403480391, 0.28584506542025778, 0.60080512281347542], [-0.67850623973297708, -0.45160849186665342, -0.63430747745347649]]]),self.functionspace)
      arg1=Data(numarray.array([[0.54793946044652841, 0.22442407450602242], [0.22834699188722785, -0.19300000985027976], [-0.36120552274345119, -0.82997150186520363]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[-0.23295277933365166, -0.35795115151546164], [0.96803662804373847, 0.36109013313897842], [0.70260044024327173, -0.49137475110974704]]))
      res=generalTensorProduct(arg0,arg1,offset=1)
      ref=Data(numarray.array([[[-0.36130918422689878, -0.058397364702585025], [-0.47305559971850764, -0.72698448671290883], [0.18246900409491498, 0.18592837264314294], [-0.2642127292490315, -0.52589599746542048], [-0.19999401061959887, -0.11018586225627483]], [[0.52408344333660606, 1.0919296069442923], [0.6628776870031754, 0.19147748869487499], [-0.45209439694808767, 0.29903526744633391], [0.3365002769061855, -0.71951406681780927], [-0.73826927199954095, -0.73085072064324341]], [[0.086944062861353921, 0.69318403767945358], [0.68721498900257383, 0.79320529608154655], [-0.38674450891636358, 0.49645344944167036], [0.36604025181019656, 0.19243502898163453], [0.056909234632914585, -0.74670603555575377]], [[0.83196631837525126, 0.51026362619933274], [0.40149794417260398, -0.18478164474804137], [-0.34621986923717585, -0.38606045711714376], [-0.4023794830451759, -0.6564747776864932], [-0.24578841956370537, 0.46134443818649007]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[-0.74968142260268134, -0.48103523973849827], [0.36726981647790463, -0.51684594832434971], [-0.57928009939327318, -0.40360763063879168], [0.076654252094322528, -0.63642681702548087], [0.68997735585156139, 0.66968563640324819]], [[-1.6849827103910746, -0.14588555372344114], [0.3308368669276428, 0.017614478359744987], [-0.73991511245133468, 0.28148875124603456], [1.318986676631142, -0.37947148827871463], [0.082394039243201544, -0.53817093934832272]], [[-0.51097475111886315, 0.6985623203291178], [-0.3249154161317932, 0.46752691948367398], [-1.0614872484126363, 0.26786751004783366], [0.24762914976129835, 0.23391459061897482], [1.399992825847342, -0.071989922926034899]], [[0.16043461372812828, 0.27333416295391738], [0.32917373634354674, -0.42085896497024022], [0.70387118650962743, 0.31769954003080803], [0.80539116486238205, -0.0282714374958834], [-0.72477836022990305, 0.39148339822877543]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_constData_rank4_taggedData_rank3_offset2(self):
      arg0=Data(numarray.array([[[[-0.74599658276682779, -0.12028575419991627, 0.68564242015397792], [0.15248888084089285, -0.3024240337236026, -0.44726205028156651]], [[-0.46016876463895651, -0.59758839193843394, 0.47852143269632297], [-0.48594691239575671, -0.078945233807708348, -0.84590281514145671]], [[-0.36398225054347777, 0.73338407871725586, -0.67212752765832717], [-0.73420121234023483, 0.69464910546658687, 0.46834343233688513]], [[-0.017407617766312278, -0.7802447177061238, 0.38968686345394965], [-0.24926799420921997, 0.81075266960966363, -0.24151929261601879]], [[-0.72253529514807413, 0.68424988312341184, 0.55697015452274745], [0.39847369916135644, 0.80692285856070911, -0.52850198475098442]]], [[[-0.26453156812239498, 0.98973939044107606, -0.89323299826918778], [0.54551699199283088, -0.19306155046993667, -0.074151478122420178]], [[0.53724370714675218, 0.52467529374732869, -0.90577734258298537], [-0.2318732092440432, -0.15781323786148005, 0.8246294727507657]], [[0.21470947174093102, -0.62872415754415401, 0.47607385942515079], [0.80676862951331985, 0.056280667844240018, 0.14811274772929228]], [[-0.0044218217241669411, 0.53159855930166677, -0.15901585534395024], [-0.13622930444682679, -0.88146085937130647, 0.13527639687590365]], [[0.95792737857931387, 0.10030846465746679, -0.064920370632121305], [0.152489141546573, -0.6402422534816905, -0.83901276781759027]]], [[[0.38231788837393998, 0.69392621761530027, 0.42694686311367014], [0.59934266557341576, -0.24379318479519085, -0.46021277837023034]], [[0.094895679748156159, 0.85662885387864263, -0.097205610651243557], [-0.51763413873193143, 0.49236086654460776, -0.17977123125400851]], [[-0.62476634915995799, 0.40770604669032395, 0.014979251923380676], [-0.89011857009789486, 0.79103193064178057, -0.072347816177577462]], [[0.97963963021802525, -0.58521462659619239, -0.67414591328917606], [0.30987661399695243, -0.72967732753113967, 0.99515094946348071]], [[-0.5620665773822886, -0.78760969284900306, 0.10947821992540852], [0.79896759576434895, -0.37288248259662948, 0.70331119940692677]]], [[[0.76818930254377449, -0.63098168274514754, 0.95225520116744966], [-0.58738912969048829, -0.51167624900080666, 0.89234127463357904]], [[0.37031788784217068, 0.92979919770369701, -0.98180480079350296], [0.19443332689139692, 0.13571116434337038, 0.16675403233830322]], [[0.4416850183007992, -0.4044000802398795, -0.25731803702762379], [-0.81509549011533378, 0.55841949383943157, 0.32596414552861996]], [[-0.79794305635536311, 0.44777554424093591, 0.81871864915877857], [0.60345343569056364, 0.019867664068124347, -0.59137840037120282]], [[-0.34559162264278109, -0.89289555947858412, 0.90348530273052985], [0.09501078698631571, -0.054180663444882704, 0.074822698001534738]]]]),self.functionspace)
      arg1=Data(numarray.array([[[-0.81491822743365039, -0.49082703540309058], [-0.14353402093911072, -0.21830926359381109], [0.82191906487630062, 0.84875962421837636]], [[0.89914793570060536, -0.72631189117255635], [0.20109086576989532, -0.24326665265820058], [-0.72511128092363752, -0.35276942272409473]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[-0.49055804345641518, 0.453861411524074], [0.78774761096227297, 0.7901105365972978], [-0.65046167744617978, -0.9338870116714908]], [[0.66960260065221888, -0.63986180229128431], [0.76754467272613791, -0.61648221686828131], [-0.45289593498183001, -0.83977121301024416]]]))
      res=generalTensorProduct(arg0,arg1,offset=2)
      ref=Data(numarray.array([[[1.5893439975168726, 1.094955958663776], [1.0146404125150075, 1.433034435206386], [-1.2211532448653801, -0.35287005086965217], [0.56050302653165873, 0.57864709660119629], [1.8521528049007236, 0.3787212791396648]], [[-0.15520927225854231, -1.1674618029252115], [-2.0957653618700887, -1.2311235458134635], [0.93589047743101106, -0.21596314285546714], [-0.6012316853912919, 0.016804842033048412], [-0.23164839838315265, -0.20620374891695387]], [[0.76333454547283175, -0.19042117492171479], [-0.5162489941848345, 0.0035150668104723393], [-0.12589323107897163, 0.70995410184659347], [-1.8581230685606032, -1.3238834078371864], [0.79449723970823194, -0.19695582117429461]], [[-1.0308572902222122, 0.80524759686168745], [-1.1610013279687037, -1.4511210447289282], [-1.3703452499388618, -0.0057293023926705683], [2.2343120494130004, 0.75428547911887667], [1.1726603316982323, 1.0491726539667967]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[-0.1022381505412599, -0.60946563155706213], [-0.55914855665093366, -0.057926647786131991], [1.0229095181541554, 0.69019531644274768], [-0.29481133518623126, -1.1258003046923957], [1.6566987376121238, -0.61604597899364955]], [[1.7411258981717153, 1.3283553491302007], [0.089072986979815805, 1.0574351325267217], [-0.39393857475595156, -1.5192097135052505], [-0.30467783831181372, 1.0834892196904451], [-0.35799494725498959, 1.5763540945221188]], [[0.5040047759140045, 0.47634875046234798], [0.80420147325140179, 0.98932932717403577], [0.66180285952914419, 0.16723794505639827], [-1.3063310213391128, 0.027668262899012586], [-0.48566272634400892, -1.8516132602218802]], [[-2.6834906737264048, -1.0972678980787463], [1.348246294971124, 1.4715026793423513], [-0.63266780225939923, 0.024806470057299246], [0.89878257704025244, -0.6747064069212978], [-1.1333796644466807, -1.7963163864923728]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_constData_rank2_taggedData_rank2_offset0(self):
      arg0=Data(numarray.array([[-0.88577226636182749, 0.51105202985402975, -0.92051821173109261, 0.68683867152791067, -0.027252262057769983], [-0.56506162587521835, -0.16967764372141003, 0.63874234020929577, -0.57157187857043357, -0.27508244768682211], [-0.11183974079876347, -0.670731559536905, -0.74398397089552382, 0.073277966680087347, -0.13164498575358818], [-0.88541565887555063, 0.7260767716392722, -0.61350576545393443, 0.32306677597426359, 0.32466806856558761]]),self.functionspace)
      arg1=Data(numarray.array([[-0.62856448512195318, 0.23315595117230625, 0.14786669940419617, -0.081451702528267056, 0.59948902524387382], [0.71708680526585011, -0.39254552637680562, -0.53134927140563182, -0.21182544634691691, 0.75265849683548103], [-0.31657674975387051, -0.84330148656863035, 0.36037431634276795, 0.46816853489379695, -0.5007490583946248], [0.81943856074559385, -0.78115200153096032, 0.28840868510282247, -0.13787271134040879, 0.96664503015255465]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[0.10205229893144629, -0.84541935528576584, 0.48443658343371476, 0.86086367056402402, 0.046869653440018588], [0.064057946477595218, -0.26679150914131089, -0.52071629159316446, -0.47674097865377929, 0.76350720605205047], [-0.34712597474028817, -0.21548681218722976, 0.1124648266240309, -0.03892181901618974, 0.50495936798709851], [0.88560192888241573, -0.10201489443883505, -0.42490557307538923, -0.437031742524709, 0.28910854091665472]]))
      res=generalTensorProduct(arg0,arg1,offset=0)
      ref=Data(numarray.array([[[[0.55676498854102763, -0.20652307528564129, -0.13097622145069793, 0.072147659147492507, -0.53101075254930896], [-0.63517560467849454, 0.34770594054897963, 0.47065444836267228, 0.18762910568381427, -0.66668402253845038], [0.280414905106947, 0.74697306898419391, -0.31920957492552776, -0.41469070419217485, 0.44354962833275791], [-0.72583595109589871, 0.69192277876915642, -0.25546441464196168, 0.12212382399344393, -0.85622735912562542]], [[-0.32122915601572727, 0.11915482211915415, 0.075567576878330101, -0.041626057912137485, 0.30637008322609538], [0.36646866741265405, -0.2006111880649851, -0.27154712371330791, -0.10825382433032776, 0.38464765259465539], [-0.16178719056630675, -0.43097093648981938, 0.18417002587422981, 0.2392584800712621, -0.2559088227400671], [0.4187757398097004, -0.39920931600693543, 0.14739184394932908, -0.070460128991994622, 0.49400590480777284]], [[0.57860505580213528, -0.2146242992275933, -0.13611398971012967, 0.074977775553773301, -0.55184056546990656], [-0.66009146363928262, 0.36134530596341757, 0.4891166811189312, 0.19498918107040447, -0.69283585355120925], [0.29141466355907447, 0.77627437636632768, -0.33173112123365983, -0.43095766252920359, 0.4609486277594485], [-0.7543081185610343, 0.71906464353944333, -0.26548544705856597, 0.12691434168959023, -0.88981435453477775]], [[-0.43172239593078748, 0.16014052376201324, 0.101560567381995, -0.055944179158201511, 0.41175224569406438], [0.49252294869899005, -0.26961544785086961, -0.36495122768956739, -0.14548990816472313, 0.51695496208067593], [-0.21743715423757223, -0.57921207273231023, 0.24751901668964577, 0.32155625455762377, -0.34393381803661627], [0.56282209246124681, -0.5365254029928932, 0.19809023813313412, -0.094696309896997483, 0.6639291883490378]], [[0.017129804068750729, -0.0063540270816763124, -0.0040297020417806549, 0.0022197431423518596, -0.016337432016703134], [-0.01954223753527402, 0.010697753554425966, 0.014480469588551424, 0.0057727225743502749, -0.020511646595767766], [0.0086274325456895482, 0.022981873105675309, -0.0098210153078628123, -0.012758651600127985, 0.013646544564551879], [-0.022331554397680791, 0.021288159052673269, -0.00785978906615898, 0.0037573432600640959, -0.026343263678558385]]], [[[0.35517766993043037, -0.13174748085190641, -0.083553797578137273, 0.046025231460927213, -0.33874824329865316], [-0.40519823607718736, 0.2218124133645212, 0.30024508320807897, 0.11969443111453271, -0.42529843395065481], [0.1788853729302142, 0.47651730910345891, -0.20363369711631474, -0.2645440735107078, 0.28295407709195136], [-0.46303328543975414, 0.44139902004076548, -0.16296868052073474, 0.077906578433836055, -0.54621401238220202]], [[0.10665334076245431, -0.039561352414541055, -0.025089673139766032, 0.01382053296209357, -0.10171988524022541], [-0.12167359946122305, 0.066606199968996985, 0.090158092365195605, 0.035942042616380822, -0.12770932026994278], [0.053715996955219225, 0.1430894091877275, -0.06114746485475489, -0.079437733865284202, 0.084965920324114694], [-0.13904040416177588, 0.13254403100803663, -0.048936506117037051, 0.023393916793722692, -0.16401805103129682]], [[-0.40149075019924746, 0.14892657788552319, 0.094448721616460743, -0.052026651086936715, 0.38291902291406155], [0.45803370412871663, -0.25073544815661064, -0.33939527708613754, -0.13530188131550833, 0.48075484964710596], [-0.20221097399363985, -0.53865236503282499, 0.23018633417210466, 0.2990390655904212, -0.31984962541658396], [0.52341010394837773, -0.49895485751706098, 0.18421883845926268, -0.088065138292573425, 0.61743710871132806]], [[0.35926978356381212, -0.13326538501143137, -0.084516447156466015, 0.046555502626841737, -0.34265106834099901], [-0.4098666523838726, 0.22436798393561047, 0.30370430123434816, 0.12107346829752788, -0.43019843095825461], [0.18094636756854182, 0.48200741487927129, -0.20597982498057157, -0.26759196897681509, 0.28621407999899146], [-0.46836803753841144, 0.44648451696410518, -0.16484629394024886, 0.078804164624436568, -0.55250711579506906]], [[0.17290705709635396, -0.064137109741227188, -0.040675533603477844, 0.022405933699734617, -0.1649089084254719], [-0.1972579935964536, 0.10798238422424368, 0.14616485815487076, 0.058269462263463516, -0.20704314158178838], [0.087084707203033254, 0.23197743706323457, -0.099132649023033745, -0.12878494650853906, 0.13774727666006481], [-0.22541316501886463, 0.21488120459659676, -0.079336167032222307, 0.037926362904738324, -0.26590708093866672]]], [[[0.070298489091347463, -0.026076101144799881, -0.016537373334133972, 0.0091095372983793742, -0.067046697194978216], [-0.080198802431146049, 0.04390218992169611, 0.059425964787617684, 0.023690503014021563, -0.084177131196067123], [0.035405861635387885, 0.094314619673047523, -0.040304170130306759, -0.052359847592659096, 0.056003644896079709], [-0.091645796234299012, 0.08736383737565788, -0.032255552586011857, 0.015419648299534055, -0.1081093296166746]], [[0.42159803737535939, -0.15638505474511144, -0.099178861894951231, 0.05463222746372063, -0.40209620882708247], [-0.48097275121930055, 0.26329267309595011, 0.35639272546869766, 0.14207801197786857, -0.50483180738116484], [0.21233801707553807, 0.56562892124596775, -0.2417144272176307, -0.31401541153542434, 0.33586819687366343], [-0.54962330379356905, 0.52394330022223579, -0.19344480714300424, 0.092475578694933919, -0.64835932859282153]], [[0.46764190160493113, -0.17346429039109526, -0.11001045418594865, 0.060598761083181102, -0.44601022550922415], [-0.53350108885847236, 0.29204757947108945, 0.39531534087280534, 0.15759473670989596, -0.55996585720391723], [0.23552802737508313, 0.62740278863942789, -0.26811271488145216, -0.34830988563862664, 0.37254927288662748], [-0.60964915432841982, 0.58116456797199012, -0.21457143878355456, 0.10257508726116965, -0.71916840797932091]], [[-0.046059927397052745, 0.017085194021268329, 0.010835371072035178, -0.0059686151439027396, 0.043929336816898631], [0.052546663023001247, -0.02876493800225691, -0.038936194205550577, -0.015522137999404008, 0.055153284252595004], [-0.023198100520154474, -0.061795418234044226, 0.026407497145324609, 0.034306438300612967, -0.036693872816126433], [0.06004679155069436, -0.057241230340269247, 0.021134002017212428, -0.010103031947695776, 0.070833782310990925]], [[0.082747362689091011, -0.03069381187044256, -0.019465909536495511, 0.010722708218939218, -0.07891972418766223], [-0.094400882263308908, 0.051676650227509349, 0.069949467264373857, 0.027885757866587334, -0.099083717093224], [0.041675741711265535, 0.11101641218530708, -0.047441471740902769, -0.061632040106372153, 0.065921102658483083], [-0.10787497765529451, 0.10283474411293017, -0.037967557241572164, 0.01815025112021669, -0.12725397122320989]]], [[[0.55654083774002538, -0.20643993012798326, -0.13092349107871934, 0.072118612860600922, -0.53079697027496608], [-0.63491988615542638, 0.34756595587556921, 0.47046496523466125, 0.18755356714386304, -0.66641561888386902], [0.28030201146800354, 0.74667234136089511, -0.31908106274645798, -0.41452375178779244, 0.44337105746978828], [-0.72554373317059284, 0.69164421411749033, -0.25536156594574677, 0.12207465755242665, -0.85588264627130073]], [[-0.45638607212444909, 0.16928912031567192, 0.10736257573635345, -0.059140189216246489, 0.43527505608224604], [0.52066007255254787, -0.28501818851310978, -0.38580036359508058, -0.15380153623461729, 0.54648785152917345], [-0.22985902443734407, -0.61230162088635021, 0.26165942019186678, 0.33992629839877603, -0.36358225972057456], [0.5949753047428924, -0.56717632343115543, 0.20940684699218479, -0.10010617314719729, 0.70185850281431383]], [[0.38562793558190206, -0.14304252029410591, -0.090717072603118204, 0.049971089107130648, -0.36778997331347585], [-0.43993688936154179, 0.24082894363531973, 0.32598584147710252, 0.12995613260368657, -0.46176032722645949], [0.19422166118266698, 0.51737032402572836, -0.22109172079780817, -0.28722409536146593, 0.3072124343707312], [-0.50273028145269594, 0.47924125663512479, -0.17694039111756985, 0.084585703306106846, -0.59304229914598461]], [[-0.20306830170027237, 0.075324941444449803, 0.047770817850469216, -0.026314338933422013, 0.19367498661749222], [0.23166692227092278, -0.12681841762967483, -0.17166129602929145, -0.068433764020607801, 0.24315895398227433], [-0.1022754298913942, -0.27244269244003116, 0.11642496852478741, 0.1512496991807335, -0.16177538386769968], [0.26473337392906976, -0.25236425868045037, 0.093175264059145474, -0.044542092347576161, 0.31229089340293065]], [[-0.20407481735346755, 0.075698292341685125, 0.04800759570072869, -0.026444766941231254, 0.1946349439521953], [0.23281518805953119, -0.12744699787281941, -0.17251214168099868, -0.06877295853849702, 0.24436418045705405], [-0.1027823618953605, -0.27379306486272603, 0.11700203324765054, 0.15199937398714997, -0.16257722962501947], [0.26604553482543691, -0.25361511159319983, 0.093637090749874127, -0.044762866898791311, 0.3138387749281541]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[-0.090395096111941894, 0.74884901835762785, -0.42910049041666204, -0.76252916450405717, -0.041515839151158689], [-0.056740752429944162, 0.23631651969819117, 0.46123604973600352, 0.42228393712971368, -0.67629350828831158], [0.30747456135876355, 0.19087224200216799, -0.09961822436475784, 0.034475867840895263, -0.4472790038025683], [-0.78444162764058334, 0.090361964249749516, 0.37636957245275865, 0.38711059704817014, -0.25608432751230636]], [[0.052154034520185862, -0.43205327759667578, 0.24757229929935098, 0.43994612626933521, 0.023952831529076409], [0.032736943575655833, -0.13634434229448686, -0.26611311779674957, -0.24363944485561057, 0.39019190746107935], [-0.17739943400608293, -0.11012497277505784, 0.057475377933392517, -0.019891074613834943, 0.25806051000361468], [0.45258866339800269, -0.052134918878311225, -0.21714885561646743, -0.22334595912789623, 0.14774950668359321]], [[-0.09394099971542183, 0.77822391309050643, -0.44593269747952335, -0.79244068657185984, -0.043144369569061966], [-0.05896650633872199, 0.24558644289979895, 0.4793288295565859, 0.43884875312930788, -0.70282228795883639], [0.3195357815133425, 0.19835953500622255, -0.1035259210866003, 0.035828243238104213, -0.46482429441634665], [-0.81521270388044753, 0.093906568198772619, 0.39113331828193237, 0.40229567809856842, -0.26612967708078444]], [[0.070093465424443793, -0.58066670686845812, 0.33272977940513249, 0.59127445985683524, 0.032191890503715938], [0.043997474859477505, -0.18324272571354441, -0.35764808596078923, -0.32744414044147779, 0.52440627510677706], [-0.23841954334345061, -0.14800467581446128, 0.07724519211206618, -0.026733010466529532, 0.34682562148383211], [0.60826565233615359, -0.070067774572429506, -0.29184157933590593, -0.30017030145119905, 0.19857092617056774]], [[-0.002781155994077654, 0.023039589818958636, -0.013201992722106348, -0.02346048234622455, -0.001277304078104247], [-0.0017457239442900284, 0.00727067212190694, 0.014190696836247086, 0.012992270083950519, -0.020807298462326262], [0.0094599680306811772, 0.0058725030757198482, -0.0030649209274397566, 0.0010607076115942979, -0.013761285024910315], [-0.024134655844770168, 0.0027801366370428745, 0.011579638027257441, 0.011910103574847227, -0.0078788617202001903]]], [[[-0.057665837958506855, 0.4777140354441537, -0.27373652346849076, -0.48644102534581574, -0.026484242577024926], [-0.036196687386857669, 0.1507536439250923, 0.29423679434734779, 0.26938803251944732, -0.43142862321921699], [0.1961475676702672, 0.12176332844918386, -0.063549557785949451, 0.021993226335309167, -0.28533316147571258], [-0.50041966581252728, 0.057644702115096903, 0.24009783396542084, 0.24694986699009186, -0.16336414218477702]], [[-0.017315993619040779, 0.14344876416136235, -0.082198058009482974, -0.14606931918666777, -0.0079527323577414342], [-0.010869201419950554, 0.045268554635976656, 0.088353913404878817, 0.080892285923412313, -0.12955010368722902], [0.058899517468429793, 0.036563294544967172, -0.019082766783102466, 0.0066041625400182448, -0.085680315735103277], [-0.15026684856790404, 0.017309646912869906, 0.072096976443527444, 0.074154516303054571, -0.049055256002472833]], [[0.065185124243210615, -0.54000513745346412, 0.30943015698544674, 0.549870075537229, 0.029937632123076142], [0.040916522642100987, -0.17041103289689064, -0.33260354267732389, -0.3045146483789849, 0.48768437956034771], [-0.22172405745304455, -0.13764055070071213, 0.07183604654906621, -0.024861013763603706, 0.32253892841868625], [0.5656714485482206, -0.065161232410065772, -0.27140518011414605, -0.27915067796597903, 0.18466586599959897]], [[-0.058330224212678208, 0.48321792908048999, -0.27689032804145092, -0.49204546537731808, -0.026789375864656607], [-0.036613720805563389, 0.15249052406654007, 0.29762678898813466, 0.27249173676064758, -0.43639924806523361], [0.19840744548289937, 0.12316620204900912, -0.064281732226595459, 0.022246617212461996, -0.28862057456212475], [-0.50618515815692189, 0.058308844856569425, 0.24286407661774687, 0.24979505406975797, -0.16524631184248939]], [[-0.028072796182129506, 0.23256002557382355, -0.13326000111998768, -0.23680848562341381, -0.012893018990513394], [-0.017621216710848337, 0.07338966135665298, 0.14323991204185266, 0.13114307532069261, -0.21002743106732488], [0.09548826278723245, 0.059276639740693693, -0.030937099786412497, 0.010706709243396973, -0.13890545892828177], [-0.24361354627314588, 0.02806250686274752, 0.11688406507734993, 0.12021976145053397, -0.079528685082519146]]], [[[-0.011413502660410879, 0.094551481561417766, -0.054179261924665212, -0.096278769778952542, -0.0052418898920595517], [-0.0071642241301553122, 0.029837893229675144, 0.058236775081472847, 0.053318587480787501, -0.085390448022849411], [0.03882247903947194, 0.024099989220571601, -0.012578037058609489, 0.0043530061501870438, -0.056474524829584517], [-0.099045490177094325, 0.011409319351652528, 0.047521329156701583, 0.048877516804795386, -0.032333824278827368]], [[-0.068449697616615401, 0.56704944263350654, -0.32492690510322547, -0.57740843230607219, -0.031436955746777934], [-0.042965686341649031, 0.17894548499755589, 0.34926085033655696, 0.31976522010759972, -0.51210837903295692], [0.23282834639332178, 0.14453380559797677, -0.075433708554583881, 0.026106092368742111, -0.3386921843927565], [-0.59400116288819393, 0.068424609242952572, 0.28499757768477818, 0.2931309822307292, -0.19391422252446694]], [[-0.075925274598034442, 0.62897844901743771, -0.36041305299007587, -0.64046877202591868, -0.034870270880802079], [-0.047658085387814221, 0.19848860637216192, 0.38740457432947395, 0.35468764638745687, -0.56803712296595144], [0.25825616108825888, 0.16031873420667314, -0.083672028297823137, 0.028957209466141755, -0.37568167573593558], [-0.65887363968267498, 0.075897446255092191, 0.31612293551226622, 0.32514461121092314, -0.21509212029098379]], [[0.0074781849607248353, -0.061950611347331278, 0.035498527819471104, 0.063082339367688242, 0.0034345129030849235], [0.0046940360675800409, -0.019549939317387199, -0.038157031065142552, -0.034934609548823874, 0.055948255605088738], [-0.02543668561081168, -0.015790435443454064, 0.0082411938180375361, -0.0028521117569967418, 0.037002395742156573], [0.064895108636466747, -0.0074754440355615827, -0.031136216426001791, -0.032024797466866137, 0.021185286028219293]], [[-0.01343467343895117, 0.11129521898240236, -0.063773647124648308, -0.11332838564718258, -0.0061701548593868626], [-0.0084329074514471365, 0.035121764420086167, 0.068549688788443405, 0.06276055934302846, -0.1005118952634841], [0.045697393999385647, 0.028367758320473994, -0.014805430498700313, 0.0051238623098900362, -0.066475368804802482], [-0.11658505331107584, 0.013429749325054242, 0.055936688114129836, 0.057533037518531137, -0.038059689750213677]]], [[[-0.090358703498151172, 0.74854753548648956, -0.42892773670438322, -0.76222217407447024, -0.041499125081862778], [-0.056717908886674724, 0.23622137984875627, 0.46105035840819503, 0.42211392772771078, -0.67602123590280705], [0.30735077363748997, 0.19079539779174806, -0.099578118565640888, 0.034461988028854577, -0.44709893151167845], [-0.78412581536288262, 0.090325584974680878, 0.37621804794443919, 0.38695474825704523, -0.2559812292422689]], [[0.074097803746510468, -0.61383935616724372, 0.35173815056351054, 0.62505311474466052, 0.034030966657580208], [0.046510986976293626, -0.1937111176580924, -0.37808000393993874, -0.34615055068908324, 0.55436484729359337], [-0.25204010709156399, -0.15645996892374195, 0.08165809823814682, -0.028260228697603081, 0.36663926771707972], [0.64301498948045677, -0.074070645213270489, -0.30851406675011345, -0.31731859671622636, 0.20991499604210509]], [[-0.062609673772270696, 0.51866964869416554, -0.29720463693338994, -0.52814482516086514, -0.028754802610279236], [-0.039299919487144216, 0.16367812903235029, 0.31946244705819848, 0.29248333903224466, -0.46841607287855808], [0.21296378684198361, 0.1322024016561546, -0.068997819544620101, 0.023878760368386986, -0.30979548358005982], [-0.54332188926648728, 0.06258672590039982, 0.26068201885525932, 0.26812149372528837, -0.17736975669434238]], [[0.032969707196544136, -0.27312690545841289, 0.15650536517391758, 0.2781164506024898, 0.015142027827897859], [0.020694994244048623, -0.086191472715591577, -0.16822613352227817, -0.15401917094849168, 0.2466638114923537], [-0.11214486951626856, -0.069616629678299971, 0.036333648947930189, -0.012574346584614203, 0.16313559501359368], [0.28610855996063111, -0.032957623047709272, -0.13727287358696286, -0.1411904360558722, 0.093401364220567107]], [[0.033133122786750652, -0.27448066920859387, 0.15728108988593631, 0.27949494522030399, 0.015217079856709285], [0.020797569759158627, -0.086618683982607719, -0.16905995266218804, -0.15478257274559054, 0.24788640992482736], [-0.11270071976787631, -0.069961687114183407, 0.036513738041587786, -0.012636671805045682, 0.16394418270847108], [0.28752666776821278, -0.033120978742378876, -0.13795327173314076, -0.14189025174735045, 0.093864311585225443]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5, 4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_constData_rank3_taggedData_rank3_offset1(self):
      arg0=Data(numarray.array([[[-0.10197218590151125, -0.5273330957049851, 0.70569111308408461], [-0.88693090786344664, 0.12724811599121355, -0.29743994980089949], [-0.19444452199844431, 0.64425321048055162, -0.34623138394159803], [-0.4810670635540959, 0.90809475503312398, 0.57501343644865588], [0.57869609305191361, 0.63077255315477476, -0.51206100718206238]], [[-0.18049546265781902, 0.69139296534437777, -0.87374336929740015], [0.882032711605792, 0.20394036482010569, -0.92042037575250579], [-0.064073168204180631, -0.93398988454888077, 0.54400297371430506], [0.30000111864733592, 0.34513301178583622, -0.75082361947223974], [0.34825323451057133, -0.60317891847851923, -0.96054785198860193]], [[0.41932479652754062, -0.83194600662718399, -0.81919258160090225], [-0.71921596157911338, 0.92475785014636425, -0.42323834409358851], [0.62027260525205774, -0.20897876910720425, -0.012043636279710501], [-0.6500132017489717, 0.59794420965780826, 0.73968382433177071], [-0.63692034386388441, -0.11636007910330481, 0.91505711969519532]], [[0.74214576662243692, -0.97324560161769247, 0.30462070693415821], [-0.38904388892222408, 0.2671436213912477, 0.94027591977325375], [-0.47110063324677065, 0.53569578167341181, -0.033637950007002537], [-0.4314143719066692, 0.067050653006339722, -0.21654403857770865], [0.39432965996765779, -0.95758610941560418, 0.41837201071800711]]]),self.functionspace)
      arg1=Data(numarray.array([[[0.12568008130404729, -0.86727514905073355, -0.64323115743075876, -0.68111405332504571, -0.066333757470758981], [-0.85532856847453775, 0.95268786546384909, 0.57571036941442255, -0.57184718909680199, -0.9479557263669538], [0.69237423597260062, 0.1509541188183432, -0.74539073927127109, 0.98388373857121092, 0.36363008475277936], [-0.28273655622064253, 0.24428551945364529, 0.69912508081342728, 0.47875841355048232, 0.8877812727790062]], [[0.94617727062721846, 0.039221983114187564, -0.90815497006832357, -0.32137126188478216, -0.74500654736499783], [0.51992436541958775, -0.67067206150446435, -0.84668338760204254, 0.79732798094459012, -0.39352179791965258], [0.749165503022301, -0.40328463646984369, 0.5628752866093949, 0.41112420006676764, -0.99236034645351756], [0.44868485897510757, 0.99589834195721205, -0.12149042443293667, 0.53837756563226047, 0.87034592593588389]], [[-0.096703337672140233, 0.37755564094581606, 0.65520062048740058, -0.72553344183790736, -0.84761912799562422], [0.9781832980097529, 0.78662486185279823, 0.64064854796027593, 0.001600196027963019, 0.98043044495886211], [-0.29550735755499624, -0.58094270740249265, -0.72862408501471965, 0.78323978787337589, 0.44667215753727318], [-0.74432340501113736, 0.62491075196514179, -0.16669515188936646, -0.12049454883275268, -0.39359849527900614]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[-0.73119863528672258, -0.62930368786053736, -0.045441855248795404, -0.23726287420073944, 0.25228732002096943], [0.94698965894939779, 0.57968257411079205, -0.47928936537222189, -0.54000743354861447, -0.23089697638296136], [0.093438854296584273, -0.068714619465769067, 0.11322468106545802, 0.29373204430536037, -0.37411685251533955], [0.98397727859295081, -0.19080814817754033, 0.78705027157499363, -0.29507490580234275, -0.75529538981774191]], [[-0.032396328065713353, -0.92990024443461938, 0.58632938863441253, -0.70523770401409402, 0.70892007954672609], [0.96321593158342766, -0.017771078698074483, -0.07259280657904843, -0.13681727971659519, 0.23153658659164189], [-0.60414015693047696, -0.79956836792982111, 0.46014046013725607, 0.21080344954337571, 0.88264921992964473], [-0.63534202567889042, 0.21677635392931127, 0.34372462328083464, 0.66366112086410145, -0.24165623867449826]], [[0.52518779958003958, 0.51146762917257638, -0.11793624700426442, 0.44862918908392113, -0.43260070336492196], [-0.48817736607810214, 0.048046622673194372, 0.98720745750977934, -0.48281160963118253, 0.38110493915330457], [-0.77138235804915656, 0.6681380132353254, -0.08589436684524987, 0.71953840307016503, -0.75004236718296191], [-0.27571667556553914, 0.95571753650551194, -0.97158474656792326, -0.20236432070387322, 0.85753198958228372]]]))
      res=generalTensorProduct(arg0,arg1,offset=1)
      ref=Data(numarray.array([[[[-0.58000914782119672, 0.33419255346169707, 1.0068611140743073, -0.27307811088420675, -0.19852647871577234], [0.50334165901496131, 0.81163408461331521, 0.83987771395660338, -0.36101568049375438, 0.99606323748439884], [-0.674199594285669, -0.21269389149178744, -0.73499718592323826, 0.23559718508060334, 0.80143687098456007], [-0.73303752318405913, -0.10908651994203972, -0.12486067837691039, -0.41775628257780589, -0.82725016868735513]], [[0.037693162372452529, 0.66190392788172281, 0.26005774578957674, 0.77900984858471833, 0.21614857106351981], [0.53382594866013455, -1.1642837291223629, -0.80890865846987592, 0.60817146776083497, 0.49907714328240704], [-0.43086251727028674, -0.012407514121272722, 0.94945681612443855, -1.0532889207732792, -0.58164888978218865], [0.52925360969547197, -0.27581161250864084, -0.58595327264599628, -0.32027821090285569, -0.55957885423658349]], [[0.6186216713854169, 0.063184178261401797, -0.68685999773000317, 0.17659687696320397, -0.17360228046387305], [0.16259913925880465, -0.8896817799798602, -0.87923485169396198, 0.62431962678427033, -0.4086586734312882], [0.45033782451685539, -0.088029025685764178, 0.75984388182575968, -0.19762491316278036, -0.86468913644258871], [0.60175135803166446, 0.37774700856401067, -0.15649654500444471, 0.2954785186335131, 0.52437510352595806]], [[0.74315235061704366, 0.66993435294609727, -0.13850428063483899, -0.38136549740707565, -1.1320179397949004], [1.4460795317266948, -0.61502067031184349, -0.67744251720845283, 1.0000663398144256, 0.66243587633527912], [0.17731412220289383, -0.77288958039833489, 0.45075839064583345, 0.35039907074312837, -0.81924519053779676], [0.11546765301391532, 1.1461844223263666, -0.5425028190254686, 0.18929695482195769, 0.13694981708130824]], [[0.71907123324190914, -0.67048011169792965, -1.2805772764977255, -0.22535282797980538, -0.074284063896003893], [-0.66791080621635723, -0.27452470195764506, -0.52895444132013858, 0.17118747409935509, -1.2988412255481743], [1.0245450975033268, 0.13045378686368558, 0.29679155585871747, 0.42762898222479379, -0.64424575488819347], [0.5005385460489653, 0.449559986485769, 0.41330621498674891, 0.67834997510775719, 1.2642923177902121]]], [[[0.71598952453851605, -0.14622970532569043, -1.0842688501017923, 0.53467420045605496, 0.23748224903667459], [-0.34082619613998, -1.3229620395909518, -1.2490664683766579, 0.65308461939391749, -0.95762109572169274], [0.65119494485634655, 0.20152014433167276, 1.1603381228655545, -0.57768874201018217, -1.1420213789063827], [1.0115978604185916, 0.098453054040759769, -0.064537746069382868, 0.39109805330135761, 0.78541463445448056]], [[0.39282540306036484, -1.1044760107870868, -1.3556203791891985, 0.001490315398873121, 0.56972046524882425], [-1.5487340505119263, -0.020500794531675526, -0.25454351795940255, -0.3432534205374197, -1.8187910973903127], [1.0354728038763072, 0.58561195989948289, 0.12797443044563039, 0.23075260132607445, -0.29277485649143831], [0.52721249059699993, -0.1566088988233163, 0.74530400363861493, 0.64298313676679353, 1.3228268639174887]], [[-0.94437962400694309, 0.22432752244096965, 1.2458524997154403, -0.050893706798973648, 0.23897146695488808], [0.10133413616029108, 0.99328545549029412, 1.1024208472956474, -0.70718569633820494, 0.96164098288973066], [-0.9048324938218909, 0.050957102026049639, -0.87433394670843234, -0.020941618695964614, 1.1465465758062041], [-0.80586543844001146, -0.60585781722975773, -0.022006989740380165, -0.59906416161055009, -1.083896001582991]], [[0.43686832608381893, -0.53012440661694127, -0.99834442812081203, 0.22949683540924487, 0.35938590667802045], [-0.81159958953425893, -0.53628016908992249, -0.60051869434009886, 0.10242794604657067, -1.1563354769824121], [0.68814869547863211, 0.34228506959607441, 0.51771696006197099, -0.15101617686838487, -0.56877888898828899], [0.62889026658045788, -0.052194429339934456, 0.29296660752080722, 0.41991008361283921, 0.86224353250585217]], [[-0.43405750467709397, -0.68834950913963766, -0.30557894708730859, 0.65355378713598611, 1.2404500306032522], [-1.5510702227193662, -0.019278942034756885, 0.095820981694517582, -0.68161612732497945, -1.0345149533426756], [0.073089686841115803, 0.85384632072997135, 0.10077905722726188, -0.65768005185062117, 0.29615621222976773], [0.34585707967577917, -1.1158883430071735, 0.4768717036199403, -0.042268051645423368, 0.16226857466120409]]], [[[-0.65524897050227404, -0.70559132783732492, -0.050922361226442447, 0.57610713940419367, 1.2863531343141237], [-1.592529978674271, 0.31305133733229884, 0.42098995880414558, -0.90443440464704428, -0.87327380106190677], [-0.090858127804588462, 0.87471380424294354, -0.18395922178245316, -0.57109051183074766, 0.61215882080522044], [0.11790418613050713, -1.2380209250308973, 0.53078938752641869, -0.14843755091038097, -0.029379148435740077]], [[0.82552229862082949, 0.50023294278424468, -0.65450734797508869, 0.49975107407582275, -0.28249743976681374], [0.68196541797597887, -1.6383273769478599, -1.4681842267876353, 1.1479396711853298, -0.097083240579803276], [0.3199001227601333, -0.23563201564489605, 1.3650019084509122, -0.65893166856939978, -1.3682703659302069], [0.93329969514185673, 0.48078457303096755, -0.54461936091919161, 0.20453610071559961, 0.33293874095804737]], [[-0.11861039008818107, -0.55069072074011605, -0.21708455595879594, -0.34657855671234206, 0.12475395516390415], [-0.65097091728456136, 0.72160858246634507, 0.52632048477714299, -0.52134503799860932, -0.5175612147877735], [0.27646006960931874, 0.18490729414960258, -0.57119915687049061, 0.51492684538361788, 0.42755246672863539], [-0.26017498950820056, -0.064124191885207515, 0.46104467040845354, 0.18590243999836634, 0.37352293977845258]], [[0.41253761360188418, 0.86646465451904287, 0.35972403894861971, -0.28609430957565141, -1.0293246912490122], [1.5904069878734699, -0.4384304793236814, -0.40661140152539843, 0.849649510817575, 1.1060881973903403], [-0.22067523167993966, -0.76897780684053174, 0.28213038967139381, 0.18564171748568459, -0.49934430898860799], [-0.098492975212529699, 0.89893920921977077, -0.65038673546818049, -0.078407409968472314, -0.34778968099843921]], [[-0.27863454029212742, 0.89330629042879139, 1.1149059867356783, -0.19269435902198262, -0.64668157746029853], [1.379371316872199, 0.19105985163050365, 0.31806851453682916, 0.27290823215143556, 1.5467123737657191], [-0.79856630510431814, -0.58081527760832385, -0.25747434347966808, 0.042215130788175292, 0.29259826771641639], [-0.55322677218306826, 0.30035580585940658, -0.58368593703328031, -0.47783602430458627, -1.0268845797298305]]], [[[-0.85704776578459108, -0.56680593666555756, 0.6060742259559263, -0.41372525410357591, 0.41764269012734218], [-0.84281769023217368, 1.5993841217632359, 1.4464467099840101, -1.1999024681988979, -0.021868555059603834], [-0.30529708271729883, 0.32755778066232799, -1.3229584624480721, 0.56865138987665476, 1.3717424588183385], [-0.87324862560066696, -0.59759746182414564, 0.58631394527224079, -0.20537020255701924, -0.30809548290347039]], [[0.11294233518803869, 0.70289247691547696, 0.62370670953909069, -0.50307064695621373, -0.97021285924351675], [1.3914170306563032, 0.18984126010984381, 0.15222373533909167, 0.43697936437358226, 1.1855446825266354], [-0.34708763227834882, -0.71270913421036564, -0.2447494272769839, 0.46351676369198214, 0.013424274787458168], [-0.47000914679301992, 0.75859863319257637, -0.46118516949461064, -0.15573202523448765, -0.48296970352647195]], [[0.45090810873954656, 0.41688472504512686, -0.20550778669817302, 0.17312149013691666, -0.3393348197398941], [0.64856303871077026, -0.83454849871795578, -0.74633234257758174, 0.69646898159209458, 0.20279490554641028], [0.085087120453981521, -0.26761073778858263, 0.67719338647746286, -0.26961733339045429, -0.71793475039448484], [0.39859347041805721, 0.39739476122095313, -0.38883289298667761, 0.066916388670703236, 0.061246167836705431]], [[0.030162141801815659, 0.29502739999979272, 0.074726993560794319, 0.42940418016394966, 0.16221102997252337], [0.19204254353726918, -0.6263111612104113, -0.44386902533367945, 0.29981794478294116, 0.17026946266725629], [-0.18447780331462538, 0.033635405463736293, 0.51709263511012893, -0.56650134586454726, -0.32013784678063473], [0.31324002273434476, -0.17393334776599129, -0.27366177851412188, -0.14435231670646492, -0.23941292976522474]], [[-0.89694479749709655, -0.22159202817702789, 0.89010906196089601, -0.26438570160550823, 0.33263043425000571], [-0.42590926060059603, 1.3470011572476059, 1.30582134642542, -0.98833702960116998, 0.41320860482402832], [-0.56799878966831574, 0.20265528376065486, -1.1377671560555416, 0.3219733217768847, 1.2805357396539385], [-0.85254987811355798, -0.59588422500812088, 0.32228271238310852, -0.37716578272414131, -0.64802327552752459]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[0.46226594200057519, 0.91547680777882467, -0.38778364772165524, 0.71268302738779543, -0.70484578153112132], [-0.94900467343355932, -0.015834146633042175, 0.78381830322058166, -0.2135018441496434, 0.17039053313642219], [-0.23530273989204681, 0.90014490089235577, -0.31480795287621882, 0.36665572230919435, -0.95659886529107341], [0.040127755581493174, 0.57958515029485402, -0.94715332753262849, -0.46268774294098042, 0.8096051585712265]], [[0.488188464968839, 0.28768993108601099, 0.14999204737347738, -0.012744636224949771, -0.004879945785275952], [-0.57214353410236629, -0.53069071304818372, 0.12222431748239909, 0.60514700314329328, 0.12089642534245386], [0.069690425220411523, -0.23952938571576127, -0.016322046363508782, -0.44771515341450524, 0.66722381400905484], [-0.87155678265764458, -0.087450549362240559, -0.36533278292342275, 0.40635191476921995, 0.38408025277325286]], [[-0.060530367917715155, -0.65381270821550208, 0.42741374086655848, -0.5635466938141962, 0.55744809009450602], [0.6054403298029386, -0.1408004242005976, -0.29537516139868347, 0.18402104737100983, 0.062114350949017405], [-0.1403111276669729, -0.7330936556876122, 0.30417037523284446, -0.17043056489599753, 0.90108277303132489], [-0.50518836523334543, -0.15413894418054086, 0.40480120964550925, 0.55500638561799476, -0.30572924408522656]], [[0.6243266861707657, -0.24759949838949574, 0.48648829573589691, -0.26831549417832756, 0.2736482687076574], [0.13841725612335049, -0.26737656346489519, 0.73230673331519158, -0.14208642656525761, 0.54047455100431097], [-1.0371220835894843, -0.30883916598540895, 0.31399205853589296, 0.46386894465366157, 0.55021998378188441], [-1.2088506142909219, 0.83819541050465407, -0.62516371936409154, 0.62825579797639719, 0.63699338862858457]], [[-0.71250470166485336, -1.2126337662044588, 0.40393401478937424, -0.81187319988180162, 0.81468296685375774], [1.4055659819562536, 0.29964773016776042, -0.82866287811887374, -0.15157177774916572, -0.1827212332420679], [0.067992497855442424, -0.88623808667518189, 0.3997498094182636, -0.065496942856309026, 0.72431839106851215], [0.30985125369657468, -0.46306903996581034, 1.1697856392952111, 0.35148340236887088, -1.0286253081184844]]], [[[-0.34929991487573142, -0.97623147678125388, 0.51663207718345994, -0.83675829443592431, 0.82258763555858905], [0.92157511923198288, -0.15889729118507059, -0.82624657017364211, 0.42472782935846121, -0.1312292898238443], [0.23942667671818491, -1.1241944267066377, 0.37275096950706565, -0.53596118778710133, 1.3331284009271411], [-0.37596882420633587, -0.65073420929902137, 0.94450551367334279, 0.68892479537689266, -0.78001492248058657]], [[-1.1349415857990477, -1.2154758607517224, 0.1880459513998641, -0.76602749772635481, 0.76527759057485123], [1.4810428599529191, 0.46345166194613491, -1.3461993610269536, -0.05981714368486063, -0.50721578153856095], [0.66920360186213601, -0.83864064798516758, 0.27276801117647864, -0.36020520339281686, 0.54037877947194513], [0.99210350881859555, -1.003751473692462, 1.6585698077883646, 0.061341815915440634, -1.5047686182917477]], [[0.36281178058931074, 1.1870788142137525, -0.60887178344242932, 0.91794267875560309, -0.91362510020313303], [-1.2258805032872373, 0.0055934142766373672, 0.63555432772007248, -0.10026500897509061, 0.0058636912226596449], [0.13863957534519394, 1.1146605970744119, -0.48374799026375986, 0.17572239878855356, -1.2084398691592626], [0.38036579212222532, 0.32967194268345146, -0.90000911699885466, -0.71103318181971897, 0.74059860340365258]], [[-0.62486485539889036, -0.89375305892739965, 0.27727834023260778, -0.65142133203390185, 0.64516502628293282], [0.98307066944295207, 0.13169749564095046, -0.91006019615353173, 0.15328336631110762, -0.27550102155202233], [0.39869514297941638, -0.79822570306379981, 0.2572687132368438, -0.37937125683249084, 0.75554543425115317], [0.28293136976174837, -0.70000128193687394, 1.0842354524042008, 0.29246847134645432, -0.95384827955646601]], [[-0.73956952046019186, -0.14954995361929979, -0.25620339084968713, -0.088172851706135813, 0.075787904740540313], [0.21771838827919371, 0.16644439124875482, -1.0713876239738722, 0.35822961796196334, -0.58613813743858545], [1.1378946567905355, -0.18342583851469685, -0.15561051411519897, -0.71601012969072619, 0.057768778851587155], [0.99073724633976623, -1.1152169082868073, 1.0000189976141538, -0.3086865739163806, -0.94097262443245544]]], [[[-0.7098876725624359, 0.090753666505697328, -0.4102367915008478, 0.11971578154250834, -0.12960961307057633], [-0.0043361249512249289, 0.2185004185310308, -0.94929764576232123, 0.28290177122233906, -0.60164510520946568], [1.1737039248587924, 0.089050262970734595, -0.26497007382818111, -0.64164848029092181, -0.27676382374892328], [1.1670413884866433, -1.0432735259042403, 0.83998438405224163, -0.51008709379124184, -0.81815298726298857]], [[0.27365135625597881, -0.62380000633251353, 0.62481035442059008, -0.6714079318908508, 0.65722354657001225], [0.41626679599391569, -0.45368607750085443, -0.14024225555058678, 0.46620349829540536, 0.21888184356856322], [-0.29940747626815101, -0.97276810020590188, 0.38043929440545671, -0.32085087211567054, 1.4027542963668269], [-1.1785358211643273, -0.06679840678091975, 0.16301484506963898, 0.91159675346884228, -0.043193422965133288]], [[-0.45309750853996217, -0.2021703595841485, -0.14929635060774291, -0.005191080575015895, 0.013547753168084228], [0.3919794937735786, 0.36269634256700645, -0.29400927551497213, -0.3005451035368869, -0.1961951892266508], [0.19350027650280352, 0.11642420609603921, -0.024894938559841165, 0.12947463614231064, -0.40747614484799605], [0.74642777594689402, -0.17516503718491208, 0.42805598703167336, -0.31928076243446396, -0.42831581925259143]], [[0.84439048934188432, 0.2313515702678775, 0.29289453449838188, 0.064374953256247258, -0.060083174645959525], [-0.40070329238926405, -0.35188812999759439, 0.99835935417275701, -0.08792507718226189, 0.57042920303389444], [-0.99255765013127606, 0.060779014788062968, 0.13800611255533676, 0.46734991319167007, 0.21616167677890874], [-1.2234404717277592, 0.9605767833227743, -1.0247304397600483, 0.43894929402551552, 0.9807575674996224]], [[0.9500617606987739, 0.97704168283552684, -0.14720089446260026, 0.6437004000221056, -0.63903127675345295], [-1.1619470357100192, -0.32317837615707323, 1.2170672647295633, -0.081938411109151676, 0.46885415398708985], [-0.69507422949906361, 0.74818802354941516, -0.2042553350617492, 0.44680571789653711, -0.55075410686594672], [-0.80508320526495869, 0.97084161385525081, -1.4303396936986503, -0.074459362484664338, 1.2938728908831494]]], [[[-0.3511433091583584, 0.59378988574611324, -0.64029280202359617, 0.64694759659196877, -0.63449851487047015], [-0.38335023676110502, 0.46214058870453145, 0.015671889811295803, -0.41468182888514699, -0.28060872208144599], [0.4223429614219979, 0.93070880726007188, -0.38996566397508237, 0.23201476013815867, -1.3651621455060272], [1.2646093951509694, -0.061452740803769335, -0.046387282953315456, -0.92653822145444209, -0.064126403824039169]], [[0.7696353295511289, 0.47733053066197995, 0.063420419167205033, 0.32574114048695912, -0.31553138703064831], [-0.57012496944343516, -0.18509231096590406, 1.0953192935040157, -0.28043940190089334, 0.51002637705157294], [-0.92305626081379655, 0.44136749835443156, -0.0018901861627412531, 0.61860477385412971, -0.32390479242779313], [-0.81178766735102936, 1.0307813499068539, -1.1279309990230613, 0.10181162630178886, 1.0356028132478985]], [[0.30944732287967786, -0.21888299500538011, 0.33946900052696383, -0.28110913906956214, 0.27546458076753472], [0.08628456921534855, -0.28422490953154311, 0.15369822816881235, 0.19734619708607856, 0.21998929563832037], [-0.34170671583980183, -0.41842869420285278, 0.19604439494151349, -0.049654630225126131, 0.67430803759233771], [-0.7946278183728247, 0.17386763908776945, -0.15396593145457854, 0.5013375587893002, 0.19752029056353854]], [[0.19955111789661939, 0.098384970594012633, 0.084456429046179768, -0.042076011156828429, 0.032370281954248466], [-0.23824879332620594, -0.2616791657602543, -0.011868964324284248, 0.32834325564349959, 0.032610950721064333], [0.086219394431979693, -0.16864841050854118, 0.00060587674839878564, -0.26839746816755539, 0.38299879681360749], [-0.4073972348885701, -0.1101025616064603, -0.10610695328284353, 0.21561925395024595, 0.1239486373623177]], [[-0.037587159754763844, 0.85629018839643056, -0.62872117422272356, 0.76945993659735212, -0.76035567384653613], [-0.75317583247881326, 0.26570473258488658, 0.29353581974442566, -0.28392148498598724, -0.15332210563818116], [0.29263714588990425, 1.0180895941633556, -0.4319120619894497, 0.21499953053419679, -1.3065347370137201], [0.88105398425669812, 0.11702212986389426, -0.42527252275478611, -0.83653302571914345, 0.29233866590290492]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5, 4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_constData_rank4_taggedData_rank4_offset2(self):
      arg0=Data(numarray.array([[[[0.84683541648398442, 0.0844903913289905, 0.61382428119811627], [0.15211912581739995, -0.7459251974149439, 0.31327094728366323]], [[0.41472792961123117, -0.13706567435989503, 0.77009782820656381], [0.77972996838788977, 0.68318392857317645, -0.50489143035055806]], [[-0.98560226324880573, 0.16898166612689702, 0.37933946923444073], [-0.59835688831446321, 0.88678405268088878, 0.33106054038367039]], [[-0.48818562486494188, 0.80088712762366199, -0.86027522765686748], [0.88250461606642983, -0.48085357997601164, 0.85501391223733525]], [[0.48554286843902572, -0.27896717515129987, 0.10253727361080478], [0.084018282450278869, 0.074578359205834222, -0.27759948251016486]]], [[[0.79649948356881906, 0.01237637364390376, 0.41385813315951259], [-0.98068464772253883, 0.40550601858295332, 0.42080650917665507]], [[0.9290956694750101, 0.78376427422030748, 0.67200032503015361], [-0.93640765203742427, -0.19912419879949605, -0.093197453896406879]], [[-0.58350250811220938, 0.41121910647882642, -0.014083199892927833], [-0.68186469197381205, -0.40007134139134659, 0.30153013899269321]], [[0.32714541285832932, 0.47641413607957861, -0.040787577822255505], [-0.539913481734416, 0.60411017613628504, -0.85468977924436706]], [[-0.36775740756711928, 0.48631445059290179, 0.03032058684795591], [0.35550460423013175, -0.25551787743000465, 0.49638610553498941]]], [[[-0.018749667006709769, -0.051240329860660072, -0.72028172145629976], [0.21204025219066303, 0.82102362028055698, -0.65625094906407777]], [[0.701269034467223, 0.45561931195109184, 0.11494105534630061], [0.58276848886278998, -0.23664533177284119, -0.0082121658373006667]], [[-0.13415760503399476, -0.71795456500790045, 0.30620003696265408], [0.63364923554659103, -0.48893624995685636, -0.33491127506748652]], [[0.72372704068814708, 0.075735539528343221, 0.29556960151891132], [0.52502051533845795, 0.48926557582812746, -0.73198433968195453]], [[-0.65173670239978154, 0.49861653677313189, -0.25406573359917051], [-0.67596008559789911, 0.57255423904838088, 0.52841152077226416]]], [[[-0.040810366200330961, -0.27598104130179002, 0.59197559382862841], [0.041724643268162609, 0.41818320002551546, 0.3122932285436395]], [[0.33619760073392713, -0.29526015376537784, 0.18911890634205486], [0.82947874892487183, -0.52120095046825998, 0.83489390707749189]], [[-0.619428636888399, 0.21968089989750395, 0.26805798534202974], [0.98455253502707984, 0.44773275051637285, -0.7914164180860328]], [[0.79465568602224601, -0.45589504162893912, -0.61415286245522682], [-0.51894250013366605, -0.80954158368325935, -0.064381560050483788]], [[-0.31443745892168029, 0.75598368111473402, 0.57490456476682383], [-0.49868335152066967, 0.89056011118688239, 0.3974574356805205]]]]),self.functionspace)
      arg1=Data(numarray.array([[[[-0.96196540384383655, 0.95605762657530158, 0.36002710545979699, 0.19220140741873215, -0.94865221302480052], [0.7335332606981666, 0.0062441644758517434, -0.33748148950661849, -0.22310257878254536, 0.64797330316094826], [-0.012292747964139705, -0.44420703008742923, 0.74422895326839367, -0.67351109955285793, -0.31258312444443903], [-0.63129167565386757, -0.078781808031509915, 0.15738214632674352, -0.42718195444813367, -0.35781857593080457]], [[-0.42092763142364387, -0.21463392861403174, -0.99590973646706527, 0.63829366086251271, 0.48050773678880043], [0.2525354887264466, 0.72372947123496512, 0.82083526377420379, -0.36459822773048267, 0.53305459180513104], [0.052609425154388934, -0.86167377621789387, 0.91642544656925762, -0.78466684468397885, -0.49415956960794194], [-0.13493203849205826, 0.073173728965379103, -0.26235655367153066, 0.93901807305369034, -0.27799663510087647]], [[-0.73072505660463749, -0.71320752221413697, -0.90825269100139705, -0.040927442346321952, -0.05807693728936858], [-0.93224116196182227, -0.10235956194963358, -0.28685681750081038, -0.19992847935492453, 0.86802527487871028], [0.87569308481072894, 0.10428551579678902, -0.83707243226477601, 0.77165531688403655, -0.12362449355175054], [0.15871765600755294, -0.1276471937224537, 0.30601933091843914, 0.95211067723905907, 0.18557265848042803]]], [[[-0.070585411171581791, 0.9233821174948611, -0.28539427410467, -0.69929075441011901, -0.32852257029001697], [-0.46317591149859449, 0.26301834177254668, 0.5815355953074921, -0.083869475438214103, 0.58586138698472845], [-0.65407554053706307, -0.65414704121808009, -0.57991307905669354, -0.23931503864797343, -0.88856872221911343], [-0.14712665451093243, -0.27738457508500569, 0.47700716676301225, -0.13361666972196984, 0.24927308886811206]], [[-0.43880531768985254, -0.035439582265879288, -0.20653231367423608, -0.63282129175702129, 0.22940628359508608], [0.30307393921243819, -0.34646726682628248, -0.24057637565914169, 0.81036828855313914, 0.68198526212561417], [-0.22617123536386186, -0.42145313380908456, -0.021078400381649987, 0.5126351163391909, -0.20440069945108652], [0.4046611365839583, 0.33537011894425994, 0.11971654187190972, 0.60948791463802166, 0.80363102473639203]], [[0.8935738270534479, -0.62257786561102724, 0.22386459550001359, -0.076698082709444781, -0.64605030751944015], [-0.65195316592367392, 0.65362703301718872, 0.54575322846514362, -0.98024672622261022, 0.3416247947759572], [0.27486746502788684, 0.65159350390374882, 0.71240489240444083, 0.37717208573057515, 0.69320571719366919], [0.71454540484211782, 0.86373775108994399, 0.86350781718707093, -0.28657348156443763, -0.89597000182633235]]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[[-0.22183060662506371, 0.15961907606517478, -0.88708501281212193, -0.24662403556789481, -0.22211451747435418], [-0.6190297148225099, 0.022222207039417352, -0.37975181623275622, -0.26125096829158045, 0.8020412145598883], [-0.21072648909967673, -0.98559936818250526, -0.17370057191529975, -0.32819614516902229, 0.77567796916611642], [-0.31463674788510154, 0.96198281536668162, -0.19600167880555253, 0.90705498991998446, -0.74283753200687186]], [[-0.50921445374327678, -0.95846977470035788, -0.63814087328750602, -0.51453127633661233, 0.87131753162417747], [0.72822422582114488, 0.38803577409891354, 0.068502133200187609, 0.70892036019178661, 0.41807705682305607], [-0.84216074231126448, 0.20687969901292735, -0.80003023004849028, 0.12516661225109726, -0.070909672969090787], [-0.22534759059692333, -0.010072635961560383, 0.45903794159974165, 0.55887005880277907, 0.75650126679246155]], [[-0.31313102462039955, 0.029579981241999009, 0.38951591169196353, 0.062025297440225557, 0.94022318354320578], [0.03380154365835808, -0.6212336667471432, 0.76815455008932365, -0.46064957351652103, -0.78783842487323352], [0.18211818582926909, -0.077915172150728962, -0.48015453482474157, 0.56986053108240386, 0.69713930389823364], [-0.93647244895201109, -0.76301901076444323, -0.33285594404930885, -0.83961674887912441, -0.22197477584091163]]], [[[0.34412717366438517, 0.24961123873310753, -0.89543123577358252, -0.39994641610544823, 0.39072262790427792], [0.57052491968137109, -0.66676939506144395, 0.42128117907015139, 0.079044055226295651, -0.69133620565546838], [-0.0044453399342969657, -0.66101503508652937, 0.93333491224591358, -0.1969166527926749, 0.28526763532076038], [0.90658758865971389, 0.27045116601136043, 0.28228660370957837, -0.41351183492989074, 0.23233462287006867]], [[-0.63787579941057593, -0.29383476172687262, 0.72241108710325896, 0.52165585081092658, 0.085881865914432254], [-0.75104555663045125, 0.16617265708770868, 0.12408308075887597, -0.17295119126412284, -0.015632093743304099], [0.22012799028790186, 0.059331749816009305, -0.58000250845814194, -0.68384869106731783, -0.020252274582062135], [-0.35617007032943793, 0.9404660569897243, 0.3258452518246735, 0.6388893376887157, 0.78414684395334677]], [[-0.59545097829447102, 0.65617141216249708, 0.16624307984115894, -0.97624720105124685, -0.60131634896152297], [0.3549377747461373, 0.28811522045793292, 0.69771248657327734, 0.81995276147968732, 0.96823545277584011], [-0.60322525607061306, 0.2956512537475342, 0.4780768201497323, 0.2372661964689704, -0.1388303607557273], [0.027356506214888165, 0.014361838873796051, 0.38584684364887845, -0.29795737759296848, -0.99333538928883791]]]]))
      res=generalTensorProduct(arg0,arg1,offset=2)
      ref=Data(numarray.array([[[[-0.70221822488067309, 0.32556865928323431, -0.15599465150958169, 0.5332049499137792, -1.2218863248954646], [-0.43047988311806862, 0.50681632576107782, 0.046365032882917712, -1.266772264691544, 0.81401157735656371], [0.68687415000112373, 0.034029132076921847, 0.3445359909820242, -0.46362387929307441, -0.14788136515793598], [-0.54895725910704907, -0.16065827292320511, 0.55272650334208517, -0.2627193418521056, -1.0548032811768397]], [[-1.7099690386477964, 0.88679436562467095, -0.8902824307070758, -0.97816208309672548, -0.27726555192159563], [-0.27324543867008394, -0.53706398774980424, -0.45984246079377517, 0.78663576284871439, 1.6143851384630055], [-0.14123683068777396, -1.1127811510911298, -1.2878487573237256, 0.3956691213157959, -1.3395881520014548], [-0.32012054472627643, -0.56426282847583242, 0.35464317529880274, 0.88424285308877093, 1.2283766144370272]], [[0.54873011467712218, -2.0391597939007786, -0.80593930866207641, -0.26524170871681563, 1.1802857044308501], [-0.70386437604057472, -0.17091663745620556, -0.018115246453241307, 0.52672376989498859, 0.14802669327776002], [0.63499407050451295, 0.5651563636351864, -0.33203710922622487, 1.5465983139976429, 0.7575980721143547], [1.3430484127036919, 0.79091625928540454, 0.023251124142334822, 1.4664429446454734, 0.6429580916732297]], [[1.6738540350104434, 0.27454111766388367, -0.1531666734129831, 0.074169214358226682, -0.054702533471991166], [-0.46578208881411787, 1.6222098344830786, 2.1644422842171989, -1.3129013176361968, -0.15497105605641892], [-0.93865564259662393, -0.38047121919031568, 1.1982198934726345, -1.0986787684036918, -0.22999501975462233], [0.35010487487315045, 0.53932646588681121, 0.55149555814070605, -0.51450174007315264, -1.1401166226629245]], [[-0.71128848189485294, 0.69871767528770046, 0.25797909103230332, -0.1735941788247326, -0.43176218027968383], [0.35479263851334941, -0.39454776411387404, -0.54284432450207043, 0.29839030237480263, 0.26016857082054001], [-0.078978626585109984, -0.23188331741445162, -0.2281872051972057, -0.11557691422541605, -0.3089277612127152], [-0.43314288551026259, -0.30982078385193756, -0.0097207037707731092, -0.25796252202796366, 0.2524415815858792]]], [[[-0.80652549816180441, -0.71822616639884052, 0.18888325531665262, 0.54094573991104866, -0.63034917216502295], [0.50435042607833425, -0.15181381880441974, -0.81556458289505374, -0.26659099765243244, 0.72770880173674679], [1.0186667141280383, 0.42348930835271864, 1.1176398178629974, 0.37447893399959808, 0.77397426571068451], [0.17025586503112258, 0.65681599056778972, 0.19287824769279721, 0.32300502778173829, -0.50725323005209533]], [[-1.644518735076729, -0.55881162163043008, -0.76889759748946007, 1.439321320745989, -0.22165063609698621], [0.6871169936900684, 0.26603032480818783, -0.4104917249333685, -0.61886612678777464, 0.88688818624049981], [1.2501788459464978, -0.38223709230904246, 1.3280464182490541, -0.63533056365989204, 0.047358724946916703], [-0.5950280687478593, 0.010842735423270675, -0.40474588492609309, 1.0093583972435449, -0.73556812234137825]], [[0.89162926038855739, -1.4392486435064833, -0.26209286561461559, 0.85777348932149911, 0.68937823949478649], [-0.31305356665599315, 0.45176640473903917, 0.40278447179128574, -0.57952463619794847, -0.74042716904712635], [0.63583076074127043, 0.71451669322079603, 0.57304751400271536, 0.13127664890865681, 0.87760712522925488], [0.46452251379000631, 0.39326723760723792, -0.31680450629172885, 0.38285444986536576, -0.66978516742196548]], [[-1.4761390975964133, 0.25176030881277212, -0.4816536712410654, 0.42945505433813486, 0.78907530586975838], [1.3886900543437228, -0.55894719565390605, -0.63341105444179924, 1.1341087115530353, 0.23422814330396913], [-0.033089597548530275, -1.0184190418399299, 0.40569531578844675, -0.50910401545471418, -0.56884854746101099], [-0.56410049469404366, -0.37156934286194421, -1.0092372355706196, 0.95404729736799065, 0.85960288991380362]], [[0.6574974974681399, -0.44931868695671284, -0.58182969121224903, 0.11351120340186024, 0.084691718631752289], [-0.74093920376011457, 0.85304434996098255, 1.0537121671492253, -0.82478413422634744, 0.25084899986961029], [0.018361319367416695, -0.05394349823971778, 0.29944672825871976, -0.13935113965107729, -0.048675100059939524], [0.37034325531934709, 0.30513056139745498, 0.39143426214673627, 0.29713844688032598, -0.55944809985103738]]], [[[-0.39571224761843049, 1.0820472511222614, 0.32148383186766155, -0.62433662778909393, 0.5776563908039295], [1.2232465724148041, -0.62110418630169395, -0.26147548855274605, 1.4577057074999213, -0.2047253067007283], [-1.1379752657829898, -0.93497110504820646, -0.065771181611378293, -0.38035294449122603, -0.6909208561288942], [-0.26345247728938259, -0.26062899786960358, -0.57717075295896936, -0.065758012927995629, 1.1879261704829958]], [[-0.89500151680045892, 1.0423027461604224, -0.42495766623368031, 0.16375901626485187, -0.69344229718630523], [0.18602001270142771, 0.55225961613420049, 0.49570153478574225, -0.57814932536644814, 0.97427276726807155], [-0.2139070706140031, -0.9789495208369805, 0.50441451131381732, -1.0050023402226405, -0.933715139195337], [-0.67330968391339807, -0.28468770193847509, 0.2685698137640668, 0.017955232148414192, -0.39380698057527086]], [[0.078067334759324258, 0.61838725385589566, 0.23377705406609814, -0.60459184249132403, -0.33946056587672346], [-0.78849878213559343, -0.43463036718048909, -0.32854509775711971, 0.10941118174459769, -0.28048084501406423], [-0.16391212016006826, 0.28350653222685479, -1.6098553325906775, 0.36138579895828982, -0.33639869301914799], [-0.30022249899235282, -0.71006645330026141, 0.21547216942453223, -0.61201642557965075, 0.36951320965092088]], [[-1.8498928431744981, 1.3880393126998156, -0.49806867392595167, -0.44527190776796421, -0.25468130725481292], [0.6567879160417005, -0.48079249591271406, -0.47873467096239175, 0.82180617115987498, 1.1570860223230113], [-0.4013434917348937, -1.3825197069102331, -0.47563699574114787, -0.46970215691453909, -1.3741287070711339], [-0.82248368692819285, -0.70299334871497243, -0.13858045649097767, 0.48118614552863204, 0.95473092432201989]], [[0.87136666056964751, -1.5223541336726094, -0.30750723837654714, 0.27323729834839877, 0.8846511877080292], [0.026813490624909064, 0.3520228399439112, 0.45965601629145497, 0.017102962405128763, -0.20208051076808486], [0.26963675241026819, 0.37854788074718793, 0.94094749979320524, 0.50623376263351327, 0.83863889901108624], [1.0125481106414156, 0.95618886798155844, -0.10874217592474894, 0.79257709566064571, -0.13437505418313977]]], [[[-0.18453430052128822, -0.57270291335563617, -0.30586897883853326, -0.52599398796115393, -0.24780708038985899], [-0.74768076255647664, -0.19037394965799465, -0.28848005820111122, 0.020632881458026109, 0.75661953522106584], [0.46833857001972412, 0.31761792466656946, -0.5893468307008618, 1.0230188690762818, 0.16988392131377592], [0.5431902808839274, 0.30586835720791905, 0.58677263154066073, 0.48171609081044076, 0.26783945237768697]], [[0.57887476670546179, 0.51452662126822568, 0.30114449492414008, -0.44583970885894836, -1.4032455621278621], [-1.0907247006358241, 0.71350909096540605, 0.65333563805334305, -1.3155001672228146, 0.64034594294226033], [-0.049232067263056983, 0.34587110746911359, -0.053939141649172573, 0.00038867464093117476, -0.03432559855217987], [0.12123921974678142, 0.24401751165083885, 1.2424573253422793, -0.9085663609374246, -0.96324753875346192]], [[-0.66562908337593074, 0.555427668776445, -1.2358848860636618, -0.9009282383560272, 0.96817252964350242], [-0.45314742217632464, -0.28577710314715976, 0.34539362480735319, 1.0605463051230304, 0.56020077845759908], [-0.70886233538452148, -1.2346064456029284, -1.6282608194765396, 0.14706923497565361, -1.4630468740133913], [-0.12523315622303527, -0.77586200890999646, -0.2332454386828553, 1.0942479688478213, 1.5246365049641344]], [[0.21057567186259807, 0.88519573939791496, 1.5988208497752052, 0.76699951739546013, -0.91088072800782494], [1.0772997481655757, -0.16021156269684317, -0.60838577557849749, -0.43767813964920599, -1.1393196221073254], [-0.066736072669108235, 0.61449184392691891, 0.95984202903314242, -0.96648964947399429, 0.63477055162748308], [-0.83486486637834567, -0.20072725871786568, -0.34331976962358812, -1.7579141455685974, -0.99382244373430362]], [[-0.43625881497069918, -1.6123909076626455, -1.3408875538815319, 0.15324992966478171, 0.73951042585085081], [-0.33392728224350277, 0.30639341975268303, 0.27440342762234238, 0.053481336334975593, 1.1492360522885321], [0.78108273910677328, -0.24191819205420995, 0.53112449626196334, 0.78799461486164035, 0.19024207277963812], [0.90548890036390628, 0.78699845378806343, 0.14005464180095545, 1.8870943948486676, 0.24430066865514377]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[-0.081466704327729789, 0.53505534708809588, -1.1890351763555111, -0.97003591129335143, 0.26965533366137484], [0.31626312174431193, -0.46484708409241215, 0.34581367891158704, -0.046197364848825029, 0.44074099610369655], [-0.49166476356246414, -0.91717845741031545, 0.21496297931514713, 0.6369152745734612, 1.0938112487673968], [-0.44815923528692336, -0.3104469060790489, -0.41075231477231344, -0.33283981134470608, -1.5621530179724585]], [[-0.13016717592374732, -0.1170578721444657, -0.26905599497120436, 0.55344378040741304, 1.1794497370268917], [-0.57796487833780963, -1.0742214091119771, 0.48565924685795481, -1.0307735347347498, -1.3699767169877406], [0.61977099169824768, -1.1212645145797095, -0.24202384027764232, -0.45494971661980865, 1.1469700194081931], [-0.37102484826626692, 0.65888147616625725, -0.15262855604235692, -0.082520414089770538, 0.63569319432659066]], [[-0.95489338951505465, -0.50075601032886097, 2.1456842508368754, 0.55836535527971154, 0.36611200060157034], [-0.14389095602187441, 0.44971912798405078, 0.76619466812217374, 0.27332861559418198, -0.2983564470234113], [0.13262920700988431, 1.5228273570240471, -1.0606643092477073, 0.15074211470315002, -0.74665244611266202], [-0.93246608945288789, -0.56235913596905596, 0.39226820098622883, -0.40271382866865035, 1.0032691470403454]], [[0.071149886100508541, 0.051613485452988939, -1.408563559656097, -1.7835415743949392, -0.21320652758618236], [2.0244587411756845, 0.41236696436345943, 0.48809819829804069, 1.9455815364497311, 0.84630955992061041], [-1.3538121702732557, 0.35477845485477971, 1.3684602443674143, 0.12814520573454186, -0.89241065791258833], [1.7734707807011398, -0.022559369001525317, 1.1720102978863158, -0.19981391260060971, 0.13813511481498963]], [[0.14887637412445451, 0.16482190889348844, -0.2802628991561123, 0.30645784420949462, -0.04834930851422542], [-0.60685796445587259, -0.28476758742797575, -0.27376655101270064, -0.60572353875377194, -0.13601954488186238], [0.33479067500925841, -0.6774377173295536, -0.0079429545497388676, -0.26924861441864745, 0.52888569249389916], [-0.14391517935766227, 0.48053036012047667, -0.31644652049603839, 0.29403324595394331, -0.24072904480398766]]], [[[-1.1592943726528804, 0.039695574711188564, 0.68777758340554718, 0.015810446065622374, -0.37839923853855562], [-1.184753426650655, 0.6079151286248482, -0.052942902192512353, -0.1925645517856947, 1.397030027464464], [-0.26311375606201742, -0.017996144510114401, -1.2962936380808177, -0.0083659976918465384, 0.55907553895077911], [-1.662957573950355, 0.57249342477336163, -0.27052421490199285, 0.92111917130559195, -1.0020457653325621]], [[-0.95536239915983789, -0.81941698539243457, -0.3834383426416984, -0.22910520114051167, 0.78143653779196265], [-0.39943889981236097, 0.47173326871034127, -0.2671600269752018, -0.1126535552835696, 1.1036673648886475], [-0.71690819274668482, -0.22631900294718235, -1.9141285265741981, 0.47457444169282526, 0.88342497000349096], [-1.8788198528859086, -0.068730105853217774, -0.41118502834547321, 1.0043067088927395, -0.52754179089554942]], [[-0.23454886932791488, -0.34248656238257214, 0.62138924980006438, -0.29891103343720971, -0.0074283960912286118], [0.67866451397548955, 0.63039098150058637, 0.11241994625005529, 0.71298554720346252, 0.48462737174723758], [-0.49284433517873166, 1.1774035274383021, -0.48108205553889144, 0.71435040168400377, -0.71986051662978134], [-0.36331519259164546, -1.1110497873240006, 0.1013221574824395, -0.35111164874470679, -0.023994560599236714]], [[-0.36461627025125576, -1.2787164389735879, 0.16767248786034103, 1.0371208176122599, 0.65895944955990393], [-0.92206514694993702, 0.43160948228382401, -0.87175311112179865, -0.57690236498786918, 0.029973230723825184], [0.17336847244997222, -0.080652189886306624, -1.6812996072579192, -0.58057094140025334, 0.14394493827962559], [-0.90012045525845752, 0.75088118417884098, -0.11719576224050948, 1.4611196990309003, 1.3237099172542073]], [[-0.18579894206628678, -0.034389565999541238, -0.39269281228415731, -0.91771626987074784, 0.352400944959403], [1.1537395920305722, 0.025215571393017625, 0.66065775488468659, 0.90617383375815086, 0.12331229385822212], [-0.68379639237751277, 0.35731058519139325, 0.37757140232128694, 0.42135183406201271, -0.26093273098701719], [0.40460908265697648, -0.51884019758321198, 0.49384937835349318, -0.54540218954658504, 0.023505703091290076]]], [[[0.19581710423560511, -0.59411717872368863, 0.062921828123991289, 0.97046337130237903, -0.1697332079687377], [-0.77863462816344908, 0.23313735383315468, -0.81634830733874564, -0.36296074632783232, -0.26382565149537635], [0.4915820806405114, -0.22147049231301119, -0.20193238036684746, -1.1696364857790129, -0.37807878495590225], [0.57382649394223983, 1.352134324227988, 0.2940741766480216, 1.1915138271176304, 1.4799936202172068]], [[-0.067175739468700965, -0.11174986903850311, -1.5622127213533727, -0.74875741876798707, 0.56161270837068744], [0.40887239775354117, -0.30928714150961012, 0.063611183598432805, 0.16710193292542394, 0.25523466514876025], [-0.56027688252476826, -1.0075548351490393, 0.13573749205527252, -0.062500786395481886, 0.76395874433995914], [0.18143515319970477, 0.51725283574098901, 0.1176671710514202, 0.40449016239384827, -0.24377634518234645]], [[1.0288321414341957, 0.75785426135782707, -0.27984382729580259, 0.23996271560641064, 0.099106288033150858], [0.18041908513760202, -1.0720338943143817, 0.20957812892949065, -0.75493783383689017, -1.4036909457520199], [0.78024990507064484, -0.5870402554416011, 1.1655431599058095, 0.25877658749605753, 0.39746844878538834], [0.65669333411710995, -0.64872877921248984, -0.51486509547830339, -1.254630644341048, -0.41494485760081229]], [[0.012781494886700773, -0.44134605123251452, -0.81356451505479654, 0.5607218447743394, 0.87045139930226223], [-0.71059772224566542, -0.61780775653409314, -0.2714292499428545, -0.91484982933771519, -0.70008600798366405], [0.3844572370809235, -1.2550956841810044, -0.47192163670181014, -0.67125546019876603, 1.0035461951337206], [-0.23987993805669675, 1.0615423310045617, -0.18027105169575469, 0.76420585844309996, 0.68681587638259423]], [[-0.94224961955584563, -0.57968878849038308, 1.2677356866076688, -0.058414555876490581, -0.19234834068833945], [0.12984803113514898, 1.0349279715570883, 0.24144709168334594, 0.92159945285890088, 0.85589541246524203], [-0.51855816470136218, 1.4023164497049123, -0.87406919301271113, -0.0015328955224893637, -0.99579836888212625], [-0.47166437350444335, -0.07488231058780645, 0.64082820694223352, 0.3886908533390695, 0.68476251379429465]]], [[[-0.47412506867239562, 0.36797206822894069, 0.75955617944192022, 0.085367858108402195, 0.18961672430892187], [-0.3351285837928335, -0.34410625144821527, 0.73867941829525186, -0.27064163881745124, -0.34750351657193906], [0.25231492941155387, 0.026564725105453574, -0.11066189106185448, 0.096100034636051296, 0.36068122456251894], [-0.58191077485144149, -0.079110957731682655, -0.047190789482964651, -0.53141832810910572, -0.282468985385605]], [[0.13732207995141171, 1.2502833062915668, -1.0166206493331762, -1.3379610869428231, -0.37682668558570931], [0.74427994926709706, -0.62372222963162582, 0.8646624182048821, 0.45601582712423278, 0.24028034595735281], [-0.40979456130595959, -0.73955896510143937, 1.5626357909937973, 0.35165244139752211, 0.54483041954502409], [0.74412249751740167, -0.071758654505232375, 0.12208080327102469, -0.94360155811845736, -1.5603956154618968]], [[0.46606934466760269, -0.70660987602444647, -0.1760081433385528, 0.6687718867141792, 1.4800609534610418], [0.49702294019813176, -0.90513534164209364, 0.37433611615523232, -0.45445516787618601, -2.0700833812021928], [0.56592583747185066, -0.22315230966416449, 0.084007781237780299, -0.30428613768863055, 0.072485103175773946], [0.60582524760987244, -0.12664116808602538, 0.25147828225532759, -0.54941281709739032, 1.9327974086567841]], [[0.6243205386920534, 0.6117294329631574, -0.78407168172277852, -0.15140254120771776, -1.3847485006262186], [-0.55558707777367833, 0.41522984601459739, -1.1687569790430214, -0.2016865667047458, 1.2396826381129811], [-0.032425804220063803, -0.55371295777693208, 0.47599561478735292, -0.027330442547800166, 0.097869851776638095], [0.24395060199025781, 0.33502786542486807, -0.59571975802027166, 0.69822768626166398, -1.4902741070793919]], [[-1.4715700744489841, -0.88312633928453876, 1.1764048424779898, 0.00022501594026769212, 0.91171999992828945], [-0.047685412530891813, 0.52421822109126937, 0.79053879587221587, 0.48570470700962742, 0.32660464130869626], [-0.50720123883482604, 0.92149772110556138, -1.6181853592892563, 0.10893040285199998, -0.11219344462077219], [-1.3682257550468475, -0.040381010653841788, 0.5200659121557113, 0.31134052870485623, 0.8655242020329309]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5, 4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_constData_rank3_taggedData_rank0_offset0(self):
      arg0=Data(numarray.array([[[-0.79171061973518619, 0.16946859689700111], [0.86606689928544878, 0.80219936571494554]], [[0.18259118063551893, 0.54336358717326783], [0.42148273502818268, 0.88241367107147672]], [[-0.80755363333021424, 0.99462657731057691], [0.93925778241661484, 0.7885008670907685]], [[-0.24576577886403084, 0.45983648036990021], [0.43325139756643893, 0.19894093890541353]], [[-0.92781831408156723, -0.49370803978105315], [-0.81581179982467367, -0.4585427682303449]], [[-0.38355175987267609, -0.38582230031327169], [0.78358990619263591, -0.40461874903554174]]]),self.functionspace)
      arg1=Data(-0.758605299978,self.functionspace)
      arg1.setTaggedValue(1,-0.632982774957)
      res=generalTensorProduct(arg0,arg1,offset=0)
      ref=Data(numarray.array([[[0.60059587217975174, -0.12855977578585159], [-0.65700293993320535, -0.60855269047011706]], [[-0.13851463735929256, -0.41219849704454287], [-0.31973903664148129, -0.66940368764761227]], [[0.61261446626055893, -0.75452899304649579], [-0.71252593178655721, -0.59816093681207894]], [[0.1864392223994043, -0.34883439113170372], [-0.32866680641665164, -0.15091765063618903]], [[0.70384789047866292, 0.3745295356195143], [0.61887915513135427, 0.34785297424599154]], [[0.29096439785519107, 0.29268684186724059], [-0.59443545584677226, 0.30694592748871397]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[0.50113918504281618, -0.10727070273191412], [-0.54820542920801152, -0.50777838057890212]], [[-0.11557707220132528, -0.34393979121946433], [-0.26679131121455807, -0.55855265417471844]], [[0.51116753975187668, -0.62958149095192129], [-0.59453399751392233, -0.49910746690702745]], [[0.15556550469479527, -0.29106857137094827], [-0.27424067188555468, -0.12592618756087751]], [[0.58729301110317245, 0.31250868503913698], [0.51639481689559563, 0.29024967387085715]], [[0.24278165730380472, 0.24421887029254474], [-0.49599891325002271, 0.25611669856410207]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_constData_rank4_taggedData_rank1_offset1(self):
      arg0=Data(numarray.array([[[[0.96856454990444618, -0.028529661442104892, 0.74578533611813524], [0.30057409833406012, 0.77635743666761137, -0.61024861465494906]], [[-0.70252922267335616, -0.014978577503766743, -0.54967985881244585], [-0.24065648866266431, -0.70453722731394719, -0.51675253802718468]]], [[[0.95468412155521554, -0.24045585045982998, 0.86096742219310385], [-0.43212128061008115, 0.79759591553032871, 0.9874710813956542]], [[-0.96402232426211709, -0.43521238933868678, -0.92655327796460796], [-0.74934889334543753, -0.14697521367712807, 0.48652555303983513]]], [[[-0.78467794012163194, 0.34213860238991467, -0.50216867326176606], [0.84651857783723505, -0.90478234162803584, 0.56478700818023064]], [[-0.73266143160697017, -0.1798496858320322, -0.77699263399501395], [-0.62377532866557628, -0.42152214665806986, 0.32132227080676268]]], [[[0.64299932791098069, -0.85263841568991339, -0.40244804446472782], [-0.1805376512483805, 0.49670841322246129, -0.5982046835822532]], [[0.32672809214318432, 0.035791193045824787, -0.10747884227177584], [-0.9060626277208168, -0.23580960104288851, 0.48457334095646032]]], [[[0.94127041705620074, 0.49596383088415785, 0.28237800496100873], [-0.62180166343327636, 0.85917460873108742, -0.43135230245227207]], [[0.46643931404258199, 0.29826287295741594, -0.042976217419515184], [-0.95294555196973429, 0.27310713675649612, 0.29821354571222392]]], [[[0.45644011536259921, -0.93762635747110323, 0.95687765569179239], [0.41590265596170894, 0.40899729748517144, 0.74396292000771624]], [[0.69797571918889112, 0.71841451375687515, 0.88772549720371718], [-0.55098133388725912, 0.81897029499976814, -0.65458530864961229]]]]),self.functionspace)
      arg1=Data(numarray.array([-0.55153438622809103, 0.64718166335664451, -0.88585990490775446]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([-0.81486046967229209, -0.49318218569414496, 0.63298046021828269]))
      res=generalTensorProduct(arg0,arg1,offset=1)
      ref=Data(numarray.array([[[-1.2133218552361482, 0.87726212612942978], [0.8647145103881444, 0.13453710829425403]], [[-1.4448562570407466, -0.12024184168755003], [1.0708263815861494, -0.11282146144884786]], [[1.099053789028251, -1.552764810448362], [0.97599917502824896, -0.21341437723766121]], [[-0.54993560137259456, 0.95095884385843688], [-0.061827176920279781, -0.082151048314714092]], [[-0.44831165733220874, 1.2811047608217683], [-0.026156150668468554, 0.43815674790822157]], [[-1.7062165535910567, -0.62373598636457928], [-0.70641333442929999, 1.4137785888406347]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[-0.30310709797583407, -1.0140870573873133], [0.23191384993419545, 0.21647240971151543]], [[-0.11437025465369977, 0.58380835230541939], [0.41369256103523222, 0.99106151677513488]], [[0.1528034131835645, 0.11392714726204051], [0.19389434437269687, 0.91956778974738307]], [[-0.35819040528299678, -0.47650662151456302], [-0.35192139247878496, 1.161337169195223]], [[-0.83286482073600032, -0.19008559484111248], [-0.55438399999155918, 0.83058943282419018]], [[0.69617046843277786, -0.069698823199825455], [-0.361149168719615, -0.36926836151568454]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_constData_rank3_taggedData_rank1_offset0(self):
      arg0=Data(numarray.array([[[-0.2863520544782836, -0.95397118120497226], [-0.13772242080947517, -0.31499255464567288]], [[-0.49804960454684322, 0.30459492532216781], [0.45928087666626194, 0.704575788877571]], [[-0.67353897703280796, -0.73909850185921044], [-0.30862800217180353, -0.47787249960935041]], [[0.30345753162326927, 0.75630963070216506], [-0.051412362727160987, 0.19969846123687818]], [[-0.18604963610954428, -0.566395650656635], [0.70112927012678594, -0.59563652901795838]], [[0.10092929709284326, -0.83520068694761784], [0.44066652530977124, -0.062349454773188207]]]),self.functionspace)
      arg1=Data(numarray.array([0.73582381100635019, -0.37004768082092987]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([0.21067628392874083, -0.57909989611089707]))
      res=generalTensorProduct(arg0,arg1,offset=0)
      ref=Data(numarray.array([[[[-0.21070466001570864, 0.10596391365799741], [-0.70195471014447219, 0.35301482317490301]], [[-0.10133943654104828, 0.050963862417590454], [-0.23177902199800504, 0.11656226432249127]]], [[[-0.36647675808786384, 0.18430210109634057], [0.22412819876375215, -0.11271464570529252]], [[0.33794980499090638, -0.16995582325575376], [0.51844364211469984, -0.26072663663672224]]], [[[-0.49560601694159934, 0.24924153639349214], [-0.54384627634712823, 0.27350168651122453]], [[-0.2270958327413326, 0.1142070764400728], [-0.3516299638376828, 0.17683561020854083]]], [[[0.22329127739761404, -0.11229375580483478], [0.55651063476407236, -0.2798706248238701]], [[-0.03783044067474043, 0.01902502559271034], [0.14694288279942361, -0.073897952444215126]]], [[[-0.13689975227846954, 0.068847236359914785], [-0.41676740620358654, 0.20959339695254936]], [[0.51590761155279241, -0.2594512603660884], [-0.43828354075658865, 0.22041391617532399]]], [[[0.074266180029048071, -0.037348652316093266], [-0.61456055242491781, 0.30906407722501344]], [[0.32425292203636213, -0.16306762570629843], [-0.045878213425375416, 0.023072271139267752]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[-0.060327586732845134, 0.16582644499951596], [-0.20097910343137501, 0.55244461192858918]], [[-0.029014847829810515, 0.079755039582908319], [-0.066361460877971193, 0.18241215567101524]]], [[[-0.10492723989810783, 0.28842047425115025], [0.064170926970426631, -0.17639088960997382]], [[0.096759588375582392, -0.26596950796315399], [0.1484374089468877, -0.40801976614125474]]], [[[-0.1418986887624375, 0.39004635162633899], [-0.155710525828998, 0.42801186564238841]], [[-0.065020600613906923, 0.17872644399460513], [-0.10067640240943659, 0.27673591487802951]]], [[[0.06393130509257873, -0.17573222503710451], [0.15933650249585044, -0.4379788285672947]], [[-0.01083136552735478, 0.029772893914114685], [0.042071729719673191, -0.11564535815578215]]], [[[-0.039196245961853261, 0.10774132494250729], [-0.11932613091374114, 0.32799966245292128]], [[0.14771130918398157, -0.40602388749073082], [-0.12548649050571709, 0.34493305207415503]]], [[[0.021263409251060083, -0.058448145461011396], [-0.17595697706085572, 0.48366463104311536]], [[0.092837986004053019, -0.25518993902643849], [-0.013135551436598383, 0.036106562781724368]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_constData_rank4_taggedData_rank2_offset1(self):
      arg0=Data(numarray.array([[[[0.0020340447283910823, -0.27701048792302707, -0.76283555959445981], [0.025691655614195064, 0.62115273580168173, 0.027134793369653742]], [[-0.36768354562872552, 0.39773532208959383, 0.4920425638732826], [0.97065168932289603, -0.88283119123949505, 0.10951454269202032]]], [[[0.0097626590821797699, -0.10880789030373705, 0.18512368322577699], [-0.5730394881250751, 0.06401449605723597, 0.71639671833740914]], [[-0.94690098741976048, -0.81632224376522022, 0.59594447841654907], [0.14779969632203493, 0.9177565985041114, -0.17324689138578298]]], [[[0.21755014480559942, -0.5397639327800603, -0.78355481768010637], [-0.69757435710086857, -0.51118208470670057, -0.41321740486000946]], [[0.94050522802917391, 0.13704149514114206, 0.28915032271121732], [0.18370876958301174, 0.0057581694631207991, -0.81885293747901744]]], [[[0.27298366444792865, 0.84807961882748661, 0.62079874977426819], [0.34534356117274911, 0.65884947308481268, -0.52032590222564434]], [[-0.38000299310736452, 0.98241569359945791, -0.79281263966193261], [0.41384071510395648, 0.3816689850459607, -0.73086629065010422]]], [[[0.22704265077341446, 0.29463616117181624, 0.91231728091706721], [0.81463453085303961, -0.26023961417960306, 0.50099806493829191]], [[0.39197362520624379, -0.099331393311526961, -0.71170551325588094], [0.58198402421729023, 0.803687663338845, -0.56027514286668412]]], [[[0.050655715645647748, 0.29701581171903779, -0.44122177736547918], [0.86536858931772498, 0.21874948895883195, -0.79359770285306452]], [[0.87921198514997045, -0.082240877367720788, 0.84492779170030841], [-0.24205843548270778, -0.07808409981710418, -0.79550465441802487]]]]),self.functionspace)
      arg1=Data(numarray.array([[0.66541445281728362, -0.51568914252001519], [-0.54183361025838561, 0.79661445653059482], [-0.18686130579621429, -0.18177421334558419]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[-0.26535329648521744, -0.74636851446390162], [0.014066258067917392, -0.40481069669656233], [-0.9997502531831941, -0.91672802685096477]]))
      res=generalTensorProduct(arg0,arg1,offset=1)
      ref=Data(numarray.array([[[[0.29399152428432551, -0.083055660314587026], [-0.32453627332037266, 0.47663793548048128]], [[-0.55211202681222238, 0.4170114698328089], [1.1037692438738675, -1.2237375468177796]]], [[[0.03085953329770915, -0.12536314758135933], [-0.54986078919765757, 0.21628266532890275]], [[-0.29912973736149051, -0.2703148810788274], [-0.36655017670176854, 0.68637129267990971]]], [[[0.58363932734624269, -0.39974193899936505], [-0.10998608082373912, 0.027628752169625057]], [[0.49754107674008052, -0.42839917085340834], [0.27213442979352886, 0.058696771733773898]]], [[[-0.39387403096865431, 0.42197256841966857], [-0.029961414297164923, 0.44134092156134125]], [[-0.63701932066598488, 1.1226828554194195], [0.20514513833661985, 0.22348251262887031]]], [[[-0.17904311210243443, -0.048207760546948475], [0.58945900766107784, -0.718477350642033]], [[0.44763622433475891, -0.1518956567665555], [0.056489337677165685, 0.4419499420937319]]], [[[-0.044778826794894561, 0.29068722836006344], [0.60559564403337751, -0.12774658237674896]], [[0.4717169230433032, -0.67250043121433989], [0.029888446802662255, 0.20722621706391811]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[0.7582088023571828, 0.80993139902487366], [-0.025208087369395227, -0.29549994015451075]], [[-0.38875898923002861, -0.33764929979843228], [-0.37947094865074626, -0.46747940046423198]]], [[[-0.18919852280993171, -0.1329480123233947], [-0.56325943892561514, -0.25495607131050163]], [[-0.35601494407051359, 0.4908740537408578], [0.14689388804566469, -0.32301044692225733]]], [[[0.7180390205093572, 0.77443629722186202], [0.59102744120558814, 1.1063874887041998]], [[-0.53671660992099568, -1.0225115578164659], [0.76998169986002152, 0.6112200276165296]]], [[[-0.68115151572993882, -1.1161617264107333], [0.43782544682705093, -0.047465537283041426]], [[0.90726859680028416, 0.61272345490553537], [0.62623841558804572, 0.20662424501880994]]], [[[-0.96819152012652543, -1.1250761764508037], [-0.72069949803143585, -0.96194875262672275]], [[0.60611905247313846, 0.40009402904208202], [0.41700871468395284, -0.24609598830559465]]], [[[0.43184782355657825, 0.2464373604605048], [0.56684808326665181, -0.0069227452502861331]], [[-1.0791753936475434, -1.3974931437080444], [0.85843863236119211, 0.94153548594796521]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_constData_rank4_taggedData_rank0_offset0(self):
      arg0=Data(numarray.array([[[[-0.032087288197499841, -0.35330250997053381, 0.91804903926826875, -0.98231522734277643], [0.089506036758075336, 0.6588583660109335, -0.41521364897189605, 0.15427703723920971], [0.58299181576236814, -0.72284388496413698, 0.63652331142126051, -0.52588802123469169]], [[-0.98561757607182598, -0.65743379623012577, -0.98876239210785677, -0.94139957163733512], [0.46929505956959505, 0.46965939382321142, -0.66399422323415558, 0.75222689496351025], [0.38795749376342559, -0.56035912385425712, -0.64357752967415283, 0.3897103188919766]]], [[[-0.74559538713686413, 0.77074778295006241, -0.94059727196303733, -0.61915823675059123], [0.12640196557846872, 0.64706229140308857, 0.90047095345803307, 0.38090441932101027], [0.23967143354217679, -0.79185631809109536, -0.78019261524570549, -0.48159574535006677]], [[0.1670372569246974, 0.73019088807557986, -0.41209634218135238, 0.4195277911879669], [0.022626577952166604, 0.29603998289647215, -0.60145816284247622, 0.099229829400991454], [-0.89247339682154303, -0.47802502736571451, -0.95891148425488204, -0.74803594220844505]]], [[[0.062120404436872834, -0.24592664840252376, 0.56530355565819357, -0.53024093628139246], [0.54030431783058641, 0.05975400820973964, 0.79554111833011376, 0.39411975541988431], [-0.0039267804089355707, 0.32773997709254221, -0.43796776179881225, -0.85654904461592207]], [[0.91665618172455576, -0.64446416155130848, -0.37239372275152172, 0.61988182003546477], [0.07284057037139835, -0.39900628985139863, -0.87374610880806225, -0.071798252768016546], [0.074671846696231503, -0.51076315370803771, 0.42873915403637897, 0.60464964234746499]]]]),self.functionspace)
      arg1=Data(-0.633837053625,self.functionspace)
      arg1.setTaggedValue(1,0.764134816039)
      res=generalTensorProduct(arg0,arg1,offset=0)
      ref=Data(numarray.array([[[[0.020338112209916388, 0.22393622195800567, -0.58189349813297131, 0.622627789429821], [-0.056732242620380631, -0.41760884546848726, 0.26317779588919082, -0.097786502725679944], [-0.36952181479025104, 0.45816523827644606, -0.40345206027481761, 0.33332731391602677]], [[0.62472094041828374, 0.41670590035593702, 0.62671424134875386, 0.59669393077035315], [-0.29745659783831491, -0.29768752638816176, 0.42086414207869249, -0.47678927876107985], [-0.24590183477871091, 0.35517637603561381, 0.40792328518785786, -0.24701284029371137]]], [[[0.47258598337914798, -0.4885285038329929, 0.59618540350867211, 0.39244543250958414], [-0.080118249434652872, -0.41013205629471133, -0.57075185601464584, -0.24143133485513327], [-0.1519126352744298, 0.50190787555312288, 0.49451498850724462, 0.30525322827097484]], [[-0.10587440277473593, -0.46282204108157599, 0.26120193133782776, -0.26591225908034399], [-0.014341563502815445, -0.18764111051426624, 0.38122646981472152, -0.062895542699226079], [0.56568270827997469, 0.30298997490444757, 0.60779362986719587, 0.47413289761492816]]], [[[-0.039374214118254758, 0.15587742223130283, -0.35831034012207014, 0.33608635276390714], [-0.34246489687455139, -0.037874304505939566, -0.50424343847981867, -0.24980770455070642], [0.0024889389246317093, -0.20773374143542978, 0.277600195721252, 0.54291252272458068]], [[-0.58101065341134506, 0.40848526532452412, 0.2360369400172331, -0.39290406640692066], [-0.04616905250856445, 0.25290497113721411, 0.55381265922312506, 0.045508392989895563], [-0.047329783298669735, 0.32374061244646546, -0.27175076216805139, -0.38324934778086789]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[-0.024519014063991179, -0.26997074846249774, 0.70151323373616115, -0.75062126553801134], [0.068394678932523753, 0.5034566163076083, -0.31727920527407688, 0.11788845546984596], [0.44548434388989716, -0.55235017906208284, 0.48638962347750453, -0.40184934636335468]], [[-0.75314470517658072, -0.50236805294021591, -0.75554776859975004, -0.71935618849241345], [0.3586046940122864, 0.35888309450015027, -0.50738110362207833, 0.57480276000262998], [0.2964518281279182, -0.42818991602222239, -0.4917799972444783, 0.29779122283507231]]], [[[-0.56973539398945372, 0.58895521533711537, -0.71874312337838575, -0.47312036533852686], [0.096588142714287992, 0.4944428250071588, 0.68808120636923664, 0.29106232838635288], [0.18314128677958649, -0.60508498195396421, -0.59617234052586709, -0.36800407627830234]], [[0.12763898359183501, 0.55796427993308417, -0.31489716262314721, 0.32057579154272081], [0.017289755981073927, 0.22621445787082378, -0.45959512261887037, 0.075824967434921134], [-0.68196999490004973, -0.36527556634820169, -0.73273765061891605, -0.57160030709010956]]], [[[0.047468363816646354, -0.18792111423618299, 0.4319681285091414, -0.40517556030179935], [0.41286534051062429, 0.045660118070950231, 0.60790066610674742, 0.30116062680516131], [-0.0030005896254080532, 0.25043752710427936, -0.33466641509320616, -0.65451894663608257]], [[0.70044890279322736, -0.49245750353082307, -0.28455900882886187, 0.4736732805188027], [0.055660015840933982, -0.30489459789405537, -0.6676598221189568, -0.054863544670819483], [0.057059357838527183, -0.39029190849825873, 0.32761451459836188, 0.46203384322330759]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank0_float_rank0_offset0(self):
      arg0=Data(-0.692655425443,self.functionspace)
      arg0.setTaggedValue(1,0.564295379758)
      arg1=-0.725721761747
      res=generalTensorProduct(arg0,arg1,offset=0)
      ref=Data(0.50267511563598,self.functionspace)
      ref.setTaggedValue(1,-0.40952143714389161)
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank0_array_rank0_offset0(self):
      arg0=Data(0.245713138186,self.functionspace)
      arg0.setTaggedValue(1,0.687580546117)
      arg1=numarray.array(-0.0399848165811)
      res=generalTensorProduct(arg0,arg1,offset=0)
      ref=Data(-0.0098247947619505074,self.functionspace)
      ref.setTaggedValue(1,-0.027492782021224738)
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank1_array_rank1_offset1(self):
      arg0=Data(numarray.array([0.99459171047844008, -0.95835135329534649, 0.83178389144412446]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([0.040656915396596993, 0.12208077426248032, 0.54812433327978205]))
      arg1=numarray.array([-0.28426039696299576, 0.34100847484743868, 0.82236895906039376])
      res=generalTensorProduct(arg0,arg1,offset=1)
      ref=Data(0.074504285178176866,self.functionspace)
      ref.setTaggedValue(1,0.48083386512448195)
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank2_array_rank2_offset2(self):
      arg0=Data(numarray.array([[-0.077791709799045261, -0.74445111795404229, 0.53696307871965887], [0.37836014249047212, 0.77477204428070356, 0.93984588273707903]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[-0.70282657706325713, -0.89527327069356333, -0.058834092784713743], [-0.90012458997747169, 0.33778606597114513, -0.56453817818847218]]))
      arg1=numarray.array([[0.90457553189219086, 0.88857326007673443, 0.88819989975901836], [0.9148356737203498, 0.2393360553011652, 0.18094404876415005]])
      res=generalTensorProduct(arg0,arg1,offset=2)
      ref=Data(0.4466904785133532,self.functionspace)
      ref.setTaggedValue(1,-2.3283035736709197)
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank3_array_rank3_offset3(self):
      arg0=Data(numarray.array([[[-0.67097913599214376, -0.86319056314503073, -0.35022445244296407], [-0.34887419444989831, -0.31566359150815382, -0.97865357280925869], [0.32574463347354943, -0.072916972537710123, 0.85728669225658072], [-0.025511353821861649, -0.65069006938682694, 0.37295257651255742]], [[-0.71723646590279455, 0.32303121636027421, 0.62256856393962279], [0.90191045149494853, -0.3325410603068002, 0.54737291209275485], [-0.12236219115202918, -0.74260739097611594, 0.95208137996482645], [-0.59763302304099941, 0.0014608996288334453, -0.13109510549993564]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[0.98740413001985261, -0.41578940564488454, 0.76632255951109962], [0.50550267474194088, 0.86102739566909769, -0.24776307826986121], [0.11458416044249198, 0.59464010403583756, -0.84281539225187463], [-0.92555320786253326, 0.2771715087384039, 0.61475915686318117]], [[-0.52235621769537888, 0.84306944212326873, -0.32413773435067017], [0.66794735442997699, -0.83367595014389906, -0.88196789851964219], [0.64561166044273777, -0.7937977930160609, 0.99728053721137488], [0.58411885679254105, -0.61960464452763353, -0.69636256547685216]]]))
      arg1=numarray.array([[[0.6346670518229518, -0.61814787727016784, -0.25857597562900203], [-0.95256354286075262, -0.2768074434045209, -0.59249143679791483], [0.90414804135342419, 0.41790681166910937, -0.43928850869305935], [-0.029860872738189048, 0.66805759535456155, -0.20597499786128215]], [[0.36761536588046795, -0.34671915124094577, -0.70286936088169893], [-0.50970576482076679, -0.65079494458723008, -0.08994354460920273], [-0.94345256189265481, -0.60118179213267853, 0.61821397609846351], [0.97145609258861376, -0.90399562508549702, -0.81656612821550212]]])
      res=generalTensorProduct(arg0,arg1,offset=3)
      ref=Data(0.14438426362636256,self.functionspace)
      ref.setTaggedValue(1,3.1267506970427981)
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank4_array_rank4_offset4(self):
      arg0=Data(numarray.array([[[[-0.049758354017876538, -0.83722248369002039], [-0.15614663899841918, -0.40832327713221561], [-0.73572474190686266, 0.88582802889764478]], [[-0.071655430045535429, 0.16534987736215423], [0.20753950233827445, 0.28811530224536508], [0.05081248643709313, 0.76588050026778776]]], [[[0.42611275828577599, -0.97536644824720065], [0.95683809216360238, -0.63675069916354388], [-0.4095583530033795, -0.3658693625093723]], [[-0.047095300660642492, -0.035633417362237907], [0.32324618975365382, 0.70901590894420208], [0.50982936104217136, -0.34048103407697483]]], [[[-0.045439485126209656, 0.70359873416867891], [0.15458048141655212, -0.01773027315418485], [-0.46810952797882011, -0.84218644124469555]], [[-0.090852561001937726, 0.85430709076100553], [-0.00089315416373558776, -0.53386107136050054], [0.79773407543059904, 0.00029547909712901443]]], [[[0.7520793522369158, -0.23088022560857469], [-0.20532968538127494, -0.30002683620244364], [0.41914820300064326, -0.70940368333991777]], [[0.7096184844358826, -0.49434086013529432], [-0.42291410128614859, 0.40323142863234529], [0.63449056825984518, 0.61309214886804431]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[-0.032050135243490985, -0.13355283024643883], [-0.24712766135361153, -0.88272401870279049], [-0.25988610870289186, 0.091424928444767017]], [[0.99420739676811665, 0.053846755413239134], [0.86582333317218274, -0.14704160327664573], [-0.59661309016978414, 0.54603208891382748]]], [[[-0.020965021137331785, 0.71703475800511596], [0.014299175987177115, -0.1881471407106976], [0.28619814965103862, 0.35947186474921144]], [[-0.60854227568589381, -0.0078004124438406652], [-0.51042768983338394, 0.51480800048377939], [0.4678530285962208, 0.86201212828938867]]], [[[-0.84208041944580558, 0.1691528617907041], [-0.84111552892199937, -0.67265835138750019], [0.1909031025546275, 0.72775677754589485]], [[-0.58168598063608057, -0.45171334672787866], [0.94471439030745263, 0.19204597160510439], [0.09152876816811939, -0.28208339658540615]]], [[[0.0044490828379348812, -0.088965457782822499], [0.47734802242839081, -0.27243653769622056], [-0.69767216349493388, 0.52656678786959699]], [[0.50388221016517987, -0.03602570087866197], [0.67524692633124195, -0.8525431421584968], [0.49735828994380249, -0.75279182327091743]]]]))
      arg1=numarray.array([[[[0.80818938582558131, -0.52866528941316648], [-0.4176221941200684, 0.27208093064051186], [0.9009750503943017, 0.48912249551897569]], [[-0.39973996353790486, -0.30902330851885296], [0.012028519726984932, -0.093833762235650431], [-0.69518524558603789, 0.55050432161393825]]], [[[-0.070734022465064328, 0.52781053452313986], [-0.60080912847887746, 0.21494517275219205], [-0.060998844523575846, -0.49580638361725859]], [[-0.88825021949229988, -0.3479376501831839], [-0.78442372695661855, -0.42789790297072483], [0.18706265892990959, 0.17759366916368413]]], [[[-0.67677853356798878, 0.87951784162911117], [0.090022165182862102, 0.062945021974438964], [0.84115520291902657, 0.59290567545258344]], [[0.17465903675071348, -0.95909713586489787], [-0.066735197912717537, -0.17515126929825953], [0.98364377142141524, -0.43818150112696674]]], [[[-0.38545523627137368, 0.45354980719220617], [0.98063435019283163, -0.44311879619131034], [0.61765400978713436, 0.16591369045477311]], [[-0.34981746261196278, -0.83454760981147325], [0.14785740321861196, 0.79410322711178849], [-0.45716130653714893, -0.32186281657771421]]]])
      res=generalTensorProduct(arg0,arg1,offset=4)
      ref=Data(-1.6269525290839251,self.functionspace)
      ref.setTaggedValue(1,2.2790246814139974)
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank0_array_rank1_offset0(self):
      arg0=Data(-0.066402822269,self.functionspace)
      arg0.setTaggedValue(1,0.775412286251)
      arg1=numarray.array([-0.47177753701315672, 0.41828841533346806])
      res=generalTensorProduct(arg0,arg1,offset=0)
      ref=Data(numarray.array([0.031327359940780564, -0.027775531300560489]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([-0.36582209857728359, 0.3243459764460731]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank1_array_rank2_offset1(self):
      arg0=Data(numarray.array([-0.57883415559338403, -0.65736342929360059, -0.77995127684258292]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([-0.013915127621034751, 0.52156252100845402, 0.77874199498808139]))
      arg1=numarray.array([[-0.30978387802429785, -0.91334615428391785], [-0.30869527945355557, -0.92097262226839893], [0.61784130170691243, 0.35034716078964245]])
      res=generalTensorProduct(arg0,arg1,offset=1)
      ref=Data(numarray.array([-0.09964763519141584, 0.86083595584321548]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([0.32444576189971552, -0.19480542741929446]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank2_array_rank3_offset2(self):
      arg0=Data(numarray.array([[0.16131436674291244, -0.30671631189982218, -0.35407366826082765], [-0.182248695281235, -0.68514175797113586, -0.65571928369196275]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[-0.52342615909566548, 0.59271807981378011, -0.61399928521854119], [-0.67755644246597724, 0.58043921613768035, -0.98356558339713152]]))
      arg1=numarray.array([[[-0.94971411637132808, 0.65278934738984828], [-0.2247359467670933, 0.41849337058108427], [0.27105972165778613, 0.34832999453837177]], [[-0.57801238537334032, -0.021366021255804446], [-0.18472947981910748, -0.26007114295315348], [0.97540709043691298, 0.67198065665422879]]])
      res=generalTensorProduct(arg0,arg1,offset=2)
      ref=Data(numarray.array([-0.58793281549697074, -0.40494006717837661]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([-0.47749538489533394, -1.1049286530416838]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank3_array_rank4_offset3(self):
      arg0=Data(numarray.array([[[-0.85592341606840838, -0.6246775596462375, 0.72294912176452741], [-0.69354457350656973, 0.51478622163169141, -0.30088975576774657], [0.63724594676228152, 0.59147704172907067, 0.90879929974836537], [0.43825595519527272, 0.49719261240463997, 0.76371357014198527]], [[-0.70583793647592685, -0.86136611217816705, -0.2666898373330846], [-0.092627771835813943, 0.26163263306438966, -0.76579298565940945], [0.70628347482565057, 0.97524661278630687, 0.22770123057542957], [0.59136066151912448, -0.48734721468137931, -0.50794546169771682]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[0.53526915624486904, 0.59251502391234223, -0.05257310553169825], [-0.53404580773217702, 0.27236342161151628, 0.35979662856677797], [-0.28806226323790285, 0.0027346838023620812, -0.081768646446611193], [-0.21247055759776723, 0.64441774107330874, -0.49394848403204517]], [[0.43511931070960319, 0.020918136172061841, -0.81913683680182348], [0.35513324173584859, 0.27463771055327046, 0.91802334111838935], [-0.051123982736281048, 0.27073251326826719, -0.8610644759096524], [-0.051483523838542933, 0.83964598215420638, 0.3440447159850899]]]))
      arg1=numarray.array([[[[0.34700581553473131, -0.84574772912659513], [-0.65399289862938081, 0.74829586835961148], [-0.04852678234444685, -0.80271171913928674]], [[-0.17062764878835845, -0.51671672051434392], [-0.16284261347255091, 0.41428706937103232], [-0.43120467400653939, -0.61513989455239315]], [[-0.84437591486514485, 0.8199684828372733], [-0.40961362813914359, -0.72039662910329638], [-0.017348828981281095, -0.19938529745422451]], [[-0.98738744807806844, 0.73596871747633918], [0.74587233478133674, 0.96018910257629897], [0.26222913580330931, 0.25532043610793687]]], [[[0.68751294119980733, -0.20534062850959889], [0.20911741771871606, -0.97520159066374124], [-0.70264224696985988, -0.34043823639873927]], [[0.98530372776760178, -0.80928827592776331], [-0.76342764036803423, 0.84009620246018191], [-0.19542518081485682, -0.67192861347578536]], [[-0.50897969444582403, -0.65024018076405565], [0.72608509056688697, -0.26103465377071466], [0.033975427865581942, -0.27396316765330209]], [[-0.4854761312523217, -0.53775764705520879], [-0.29889957906008569, -0.4091211328101898], [0.47965554055408899, -0.46838141772983777]]]])
      res=generalTensorProduct(arg0,arg1,offset=3)
      ref=Data(numarray.array([-1.0651001547888674, 2.5711424831047771]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([1.469180306786483, -0.46816975242627301]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank0_array_rank2_offset0(self):
      arg0=Data(0.337166769491,self.functionspace)
      arg0.setTaggedValue(1,0.192052431101)
      arg1=numarray.array([[-0.53449365336864507, 0.77438659301458213, 0.64114159395224823, -0.55156009994060562, 0.37329656321694449], [-0.35130145375427557, -0.86329174019146948, -0.38629470385800624, 0.73530424376236225, -0.36610458996303974], [0.89094645129612515, -0.89186199626946605, 0.17626758892657923, -0.60287617588234776, -0.28011610099812412], [0.88868551810936403, -0.98277617023570385, 0.43433333771720273, -0.08806914059852855, 0.79723623820157163]])
      res=generalTensorProduct(arg0,arg1,offset=0)
      ref=Data(numarray.array([[-0.18021349842000589, 0.26109742590424145, 0.21617164001949885, -0.1859677370773728, 0.12586319628212986], [-0.11844717627999025, -0.2910732871690373, -0.13024573737147258, 0.24792015646273269, -0.12343830189384165], [0.3003975367734143, -0.30070622811439979, 0.059431573524427198, -0.20326981262562954, -0.094445840856087121], [0.29963522523479796, -0.33135946645158276, 0.14644276836056197, -0.029693987627496969, 0.2688015669559653]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[-0.10265080553759078, 0.14872282780059765, 0.12313280179860418, -0.10592845809199392, 0.071692512487523286], [-0.067468298242881516, -0.16579727745332559, -0.074188836997434032, 0.14121696761356409, -0.070311276539696335], [0.17110843195237505, -0.17128426459028762, 0.033852618977690034, -0.11578383523117741, -0.053796978187268737], [0.17067421423730025, -0.18874455272205767, 0.083414773416871382, -0.016913892556937569, 0.15311115770855796]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank1_array_rank3_offset1(self):
      arg0=Data(numarray.array([0.75014497757575715, 0.44866624495730489, -0.89713570211701588]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([0.31369384211379736, -0.57632786660937119, 0.098300761665234049]))
      arg1=numarray.array([[[-0.35042362057051957, 0.6690810376435643, -0.52926627546938532, 0.79835035306156876, 0.81012460666859742], [0.069011521176359336, -0.75636141175155869, -0.75879645044233701, 0.76525218421546293, 0.25969264936480685], [-0.27813223745317273, -0.18417005867006031, -0.37970635327125413, 0.38899816908322848, 0.47965176976235968], [0.82780988393363031, -0.13476731169097955, -0.21468410740695898, 0.4098088556371231, -0.17190687973802166]], [[0.68332356249753312, 0.70071560182995363, 0.70294859787629083, -0.38494906083339964, 0.90009462521335215], [-0.56366798910747606, -0.23306524540466533, 0.39699644983861471, 0.97095470711512855, -0.82540385604093602], [-0.12701596427893458, -0.75982889843316825, 0.40241611029536006, 0.68679754675071703, 0.77096544113803156], [0.84769005304911338, -0.97512135855039994, -0.68351677209402473, 0.16425475109379861, -0.3213597897991407]], [[0.66483344348382256, -0.91686787777210355, 0.94576647915465539, 0.83097390265526161, 0.4663346634286607], [0.6232419344043898, 0.59321394941134931, 0.31856387827679455, 0.92880961388809147, -0.17201186655669942], [0.85013887993263659, -0.10418401391632082, -0.82627639992140334, -0.93112950778634063, -0.76427119211175554], [-0.66828984707543282, -0.35370555687253935, -0.012664020762692907, -0.16558905459885875, -0.12352112303812457]]])
      res=generalTensorProduct(arg0,arg1,offset=1)
      ref=Data(numarray.array([[-0.55273012022900414, 1.6388501251091534, -0.93011800485157847, -0.31933149752853918, 0.59318750480713778], [-0.76026274448082676, -1.2041426357540637, -0.67688346849813041, 0.17641641994454471, -0.021205725353011629], [-1.0283172177154056, -0.38559662472704587, 0.6369977694427148, 1.4352974239002525, 1.3913695080827988], [1.6008540209832791, -0.22127717721731294, -0.45635376327886573, 0.52966746997234782, -0.16232316317255568]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[-0.43839050900733229, -0.28408413725004728, -0.4781868719449931, 0.55397982814312863, -0.21877746203303367], [0.40777121571990116, -0.044630538556524726, -0.43551481903491157, -0.22823066458627353, 0.54025833089319641], [0.069523768954424844, 0.36989618679428604, -0.43225876262672636, -0.36532497450081186, -0.36899350169057937], [-0.29456193776952089, 0.48494441081709627, 0.32533979767269594, 0.017612393988231598, 0.11914025200176745]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank2_array_rank4_offset2(self):
      arg0=Data(numarray.array([[0.74815612249912378, 0.7760675774255783, -0.075650554757976884], [-0.73816205994525075, -0.43531158518812263, 0.41274737638043035]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[-0.63772920094967955, -0.39848776098455452, 0.2467721203940576], [-0.73666931050118212, -0.84060627058115056, 0.2987201604592129]]))
      arg1=numarray.array([[[[-0.74499305729834298, -0.23459842905363892, -0.45001317430342369, 0.55930545418526645, 0.78030995986091067], [-0.018910294322100452, 0.29682298526492445, 0.33030832563680379, 0.43537716143877359, -0.0047513799816891744], [0.12365098011674269, 0.56165854728177722, 0.96305957905096906, -0.55796533588820063, -0.69260988274762414], [0.11275871721267983, -0.31549335824989111, 0.91836571259654121, -0.25085012951066599, 0.43496041092831206]], [[0.52881571250075843, -0.58393685626717073, 0.65295420823511874, 0.53680616264902947, -0.4356216296327533], [-0.20794202813359375, -0.75743939637148983, -0.20972741840371834, -0.93825600175096557, -0.82462823564010401], [-0.10340619609984292, 0.56613188807995463, 0.99054513948243339, -0.84787527891763537, 0.95708740598120401], [-0.18074322531697651, -0.62493384718704759, 0.14786006114500783, 0.23986608736758397, 0.004007903752486941]], [[-0.60208695177466964, -0.072879779092648089, -0.71770996968782685, 0.21740560446784252, -0.65852913344401287], [-0.27404788946369796, -0.014294275118669209, 0.83881766956717674, 0.49196533522018848, -0.36249631392907133], [0.24251655142573858, 0.0063350016789049945, -0.74001952016946659, -0.44665321118032053, -0.088588798815961489], [0.57308758675481108, 0.16414927409918767, 0.89856619758642076, -0.8702214379961164, -0.051997974335418418]]], [[[0.46242487501411444, -0.52417460240650482, 0.94884048002469257, -0.46500189175336049, 0.12696274137253205], [-0.64802321528731732, -0.24806467662327902, -0.0051911369226405046, 0.68377840939975676, 0.18986698687592884], [0.48575690138156813, 0.36309929621183934, -0.26394809884232462, 0.95307147464234188, 0.13787188091045555], [-0.48589950436541929, 0.27914279524771368, 0.38378834438733334, 0.34899761520219963, 0.041250425929974188]], [[0.24372227046639838, 0.50510351054198011, 0.29933523267646911, -0.86040347590420252, 0.5884421249516365], [0.76914411500944069, 0.65101007993136073, -0.25363131919722215, 0.21391551115899232, -0.1877071006420219], [-0.61183546249865972, -0.21324422303195933, -0.12183981017149503, -0.93815880681919928, -0.60143306249706541], [0.59871174430507201, -0.90216487319686145, -0.98931538555781362, 0.8675321990475926, -0.93657108179063564]], [[-0.74049203457199431, 0.19932554259910851, 0.40489575176542814, 0.13244074325819932, -0.94392122925272748], [0.59887647565014568, 0.57276663342376355, 0.57294554515721829, -0.87606084064269041, -0.89645223576316835], [0.22874931788933917, 0.81444387907880755, -0.86999860752854863, 0.87229576910111439, -0.65717424645606326], [0.91040069901603515, 0.32354513935846652, 0.27341416106819261, 0.90091353306292632, 0.77179005508209486]]]])
      res=generalTensorProduct(arg0,arg1,offset=2)
      ref=Data(numarray.array([[-0.85450194693067583, -0.37385782754028868, -0.43923084232804621, 1.5910537281025519, -0.4439358183928207], [0.2359204580207539, -0.22854522577026845, 0.3716248470836333, -1.3990884169007392, -1.0445488028651162], [-0.0038990390181923434, 1.0200467679997303, 1.4340168849125972, -0.97675614816361112, 0.1200780141883292], [0.37454969433541641, -0.41323456036459927, 0.99406673019739078, -0.19910395055193342, 1.0282674374704546]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[-0.65092961791066584, 0.38540998424586426, -0.97997274130001, 0.58842943591100205, -1.3566891862855344], [0.037022547359227442, -0.084394365127499732, 0.46810197351870586, -0.72760019130711928, -0.0076894031870378687], [0.24699914410842538, -0.42715825416502634, -1.1545318679481809, 0.93057315114367012, 0.24613990776258518], [0.26815792470910099, 1.1401142561670501, 0.2077259728245493, -0.86758344075852967, 0.69563314418384004]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank0_array_rank3_offset0(self):
      arg0=Data(0.457407053564,self.functionspace)
      arg0.setTaggedValue(1,0.907328698371)
      arg1=numarray.array([[[0.17466602597983405, -0.59346375002901941], [0.45921063925418593, 0.19564978660531418]], [[0.88072666103026487, 0.69753422745349658], [0.8905361657973434, 0.75815278784798545]], [[0.68057984098314517, 0.45273363447244841], [0.19057250771736678, 0.85103559725169031]], [[-0.44938106688166402, -0.13746618995383497], [0.71758199253441446, -0.84405263082305293]], [[-0.74519513151932482, 0.4540599732385433], [0.89256044192063455, -0.52367468803108874]], [[0.095883159477100577, -0.097218457390966906], [-0.84909166665956071, -0.43511621205050721]]])
      res=generalTensorProduct(arg0,arg1,offset=0)
      ref=Data(numarray.array([[[0.079893472301196436, -0.27145450529790932], [0.21004618546657031, 0.08949159242159288]], [[0.40285058701725168, 0.31905707573965453], [0.40733752368968468, 0.34678443284099864]], [[0.31130201977926308, 0.20708355779343479], [0.087169209245333348, 0.38926968501710846]], [[-0.20555006972985942, -0.062878004911474411], [0.32822706489586356, -0.38607562691784802]], [[-0.34085750943860899, 0.20769023450046217], [0.40826344186683955, -0.23953249607842952]], [[0.043857633462842771, -0.044468408147254737], [-0.38838051745262919, -0.19902522451201954]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[0.15847949800199743, -0.53846669184447216], [0.41665499159282388, 0.17751866621725249]], [[0.79910857497362708, 0.63289282266491886], [0.80800902016560905, 0.6878937821648019]], [[0.6175096212570883, 0.4107782192748643], [0.1729119053725823, 0.77216902072214921]], [[-0.40773633848651558, -0.12472701920089616], [0.65108273526104476, -0.76583317488168212]], [[-0.67613692871417352, 0.4119816445011048], [0.80984570398569922, -0.47514507306132509]], [[0.086997542284100227, -0.088209096402226683], [-0.77040523670826788, -0.39479342632010433]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank1_array_rank4_offset1(self):
      arg0=Data(numarray.array([-0.1121226777500155, -0.13378188076403119, -0.15645641850201075]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([0.52354290680893256, -0.027945977535014377, -0.99882059928635569]))
      arg1=numarray.array([[[[0.60033474127179454, 0.49002061068151326], [-0.67632790882234595, -0.31407848311361741]], [[-0.22289183616206332, 0.15760173683977841], [0.17804534897123903, -0.39267749953008879]], [[-0.60346212673767163, 0.84537502883469329], [-0.77190604680986707, -0.97924694751243924]], [[0.38617321346366418, 0.6778364200274436], [0.75417575341688403, 0.052757267302566468]], [[-0.97562820331570355, 0.54762476446533026], [-0.55412279656823382, 0.96387516722236311]], [[0.17615378510609325, 0.22077631618644666], [0.59250997502944003, 0.83736276952450361]]], [[[0.34153171478754762, -0.99428187711099558], [-0.34181970110009297, -0.54324185529906766]], [[0.99105318713534785, -0.83212513562831902], [-0.91223896443885066, -0.42803252370670553]], [[-0.10218075272810268, 0.66411783653012102], [0.50758836176152333, 0.079644191751625959]], [[0.083731762715525848, 0.31863983660490836], [-0.52643695957554892, -0.55652279309178732]], [[0.21159617979858814, 0.59540264032722034], [-0.75130613762414478, 0.0010916749674321213]], [[-0.3794533023683957, -0.94600994777887037], [0.61701966173826728, 0.62114272077750399]]], [[[0.40176956202940239, -0.60353934370382789], [-0.96392487075712041, -0.87809842532661064]], [[-0.89198185730909607, 0.098047451056975987], [-0.6506701060956146, 0.90531627138283421]], [[-0.56239743463989544, 0.58210077110427783], [-0.15467934282993512, 0.51351758048230867]], [[0.29861463335053728, 0.89255627799904969], [-0.89648326058507233, 0.10616076088337989]], [[0.20346557944917842, -0.0021314610278035939], [-0.16195477202765751, -0.25179783893586194]], [[-0.35529602464303345, -0.67036259336279502], [0.66528907503140688, -0.60146591695206419]]]])
      res=generalTensorProduct(arg0,arg1,offset=1)
      ref=Data(numarray.array([[[-0.17586132062084092, 0.17250208064814621], [0.27237321165327183, 0.24527537238086961]], [[0.031962556970306852, 0.078312383887226195], [0.20387963750731353, -0.040351492643000822]], [[0.16932241124687369, -0.27470604701011547], [0.042842623244777375, 0.018797718689079826]], [[-0.10122074351096116, -0.25827522968452582], [0.12612808178662399, 0.051927847433872021]], [[0.049248815899199223, -0.14072175927033312], [0.18797974346523255, -0.068822923029590297]], [[0.086601485894721789, 0.20668748873599443], [-0.2530686017575568, -0.082881794158410571]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[-0.09653915684634834, 0.8871605228848547], [0.61825382342376078, 0.72781065808595424]], [[0.74654046335807211, 0.007834007946595431], [0.76861049445912455, -1.0978702729769743]], [[0.24865136774303881, -0.15738356323989711], [-0.26381407458243666, -1.0278154656593408]], [[-0.098424166290161097, -0.54553184852120284], [1.30498110922236, -0.062862288253884971]], [[-0.71992209961539988, 0.27219489939900965], [-0.10734731274651518, 0.75610036730935348]], [[0.45770524642142874, 0.81159501432113124], [-0.37154325558693385, 1.0217934455099293]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank0_array_rank4_offset0(self):
      arg0=Data(0.535297954764,self.functionspace)
      arg0.setTaggedValue(1,-0.69341692027)
      arg1=numarray.array([[[[0.46865284943982877, -0.22056464202935921, -0.93096583281584722, -0.90072286678049518], [0.65835223711305924, 0.78977627969182329, 0.63769705878842187, 0.39001632219452587], [0.36379193055659531, -0.86522990441913428, -0.25040795994752352, -0.26083188317144645]], [[-0.25764965867229317, 0.89893249608570192, -0.099877738953084938, -0.55070813463220958], [-0.2177761978435564, 0.71076625812770966, 0.97026618056036651, -0.040225069647280343], [-0.49788245322816871, -0.68927315040326453, 0.092279371206178906, 0.92040769379234177]]], [[[0.75778505539052565, -0.022553071266377733, 0.91678427011978592, -0.1015954690375811], [-0.21489266704401389, 0.48654768887721267, -0.92057434377558134, 0.22661937857506032], [-0.050726673411944034, 0.29641893154153021, 0.39999245235288261, 0.32789540502125902]], [[0.0009561752438733695, -0.38070151363066551, 0.30506437253599938, -0.62710458525905666], [0.85139736211109995, -0.44355410594616185, 0.98985237447200158, -0.75001349029459408], [0.79259162301567088, 0.88797081736213479, -0.58810453788803541, -0.52755124336189807]]], [[[0.16893060133353899, 0.67948983747128766, -0.38195118158231223, -0.22142328896590047], [-0.19203653586713698, 0.059278515945487165, -0.65152957599755412, 0.55047687998584283], [-0.19299665609581784, -0.11251565879686809, 0.54464480900222312, -0.16593517720951656]], [[0.04331435184630883, 0.85344283387170039, 0.86979593370778385, 0.14073680627736507], [0.4003486269662615, 0.14717860194654042, 0.74400672061009132, -0.25128195475456749], [0.12800288479083788, -0.96054260518142764, -0.18611027526621782, 0.37826761326899683]]]])
      res=generalTensorProduct(arg0,arg1,offset=0)
      ref=Data(numarray.array([[[[0.25086891179959958, -0.11806780177163492, -0.4983441062617619, -0.48215510839703191], [0.35241460604111902, 0.42276562724038708, 0.34135793132864883, 0.20877493959542212], [0.19473707638670001, -0.4631557982364693, -0.13404286881660893, -0.13962277359899491]], [[-0.13791933533299733, 0.48119672662583912, -0.053464349388068558, -0.29479293814068197], [-0.11657515330200027, 0.38047172429123416, 0.5193815020309287, -0.021532397512440501], [-0.26651545892606865, -0.36896650768481004, 0.049396958673602769, 0.49269235603636236]]], [[[0.40564079030149663, -0.012072612922545396, 0.49075274475519864, -0.05438384678913645], [-0.11503160516250532, 0.26044798275126663, -0.49278156343155199, 0.12130888986118535], [-0.027153884529409998, 0.15867244780759879, 0.2141151416656529, 0.1755217396844902]], [[0.00051183865244166593, -0.20378874162216673, 0.16330033468997354, -0.33568780191248471], [0.45575126662978793, -0.23743360574028599, 0.52986595157344385, -0.40148068740032689], [0.42427267476360198, 0.47532896242433037, -0.31481115631906637, -0.28239710160498505]]], [[[0.090428205390945954, 0.36372952028150374, -0.20445768632081771, -0.11852743372063007], [-0.10279676488969866, 0.031731668347081944, -0.34876244949993923, 0.29466914800145211], [-0.10331071528443936, -0.060229402032920779, 0.29154725233188028, -0.08882476098370512]], [[0.023186083955270196, 0.45684620347976546, 0.4655999843760773, 0.075336124560332354], [0.2143058012077336, 0.078784404607051425, 0.39826527587347238, -0.13451071644929416], [0.068519682432465243, -0.5141764920175862, -0.099624449710626409, 0.20248587973646542]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[-0.32497181553445292, 0.15294325479651297, 0.6455474606680125, 0.62457647629994029], [-0.45651258071198053, -0.54764423556641606, -0.44218993057047723, -0.27044391699126574], [-0.25225948010573052, 0.5999650556480568, 0.17363711639797305, 0.18086524113703945]], [[0.17865863282522798, -0.62333500296661459, 0.069256914148406207, 0.38187033868445236], [0.15100970041684805, -0.49285734974294071, -0.67279898676656769, 0.027892743912474278], [0.34524011737408383, 0.47795366517761878, -0.063988077386265677, -0.63822626842254793]]], [[[-0.52546097933573477, 0.01563868122016758, -0.63571372513868984, 0.070448017253453121], [0.1490102113703248, -0.33738039998585467, 0.63834182634068903, -0.15714171156508089], [0.03517473365286606, -0.20554190261933208, -0.27736153444188882, -0.22736822192061448]], [[-0.00066302809284534694, 0.26398487112400654, -0.21153679768809525, 0.43484493019770043], [-0.59037333676131143, 0.30756792211842093, -0.68638038502859, 0.52007204460123402], [-0.54959644226354187, -0.61573398946512647, 0.40780163745929221, 0.36581295845675943]]], [[[-0.11713933731610748, -0.47116975045428705, 0.26485141202639789, 0.15353865511084891], [0.13316138328036151, -0.041104725965111846, 0.45178163205321925, -0.38170998279977053], [0.13382714689242256, 0.078020261605104863, -0.37766592609951133, 0.11506225954512458]], [[-0.030034904460770381, -0.59179170149004678, -0.60313121761525601, -0.097589282777524183], [-0.2776085119453765, -0.10205613289145413, -0.51590684886583327, 0.1742431591854057], [-0.088759366157373079, 0.66605649507328812, 0.1290520139057531, -0.26229716343097353]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank0_Symbol_rank0_offset0(self):
      arg0=Data(0.254006493819,self.functionspace)
      arg0.setTaggedValue(1,-0.170716170451)
      arg1=Symbol(shape=())
      res=generalTensorProduct(arg0,arg1,offset=0)
      s1=numarray.array(-0.00682305719174)
      sub=res.substitute({arg1:s1})
      ref=Data(-0.0017331008343969745,self.functionspace)
      ref.setTaggedValue(1,0.0011648061945403166)
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank1_Symbol_rank1_offset1(self):
      arg0=Data(numarray.array([-0.43328225931445186, 0.81693795087692012, -0.58772684289532107]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([0.25348158555908973, 0.55825419719758851, -0.76910484543844437]))
      arg1=Symbol(shape=(3,))
      res=generalTensorProduct(arg0,arg1,offset=1)
      s1=numarray.array([0.34484308603226177, 0.99935010772309329, -0.38032893046863059])
      sub=res.substitute({arg1:s1})
      ref=Data(0.89052215935298917,self.functionspace)
      ref.setTaggedValue(1,0.93781558760667127)
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank2_Symbol_rank2_offset2(self):
      arg0=Data(numarray.array([[-0.98016072021830802, -0.075570099697898963, -0.050629304889141302], [-0.742903946596293, -0.82986222124369791, -0.063558938997101855]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[-0.77019921061973129, -0.85736397573676726, 0.2852280145154269], [0.96764717725674965, -0.21751533237169141, 0.004525519621129348]]))
      arg1=Symbol(shape=(2, 3))
      res=generalTensorProduct(arg0,arg1,offset=2)
      s1=numarray.array([[-0.97953806440324476, 0.22643981538069302, 0.49529490508848451], [0.51239984146439332, -0.59960009030294881, -0.71296750760557326]])
      sub=res.substitute({arg1:s1})
      ref=Data(1.0801532751634084,self.functionspace)
      ref.setTaggedValue(1,1.3245880106807348)
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank3_Symbol_rank3_offset3(self):
      arg0=Data(numarray.array([[[-0.87291246148360369, 0.84069715802060729, -0.32858714136842337], [-0.56674989148230615, 0.18350479483872983, 0.097653924723682506], [0.38460300000766789, -0.35428230572829245, -0.8233138403959821], [0.943968464100573, 0.85816553345496804, 0.57540512646184516]], [[-0.6591950517880758, 0.13256271255466734, -0.51543889978381574], [0.7503489018559435, -0.7572406959350253, 0.58106951065828816], [0.30005390125480247, 0.72590973427525518, 0.8713316274089018], [-0.59642637683710853, -0.11218795074623067, 0.96260031711610439]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[-0.32363322163027486, -0.23527852750151368, 0.092163631468212825], [0.26283462563169757, -0.60026536389449348, -0.21700619440439617], [-0.42027293122810794, 0.68727731245790635, 0.57054927407304024], [-0.74245187139374091, 0.44557172675549905, -0.21488706578099226]], [[0.19098293152978263, -0.20130098605075397, -0.23311083739506189], [-0.084572596598946115, 0.8345583592207404, 0.71600887429771265], [-0.5042171498128889, 0.58174961574468087, 0.9528689910663517], [-0.019051644713023341, 0.21429251126727955, 0.48901662119093814]]]))
      arg1=Symbol(shape=(2, 4, 3))
      res=generalTensorProduct(arg0,arg1,offset=3)
      s1=numarray.array([[[-0.9283009603564476, 0.67388557115400993, -0.66337213399374595], [-0.90166795741121475, 0.67031185905876689, 0.8972144231864565], [0.93931909767606636, -0.23680431792656864, 0.71791280364635979], [0.47557197965338127, 0.90456661875882527, -0.58517204016660984]], [[-0.025322814769825674, -0.1760997200516623, -0.60484097781216462], [0.15787466469917466, -0.55369282578857248, -0.44122998144239078], [-0.34685677543751958, -0.61829660881789361, 0.55503673229384809], [0.0033694384862723581, -0.93796119523555332, -0.7430959322701316]]])
      sub=res.substitute({arg1:s1})
      ref=Data(2.9641449748093116,self.functionspace)
      ref.setTaggedValue(1,-1.5656578132555441)
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank4_Symbol_rank4_offset4(self):
      arg0=Data(numarray.array([[[[0.55258489163054603, -0.47252141084459853], [-0.024425917806026209, -0.35436654972067894], [-0.20438760025885205, 0.49933680792783064]], [[-0.46626935255106194, 0.23188369032418477], [0.66993777476622096, -0.50079172759792057], [0.41235649799548746, -0.76438203696342311]]], [[[0.66691328915700643, 0.40483382071964491], [0.153722686945585, -0.051067207711410711], [-0.81255405242958778, -0.51251905171766121]], [[0.96663424496333072, 0.33140859899876296], [-0.7760916299786127, 0.82338500422386263], [0.99441485172417043, 0.77745315423821126]]], [[[-0.99111814759677519, 0.97779935169526255], [0.052505554535183796, 0.3260706312930175], [0.80791191528720119, -0.91202774503235218]], [[0.10182618226460605, 0.59913811075381584], [-0.85885960057458677, -0.343395985995959], [-0.71569241188560828, -0.76172699329122784]]], [[[0.97526524625752886, 0.14306647801439154], [-0.1892598797686198, -0.085681278150806728], [-0.78604627866111687, -0.75088496263430216]], [[-0.39740160035657879, 0.46364493616585123], [0.79237456690894015, 0.14449148143757706], [0.44715307094261481, 0.96741618336031099]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[0.49661467216663957, -0.10818572197849008], [0.47990276408631516, 0.83849651944700487], [-0.82660715507302762, 0.49710944244707123]], [[0.26450768963218518, -0.46017065260055801], [0.47867630839830388, -0.35513407638024952], [-0.01322346309192679, -0.8343013168670621]]], [[[-0.40019630315822696, 0.51278684235206473], [-0.76020833919923825, -0.30824126832581555], [0.52972404510949889, 0.187020181354]], [[-0.25887281664114248, -0.81513463125690899], [0.15166430483729521, -0.15153914971874349], [0.55833386387414952, 0.43489872845468525]]], [[[-0.65680637903165473, -0.72867277297024602], [-0.82039585836993467, 0.58299760127759281], [0.48108857782183589, -0.96084470799899568]], [[-0.23203347093230531, -0.042170694885397042], [-0.5762327764736821, -0.26314217398359974], [0.017972073402510613, -0.30487217209406192]]], [[[0.55204808867527122, 0.048728254466730236], [0.42487351865773793, 0.60093663306313849], [-0.44660285812100864, 0.46702966481156882]], [[-0.30513302863669844, 0.16949177539355764], [-0.30336238329779563, -0.93920181700745742], [0.45618100036181297, -0.55321815611428882]]]]))
      arg1=Symbol(shape=(4, 2, 3, 2))
      res=generalTensorProduct(arg0,arg1,offset=4)
      s1=numarray.array([[[[-0.31282786240489946, 0.95990336197483739], [0.56047834543234187, 0.63237076602700193], [-0.95348460786922251, 0.052516678643150572]], [[-0.82829233589297901, 0.64717695820443], [0.8387138843622659, 0.38721268293393019], [0.83724705362994345, -0.10613327482232182]]], [[[0.029633499149695597, 0.83210758934170515], [-0.95694352742720312, 0.13978097934026734], [0.021651253399089798, 0.6486763006192624]], [[-0.0589553904842266, -0.017765450801893179], [0.7225444112831747, -0.77009354079175529], [0.046906098207204039, -0.71934352074117336]]], [[[0.11903001863426366, 0.47583473371700857], [-0.47530578519783839, -0.65448580295733483], [-0.92422515161815566, -0.98860675507205542]], [[0.96251722766667047, -0.34970498934936689], [-0.7294337122414305, 0.36664272546941956], [0.54342997924548198, -0.54269110176923507]]], [[[0.7239118807545617, 0.24446476714814946], [-0.76630426383030392, 0.85413556300140026], [0.077067670905166308, -0.72729592303018675]], [[0.55301376142242353, 0.52050037668946714], [0.4554107687327853, 0.050902123987418779], [0.3355774238250715, 0.59357129854754009]]]])
      sub=res.substitute({arg1:s1})
      ref=Data(1.8593234531192291,self.functionspace)
      ref.setTaggedValue(1,2.5427833061764114)
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank0_Symbol_rank1_offset0(self):
      arg0=Data(0.0165244643039,self.functionspace)
      arg0.setTaggedValue(1,0.643354029176)
      arg1=Symbol(shape=(2,))
      res=generalTensorProduct(arg0,arg1,offset=0)
      s1=numarray.array([0.22581244607108131, 0.028411735979801511])
      sub=res.substitute({arg1:s1})
      ref=Data(numarray.array([0.0037314297044745621, 0.00046948871700963803]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([0.14527734701789352, 0.018278804818486902]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank1_Symbol_rank2_offset1(self):
      arg0=Data(numarray.array([0.7990959444816601, 0.66453378670402996, 0.66314655176913351]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([0.25052008898702427, -0.43793694168512198, -0.60775710319591947]))
      arg1=Symbol(shape=(3, 2))
      res=generalTensorProduct(arg0,arg1,offset=1)
      s1=numarray.array([[0.48400992663558373, -0.7955586837507469], [0.00043921068188912393, 0.56250230445729565], [0.056586608444253672, -0.57128634340023399]])
      sub=res.substitute({arg1:s1})
      ref=Data(numarray.array([0.42458745406707438, -0.64077250007030184]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([0.086670950080806192, -0.098440637992182944]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank2_Symbol_rank3_offset2(self):
      arg0=Data(numarray.array([[0.89049632514514299, 0.77699122687704691, 0.26814482199993095], [-0.54584258060046764, -0.10577439315107817, 0.89615692558993909]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[0.12537491671104184, 0.14730583698660471, 0.020593038075526371], [-0.7532071976388357, -0.19238340532159914, -0.78563132012060732]]))
      arg1=Symbol(shape=(2, 3, 2))
      res=generalTensorProduct(arg0,arg1,offset=2)
      s1=numarray.array([[[0.93858840620812622, -0.37166296034453117], [0.70535776001196693, -0.33267593035891108], [0.68239003221769456, -0.23866433425064271]], [[-0.92279113864333118, 0.3426930302568405], [-0.70795726662917735, -0.049260416185926692], [-0.32000444756287649, 0.89151661979738539]]])
      sub=res.substitute({arg1:s1})
      ref=Data(numarray.array([1.858653916438521, -0.036354549337566433]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([1.3182889162867459, -1.0495624920646744]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank3_Symbol_rank4_offset3(self):
      arg0=Data(numarray.array([[[0.33719357860504706, -0.10851267449365865, -0.63693037069110336], [0.16983826726220586, 0.18010741633917982, -0.46526769437163296], [-0.3363578592424139, 0.88507693779005936, 0.66073373574097261], [-0.57354706302211866, -0.85278532394685813, 0.7338229920049868]], [[0.15036729318459652, -0.82314246033156135, -0.22670408741253345], [0.4769085921947771, -0.37072731457965302, -0.84752469129093666], [-0.63822200553535069, 0.14840463657127878, -0.68908861197782767], [0.68810055148047189, 0.71298249665824898, -0.94690654719364686]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[0.021953710378608493, -0.72116572404029, -0.26976815087482664], [0.28105657011460128, -0.1383519227336818, 0.35184009592229981], [-0.75203118799357616, -0.61638389659289605, -0.27022165726061909], [0.97648872745699822, 0.42732823721145552, 0.80559272369079027]], [[0.6334863166884237, -0.39307761055248736, -0.3115336481749218], [0.16303877125406041, 0.87025789641371309, 0.11722500897055599], [-0.21535516449511038, 0.61588314706170744, 0.85475538893357195], [-0.4414887621005088, 0.016221543112500569, -0.55993785445251221]]]))
      arg1=Symbol(shape=(2, 4, 3, 2))
      res=generalTensorProduct(arg0,arg1,offset=3)
      s1=numarray.array([[[[0.73127119094936077, -0.85270872149953858], [0.56045751327809268, -0.40679647467080549], [-0.41247692640598377, 0.38272752189817139]], [[-0.40993364101543661, -0.81216584830109317], [0.67705053183385067, -0.14163125985156566], [-0.43710935844509513, -0.96822651960805661]], [[-0.8475125085677242, -0.72257929210928462], [0.94069744534066468, 0.33807689412807673], [-0.11132460864362326, -0.48145939508801594]], [[-0.6473837623308405, 0.71868867109789947], [0.8216982606918708, -0.056075087857136774], [0.33846180840815898, -0.36036369184097938]]], [[[-0.37965334124170447, 0.13613269706185416], [0.11722067381432399, -0.42285402299682007], [0.9861893086299478, -0.41738707320488011]], [[-0.76780122972279097, 0.96996438158127152], [-0.1081308241796326, 0.51352473076338323], [-0.0927187346097611, 0.48802000496331832]], [[-0.39420447139513737, -0.89769577293328751], [0.16698453662924817, 0.19257321156462726], [-0.60496545480998787, -0.90453840221679926]], [[-0.62283776630585841, -0.45512441405632442], [0.84079104212796163, -0.082663936688424977], [0.8906536497463402, -0.83703443627408025]]]])
      sub=res.substitute({arg1:s1})
      ref=Data(numarray.array([1.063341755844643, 1.3622698341803252]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([-1.9237138265814764, 1.7264869273805541]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank0_Symbol_rank2_offset0(self):
      arg0=Data(0.0692386942443,self.functionspace)
      arg0.setTaggedValue(1,-0.563525846506)
      arg1=Symbol(shape=(4, 5))
      res=generalTensorProduct(arg0,arg1,offset=0)
      s1=numarray.array([[-0.24494488235221357, 0.26669212044269286, -0.81645122369734269, 0.65568360802335657, -0.24516337921406794], [0.094846223501734661, 0.49055555182937893, -0.64920902590610541, 0.47130783394555253, -0.32980794940438507], [-0.82848976154045029, 0.077429493931990168, 0.67375419209623333, -0.31152692952673999, -0.7517836085217664], [0.349794050748091, -0.30092873234758222, 0.020784287998431239, -0.53326452459999207, 0.89747688778752344]])
      sub=res.substitute({arg1:s1})
      ref=Data(numarray.array([[-0.016959663815897794, 0.018465414184703093, -0.0565300166429877, 0.04539867685694695, -0.016974792253309074], [0.0065670286692657964, 0.033965425862971931, -0.044950385245370809, 0.032632739009512593, -0.022835471768158994], [-0.057363549283855397, 0.0053611170558501122, 0.046649860502385287, -0.021569717822376246, -0.052052515408336116], [0.024219283328232002, -0.020835912488347444, 0.0014390769618094353, -0.036922539370125747, 0.062140127824871348]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[0.13803277217486246, -0.15028790292896899, 0.460091366964967, -0.36949466025152039, 0.13815590080389786], [-0.053448298386719544, -0.27644073260290619, 0.36584606588312335, -0.2655941460891128, 0.18585530387253932], [0.46687539419369961, -0.043633521112561864, -0.37967790143804747, 0.17555347667099497, 0.42364949438162114], [-0.19711798855060741, 0.16958111863417177, -0.011712483488342048, 0.30050834263687093, -0.50575142291010311]]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank1_Symbol_rank3_offset1(self):
      arg0=Data(numarray.array([0.76367297000773759, -0.895526419917831, -0.33356412234192612]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([0.09211650333303667, -0.5982759303117744, -0.97759654845633204]))
      arg1=Symbol(shape=(3, 4, 5))
      res=generalTensorProduct(arg0,arg1,offset=1)
      s1=numarray.array([[[-0.5045301429252167, 0.38699249566944283, 0.060859838029704072, 0.74995410086455294, 0.83398118640657204], [-0.32856870009264716, -0.093647876040491074, -0.011036176081356208, -0.70120648188015511, -0.78679129081290222], [0.35378288399361191, 0.70040735135703547, -0.80981749516388857, -0.98605901719057765, -0.26608645912462481], [0.0384081882107421, -0.91324692955763487, 0.13875499613037867, 0.63532784024212385, -0.96797810666429629]], [[0.2023973730444586, 0.95731044939572185, 0.84909718873644358, -0.49368915818762238, 0.59578694311952729], [-0.21094794003948447, 0.034810503861313347, 0.67095640881597585, -0.93269564399113292, -0.062386289103248949], [0.5122556578042694, -0.26130231772449042, -0.39940140149929237, -0.97871701021289637, 0.58994809386616254], [-0.38439383111479852, -0.72250994255473344, -0.76569563016487385, 0.61529318725143356, -0.11332516909179224]], [[-0.88625803740478726, 0.61467701353130577, -0.40069897573589563, -0.77978828372836584, -0.58262561709779481], [0.51212468002165945, -0.42095937668024774, -0.27068164979740406, -0.39774610818439227, -0.59559374124067421], [0.76097302234898034, 0.14215851692929804, 0.30727388068166128, 0.27293569631952153, -0.68646986834223855], [-0.51727390746170299, -0.050670428224554698, -0.14068153274359685, -0.72845645441213236, -0.95354665560940677]]])
      sub=res.substitute({arg1:s1})
      ref=Data(numarray.array([[-0.27092434317400049, -0.76679528950101705, -0.58025315016445544, 1.2749407544350939, 0.29768894396921386], [-0.23283600093979723, 0.037726867494735056, -0.5189975331247374, 0.43243498582168383, -0.34631396812942966], [-0.44239734788452695, 0.7214663104011737, -0.36325676682938407, 0.032398766009195529, -0.5025354218081014], [0.54611014353309018, -0.033493415915234817, 0.83859041842591031, 0.17715833138749049, -0.31966407936500346]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[0.69883776916538187, -1.1379935310358644, -0.11066627939429757, 1.1267638245309879, 0.28995123539191214], [-0.40471284425121862, 0.38207563221527457, -0.13781623706139956, 0.88225188740427507, 0.54709813830845144], [-1.0178055881344967, 0.081876287861253283, -0.13603519612777498, 0.22788952638098237, 0.29362787501837928], [0.73919679145472483, 0.39767042995208746, 0.60840867137775656, 0.4025455906299244, 0.91081688179311771]]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank2_Symbol_rank4_offset2(self):
      arg0=Data(numarray.array([[0.63308340913505945, -0.51355884720856171, 0.62988126505024367], [-0.13501524838253554, 0.4081021554022648, 0.7116978335547155]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[0.88415617472809593, 0.47257943166213923, -0.68442121730947414], [-0.93325782982612049, -0.97499913936260385, 0.54423537469829975]]))
      arg1=Symbol(shape=(2, 3, 4, 5))
      res=generalTensorProduct(arg0,arg1,offset=2)
      s1=numarray.array([[[[0.14643709596693411, 0.16929697116644737, 0.53214852638045174, -0.53280068566788041, 0.51974086491299287], [-0.044576665129983706, 0.75224834745473923, -0.18579949756823866, 0.39525580246976055, 0.10533040274062677], [-0.37587910544275993, 0.1972773859249719, 0.9728456048639289, -0.198544043376919, -0.24395651284918918], [0.48994769324608911, -0.77465147029311288, 0.965205931786282, 0.97665932149724988, 0.37817307739298811]], [[-0.60522945562042474, 0.41470041189270268, -0.65390343787632332, -0.84860618024327272, 0.63052091293559531], [0.47577641499842538, -0.57713569539179077, -0.78867784829209775, -0.89166519876690042, -0.65857142940383073], [0.1743953500151707, 0.3744982886755337, 0.90334818397617034, -0.014283955199500875, -0.67512266872048032], [-0.46384940576252753, 0.38529136091914573, -0.78900402759587207, 0.9829416394600472, 0.23477617562859532]], [[0.5514970630177749, 0.43642933250019067, 0.79280884899014303, -0.37189160033319579, 0.88743437357385013], [-0.45944740212601132, 0.72461911628352271, -0.38479096130536261, -0.97828735531390065, -0.87480033519704814], [0.33103044471651644, 0.67474648347282828, 0.30670694163271373, -0.8600468174991549, -0.59946652918466725], [0.23659176609607013, -0.3097812519057237, -0.1440128571600694, 0.51838155399046282, -0.84706393859444185]]], [[[0.77166210037926675, 0.57733523843981494, -0.36048855026295579, -0.31379694083600929, 0.53768864200591326], [-0.56051287506339786, 0.4704248309456569, 0.77919615128577457, 0.13090095198377161, -0.78388847074943313], [-0.63504193531295949, 0.50555023147353584, 0.95053000785930686, -0.8628668219637563, -0.46908141588943431], [-0.014176117085586304, -0.43099691831056952, 0.63213095890592697, -0.34814641337828856, -0.74675445757266012]], [[-0.064522803663081163, 0.062767986953471411, 0.44206056681352979, 0.16265237901224472, 0.4550531367371895], [0.5560258042190338, 0.96497450135798113, 0.46876238932959735, -0.34984168196004073, -0.46790086724804425], [-0.29219464723741617, 0.20776012988596548, 0.67642371920336775, 0.55372919125447106, -0.054798616789498711], [-0.59084270467746269, 0.64673665656090784, 0.1053741170796858, 0.059287345917329093, -0.2585181845369402]], [[0.41024901086093823, -0.84503554266502179, -0.098378181215939442, -0.0088299277920589336, -0.24656767228726273], [0.25049916150404195, -0.33485648664328682, -0.78476533955700467, 0.29573457321998586, -0.88471765155236359], [-0.26744688530397021, 0.49521347327270226, 0.22758520151505968, 0.80751237232718709, -0.22491229974017446], [-0.13523842124886243, -0.1088386393797216, -0.61047552022709595, -0.47378561541482433, 0.13330219860613224]]]])
      sub=res.substitute({arg1:s1})
      ref=Data(numarray.array([[0.91236079203890341, -0.4846385765893827, 1.3311495225808776, -0.033283696606951983, 0.50183833349423301], [-0.081084420460097117, 1.3210301087966425, -0.42738292269437539, 0.14197645159976202, -0.86088831903207119], [-0.34286151468726023, 0.72654902202707361, 0.65484474402718451, 0.25709639501498771, -0.30442222333272972], [0.36195736223959513, -0.63874863205255106, 0.44872684070924901, 0.17403543866142357, -0.32451369004331831]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[-0.96798001573984038, -1.012937247800779, -0.52925490349129511, -0.48812037729174945, -0.92954500594549605], [0.61719381814457508, -1.6656998458755745, -1.884960498144223, 0.97752606480826132, 1.0869114777878279], [0.25550889557311829, -0.51526857181679964, -0.34560771734029211, 1.1112085757474537, 0.2443401460433689], [0.56775573313224315, -0.57838151940672466, -0.44583204929483028, 0.98250039986242577, 2.0465802090579319]]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank0_Symbol_rank3_offset0(self):
      arg0=Data(0.294738291962,self.functionspace)
      arg0.setTaggedValue(1,-0.586233054779)
      arg1=Symbol(shape=(6, 2, 2))
      res=generalTensorProduct(arg0,arg1,offset=0)
      s1=numarray.array([[[0.58715228706269418, 0.65675742710573526], [0.045063403979594296, 0.5282977792642729]], [[0.03751334969001463, 0.35023885218280459], [-0.96759767127679952, 0.66720074501116056]], [[-0.41598807364030943, 0.33451764916510984], [0.8947068675437102, -0.63778374659265746]], [[-0.15217677678613573, 0.88721207845769645], [0.18448521537280071, -0.90752474829524554]], [[-0.94015062690562345, -0.73429109172857454], [0.0029643190256136709, -0.26584644286472936]], [[-0.18057986118365132, -0.78028727151344723], [0.21982166976051287, 0.12682522116226291]]])
      sub=res.substitute({arg1:s1})
      ref=Data(numarray.array([[[0.17305626221019715, 0.19357156229823005], [0.013281910718920549, 0.15570958510745064]], [[0.011056620613392593, 0.10322880107094613], [-0.2851880849381318, 0.19664960798008696]], [[-0.12260761430113515, 0.098595160545929456], [0.26370437394613389, -0.18797929211158068]], [[-0.044852323266165138, 0.26149537261230987], [0.054374857271144564, -0.2674822942254087]], [[-0.27709838996077751, -0.21642370217868814], [0.00087369832643860554, -0.078355126494013619]], [[-0.053223799847929645, -0.22998053764523954], [0.064789863481357332, 0.037380249063015729]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[-0.34420807886538712, -0.38501291274115668], [-0.026417656973709038, -0.30970562097118937]], [[-0.021991565583779557, -0.20532159221750421], [0.56723773862988802, -0.39113513089888502]], [[0.24386595916189477, -0.19610530334763623], [-0.52450674009212428, 0.37388991405356953]], [[0.089211056721796606, -0.52011304699130423], [-0.10815133136960507, 0.53202100548089304]], [[0.55114737396351188, 0.43046570980123372], [-0.0017377817977257562, 0.15584797230278799]], [[0.10586188365330507, 0.45743019078469527], [-0.12886672897038123, -0.074349136825007545]]]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank1_Symbol_rank4_offset1(self):
      arg0=Data(numarray.array([-0.25065084392995729, -0.28495789078228762, -0.01875242036778757]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([0.035358682208267211, 0.15101254128348152, -0.21522052748562381]))
      arg1=Symbol(shape=(3, 6, 2, 2))
      res=generalTensorProduct(arg0,arg1,offset=1)
      s1=numarray.array([[[[-0.92644268788141027, -0.34731417401660702], [0.026385462594018749, 0.18369389288041638]], [[0.17167125618812396, -0.21338824575124793], [-0.60302679507135237, 0.97518588018642616]], [[0.30558737614040488, -0.22965734965067175], [-0.37352332309901781, 0.71445391507954481]], [[0.78710295048906032, -0.22954751220984981], [-0.32744749229308656, 0.70933288636448988]], [[-0.43566633841045199, 0.68215270194628297], [-0.98439327450591985, 0.21288363835872381]], [[0.067469470162969891, 0.58123319893238468], [-0.0062292633000831099, 0.93161444806682581]]], [[[-0.075356732054091324, -0.33876166793212903], [0.37083000669329658, 0.48456019829875818]], [[-0.23605800041699987, 0.37377794848866763], [-0.54887719999989515, -0.4059152108920181]], [[-0.5367939371415904, -0.56103115249196178], [0.6651617747435612, -0.40215208479242071]], [[-0.34288104699118471, -0.21160636762415974], [0.23468488268306587, -0.13632376863309936]], [[-0.45523246340701617, 0.44883967314708095], [-0.34449721632410824, -0.68061002884452448]], [[-0.29704930310599886, -0.42292846090375136], [-0.1999710913073518, 0.58931236908754525]]], [[[-0.61954647269018914, 0.056753417686727703], [-0.050028483028359938, -0.65850025847588367]], [[0.78874732515489754, -0.94578569472069551], [0.60322347430778134, -0.52207438785442561]], [[0.94630229938033072, 0.36781057868252365], [0.026420564031343297, -0.31596809213310606]], [[0.48620865663526924, 0.32363019730444353], [0.33891930867051334, -0.24645999799159957]], [[0.98821659250278393, 0.98637520309677784], [-0.19773496783395417, -0.80235877852745019]], [[0.096306596851167825, 0.15973297910683004], [0.62642423020232951, -0.14058378241429725]]]])
      sub=res.substitute({arg1:s1})
      ref=Data(numarray.array([[[0.26530513288585983, 0.18252313725215766], [-0.11134631986866599, -0.17177380768028014]], [[0.0094461232537708193, -0.035289261014735382], [0.29624416414153304, -0.11897226314076745]], [[0.058622475875669794, 0.21053672379474964], [-0.096414609720707173, -0.058556900421114215]], [[-0.10869894797569379, 0.11176633234813999], [0.0088441237712058394, -0.13432663153516874]], [[0.22039076502550758, -0.31737947944017264], [0.34861421439620355, 0.155631903752045]], [[0.065929281447234242, -0.02816516963238911], [0.046797740006281147, -0.39880287114766461]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[0.089201514458961739, -0.075652332360491195], [0.067700093388374405, 0.22139261391048065]], [[-0.19933226451413028, 0.25245252681464719], [-0.23403564796677506, 0.085544125229840826]], [[-0.27392112970700366, -0.17200350807894788], [0.08155422976252838, 0.032534960086309635]], [[-0.12859049872166667, -0.10972357463675625], [-0.049080143672230611, 0.057537728142067063]], [[-0.29683489509102251, -0.12038775123281049], [-0.044273624983822757, 0.077430714384629146]], [[-0.06319969516892511, -0.077693677712464382], [-0.16523775447689476, 0.15219073348265361]]]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank0_Symbol_rank4_offset0(self):
      arg0=Data(-0.347621909291,self.functionspace)
      arg0.setTaggedValue(1,-0.894622209549)
      arg1=Symbol(shape=(3, 2, 3, 4))
      res=generalTensorProduct(arg0,arg1,offset=0)
      s1=numarray.array([[[[0.0096924524570347614, -0.11270992847487338, 0.094045152509650398, -0.86500877247957053], [0.91728513252472754, 0.94161546608325097, 0.28536492043666906, -0.52323305807306619], [-0.076843830321422502, 0.88881880192883767, 0.89097692547058016, 0.45330276244638368]], [[-0.25892718132289971, -0.64349923280351984, 0.77205381381940152, -0.52382080433583522], [-0.65399170526970152, 0.44024135420172938, -0.020349869545311927, 0.33191839330264905], [-0.78431335904843902, -0.19739108061895205, -0.8583282291624621, -0.64140613969736981]]], [[[0.28825247157339096, -0.34884055030576144, 0.46558054513305436, -0.98166933003964152], [-0.72084262998391546, 0.72452595394092012, -0.034824876546170502, -0.50969992568866607], [0.21381910555475714, 0.55206276185722469, 0.29792433521308359, -0.74559967557045304]], [[-0.59782412979470689, -0.14021135701546883, -0.94407592193148093, -0.94448500191516782], [0.077785199046891407, 0.54960429111119047, -0.30295875438489395, -0.81259675631262618], [-0.89037395075781833, -0.92792671910217428, -0.9543640744892361, -0.69571435997415287]]], [[[0.72123505998413751, 0.68267442506642562, 0.52457539095664862, -0.065717069619489976], [-0.49843359447796742, -0.34119172075230386, 0.96558655576876973, 0.0047717390159214279], [0.70099267548882382, -0.64955296583376154, -0.088510703851667261, -0.60092605132785137]], [[0.60636018610608611, -0.61238504988445208, -0.96325310573192535, 0.78366628113365877], [0.38773061215865989, 0.72426322159375411, 0.51566505123674311, -0.12351012142645978], [-0.54799164355000007, 0.85536579493282572, -0.9402815468010477, 0.3215365151234808]]]])
      sub=res.substitute({arg1:s1})
      ref=Data(numarray.array([[[[-0.0033693088288279595, 0.039180440532502546, -0.032692155474980479, 0.30069600104292776], [-0.31886840913261599, -0.32732616613792004, -0.099199098486907222, 0.18188727465159765], [0.026712599013576768, -0.30897288894036012, -0.30972309996642677, -0.1575779717685569]], [[0.090008761138837851, 0.223694431934539, -0.26838282083540144, 0.18209158812964016], [0.22734184524641773, -0.15303754009651924, 0.0070740605051668173, -0.11538210560871215], [0.27264450735496049, 0.068617464321800117, 0.29837369781993239, 0.22296682691265501]]], [[[-0.10020287452623028, 0.1212646181354584, -0.16184599802795899, 0.34124976680092778], [0.25058069133345057, -0.2518610954399223, 0.012105890075807795, 0.17718286133344283], [-0.074328205715867027, -0.19190911132534466, -0.10356502623106371, 0.25918678278865037]], [[0.20781676541954627, 0.048740539630018002, 0.32818147449760826, 0.3283236796625903], [-0.027039839407271227, -0.19105449303067185, 0.10531510063574032, 0.28247643591317684], [0.30951349274552226, 0.32256765777655488, 0.33175786173281357, 0.24184555413547379]]], [[[-0.25071710859939089, -0.23731258706581754, -0.18235389897149287, 0.022844693214145433], [0.17326643776727349, 0.11860571740224303, -0.33565904210218905, -0.0016587610273536], [-0.24368041225252471, 0.22579884216885043, 0.030768259865618635, 0.20889506130536922]], [[-0.21078408561232453, 0.2128784602621791, 0.33484788374514574, -0.27241956889476443], [-0.13478365568921324, -0.25176976391976791, -0.17925646966562669, 0.042934824227045656], [0.19049390140643715, -0.29734389077687684, 0.32686246657020024, -0.11177313729404173]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[-0.0086710832330594047, 0.10083280525028157, -0.084134882135539935, 0.77385605931479273], [-0.8206236520455612, -0.84239010881274734, -0.25529379564877835, 0.46809591452231664], [0.06874619727234621, -0.7951570404701187, -0.79708774572151175, -0.40553471893437121]], [[0.23164200706734253, 0.57568870549366047, -0.69069648880971235, 0.46862172538256913], [0.58507550439498623, -0.39384969303071932, 0.018205445256657359, -0.29694156640631275], [0.70166415025057771, 0.1765904446885577, 0.76787949689145452, 0.57381617791424511]]], [[[-0.25787706302689772, 0.31208050389476932, -0.4165186960098809, 0.87822318508638164], [0.64488182637319857, -0.64817700979009829, 0.031155108003000209, 0.45598887372646779], [-0.19128732065515089, -0.4938876078223387, -0.26652972704669453, 0.66703002919772791]], [[0.5348267439185459, 0.12543619401701828, 0.84459128726018817, 0.84495725929907639], [-0.069588366641525373, -0.49168820529141044, 0.27103363024997446, 0.72696710560461208], [0.79654831115167868, 0.83014385174258165, 0.85379529703358259, 0.62240151793492526]]], [[[-0.64523290296709046, -0.61073570255540144, -0.46929679533257723, 0.05879195002806227], [0.44590976360524365, 0.30523769109919274, -0.86383517803249932, -0.0042689037018139777], [-0.627123616223356, 0.58110450951319403, 0.079183641448500514, 0.53760179181437473]], [[-0.54246328947666522, 0.5478532664222977, 0.8617476218046658, -0.70108525997670679], [-0.34687241695909993, -0.64794196359715661, -0.46132540752452467, 0.11049489773218348], [0.49024549496699477, -0.76522923743529414, 0.84119675499714286, -0.28765370761039849]]]]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank0_constData_rank0_offset0(self):
      arg0=Data(-0.362671469534,self.functionspace)
      arg0.setTaggedValue(1,0.565169039297)
      arg1=Data(-0.938082974175,self.functionspace)
      res=generalTensorProduct(arg0,arg1,offset=0)
      ref=Data(0.34021593078856416,self.functionspace)
      ref.setTaggedValue(1,-0.53017545329543747)
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank1_constData_rank1_offset1(self):
      arg0=Data(numarray.array([-0.75815458532275559, 0.3924981011793256, 0.10808200359327147]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([-0.72715163687794715, 0.95561278160686425, -0.50804977417943453]))
      arg1=Data(numarray.array([-0.35478795531981322, -0.22203325352069636, -0.51803243198943472]),self.functionspace)
      res=generalTensorProduct(arg0,arg1,offset=1)
      ref=Data(0.12584650156174698,self.functionspace)
      ref.setTaggedValue(1,0.30899308753910304)
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank2_constData_rank2_offset2(self):
      arg0=Data(numarray.array([[0.28015044216149798, -0.88414320000271052, 0.91568852741017093], [0.53686005340843601, -0.707698518178973, -0.13998210234557518]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[-0.010011643571791851, 0.32869702090343833, 0.47227481152647233], [0.87891620383606761, 0.90561183562907588, 0.16490410705158287]]))
      arg1=Data(numarray.array([[0.2699701970896804, -0.16295188058893406, 0.029522036655111439], [-0.26353499569672367, 0.61247971933239298, 0.4321043629197685]]),self.functionspace)
      res=generalTensorProduct(arg0,arg1,offset=2)
      ref=Data(-0.38868122129881882,self.functionspace)
      ref.setTaggedValue(1,0.35197736024355497)
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank3_constData_rank3_offset3(self):
      arg0=Data(numarray.array([[[-0.47111442860255237, -0.010383548871733872, 0.059983431270890009], [-0.75276015444344258, 0.94387753867499402, -0.13510398183798733], [0.32154320314812468, 0.16596205849481338, 0.86357571910853625], [0.33003810833964975, 0.14011125918832446, 0.92454769266782599]], [[-0.75203707921459095, 0.02620988074053443, -0.092295293643869458], [-0.31392347074765636, 0.40318171287775351, -0.4691218260491008], [-0.24156144046150674, 0.10932932130970685, -0.032696670755059776], [0.2000482270499786, -0.66613745580944084, 0.67188854591257829]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[-0.84049657591574878, -0.89281735709171883, -0.68001504526521894], [0.93212843410192203, 0.67606010444108966, 0.75998171130145198], [-0.087243830372452313, -0.54733576773086745, -0.37738964407261122], [-0.69857929149137465, -0.34470568065779306, -0.33889452500743134]], [[0.44151469079220007, 0.0071263338401068577, 0.70545710408032147], [-0.88913217626848118, -0.55412307824496909, 0.87484117877527523], [0.38125981902846973, 0.61892400063821951, 0.51506190263849971], [-0.53971883720864877, 0.44617025284272627, 0.94235769893107268]]]))
      arg1=Data(numarray.array([[[-0.098277062600860443, -0.34212784673014607, -0.23716304163963842], [0.8295559797638119, -0.47666776094712349, 0.66715600531472918], [0.87801166982721446, 0.35994599918789771, 0.26283894517552908], [-0.99693250881826234, -0.9170741260686246, 0.27631361167244228]], [[-0.7701075718318473, 0.95510400101770387, 0.98790335038299815], [-0.58099826282764822, 0.84590384796263685, -0.033743442052180272], [0.69988919460131793, -0.7192543470142212, 0.35121169700187993], [0.70271334538064467, 0.66445528909114326, 0.43621155549765445]]]),self.functionspace)
      res=generalTensorProduct(arg0,arg1,offset=3)
      ref=Data(0.022236439941716035,self.functionspace)
      ref.setTaggedValue(1,2.7663442134281686)
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank4_constData_rank4_offset4(self):
      arg0=Data(numarray.array([[[[0.8467256350494079, 0.099403733370078795], [0.065344093592521135, -0.59761632886564109], [0.97960990951442217, 0.1028334499040231]], [[-0.5422502114942731, 0.13475152821539638], [-0.55853011487478499, 0.57304406462798418], [-0.52996794076923948, 0.53979869714040762]]], [[[-0.26307518154717391, -0.26124201521793222], [0.76333383601863769, 0.013951267628636854], [-0.89953545208714947, 0.63558773721082407]], [[-0.349693017221262, 0.57559037991396433], [-0.66973396047642453, 0.6186847166108671], [-0.24482506537976723, -0.059084796788048566]]], [[[0.8940870383420414, -0.83479168631463341], [-0.67215964583267285, 0.45681100884288628], [0.82437601598573207, -0.42471377271807009]], [[-0.78660562093842001, -0.036112970428441526], [-0.3865011282596047, -0.41440969884905798], [-0.95184611825523358, -0.48861298706676304]]], [[[0.98541092389225438, 0.28931665668178752], [-0.40140785599766371, -0.58157503158126622], [-0.34805028463655985, 0.0062242946948076749]], [[0.4103093008093337, 0.22641482817743608], [-0.49815427788495681, 0.37164469666713074], [-0.28573069224131564, 0.84811049177493958]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[-0.59881949454805894, 0.66927820450480158], [0.29187285341965485, -0.65180573102324679], [0.043849552153362614, 0.26524378215218736]], [[0.83101342108008391, 0.24574087294123581], [-0.78076938701820753, -0.32778540536524781], [0.47441198555872965, 0.12392441401099186]]], [[[-0.096404389633661269, -0.58515764862633746], [-0.74332280462727196, 0.96436476631959112], [0.70128622882804259, -0.53661847841742172]], [[-0.060245914219442476, 0.94107121426404583], [0.1653071395590251, 0.91258551354510842], [0.65570914702247962, -0.39958892171643634]]], [[[-0.62477131632991334, 0.28157827162045113], [0.4576618707438207, 0.35614507114427485], [-0.64996558469407795, 0.73881169450248785]], [[0.32618887265962448, 0.96362552072652274], [-0.039325063889797507, 0.28084841987718212], [0.26202207001703015, 0.16461547774098118]]], [[[0.017870610671381071, 0.87642217067800776], [-0.50197550217729692, -0.67507526158477216], [-0.27361820320484909, -0.36695087521640879]], [[0.93017396713119327, 0.81743358259025078], [-0.80955043163030127, 0.82738314914661215], [-0.62844114362011627, -0.58726531925015735]]]]))
      arg1=Data(numarray.array([[[[0.52371285554497105, -0.94686825931632113], [-0.39396516105162038, -0.70927337853238548], [-0.71904877533206846, -0.69402248870415462]], [[0.5082111029791152, 0.71779722349828989], [0.16686715166682298, -0.6257037488964996], [-0.8087628296966658, 0.075224071453795727]]], [[[0.29349107461050328, 0.60269394087921579], [-0.94084995914471636, 0.26703364348276604], [-0.19922294251443673, -0.75518070572111684]], [[-0.4247502427015073, -0.83844538488110421], [0.56433015110886409, 0.7032940233321221], [0.84557917933842663, 0.80032565400321953]]], [[[0.44399031534905853, -0.44384647221375229], [0.2698795426894085, 0.62739618338745773], [-0.17096994948777411, 0.22260715635936057]], [[0.0047237301880451721, -0.67908323003392823], [0.10430719280392409, -0.61502511322668441], [-0.35239739384154967, 0.27204766581123097]]], [[[-0.36550893116469729, 0.59867627410271718], [0.50147522468901817, 0.93328140877018861], [0.45370435491467709, -0.20804645421607826]], [[0.22158627252206475, 0.94868944129244759], [0.6089042383451484, -0.63880529693980925], [0.94991118519668416, 0.10274960082931472]]]]),self.functionspace)
      res=generalTensorProduct(arg0,arg1,offset=4)
      ref=Data(-2.4052704924143611,self.functionspace)
      ref.setTaggedValue(1,-1.2343277768703265)
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank0_constData_rank1_offset0(self):
      arg0=Data(-0.113558711588,self.functionspace)
      arg0.setTaggedValue(1,-0.600673626933)
      arg1=Data(numarray.array([-0.36691333126283698, -0.96578741617120389]),self.functionspace)
      res=generalTensorProduct(arg0,arg1,offset=0)
      ref=Data(numarray.array([0.041666205162852001, 0.10967357464878767]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([0.22039516145954699, 0.58012303011735866]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank1_constData_rank2_offset1(self):
      arg0=Data(numarray.array([-0.1764766305572274, -0.95234247275418937, 0.54197890446731489]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([0.93719711342575396, 0.89954762626464313, 0.23567708115211405]))
      arg1=Data(numarray.array([[-0.41547785224424971, 0.22440470227137399], [-0.06114638265503225, 0.19943431012788237], [-0.34469324681100288, 0.27923604547665537]]),self.functionspace)
      res=generalTensorProduct(arg0,arg1,offset=1)
      ref=Data(numarray.array([-0.055262039591023077, -0.078191903782040273]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([-0.52562502548890899, 0.45552163562955783]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank2_constData_rank3_offset2(self):
      arg0=Data(numarray.array([[-0.35532561771493043, 0.35891712260855035, -0.62207977196025355], [0.1864046500415748, 0.32281630466308187, 0.59467336304780027]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[-0.040656297511616479, -0.53539256185839301, 0.74545883478719666], [-0.87485785190246479, -0.40898598482743442, 0.89410232013596724]]))
      arg1=Data(numarray.array([[[0.2611291894390384, -0.40937694224187249], [0.75310306557859841, 0.36679884756623093], [0.51240870667419358, 0.98126370569946131]], [[-0.95756079702374453, -0.76888260500933869], [0.28573288367209804, -0.43934007852291224], [0.6749062851642087, 0.89583539646578636]]]),self.functionspace)
      res=generalTensorProduct(arg0,arg1,offset=2)
      ref=Data(numarray.array([0.17385084209170082, -0.085731786044853875]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([1.2924613843374779, 2.2050695000551586]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank3_constData_rank4_offset3(self):
      arg0=Data(numarray.array([[[0.35322030936760518, -0.84002164783361555, 0.72749701093977803], [-0.49844844719851111, 0.47874230191573952, -0.25242460698768632], [-0.61574740483178725, 0.50377692964297194, 0.2755640764426559], [-0.13456813237022525, -0.86125698654152072, 0.47895511646938416]], [[-0.50222860462177654, -0.54325240565703004, -0.54204298250994176], [0.85234648428572779, 0.12184025431009826, 0.44563776561275947], [0.60507853602305217, -0.55448866419984499, 0.4101619569173871], [0.62647794412255031, -0.74172318461940967, 0.29411326964163131]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[-0.061061485137502203, -0.53117436767602966, -0.15277607088406175], [0.10890328457822296, -0.83536852795197802, 0.40552061151115271], [0.72240525017369261, -0.27082373351093758, 0.097068686883740929], [0.54450458046534322, -0.46908968868179146, 0.90083837994091076]], [[0.67055894638658442, 0.85419345168290861, -0.31723653690260689], [0.029747671655794505, 0.58357170358938393, -0.27580334345605162], [-0.16627696110449075, 0.36249241838132717, -0.37773451061059182], [-0.96432695384041645, -0.43720363329276002, 0.26971938052240763]]]))
      arg1=Data(numarray.array([[[[0.245582071013416, -0.88815018300635207], [0.82758569174193997, 0.19889686849840871], [-0.27694958807388259, -0.48402245520898934]], [[0.49604743605564972, 0.10329388397100381], [0.15176723510386347, -0.86907657747545652], [-0.3934106681106917, -0.30816666806531434]], [[0.91134729157483507, 0.34156908975514355], [-0.85192148785949806, -0.62586101888614443], [0.82821157203358786, 0.28102778823120089]], [[0.086018789091035108, 0.16389046134182284], [0.16565940756703834, -0.086880326086849591], [0.38181974144506192, -0.04223228206833074]]], [[[-0.62741824130493296, -0.0036089056714547763], [0.087345210875552359, -0.10322109496533738], [0.47438062357709221, 0.89415015418556787]], [[0.13234237621017519, -0.67926544976081971], [-0.5697400115477671, 0.071737312742518711], [-0.67429756148890951, 0.10128501381974719]], [[-0.12793750409173987, 0.93275591413314318], [0.82896294636420564, 0.77240761334233521], [-0.85916108091214061, -0.032367406021573064]], [[-0.42343630951408384, 0.888851125949085], [0.73399598454650672, -0.76875872595626804], [0.57692481284349739, -0.57940181912430133]]]]),self.functionspace)
      res=generalTensorProduct(arg0,arg1,offset=3)
      ref=Data(numarray.array([-3.394762472886605, -1.5107131067095112]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([0.8881472118504774, 0.24957002975640435]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank0_constData_rank2_offset0(self):
      arg0=Data(0.545149930718,self.functionspace)
      arg0.setTaggedValue(1,0.546286199071)
      arg1=Data(numarray.array([[-0.90557731647810891, -0.42989995775960765, -0.15628963018075703, -0.83943056826498186, 0.42800604693693955], [-0.40278232328881192, 0.77289271542532489, -0.62609381290102162, -0.77715143617044724, 0.075391359940005342], [-0.98210336745286408, 0.32713587944451761, 0.98391438485078986, -0.60590917365952612, 0.58664400663213834], [-0.60532700615790591, 0.86930710612887485, 0.28850878013367076, -0.83352559811712146, -0.54400887226562511]]),self.functionspace)
      res=generalTensorProduct(arg0,arg1,offset=0)
      ref=Data(numarray.array([[-0.49367541133808929, -0.2343599321884427, -0.085201281065025697, -0.45761551613246343, 0.23332746683467859], [-0.21957675563544471, 0.42134241026678115, -0.3413149987261373, -0.42366405158593312, 0.041099594648051012], [-0.53539358272512083, 0.1783381020146432, 0.53638085873412966, -0.33031134404206247, 0.31980893957180589], [-0.32999397546888781, 0.47390270867906681, 0.15728054150148682, -0.45439642206546377, -0.29656639902573656]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[-0.49470439018384149, -0.23484841390532665, -0.085378868025675139, -0.45856933452157855, 0.23381379656063167], [-0.22003442444247595, 0.42222062379944952, -0.34202640931163758, -0.42454710416820768, 0.041185259464427443], [-0.53650951570076244, 0.17870981616153028, 0.53749884951152693, -0.33099981946077944, 0.32047552459091772], [-0.33068178938909659, 0.47489047483264879, 0.15760836489786548, -0.45534353082387558, -0.29718453909094916]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank1_constData_rank3_offset1(self):
      arg0=Data(numarray.array([-0.33204624312377318, 0.49376617740506945, -0.35519643690492253]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([-0.018907996425603368, 0.8680186316991545, -0.51123935241249119]))
      arg1=Data(numarray.array([[[-0.3135363556134152, -0.62157060923499774, 0.57303021658313136, 0.32481687343043775, 0.18068439827759697], [0.3828927595495033, -0.5068737686464897, -0.32082037789064577, -0.21347336630733382, -0.5814509027447059], [-0.26408135042785541, 0.97591710819680122, 0.28682841117493774, -0.86652102798446839, 0.8275674924355596], [-0.66961866153859972, -0.21548496266007988, 0.36945932288605321, -0.18811163908733719, 0.12373484529555756]], [[-0.80050384712536626, 0.71092554333265401, 0.76154271902188819, -0.68066704550372603, -0.700675630169868], [0.65833663094673023, 0.11993224915546619, 0.64405542155280449, 0.25535387342235594, -0.23202621868582374], [-0.28696615381231605, -0.13596528102548966, 0.52022959949400294, 0.33433738295375659, 0.41224359032123314], [-0.84108108820439376, 0.91829924924128181, -0.52775670535823016, 0.69748601119472053, -0.66313500245050183]], [[-0.29452935970266569, 0.80567151614062471, 0.46193517816638296, -0.33667446601182527, 0.69723669334690186], [-0.51931607876979058, 0.49914288456564893, 0.35790619117123956, -0.81882190411509193, -0.95649988214520931], [0.43490263267189877, -0.2916680327972061, 0.61039539895025086, -0.51540487362665033, 0.51099958605533757], [-0.45571662238159072, 0.40284579876935811, -0.66673530816055337, 0.28302126386733195, -0.77176964824149064]]]),self.functionspace)
      res=generalTensorProduct(arg0,arg1,offset=1)
      ref=Data(numarray.array([[-0.18653737649871516, 0.27124952173468586, 0.021673777323529958, -0.32435901694549651, -0.65362149230520916], [0.38238548018705787, 0.05023024472597884, 0.29741298088304069, 0.48781075805605467, 0.41824723879701081], [-0.20848282604954924, -0.28758522044009105, -0.055178786446962669, 0.63587951815030186, -0.25274396726867859], [-0.031084112412630982, 0.38188668996776554, -0.14644398533865979, 0.30632862009392786, -0.09438949662063395]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[-0.53834891063957802, 0.21695828805234085, 0.41403897431658609, -0.42485207778494205, -0.96807071730668359], [0.82970354247052258, -0.1414940908523154, 0.38214244691429866, 0.64430225345521563, 0.29859137105930417], [-0.46643805923584636, 0.012639141818862054, 0.13408748607403592, 0.57009050800036709, 0.080944376550484642], [-0.48443263716235241, 0.59522462143558708, -0.12422706163709607, 0.46429605960752057, -0.18339410029287528]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank2_constData_rank4_offset2(self):
      arg0=Data(numarray.array([[0.34524472787256055, 0.0010926408173355107, 0.25848340788189628], [-0.90364739276881578, -0.97952105133929979, -0.78061779432865719]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[-0.53093288662760174, 0.14409731236741563, 0.6430895102904417], [-0.48776933782319021, 0.78985150371993362, 0.37631089683570584]]))
      arg1=Data(numarray.array([[[[0.58555109869677802, -0.55519095715826161, -0.27629663658317161, -0.30222946942244655, 0.69025951228469284], [-0.59069710012077414, -0.63365528861472731, -0.56236123823100614, 0.18433815933954634, 0.86924934337730986], [0.67854524388948145, 0.74595682352730064, 0.73312153518486367, -0.65038175843699264, 0.40238219907701134], [-0.67158795814606242, 0.2202526594341061, 0.861071574341991, -0.62629539427233238, -0.016200421863829417]], [[0.13219952728301343, -0.73672915149557294, 0.71785021420615513, 0.35540489239134376, 0.17648852947573768], [0.47774608711326572, 0.083507302563866626, -0.87707481098305018, -0.43228408709408117, -0.79901898173463426], [0.23216782888885001, 0.54520001684368169, -0.33576286531270627, -0.84446819477583324, -0.35325868889008305], [0.63244959595352479, -0.59317209515197855, 0.023541958921295514, 0.3172606826520461, -0.84857021778710018]], [[0.61174912586806895, 0.63365824225518752, 0.29248870728097986, -0.65094563639841119, -0.708813292449191], [-0.63663051612327015, -0.35492379975404664, -0.67741011038741239, -0.43355949018743667, 0.060561799900307633], [0.0030308654272446223, 0.78497254122561522, 0.67594650957793778, -0.32514924524567612, -0.46151879139332141], [0.081978603799278238, 0.97021877359485731, 0.025018022099402293, -0.1833946966019695, -0.61967158021309254]]], [[[-0.4992426366035434, 0.15593580240276106, 0.79210904958764572, 0.74063449882709098, -0.9068331989910472], [-0.68526599533949906, 0.60258293720869505, -0.97897071863532914, -0.72232591251373179, -0.75608894629509438], [0.36962642516141142, 0.90859470277076171, -0.38392053030949858, 0.58524957102996056, 0.7533354859993604], [-0.10036199951061975, 0.76903474209666478, -0.18680222780634015, -0.037845101776209145, 0.73531412604385937]], [[-0.68624992455532574, -0.8992862534681938, 0.93029847515395359, -0.092702847084319195, -0.61719209357197591], [0.7041724341872273, 0.022295207794382765, 0.97796806394780766, 0.65614786584234586, -0.82565219911520216], [-0.47417369190316028, 0.63016856707742508, 0.68993566916835292, -0.2882165143793225, 0.85367314287145479], [0.92397442705104771, -0.029986375049434466, -0.040160744312137453, 0.54467171587887098, -0.71761779669935333]], [[-0.83894749996764983, 0.97591798165486621, 0.5634061348909043, 0.48873781199412258, 0.15147758467655836], [0.52476153261479985, -0.68856490735218245, 0.79399004800197193, 0.33830346007458334, -0.7357692627438972], [0.22112985805193941, 0.34005943505319935, 0.041749223955399595, -0.83547018959405284, 0.8434698706606345], [-0.9804486905572749, -0.51450014655612075, 0.55893433771488699, 0.32427815998563303, 0.74300149585908337]]]]),self.functionspace)
      res=generalTensorProduct(arg0,arg1,offset=2)
      ref=Data(numarray.array([[2.1386627766377964, -0.050551696486602071, -2.0858411990599084, -1.232198923901251, 1.3610488269449603], [-0.84812256323621016, -0.33927192377910853, -1.0633085829368576, -0.30296690875243659, 2.3812210268368994], [0.19313452830876554, -1.242733311833806, 0.065992521147737931, 0.096128532221405827, -2.1561286542692386], [-0.25898590145533518, 0.062242415972857568, 0.07560043860870902, -1.0157391033771819, -0.70823825757845005]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[-0.5126546634256175, 0.17699268380092287, 0.99867868771801493, -0.45750277399848316, -0.78504235421063573], [1.0609689165506411, -0.41521221787967466, 1.2853051684973513, 0.55891536259121044, -1.0979265101150986], [-0.79646377213764874, 0.36983947940846273, 0.74499532693539272, -0.81298818105407233, 0.062888504229935693], [0.91022457100309773, -0.17088473086985506, -0.16796159939630184, 0.83099688688726969, -1.1580552649681661]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank0_constData_rank3_offset0(self):
      arg0=Data(-0.924617863716,self.functionspace)
      arg0.setTaggedValue(1,0.224682461316)
      arg1=Data(numarray.array([[[0.87993265486645411, -0.31453022835734168], [0.86485118794754112, -0.78356060008268491]], [[-0.94039371524826287, 0.85376800703238387], [0.76239834222749447, -0.24371106924434427]], [[0.41757732092291744, 0.72831001891926661], [-0.012466098739756903, -0.82852927793757436]], [[0.68404166865637528, -0.26590712174826514], [0.24335424842288633, -0.21772546843993434]], [[0.73291364570506534, -0.43367705312592486], [0.51334627555604162, -0.044114936965304219]], [[-0.10481924649327445, -0.94095714637902739], [0.30113796837427675, 0.9851204621861982]]]),self.functionspace)
      res=generalTensorProduct(arg0,arg1,offset=0)
      ref=Data(numarray.array([[[-0.81360145155635366, 0.29082026781779391], [-0.79965685783208851, 0.72449412814028724]], [[0.86950482804457097, -0.7894091507711406], [-0.70492712649081912, 0.22533960820858809]], [[-0.38609945040789623, -0.67340845381591352], [0.011526377585623696, 0.76607297099259719]], [[-0.63247714636561814, 0.24586247485768614], [-0.22500968530292234, 0.20131285750544417]], [[-0.67766504937994332, 0.40098555040383671], [-0.47464913665106656, 0.040789458774814782]], [[0.09691774776890659, 0.87002578653304941], [-0.27843754500192641, -0.91085997724927992]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[0.19770543468733029, -0.070669425865472757], [0.19431689357973972, -0.17605232421647501]], [[-0.21128997454766379, 0.19182669721251655], [0.17129753603457629, -0.054757602887666207]], [[0.093822300254518681, 0.16363848765156308], [-0.0028009137478513849, -0.18615599743901812]], [[0.15369216575611733, -0.059744666595736552], [0.054677431507252398, -0.048919094140167783]], [[0.16467284184877456, -0.097439627712411783], [0.11533990469910725, -0.0099118526181453444]], [[-0.023551046295351312, -0.21141656764090577], [0.067660419929899837, 0.22133929013631731]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank1_constData_rank4_offset1(self):
      arg0=Data(numarray.array([0.26096293399142922, -0.76555779914996291, 0.45123894607148296]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([-0.98596660037864226, -0.27158212379771629, -0.40988253196315871]))
      arg1=Data(numarray.array([[[[-0.54941606742649518, 0.46709553122595837], [-0.16566812156193733, -0.23138156476341742]], [[0.76165381099391039, 0.87776382109002182], [-0.93887343611489205, -0.18617603202011135]], [[-0.0077778577874081378, -0.46115170637879177], [-0.40903410358314596, 0.010553327643679555]], [[0.91479770904495439, -0.0811659039884991], [-0.54706911256909341, -0.27636287177829311]], [[-0.34801107015318644, 0.98563736007163438], [0.17219594964846707, -0.77844872494718564]], [[-0.42425571016719221, -0.63583879516366726], [-0.089613025033624227, 0.040283207994037173]]], [[[0.56218632715784089, 0.57783169115170852], [0.34939853234371987, 0.2553641825156967]], [[-0.75292918643885831, -0.10253635461000132], [0.31401439927726393, 0.63304568177640408]], [[-0.638044440965432, -0.62631957333362975], [0.56910819680957414, -0.29529497141159111]], [[0.12023638863656583, 0.95040202776488547], [-0.50463535944503501, 0.06287210542708066]], [[-0.42215970214268439, -0.93269095133371427], [0.25339069914712686, 0.61538280499302833]], [[-0.31540645662854838, 0.11981850741806799], [-0.92378544505224158, -0.86226737786726804]]], [[[0.260746213341841, 0.59348793686277879], [-0.76097775734520101, 0.95825421688892054]], [[0.60216360416207726, -0.68695388862931117], [0.25557631364453481, 0.55510943941305291]], [[0.82721386168059952, 0.21940522602399004], [0.21091685852409281, 0.077962447950230995]], [[0.28359639863224695, -0.5362788428956673], [0.89686537587541926, -0.59263757185255495]], [[-0.54642509552665408, 0.98332898133610258], [-0.84183376296820933, -0.12517634311913595]], [[0.017731619794639775, -0.20769127541172927], [0.56736458601529027, 0.089932281886001775]]]]),self.functionspace)
      res=generalTensorProduct(arg0,arg1,offset=1)
      ref=Data(numarray.array([[[-0.45610450976830641, -0.052664066338092619], [-0.65410081172722645, 0.17652356933687524]], [[1.0468938941933301, -0.0024190206335244491], [-0.3700813525374621, -0.28273110406190449]], [[0.85970127651746964, 0.45814451476771456], [-0.44725405745223379, 0.26399908860539145]], [[0.27465012912714343, -0.99075887699692844], [0.64826336141590202, -0.38767384984935049]], [[-0.01419862167897204, 1.4149599825056318], [-0.5289166456916059, -0.73074181019145945]], [[0.1387480553146653, -0.35137674259292645], [0.93984247209616401, 0.71120888832362905]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[0.28215081736998038, -0.86072968910642822], [0.38036432909012369, -0.23398951691220785]], [[-0.79329945389876444, -0.55602837045071585], [0.73566088598679868, -0.21589020389822644]], [[-0.1581103397450683, 0.53484701053047168], [0.16228321578299648, 0.037836161339338488]], [[-1.0508552509319287, 0.041725999224505178], [0.30883236465950931, 0.4983214097260254]], [[0.68174842190546781, -1.121552700328682], [0.1064571149586474, 0.65170507023622337]], [[0.49669283437823147, 0.67950427637391886], [0.10668622968057842, 0.15759683671979507]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank0_constData_rank4_offset0(self):
      arg0=Data(-0.405173384064,self.functionspace)
      arg0.setTaggedValue(1,-0.727146985735)
      arg1=Data(numarray.array([[[[-0.82129799346309174, -0.6136472335807901, -0.79861711496215815, 0.062964396993306693], [0.96501617295616726, -0.17706165931669493, 0.13431068478250752, 0.61419505458235535], [-0.57965141731619374, -0.56074552082830897, 0.93828921552246269, 0.73268762015990618]], [[0.67472437272575969, 0.55656698437301144, -0.47079719921110397, -0.84355580200810376], [-0.32086780071302212, -0.79545855761875539, 0.9468774774869837, 0.0079869608195370922], [-0.037479345026607103, 0.23657460032697619, 0.9863830306351451, 0.76694309148150652]]], [[[0.98335595008341925, 0.91145070773164871, 0.86152340132197014, 0.55817443548559065], [-0.58476195857837743, 0.65129828770545384, 0.27641110150525172, -0.5582686772730916], [-0.50032924838983339, -0.95503333990014339, -0.015842688190702114, 0.679986980054474]], [[-0.51813895645664831, -0.0070506652972588402, -0.069838922000114545, 0.11156484620759244], [0.93889828448636159, 0.064058495797183701, -0.60203641176738865, -0.99178245867344206], [-0.63967458422701839, 0.25753526583176156, 0.36764346923377311, -0.29560940336823838]]], [[[0.94912609360905353, 0.87113894957538252, 0.44217764655238767, 0.10053851554893822], [0.14055593963627833, -0.2742394892188289, -0.36923001319691151, -0.42676472237676477], [0.94340348690673781, 0.3107438919402028, -0.20641851515479037, 0.19882711905692241]], [[0.43000661513036076, 0.48290946605682628, -0.63898331442750878, 0.45114444557296585], [0.92020807291251439, 0.35890007980319827, 0.75565096102813989, -0.43366776896967529], [0.6377826039453216, 0.479302496700025, -0.97770389431033067, -0.28248119198433241]]]]),self.functionspace)
      res=generalTensorProduct(arg0,arg1,offset=0)
      ref=Data(numarray.array([[[[0.33276808733663643, 0.24863352625160692, 0.32357839904086261, -0.025511497805344285], [-0.39099886847340221, 0.071740671693380359, -0.054419114669318161, -0.24885548874067259], [0.23485932633165321, 0.22719916027288814, -0.38016981668424638, -0.2968655225221864]], [[-0.27338035740793859, -0.22550612851685931, 0.19075449441234377, 0.34178635894667364], [0.13000709265215529, 0.32229863567327505, -0.38364955184764182, -0.0032361039436405873], [0.015185633056942807, -0.095853731398133343, -0.39965615050601327, -0.31074492776027579]]], [[[-0.39842965803503538, -0.36929556765940696, -0.34906635196418373, -0.2261574249238609], [0.23692998162925227, -0.26388873126488394, -0.11199442138981557, 0.22619560918782294], [0.20272009471644203, 0.38695409022154431, 0.0064190355869018396, -0.27551262582831521]], [[0.2099361144030702, 0.0028567419183948839, 0.028296872366187081, -0.045203106280540188], [-0.38041659521747784, -0.025954797520211806, 0.24392913028570379, 0.4018438550363016], [0.25917911599116661, -0.10434643517294646, -0.14895934855857657, 0.11977306232392927]]], [[[-0.38456063125128231, -0.35296231618965213, -0.17915861341120606, -0.040735530573761634], [-0.0569495257127643, 0.11111454189085009, 0.1496021739450881, 0.17291370676464293], [-0.38224198332803622, -0.12590515427471413, 0.083635288318788428, -0.080559456672042964]], [[-0.17422723542239085, -0.19566206255891455, 0.25889903186719787, -0.18279172171459793], [-0.37284381894522495, -0.1454167598747988, -0.30616965705119004, 0.17571063751304583], [-0.25841253593784869, -0.19420061457840324, 0.39613959547053307, 0.114453860490801]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[0.59720436033676705, 0.44621173620280041, 0.58071202790099474, -0.045784371482295361], [-0.70170860135045687, 0.12874985186134549, -0.097663609591583808, -0.44661008259281082], [0.42149178087840344, 0.40774441523462296, -0.68227417481467501, -0.53277159448451583]], [[-0.49062379382937304, -0.40470600504637017, 0.34233876429876353, 0.61338905872933591], [0.23331805410784431, 0.57841529244946877, -0.68851910361487767, -0.0058076944851087374], [0.027252992763413763, -0.17202450752918741, -0.71724544750635111, -0.55768035720094411]]], [[[-0.71504431500758714, -0.66275863477296337, -0.62645414441130531, -0.40587485827759828], [0.42520789555267385, -0.4735895867192893, -0.20099149928319321, 0.40594338590930984], [0.36381290484164996, 0.6944496143846749, 0.011519962963806134, -0.49445048288555377]], [[0.37676318037925205, 0.0051268700183270694, 0.050783161619354533, -0.081124041633822863], [-0.68271705747587874, -0.046579942129630632, 0.43776896211928112, 0.72117162532909096], [0.46513744577186933, -0.1872659922699885, -0.26733084047844086, 0.21495148661409169]]], [[[-0.69015417805011559, -0.63344606133996217, -0.32152814284989822, -0.073106278531666694], [-0.10220482783364919, 0.19941241795493608, 0.26848449113897277, 0.31032068149423425], [-0.68599300183598066, -0.22595648435983415, 0.1500966010946691, -0.14457654030458511]], [[-0.3126780140380872, -0.3511461626260467, 0.46463479102082633, -0.32804832372940185], [-0.66912652646720916, -0.26097311120889244, -0.54946931857925385, 0.31534021101665632], [-0.46376169801296369, -0.34852336573061066, 0.71093443968898051, 0.20540534727819454]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank0_taggedData_rank0_offset0(self):
      arg0=Data(-0.310799704615,self.functionspace)
      arg0.setTaggedValue(1,0.616864357512)
      arg1=Data(0.831342966246,self.functionspace)
      arg1.setTaggedValue(1,-0.468848981082)
      res=generalTensorProduct(arg0,arg1,offset=0)
      ref=Data(-0.25838114834327019,self.functionspace)
      ref.setTaggedValue(1,-0.28921622548540266)
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank1_taggedData_rank1_offset1(self):
      arg0=Data(numarray.array([0.67502971859952887, -0.065708646013713068, -0.70902320370768646]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([0.44483176510879674, 0.20931457518939633, 0.77690854033560908]))
      arg1=Data(numarray.array([0.52276729489550511, 0.79980940035430148, 0.53006715601316357]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([0.27426381602572225, 0.24695337616728019, -0.67066486947670367]))
      res=generalTensorProduct(arg0,arg1,offset=1)
      ref=Data(-0.075500845936646466,self.functionspace)
      ref.setTaggedValue(1,-0.34735306638727986)
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank2_taggedData_rank2_offset2(self):
      arg0=Data(numarray.array([[-0.58310186253499974, 0.49078022660488196, -0.97065818167880691], [0.77407348696512779, -0.42744506094084289, -0.037467075007022732]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[0.29214050493284405, -0.020830870644631183, 0.94746652985957414], [-0.0029334426710152517, -0.45936862433978631, -0.57679557332957221]]))
      arg1=Data(numarray.array([[0.25898691785204586, -0.7327972616322016, 0.38914495299179408], [-0.10099774108705062, -0.70309150462590031, -0.87075966390151271]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[0.16909967941794646, -0.53343339763968634, -0.19044648386126339], [0.68772720651278374, 0.01174340107765004, 0.97830617041350076]]))
      res=generalTensorProduct(arg0,arg1,offset=2)
      ref=Data(-0.6334067577080752,self.functionspace)
      ref.setTaggedValue(1,-0.69162354814231575)
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank3_taggedData_rank3_offset3(self):
      arg0=Data(numarray.array([[[-0.22710664566938976, -0.99806988101702387, -0.54015939118203682], [-0.027747473138877821, 0.63061961183173576, -0.80485188702888011], [0.2023891378074214, 0.76452442720969982, 0.86615873810714361], [-0.39318262517264557, -0.11913400132831509, 0.50918296283719466]], [[0.0077278910093607767, -0.43991058342873379, 0.39579469046896532], [-0.9939734647868872, 0.25613645036238375, -0.1867824137594305], [-0.24563231887201731, -0.091174471848912697, 0.67887030878049326], [-0.99730734217791861, 0.52232364520702523, 0.42179972860951898]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[-0.81665480033089088, 0.10804107756082448, -0.93478371527359383], [-0.84225494963449643, -0.81692784771904337, -0.035580276714645809], [-0.4839491642625795, 0.85165679188382248, -0.65328652940072551], [0.37481297805995961, -0.46016766218932581, -0.91040969034968389]], [[-0.86478755075675351, -0.19150530433406487, 0.24780783138647822], [-0.50595610483998743, -0.39654490990793634, 0.62365417902244236], [0.82987893518648814, -0.70215999714226762, 0.79750129651651691], [-0.78805161997050432, -0.2342288861316677, -0.89976308021927309]]]))
      arg1=Data(numarray.array([[[-0.86547080778425256, 0.27682175607948878, 0.48012564549352854], [0.39130445123084523, 0.74139520061023889, 0.86131580666183449], [0.966225991419146, 0.63013908623728598, 0.15445296510202389], [0.70197004381434125, -0.7197841206781328, -0.8485101138622182]], [[-0.32288196216987997, -0.71527480788599673, -0.018636849135093447], [-0.76180250648367043, -0.11543629556080237, -0.3168663653648327], [0.4236380863741076, -0.56859535698922481, -0.76393914440449495], [0.63697571921008156, 0.13195478072627131, -0.64323823329996244]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[-0.73853172950383228, 0.12923366445180173, 0.99289280593569718], [-0.41251446936505909, -0.937317699449004, 0.28524805787893626], [0.36622568613401429, 0.79038304069003273, 0.55707335252001888], [-0.97129585336953084, -0.44534230961076493, 0.13231625229313959]], [[0.71502039138297002, -0.97593836947231583, -0.9123767567039458], [0.65005580306398802, -0.18883416817769283, -0.88648973727110225], [0.64275847358674043, 0.2503992509690931, 0.9031056356334719], [-0.29836160117675159, -0.094479500585603837, -0.18563505072647946]]]))
      res=generalTensorProduct(arg0,arg1,offset=3)
      ref=Data(-0.70371017603077668,self.functionspace)
      ref.setTaggedValue(1,0.68203193767488002)
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank4_taggedData_rank4_offset4(self):
      arg0=Data(numarray.array([[[[0.70077334827098592, 0.24770521217551655], [-0.16206022103860174, -0.91934539699446916], [-0.43722211980951786, 0.5378224157780862]], [[0.66659442838048077, -0.038862878593517003], [0.71791838143489128, 0.9282410722564014], [0.38625424899240635, 0.17144520480007652]]], [[[0.93259914488084905, -0.073703650010307431], [-0.61678213999175546, 0.4050819843906055], [-0.99170292136658666, -0.050984952844757903]], [[0.77791234483549587, -0.34434225502347182], [-0.95525674749130496, 0.14117341460285981], [0.46776967376438461, 0.30128638310295042]]], [[[0.094643475346904538, 0.62207460763338074], [0.59455721326870203, 0.27677694563958166], [-0.83218171649049388, 0.43405866437620366]], [[-0.27161153923282044, -0.67343109874070284], [-0.2435215352762814, -0.83915777147475556], [0.45265732190161834, 0.65694861567161578]]], [[[0.3909864333136297, 0.17622394423079379], [0.058825456630436923, -0.54892718702545817], [-0.90955570372062655, 0.41561417140039203]], [[0.56789908454863647, -0.8092739289905384], [0.99674827718570214, 0.40089732139555467], [-0.51560193301147539, -0.029278453567499918]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[-0.11244489418769699, -0.26113569033201856], [0.08931014035312268, -0.48131288900999225], [-0.29412538056744397, 0.63844231566010268]], [[-0.018375422710863232, 0.72210390420456472], [0.62045724365788413, 0.66266123987172976], [0.2016718296167217, -0.96117378770262984]]], [[[-0.11910254489693783, -0.52927440750225774], [-0.75647591578557827, -0.19745836275135842], [-0.43840657757513601, 0.25499117107704983]], [[0.55118199886663866, 0.95480227044593247], [0.50196171411330925, 0.37559385783133492], [0.81559864353670664, 0.46004518628062807]]], [[[0.4389718150684836, 0.68699178166027974], [0.54516087858327777, -0.83488661646054241], [-0.99577380359977408, 0.75314663151001904]], [[-0.52905381569506527, -0.60593837377323712], [-0.49891507401493351, -0.51590710425373842], [0.52902379226412743, 0.94907469771893571]]], [[[-0.23738147089140971, 0.24144974465316071], [0.34654209249322432, 0.59552459988360185], [0.41079891103344468, -0.87985027270530147]], [[-0.0013348596824809267, -0.23716309057641149], [-0.20401635547721853, 0.370812690950582], [-0.64438062237623517, -0.20117921345866674]]]]))
      arg1=Data(numarray.array([[[[-0.1996026464032481, -0.67308057475250305], [0.92158960473024076, 0.60687524575789409], [-0.7683475120659331, -0.71754764207832777]], [[0.8410350032356626, -0.22809980157622878], [-0.075825816521801981, -0.61205854160404383], [-0.99477150617561949, 0.82120044155819927]]], [[[-0.23764063538977886, 0.9548374332762033], [-0.68460625544195564, 0.65211896082722576], [-0.40405613758302206, -0.29797778326355506]], [[0.98464222735026286, -0.52936588922700389], [0.23364789657710472, 0.1834822848153268], [0.60192777381380491, 0.042098697964761955]]], [[[0.034530136522364252, -0.42040906026648295], [0.96576977042169743, -0.36922067790126567], [-0.97458819273701636, 0.24457987577354778]], [[-0.65980858295588796, -0.60943501891214891], [0.2467680473171463, 0.16571475574700334], [0.26589246811911793, 0.46714533778114431]]], [[[-0.69488269160310212, -0.20519471913589404], [-0.18061056877162307, -0.34655259176745368], [-0.54719834093041508, 0.26131889786489348]], [[0.90122387216017064, 0.9305956410775249], [0.98728661729766665, 0.51816011971428155], [-0.11679780410323803, -0.097926332723919485]]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[[-0.13745002205651402, -0.39353858360086225], [0.47480656961359591, -0.84738020596672103], [-0.99024438939289094, 0.25692927956060707]], [[-0.11005056490128506, -0.33440320388011657], [0.29388761513261907, 0.37173097718551706], [0.22222494212277111, 0.49025411956541287]]], [[[0.59799991173984091, 0.7320873390563245], [-0.52057743285891966, -0.38564794490269705], [0.38225742098914828, 0.94815854480439876]], [[0.13422769043466953, -0.38133393784533198], [-0.63734260666139031, -0.61235475124842598], [0.21931741313950393, -0.80636450946942739]]], [[[-0.098871828941902162, 0.43496625564121194], [0.26526633689823687, -0.25803070408237372], [0.7232502084139163, 0.18124854040113814]], [[-0.44032941503097778, -0.52970200616406116], [0.57147368616820327, -0.96980318319876413], [0.24803925946992145, 0.095497784826516163]]], [[[-0.53143849697986734, -0.50821762546650473], [-0.059171353716473085, 0.002198208159974957], [0.50632312293066728, 0.71597133854864659]], [[-0.21934802889305582, 0.289739018256151], [-0.31662004985502556, -0.58310437703184914], [-0.77806388603393839, -0.55892627840498021]]]]))
      res=generalTensorProduct(arg0,arg1,offset=4)
      ref=Data(3.9354697443965856,self.functionspace)
      ref.setTaggedValue(1,0.81873619965094468)
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank0_taggedData_rank1_offset0(self):
      arg0=Data(-0.974845763375,self.functionspace)
      arg0.setTaggedValue(1,0.0351681815658)
      arg1=Data(numarray.array([-0.5991188560449745, -0.45672668521689452]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([0.92992894160965966, 0.61170256611022511]))
      res=generalTensorProduct(arg0,arg1,offset=0)
      ref=Data(numarray.array([0.58404847857341124, 0.44523807410391403]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([0.032703909861815608, 0.021512466909226802]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank1_taggedData_rank2_offset1(self):
      arg0=Data(numarray.array([0.41816853697889433, -0.77190902691911667, 0.91542214382149023]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([-0.64386019800959016, -0.66834854138538002, -0.30995679990287073]))
      arg1=Data(numarray.array([[-0.079381947078021042, 0.21868134088479096], [0.53094996110324999, -0.53142238299095346], [-0.056215530106891842, 0.94938117020380997]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[-0.93549281369488013, 0.59326437075603122], [0.52109759602876871, 0.54874249081681636], [0.40008030181601595, -0.048471107791627555]]))
      res=generalTensorProduct(arg0,arg1,offset=1)
      ref=Data(numarray.array([-0.49450104157661706, 1.3707399370516877]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([0.13004415998181157, -0.73370660910177266]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank2_taggedData_rank3_offset2(self):
      arg0=Data(numarray.array([[-0.5077850512315607, -0.4751934181113715, -0.73659509017978864], [0.74425103485265365, 0.47777299708426435, -0.84364646702289647]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[-0.042193039402651511, -0.69471385103937733, -0.092093556397816023], [0.9896878060833969, -0.74485725066064123, -0.57261825479567818]]))
      arg1=Data(numarray.array([[[-0.40928701009276902, 0.78469092640201876], [-0.46285912570464594, 0.37807292922764035], [-0.98887447251858718, -0.7456447768920067]], [[0.68490860944553966, 0.61663911959577811], [-0.012119494119142926, 0.68791295446508882], [-0.45357282623130435, -0.42355827944234492]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[0.10914504765437871, 0.89205098836187524], [0.48376668292630454, -0.91928588515726561], [-0.69890375324740428, 0.77552755494664449]], [[0.92221288110978561, -0.020833867017545638], [0.46448011969142566, -0.31713124012457872], [0.99152994010175788, -0.44266953812346488]]]))
      res=generalTensorProduct(arg0,arg1,offset=2)
      ref=Data(numarray.array([2.0427862034158375, 1.1160601747852996]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([-0.27735673015144924, 0.99866034221151356]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank3_taggedData_rank4_offset3(self):
      arg0=Data(numarray.array([[[0.30362342092501193, 0.82307684547055016, -0.99063639538485604], [0.40129701043032728, 0.56732590689074147, 0.07631103655257987], [-0.092824499390577131, 0.0070903556318013816, 0.90340205694000497], [-0.40078065202139523, -0.80052835597805916, -0.27006062443113077]], [[-0.37412463919680561, 0.56235194355775042, -0.71611920088654535], [-0.067527565100334641, 0.86275951006956131, 0.071596474626989481], [-0.072719281840952776, -0.34703815915680791, 0.25915095870677662], [0.68009206975429493, 0.40697918575328362, -0.87571561494551431]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[0.95021802989891269, 0.17365159531426078, -0.74757981844552779], [-0.48308347460898804, -0.012687045488064097, 0.41387243150776309], [-0.27996946061654215, 0.19193134589099903, -0.23324455123898247], [0.65038923252079717, 0.2242319201521743, 0.33643242366466963]], [[-0.97128643315634489, -0.55820250267379334, 0.5838694839457006], [0.85820923190371268, -0.83794857994331973, -0.39456991963063026], [0.63099665470849198, 0.52011389704426136, -0.30775080406006716], [-0.20206444699228365, 0.67691066294778901, 0.16161451183462328]]]))
      arg1=Data(numarray.array([[[[0.41962700068153946, 0.70106011478247288], [-0.54304055331843148, -0.30145006730575985], [-0.82391070084370321, -0.2292385604852305]], [[-0.29085978857931938, 0.36656971078463862], [0.74375347123467428, -0.23851347202893169], [0.44139992766572589, 0.94915421900990671]], [[-0.84192934169292721, -0.23848665540123903], [0.74671160374830858, 0.49244148536861543], [0.23321355177204373, -0.48261196311330368]], [[-0.083092096254978598, 0.84716767230886481], [-0.012744539954289147, -0.75131138349958615], [-0.41558186620117588, 0.26062501784619219]]], [[[-0.34171140912120368, -0.53279738204445981], [-0.1147916885164193, 0.62868987001621157], [-0.39566201073980034, -0.53280919975374563]], [[0.33716720515437903, -0.16483959105684187], [0.26688625509600006, -0.92173370420040723], [-0.22380139585537617, 0.29914468723354504]], [[-0.80581825592499778, -0.43217943682027915], [0.81265510429440102, -0.9434410268629021], [-0.2728219990119316, -0.82764402331683606]], [[0.29970209868437858, -0.31179547905539229], [0.31168643081781955, -0.96285570190065206], [0.12308646297280013, 0.2049942689933355]]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[[-0.080314370858935558, 0.83903847229183692], [0.41395335668913558, 0.8151929057803815], [-0.52426369731659928, -0.83587998689150145]], [[0.50038721991001944, 0.22169930075641253], [0.44862242960551058, -0.34458978546871921], [-0.39571882750929244, -0.9065337084962668]], [[0.21296496288601485, -0.57156461086057786], [-0.25055643558921448, -0.99128437374410505], [-0.38367904721066126, 0.9503535278830042]], [[0.97586369607048096, 0.55641756726870528], [0.13998269720049095, 0.28646816370488271], [0.68198549259122943, 0.42094483976788344]]], [[[0.92244275925542496, 0.7145313593630831], [0.44738067117126512, 0.25251659224485112], [0.9018440749763621, 0.38900120505833402]], [[-0.61877553537255414, 0.72527572559920994], [0.80322175392835993, -0.51598062470079231], [0.40912035642698563, 0.30873903046721862]], [[0.6380309672954938, 0.06060729881672966], [-0.28763398168289944, -0.83968519517147366], [-0.45768025686955993, -0.6510953185433932]], [[0.82120049195885025, 0.040862196891618074], [0.98630985625077883, -0.64105950061440398], [0.83105065331549155, 0.70598444319713294]]]]))
      res=generalTensorProduct(arg0,arg1,offset=3)
      ref=Data(numarray.array([1.7522795913855347, -0.41010596240712827]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([-0.10118893850723631, 1.2005664306432862]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank0_taggedData_rank2_offset0(self):
      arg0=Data(0.508837193261,self.functionspace)
      arg0.setTaggedValue(1,0.889873667484)
      arg1=Data(numarray.array([[-0.87534020684607139, -0.75033318922393999, 0.2081180568195431, 0.17937659560759189, -0.96216199254337176], [-0.46370265936977839, -0.77565281060199398, -0.32547545762639363, -0.18848197036022118, 0.66037308286303653], [0.91190584430914168, -0.51443105715320558, -0.36072120906702354, 0.13027804568689061, -0.026873443000796193], [-0.38512556690438182, 0.24269452538863256, -0.88273499411282041, 0.36601001894633067, -0.35008763493232475]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[-0.053886399092084591, 0.33005072580048234, 0.96401701391465, 0.82756619896849126, -0.91320613686702612], [0.072330145178946204, 0.49675066774321208, 0.44471575622946302, -0.70175523988712762, -0.39385332121727834], [-0.82314265736633607, 0.46950771253539392, -0.94097883664095372, -0.064637197802443369, 0.32002424793802975], [-0.060949701880523843, 0.53551631968580882, 0.47344918222296872, -0.10084534455456939, -0.48701018177154665]]))
      res=generalTensorProduct(arg0,arg1,offset=0)
      ref=Data(numarray.array([[-0.44540565400032389, -0.38179743401551225, 0.10589820789905281, 0.091273483445734938, -0.4895838077484726], [-0.23594915970152036, -0.39468099909196014, -0.16561401833405248, -0.095906636778455165, 0.33602238598934181], [0.46401161033684296, -0.26176165524828238, -0.18354836757148815, 0.066290315110885303, -0.01367420730979276], [-0.19596621251679405, 0.12349200111863598, -0.44916839679790088, 0.18623951074616746, -0.17813760955445204]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[-0.047952087587584374, 0.29370344982385926, 0.85785335568928556, 0.73642936856195518, -0.81263809418283361], [0.064364691560045151, 0.4420453385298202, 0.39574084098387047, -0.62447350899453202, -0.35047969940240681], [-0.73249297537317692, 0.41780255006593442, -0.83735228838659304, -0.057518940264354508, 0.28478115119645059], [-0.054237534744483375, 0.47654187139639032, 0.42130996015209393, -0.089739616607470846, -0.433377536555137]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank1_taggedData_rank3_offset1(self):
      arg0=Data(numarray.array([0.65127780755704956, 0.79408241766149601, 0.42609817237312275]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([0.18806556034338429, 0.65607542738322921, -0.97041221463122751]))
      arg1=Data(numarray.array([[[0.21365708075479217, 0.81816841312948441, 0.72520997310597712, 0.63098136043541175, -0.76509319988384616], [-0.47070814761062096, -0.26543475788433635, 0.73989234998863385, 0.45302393406365038, -0.018083019302104431], [0.15425640895334913, -0.028822105395572395, 0.48247539334386391, 0.65402076913258766, -0.32802333849399701], [-0.018246482300535272, -0.80425952831212921, 0.20123906953098225, -0.020281403061249037, 0.64155942555938217]], [[0.96461582591897188, -0.59271739959895475, 0.20431467707690709, -0.1100394316911828, -0.69039437745050392], [-0.75736606599806633, 0.22228478741852142, 0.79355474287182637, 0.47668209282122387, -0.88554459706258304], [0.70097303131180921, 0.20127453254223049, -0.51526580337583305, -0.11708971350621322, -0.97946864543708712], [-0.53823742825902809, -0.56972860005069803, -0.34930375127845226, 0.38549899005321486, 0.94006496341165557]], [[0.54434185705002514, 0.2789110928090619, -0.6635555197934504, -0.049150086346591237, -0.68696829491644151], [-0.055837912330663375, 0.17936371085203073, 0.85773506497545204, 0.80793192440416606, -0.41815924855053055], [-0.10628899752072241, 0.83327672974936973, 0.32324113911461816, -0.11557822443583188, 0.69979700261524425], [-0.71839349240035522, 0.3206731914670975, 0.42650327478319938, 0.8988901591890941, 0.37636566942011651]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[-0.55688853870982369, 0.49377098023876531, 0.092126587840196228, -0.82752024128971358, -0.83266063594117012], [0.97360654896354437, 0.4603566775812129, -0.65879859570674482, 0.14596582434140259, -0.93096669687304412], [0.65875557822825792, -0.15428987410395911, 0.7588812202071944, 0.38727646958021489, 0.81761142501811501], [0.10334729302697898, 0.78365115763210857, 0.28047155738495722, -0.18387701161988823, 0.036826615599700352]], [[-0.6849027864380659, 0.25125607845247533, -0.13076044627296302, -0.93673154817507087, -0.40646397753269681], [-0.12111717179486337, -0.98132687588140666, -0.017699614171279077, 0.51475046311314321, 0.2623995778628776], [0.48978398742080742, 0.69671189294722979, 0.52321188040587829, 0.54552525318677292, -0.30414899875418766], [-0.08604012133272354, 0.17655918030961759, -0.43784874332699086, -0.18972362559703515, -0.64446043456110114]], [[-0.43599822907423946, -0.61794391193365694, 0.49017956393599271, -0.29795405599114466, -0.82803279317729706], [0.27627452596398316, -0.031655570270348932, -0.52260808111870216, -0.5644825556690185, -0.0030642075749716113], [0.4755890990021916, -0.74873120453680597, 0.6083936728063235, -0.68965811006523259, -0.92487297772195687], [0.51515390436844255, 0.22621039928761011, 0.69337532794101064, -0.62507500012271922, 0.7095258695271025]]]))
      res=generalTensorProduct(arg0,arg1,offset=1)
      ref=Data(numarray.array([[1.1370776527185058, 0.18103197155235967, 0.3518160597878392, 0.30262101711404427, -1.3392341931251346], [-0.93176527951083232, 0.080067223622435887, 1.4775026798616193, 1.0178276196617779, -0.89314935531591699], [0.61180458765739876, 0.49611506143087425, 0.042794460106787391, 0.28372265963490267, -0.69323092686768217], [-0.74539456145269234, -0.8395695856319616, 0.035418838581808582, 0.67592459630226909, 1.3246911988845662]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[-0.13098143635836418, 0.85736457523067167, -0.54413911351476152, -0.48105635335323266, 0.38026731976465583], [-0.16446031365084685, -0.5265282609179498, 0.37163565639561214, 0.91294704159588802, 4.4686142025715785e-05], [-0.016292994995791066, 1.1546568476577297, -0.10440677143400395, 1.0999917338190563, 0.85172790100709184], [-0.53692438401648468, 0.043696599208585263, -0.90737464836537152, 0.44752647320687089, -1.1044214073238909]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank2_taggedData_rank4_offset2(self):
      arg0=Data(numarray.array([[0.20108975254510919, -0.81584956220683846, 0.88404356279377305], [0.52487554215568077, -0.64888963138099465, 0.94010752402440723]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[-0.87749033192607895, 0.15524243967670648, 0.59948302371182161], [0.81890667778554871, -0.23204020281111237, 0.25876361549982718]]))
      arg1=Data(numarray.array([[[[-0.47235803164236168, 0.42616569992768971, 0.81850194893664541, -0.34400536793499592, 0.17479695617617086], [-0.67838281877473605, 0.78880882055802726, -0.052374491325663408, -0.27265357717663097, -0.52828951873937857], [-0.46280850425260955, 0.12973964542746197, -0.88108060510749908, 0.62989023568000713, -0.5399593127554545], [-0.58254988266618546, -0.11072108910641631, 0.44014445093301946, -0.61317861055829059, -0.11990001739315259]], [[0.21924546112674914, 0.82317055585639376, -0.90526829483132709, -0.57697126180821345, 0.077682126786112082], [0.87274454730407824, -0.84184452070710969, -0.66798418058360642, 0.05817729521135151, 0.97570884182510498], [0.2463483470625849, -0.48988308361358612, 0.42696494138066332, 0.49137331132923423, 0.53941164761701677], [0.57767615442742559, -0.13515340410214827, 0.22014310665379422, 0.5441670485213137, -0.28704231295173455]], [[0.94559298506271006, 0.95981280847428141, -0.7304362074364612, 0.057541477518015416, 0.32505437164775541], [-0.13943493179287025, -0.2684472109567162, -0.97729156892944635, -0.86880842278059456, -0.012309028055989879], [0.89571534247776774, 0.058160615495531642, -0.19279813195759221, -0.38139025068379007, 0.88164146486959005], [-0.60222620066103683, -0.73219462512358779, -0.035530792973853309, 0.94485336452337632, -0.6790700857069083]]], [[[-0.16635471519300871, -0.94305668803526643, -0.02710816016553963, -0.28602414772970808, -0.87587099573339167], [0.16659459587833547, 0.77041860427447451, -0.63411569040331583, 0.81575288178143812, -0.62883920030232732], [0.93625450853036996, 0.51241018147659512, -0.57734351356389024, -0.24307134190887747, -0.87468230669371794], [-0.69788533136019959, 0.45585543578021892, -0.95178208059583147, -0.4955937964208923, 0.53865457596535515]], [[0.70757501491455921, 0.12148596316886873, -0.25156785407137217, 0.70735586818125729, 0.68812737698899351], [0.99706202163327595, -0.51050120885896599, -0.050648311480013808, -0.15717954132475587, 0.87881404282718489], [-0.99575839816232614, -0.11565919429257265, -0.05432760762759159, 0.23605955283150526, 0.053314922719010394], [0.15397893130437912, 0.95602298092665783, 0.64974304684525963, -0.89597755184221839, -0.74576032991580266]], [[0.28274980608199818, 0.43298292347013412, -0.599402253811403, -0.89487282865766238, 0.92673090883326448], [-0.64632054164849273, -0.13080554797387522, 0.18589199516449151, 0.41435307649529984, 0.54715221670025738], [0.080766780782774106, 0.73367735200725104, -0.72529690608266351, 0.97177291648354336, -0.84034625361292492], [0.80397253699883486, -0.031177531875507425, 0.93267373367640038, 0.31684498419145357, -0.37886251337876264]]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[[-0.22756992435649015, -0.52450540798432099, -0.75667271554243021, 0.11250955422247877, -0.48209446189213967], [-0.89707472747476924, 0.12488226532836921, -0.87781656506089867, -0.51822377645770912, 0.69409150454152857], [0.18541390424241722, -0.71830298991036856, -0.33172638820363698, -0.44986774974796595, -0.51588520130481919], [-0.71136915688020297, -0.55146842811364438, -0.32741286779063583, 0.9425048275439174, -0.96427719722702099]], [[-0.62313390986222639, -0.089466063456075773, 0.95794499099933006, -0.876743207993123, 0.68453891781221032], [-0.67558494576094663, 0.5909302837988557, -0.7203220224984952, 0.82688480999108793, -0.57232294534905526], [-0.77923398614902228, -0.68010773930025414, -0.54723043369378921, -0.73977745507591597, 0.78318075405710164], [-0.26074211514097034, -0.80234351956195149, -0.76394600042680838, -0.58149739520392907, -0.2542699409776179]], [[0.38317404501390095, 0.6672234477064698, 0.5953031983990491, -0.089694675469674801, -0.17214881468199228], [0.31222303121291284, 0.96323465313337708, -0.49084087070001603, 0.76913478952564662, 0.84960913236997437], [-0.83564598319011485, -0.18664623761088373, 0.22806470491514075, -0.23972694540081485, 0.21474075621800082], [-0.48905676840311929, 0.075719608479446698, -0.97257163715445327, 0.44568986181911985, 0.82942418747466151]]], [[[-0.39658495250464454, 0.26923123302848606, 0.38914411239110924, 0.57449526285779617, 0.62998084994428649], [0.47087013176097181, -0.62492135149161165, -0.4213419770316964, -0.17739348852213421, -0.7820331042332973], [-0.36793038447659088, -0.23698849771521768, 0.083436163016297415, 0.76291932448200783, 0.15221143447453955], [-0.47244941636596627, -0.87449002235004603, 0.19865735865529288, -0.81444636549376215, -0.76446178948291221]], [[0.55092676970459142, 0.86387420196059006, -0.46008685492465684, -0.84614327363992881, 0.10735835786157977], [-0.70696034873597502, 0.1742091954976499, -0.091199357227191857, 0.42807592890533153, 0.47749044426812404], [-0.55362843737725465, -0.71531113507188127, -0.98306579405738015, 0.1751339071318172, 0.26018155849652569], [-0.38850634341452062, -0.15241211895645579, 0.34962593398004582, -0.96251571136521274, -0.73202758634801168]], [[-0.590750202361638, -0.7247397212688178, 0.30902402761217718, -0.92382946924428011, -0.58665250364457044], [-0.0088075860797227623, -0.0044228070867213809, 0.94631404330039937, 0.35593403616530472, -0.18179741639857072], [0.51635924066117722, -0.28986877300094038, 0.96025446784110002, 0.93828377465374846, -0.65453115359885938], [-0.71945674578337981, 0.05797893957305722, -0.38383003478309252, -0.72359638969058349, -0.87472287228977486]]]]))
      res=generalTensorProduct(arg0,arg1,offset=2)
      ref=Data(numarray.array([[0.28144932648061943, 0.095862684197068448, -0.1570735377218091, -0.99798467760127452, 0.22411988874510202], [-2.1388632268598147, 1.2207823694073661, -0.45473388200830955, 0.049341100883096012, -1.2990806778404331], [1.7112859949095485, 1.5109139528171964, -1.6455953357967876, 0.021424406507677185, -1.0529602657313255], [-0.83123348797073549, -0.9696882388773177, -0.16687095451108436, 0.88716298566722251, 0.020216401347675439]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[-0.27280796835149923, 0.67883406350987907, 1.6749564052478307, 0.13913957444636091, 0.76528217596593973], [1.4168301871606512, 0.0062770344510115709, 0.28519403355867423, 0.89169045848666006, -0.98683281097000819], [-0.82384628412845173, 0.30973307925610299, 0.88777036499697259, 0.96311283400550707, 0.5979061361108744], [-0.19235203477051199, -0.26101407149685257, -0.43210208324334748, -1.2809820867454247, 0.62138666402267972]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank0_taggedData_rank3_offset0(self):
      arg0=Data(0.130879023692,self.functionspace)
      arg0.setTaggedValue(1,-0.472525150618)
      arg1=Data(numarray.array([[[-0.52478112003680732, -0.38588494856792077], [0.83586759200219185, -0.087090009152039238]], [[-0.19623439673847565, -0.55850291131102958], [0.45828281525215009, -0.11309534855283654]], [[-0.92388080894083657, -0.84384285775531609], [0.59151915487419626, 0.22487940083891789]], [[0.91779469373809697, 0.65443874443345984], [-0.81327377667241141, 0.37749275535430171]], [[-0.23586724787843538, -0.09546764821707665], [0.34699409997648334, 0.74905494237526793]], [[0.89213325827806722, 0.82063490432639252], [0.22969321517869346, 0.18547090416043432]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[-0.84383327400854213, -0.84825314235612015], [0.84268872826614327, -0.85085748970783759]], [[-0.028380394409417864, -0.32160844735917871], [0.8930517946341463, -0.19042520148545772]], [[0.52417460028363427, 0.26376623485490747], [0.96754099289296103, -0.63095413231534025]], [[-0.90726329104122083, -0.46998332164464496], [0.029580024999069421, 0.83241193059514296]], [[-0.72161036240124066, -0.99047473456089596], [0.19699728170242548, -0.84829340287662136]], [[0.38600561125957711, -0.095247151372363614], [-0.44554123735898821, 0.63707174002473632]]]))
      res=generalTensorProduct(arg0,arg1,offset=0)
      ref=Data(numarray.array([[[-0.068682840642291867, -0.050504245325919066], [0.10939753437683915, -0.01139825537112637]], [[-0.025682966259875512, -0.073096315761399785], [0.05997960743491805, -0.014801808802675887]], [[-0.12091661828174109, -0.11044132937229047], [0.077417449484916787, 0.029431996430188193]], [[0.12012007346593087, 0.085652303937520213], [-0.1064404778850053, 0.049405883271487885]], [[-0.030870075123194767, -0.012494712592800515], [0.045414249031727208, 0.098035579549571483]], [[0.11676152984639276, 0.10740389508562885], [0.030062023751211468, 0.024274250859747829]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[0.39873244489745407, 0.40082094385410555], [-0.39819161824813776, 0.40205156347873772]], [[0.013410450142911369, 0.15196808002845044], [-0.42198943376926795, 0.089980697013398683]], [[-0.24768568194920867, -0.1246361798527853], [-0.45718745339593614, 0.29814169640542115]], [[0.42870472324952946, 0.22207893984813259], [-0.013977305767972556, -0.39333557288077653]], [[0.34097904518123073, 0.4680242231318138], [-0.093086170207795638, 0.40083996796261934]], [[-0.18239735959986492, 0.045006674548171456], [0.21052944028963225, -0.30103241990972601]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank1_taggedData_rank4_offset1(self):
      arg0=Data(numarray.array([-0.53514447461009773, 0.40944215689504926, 0.035398437001621819]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([-0.22134008926403159, -0.79944234456671603, 0.30588588022324226]))
      arg1=Data(numarray.array([[[[-0.66394397612382017, 0.3832675673137067], [0.29267187209341228, 0.21371169065773232]], [[-0.83337445107411878, 0.78329245546503956], [0.314939048767781, 0.82584370850373356]], [[0.19431555949987311, -0.180169126389921], [0.021015613526637278, 0.59974360160598628]], [[0.24543283236800106, 0.31047052759535076], [-0.11368596052984192, -0.36681199522187069]], [[-0.17400823700764323, 0.28454856375150861], [0.87903247785882077, 0.49103601327579738]], [[0.0015409984789627185, -0.6531391447601802], [0.10297999214789355, -0.53071910371774944]]], [[[-0.91223674907079055, -0.7480433888706508], [0.84590733492894921, 0.35849010102843115]], [[0.4501498114396878, -0.86932095143732702], [0.016917379518958109, -0.95760168689191194]], [[-0.69944881913953516, -0.19588639148238984], [-0.13708439968779129, -0.084627571453456341]], [[0.7694585983848361, 0.44646740315703193], [-0.12549693014053664, 0.41447137233936693]], [[-0.84502104373156683, 0.20179271757114448], [-0.37358403349188718, -0.51793255058699827]], [[0.73257310893442984, -0.26174584318846583], [-0.62358191311049316, -0.97759453179824507]]], [[[-0.66968984157542, 0.34126950776351306], [-0.073333497751672194, -0.076112558944685826]], [[0.27658571010929234, 0.46068103001294247], [0.10764951709310711, 0.11115505466943487]], [[0.13111289629976275, -0.2669884459833396], [-0.42983643317256326, -0.33926240004189534]], [[-0.64158530992787677, -0.078829688707934942], [0.82444708331698546, -0.011143102324589371]], [[0.27494360281868069, -0.85798208550646549], [-0.96358452999138566, 0.38240591380844324]], [[-0.93737148698304473, -0.18471940926452013], [-0.58574273969834234, -0.40065291210184406]]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[[-0.96177974822777101, -0.1272189336200602], [-0.94105732420057886, -0.54774056249951086]], [[-0.38620796214938258, -0.85321693194832005], [-0.71169829832967979, -0.86287675003336495]], [[0.52279174966370867, 0.52974652133669098], [-0.47178289605888502, -0.30651496498431019]], [[0.91027579496513833, 0.97840367971292919], [-0.25006526735288737, -0.44532928019454654]], [[0.054928633609862443, -0.25694488713525199], [0.33669804376035595, -0.75296269548092165]], [[0.17030832989141387, -0.43433548180263837], [-0.48005728752763344, 0.37421396418686048]]], [[[-0.22894126767247824, -0.94172782812989286], [0.28260354043199865, 0.70189713875560544]], [[-0.38145739265172129, 0.56570146206222915], [0.014407238775340669, 0.95822154385960823]], [[-0.96794125995200653, -0.26197203984668782], [0.4403110209251786, 0.17863429309258971]], [[0.57494280391964159, 0.40580866215043132], [0.16487782664302997, 0.14868361582044143]], [[0.62992961335124842, -0.85618144792337914], [0.70229003803150469, 0.54531909865655237]], [[-0.47718023921007968, -0.80849098386758], [-0.22064769852118227, 0.27023265693488763]]], [[[0.57489025789737203, 0.47459583885446621], [0.53212068892815356, 0.11994047900576676]], [[0.91906527810490291, 0.079650982544041904], [0.32233181193947003, -0.55017082333825029]], [[0.12096918484383079, -0.70725177619889545], [-0.83798397045141204, 0.84308606406219377]], [[-0.72462269245145094, -0.68166811086355628], [0.59272836462496725, 0.50004010998477111]], [[-0.2980916665779163, -0.32401377633450634], [0.67065158221863874, 0.93100965161485383]], [[0.11656246244033275, -0.62904583843938622], [0.41858387363174865, -0.1598296479799115]]]]))
      res=generalTensorProduct(arg0,arg1,offset=1)
      ref=Data(numarray.array([[[-0.041908205532784897, -0.49930361236432397], [0.18713249732179782, 0.029720064152701384]], [[0.64007674433015604, -0.75880388651769215], [-0.15780057877870843, -0.83009348242451952]], [[-0.38572953954354594, 0.0067613921626547072], [-0.082590059644814265, -0.36760892866579842]], [[0.16099564685983866, 0.013865541390427552], [0.038638817997805081, 0.36560501671993151]], [[-0.24313511839249791, -0.10002337092413681], [-0.65747981226407903, -0.4613020583286126]], [[0.26594017145493948, 0.2358152435047495], [-0.33116427476840715, -0.13043950461225573]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[0.57175657168993921, 0.9261879189057084], [0.14513668051310144, -0.40320125025920184]], [[0.67156558872615979, -0.23903048037069294], [0.24460635815511725, -0.74334314733118756]], [[0.69510122330767199, -0.1241609326760628], [-0.50390627099456986, 0.18292435443004382]], [[-0.88276599897999874, -0.74949323623055342], [0.1048463898457446, 0.13266045338961588]], [[-0.60693234749428426, 0.64222866917830779], [-0.43082232008063781, 0.015492358243774151]], [[0.37943683969898861, 0.55006154202508217], [0.41068993293534095, -0.34775361363359258]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank0_taggedData_rank4_offset0(self):
      arg0=Data(-0.655789056554,self.functionspace)
      arg0.setTaggedValue(1,-0.0949057225205)
      arg1=Data(numarray.array([[[[0.027912748611823579, 0.12171516733812848, 0.18937892434482073, 0.11904336579067598], [0.57098397352669328, -0.81404284015622475, 0.56451821372865463, 0.22631643021846681], [-0.31073315694385539, 0.05698208471668198, -0.83669018798080441, 0.55876451684400941]], [[-0.9630739867589353, -0.46535368452767201, -0.4767369132211805, 0.39517618278833311], [0.67138912217601954, 0.88893423107776437, -0.17291218794821495, 0.91063140461732384], [-0.67878083278207391, -0.30623134331933621, -0.66916785774268561, 0.49625703809229971]]], [[[0.62058164827111018, 0.07262435696963232, -0.1571981072822628, -0.43179612315733062], [0.37536558745369231, -0.070605967609802978, 0.95210359792418831, -0.48047226557603939], [0.21107660608973933, 0.015199835651237947, 0.29757129493662915, -0.61102163576351032]], [[-0.90346317009088661, -0.10201597908852511, 0.68906835523087651, 0.37349574706299737], [0.435190409532209, 0.48060793121405099, 0.010476767364285822, -0.4241393835700551], [0.14027614725810178, -0.50203154494050461, 0.38149161814171717, 0.84480933806314717]]], [[[-0.43515469362247106, -0.07135225405192136, -0.37939207444816647, 0.53965018036984236], [0.042042999109911827, -0.051122520269827332, 0.41066282040045321, -0.63486436967943805], [-0.60189956939228484, -0.32642221807170491, 0.63820756496857278, -0.75347141350441849]], [[-0.25369854162807814, 0.98774122910339601, 0.34546554206102287, 0.11311757759831265], [0.85335529878843985, 0.2855240013322593, -0.68059286002627739, 0.37150357970726855], [-0.055473670208597614, 0.62981616878326907, -0.54648657411846679, 0.64293831482709574]]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[[0.67556991357178742, 0.19905698812431338, -0.82214905896448887, 0.58425836802985787], [0.3274776072035448, -0.71823976648104382, -0.66333078685640356, 0.96784137882064769], [-0.60137425095781016, 0.4528949685856789, 0.14426396039212719, 0.52327674364654042]], [[0.63746269144477052, 0.28063987565234405, 0.32764361157906996, 0.43262901225039929], [-0.22862159800078019, 0.23036948995610262, 0.19286675152488675, 0.4674552266091645], [-0.33171807667643738, -0.42524924892500571, -0.99997566761777179, 0.58304623134903166]]], [[[0.18065568424546852, 0.95425917861428933, 0.44622029571487554, -0.81246659855102599], [-0.41284047868565699, -0.76101271015124161, 0.54214331338915089, -0.58045325292149785], [0.80911053022449653, -0.57174151314606014, -0.96585894659675953, 0.94803868355566467]], [[0.91924832320882888, -0.36372815499355227, -0.46850737489760896, -0.72625681057150948], [-0.48708660122608816, 0.51322981741465301, -0.055605982145866983, -0.27221713895296418], [0.3758726077683967, -0.50937724610541713, 0.83526210401643053, 0.25654786717856948]]], [[[-0.53478756318287313, -0.49174223434569209, -0.69150780549564561, 0.18985205452086928], [0.83082741705398178, 0.43487137617707328, -0.28977859210169332, -0.85188761490238196], [-0.33605866688850883, 0.21062219135817406, 0.16316894011731575, 0.4546335699381725]], [[-0.60826352714068976, -0.47646498488995936, 0.39046689054245731, -0.74242443460153251], [0.23875572127836553, -0.7598609237045828, -0.39535475679697529, -0.41396054093343837], [-0.45743886902514452, 0.41976378602898312, -0.72329674319219417, -0.44759512476075991]]]]))
      res=generalTensorProduct(arg0,arg1,offset=0)
      ref=Data(numarray.array([[[[-0.018304875077973216, -0.079819474756968073, -0.1241926261272773, -0.078067336540865007], [-0.37444504130645184, 0.5338403861404859, -0.3702048667885921, -0.14841583825560881], [0.20377540383221751, -0.037368227576825744, 0.5486922690038144, -0.36643165533691369]], [[0.63157338116821948, 0.30517385374027073, 0.31263885054572366, -0.2591522160833219], [-0.44028963901234491, -0.58295334073692973, 0.11339392060122587, -0.59718210970232311], [0.44513704193700854, 0.20082316372261269, 0.43883295810525214, -0.32543993481876871]]], [[[-0.40697065363435886, -0.047626258539946877, 0.10308879846668965, 0.28316717222896587], [-0.24616064445904723, 0.046302620885906018, -0.62437912022425157, 0.31508845374241284], [-0.13842172836818364, -0.0099678858814992582, -0.19514399876400634, 0.40070130205135673]], [[0.59248125994507395, 0.066900962679883533, -0.4518834865779856, -0.24493442359332707], [-0.285393108088421, -0.31517742178317121, -0.0068705493855594066, 0.27814596619874771], [-0.091991562267402738, 0.32922679321681686, -0.25017802834436714, -0.55401671877633329]]], [[[0.28536968598566997, 0.046792027367701779, 0.24880117056637988, -0.35389668265386637], [-0.027571338720984405, 0.033525589336406321, -0.26930818355216585, 0.41633710603174801], [0.39471915075194897, 0.21406411842746598, -0.41852953691628503, 0.49411830740237578]], [[0.16637272726337088, -0.64774988875307904, -0.22655252190007055, -0.074181269492856985], [-0.55962106629771946, -0.18724351545716914, 0.44632534957393466, -0.24362798204261624], [0.036379025849676928, -0.41302655112875492, 0.35837991486050758, -0.42163191090279817]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[-0.064115450760655501, -0.01889164728069646, 0.078026650460590125, -0.055449462556533338], [-0.03107949892094335, 0.068165063980852772, 0.062953887596711805, -0.091853685342229541], [0.057073857792387279, -0.042982324219531909, -0.01369147539468646, -0.04966195743395966]], [[-0.060498857311441029, -0.026634330166854504, -0.031095253686144134, -0.041058968990962896], [0.021697497942059836, -0.021863382890967516, -0.018304158403654913, -0.044364176027336], [0.031481943740094429, 0.04035858722053598, 0.094903413238203643, -0.055334423849045904]]], [[[-0.017145258240755048, -0.090564656818226744, -0.042348859568140204, 0.077107729559274113], [0.039180923915379473, 0.072224461104202387, -0.051452502866865882, 0.05508833535790069], [-0.076789219469916598, 0.054261541400102024, 0.091665541179673474, -0.089974296240252646]], [[-0.087241926289910079, 0.034519883350718636, 0.044464030920849551, 0.068925927342737281], [0.046227305819426127, -0.048708446640812024, 0.0052773259120166222, 0.02583496425479976], [-0.035672461415931576, 0.048342815577147168, -0.079271153475688777, -0.024347860695680446]]], [[[0.050754400078858626, 0.046669152044432602, 0.065628047909143214, -0.018018046406308188], [-0.078850276305365258, -0.041271782159577837, 0.027501646654390154, 0.080849009598592772], [0.031893890590336565, -0.019989251249702661, -0.015485666154741257, -0.043147327437065466]], [[0.05772768952616688, 0.045219253646710075, -0.037057542367272572, 0.07046032738274674], [-0.022659284233831088, 0.072115149979292886, 0.037521428845741271, 0.03928722423227312], [0.043413566373800699, -0.039837985401029459, 0.068645000009393942, 0.042479338712082058]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank0_expandedData_rank0_offset0(self):
      arg0=Data(-0.343851509577,self.functionspace)
      arg0.setTaggedValue(1,0.87982952601)
      arg1=Data(0.984344423889,self.functionspace)
      arg1.setTaggedValue(1,0.260679338188)
      arg1.expand()
      res=generalTensorProduct(arg0,arg1,offset=0)
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array(-0.33846831609786487)+(1.-msk_ref)*numarray.array(0.22935337855851431)
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank1_expandedData_rank1_offset1(self):
      arg0=Data(numarray.array([0.49506760574828168, 0.95739247663465243, -0.65971894054185176]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([0.66471435564083814, 0.83264812200873206, 0.85134964197757124]))
      arg1=Data(numarray.array([0.94184907332837331, 0.76935284219133782, 0.278786033081039]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([0.30359847560501385, -0.41009557914566397, -0.33531803172893992]))
      arg1.expand()
      res=generalTensorProduct(arg0,arg1,offset=1)
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array(1.0189311623183008)+(1.-msk_ref)*numarray.array(-0.42513193499544982)
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank2_expandedData_rank2_offset2(self):
      arg0=Data(numarray.array([[0.020342505654976417, -0.16830096344252654, -0.73573948363758102], [0.56464411042664819, 0.52610898972570497, 0.23201718745271815]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[0.29206017905535986, 0.87230811185794321, -0.85745954232808264], [-0.44399109981132523, 0.42697311690273376, -0.50365192839108164]]))
      arg1=Data(numarray.array([[0.18000063686258305, 0.48449699536495516, 0.10700419779191495], [-0.12906680705625728, 0.082383912972397333, 0.69370441024048857]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[0.69387479979474764, -0.61371570277592236, -0.73841380177240623], [-0.83049665537162598, 0.86516826882973619, 0.6237544139129223]]))
      arg1.expand()
      res=generalTensorProduct(arg0,arg1,offset=2)
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array(-0.025189409406917024)+(1.-msk_ref)*numarray.array(0.72444557526648534)
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank3_expandedData_rank3_offset3(self):
      arg0=Data(numarray.array([[[0.13084981015424368, 0.18701200025883291, -0.75577185541342984], [0.22285166460808492, -0.046945345048301279, 0.98142612242659877], [0.78250485629134814, 0.66851188935683314, 0.3630775773756123], [-0.021933207275817601, 0.82395440505229978, -0.24856870327301417]], [[-0.70903825099356865, -0.58521328152728391, -0.061691678835472663], [-0.36761877058406012, 0.34933999976844032, -0.93911028343570946], [-0.15102801580710312, 0.52415611404939733, -0.87228489839250622], [0.50882600295628255, -0.55439919958610151, 0.50150971400770117]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[0.55832557424307017, -0.13906084363458393, 0.462651939953314], [-0.43965519186668023, -0.12341472160552169, -0.86690682057180113], [0.1918560799561726, 0.22345974230024357, -0.76101152938361416], [-0.94556634669015804, 0.66620527157350207, -0.45748671693676557]], [[0.17588207224528407, -0.52773439303587399, 0.59606222773148887], [0.070098360669933468, -0.78578836104274807, -0.066251734351226554], [0.16035853012284407, 0.18870159246962115, 0.49393748642523194], [0.31185642111543266, 0.61269772443972936, 0.6233883533796547]]]))
      arg1=Data(numarray.array([[[-0.2281720118004491, 0.55087723137945388, 0.33860020035223859], [-0.97598846561903518, 0.23486326255959367, -0.44269444659226664], [0.90971135585417673, 0.5809223296690138, 0.97853592824800217], [0.11007266605227217, -0.72857671182147121, 0.28938181379503369]], [[-0.41018557977067416, -0.68195319070343019, -0.17702326048807859], [0.89210636480864358, 0.63519323424047447, 0.9436247416056045], [-0.19623786667684628, 0.33075611802738591, 0.48753078336315747], [0.57870376420126313, -0.83805308464220807, -0.488819136830412]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[-0.74111012065379933, 0.27723128188952595, -0.66783483009252209], [-0.53708852312570743, -0.11260151211983693, -0.42041549169922376], [0.40730589959156727, -0.93685959590834456, -0.017452273520536243], [-0.38409002505230072, 0.17019130986619602, 0.15650872551815587]], [[-0.69790222639918187, 3.0313037874707405e-05, 0.024165050080139139], [-0.21819194234127348, -0.29162179004783639, -0.14175480719113231], [0.533767017841285, -0.43707946076978521, 0.3321957141623626], [0.6899354164988214, 0.63344964685409821, 0.37836473682844329]]]))
      arg1.expand()
      res=generalTensorProduct(arg0,arg1,offset=3)
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array(-0.064617098311267634)+(1.-msk_ref)*numarray.array(1.2614545839234901)
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank4_expandedData_rank4_offset4(self):
      arg0=Data(numarray.array([[[[-0.050310966031001492, -0.50213711884791801], [0.97955601079635701, -0.53536646066782811], [0.34392743462774455, -0.80471813431089201]], [[0.81997857971591737, 0.48114326582822486], [-0.86914128002436009, 0.44554430212469343], [0.67497715922071722, 0.9199538535993621]]], [[[0.47036759855221644, -0.25420055951045617], [0.93589422584036974, -0.025016222602037397], [0.30690617640763818, 0.60037481544676119]], [[0.86256043474230726, -0.57704305268612921], [-0.42136076348284379, 0.44063887722695072], [-0.6808444001583227, -0.2749644629659227]]], [[[-0.62125216547354878, -0.9452559294763323], [-0.46297464124425636, -0.34637723305942325], [0.36780121841568492, -0.63907105465072345]], [[0.28096129499842037, 0.56223374195306763], [-0.34521328932908291, 0.47255033405272151], [0.71575275218104339, 0.64278176625156869]]], [[[-0.51710643296247905, 0.72525338998233591], [-0.10231331639582564, 0.15589937747498661], [-0.64695390506511208, 0.56465532368305182]], [[0.89173317410405439, 0.39889091964297596], [-0.2084524788737665, 0.74390590414127167], [-0.33840092046142312, -0.55241710322021764]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[0.10981780049810053, -0.6816392263303146], [-0.47423004993999274, 0.79291432036922616], [0.41529357497458919, 0.090698675391321926]], [[-0.70326147949356788, -0.24047842290887744], [0.27201794230216536, -0.8997795347557187], [-0.76415788056122769, -0.38145055213879142]]], [[[0.58244481142397864, 0.59656405576029115], [0.19734664208768415, -0.92162005298488858], [-0.25317021743726165, 0.70472883059952607]], [[0.67599112343794698, 0.7666993062491636], [-0.58098997873431957, 0.97927344461060839], [-0.84836427251969204, 0.79401315052736798]]], [[[-0.98343433076975639, -0.51347858569567473], [-0.72844801204196963, 0.99921746598984584], [0.93470980032760775, -0.0090469784579980672]], [[0.080636420206513515, 0.54196270842983174], [-0.50478986195337661, 0.26069632985636448], [-0.98508520680570144, 0.040391081840893905]]], [[[0.76200320583711023, -0.40504441949837644], [-0.16833406735411183, 0.75305006119497619], [-0.47003250130607022, -0.64796959256240738]], [[0.94079800959332238, 0.12059656727257839], [0.71952867474202109, -0.42699172910499583], [0.051030673874158605, 0.071779146127748827]]]]))
      arg1=Data(numarray.array([[[[0.32543107627054502, -0.22291871491247894], [-0.024328459779257017, 0.47143483263142039], [0.41710698258645507, 0.55915516496414908]], [[-0.17234452285827095, -0.071874616603446961], [-0.66664086778093656, -0.92047042234167908], [0.3317843426297038, -0.71026141202053483]]], [[[-0.93959983505695588, -0.54901669582621193], [0.38425607363290526, 0.45303758996247634], [0.40910558513399709, -0.44983145168527239]], [[-0.90427342337872219, 0.43368791266787721], [-0.65477648611489103, -0.47115266151090274], [-0.7497105656516676, -0.83869488051392138]]], [[[0.5439547315194293, 0.97376318969565023], [0.65909534621807064, 0.76110993549665573], [-0.10948152945537837, -0.64715172963935386]], [[0.99864110311746934, -0.73217161695504518], [-0.69698378570476782, 0.83635301270400886], [0.98664192883268376, -0.73438990198812415]]], [[[0.75484156510501443, -0.54117001538443388], [0.27865156723534379, -0.14318163806146345], [0.48567101023124026, 0.84460359735106616]], [[0.83338566654617852, -0.46421312885759436], [-0.86124171582849995, -0.31800681556731525], [0.61809791857667795, 0.97637740989187827]]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[[0.64892916911934306, 0.98378705993460058], [0.7794765609442651, 0.90310218616266691], [0.60201794123419017, -0.15149372654566395]], [[0.70886450255126854, 0.95556091780496555], [0.35927664343588162, -0.53663499491205746], [-0.37961603199434069, 0.18912459204023579]]], [[[-0.49774224646331189, 0.039256720716569937], [0.2793403877344276, -0.86226159310092276], [0.94673578201706921, -0.53143050179059714]], [[0.87275769436511874, 0.82656473461540458], [0.2539353917712377, 0.45752258083701625], [0.92669944930460058, 0.66705504709553431]]], [[[-0.12536090002304245, -0.1220347064745293], [-0.4380773297787306, 0.76859106348087969], [0.30098911544855111, 0.8545545496784972]], [[0.12472068386036983, 0.87695347171125726], [-0.86572173678568487, -0.27351008331319693], [-0.78638504608202253, 0.035487766486436145]]], [[[-0.58591527221824391, -0.12640555722209856], [-0.36794844459680109, -0.68192141664873152], [-0.21882411629013099, 0.55454817951552027]], [[0.45391684574856472, 0.3640770220120757], [0.73927156610212785, 0.41776747948022308], [-0.96261055583610378, 0.88856191935101569]]]]))
      arg1.expand()
      res=generalTensorProduct(arg0,arg1,offset=4)
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array(-2.8762546702507787)+(1.-msk_ref)*numarray.array(4.200007539477097)
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank0_expandedData_rank1_offset0(self):
      arg0=Data(-0.381526528676,self.functionspace)
      arg0.setTaggedValue(1,0.502108177006)
      arg1=Data(numarray.array([-0.71381696984797505, -0.58351875317667545]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([-0.74174129553722312, 0.86645433684499817]))
      arg1.expand()
      res=generalTensorProduct(arg0,arg1,offset=0)
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([0.27234011061645275, 0.22262788431711758])+(1.-msk_ref)*numarray.array([-0.37243436971256921, 0.43505380753254147])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank1_expandedData_rank2_offset1(self):
      arg0=Data(numarray.array([0.48189026142248492, 0.61132739999120722, -0.48021738269082426]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([0.20718898798119945, 0.24846123976374557, -0.68213833171655369]))
      arg1=Data(numarray.array([[-0.50506701864888104, -0.94531386561854114], [0.47916607922255339, 0.4741090583474834], [0.68343881375211879, -0.54149960414845411]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[0.60105409096973239, -0.33981489364444051], [-0.057778695129442559, 0.31878967958396598], [0.28512520139729713, 0.22198562176799119]]))
      arg1.expand()
      res=generalTensorProduct(arg0,arg1,offset=1)
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([-0.2786587226468441, 0.094335834754916026])+(1.-msk_ref)*numarray.array([-0.084318806605312796, -0.14262392659969053])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank2_expandedData_rank3_offset2(self):
      arg0=Data(numarray.array([[-0.79558413726029986, -0.17637970826165916, -0.76006534500930778], [-0.75085692468461196, 0.50837148808944166, 0.25543391584715391]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[-0.94502656679322006, 0.3959284604283726, 0.84946792760837564], [-0.98301202548764666, -0.67820862680884164, 0.24942347403491616]]))
      arg1=Data(numarray.array([[[0.42135995874695142, 0.79695313234706355], [-0.73677750953599674, 0.18467104640793197], [-0.21304994771930219, -0.58833730644395743]], [[0.30357297074610434, -0.66704490676261785], [0.44323863888602344, 0.30881910094330589], [0.14162033547416408, -0.83065253484111023]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[-0.46411774924678917, 0.11416186532470673], [0.36626391796773028, -0.097882221397269209], [-0.35307690868790909, 0.82892813175015023]], [[-0.40781858994765718, 0.77992935516205297], [-0.52657282854684051, -0.36759739661923652], [-0.30781993101336935, 0.053350180889567111]]]))
      arg1.expand()
      res=generalTensorProduct(arg0,arg1,offset=2)
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([-0.0097781590013434547, 0.22623258581161043])+(1.-msk_ref)*numarray.array([0.96492969892944724, 0.053442087228815868])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank3_expandedData_rank4_offset3(self):
      arg0=Data(numarray.array([[[0.2844537310970916, -0.37232571345264409, -0.27388119525056065], [-0.1289149604667541, 0.12374307980916499, -0.13191706896104405], [0.83162515078576682, -0.67722759600526961, 0.65978030577466851], [0.45247797299619519, 0.027688500436392705, 0.39506004470816869]], [[0.66596113437221915, -0.62718466840117992, 0.85501216132359015], [0.82665032748164347, -0.48759861298440255, 0.64379166991322689], [-0.2993808711876722, 0.022403219052363976, 0.15209899155496198], [-0.38695570714454131, -0.29066451295088358, 0.18363989508710055]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[0.40106804203151358, 0.44884943648726949, 0.35091468972213224], [0.58558470283612429, -0.28729619869127032, 0.014938378698839516], [0.20883659360067197, 0.27296568848332359, -0.88523043898933107], [0.034563435324499459, -0.76852732527678835, -0.8069271153146389]], [[0.29531270801975507, -0.44635009939782311, -0.20040165437167756], [0.16439003157240584, -0.085434481920035887, -0.546560919882215], [0.37159549882914034, -0.42341243991058031, 0.69785984925106903], [0.6446967452055774, -0.60921543764017194, -0.36457586921082341]]]))
      arg1=Data(numarray.array([[[[-0.6584377133261643, -0.49897613750456271], [0.50877135434067644, -0.71112105377216994], [0.8160290765508027, -0.73042735039318396]], [[0.92981596249508147, 0.35097632884110475], [0.71693333351781674, -0.44710407102999361], [-0.96873428419338259, -0.480144798147496]], [[0.88940074484509535, -0.46748577205402464], [0.066045013804010289, -0.82780112290248042], [-0.066896491516356571, 0.099871707096874207]], [[0.1867601759560531, 0.59658767646980126], [-0.29135596273328623, 0.86178879454027491], [-0.42915543898966901, 0.70466612785363725]]], [[[-0.43108460088642064, 0.65523558870336984], [-0.73535512163031447, -0.87067862710760791], [-0.73610626714318972, 0.25258246740427648]], [[-0.20714479901230587, 0.058365765150453441], [-0.50247075160780863, 0.49995080601298092], [0.018079117308689607, -0.19248760498492912]], [[-0.31767983422980661, -0.65632330207270173], [0.66754097171137605, -0.46843035221701212], [-0.82619388329264409, -0.78436231026414749]], [[-0.35592885648050521, 0.32489861332529557], [0.2013133617343188, -0.073987150480586017], [-0.22151077047846246, 0.51784669229808711]]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[[0.45524677580276385, 0.1405915902764503], [-0.26193935362700782, -0.96206759244665641], [0.69342816422924547, 0.65659941797849397]], [[-0.91544236468961038, -0.92327013203587027], [-0.4454201478337716, 0.83994538925207318], [0.93384314509880606, -0.032018348790474827]], [[0.77519100257103535, 0.81370844744657367], [0.5218644333821032, -0.74402005481276401], [0.64371206389311375, -0.30079876504946279]], [[0.99178359591713083, 0.075782610487636903], [-0.023730559609066448, 0.43751324244206735], [-0.88313355528755544, -0.52352079438168464]]], [[[-0.27056832607627079, 0.14043760579139697], [-0.52133024584941512, 0.46778903370224545], [-0.19390692158990075, -0.58594354902626655]], [[0.53238893586847058, -0.32413568695201311], [-0.17806039134436569, -0.25344319994564457], [-0.67630824331988437, 0.50086341778599164]], [[-0.45245787876551002, -0.2333134724181658], [0.074050083075022144, -0.62317917389495658], [0.51054065261039128, -0.33321111305675855]], [[-0.82196486761903031, -0.17591434222374747], [-0.10277545482058126, 0.46823952391481005], [0.63320207938842721, -0.054897337804849622]]]]))
      arg1.expand()
      res=generalTensorProduct(arg0,arg1,offset=3)
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([-0.29281889659789812, 2.0320971861021486])+(1.-msk_ref)*numarray.array([0.53651686973697532, -1.3948445385534947])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank0_expandedData_rank2_offset0(self):
      arg0=Data(0.765286422846,self.functionspace)
      arg0.setTaggedValue(1,-0.602601879327)
      arg1=Data(numarray.array([[-0.080156876732188076, -0.59479969897290341, -0.091885761562299662, -0.10021806430554214, 0.20294987738835868], [-0.95716433807097667, 0.86923106432704977, -0.65106268677169066, 0.15645539207957748, -0.73264847681098777], [0.59291206146009712, 0.93121117362313499, 0.64897086941529603, 0.87276244029118821, -0.69478217421181454], [-0.8214454624409242, 0.25617169516575977, -0.56767787197513653, -0.026049334335727758, 0.180028068927927]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[0.98267386896500653, -0.45196349678995107, -0.38760073208727852, 0.13158289501109044, 0.016248559248370764], [-0.58138916005276675, 0.73783816533435576, -0.69545089779518299, -0.31614841643271085, -0.14177018071554159], [0.51012823952662578, 0.32677636680231248, -0.74096286273664203, 0.97760695076087156, 0.95521443348434554], [0.44718864646621981, -0.30515146118408087, 0.89138610441659383, 0.15264257138559634, -0.94460767679420465]]))
      arg1.expand()
      res=generalTensorProduct(arg0,arg1,offset=0)
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[-0.061342969460892037, -0.45519213393691066, -0.07031892577650202, -0.076695523936948812, 0.15531478568359172], [-0.73250487235819328, 0.66521073184555657, -0.49824943460807836, 0.11973318733956398, -0.56068593202232508], [0.45374755057710503, 0.71264326797636801, 0.49664859518615567, 0.66791324592487678, -0.53170736475979574], [-0.62864105951457572, 0.19604472022782599, -0.43443616797273882, -0.019935201891311198, 0.13777303688174447]])+(1.-msk_ref)*numarray.array([[-0.59216112020355605, 0.27235405255269318, 0.23356892958420028, -0.079292099820931466, -0.0097914123394195161], [0.35034620046797105, -0.44462266506945003, 0.41908001799082073, 0.19051162988851295, 0.085430977331671792], [-0.30740423583636761, -0.19691605275462581, 0.44650561359639496, -0.58910778577134959, -0.57561401277765933], [-0.269476718774109, 0.18388484398881685, -0.53715094172714895, -0.091982700382220894, 0.56922236126261938]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank1_expandedData_rank3_offset1(self):
      arg0=Data(numarray.array([0.24681470775103076, 0.12720199878294491, 0.21560033434939796]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([0.67319764074959276, -0.25957675587353779, 0.41481425878743972]))
      arg1=Data(numarray.array([[[-0.9243191027308244, 0.28729205901967636, -0.33666713527570002, -0.59751846572739309, 0.26678823957016085], [0.16606409740161876, 0.86622964449855577, 0.061149385720846494, -0.18378827468211245, 0.42611689789295393], [-0.037524969445274836, -0.48908339283543278, 0.31440545751402738, -0.56177029237799414, 0.62695780698165082], [-0.97146851078030205, 0.15556339821037035, -0.54821309117316286, 0.94938218162148758, -0.30634678988443231]], [[-0.34527118123180633, -0.77497604677798004, -0.7068871313947056, 0.36389373174544892, -0.6878712570398029], [-0.40900657464302137, -0.35391791544896511, -0.13004595649910811, -0.76567837497860824, -0.35076191088835285], [0.15725351254843045, 0.95708158290271128, 0.43736819044198905, 0.44657360979696081, 0.38208548957605415], [0.53234179334490728, -0.24229244144232687, 0.40934069359787806, 0.99378478293358241, 0.22903862565198119]], [[0.32754837150091753, 0.34806627494112652, 0.12007822959098369, 0.26717436978463205, 0.98333927271421562], [-0.76345009100465688, 0.85444366682850048, -0.17303370756839676, -0.80661719673995091, -0.75952522807623146], [-0.83016116605388635, -0.35401737834838642, -0.80247757242639151, 0.66338739815291103, 0.1064001452679737], [-0.38775469122005779, -0.32728832893283299, -0.1548177576048233, -0.38024355887893035, -0.67453376654501151]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[-0.6314748675259132, 0.30898540271876485, 0.63799767887391301, -0.69037283858776433, 0.54493588923019054], [0.63766981941876666, 0.59654042419762088, -0.169254252998291, 0.2478435939341268, 0.05575614941612872], [-0.36760442775792423, 0.86982851744277134, 0.88899980953461499, 0.97959262327293795, 0.54947897769105025], [0.20528130672042266, -0.83726143254449581, -0.88389018021715304, -0.68847101399954824, -0.84127279703479152]], [[-0.45754676550087003, 0.56152299204628142, 0.33150943230125551, 0.13227937737911488, 0.69110732561101917], [0.93790816838337387, 0.31951913067386295, 0.46404511381503033, -0.90807234907290324, 0.96616812140090036], [-0.91991066662135412, 0.84722889819063996, 0.19339748462488293, -0.69061676513159331, 0.69337664870727034], [0.33370133782161804, -0.26324414001395047, 0.027249053156391367, 0.85720184993432214, -0.2838364030909537]], [[0.11562369071245038, 0.73179064783574277, -0.80594877794281716, 0.45275961879238746, -0.30159814239866289], [0.5556195056579003, -0.068082718035546774, 0.62078113174154348, 0.19719133342976014, -0.01609933895986293], [-0.93845334154300231, 0.33133307581257343, 0.31264603764857424, -0.68245247267536979, -0.20226349820768563], [-0.49528388086405406, 0.23984674763923874, -0.96982349157567449, -0.68757352905923752, 0.55829245965887719]]]))
      arg1.expand()
      res=generalTensorProduct(arg0,arg1,offset=1)
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[-0.20143519517283895, 0.047372608680125577, -0.14712295018189755, -0.043585452016588581, 0.19035693855620014], [-0.17563948702152116, 0.35299749055293894, -0.038755663039942975, -0.31666440633499549, -0.10319959166073669], [-0.16824177822030659, -0.075296549462399678, -0.039780433783068753, 0.061178430078347404, 0.2262843527770371], [-0.2556578175009917, -0.062988221321988364, -0.11661685977717021, 0.27875225802166781, -0.19190642803142513]])+(1.-msk_ref)*numarray.array([[-0.25837653040080694, 0.36580712268212323, 0.0091273443004039057, -0.31128287214567646, 0.062346947556230548], [0.41629755176101013, 0.29040818458359574, 0.023111976004239976, 0.48435997399813407, -0.21993811369505981], [-0.39796683423946055, 0.50308726117950675, 0.67796111712253393, 0.55563648571729352, 0.10602170726443853], [-0.15387703525820223, -0.39581851036748927, -1.0044026176354917, -0.97120204150229406, -0.26107785663745542]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank2_expandedData_rank4_offset2(self):
      arg0=Data(numarray.array([[0.90873582702741484, 0.38844395289412925, -0.61581305755915383], [0.23538636487963105, -0.84116255935597395, 0.12766099047500834]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[0.35537967933099646, -0.12798121550450992, -0.49528051672943985], [-0.20891115566283269, 0.22710455094693782, -0.18567941918698416]]))
      arg1=Data(numarray.array([[[[-0.47974838140167209, -0.42952567845267264, -0.621282279099858, -0.1203894926433251, -0.24471302909468706], [0.37306137710959075, -0.37100275228948987, -0.61789372413609778, -0.51714892210972985, 0.073358354741630771], [0.84136136569396425, -0.34210095662110329, -0.041317590545792759, -0.027946115175650599, 0.36050850715346283], [-0.49954735825078145, -0.083478766046224617, 0.19636956320500865, -0.88857096944134528, 0.63548501604792929]], [[0.012277115068289657, 0.8930655249668249, 0.70017788862082964, 0.35366549478004727, 0.82489974016286438], [-0.21677117376777555, -0.077939257923403282, -0.43038066715635193, -0.91762037725060908, 0.60948777981783553], [-0.76805566209021081, -0.45055069242397905, 0.48837291760973023, 0.32813006549559876, 0.34028760483996967], [-0.99701576923401625, -0.34756735992709165, -0.01595523967524537, 0.91828200855286579, 0.79456098241252926]], [[-0.66828957333318195, -0.30884259367393807, -0.85905983997692159, 0.94032023920274233, -0.10488047548402135], [-0.25804040383018134, 0.06756226476431948, 0.04398138458882439, -0.34268150715650925, -0.30699938910286373], [-0.14085053421963023, 0.0059922957829074974, -0.36691395174772912, -0.87567161817576089, -0.071169927443023306], [0.21332553691502198, 0.65536354412953779, 0.07106308195866351, -0.60218791456985632, 0.22946972648923158]]], [[[0.22205937313664337, 0.68556000197353129, -0.91864502012886451, -0.8955731530399591, 0.055338543620406799], [0.29359357696972532, 0.52546556552989232, 0.18327114813711187, 0.17373205410855852, -0.30404871248186849], [-0.75805095978117909, -0.17290837413612525, -0.91671232610916475, -0.54460558901150136, 0.77336403838577428], [-0.16304738294865406, 0.3200983706684557, -0.047841915722214523, -0.51085180565459032, -0.40456266845110678]], [[-0.37032764483036074, -0.93090551714776892, -0.52992484376837101, 0.34269538737715988, -0.0031480871253202203], [0.68444524195213874, 0.7012262369702329, 0.62968965329735949, 0.35273165693402486, -0.37307065485738256], [0.55543532494162395, 0.28889755485635993, -0.37639730849235464, -0.99937770398278136, 0.52653950285067608], [0.30162571815254502, 0.42081237443992614, -0.53932879593403316, -0.4863883251208454, -0.089977203888996105]], [[0.38790300423447799, -0.89567955153345458, -0.83558301148219671, 0.88138659555437671, -0.46671044401625461], [-0.07384513993952635, 0.81627620759506536, -0.43918916656925733, 0.36982727211358424, 0.42482360125330243], [0.21273984606437679, 0.66234963297035399, -0.90173742926584599, 0.29962683239805954, 0.62715912566582577], [0.10772734537903927, 0.27665857006743333, -0.028576075177831228, -0.023279939770298075, 0.5840250243794991]]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[[0.29498623931780243, -0.010106497537311299, -0.18032077176803685, -0.55536223822316111, 0.7469224710366491], [0.4919432982068086, -0.22211903803145239, 0.36303383681589829, 0.59074719307904888, 0.72902244783084957], [-0.39678781413150421, -0.18499565583495148, -0.92397285550101427, 0.68142741328461609, 0.53206696627535166], [-0.47900383099598121, 0.47527166744650184, -0.0074306276918494341, -0.11529389197469819, 0.13972422005215712]], [[0.70450265203653828, 0.70483908805762319, 0.43824551149776503, -0.15644853339923848, 0.29596935072835118], [0.90538889327870087, 0.64703372311435392, -0.61617276139358057, -0.49283239185589856, 0.39916969229428045], [-0.51621439684762516, -0.5079261514449287, 0.53006359103462164, 0.015494656627988546, -0.56159544559427999], [0.91793600455771784, 0.86571335842379415, -0.044454059208737906, -0.24064313386170433, 0.018411003701142459]], [[-0.0074796036245359243, 0.33163520316809403, -0.18217832967816627, 0.38150329546438289, 0.45079891078912082], [-0.95985076007406556, 0.57883205565709828, 0.16712134379152555, -0.011919351962664138, -0.35275607942329379], [-0.76891089067881602, -0.73002078264684811, -0.85463091987633821, 0.17568336235799142, -0.18210629374580667], [0.84887377069423731, -0.19684093345410125, -0.71853306201115896, 0.0047126735809301934, 0.28874510120362551]]], [[[0.86677380547730221, 0.29331165012647453, 0.61201727915026627, 0.53548978366157041, 0.19891673742188676], [0.38996861784170966, -0.36790734286882976, 0.95054075803832072, -0.27019687923344859, 0.4097729049325658], [-0.99615663901927509, -0.035757790854739735, -0.99388915786362309, -0.038610756724047013, -0.42986772386914307], [0.16872134065767641, -0.017789431690532265, 0.41028040204597604, 0.67052968977826821, -0.0023538155456881427]], [[0.90149436734685207, -0.70190768332971887, 0.41727687828235926, -0.79010719285759246, -0.71935533110977756], [0.41480770784667431, -0.77044218788818464, 0.14469052345406297, 0.6728602068046734, 0.77149850818200405], [0.5913402748202834, 0.39336219804439532, -0.082700835873782408, -0.61315887892819565, 0.45413795506919974], [-0.99659364688378371, 0.31697106245684425, 0.82907709517703831, -0.85342844376357507, -0.23005262672179327]], [[0.76966495549690506, -0.15736910879973998, 0.90193935799299552, 0.74037497645891159, 0.52542065635766821], [-0.81712790669565893, -0.38516120157802614, 0.17093165916715325, -0.58976261586883627, -0.82849576710349049], [-0.61887598615718287, -0.4854552737995359, 0.10391670989199597, 0.96294892041906643, 0.51042670358450315], [-0.65508826458862246, -0.22156566176661929, 0.31702959009069986, -0.026448020104785197, -0.1820810437546303]]]]))
      arg1.expand()
      res=generalTensorProduct(arg0,arg1,offset=2)
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[0.39364145434302478, 0.97684083738529437, 0.35926373882982043, -0.93763405627987584, 0.11872785931333636], [-0.10233349282673541, -0.77097544887994451, -1.2983643979670174, -0.82396608410424332, 0.78894698746700254], [-0.065521442644530054, -0.68873709176823128, 0.36382218216870865, 1.3920115557764903, 0.32281481844068693], [-1.250952791593382, -0.85775832755131831, 0.56724257290317603, 0.2059721580874482, 0.79983408884774465]])+(1.-msk_ref)*numarray.array([[-0.10088267447815347, -0.44951256217562685, -0.2305034891826841, -0.79507225436925866, -0.29819396373267382], [0.69880901964333064, -0.47502346522390643, -0.072355741137651891, 0.59767979677729144, 0.62614605858184158], [0.76319883898234031, 0.54776997989090082, 0.19664028587494656, -0.15681486615809337, 0.44931838034311761], [-0.84807974769269623, 0.27244048904142493, 0.40263317499556728, -0.34149716386308288, -0.11365649475327702]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank0_expandedData_rank3_offset0(self):
      arg0=Data(0.350659268949,self.functionspace)
      arg0.setTaggedValue(1,0.0567279093477)
      arg1=Data(numarray.array([[[0.60088803205713659, -0.79989725652813704], [-0.82965858357775035, -0.71941668115977642]], [[-0.91386126285713876, 0.95433144955998128], [-0.43825520601195556, 0.39979571110065271]], [[0.67026673418726412, -0.077602692661318917], [0.49864266224715648, 0.2811093807266678]], [[-0.94203296514105261, 0.30849876668445742], [0.034423764923061873, 0.84844813854051804]], [[0.20231919040093094, -0.84537466616535717], [0.0061317886918499376, 0.91924901413827498]], [[-0.79402096357306995, 0.58886068970635264], [0.15605373843853165, -0.99076958599901044]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[-0.86838837516810052, -0.68069776499470347], [-0.41292404836439878, -0.027501911296531345]], [[0.86442098689812585, -0.48586943047243203], [-0.31508697675964936, 0.052930043149805206]], [[-0.2894183045852492, -0.89411149714189775], [0.058538468206773553, 0.3964150464941596]], [[-0.72928152316977335, 0.97462927496956664], [-0.14954537030987169, 0.6587401904319774]], [[-0.8937871044613932, -0.035863670671292036], [0.60860748128258368, -0.49874891170800129]], [[-0.50199323442012544, -0.28691981398527555], [-0.48590145145510677, -0.079714171278767232]]]))
      arg1.expand()
      res=generalTensorProduct(arg0,arg1,offset=0)
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[[0.21070695804124701, -0.2804913872083184], [-0.29092747239448241, -0.25227012748506916]], [[-0.32045392235412418, 0.33464516843756492], [-0.15367825015316419, 0.1401920717834261]], [[0.23503524301081502, -0.02721210347707758], [0.17485367141027824, 0.098573609940267135]], [[-0.33033259088204503, 0.10817795199718255], [0.0120710122423867, 0.29751620400160006]], [[0.070945099400306341, -0.29643846242539179], [0.0021501685400327031, 0.32234318727964545]], [[-0.27843081061656555, 0.206489458965124], [0.054721689837584936, -0.34742253872313206]]])+(1.-msk_ref)*numarray.array([[[-0.049261857025095869, -0.03861456110577282], [-0.023424317983083483, -0.0015601259309169565]], [[0.049036795382969782, -0.027562357006638255], [-0.017874225454248951, 0.003002610689569766]], [[-0.016418095346064834, -0.050721075956564179], [0.0033207649177845991, 0.022487796821568241]], [[-0.04137061613529671, 0.055288681158047033], [-0.0084833962103003195, 0.037368953806484057]], [[-0.050702673837991478, -0.002034471058715309], [0.034525030026504755, -0.028292983050614486]], [[-0.028477026695322413, -0.016276361197803554], [-0.027564173490040651, -0.0045220182820255757]]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank1_expandedData_rank4_offset1(self):
      arg0=Data(numarray.array([0.76923702539448091, 0.30521686841611761, 0.5326988566829689]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([0.90267349382273632, -0.58092056512396462, -0.42331935634562678]))
      arg1=Data(numarray.array([[[[-0.20590062810205323, -0.91523816081184561], [-0.42993194333097939, -0.56076461269011846]], [[-0.59894892044535997, -0.48937391832461929], [0.23513194087237332, -0.70192875258052356]], [[-0.10892230468374575, -0.69079324618522842], [-0.35884118312475, 0.40903689902662554]], [[0.086161143752182978, -0.77319364429835757], [0.79163036819822841, -0.37836972656641743]], [[-0.65862246133002, 0.76480205696383718], [-0.54494596746416701, 0.87856352304339103]], [[-0.42953182003429968, -0.71707073265542687], [0.65899744150636774, 0.122913870322783]]], [[[-0.29248919516861771, -0.48781964803504496], [0.12053892683218348, -0.57114940176547813]], [[-0.31739171897992557, -0.41897590426948672], [-0.54740231305527698, -0.37069595879181594]], [[-0.45663019011414896, 0.92307761548993006], [-0.041357331158212052, -0.33756602525514334]], [[0.87099982235084905, 0.22025575612003223], [0.40940609494831826, 0.43351414040475444]], [[0.56314473972930501, -0.96013230021602314], [0.64970275204119599, -0.50578185110732421]], [[-0.81984639130457659, -0.52981671703441791], [0.2770895490865779, 0.82608817588113048]]], [[[0.17022523720459204, 0.8306674234934408], [0.061475754258584869, 0.57957470247978726]], [[-0.81713259105874836, -0.38470541435176364], [-0.38897395684688885, -0.2527961378570589]], [[0.48741749555449809, -0.4910317153703847], [0.82918878278104446, -0.75708942597465967]], [[-0.056694305100824849, 0.12542731439335175], [-0.095344992148489904, -0.011239959329501392]], [[0.73258324217122439, 0.38460072075497664], [0.48279718474463684, -0.024071209184957754]], [[0.34774307878897392, 0.017337334484284206], [0.077769002992741587, 0.81839255189642657]]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[[-0.8332279635045432, -0.48115520044059945], [0.36085585594096581, 0.564173935581606]], [[0.56416703429488968, -0.59064153126689622], [0.3651913573903931, 0.24258966858525133]], [[0.65838837559638352, 0.41137866344602547], [0.046257137454658093, 0.79818282336223767]], [[0.77452072087032064, -0.65350708952714021], [0.55123185315882028, -0.60279465055495196]], [[-0.77664511417618187, 0.21978310393690048], [-0.4350905058112402, -0.11939288249352509]], [[0.89585241831084406, -0.60948580849464751], [-0.020852742109980227, -0.21451480102594478]]], [[[0.64830097220498883, 0.56942010617734384], [0.44891529239422745, -0.56471695190927762]], [[0.48769055112612869, -0.28057202919449287], [-0.72022156637411872, 0.175537644818345]], [[-0.31149586555387465, -0.7056647842369852], [-0.52722121869553029, 0.049904751944044534]], [[-0.88135332631388152, 0.91531136213034259], [-0.35210238128316562, -0.1442765231703349]], [[-0.0065542753952527733, 0.84177581334042206], [0.82831049156905379, -0.56443376470373252]], [[0.5471096597903442, -0.71209614496855034], [-0.24740095660641614, 0.12830404221755831]]], [[[0.16513535913111488, 0.10451766765762804], [0.16923422172268143, 0.17687348854026741]], [[-0.16478805746815706, -0.07720021822582912], [-0.82514562167802596, 0.12247903777155833]], [[-0.31969920151137843, 0.1154843562241854], [-0.26507901978941906, 0.73647030667755109]], [[-0.20175315162866236, 0.92673249740130825], [-0.28539989486498296, 0.77362522925320598]], [[0.19526862313918514, -0.29554188281927107], [-0.10588110481820689, 0.97532076984505078]], [[0.50624619848204655, 0.82005241820716268], [0.61981991686243454, 0.063550209473590025]]]]))
      arg1.expand()
      res=generalTensorProduct(arg0,arg1,offset=1)
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[[-0.15698023364552149, -0.41043027889678541], [-0.26118099143276124, -0.29694655304347861]], [[-0.99289258947027292, -0.70925518506554786], [-0.19341020707436365, -0.78775645896117419]], [[0.036488436304224325, -0.51121691612614972], [0.15305103716372831, -0.19168518925169326]], [[0.30192118858579159, -0.46072841988625279], [0.68311886754739315, -0.16472768809881824]], [[0.055490746443405681, 0.50014184960296604], [0.036293132689717955, 0.5086277327775055]], [[-0.39540038720139803, -0.70407077833534659], [0.63292509506957895, 0.78264272277792601]]])+(1.-msk_ref)*numarray.array([[[-1.1986491580484746, -0.80935824752575858], [-0.0066892309131174194, 0.76244657706992036]], [[0.29570713180163755, -0.33748604617875799], [1.0973401913021279, 0.065158088443457968]], [[0.91059894975120637, 0.73238903731917016], [0.46024182022837407, 0.37974564498157415]], [[1.2965416118304098, -1.513930525799033], [0.82294119690911816, -0.78780408800006729]], [[-0.77991043316896036, -0.1655038992712469], [-0.82910574472933019, -0.19275376933258659]], [[0.27653116474216993, -0.48363945107664258], [-0.13748468230859734, -0.29507331540148157]]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank0_expandedData_rank4_offset0(self):
      arg0=Data(-0.565864436786,self.functionspace)
      arg0.setTaggedValue(1,-0.465243505173)
      arg1=Data(numarray.array([[[[0.77985206363924586, 0.44834862500101647, -0.33328335943570542, 0.69868242247400669], [-0.6735965241593056, 0.5724993399220264, -0.48051165640093774, -0.23246466252525355], [-0.85571768943278981, -0.38767258067852861, -0.10851536873008993, 0.056099524473623763]], [[0.56871609067167284, 0.87062673950051894, 0.78546963145695137, 0.66722386314743432], [-0.54833276664320851, -0.17617685486852808, 0.89435180484601728, -0.3926975023920094], [-0.71774153470011393, 0.5583762766250242, -0.4518704799656228, -0.39526756751136616]]], [[[0.62399144070392643, 0.53189584637689569, 0.95087134806254237, 0.62972999182378997], [0.17568449153424481, -0.45872072130724328, 0.44264592727936192, 0.50563796768916824], [0.1547407696726486, -0.64168886689276672, 0.74741775656222886, 0.31566177653214944]], [[-0.17690715765431508, 0.13543009135973905, -0.6651361946551515, -0.96868626212175024], [0.3231977529379555, 0.0022388758689106947, 0.18107456870987293, -0.47660567203190363], [-0.97161011235675021, -0.78846747729612798, 0.31444997598766888, 0.57599278333513526]]], [[[0.20743399185450784, -0.24924222312754707, -0.91788237407057904, -0.93773752880953731], [-0.17046790592931482, 0.068259737867283565, -0.81094660833792465, 0.40449272537660508], [-0.35112769588389026, -0.31648103295140784, -0.36933908245657388, -0.40395053764534339]], [[-0.12583948799620726, -0.16518314252694655, -0.78729501364545196, -0.66817555030514897], [-0.21617196210207146, 0.5702641498047778, 0.16702567312642036, 0.84281481167042283], [0.31275403759854026, 0.450646572420911, 0.26973630697694873, -0.34100082694040479]]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[[-0.05711695983740861, -0.22592848034087876, 0.63813485269003611, 0.84695912570450993], [0.59036047264006597, 0.39966982966665898, 0.1370932705598773, -0.92017845514718233], [0.96127716600808211, -0.78372454968436078, -0.077462519711059885, -0.65586888962542211]], [[0.26099478269494236, -0.29891159763566821, -0.47324659052675733, -0.68252799879000081], [0.38911477172835673, -0.39145512019326456, 0.58644620672417891, 0.44175620139477667], [0.31911133370660183, -0.18904187763141778, 0.38842889751796705, 0.39455143664203063]]], [[[-0.59183959453231116, 0.32801958539170739, -0.24679985642940294, 0.673096674021328], [0.003593365755836464, 0.45066670279993315, -0.79682420357614214, -0.36150946965112651], [-0.90554634502645159, 0.19757387072847132, 0.81547191963939092, -0.14308349469725967]], [[-0.83349193917383757, -0.050984861083720912, 0.37058163424659285, -0.68123433296397673], [-0.39710297885158585, -0.46254193846223246, 0.42030022280117252, 0.16129857614610343], [0.18793375506047005, -0.87483658878801984, 0.044177062221624874, 0.65279023827415505]]], [[[-0.87928050731281626, 0.66267003213216746, 0.62169054611379493, 0.5945868221410946], [-0.68143675922763669, -0.077822108240824361, -0.16496204132526238, 0.5197033612836699], [-0.071138805678518269, 0.78437605338714711, -0.35129178476059342, -0.63772592937753925]], [[0.99832912281581909, 0.58253837594712365, 0.078088195659534287, -0.87854524884015484], [0.89597262405638101, 0.72574522146481324, -0.4623910595497418, 0.34499695194134472], [0.5417396697160024, 0.99002118538170647, 0.91778485331867721, -0.99471911315139661]]]]))
      arg1.expand()
      res=generalTensorProduct(arg0,arg1,offset=0)
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[[[-0.44129054876784263, -0.25370454217010469, 0.18859320047732586, -0.39535953548572983], [0.38116431776460352, -0.32395701654549641, 0.27190445781856071, 0.13154348533256602], [0.4842202083789453, 0.21937012652314056, 0.061404988009108201, -0.031744725820245429]], [[-0.32181621033922297, -0.49265670959853936, -0.4444693306171173, -0.3775582555302911], [0.3102820121680237, 0.099692216754958415, -0.50608188033798751, 0.22221355101843454], [0.40614440929120255, -0.31596527728724122, 0.25569743464609462, 0.22366785946970341]]], [[[-0.35309456515338883, -0.30098094353902555, -0.5380642798276245, -0.35634180715079972], [-0.099413605854109993, 0.25957374260472083, -0.25047758833567824, -0.28612254380419211], [-0.087562298478689293, 0.36310890925630374, -0.42293712786115301, -0.17862177339232235]], [[0.10010546912952123, -0.07663507237119363, 0.37637691817470897, 0.54814510613813416], [-0.18288611443682853, -0.0012669002325955509, -0.1024636588393314, 0.26969420017348117], [0.54979960900460989, 0.44616570496447505, -0.17793605855972255, -0.3259338319349]]], [[[-0.11737951897108155, 0.14103731021343058, 0.51939699263950478, 0.53063231859316995], [0.096461725578828858, -0.038625758123449747, 0.45888584579088637, -0.22888804822938139], [0.19869067587140293, 0.17908536146458956, 0.20899585187745182, 0.22858124347419856]], [[0.071208091000448073, 0.093471265912598966, 0.44550224948113287, 0.37809678144778802], [0.12232402558387444, -0.32269220194868925, -0.094513888452531711, -0.47691892872102121], [-0.17697638733833404, -0.2550048688926278, -0.15263418342832311, 0.19296024088028901]]]])+(1.-msk_ref)*numarray.array([[[[0.026573294599588786, 0.10511175811222868, -0.29688809563865043, -0.39404223238113456], [-0.27466137560672915, -0.18594379246606366, -0.063781753730925386, 0.4281070498574695], [-0.44722795815649147, 0.36462275658538373, 0.036038934189916057, 0.30513874114333911]], [[-0.12142612753289397, 0.1390666794209181, 0.22017490258790084, 0.31754171853586077], [-0.18103312031354246, 0.18212195223668273, -0.27284028881184214, -0.20552420356887238], [-0.14846447543413135, 0.087950505773750437, -0.18071402179179291, -0.18356249335443187]]], [[[0.2753495274604556, -0.1526089816730743, 0.11482203028144031, -0.3131538559420573], [-0.0016717900796144448, -0.20966975647545746, 0.37071728547855087, 0.16818993281376882], [0.42129955565682153, -0.091919960148336574, -0.37939301426329003, 0.066568666605373833]], [[0.38777671131478419, 0.02372037548135535, -0.17241069846967114, 0.31693984891243865], [0.18474958179560252, 0.21519463273974254, -0.19554194888106438, -0.075043114945647943], [-0.087434958944681271, 0.40701204102144123, -0.020553091276240151, -0.30370641859746966]]], [[[0.4090795452526213, -0.3083029285223593, -0.28923748880697842, -0.27662765726267441], [0.31703402641688294, 0.036206230417923736, 0.076747518326679545, -0.24178861345387134], [0.033096867307703899, -0.36492586445170128, 0.16343622128054269, 0.29669784672339738]], [[-0.46446614041524636, -0.27102219592350152, -0.036330025861286815, 0.40873747102359204], [-0.41684544415515645, -0.33764825069693816, 0.21512443730563868, -0.16050759119523658], [-0.25204086283000587, -0.46060092648264078, -0.42699344215278701, 0.46278660686526157]]]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank1_float_rank0_offset0(self):
      arg0=Data(numarray.array([0.55882953621208076, -0.26044696481990415]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([0.75081381312452589, 0.41243580156803827]))
      arg1=-0.40687162458
      res=generalTensorProduct(arg0,arg1,offset=0)
      ref=Data(numarray.array([-0.22737188126189695, 0.10596847969320437]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([-0.30548483590308001, -0.16780842461894202]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank1_array_rank0_offset0(self):
      arg0=Data(numarray.array([0.43796280081446959, 0.19733466028220037]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([-0.97727078334641915, -0.66445249198200651]))
      arg1=numarray.array(0.504619630516)
      res=generalTensorProduct(arg0,arg1,offset=0)
      ref=Data(numarray.array([0.22100462672672117, 0.099578943359591277]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([-0.49315002160628724, -0.33529577099935159]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank2_array_rank1_offset1(self):
      arg0=Data(numarray.array([[-0.81198944335527723, 0.66366742864599537, -0.46143749982582616], [-0.62465053443245, -0.17572608403413503, 0.89401090119115567]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[-0.96536673850523558, -0.015263267781715495, 0.67362472957796515], [0.36344193702734118, -0.15152659557629855, 0.61575117670622359]]))
      arg1=numarray.array([0.80396737423290099, -0.32033361289592666, -0.47699537253956947])
      res=generalTensorProduct(arg0,arg1,offset=1)
      ref=Data(numarray.array([-0.6453044537255509, -0.87234674147023905]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([-1.092549903051627, 0.047024059684103114]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank3_array_rank2_offset2(self):
      arg0=Data(numarray.array([[[0.89325885818948358, -0.17211143507999882, 0.4722616522990335], [-0.56746923191469212, -0.069196942922930438, 0.48756061873591805]], [[0.29368691933610069, -0.18254631980290337, -0.27885239727701649], [-0.8466369437379675, -0.14757532616924363, -0.99112803303998387]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[-0.64114755029857373, 0.46460757086637017, 0.52701156048272724], [0.70761894834723549, -0.40745106953471288, 0.82664374302750465]], [[-0.5311821564468191, 0.71529378155460521, 0.6535329577441269], [-0.36396936455795004, 0.091843092586624042, 0.2435142505355663]]]))
      arg1=numarray.array([[0.92805810809340783, -0.46322129979035909, 0.58272666610380885], [0.5257175877017759, -0.28673166284409679, 0.96989568032307139]])
      res=generalTensorProduct(arg0,arg1,offset=2)
      ref=Data(numarray.array([1.3783166036269021, -1.1694450684848443]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([0.78746042899122881, -0.42497214003280531]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank4_array_rank3_offset3(self):
      arg0=Data(numarray.array([[[[0.40013373182078649, -0.68211182751843569, 0.03144728731254065], [0.17590191425817947, 0.32798668485592097, 0.9935214239102681], [-0.11790750876409417, 0.96458490611827696, 0.064829224717654954], [-0.65710176227926875, -0.89425418282672919, 0.12316200039931435]], [[0.49974296548331565, -0.87122213927383241, 0.31651421984775285], [0.83490680496710845, -0.85752375256559854, 0.79899880725479866], [0.019606888563234781, -0.42976549832586342, 0.35714247806269372], [0.1154961948643658, -0.21613291136384394, 0.89984913659421539]]], [[[0.21541922318323992, -0.49572574878775422, -0.9432812029494928], [0.99736738105631173, -0.92173892722543349, 0.37683543409983544], [0.2032703589123892, 0.20043732767682299, 0.82792246289542759], [0.25674238317167508, -0.91088284647807338, -0.36140591737245709]], [[-0.58072799105002848, -0.89930824309844937, -0.78584737960154905], [0.15183059676464161, 0.30114031274130748, 0.59351262052115783], [-0.3790698933829082, -0.48727720122423057, -0.79302631919436606], [0.44798390679664379, 0.44532209361707475, -0.1453089421536653]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[-0.47440171911133122, -0.65497021053032634, 0.43292480936367084], [0.28778859978751026, 0.39385687633351596, 0.88874554187022392], [0.28712231878434946, -0.13089667977724573, 0.37798104555864742], [0.27528626550148738, -0.74588530241293904, -0.88115644442593832]], [[0.32715825756722339, -0.85936935099726663, -0.91982712245149378], [-0.70141771171877632, 0.096739666706445515, -0.44517777231926381], [0.65389588940302201, -0.5480079036014438, 0.90183205745534645], [-0.15651667092205468, -0.65692675643356968, 0.80633461772608062]]], [[[-0.098613529046337245, 0.077352216509859684, 0.87267033238738634], [0.66918706480166068, 0.86660990561111184, -0.87833597872238967], [0.89277324821388859, -0.49483825014935623, 0.30342506693621285], [0.82271665528907434, 0.6204648071557799, -0.0021565964109286906]], [[-0.12356498000649085, -0.69898213761644645, -0.72404879962176283], [0.047956170359417793, -0.99289492158258286, 0.12645287734719735], [0.35352263397677297, 0.63065016197393109, 0.19635270288063489], [-0.92031204424794377, -0.50098199792041354, -0.91624657340446181]]]]))
      arg1=numarray.array([[[-0.21318747135912552, -0.85786689592650056, 0.74752965966168983], [-0.14770561387722658, -0.6201956340222825, -0.67539052725673798], [0.81642602292110733, -0.71260987639629136, -0.38664899150434295], [0.57722814855715865, 0.3751995272764288, -0.73171385460868343]], [[0.59832169337837926, 0.24106260205228325, 0.80554869500620185], [-0.93351389860738077, -0.39671691024608657, 0.1577891153230746], [0.6592594789418762, 0.67930661150729188, 0.84920174241004331], [0.12775150269510038, -0.72471075684981012, -0.49762811832043274]]])
      res=generalTensorProduct(arg0,arg1,offset=3)
      ref=Data(numarray.array([-2.2119955935021438, -3.1944583143941983]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([1.4782293701419627, 3.3104375183372707]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank1_array_rank1_offset0(self):
      arg0=Data(numarray.array([-0.045576621827677188, -0.48421043274888076]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([0.023272913999223821, 0.8079567969554502]))
      arg1=numarray.array([-0.73682895016961747, 0.68343656034579237])
      res=generalTensorProduct(arg0,arg1,offset=0)
      ref=Data(numarray.array([[0.033582174413565057, -0.031148729654088658], [0.35678026482353398, -0.3309271126414427]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[-0.017148156789435882, 0.015905560292852967], [-0.59532595848309111, 0.55218721421923667]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank2_array_rank2_offset1(self):
      arg0=Data(numarray.array([[0.18248584100329124, -0.98152627244112201, -0.70226729370877883], [0.32877192769079255, -0.19364871428555652, -0.48327953943498225]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[-0.27342232751582096, 0.69415616174124839, 0.18230311082407025], [0.66298579053913409, -0.089734693660832976, -0.24651457882227801]]))
      arg1=numarray.array([[0.28842942902129787, -0.81698425867105784], [-0.84913474294454461, 0.34062473589321729], [0.84092098503630619, -0.54575029153517685]])
      res=generalTensorProduct(arg0,arg1,offset=1)
      ref=Data(numarray.array([[0.29553104158329269, -0.10015760657536393], [-0.14713855574106333, -0.070813082236268032]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[-0.51499264824122915, 0.36033652093138435], [0.060122176600294897, -0.43767940766181024]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank3_array_rank3_offset2(self):
      arg0=Data(numarray.array([[[-0.69531181644355566, 0.98560097072895525, 0.71922195408020273], [-0.35340424466904707, -0.3090066368871982, 0.27978721248289751]], [[0.17471662629867168, -0.44783243442113463, -0.083367753935571276], [-0.16260241791496832, -0.41869277721079179, 0.8947251562917089]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[0.60283614694657084, -0.75244433411941891, -0.31955792805779382], [0.62783952630371243, -0.4571147974784151, 0.40015802966316127]], [[0.34906867892148963, -0.19409081682425433, -0.68262735810817365], [0.70425416981999223, -0.73680648211892286, 0.25694399706129145]]]))
      arg1=numarray.array([[[-0.36656904604511498, -0.1531634092974048], [0.29295863510546405, -0.82372257053875053], [0.44428274491082131, 0.4421083912290471]], [[-0.31487955141369883, 0.22881358166642496], [0.95257603709263594, 0.2915806342382159], [-0.12096461129446934, 0.51223394754519869]]])
      res=generalTensorProduct(arg0,arg1,offset=2)
      ref=Data(numarray.array([[0.646241109384462, -0.41503890959151413], [-0.68814755113917114, 0.60429215794879321]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[-1.2649256010549721, 0.60154061542914328], [-1.4427984764754609, -0.11746298994654505]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank4_array_rank4_offset3(self):
      arg0=Data(numarray.array([[[[0.40146323161533126, -0.81523402509289578, -0.065675401582655946], [0.57407115729962732, 0.12060217211181268, 0.83684190590048324], [0.82900727017273379, 0.72792537995533202, 0.99954826251009177], [0.48081921833803865, 0.075220210066401005, -0.38810139629750973]], [[-0.20196928778955403, 0.76048297929143427, 0.57176937193846977], [0.72260707204080132, -0.37527427530054669, 0.19253993047687845], [-0.72772322947043899, -0.46823347843038299, 0.22001559871624332], [0.83211897315823036, -0.54906425635283829, 0.64663904666096639]]], [[[-0.53151743970690801, 0.87047079802430249, -0.63593006017421816], [-0.97618834080068018, -0.21368685370978824, 0.15105683463146979], [-0.86761996827954957, -0.50584854099536058, 0.19862251225470118], [0.6293558143095499, 0.98650209233663633, 0.45193431636440007]], [[-0.67829930279077177, -0.69054366141429502, -0.06846541965181685], [-0.21178440154483535, -0.74119356240810652, 0.79587388423329397], [-0.81695685344383606, -0.16212860402208751, 0.17789773544152321], [-0.16753156667247859, 0.8665303976682146, -0.46469346443348103]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[-0.10155810843039137, 0.52405744519404696, 0.1331992367312762], [0.48649017859011678, -0.08342369714972997, 0.30157073375373789], [0.7493330298796459, -0.39380945522432298, 0.34783628696359692], [0.10915472120196301, 0.32458355796152616, -0.039717526830193028]], [[0.74752301404857424, -0.30533259861796713, 0.65180564048735734], [-0.022650177512745895, 0.94041131582723936, -0.39376440097908993], [0.92897552322344468, -0.92187729758462811, -0.2396357300673051], [-0.88420992248629893, -0.069229710169899317, 0.71205545532768899]]], [[[0.034039675841292638, 0.6014689819721184, 0.88726481906030141], [-0.53514256356620682, -0.038863116535174491, -0.69464769418815253], [-0.65692566965744059, -0.091039464023104477, -0.084763237966194893], [0.46661925013104577, -0.19427942937306319, 0.98706583992718322]], [[0.43618926339036523, 0.64855371872603418, 0.79609902651061581], [0.88112621597037255, 0.6889602977156335, 0.19581678156113891], [-0.14091318736678504, 0.33334517709337397, -0.46329585331958922], [0.97843404390074973, 0.8323253052656554, -0.93426645074733838]]]]))
      arg1=numarray.array([[[[-0.12802312852411402, 0.14987800803851115], [-0.94430623206835373, -0.70489364329313231], [-0.77659003343536059, -0.89438894036917449]], [[-0.41266149255465923, 0.62501382442954601], [-0.32368342875183242, 0.19727946049141654], [-0.54585623802459038, 0.91906235994923446]], [[0.66837393072432238, 0.021902140848362395], [0.85399216443260295, -0.92657788409095598], [-0.35395844536037036, -0.81663234397953044]], [[-0.59587413843503589, -0.039685391280912752], [0.42841726300952532, -0.49205224569927353], [0.43059186807049743, 0.9561791716591761]]], [[[-0.67634980297937997, 0.56716395401554953], [-0.20199810935503715, 0.3852929658306381], [-0.16248749354964409, -0.89827154988633251]], [[-0.22811886031869943, 0.34880989555737618], [0.94627042756000534, -0.1936100498721558], [0.86494898280859434, -0.87319807988628861]], [[0.12011786938322833, -0.058305721244825026], [0.51455281667984054, 0.50494842737399126], [0.92056493355789804, 0.067099294919160224]], [[0.99442252548747656, -0.056400273005471124], [-0.65960824844990484, 0.11950119875472098], [-0.1729533398117804, 0.45855884356684062]]]])
      res=generalTensorProduct(arg0,arg1,offset=3)
      ref=Data(numarray.array([[0.92591132207030347, -0.22833163255989747], [-0.74138531412710551, -1.7656718062625985]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[-2.3608505861720137, -0.33669933926077528], [-0.69326293335187583, -1.4864706133856718]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank1_array_rank2_offset0(self):
      arg0=Data(numarray.array([0.61604890092953202, 0.62837586090195208]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([-0.72529468521182383, 0.029672037926859574]))
      arg1=numarray.array([[0.63451865503883154, 0.11179460616506565, 0.95366279772307094, -0.80944849823674514, -0.98367674243671033], [-0.083734500740024087, 0.39988670608945465, 0.23234394887639653, 0.54571817954384305, -0.070329446694384012], [-0.44099991130013461, 0.74671941335328706, -0.066156349165347628, 0.4022740960979807, -0.58730409789693439], [0.71212857924300077, -0.31633742224660977, 0.12611584604006532, 0.23484630429133579, 0.830228348096129]])
      res=generalTensorProduct(arg0,arg1,offset=0)
      ref=Data(numarray.array([[[0.39089452005595704, 0.068870944257838573, 0.5875029183946805, -0.49865985769780707, -0.60599297604807778], [-0.051584547150774922, 0.24634976578273934, 0.14313523434293146, 0.33618908472524955, -0.043326378339057378], [-0.27167751066646906, 0.46001567389903741, -0.040755546192822768, 0.24782051477358197, -0.36180804402081668], [0.43870602856315977, -0.19487932129790525, 0.077693528342780316, 0.14467680764603985, 0.51146126136516123]], [[0.39871620611837449, 0.070249031893167807, 0.59925868152939887, -0.50863789693530692, -0.61811871987789568], [-0.052616738989707777, 0.25127915320220695, 0.1459993289005648, 0.34291613088070844, -0.044193326613341501], [-0.27711369892090659, 0.46922045421807235, -0.041571052860905455, 0.25277933145412324, -0.36904771812723047], [0.4474844090547046, -0.19877880003971773, 0.079248153328804083, 0.14757174863870992, 0.52169545298011055]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[-0.46021300816741917, -0.081084033686871101, -0.69168655867278195, 0.58708869372380357, 0.71345551325582612], [0.060732188355605003, -0.29003570261354411, -0.16851783126117811, -0.3958064952466212, 0.051009573901324996], [0.31985489184487337, -0.54159162184963006, 0.047982848442644312, -0.29176726389825586, 0.42596854080777119], [-0.51650307371239557, 0.22943785108907463, -0.091471152853852017, -0.17033277634414459, -0.60216020838631434]], [[0.018827461597612137, 0.003317173794148157, 0.02829711870347397, -0.024017986539520225, -0.029187693609351743], [-0.0024845732817446457, 0.011865453509533245, 0.0068941184631367601, 0.016192570520801673, -0.0020868180096908109], [-0.013085366093839302, 0.022156686753741064, -0.0019629937015367594, 0.011936292236412436, -0.017426509467397884], [0.021130306212098941, -0.0093863759905863965, 0.0037421141668788007, 0.0069683684479153202, 0.024634567032662313]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2, 4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank2_array_rank3_offset1(self):
      arg0=Data(numarray.array([[0.98302473749225894, -0.96148850333664515, 0.72520517405978291], [0.96959281983790868, 0.35407206434172811, -0.8682814011551081]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[0.27219646752440152, -0.75495233759598657, 0.092821782602300562], [0.7908091767806904, -0.85243279510022862, 0.38287527196971149]]))
      arg1=numarray.array([[[0.15242729238184305, 0.83297862934021771, -0.099533067052602675, 0.99141270116537861, -0.13331538555688316], [-0.18251490449939523, -0.36773834453887999, -0.63229612836156024, -0.7939579622527837, -0.64385738856682484], [-0.67799894193165322, 0.62059775453532295, -0.54688333062667627, -0.46751729506425099, 0.18585741143121481], [-0.48331891888207879, -0.22329879514483997, 0.02089261396266906, -0.78295737333392235, -0.49527919817672816]], [[0.9966829977814462, -0.9496512966213535, -0.73599888559705784, -0.77278516694004407, -0.4259515796595208], [0.40201121365786663, 0.23466300324810474, -0.80219621719393963, 0.69640277296008657, -0.25309018932555194], [-0.67259779201046377, 0.8095029173517363, 0.68093484799962178, 0.019035857550391944, 0.051809895679800766], [-0.25110587900897863, -0.21862043782787066, 0.89319340764321531, -0.04652367482235098, 0.089711223560115849]], [[-0.96636279707724482, -0.66286540230069901, -0.88109686880784954, -0.019969759596512704, 0.14238494946430547], [0.096545480555976892, -0.0290450648814502, 0.30586088881279516, -0.13719034353738424, -0.067631404440610776], [0.2568074419022448, -0.20880871554653035, -0.23822581800189546, -0.59981510609357214, 0.15002503982230353], [-0.22619059288810783, -0.34139824528073093, 0.28739529471098502, 0.74477876367916362, -0.77927804746000318]]])
      res=generalTensorProduct(arg0,arg1,offset=1)
      ref=Data(numarray.array([[[-1.5092707452169485, 1.2512039828703123, -0.02916500824835655, 1.7031250908874092, 0.38175352698973314], [-0.49593054419711058, -0.60818530072060262, 0.37155160376168794, -1.5495547242806649, -0.43863107746380192], [0.16644339807984534, -0.31969396461391902, -1.365073466210702, -0.91287284285775838, 0.24168674914562083], [-0.3977136258578281, -0.25689097580618947, -0.62983668162401085, -0.18481707496456679, -1.1382644858955691]], [[1.3397648582299468, 1.0469588033740718, 0.4079368318746478, 0.7049843680381197, -0.40370939915380932], [-0.11845284573998772, -0.24824955482738437, -1.1626783777965815, -0.4041193483065641, -0.65516857614333546], [-1.1185121201254034, 1.0696542199504984, -0.082307096305211908, 0.074246953687970241, 0.068286496568781968], [-0.36113504546794667, 0.0025134485843488208, 0.086972173009465803, -1.4223001294867466, 0.22817771869130865]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[-0.80065750594188656, 0.88214695844813362, 0.44676654788790215, 0.85142137467304446, 0.29850158857643644], [-0.34421769415869335, -0.27995247590430133, 0.46190168973977791, -0.75459770628558631, 0.0095376557764859076], [0.34706768290402412, -0.46159360040729913, -0.68504561108127004, -0.19730362875825844, 0.025401320632023543], [0.037019853894763366, 0.072577673639273699, -0.64195501174099368, -0.10886338169395078, -0.27487492362540672]], [[-1.0990607907726795, 1.2144462821087498, 0.2113277211453608, 1.4351197547885277, 0.31218374157262346], [-0.45005712677206733, -0.50196593439674475, 0.30089935387933353, -1.274032594891009, -0.31932034628636191], [0.13550184985673985, -0.27922012885843017, -1.1041423271071136, -0.61559812837642358, 0.16025417026855648], [-0.25476493482297113, -0.12094045149280552, -0.63482873056850497, -0.29435419799249474, -0.76651041839922429]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2, 4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank3_array_rank4_offset2(self):
      arg0=Data(numarray.array([[[-0.033181577069922419, -0.60298702546057004, 0.23934971354286527], [0.05787688382779943, 0.051146875204454378, 0.15441137103841718]], [[0.077253533936068042, -0.83148157945197521, -0.95383919353420077], [-0.2912398946266348, -0.8829106102524733, 0.34887359061097412]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[-0.25389063140218115, 0.86387035574626014, 0.29546345090423065], [0.34142477905690027, 0.34422229890144429, 0.60607148814182588]], [[-0.42018114221738356, 0.918824067742259, 0.13855716796346762], [0.29119767589509871, 0.87588396741439523, -0.090075123380412903]]]))
      arg1=numarray.array([[[[-0.77265127851971127, 0.27037108633883156, 0.11001800274076157, -0.63225135124432286, -0.30639771436699537], [0.096667022531056412, 0.92183538188056691, 0.25684803645843268, 0.57538687488997131, 0.12110458439668847], [0.95511415957729451, 0.93290546030041854, -0.48834709343932658, -0.65287581333104527, -0.42739878252533137], [0.1339528850449534, -0.98326311423342094, 0.22509269729641357, 0.41770838788066467, -0.32955121623853501]], [[-0.14835818076487284, 0.37207501515653219, -0.044635939716078266, -0.16871454056080082, 0.98379981749547185], [-0.36715930941386077, 0.73153108515342491, 0.74473555737356412, -0.89356606844713049, 0.61545124593266909], [0.63783688998446264, -0.4062395396882803, 0.96028490071149242, 0.39164617657525835, 0.29854670677315287], [-0.089779236843148924, -0.21848114747873204, -0.88930837319242251, -0.65329947774430108, 0.76327511634326073]], [[-0.26278642766702953, 0.60425265950588813, 0.20804659977929885, -0.10095267596767132, -0.54859643158599436], [-0.36100519080979754, 0.58590565208265999, 0.14558539143578475, -0.31562839403915643, 0.037658303624956257], [-0.08831091211253117, 0.66845965482668368, 0.62231736062003495, 0.94352947339333171, 0.742236787624315], [-0.95076868476796683, 0.10622318859558755, -0.85600090267512075, -0.044899260651609874, 0.58201310585901744]]], [[[0.13826614926721192, -0.87536374694803754, 0.53104725249390983, -0.63756933542591931, 0.46344122164341051], [0.35686599387383633, 0.17194403012894144, 0.98017441577154929, 0.42777292860017613, 0.41577028707803887], [-0.066944291612124118, 0.35295438062774043, 0.49222925533903039, 0.4260262342656882, -0.37299468490449939], [-0.19128280711991796, 0.53367989747078459, 0.33766677441086301, -0.57177958185122502, -0.0026669106343693016]], [[-0.34039264288892457, 0.14389653263064339, -0.26446216325994842, 0.94545654492501163, -0.618891311605414], [-0.63867981877230107, 0.95083890289297024, -0.47189766127280008, 0.25167929482481766, 0.86729281239865097], [0.1495445240473372, -0.8341746643445771, 0.73069276438057473, 0.2361140589141586, 0.10834501826683884], [-0.47580262238654236, -0.93604605599036117, -0.57752310526347039, -0.41316989195252907, 0.30919537615246195]], [[-0.03240346919625714, -0.6137056576113209, -0.86244037698927678, -0.60132620402506176, 0.93594874742626333], [-0.38526687186806496, -0.45544285422142416, 0.63705029761040866, 0.72004349974924287, 0.35760351750558828], [0.76572082480500026, 0.32116147584815402, 0.89750214564826791, -0.26861357254818929, -0.7434671526001575], [-0.017186810979573641, 0.012262958272531543, 0.18115157843167418, -0.37076958600345078, -0.91333731597027845]]]])
      res=generalTensorProduct(arg0,arg1,offset=2)
      ref=Data(numarray.array([[[0.037786919610577896, -0.22676664461417873, -0.042901438428941979, 0.017153799780396453, -0.57466885859963113], [0.060276475369921985, -0.3431968870366443, -0.29178151979957567, 0.59298461361278199, -0.2424731977445389], [-0.31542654412298649, 0.4013509801675168, -0.20943784327979212, 0.0065959724037531337, -0.11902990581068533], [-0.2159357745536524, 0.17469744661996087, 0.34186537121142935, 0.25784805112953124, -0.43537493510485747]], [[0.56328598960753129, -0.951058895183299, -0.37487812670095033, -0.67112282043435523, 0.41957197873410912], [0.98264910883568879, -2.1443740569054581, -0.38482894812234758, 0.99290242695187247, -1.3003730805754545], [-0.21772709638387006, 0.51799994223893753, -1.9051548289292577, -1.7023145622261129, -1.2356327810538168], [1.4616828947425642, 0.6796769983771106, 2.0480781908804793, 1.0202679951501141, -1.8061095432151628]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[-0.09923916560393331, -0.18997351393986059, -0.43744364465714275, -0.27173403282883674, 1.278022789485225], [-0.77988894282937282, 0.68099133459917816, 1.179474980315631, -0.34218349040051826, 1.1692785198423581], [0.77512287685111358, -0.36227619123950838, 2.1009509145372691, 0.84680165801682317, 0.045072939020898539], [-0.63199139921208147, -0.040277178640907962, -1.0520307688350821, -1.2458392712783999, 0.4669780009356993]], [[-0.10303544431070753, 0.23840257433871809, -0.057727737788519085, 0.7932694505168163, 0.46523985418251568], [-0.84878023151948456, 1.2899102753741187, 0.41124468433560601, -0.82637896571487957, 1.3683314123624135], [0.21502004853635165, -1.3294214503023354, 1.87624912533059, 1.1199745784330561, 0.60998940998717588], [-0.7414125095409283, -0.4384451088961453, -1.4541354039915497, -1.2769942388618731, 1.2727404873446582]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2, 4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank1_array_rank3_offset0(self):
      arg0=Data(numarray.array([-0.83311341456946297, -0.087902077465133344]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([0.22567386234147424, 0.10822315590537102]))
      arg1=numarray.array([[[-0.95055770244811844, 0.84769991468351935], [0.52471753178340075, 0.72089590427809314]], [[0.40351672609990796, 0.90723921164520283], [-0.63650406096107015, 0.81064530299303006]], [[0.87304797219887376, 0.009866927165692152], [-0.043125487109962224, 0.88506943449331743]], [[-0.037679338943861884, 0.65333713035443575], [0.15620832356185099, -0.83278394131455369]], [[0.95626845775018232, -0.50156236437678148], [-0.95111422836207637, 0.40205779672591513]], [[-0.33205805140583577, -0.79889728111673386], [0.89453256979816098, 0.62209218232446495]]])
      res=generalTensorProduct(arg0,arg1,offset=0)
      ref=Data(numarray.array([[[[0.79192237323185555, -0.70623017045222924], [-0.43714921458852973, -0.60058804836226287]], [[-0.33617519751698505, -0.75583315744504265], [0.53028007161460677, -0.67535947638122018]], [[-0.72734797720154931, -0.0082202693823179816], [0.035928421821151989, -0.73736321870179133]], [[0.031391162726240915, -0.54430392753459833], [-0.13013924982678518, 0.69380347294718314]], [[-0.79668008008132862, 0.41785833400547362], [0.79238602243632938, -0.3349597438846022]], [[0.27664201704199809, 0.66557204176142226], [-0.74524708366814241, -0.5182733421933039]]], [[[0.083555996795673673, -0.074514583567697648], [-0.046123761126138058, -0.063368247622150292]], [[-0.035469958516111101, -0.079748211461443119], [0.055950029273471945, -0.071257406220439815]], [[-0.07674273048300298, -0.00086732339606150014], [0.0037908199086615088, -0.077799441992853352]], [[0.0033120921706783629, -0.05742969104326353], [-0.013731036158432439, 0.073203438521150965]], [[-0.084057984050620121, 0.04408837380704328], [0.083604916579673769, -0.035341715593262227]], [[0.029188592557597006, 0.070224730691407555], [-0.078631271245482748, -0.05468319520113897]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[-0.21451602808990472, 0.19130371385316799], [0.11841503203584532, 0.16268736306458698]], [[0.091063178098353001, 0.20474017695960711], [-0.14364232983311787, 0.18294145651541174]], [[0.19702410789551186, 0.0022267075629237632], [-0.0097322952414626365, 0.19973703772249138]], [[-0.0085032419499348356, 0.14744111361818074], [0.035252135708089626, -0.18793756853241095]], [[0.21580479629580851, -0.11318951597403012], [-0.21464162144240073, 0.090733935871640609]], [[-0.074936822982338766, -0.18029023504371586], [0.20187262001659537, 0.14038994551759859]]], [[[-0.102872354429094, 0.091740760027764226], [0.056786587248476447, 0.0780176298402315]], [[0.043669853559135233, 0.098184290645344674], [-0.068884478223791679, 0.087730593009771415]], [[0.094484006808146739, 0.0010678299969596424], [-0.0046671763149965101, 0.095785007396248859]], [[-0.0040777769729328827, 0.070706206117115811], [0.016905357754550841, -0.090126506316374297]], [[0.10349039039048667, -0.054280661956214928], [-0.10293258341984564, 0.043511963618038683]], [[-0.035936370266927468, -0.086459185006673309], [0.096809137763698552, 0.067324779235213059]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2, 6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank2_array_rank4_offset1(self):
      arg0=Data(numarray.array([[-0.90091246997379315, 0.37667130806863613, 0.7807787776153956], [-0.8972535149025036, -0.43973482545248443, 0.95549880415210775]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[-0.51584488902521497, 0.27592372325755732, 0.12325375139518724], [-0.75300972839127911, -0.89559569599416244, -0.12575542938344597]]))
      arg1=numarray.array([[[[0.80176435995966422, 0.21340944038201837], [0.24563832419658382, 0.52550873289381683]], [[-0.18541710884978557, 0.058624437221078241], [-0.71213792946296706, -0.2722027403726377]], [[-0.47495826700499943, 0.71486047200503933], [0.20107309552044894, 0.02239290140791006]], [[-0.55803164847622733, -0.94402344637200541], [-0.37973103993137891, 0.92490127550956136]], [[-0.368049024405114, -0.57904737476344303], [-0.3538550498192008, -0.72021445293428399]], [[-0.37204968708145802, 0.94162665055468175], [0.14553876744589966, 0.15594823716797568]]], [[[0.0080474410443462929, -0.090073152824652336], [-0.81229146588470202, -0.37574487769337139]], [[0.21824203012835897, 0.9848097358831025], [-0.063265701476284741, 0.37674762860482347]], [[0.49155569353620643, -0.85819750680831985], [0.57836889622209653, 0.16537700755570572]], [[-0.92196171199157351, -0.22300061181811603], [0.3515038031097979, -0.14996360804658404]], [[0.68173782828613128, 0.62684212138826223], [0.35990555473890562, 0.76629446442380678]], [[-0.51833038884400118, 0.52226027142585751], [0.061116795255682366, -0.8107145461171219]]], [[[-0.13659915138545919, 0.48063093684830638], [0.43513506824969972, 0.35096467473434934]], [[0.32264535394775096, 0.24193443152927419], [0.012600788153914744, 0.4152404490340933]], [[-0.4498228595338547, 0.55931571280165704], [0.28434298711594019, 0.27361461772734152]], [[-0.29502283481344738, -0.36680132185790604], [0.82716326618054725, 0.76248622959460355]], [[0.46401462613976574, 0.75993286865824805], [-0.48111408478915396, -0.50530432638326461]], [[-0.90754368064955004, 0.28471403114750471], [0.36927303799209255, -0.64672562210799511]]]])
      res=generalTensorProduct(arg0,arg1,offset=1)
      ref=Data(numarray.array([[[[-0.82594198816547848, 0.14907523700994599], [-0.18752129167435599, -0.34094391539974861]], [[0.50116474153187529, 0.50703135458865345], [0.62758199443535656, 0.71135179545439109]], [[0.26183860912451007, -0.53058325244906224], [0.25871467945948023, 0.25575121641006199]], [[-0.074886421627071875, 0.48009387492261296], [1.1203373502755694, -0.29440901471538328]], [[0.95066380778173554, 1.3511238987065575], [0.078714856014762136, 0.54296042570682401]], [[-0.5686468286461942, -0.42930405874480915], [0.18022380396708351, -0.95081826077330356]]], [[[-0.8534449559773386, 0.30736821703622513], [0.5525640335444405, 0.029059877514525934]], [[0.37868478147595003, -0.25448805965881549], [0.67882843051428099, 0.47532756534892373]], [[-0.21980138695996088, 0.27039375441419661], [-0.16305310317710026, 0.16862430098853598]], [[0.62422056465680775, 0.59461126612465187], [0.9765000584637058, -0.03537201882008012]], [[0.47381483626380166, 0.97002292870547069], [-0.30046925175298622, -0.17356909277183341]], [[-0.30540608905919742, -0.80248993494550946], [0.19537959226767604, -0.40137124305192995]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[-0.42820192523777073, -0.075699922780583434], [-0.29720973019739633, -0.33150020688130261]], [[0.19563187170658694, 0.27131057899032962], [0.35144929769913902, 0.29554794388745503]], [[0.32519431678290528, -0.53661641240177949], [0.090909510462215223, 0.0678042039957025]], [[-0.0028960056308494839, 0.38022887189369992], [0.39482152981912672, -0.42450482472515294]], [[0.43515539139028669, 0.56532381767394058], [0.22254168379030756, 0.52067711246075876]], [[-0.062957884418026411, -0.30653722404346345], [-0.01269756841985608, -0.38385183620748592]]], [[[-0.59376553155422496, -0.14047220658214213], [0.48779609560583354, -0.10333340633922139]], [[-0.096410141118186674, -0.956560700698594], [0.5913226612633834, -0.18466098402478262]], [[-0.026019300990655365, 0.1599641159239954], [-0.70515236563498773, -0.19938153252823643]], [[1.283008924453771, 0.95670448482460924], [-0.13288439765899723, -0.65803967953956033]], [[-0.39176932745790172, -0.22093448378758629], [0.0046291374807673133, -0.080416772080953894]], [[0.85850004441325434, -1.2125924148963583], [-0.21076613598120919, 0.68997117677086628]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2, 6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank1_Symbol_rank0_offset0(self):
      arg0=Data(numarray.array([0.64045108388251593, -0.028386065005646]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([0.71393120197350002, 0.59351102000768452]))
      arg1=Symbol(shape=())
      res=generalTensorProduct(arg0,arg1,offset=0)
      s1=numarray.array(-0.660436454206)
      sub=res.substitute({arg1:s1})
      ref=Data(numarray.array([-0.42297724293170491, 0.018747192121187497]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([-0.4715061915783465, -0.39197631358601204]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank2_Symbol_rank1_offset1(self):
      arg0=Data(numarray.array([[0.73915964914650201, 0.87274909690188052, -0.073070696590998852], [0.37419000139240643, -0.030002213211190121, 0.61165508785882228]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[-0.94686742039384697, 0.4088470303618339, -0.86840213291668844], [0.97031676461073091, 0.42420113497834189, 0.84818156493472308]]))
      arg1=Symbol(shape=(3,))
      res=generalTensorProduct(arg0,arg1,offset=1)
      s1=numarray.array([-0.48013461533817958, 0.14281733230641502, -0.68565667667599706])
      sub=res.substitute({arg1:s1})
      ref=Data(numarray.array([-0.18015102503711566, -0.60333180324929148]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([1.1084399873387352, -0.98686074510458854]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank3_Symbol_rank2_offset2(self):
      arg0=Data(numarray.array([[[-0.36111131275950248, -0.59930048636177236, -0.55221094797459225], [0.98971069438463877, -0.66577674607034143, 0.25075365505174352]], [[0.66277761616444564, 0.024434619376581646, -0.31843570022816947], [0.79087107046974148, 0.91073377094881369, -0.99263658938525001]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[0.85911222755371908, 0.017975828822864415, -0.25537617104559396], [0.34259148820254159, 0.015045492257800941, -0.989189263135829]], [[-0.77004268620649818, -0.22276914264091197, 0.1427153361950575], [0.42566770242849206, 0.19515608294232867, -0.12713785526364418]]]))
      arg1=Symbol(shape=(2, 3))
      res=generalTensorProduct(arg0,arg1,offset=2)
      s1=numarray.array([[-0.98272624735278824, -0.78218292431506375, 0.62259659269834078], [0.5688938955468954, 0.12828701809462317, 0.01661328606224699]])
      sub=res.substitute({arg1:s1})
      ref=Data(numarray.array([0.96162721869629764, -0.3184321952641222]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([-0.83693419229965926, 1.2849250326239461]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank4_Symbol_rank3_offset3(self):
      arg0=Data(numarray.array([[[[-0.074691846832166675, 0.72234131804534174, -0.20893910828751316], [0.95573964403028544, -0.38859503685460228, 0.080317535867016066], [0.82517655161552961, 0.98725132628127521, 0.66165071951719279], [-0.59262175373552406, -0.11057628774190542, -0.046354292486604054]], [[0.68586710056855704, -0.3232843160026484, -0.38919594943414593], [-0.30836508681812158, 0.60180401294964292, 0.7095162818304015], [0.3789929174961737, -0.22555385807965478, -0.30041252122217732], [-0.032086168629253287, 0.4219545032551959, -0.1139830378246689]]], [[[0.15900262950887289, -0.36529414661767379, 0.78905934537665945], [0.23974637625155215, -0.71595938628559463, 0.80087361570737059], [-0.21265695579693067, -0.84240674877727928, 0.87131115362391154], [0.71249274567460574, 0.71144779223941668, -0.1953544475768958]], [[0.37218094609561536, -0.41563320793115843, 0.87426240156993029], [-0.72981898298333103, 0.47519477088926521, 0.29007886475546374], [-0.8618788441471128, -0.2203546700715342, 0.09408651274358415], [0.80889313545356201, -0.50731625924987123, -0.92849497184795737]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[-0.29635687201846062, -0.95049076764549767, -0.15378057773882725], [0.32168461527085435, -0.79857081331970958, 0.63339419208160908], [-0.80918368195344703, 0.046151264160575911, -0.86210669794298056], [0.094278533865382208, 0.59378660344129286, 0.87740836473213446]], [[-0.28068453806630678, 0.0062331434774685057, -0.35540542837144473], [0.79460661821345435, 0.41180546572059762, 0.75261463659096517], [0.84737031018653286, 0.16813172953605271, -0.18824957277302379], [-0.82880572505980288, 0.85212697085667211, 0.3345149196988253]]], [[[-0.56242006202966466, -0.47893292813888766, 0.33605368299694005], [-0.89377978983664064, 0.67723252771235898, -0.013124817088508101], [0.27456154631734364, 0.58204229627509885, -0.89006473804976549], [-0.52797842678213636, -0.0024613278752259049, -0.77252562556095805]], [[0.40866255973244625, 0.34143254521903077, 0.93384511828366223], [0.32613276199002406, 0.76034783814575801, 0.92411931565003003], [-0.26850689211007395, -0.24388737954938255, 0.072349238996541443], [0.64407392966046317, -0.97014738947103973, -0.72347861804663238]]]]))
      arg1=Symbol(shape=(2, 4, 3))
      res=generalTensorProduct(arg0,arg1,offset=3)
      s1=numarray.array([[[-0.64927095951370251, 0.77115417921474294, 0.37163383195025301], [-0.61563561245166132, -0.34604613413264085, -0.75696754568344327], [0.46715421746209507, 0.19545243093963638, -0.33899137681980918], [-0.9398447004673558, 0.71852022187600828, -0.36573550143882283]], [[0.40985387439916088, -0.80421081744294565, -0.30200190544193872], [-0.88134718865783102, -0.49386249136067395, -0.22923044713274376], [0.78659251144094733, -0.83221325635328558, -0.91230969662168859], [0.9497040256926923, 0.91874696360344488, -0.4894235380926335]]])
      sub=res.substitute({arg1:s1})
      ref=Data(numarray.array([2.5052273126479978, -0.5031699464567565]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([-1.6170074423492335, 0.50359094502031287]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank1_Symbol_rank1_offset0(self):
      arg0=Data(numarray.array([0.087081760160740984, -0.83350232377817468]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([-0.69572219495902043, -0.078975352905566787]))
      arg1=Symbol(shape=(2,))
      res=generalTensorProduct(arg0,arg1,offset=0)
      s1=numarray.array([0.17073917141721551, -0.67760758053450254])
      sub=res.substitute({arg1:s1})
      ref=Data(numarray.array([[0.014868267575397604, -0.059007260811205532], [-0.14231149613620922, 0.56478749298521447]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[-0.11878703110386962, 0.47142663325033529], [-0.013484186317478657, 0.053514297804199605]]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2, 2),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank2_Symbol_rank2_offset1(self):
      arg0=Data(numarray.array([[0.72212653353068523, -0.2282328186713336, 0.81167114764341064], [0.10774112937672875, -0.36414293359801841, 0.53289624608226993]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[0.93887659401843448, -0.71478957586318481, 0.80657525284562781], [0.47956619724935634, -0.20861505466605257, -0.64334004566026071]]))
      arg1=Symbol(shape=(3, 2))
      res=generalTensorProduct(arg0,arg1,offset=1)
      s1=numarray.array([[-0.21644657695949765, -0.79552319984147957], [0.217863416881239, 0.51043947328699901], [-0.78879838602700358, 0.019315972320360641]])
      sub=res.substitute({arg1:s1})
      ref=Data(numarray.array([[-0.84627028928032577, -0.67528923297305332], [-0.52300132122770915, -0.26129008608431603]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[-0.99516838196528068, -1.0961751416862022], [0.35821553924083332, -0.50041813290964965]]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2, 2),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank3_Symbol_rank3_offset2(self):
      arg0=Data(numarray.array([[[0.85389410819700662, 0.57371714869703938, 0.92241092350784681], [-0.0025082364046036254, -0.35761519538119768, -0.07447031366276935]], [[-0.18127456560125199, 0.42038231273630444, 0.44733825403811966], [0.78543630872800763, -0.43006693297121834, -0.7001869633067217]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[0.3008350540575786, -0.75527826198900394, 0.84796593958177491], [-0.13024209082837168, 0.9433611389874248, 0.73549898098353683]], [[-0.26632247497889017, 0.67266465120660146, -0.64717547166964184], [-0.2086068461150663, 0.4882272677271049, 0.5461368644773601]]]))
      arg1=Symbol(shape=(2, 3, 2))
      res=generalTensorProduct(arg0,arg1,offset=2)
      s1=numarray.array([[[-0.065419873283915519, -0.58313668899237792], [0.86264685052942291, 0.76806929358574405], [0.43097638635482283, -0.58898213619904749]], [[-0.37768041659495233, -0.67475046315630194], [0.58922372853722127, -0.32348489389573865], [0.14297706459352688, -0.26922512062571791]]])
      sub=res.substitute({arg1:s1})
      ref=Data(numarray.array([[0.61617537972898939, -0.46314118767933077], [-0.082867569320211332, -0.037229081761295274]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[0.40443443140507174, -1.6702677577386549], [0.76332433663225308, 0.88891991845435148]]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2, 2),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank4_Symbol_rank4_offset3(self):
      arg0=Data(numarray.array([[[[0.55699071161960578, -0.92894779608458999, 0.32866148377813986], [-0.6635864645627283, -0.77616400040972988, 0.35573568027049474], [0.95237404104627155, 0.50521467316187141, -0.18499955872554064], [0.61760796166505938, 0.47399756772568802, 0.28184009360996432]], [[-0.046440438958905483, 0.69567069914878199, -0.532510625151289], [-0.13834032908456972, -0.6494072526873238, 0.75939066110526166], [0.019708639413858142, 0.1914963308892772, -0.54017814789405882], [0.918275251885591, -0.64644314474305387, 0.22709512606112003]]], [[[0.31559361556771304, 0.152671958979401, -0.69526613214847299], [-0.3492833034691416, -0.99825688318119088, 0.79900183909771494], [0.93748480044365867, -0.27440023106402989, -0.9143630949393462], [-0.57056457514426162, 0.94197826481839364, 0.0079522946585508514]], [[-0.62998414929931412, -0.76161533329429854, -0.28108646080643096], [-0.1834774172510687, 0.037981961996830904, -0.87668646740100886], [-0.99341418292948669, -0.63528760890844516, 0.57794995939408378], [-0.39083917774753374, -0.78554318866607709, -0.30803476607480373]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[-0.71085724281184448, 0.38406797677208249, 0.46307944238624277], [0.55393823108751672, -0.66985335508794441, 0.36504303853421738], [0.022051125021868678, 0.039596160274531167, 0.70202529541464642], [0.96158949819841122, 0.29736573123386822, -0.17055398579196157]], [[-0.68949126523618776, 0.80927810946483647, -0.89839871263223015], [0.865544951381926, -0.14043793944950722, 0.46036215088030863], [-0.68818246271410444, -0.071521019322227097, 0.72026221195591345], [0.035045358431965656, -0.89463766051354066, -0.45770847918409352]]], [[[-0.1983521935626047, -0.51029513728947906, 0.87864252319980007], [-0.043825585101327391, -0.20061690356026629, 0.49777788507667298], [-0.45928111401914773, -0.73417546679362866, 0.77502536089485652], [0.23871159783838003, 0.82612059482049283, 0.9757312111439691]], [[0.68406983750818173, -0.93854299741322, -0.69775872973539665], [-0.024062022973773134, -0.26797111361088999, -0.88565723737578561], [-0.88604869325775915, 0.50483961856612303, 0.203938633021435], [0.63349337209303225, -0.27793371421598811, -0.079843353910972859]]]]))
      arg1=Symbol(shape=(2, 4, 3, 2))
      res=generalTensorProduct(arg0,arg1,offset=3)
      s1=numarray.array([[[[-0.80659783933903584, -0.57939232651035155], [0.67768916384259725, 0.25132497059489145], [-0.99948477233738342, -0.087213611292808579]], [[-0.63276865333054411, -0.42508129371379022], [0.63892999034062514, 0.31353812206279064], [-0.73597933905433677, 0.047653035145244882]], [[-0.87852565538622018, 0.59852139356117418], [-0.63540100722217852, -0.75269202969050841], [0.38356176362374828, -0.8206071061694995]], [[0.51062141401454308, -0.36856075245433706], [-0.48695005387731793, 0.78450519394575569], [-0.082198804550901228, -0.022971649073969536]]], [[[-0.08858502197149809, -0.39220942670196113], [0.45362202084128755, -0.33727318458677802], [0.012483608388297096, 0.22979471856523914]], [[0.28041787034066856, -0.10968579019564539], [-0.13317491358755751, 0.13616229612867325], [0.74541513891738087, -0.17109954103262925]], [[-0.022967826235055222, 0.44797981305598422], [0.0655282302319391, 0.51057999954235256], [-0.78848990853783674, -0.91413241761456887]], [[-0.20438981637592568, -0.40880505981629622], [-0.17239281557689301, 0.83205320734705812], [-0.054772735415579143, 0.58702179559214551]]]])
      sub=res.substitute({arg1:s1})
      ref=Data(numarray.array([[-1.6362743066148926, -0.77139458054475551], [-3.4572263964823682, 0.8990657391974417]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[0.54549266779679262, -3.1024075280795849], [-2.0350194195482598, -0.78818342707838163]]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2, 2),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank1_Symbol_rank2_offset0(self):
      arg0=Data(numarray.array([0.42262129721795882, 0.7065984571014583]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([-0.75931029039362929, 0.11721379875155713]))
      arg1=Symbol(shape=(4, 5))
      res=generalTensorProduct(arg0,arg1,offset=0)
      s1=numarray.array([[-0.44633115102246035, 0.46809480058405573, 0.57870600509127601, 0.57501132234774488, 0.3357003245187089], [-0.26935393022981668, 0.37269899671579276, 0.67636568592602409, 0.63693108581513846, 0.84959864106343486], [0.75646529785067229, 0.49257789619196002, -0.17159239115210001, 0.33365597103605005, -0.72823551467774572], [0.57865361814090077, -0.77172492945600157, 0.14134931485557667, -0.089845515219547867, 0.59371228403260567]])
      sub=res.substitute({arg1:s1})
      ref=Data(numarray.array([[[-0.18862905003389688, 0.19782683184381539, 0.24457348257949776, 0.24301203096561783, 0.14187410662458649], [-0.11383470740448071, 0.15751053346386013, 0.2858465435797708, 0.26918064172563688, 0.35905847980084382], [0.31969834547802073, 0.2081739094695392, -0.072518598941431908, 0.14101011930377316, -0.30776783789329681], [0.24455134273857287, -0.32614739078213317, 0.059737230805133511, -0.037970628191301183, 0.25091545565209705]], [[-0.31537690266878843, 0.33075506386990855, 0.40891277031284429, 0.40630211318678583, 0.23720533135337857], [-0.19032507151460232, 0.26334853604264064, 0.47791895011169816, 0.4500545225169334, 0.60032508893091874], [0.53451721231208016, 0.34805478145152124, -0.1212469188384238, 0.23576079433676181, -0.51457009107778151], [0.40887575377453689, -0.54529964446034251, 0.099877207789298719, -0.063484702431618106, 0.41951618385962197]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[0.33890383589458717, -0.35542919896322733, -0.43941742477839391, -0.43661201415149092, -0.25490071089553645], [0.20452321098146747, -0.28299418342568289, -0.51357142539277556, -0.48362832773102243, -0.64510899086390949], [-0.57439188498369731, -0.37401946539900016, 0.13029186835503828, -0.25334841225895155, 0.55295672012491315], [-0.43937764682789165, 0.58597868028923961, -0.10732798930992846, 0.068220624251920131, -0.45081184679906272]], [[-0.052316169712497522, 0.054867169752309777, 0.067832329217086429, 0.067399261417535314, 0.039348710278968364], [-0.031571997370898691, 0.043685465195952185, 0.07927939139259188, 0.074657112111346402, 0.09958468413320587], [0.088668171184805425, 0.057736926393709802, -0.020112996003800721, 0.039109083841274948, -0.08535925106117391], [0.067826188743627933, -0.090456810572815391, 0.016568090145152047, -0.010531134139674048, 0.069591272176925165]]]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2, 4, 5),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank2_Symbol_rank3_offset1(self):
      arg0=Data(numarray.array([[0.63952359765439826, 0.65200016195662758, -0.57002358093150174], [0.41832820138502136, 0.54637391209171904, 0.13726906865912425]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[-0.89506621105182083, -0.48412102845630556, -0.57327914333469998], [0.17977101689203634, -0.23462961258516635, 0.6827734888168111]]))
      arg1=Symbol(shape=(3, 4, 5))
      res=generalTensorProduct(arg0,arg1,offset=1)
      s1=numarray.array([[[-0.46679631533501609, 0.18090645791059035, 0.62099953676960529, 0.40328672612911687, -0.99766814527647441], [0.94676474297274948, -0.037607211611909275, -0.54195676068447196, 0.57750309557523316, -0.94239574255365444], [0.73842247433542574, 0.95360764336400394, 0.93137511775054471, 0.090741924699019316, 0.26415956277605268], [-0.24368207469501035, 0.009214632094483477, -0.51189994473884348, 0.81079962286602481, -0.068947596860016391]], [[-0.97368926250707433, -0.12063298433210101, 0.77769316205075101, 0.17675815504263492, -0.53981905341880743], [-0.9330912805213345, -0.73494376157577213, -0.23940244023742907, 0.96289698653930222, -0.31945343047177399], [0.7821273921784575, 0.42990663353557546, 0.17822025681129561, 0.71873438061975237, 0.49323710277824917], [-0.19201811086070752, -0.53609393848105547, 0.68441844027258369, 0.61270724915923935, 0.73649192592930568]], [[-0.77721717228950493, 0.99326130279818114, -0.494160604564857, 0.51811614105281367, -0.49981395074926094], [0.6029895515632453, 0.66813118985572295, 0.62097859208189332, 0.0025367617430724909, 0.89413488635094063], [-0.73431769946091463, 0.026583068469737015, 0.99587304852084468, -0.58877966803751103, -0.1153601673426965], [0.94398909328420255, 0.2320710901670866, 0.11669484481400283, -0.87918635819620161, 0.8959804224922312]]])
      sub=res.substitute({arg1:s1})
      ref=Data(numarray.array([[[-0.49034070009498859, -0.52914114114165434, 1.1858831228755999, 0.077819305633973601, -0.70508869378312267], [-0.34661553490831409, -0.88408468421779918, -0.8566570079139959, 0.99568983449724235, -1.3206459738508427], [1.4007641883350159, 0.87500080964503713, 0.14416488110351056, 0.86226482946387928, 0.55628496052133147], [-0.81913231978677037, -0.47592635389320892, 0.052350026288230378, 1.4191676736810581, -0.074630729081428426]], [[-0.83396035191100204, 0.146111611550098, 0.61685990867776075, 0.33640357558838541, -0.78090476435290868], [-0.030986527060301181, -0.32557250919866654, -0.27227789177007999, 0.76803584366495692, -0.44603467340832947], [0.63543784186474328, 0.63745977252542863, 0.62369794262450551, 0.34983638476665102, 0.36416189747700445], [-0.077272266780866627, -0.25719681953609802, 0.17582479021269107, 0.55326251203988719, 0.49654764874200641]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[1.3347594511767955, -0.67293828217187701, -0.6490413478220538, -0.7435658392217992, 1.4408497155134021], [-0.74136935444042251, 0.0064369979616216155, 0.24499286462456621, -0.98451645964701873, 0.48557182822982015], [-0.61861230206174223, -1.0769083404628443, -1.4908358198583009, -0.091639354551007801, -0.40909317452771288], [-0.23009766210463545, 0.11824512724785682, 0.059944264109262055, -0.51832460770826982, -0.80848545339904621]], [[-0.38612339414130215, 0.7389982932980016, -0.40823188712211722, 0.38478253265530188, -0.39395399653978436], [0.80083698609797749, 0.62186114686158045, 0.3827305036213956, -0.1203737944956675, 0.51602938950365318], [-0.55213594547272815, 0.088712403291858671, 0.80557421797270279, -0.55432674928894399, -0.14700466104254784], [0.64577688722097326, 0.28589202476387976, -0.17293346077938621, -0.59828612890581767, 0.42655408412389778]]]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2, 4, 5),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank3_Symbol_rank4_offset2(self):
      arg0=Data(numarray.array([[[0.21461752226782416, 0.13424116609072856, 0.60179607433341009], [-0.59191277174633572, -0.3791813175790788, -0.77533981785919104]], [[-0.89261694113437473, 0.70510128539040751, -0.65166175711223739], [0.41931546474450099, 0.36542379776400891, 0.98866648927270062]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[-0.5965939778629068, -0.036609932614130924, 0.21081301632926808], [-0.62112253260661543, -0.84921566038182528, 0.10769550684690832]], [[0.86576730082030062, 0.33186401449630698, 0.3151930777341263], [0.5763848373537177, -0.45942030652628651, -0.33588304070002906]]]))
      arg1=Symbol(shape=(2, 3, 4, 5))
      res=generalTensorProduct(arg0,arg1,offset=2)
      s1=numarray.array([[[[0.83972745548465855, -0.6200296141420869, -0.6430833232814841, -0.93143774376589894, -0.13042835475558401], [-0.41493128449607175, 0.96082879133724863, 0.20704257617860966, 0.6085021144138123, 0.3854051452014382], [-0.68075390534058, -0.19963307132397135, 0.50390159271013246, -0.90519744272274516, -0.39861565692273748], [-0.67151305510495352, 0.73101340302352558, 0.32746067603743656, -0.56724031213806225, -0.78518807218985232]], [[0.8696626692995526, -0.34281985361802803, -0.12621974525253021, -0.076647968850353632, -0.72876624079469421], [0.044095812038169147, -0.72541678351554251, -0.50118350430340985, 0.24191090099387758, 0.42958157161282329], [0.48079285195728283, -0.29571333604324379, 0.57705685428521547, -0.43034189045933369, 0.39175535371575321], [-0.45918101237730768, -0.78296716632933827, 0.49476212003748721, 0.2785080674539937, -0.54572251057345489]], [[-0.62117899915415364, -0.0077885684665226496, 0.73701481727800777, -0.068055154284626385, 0.98959974536986239], [-0.73811089526441287, -0.54334828604825169, -0.52499990780930594, -0.22490796714578631, 0.45460744574776268], [0.71640105796142195, 0.47870126437270111, 0.05299208396385402, 0.60930587769041922, 0.45420892488634657], [0.87521013209650533, 0.30998531346615632, 0.9990021634940196, 0.86014004410296874, -0.8663501268768603]]], [[[-0.45154454481376738, -0.39747070243541049, 0.22241768237091319, -0.60219997112073131, -0.58345191486815118], [0.6688510036893367, -0.81787687928540187, -0.28732653553078813, -0.20327735855119888, -0.6511940864125938], [0.127865233013013, -0.84485406049876599, -0.24058747051168994, 0.025037265440171153, 0.44778509743856887], [-0.031187346509117919, -0.51788095742309714, -0.73341895167625548, 0.42290886583434872, -0.53522443191927227]], [[0.70972194706268743, 0.8262940415350517, 0.94883596748074339, 0.065962984976235761, -0.4237628294913256], [-0.73885603580312376, 0.28331858158201384, -0.21151579484248217, 0.17391051783767653, -0.85686930440440934], [-0.3330462461047905, 0.56199850372380089, 0.82389329919495058, 0.91372159338346837, -0.11527167286225537], [0.96171616217410638, -0.71198397104083799, 0.29882731666476881, -0.46418721138135877, 0.021116134766302253]], [[0.085127588099541684, -0.68012920740502048, -0.46509356670240609, -0.89707517444951002, -0.3634757603563552], [-0.11247942345659845, 0.84567359195446601, 0.30407109581856173, 0.3459051039476686, 0.10338147693361699], [0.42181313324999037, 0.83428387466264753, -0.5500099808884511, 0.61904918810182874, 0.76885462233514867], [0.93953391508019002, 0.87715522379100563, -0.90179258248726213, -0.22474239240996985, 0.42825014872383305]]]])
      sub=res.substitute({arg1:s1})
      ref=Data(numarray.array([[[-0.14469945500685205, 0.26550709122321137, 0.15774461064384945, 0.77582852674321268, 1.257567419590778], [-0.55585556078131826, -0.49715671718828996, -0.32427072111351846, -0.18609426903752657, 1.0441663576252485], [0.073119153011372784, -0.15433404838364762, 0.47394781260183516, -0.72662246386289986, -0.57708351741467145], [-0.75372410827832526, 0.13474780635666495, 1.7578978286327991, 0.53321412437655247, -0.78637970921059996]], [[0.42261638360522802, -0.22033733096636676, -0.015087013774634672, -0.29359400985430473, -1.8011755002500964], [0.78172470479651091, -0.41839299482202352, -0.093220943752851615, 0.094274798825511541, -0.82133731490526296], [0.82875430944602424, 0.3336724650189915, -0.42102874870183737, 1.0639259282859643, 1.2418287097380569], [0.97253616763306994, -1.0167090825211067, -1.6843584476299847, -0.072303761969817332, 1.0873348053133254]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[-0.97684189515630582, -0.14725607650875494, -0.45035063327434749, 0.76556151906674452, 0.99622981710748115], [0.29022393513845024, -0.30273367382849048, 0.17498572768660153, -0.40347352770800998, 0.99345169875894979], [0.78839404399388968, 0.36819097890541136, -0.92004164395930288, -0.040589339315108913, 0.22178600105264373], [-0.09421276240515318, 0.67865626658874101, 0.10178357464368717, 0.6168577873882154, 0.66640787541264024]], [[0.20490998005702549, -1.0332943229681493, -0.51784562572584836, -0.92938688733805841, -0.062379149905045006], [0.18549340440352105, -0.46576675443776133, -0.32311874555713271, 0.22296565275517349, 0.60312363325374752], [-0.11898405860399577, -1.1454654750461826, 0.31202340677037366, -1.3477356171844694, -0.01912592857442158], [-1.2332808800326334, 0.20473369783771178, 0.50545498966074232, 0.40494132608647959, -1.5960017743217936]]]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2, 4, 5),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank1_Symbol_rank3_offset0(self):
      arg0=Data(numarray.array([0.97867306653674957, 0.17192767633185735]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([0.69040823137858931, 0.94277490095010208]))
      arg1=Symbol(shape=(6, 2, 2))
      res=generalTensorProduct(arg0,arg1,offset=0)
      s1=numarray.array([[[-0.60188886833698674, -0.54211173198822582], [0.34608876781103737, 0.83333271482831295]], [[-0.84229171481397835, -0.65967151517254563], [-0.21533049767843671, -0.36528600148024948]], [[-0.19576013909194234, -0.25766709706314583], [0.38183989785199679, -0.37230188409186704]], [[-0.70203195533833074, 0.35719508946993628], [-0.10065587434565293, -0.3177798411355508]], [[0.93186915985923546, -0.26798562959235817], [-0.53164992967537628, 0.015334064243256673]], [[-0.96527792149997249, -0.038962622135602087], [0.30949438967262943, -0.024678787980630279]]])
      sub=res.substitute({arg1:s1})
      ref=Data(numarray.array([[[[-0.58905242448969275, -0.53055015115046544], [0.33870775568755307, 0.81556028346641962]], [[-0.82432821545549351, -0.64560274466085921], [-0.21073815848184008, -0.3574955712316234]], [[-0.19158517563077185, -0.25217184802841125], [0.37369642375689294, -0.36436182658159699]], [[-0.68705976653775458, 0.34957721356341115], [-0.098509193210797888, -0.31100257160769063]], [[0.91199524829046252, -0.26227031790093469], [-0.52031146699944775, 0.015007035675419531]], [[-0.94469150349459785, -0.038131668885762332], [0.30289382341683196, -0.024152465111413713]]], [[[-0.10348135454318935, -0.093204010392974282], [0.059502237654307365, 0.14327295727175016]], [[-0.14481325732154277, -0.11341579074593135], [-0.037021272109236024, -0.062802773431054698]], [[-0.033656585832478839, -0.044300105265241807], [0.065648846368487571, -0.06400899782588719]], [[-0.12069872279202946, 0.061411721729716033], [-0.01730553058539952, -0.054635149671542024]], [[0.16021409929991848, -0.04607414658614397], [-0.09140533703108282, 0.0026363500340665404]], [[-0.16595799005793527, -0.0066987530875702566], [0.053210651254161564, -0.0042429666721963341]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[-0.41554902907499963, -0.37427840209157481], [0.23894253408441357, 0.57533976579453383]], [[-0.58152513312955789, -0.45544264408111146], [-0.1486659480640409, -0.25219646222933578]], [[-0.13515441140489456, -0.17789548476782183], [0.26362540854577832, -0.25704028533478246]], [[-0.48468864065638972, 0.24661042997805568], [-0.069493644184847755, -0.21939781808616471]], [[0.64337013853466662, -0.18501948456173775], [-0.3670554876597279, 0.010586764174032506]], [[-0.66643582257159673, -0.026900115038513313], [0.21367747419547603, -0.017038438362274137]]], [[[-0.56744571822937173, -0.51108933442908788], [0.32628380379299365, 0.78564516768074244]], [[-0.79409148800484008, -0.62192174737640049], [-0.20300818862032435, -0.34438247386400106]], [[-0.18455774574238415, -0.24292207191180765], [0.35998907187621337, -0.35099687189824635]], [[-0.66185810715790128, 0.336754565094882], [-0.094895831966268857, -0.29959485825050808]], [[0.87854285488474559, -0.25265012539498621], [-0.50122620978983157, 0.014456570898098813]], [[-0.91003979683145697, -0.036732982224648512], [0.29178354256822553, -0.02326654189400728]]]]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2, 6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank2_Symbol_rank4_offset1(self):
      arg0=Data(numarray.array([[0.020699126983031668, 0.74166180813924276, 0.30679424884685336], [0.74214545042415403, 0.86898099754335179, -0.67886534167680646]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[-0.21266737658746382, 0.49226826323587214, 0.92910872044758941], [-0.89988632026534798, 0.20444936967135052, -0.054406623437080803]]))
      arg1=Symbol(shape=(3, 6, 2, 2))
      res=generalTensorProduct(arg0,arg1,offset=1)
      s1=numarray.array([[[[0.56534269937600112, 0.16793967503850782], [-0.85695911645349332, -0.20319968562559776]], [[0.36722379279052797, -0.068195390888972973], [-0.63611184739719939, 0.79768698718220077]], [[0.74139589010827711, -0.84041255128380543], [-0.62081618228890023, 0.88634539891050657]], [[-0.15569706334023148, -0.69963338101133066], [-0.26013161834600029, -0.52559405858643471]], [[0.040109120032360224, -0.79158274802155759], [0.12799946299515486, 0.45669313705946912]], [[-0.91196960462190058, 0.34472353594370464], [0.057959366222045672, 0.030143641550053557]]], [[[0.15609831412317976, 0.51007711631385932], [0.59331471480087727, -0.33484994748403785]], [[0.00048600296015899325, -0.66576084834021554], [-0.5047494709033904, 0.38264784563339216]], [[0.41081757326911172, -0.79137980357073467], [-0.29591547520747352, -0.90829448559284254]], [[-0.3152963307130987, 0.57617009123209884], [0.27990420838638586, 0.83643398044110606]], [[-0.15434241154847017, 0.47485437537923625], [0.82951800735126047, -0.17993264296563716]], [[-0.59038827689636242, 0.89649565608593651], [0.79978186365218784, -0.17367838061190222]]], [[[0.96285348543809302, -0.3194475293194734], [0.33412229984349961, -0.19930737693606559]], [[0.68904214124190855, 0.12435219404453579], [-0.38712853802159231, 0.2464771643590089]], [[-0.87381066657039974, -0.19940558263919961], [-0.6690902344570071, -0.0024644235046502594]], [[-0.85909974428088143, 0.07975142792113421], [-0.56461650349950454, 0.65045651105207503]], [[-0.97551025729924334, -0.73291194240633684], [0.87624101151015332, 0.77195203124954714]], [[-0.0031507420036236411, 0.84535209262774913], [-0.59622862329213855, -0.90885046054250007]]]])
      sub=res.substitute({arg1:s1})
      ref=Data(numarray.array([[[[0.42287217003795313, 0.28377625623134789], [0.52480735860756988, -0.31369783059875528]], [[0.21935582789849295, -0.45703044165963724], [-0.50628917418173502, 0.37592449381086834]], [[0.051953864795360238, -0.66550846809996933], [-0.43759259528007943, -0.65605682550276623]], [[-0.50063290075248679, 0.43730883088735795], [0.028988667819517699, 0.80902811687861353]], [[-0.41292058488340405, 0.11094311398627932], [0.88669700528955853, 0.11283442348411325]], [[-0.45771204112421393, 0.93138122579505678], [0.41144785877063594, -0.4070167690913965]]], [[[-0.098434879382629403, 0.78474484327326921], [-0.34723314599574512, -0.30647909306426369]], [[-0.19481103419978596, -0.71356281990244108], [-0.64789706500497157, 0.75718867060803152]], [[1.5004160281569079, -1.1760328235665682], [-0.26365865944243427, -0.12982043114325867]], [[0.19367665424851643, -0.07268935041380846], [0.4334745167177822, -0.10479438626829035]], [[0.55788628233257653, 0.3227184099271152], [0.22097995095679013, -0.34147679311860007]], [[-1.1877113572437341, 0.46099245617464635], [1.1427684697134273, 0.48843483242905128]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[0.8512078670721841, -0.081421999167364922], [0.78475319382678976, -0.30680027998803039]], [[0.5623377853836018, -0.19769329377359524], [-0.4728764082186574, 0.24772747429605049]], [[-0.76730337599277298, -0.39611229466701969], [-0.63530001981490303, -0.63791101703522157]], [[-0.92029575526750218, 0.50651719300164966], [-0.33148064973414354, 1.1278714291431422]], [[-0.99086285915391403, -0.27885531197837743], [1.1952472438098027, 0.53152850298511345]], [[-0.099610610231592525, 1.1534289106918858], [-0.17258005065668952, -0.93632781242752716]]], [[[-0.52921556650841506, -0.029461609847222008], [0.87429013923143772, 0.12524039808429119]], [[-0.36784876092011826, -0.081511869423841588], [0.49029499505320095, -0.65300548704021533]], [[-0.53563953761320571, 0.60532764071482548], [0.53456719789050433, -0.98317625360351091]], [[0.12238823761336133, 0.74304911484150304], [0.32203400128326581, 0.60859416094855168]], [[-0.014574637961752956, 0.84929342809766029], [0.0067361532299897234, -0.48975832551219234]], [[0.70013588185796893, -0.17291677544471243], [0.14379684329366391, -0.013186801348166396]]]]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2, 6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank1_constData_rank0_offset0(self):
      arg0=Data(numarray.array([0.70844157374625727, 0.86474845294774938]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([0.21095325333505444, 0.36926918936950703]))
      arg1=Data(0.200534942078,self.functionspace)
      res=generalTensorProduct(arg0,arg1,offset=0)
      ref=Data(numarray.array([0.14206728995709406, 0.17341228092421143]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([0.042303498438782616, 0.07405137550152982]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank2_constData_rank1_offset1(self):
      arg0=Data(numarray.array([[-0.012135397652110802, 0.5807851567780693, 0.70833361405277095], [0.54262672639813236, 0.38024405511863524, 0.57888303898211602]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[0.041742362298368363, 0.010757589039660065, 0.063864527647006231], [0.4096629678939574, 0.068461072004757373, -0.38428420149408971]]))
      arg1=Data(numarray.array([-0.89632142754270228, -0.81199226897254495, 0.86608352248104126]),self.functionspace)
      res=generalTensorProduct(arg0,arg1,offset=1)
      ref=Data(numarray.array([0.15276023126008881, -0.29376213360093839]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([0.0091623621688410387, -0.75560177225134328]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank3_constData_rank2_offset2(self):
      arg0=Data(numarray.array([[[-0.21185854961742745, 0.97766454831202343, -0.18567280808114162], [-0.14288508748191675, -0.28949427470342237, 0.97637021085074749]], [[0.4785368235547196, -0.92491596391239517, 0.19624718020963661], [-0.84691143577468475, -0.32917204079992946, 0.63020479102858173]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[-0.17675241844753309, -0.28188772781419402, 0.65854104646334077], [-0.24469764934464866, -0.87547649739572919, 0.8793316850047399]], [[-0.14541052344909366, 0.093216092620560076, 0.83491243479100152], [-0.40859705998966223, 0.29311105405506632, 0.86867292910959604]]]))
      arg1=Data(numarray.array([[-0.54932536472085003, 0.27800712167963959, -0.80702124025717992], [0.58181801364525865, -0.022500020091351436, -0.92486420374510425]]),self.functionspace)
      res=generalTensorProduct(arg0,arg1,offset=2)
      ref=Data(numarray.array([-0.44161046645806529, -1.7465770868395136]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([-1.4486624813787681, -1.6157282735251761]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank4_constData_rank3_offset3(self):
      arg0=Data(numarray.array([[[[-0.48497137340587892, -0.24606818413589759, -0.79319909017815826], [-0.080857930477590267, 0.91464051153117976, -0.50532286789541225], [0.17782259272604217, 0.28723119365220984, 0.90444040413700755], [-0.17251110342238074, -0.73330016008043075, 0.35978538321121567]], [[0.90838090194856913, -0.61841331771036856, -0.78265998017045946], [0.2874087763553701, -0.71624312240386279, 0.028221323742884996], [-0.64893351462912485, 0.90309647318108954, -0.20382346155838471], [0.041437432759702908, -0.029493427910624703, -0.098488742637401705]]], [[[-0.43726333391939987, 0.2782924438174077, -0.31220476424360655], [0.063027213624232026, -0.23313417677134174, 0.91922097374022704], [-0.69728602541178275, -0.11076248382335097, -0.98931691654725484], [-0.15301954009275853, -0.58005395621514788, -0.23235358116516225]], [[0.41347555322179819, -0.5276991001267497, -0.80240147461897204], [0.32539616972068663, 0.32669496396733666, 0.86599869861005185], [0.422561860972134, -0.088609135803723982, -0.63417822640966515], [0.28273871462417155, -0.38930656340971059, -0.20602530281410414]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[0.068033629971941512, -0.51993118748732048, -0.97833112666322108], [0.71742083057318595, -0.2645193282064997, -0.14475102221669811], [0.62476718617519378, 0.81909914932279237, 0.52951938143675958], [0.39252949131354953, -0.29807668214216188, -0.57808277562001598]], [[0.05539110287839355, 0.6953760509841731, 0.7434234330920555], [0.16353710572718216, 0.74226716423129413, 0.85030354892233939], [-0.70151798178039626, -0.9041236534532493, 0.47526701679633909], [-0.26191490760388314, -0.15212738987965624, -0.98277214864833717]]], [[[-0.17322763057020252, 0.24971279936882107, -0.64043603839434393], [0.42660923080127677, -0.49520542802842926, 0.1115388041531673], [-0.37129666662523131, 0.28778202474385561, -0.1446442148077709], [-0.16231561942838901, -0.44048165586369059, -0.13784183641496006]], [[0.49135281521841057, -0.76742749140798261, -0.1063372333968724], [0.76850615631848762, -0.25613830505429758, 0.6978508529276799], [0.62044885313075149, -0.50507987955478795, 0.064561070594607806], [-0.65696910039344902, -0.81156669365548417, 0.88413019545786398]]]]))
      arg1=Data(numarray.array([[[0.20483189120674328, 0.017299021075248833, 0.74930092176188712], [0.6285551125465989, -0.10881484394938146, 0.75247297757138387], [-0.91546869280867993, -0.67602545159244753, 0.90111410050868823], [0.86910751315770352, -0.2271768529047502, 0.51935266456646989]], [[0.0024529008345528514, 0.99332955589893768, 0.94148448169172294], [0.90100654113459266, -0.23964668402231593, -0.38291909560327841], [-0.76606516441812333, -0.86086862463998592, -0.35240132232632959], [0.089524525851544912, 0.47588762094439896, -0.59744267563322251]]]),self.functionspace)
      res=generalTensorProduct(arg0,arg1,offset=3)
      ref=Data(numarray.array([-1.6560852790178253, -1.3183056454213533]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([1.7770118726873121, -1.6137698841199577]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank1_constData_rank1_offset0(self):
      arg0=Data(numarray.array([-0.74121881266817558, 0.11030133022115574]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([-0.77888412820580899, 0.62613161080523061]))
      arg1=Data(numarray.array([-0.41898731140980794, -0.42799742629540383]),self.functionspace)
      res=generalTensorProduct(arg0,arg1,offset=0)
      ref=Data(numarray.array([[0.31056127748620899, 0.3172397441437142], [-0.046214857794287439, -0.047208685451614101]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[0.32634256677672407, 0.33336040225442559], [-0.26234120019997581, -0.26798271794683415]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank2_constData_rank2_offset1(self):
      arg0=Data(numarray.array([[-0.68983352027889966, -0.14020977962668812, -0.042746387467976987], [-0.36519958527533913, 0.19536929473833831, 0.077967693665367044]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[-0.4161621918222902, -0.60409863014456189, -0.91710555739431565], [0.95387147628283397, -0.60641686238009762, -0.19103477050539941]]))
      arg1=Data(numarray.array([[-0.2158508016092735, -0.77391217562707637], [0.037686218908991265, 0.9982057344335975], [0.12958369437278772, 0.67100896250379627]]),self.functionspace)
      res=generalTensorProduct(arg0,arg1,offset=1)
      ref=Data(numarray.array([[0.13807790707176365, 0.3652291453468246], [0.096294695025544511, 0.52996817715381239]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[-0.051779176770906238, -0.8963277780604868], [-0.25350247272937815, -1.4717275821226814]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank3_constData_rank3_offset2(self):
      arg0=Data(numarray.array([[[0.33911950021605608, -0.65273578413957756, -0.45837555844177236], [0.17949216914780775, -0.96964087179726821, -0.39133776519382235]], [[0.73874385286976652, 0.073181237731540394, 0.77681615704552076], [0.042758138575090587, 0.16314441676870506, -0.70350802638216803]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[0.365015406010194, 0.82067448321475212, -0.78781964277798777], [0.25355998321463269, -0.65763612905857172, -0.53627517951433967]], [[0.68967351367169161, -0.80130866813246615, 0.82098819413889701], [0.43675120084302788, -0.81161405635347972, -0.77014570363758095]]]))
      arg1=Data(numarray.array([[[-0.69096641838328554, 0.91639541999171303], [0.10614097911051168, -0.0010606712193115264], [0.82525523249770893, 0.67979132898716976]], [[-0.52206394687487001, -0.36519897896817266], [-0.16454758300836114, -0.15590723287861064], [0.10360032658549589, 0.41624598532546231]]]),self.functionspace)
      res=generalTensorProduct(arg0,arg1,offset=2)
      ref=Data(numarray.array([[-0.65657607844778632, -0.077408940526257602], [0.016340769060987498, 0.8710937351068877]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[-0.89497885084154327, -0.41521698983404109], [-0.058318391990038312, 0.8374295816625229]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank4_constData_rank4_offset3(self):
      arg0=Data(numarray.array([[[[-0.68750143605625258, -0.25380546160762352, -0.11840723423214072], [0.050533471097008897, 0.60367283285629925, 0.55457554982998425], [0.38089930492507995, 0.90197047469248015, -0.524914526278216], [-0.14024154494501828, -0.9476088740352131, -0.76572731775688063]], [[0.30429106236941283, 0.43610686373751628, 0.83867693524106413], [-0.38936382735284947, -0.80229554406457004, -0.86762623365563685], [0.83739028712562225, -0.18750641655559219, 0.54689233945609805], [-0.60937492527691228, 0.36501481841927585, 0.64185339075465131]]], [[[-0.90290374276701613, 0.0165457567626206, 0.87442407024764846], [0.84888349546031883, 0.11232230867363824, 0.28224334710154797], [-0.12261051623643593, -0.18209280426367314, -0.21058480432449267], [0.27460878644807196, 0.71733396525183535, -0.15138243602766388]], [[0.93124472331256047, -0.14893843631706005, 0.022409796073887378], [0.59986822572463505, -0.47352604423430344, -0.63888567598074841], [0.42835276610985451, 0.17908543022317991, -0.93684968154407211], [-0.93666601602782729, 0.26454468706578416, -0.28332037138608812]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[-0.47706963846240602, -0.4465216654906079, 0.054083883040547676], [0.027459860671690928, -0.57804506317749538, -0.094689510488497275], [0.88151708595669098, -0.175471038062889, 0.5607288165873181], [0.48385077680672239, 0.37269463302169781, -0.88460813625829537]], [[-0.68716204778099654, 0.12190872938211794, 0.70083543504611745], [0.22631542120801584, 0.37023723170275713, 0.46517828104825698], [0.40598455709897774, 0.93432445431429412, -0.10845169161562263], [0.31174041619303172, 0.036577768957805512, -0.32133448312568236]]], [[[0.75351259958409078, 0.074963147113300765, -0.92774180348454327], [0.66280956369281729, 0.24012239871787933, -0.97391965532571256], [0.17443198319208331, 0.34987042718508166, 0.33585379106981672], [-0.59435973453268387, 0.14719848719994233, -0.88258013165509497]], [[-0.98741770188683198, 0.85091900825355005, 0.84574001899629248], [0.11582361296337429, -0.73867013672435644, 0.3067107915908438], [0.18466283155154906, 0.2602890720204265, -0.064088125323721545], [-0.48252814844575043, 0.97959284042852768, 0.16364420466007101]]]]))
      arg1=Data(numarray.array([[[[-0.11938864449477715, -0.29148572623956559], [0.1944491605476133, -0.62830452977690165], [-0.90080668711289613, 0.65304607479958565]], [[-0.42908340660552358, -0.96402070085666858], [-0.89292768920789301, 0.81874842843033369], [0.69519321222972041, 0.9479279608352873]], [[-0.84565148690916292, -0.68544040620545355], [-0.94605494831269921, -0.26383261088662113], [-0.24527782293193856, 0.57221552194544167]], [[-0.93140609106212402, 0.59524154593255862], [0.72926912362427743, -0.35560384166063819], [-0.55415934606674599, -0.65841028514943378]]], [[[0.18189966910704825, -0.60556245622756921], [0.68224444608436019, -0.52519907134743704], [-0.9340883721301092, 0.48148277199404599]], [[-0.92035017756478021, 0.88272988408781261], [-0.94427650385987727, 0.85534073748012496], [-0.928365428871198, -0.55992202234803012]], [[0.35240130182149065, 0.18383352325709645], [0.26065912598062679, 0.49801775433202944], [0.38633727590235067, 0.50643139655619973]], [[-0.72042252410213159, 0.87139673707162402], [0.82189413467130978, -0.28160353663745874], [-0.89006123691040173, 0.41604689941380513]]]]),self.functionspace)
      res=generalTensorProduct(arg0,arg1,offset=3)
      ref=Data(numarray.array([[0.89755747202992275, 0.62914728330764969], [1.2489632967341231, -0.92316496789360691]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[-1.2957042247389443, 1.9244659842122476], [1.2059553300601844, -2.7230696920862965]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank1_constData_rank2_offset0(self):
      arg0=Data(numarray.array([-0.95415143407367053, 0.99503536084223687]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([0.10426832121567275, -0.38802272181954356]))
      arg1=Data(numarray.array([[0.99020068488077939, 0.80360325805441013, -0.40409973262835863, 0.41957119745268279, 0.24326266125993334], [-0.99408115809992159, -0.31663608151063527, 0.6369550959441137, -0.18695962297493018, -0.64358571934015241], [-0.39512023702872723, 0.20057690257930849, -0.89375544262821216, 0.50158360840570348, -0.82839261380281415], [-0.052632460364804068, 0.45097141771611504, -0.13381792720422392, 0.79415753578746728, 0.099297414540904461]]),self.functionspace)
      res=generalTensorProduct(arg0,arg1,offset=0)
      ref=Data(numarray.array([[[-0.94480140349972641, -0.7667592010988894, 0.38557233939613522, -0.40033445974548448, -0.23210941709774294], [0.94850396258665537, 0.30211877125284026, -0.60775161823560853, 0.17838779237540239, 0.61407823705774123], [0.37700454079248868, -0.19138073923810212, 0.85277803729485679, -0.47858671926814839, 0.79041200043599147], [0.050219337535903429, -0.43029502494006749, 0.12768256714667631, -0.7577465516520242, -0.094744770484011739]], [[0.9852846957865764, 0.7996136578521672, -0.40209352327211029, 0.41748817785633963, 0.24205494992622062], [-0.9891459038564242, -0.31506409762160692, 0.63379284373305278, -0.18603143590978821, -0.64039054847653909], [-0.39315860762794974, 0.19958111063462042, -0.88931826936027625, 0.49909342678252039, -0.82427994339432697], [-0.052371159191107547, 0.44873250735668968, -0.13315356948281512, 0.7902148301878642, 0.098804438708410047]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[0.10324656307912826, 0.083790362640778396, -0.042134800724861171, 0.04374798438884079, 0.025364589304030124], [-0.10365117350721059, -0.033015112655422861, 0.066414238543860513, -0.019493966022711091, -0.067105602513978818], [-0.041198523793324088, 0.020913816906584039, -0.093190379580214214, 0.05229928079776211, -0.086375107148682573], [-0.005487898283688555, 0.047022032641511217, -0.013952970618145533, 0.082805473037334765, 0.010353574715236841]], [[-0.38422036489501615, -0.31181632345332527, 0.15679987814100554, -0.16280315803267512, -0.094391439939144978], [0.38572607667545555, 0.12286199417403156, -0.24715305000506352, 0.072544581777088085, 0.24972588254255479], [0.15331562981786995, -0.077828395672956713, 0.34679741948962978, -0.19462583695364916, 0.32143515674297396], [0.02042259052681052, -0.17498715696502529, 0.051924396342032511, -0.30815116858975461, -0.038529653059805269]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2, 4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank2_constData_rank3_offset1(self):
      arg0=Data(numarray.array([[-0.54308635452069054, -0.45819641053155968, 0.41096389358709606], [0.29282888935713225, -0.94925794145418907, -0.7880801377497284]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[-0.063855225139563432, -0.26141106403166958, 0.47485002438039259], [-0.61454507385548851, -0.62416875785904646, 0.39895588492583145]]))
      arg1=Data(numarray.array([[[0.84641199451941596, -0.34905059290988483, -0.65663728997270354, 0.33617649646664005, 0.73485770095674163], [0.2865014126273584, -0.096227848667062466, 0.97946975620636811, 0.31316006999912815, 0.69635996052617255], [-0.53699350057552486, 0.77558772080538874, 0.0099338539032018947, 0.26344700400240284, 0.53281999036270555], [-0.049664813865032631, 0.79084759098370871, -0.56875086589222934, -0.21031521686128118, -0.69343497422332923]], [[0.11116552111888689, -0.74137512706360487, 0.53621529374221732, -0.7609002757993355, -0.1807060590442966], [0.57518930021365255, -0.052056735793687414, -0.34802461222724324, -0.34194960747182201, -0.75406623773229153], [0.82893983832973106, -0.22751274387083864, 0.11842744887978984, -0.29030456405032901, -0.41777813941230835], [-0.061246060524633217, 0.88944320601340743, -0.40316740256281802, 0.033700046371368808, -0.84167438932284777]], [[0.91992706667185087, -0.73466530810795327, 0.74782307789908797, 0.70860854633859538, -0.020661330648807263], [-0.10519698308976144, -0.25204903940819579, 0.10097970891077712, 0.82544153445710111, 0.49698614504904026], [0.19529984095962272, -0.68763860131540189, -0.25069996180956777, -0.84223283900888557, -0.0015371785337567889], [0.036526296745666542, -0.55096146660645595, -0.57796376363807922, 0.95157704645037144, 0.62074034696633729]]]),self.functionspace)
      res=generalTensorProduct(arg0,arg1,offset=1)
      ref=Data(numarray.array([[[-0.13255363814206061, 0.22733912062122952, 0.41824711299650674, 0.45728143443452529, -0.32478338317877603], [-0.46237684224705972, -0.027470813589458576, -0.33097401681496064, 0.3258337888579913, 0.17157021226383756], [-0.00792223278272082, -0.59956022228876771, -0.1626866049151568, -0.35618525063027817, -0.098574547179929223], [0.070045996930411608, -1.0634634890688843, 0.25608845242855538, 0.48984189220066698, 1.0173491261680592]], [[-0.58264711886677689, 1.180519266724148, -1.2906335084903136, 0.26229249873634497, 0.40300701032719111], [-0.37920346768413349, 0.21987181750443585, 0.53760206493870444, -0.23421338222068316, 0.52805276873356166], [-1.0980368604537378, 0.98499709343057051, 0.088062383506945924, 1.0164657782351261, 0.55381572247890698], [0.014809368080753449, -0.17852621656417023, 0.6716449367003331, -0.84349537785987805, 0.10671516669606373]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[0.35371966440712393, -0.13276347445882025, 0.25686091827163471, 0.51392391035522478, -0.0094969741307129145], [-0.21860824917952226, -0.099932634872861859, 0.076383439629789385, 0.46135343672144813, 0.38864891859163408], [-0.089666070037119072, -0.31657618667098597, -0.15063745687715124, -0.34086792690860701, 0.074458558245240711], [0.036526268620563788, -0.54463411170378284, -0.13273597297782472, 0.45647654424987794, 0.55906101297062794]], [[-0.22253404996634241, 0.38415146644547304, 0.36719279583362907, 0.55103811982122775, -0.34705506314919327], [-0.57705217831105493, -0.0089279090772053926, -0.34441577462075307, 0.35029804123374048, 0.24099555087116459], [-0.10947561788312338, -0.60896473312174004, -0.18004173975893525, -0.31671476698794326, -0.06729110441370946], [0.083321525267356783, -1.2609834717630874, 0.37058549497471133, 0.48785092703725652, 1.1991419199865907]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2, 4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank3_constData_rank4_offset2(self):
      arg0=Data(numarray.array([[[0.65761252612453425, -0.46663667608996562, -0.21372801010107279], [-0.9570183372587564, 0.9906081479170803, -0.7316461345050469]], [[-0.22929095369107122, -0.61343844834811456, -0.085087590325210627], [0.51476729491403095, -0.23517030223487723, 0.63467973395231314]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[-0.14419028068060502, 0.73404357723063551, -0.41415700423752511], [0.87283942301941186, 0.47090881952679475, 0.75860828103038735]], [[0.53511029274309529, -0.82197668248264821, 0.24215840993875171], [0.86794426406205649, -0.54197751079800027, 0.31657334614165844]]]))
      arg1=Data(numarray.array([[[[0.16064695583997213, -0.89619363820224152, 0.30180254916202287, -0.86343555110643355, 0.43797072524511305], [-0.90730132800064611, 0.20767830221402583, 0.90680159682307715, -0.82637904377713189, 0.25595292652645352], [-0.51102767533209259, -0.086071513659598198, -0.2196777982464766, 0.8149068861526807, 0.0053207522516820482], [-0.41306379644757385, -0.79392883950931914, 0.21571569956065972, 0.526341453445619, -0.49494562004818832]], [[-0.15149492367274786, -0.67182023460439044, 0.33169926411325124, -0.010055592806786473, 0.648965845384462], [0.41333217715913895, 0.71014569894883928, 0.54038753522005356, -0.29378241653215165, 0.99986310009959345], [0.11920319874266272, 0.9345771958709792, 0.90050543630291613, 0.11063189569721721, 0.92523281334460927], [-0.067907721503442486, -0.63614002507291234, 0.079398849213320855, -0.92471571688763565, 0.69744683785390271]], [[-0.34790543495302795, -0.46306430471155502, -0.23208133895381722, 0.56271839989418959, 0.59876223577495757], [-0.51752922577284566, 0.89151135578266705, -0.080794777890890845, -0.2753394910762077, 0.16028779532766646], [-0.46033979542342651, -0.95211508522366484, 0.163013795313804, 0.30942659617469137, -0.22567351451587858], [-0.96145974721683825, -0.97553039708719336, 0.70724771326742197, 0.88462989128871716, -0.59489316705449458]]], [[[0.67360804944791752, 0.83450954313399683, -0.49136506445943362, 0.14625825592554409, 0.59333461635549289], [0.84166517803814833, 0.62748245863469498, 0.11248696296269389, -0.83968507936133019, 0.078287825892660923], [0.03194883018148742, 0.4291339977336921, -0.90841104908487114, 0.66439928506810686, 0.60228330628424143], [0.018328082615102215, -0.85887010632745597, 0.96388029148552934, -0.099104067681605068, 0.068198385195923583]], [[-0.99235624544646006, 0.68177482704355197, 0.75885974959483016, 0.38489559557780306, -0.56658637550910029], [-0.16274772998526954, 0.9347450941972042, 0.74177369493654699, -0.816063271831728, 0.34475674706992088], [0.97574009544637641, 0.88284616029217222, -0.67386936527679864, 0.22186719560471602, -0.54997780798444973], [-0.62318727925221307, -0.58438469911226965, 0.27679343307856508, 0.56739111944237663, -0.30401055711039882]], [[-0.65437327622015506, -0.84416309170122372, -0.3848077830353156, -0.86650115879655032, -0.85474169421764157], [0.66456283793319937, -0.69288047287468424, 0.69690195779688557, -0.19553446044267653, 0.85209246583095166], [-0.79442891242453495, 0.11201037784228096, -0.94960369572478487, -0.6136991390504094, 0.69897286719871898], [-0.17410734730739041, -0.26056121457324033, 0.13721518636640861, -0.67526675553806825, -0.88462480579118341]]]]),self.functionspace)
      res=generalTensorProduct(arg0,arg1,offset=2)
      ref=Data(numarray.array([[[-0.89822808536539211, 0.31747703753816647, 1.5968095324703668, 0.191898694196176, -0.64651722265102274], [-2.13185124804225, 0.44704808335765789, 0.47869690895599526, -0.20924267431605523, -0.68934713566495998], [1.2239460388863104, 0.092697495593980994, 0.2970870716294024, 0.45108670069376178, -2.0126252826210651], [-0.54194655463292019, 0.41694368974204205, -0.79500195985141764, 1.7395278024127954, -0.24298150132839291]], [[0.25050700707553114, 0.39048230364714509, -0.92856007740134627, -0.4089116761797037, -0.65328424879680747], [0.89183715706222377, -0.89568001731336411, -0.20677024631993995, 0.028696312689138845, -0.18565137810199495], [-0.63400740935427413, -0.38818132149497536, -1.4277454338142386, -0.38071295800903487, 0.33340674288092226], [0.26366472566922661, 0.18521774411526429, 0.35982218390710136, -0.24172738370826369, -0.71858901021083788]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[-0.36605076575745465, 0.23691590439496424, -0.067364589100889993, -0.4643602478979364, -0.2321022894048152], [1.8107082958916667, 0.58435329569855121, 1.2755441729847301, -1.2479951840193482, 1.507738943643554], [0.23654898032612481, 1.9680333094934173, -1.205432900488018, 0.054391646589788123, 1.5688120885256609], [-0.0016383418804796213, -1.170966422569109, 0.81001627682149502, -1.4526260279300491, 0.074983174906155914]], [[1.0415727802016046, 0.048084824796840731, -1.1269341531676476, -0.67347270852190899, 0.39739317347221181], [0.078527209063121745, -0.43804394463473684, -0.062283882224145326, -0.61581031522933549, -0.49523724191366786], [-1.2355079749760896, -1.1153799633832779, -1.542118498279561, 0.68219220447475815, 0.2297787752440851], [-0.099498189986246294, -0.64939486948887326, 0.95145089521117776, 0.64866456430909603, -1.0382832696415338]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2, 4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank1_constData_rank3_offset0(self):
      arg0=Data(numarray.array([0.12282856712541945, -0.8565992301618528]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([-0.053928544953957491, 0.2849958865179314]))
      arg1=Data(numarray.array([[[-0.54533898057896235, -0.35311029658180537], [-0.45981369511254888, -0.71510387532169628]], [[-0.73434539503108498, -0.43944194229380784], [-0.28980371738484778, 0.24097172330893035]], [[0.73623484133578976, 0.81666329843544294], [-0.98919570514569455, 0.22177918562196242]], [[0.13152115500228945, -0.76142901077480984], [-0.1465785778467017, -0.52690951264394159]], [[0.7123960798547242, 0.050779021801522495], [-0.78502953763419603, 0.064617116507527772]], [[-0.27044474139786412, 0.42691248929638959], [-0.27503236951476695, -0.4681602160214815]]]),self.functionspace)
      res=generalTensorProduct(arg0,arg1,offset=0)
      ref=Data(numarray.array([[[[-0.066983205582150887, -0.043372031766375052], [-0.056478257315318865, -0.087835184351598553]], [[-0.090198592646818287, -0.053976024106759675], [-0.035596175354000864, 0.029598211491778954]], [[0.090430670629085594, 0.10030958277074427], [-0.12150149106966457, 0.027240819588188071]], [[0.016154555015611406, -0.093525234361195461], [-0.018004036688192119, -0.064719540442808435]], [[0.087502589714321663, 0.0062371144879114432], [-0.096424053258738845, 0.0079368278323959235]], [[-0.033218340072504259, 0.0524370493482215], [-0.033781831860607722, -0.057503448519045409]]], [[[0.46713695094118873, 0.30247400821419801], [0.39387605725128627, 0.6125574290863226]], [[0.62903970005652909, 0.37642562946970515], [0.24824564120990378, -0.20641619267720474]], [[-0.63065819830657133, -0.69955315274123986], [0.84734427950721303, -0.18997587966969565]], [[-0.11266092012495886, 0.65223950445260326], [0.12555909694170389, 0.4513502828957574]], [[-0.61023793357387857, -0.043497270983556109], [0.6724556975917676, -0.055350972255627039]], [[0.23166275728273178, -0.36569290967776752], [0.23559251599593961, 0.40102568063640776]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[0.029409337729297921, 0.019042724502917153], [0.024797083527322395, 0.038564511487035311]], [[0.039602178647665541, 0.023698464539646011], [0.015628692800812756, -0.012995254413098256]], [[-0.039704073737646901, -0.044041463401922984], [0.053345885053211271, -0.011960228781666082]], [[-0.0070927445199373777, 0.041062758636816715], [0.0079047694246930107, 0.028415463339286639]], [[-0.038418484017468585, -0.0027384387599413934], [0.042335500710490206, -0.00348470707237132]], [[0.014584691394036123, -0.023022769370426244], [0.014832095503170557, 0.025247199255368915]]], [[[-0.15541936622288635, -0.1006349820129413], [-0.1310450116716867, -0.2038016628997151]], [[-0.20928541686724458, -0.12523914591718541], [-0.082592867352286742, 0.068675949910182277]], [[0.20982390129188197, 0.23274568072426705], [-0.28191670692772747, 0.063206155617556048]], [[0.03748298816573975, -0.21700413594623846], [-0.041774291737958366, -0.15016704367069131]], [[0.20302995233009616, 0.014471812334838269], [-0.22373018902081948, 0.018415612403295336]], [[-0.077075638828796991, 0.12166830335260145], [-0.078383093970988291, -0.13342373579746838]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2, 6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank2_constData_rank4_offset1(self):
      arg0=Data(numarray.array([[0.79784216314330902, 0.16067601586504354, 0.75656901611513505], [-0.3014765034207465, 0.46771219308359946, -0.62958111697679287]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[0.82829446201471657, 0.49318515216772019, -0.97408169815480239], [0.30424862497282268, -0.2534374166628226, 0.19084237139001781]]))
      arg1=Data(numarray.array([[[[0.37253513859876097, 0.05392670876158312], [0.46323171683360997, 0.88034569919718275]], [[0.64859085073974421, 0.34737248907977603], [0.83538892338080517, 0.8712144723553652]], [[-0.45775463766789115, -0.21799030481683412], [0.66689592553743737, 0.83394622299679555]], [[0.48187292396652848, 0.56556853302630694], [0.9321846063849788, -0.26037793287869415]], [[0.54119695712506544, -0.073806295102011976], [-0.23836410871009184, 0.39915787366171029]], [[-0.41343991764523969, 0.23371332704525272], [0.75147989663493164, -0.73075341542264294]]], [[[0.46839662335326171, -0.36208557515808981], [-0.92643025145144131, 0.95425947614757711]], [[0.56372157033764125, 0.21683209588724761], [-0.072775264894431979, 0.56726487864454733]], [[-0.84693370439090265, -0.30689736060147421], [0.37176385276052848, -0.19884960845276201]], [[0.52113285110204455, -0.55700635204357907], [-0.67765850748199963, 0.46624653926344672]], [[-0.78164197933248136, -0.8359218680986118], [-0.66688619322944298, -0.19778480956541777]], [[-0.075294734845680944, 0.65668776808724072], [-0.40141334078517921, -0.56411335674219676]]], [[[0.21243387008719328, 0.34383378428225408], [0.16413131044720752, -0.75646603854528949]], [[-0.059380546987608529, -0.56223108870867144], [0.46278876129180024, 0.72803890013439876]], [[-0.47702724643780248, 0.30906396934599512], [0.65617738748628618, 0.13614540670416808]], [[0.53553273042413219, 0.54604356780927632], [0.43856914089346177, -0.47190364165529286]], [[0.75155540885246275, 0.90410779112854334], [-0.79222958606006721, 0.41271517156841808]], [[-0.55574225563612933, 0.33486726957104684], [-0.85981828879645872, -0.56119428887561851]]]]),self.functionspace)
      res=generalTensorProduct(arg0,arg1,offset=1)
      ref=Data(numarray.array([[[[0.53320522819296756, 0.24498052223250461], [0.3449073372737797, 0.28338476118352185]], [[0.56312418131740127, -0.11337848623094671], [1.0049469038790206, 1.3370491741947617]], [[-0.86220191812674496, 0.010595321684463088], [1.0882547029739478, 0.73641049205720932]], [[0.87335955722355141, 0.77485650519107474], [0.96666053713205247, -0.48985353073129967]], [[0.87480216811874489, 0.49082157251781799], [-0.89670591113526465, 0.59893321744765216]], [[-0.76241522779472071, 0.54533052131729809], [-0.11544702681505137, -1.0982475833268142]]], [[[-0.026980132257808945, -0.40208073200233685], [-0.67629017667214786, 0.65717198266668408]], [[0.10550942121859488, 0.35066044853428924], [-0.57725107562167965, -0.45569353635427345]], [[0.042208393952336054, -0.27240152174081478], [-0.44029185744126387, -0.43013415503733832]], [[-0.23869447013177092, -0.7748030055967271], [-0.87409575196701128, 0.59366864198749125]], [[-1.0019067444310965, -0.93792917940327603], [0.25872316175616472, -0.47268076581416946]], [[0.43931098523852335, 0.025855689927316905], [0.12702591307741551, 0.30977961654605168]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[0.33264710725043345, -0.46883023173682925], [-0.23308668445279887, 1.9366717956774635]], [[0.8730848222753903, 0.94232409281080998], [0.2052622762876764, 0.29221937000706688]], [[-0.33218724894162172, -0.63297093983980424], [0.096564230263573969, 0.46006661476469635]], [[0.13449502731765717, -0.33814102449368871], [0.010710059393990223, 0.47394897120907692]], [[-0.66930014498429391, -1.354072451710838], [0.24536230064380893, -0.1689425703540349]], [[0.1617541206827533, 0.19126403272117615], [1.2620087959962247, -0.3368422528749192]]], [[[0.035175457007492104, 0.17379121452538931], [0.40705291104166452, -0.11836686065137497]], [[0.043132411602487389, -0.056563278313695071], [0.36092961104551019, 0.26024033002914848]], [[-0.015663539887724162, 0.070438524574749556], [0.23390974657288643, 0.33010523498801769]], [[0.1167369472381288, 0.41744794879084601], [0.53905748109587481, -0.28744315653159913]], [[0.50618437049841458, 0.36194048983490945], [-0.05469901118677932, 0.2503328474508138]], [[-0.21276519331207605, -0.031415429280924376], [0.16628012415006257, -0.18646293889835511]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2, 6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank1_taggedData_rank0_offset0(self):
      arg0=Data(numarray.array([-0.74422744213048087, -0.99877641793987681]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([-0.14690598162648616, 0.25743309841648632]))
      arg1=Data(-0.298533349396,self.functionspace)
      arg1.setTaggedValue(1,-0.257819328569)
      res=generalTensorProduct(arg0,arg1,offset=0)
      ref=Data(numarray.array([0.22217671101128902, 0.29816806934487267]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([0.037875201545753676, -0.066371228585251435]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank2_taggedData_rank1_offset1(self):
      arg0=Data(numarray.array([[-0.45762487402860152, 0.80600423048248371, 0.83730559349253819], [0.17404435869232127, 0.46411859453104087, -0.044534741208101858]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[-0.16857740706239266, -0.90084986566324177, -0.50129944486966349], [-0.61160470999160155, 0.64900461707340829, 0.76639082031084249]]))
      arg1=Data(numarray.array([0.77289454314273742, -0.64275847750582393, 0.31530393244033816]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([0.021655540696839282, -0.0085898676928446438, -0.50968636317137017]))
      res=generalTensorProduct(arg0,arg1,offset=1)
      ref=Data(numarray.array([-0.6077560737087746, -0.17784020513796958]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([0.25959303717340237, -0.40943844445246391]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank3_taggedData_rank2_offset2(self):
      arg0=Data(numarray.array([[[-0.096320278863214259, 0.18451843313229133, 0.72102778720449057], [0.35586736651686035, -0.061574058759744865, -0.15142280562950994]], [[0.85280405445984853, 0.83422692592303394, 0.40576233867134293], [-0.31735732262959115, -0.093640305053435346, 0.84188979669504804]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[-0.15125229608415358, 0.84339594101546367, 0.074035871028867772], [0.34203594582764696, -0.49295585034804712, 0.34571714327998571]], [[-0.91267264272330872, 0.71784690235028692, -0.52740210902031892], [0.11860531898187587, -0.97535487842382063, -0.84345922407305918]]]))
      arg1=Data(numarray.array([[0.79824082661668005, 0.042586311613756145, -0.74156024367557949], [-0.71137596777428658, 0.58481565468164276, 0.89984620544117799]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[-0.80640803291279872, 0.062251429350332677, 0.10887535308679674], [0.039410135016537007, 0.96087990014527458, 0.46043393287359735]]))
      res=generalTensorProduct(arg0,arg1,offset=2)
      ref=Data(numarray.array([-1.0291365639072694, 1.343941837625688]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([-0.11847743051605067, -0.59762943891026876]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank4_taggedData_rank3_offset3(self):
      arg0=Data(numarray.array([[[[0.85118183604833586, 0.13438283402089146, -0.21706135773326185], [0.091552699546680216, 0.50762856493516262, -0.011018628715250278], [0.12243430919652654, 0.42442744715262215, -0.045267840008720528], [0.69235787445035313, -0.041926844523604512, -0.87404202346987492]], [[0.25182934728525508, -0.40850264381309431, 0.83441187172575337], [-0.81420379969372791, 0.074879984376149178, 0.10516272189010922], [-0.94023082728132135, 0.07366683714258504, 0.74489148932450111], [0.023924555906097877, -0.31455675019554574, -0.19657577282718197]]], [[[-0.019751887192615669, -0.7144943613051391, 0.68943269691013587], [-0.50533955151957421, 0.12627168222607899, -0.45078045345589746], [0.17352908664216393, -0.9271781714532743, 0.77724353088326592], [-0.057483841936648572, -0.78635953374513834, -0.28540423445491703]], [[0.62946919053481931, -0.015951438792465522, -0.87656698523278531], [-0.20378467994535554, -0.036640708541991085, 0.42716692395365641], [0.18157240943009056, 0.47232783861303651, -0.41091756017528258], [-0.72926107012598385, -0.60863179030237147, 0.66733540316644979]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[0.2572020086093012, -0.36701909084854845, -0.11013051274875529], [0.72544154337149291, 0.33776978413145287, 0.40737606366317314], [0.95145604498318193, 0.4013535496553966, 0.092498864168162331], [-0.81619993568193006, -0.9772471708138617, -0.92732415349975872]], [[-0.8552837433543965, -0.46005633433552728, -0.9188097780967619], [-0.69282866323036152, -0.51720994483367821, -0.052428407186462911], [0.28182515630642979, 0.80226416568261416, 0.1976913018133466], [-0.4436486230480714, 0.65775084770591419, -0.93218189114888883]]], [[[-0.28279448559533416, -0.6636222100246838, -0.0071545136258401865], [-0.62497546210923316, 0.80876202811677778, 0.15013826786085027], [0.14611517711504329, 0.82689293264394137, 0.78584613946528803], [-0.090628513416402434, 0.0058560502531928016, 0.77141530997283025]], [[0.97002813066488502, 0.62726323113286608, 0.1732530850892926], [-0.17991847253660431, -0.20099909374535696, -0.044423600449776668], [-0.97015057618202394, -0.64506682160077355, 0.41667490869267754], [0.1021715974762436, -0.36976197024555457, 0.61822049341510787]]]]))
      arg1=Data(numarray.array([[[0.94630147886729787, -0.13489260775455136, 0.17156179580558506], [0.94085370403210256, -0.22468988621228903, 0.16588563667670342], [-0.47036331015664112, 0.58526311154076915, 0.96757146236505842], [-0.10976485102998423, -0.037536018142572125, 0.88735426585296961]], [[0.9947330245403343, 0.85027594362442493, -0.15779925089736424], [0.33557785208230073, 0.87187813431383199, 0.2371445321539376], [0.73745120575383472, 0.68098031071324616, 0.55042599435238038], [0.2473969043993085, -0.61472727002450567, 0.43213824215589081]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[-0.87024902225433332, -0.37100713509570848, 0.66721161548721231], [0.85565183579954729, 0.90542766303551803, -0.29961059965036019], [0.50730570086499882, -0.8747576182542558, 0.35151834625792633], [0.73041045085443446, -0.62261458353059673, 0.47532160363710485]], [[-0.53870573137354993, 0.47242237498037976, 0.95972735637206807], [-0.94645301142549432, -0.47501986531854468, 0.89606099666930561], [0.81727986895770588, -0.029413362280986899, -0.71836327436417613], [-0.045400949576278604, 0.70869399587554183, -0.76300273723548684]]]))
      res=generalTensorProduct(arg0,arg1,offset=3)
      ref=Data(numarray.array([-0.51300949234254478, 0.99106866947805672]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([1.8572673179199564, -1.081690211830598]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank1_taggedData_rank1_offset0(self):
      arg0=Data(numarray.array([0.23364289185074072, 0.87612034962901397]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([-0.080834485738966677, 0.55372800743608686]))
      arg1=Data(numarray.array([0.11308057197511512, 0.67397080437200785]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([-0.44215451217531543, 0.57037159528433756]))
      res=generalTensorProduct(arg0,arg1,offset=0)
      ref=Data(numarray.array([[0.026420471848401725, 0.15746848775644576], [0.099072190255086734, 0.59047953676615128]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[0.0357413326088553, -0.04610569458492346], [-0.24483333700571241, 0.31583072695493841]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank2_taggedData_rank2_offset1(self):
      arg0=Data(numarray.array([[-0.72786903295507455, -0.25586117813680964, 0.43901821959169784], [-0.70910042335333534, -0.59299798008641069, -0.37318001254436628]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[-0.34861806822068897, 0.12072792355479867, 0.8334114357715281], [0.80828374796947022, 0.3322255733991486, 0.9352704289926983]]))
      arg1=Data(numarray.array([[-0.96651698947972631, -0.54945825308394736], [-0.92007470576512129, -0.95052541205326535], [0.60820589687510407, 0.63409307347439881]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[-0.59576273976969052, -0.5800910108490116], [0.58241454600944564, 0.19042691515172683], [0.52221839844218443, 0.51029668599587086]]))
      res=generalTensorProduct(arg0,arg1,offset=1)
      ref=Data(numarray.array([[1.2059226546494806, 0.9215146112704804], [1.0039897642401716, 0.71664986813172882]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[0.7132301394762145, 0.65050714739485427], [0.20036309184128892, 0.071651955089386155]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank3_taggedData_rank3_offset2(self):
      arg0=Data(numarray.array([[[0.23944171624154742, 0.075326515144766848, -0.74124823409312657], [-0.62734307474481166, 0.5120344950406166, 0.50499701314130063]], [[0.68752173142545558, -0.19574441913128404, -0.15126488905821822], [-0.57860958037064503, -0.55940636793798393, 0.42295814741340565]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[-0.50742300005755103, -0.55722204011709997, 0.66256549266146969], [-0.24585125170441025, -0.72332907055466111, 0.36622036303116068]], [[-0.27354791804957479, -0.024706757161822246, 0.72783335182124786], [0.62661674441041448, 0.64282151282148869, 0.66115158631762516]]]))
      arg1=Data(numarray.array([[[-0.0023610282051733655, -0.69633217452571827], [-0.93400680437067618, 0.39204043974487424], [0.63883316146710256, -0.39215867440007202]], [[0.16242005600663822, 0.16300251823754497], [-0.60173494532112448, 0.94946759194987451], [-0.88577102696015064, 0.83353210868699823]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[-0.7844685112590768, 0.12289547138641566], [-0.75335336812946596, -0.39527684050008505], [0.59556206585856408, -0.074551535306166317]], [[-0.45896543862736427, 0.00044096574498486696], [0.60206885723033854, -0.74052828917169267], [0.96683486288751119, 0.34228697747146541]]]))
      res=generalTensorProduct(arg0,arg1,offset=2)
      ref=Data(numarray.array([[-1.4017686283111059, 0.95831987732601087], [-0.047437178931253432, -0.76906723131910826]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[1.2438592748711335, 0.76939139226738706], [1.4053243693484068, -0.32756050573266715]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank4_taggedData_rank4_offset3(self):
      arg0=Data(numarray.array([[[[0.74544822145133471, 0.91904343923620302, -0.82079585075004746], [0.16146098902536332, -0.3969731929875473, -0.004543779570608919], [0.36173100690389282, 0.51772752130888633, -0.75956919831182557], [0.79700049584346289, 0.35582850269168187, 0.23182171294301313]], [[0.95691935562193264, -0.23505621426760293, -0.42017439759865383], [0.1435330340591614, 0.85619588527279977, -0.26878972982879135], [-0.4716442042593072, -0.90483311777102027, 0.78971216470953598], [-0.74721492830924463, -0.14093169252357307, 0.23859545339270949]]], [[[0.76375222866456083, 0.74181977450360059, -0.44333998260280505], [0.89063625821684189, -0.0765104739719209, 0.6074952242105025], [-0.027860282111116019, 0.70246412209611897, -0.44893276215351241], [-0.40333696543649133, 0.2414046679712547, 0.078182004869253419]], [[0.63103812023949768, -0.72042516584854077, -0.88849163687802579], [0.20500780728974544, 0.39607038005777273, 0.29504502013870315], [0.21137197820536224, -0.12116348094477369, -0.0027038501242488966], [-0.61372312287564368, -0.53048949239071108, -0.51993881342242609]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[0.6347664143235352, 0.55283890194464336, 0.88092895180538644], [-0.45790269198241496, -0.59935060104212923, 0.212346446300127], [-0.92727337463003123, -0.3840677468134317, 0.96954278363179691], [0.015588723882647093, -0.25699696170457242, 0.10787578997738323]], [[-0.8690405995357684, 0.29905565360395547, -0.70320493318876554], [0.20827225616181644, 0.96046996213868141, -0.66099180606292429], [0.62028486452300324, 0.34936681274195669, -0.33093515528134687], [-0.80521310866395024, -0.42275755100619072, -0.97429291518638172]]], [[[-0.54226592909431481, -0.040726181311467435, 0.15261490228702734], [-0.40123286766354505, 0.0378927379488323, -0.71418870023442715], [-0.10639530160591892, 0.43868629456911079, -0.38796165015408834], [0.72636931557743978, -0.18901033672390977, -0.57235668529205941]], [[-0.21750299264352901, -0.92103714555204275, -0.44141964407706569], [-0.60216403010724595, -0.13833246201007454, -0.44946611785377333], [0.58134978457697994, 0.46706813628881183, 0.85043520875800338], [0.74504365650235105, 0.089874835912623574, -0.38492104106990865]]]]))
      arg1=Data(numarray.array([[[[0.10303253096256837, -0.40759766734202274], [0.55699963380596484, -0.3603379766562651], [-0.0026064039647282211, -0.76230367063119497]], [[-0.50451316600330776, 0.49747880239894471], [0.24700411012125789, 0.50733253444984605], [-0.89582050182929707, 0.55506772353114364]], [[0.68645984685240435, -0.38748563734552977], [-0.57175392930286595, -0.94186929524418295], [-0.0060616226435250553, 0.61274216715869279]], [[0.13938661198153901, 0.3376199613106674], [0.79955489820020142, -0.24982077846154338], [0.076345459813035754, -0.080975428197477495]]], [[[0.050136045007328711, -0.72859072881984921], [-0.73635852215865238, -0.18789552372915397], [0.54790620917289279, 0.78068957841654729]], [[-0.31484520761111567, -0.28610042523370338], [0.98824399803197194, 0.6956391896228189], [-0.72499266405220086, -0.096504977231056444]], [[-0.29290231082899187, -0.38292277885679371], [0.34858320777990626, -0.56547757799789933], [-0.89726778217262804, 0.50200726479697577]], [[0.41616068330626321, 0.21633975671914119], [-0.12554829749670837, -0.64043318420590567], [0.39512625519228273, -0.056365220643246117]]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[[0.69610890982524487, 0.054810297707627464], [-0.65938193965227487, -0.47013501862347962], [0.59667120389362549, -0.2414781775599133]], [[0.67091638606449955, -0.039532124760107701], [0.54181915763059352, 0.46791430214568486], [0.46380651526198946, 0.48448079096168417]], [[0.41212532486249431, -0.5739595861155955], [-0.99331684153978417, 0.7229062468097267], [-0.65179603193085822, 0.38746126922460933]], [[-0.96941347096745156, -0.40813456517995861], [-0.91207295586874038, -0.63482298177171925], [-0.52072499855264431, 0.80959198672704136]]], [[[0.5353209407056474, 0.29901819577098521], [0.47205215259146316, -0.13500179139159751], [-0.88866568181094752, -0.64246852446020664]], [[-0.29967678977406487, -0.75766864658732147], [0.32981504963115826, -0.75941417244032605], [-0.38978697286748831, 0.70360146712936]], [[0.051310080774963351, 0.77224849455172162], [-0.069158610702042767, -0.65959631170381727], [-0.55540900974373919, -0.48819317865684075]], [[0.70819296904262719, 0.57043386265482421], [-0.92468176231099708, -0.18300514975640358], [-0.9286160352320163, -0.17418461823506259]]]]))
      res=generalTensorProduct(arg0,arg1,offset=3)
      ref=Data(numarray.array([[0.68742457987240679, -0.46142915586326333], [-1.1023633982895613, -1.2350681792160296]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[1.3297724125953432, -0.72578351270059671], [-0.82167019210216163, 0.017426424613686389]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank1_taggedData_rank2_offset0(self):
      arg0=Data(numarray.array([-0.75218254104172022, -0.63567421147465386]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([-0.77071419849692524, -0.78428171139738434]))
      arg1=Data(numarray.array([[-0.88315525445476495, 0.54680241544657693, -0.24331665406931324, -0.4111559062874981, -0.30146537968962428], [0.85672565731041916, 0.25583926332927476, 0.56663292506813012, -0.2746073825850861, -0.82197693623875168], [0.33094601346852448, 0.5214239925971722, -0.093920143296675862, -0.54993736694747364, 0.51612368198426872], [0.62219296717009631, -0.63645091843507107, -0.92768330824378187, -0.57981784737095232, 0.86934788707130917]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[0.79571111829914853, -0.33373133725039739, -0.40102959945726702, -0.43262971718428034, 0.61307365727636376], [0.030412921723360853, -0.012513901267742655, 0.27853207500818566, 0.60747242560932024, 0.66614008339938158], [-0.65143372839882896, -0.33637802048239696, 0.91545479068499747, 0.40247866969274315, 0.28983261149252537], [0.69307173948959844, 0.96713875926798654, -0.8715168162087692, -0.85168141964613508, 0.9161604758012043]]))
      res=generalTensorProduct(arg0,arg1,offset=0)
      ref=Data(numarray.array([[[0.66429396343013214, -0.41129523029835657, 0.18301853913562524, 0.30926429435564173, 0.22675699533104859], [-0.64441408189138905, -0.19243782718925567, -0.42621139341564879, 0.2065548788216659, 0.6182767005777523], [-0.2489318133583821, -0.39220602371186009, 0.070645092039896135, 0.41365328608434365, -0.38821922260673597], [-0.46800268706429066, 0.47872726907682839, 0.69778718807679729, 0.4361288617768232, -0.65390830274654776]], [[0.56139901998523001, -0.34758819427143889, 0.15467012221416182, 0.26136120652245204, 0.19163376752110906], [-0.5445984066609052, -0.16263042198109307, -0.36019393783826026, 0.1745608313898932, 0.52250954079392031], [-0.21037384615228447, -0.33145578533817321, 0.059702613031700928, 0.34958100209478266, -0.32808651456874505], [-0.39551202379092615, 0.40457543571853305, 0.58970435546606426, 0.36857525292646132, -0.5526220326112109]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[-0.61326585677502032, 0.25721148010224709, 0.30907920631925051, 0.33343386572563405, -0.47250457238733135], [-0.023439670589969788, 0.0096446413856379372, -0.21466862494561928, -0.46818762361247029, -0.51340362046382926], [0.50206922385676711, 0.25925131644807287, -0.70555400526295831, -0.31019602532435125, -0.22337810886473242], [-0.53416023020159564, -0.74538757368453701, 0.67169038448093366, 0.65640296271729448, -0.70609788680168684]], [[-0.6240616776375828, 0.26173938432567928, 0.3145201805833529, 0.33930357499465374, -0.48082245714136002], [-0.023852298297792136, 0.0098144239025231075, -0.21844761246648448, -0.47642951358359792, -0.52244148463886331], [0.51090755937061239, 0.26381512958039871, -0.71797444994536408, -0.31565665986756719, -0.22731041656013101], [-0.54356348996806436, -0.75850924127743935, 0.68351470012781312, 0.66795816136542474, -0.71852790587601045]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2, 4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank2_taggedData_rank3_offset1(self):
      arg0=Data(numarray.array([[-0.84246391502002016, 0.49718447309745151, -0.42737176917535513], [-0.3511783635937189, 0.38726333600119545, -0.080630893460824193]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[0.75158172822166724, 0.39368123779753428, 0.26216551369633478], [0.27597711354097565, -0.66150844522314456, -0.75638378488549507]]))
      arg1=Data(numarray.array([[[0.39718803061160268, 0.99379041165894977, -0.92442573545159346, -0.032706358411028758, 0.44077915158309788], [-0.55588258979790672, -0.76111658080906941, 0.12633214811916327, -0.4127561380366771, -0.10701473585316879], [-0.49435801894037112, -0.66669739424526453, 0.57932917237593129, 0.2894251053405188, -0.28130031108651954], [0.18388402039724205, 0.020997449713084038, -0.44869509601409652, 0.8057350849536784, 0.040150506654502705]], [[0.26120838712401762, -0.99601451440433397, 0.15625980763386327, 0.4474047567122923, -0.92676657223460235], [0.85559456597165928, 0.57431764439099919, -0.98975680927792786, 0.88645544816141442, 0.39002905819738953], [-0.14135423322453677, -0.90304586625315708, 0.19462674726415985, 0.01687662982279492, -0.44227791413058926], [-0.079774762186518355, 0.18818565584847469, 0.5377980624099572, -0.93457451099606526, -0.7569408809845275]], [[0.44399887175714503, -0.24298192233119775, 0.28615736868754893, -0.70831977967399395, -0.6258220239895067], [0.56280745232605511, -0.6009773764405546, -0.65139199528688008, 0.23875883169353362, 0.4076126063354113], [0.1108927637666115, 0.49386917315021583, -0.62876757599282818, -0.39605083698147014, 0.38807210726138552], [-0.25771936327329814, 0.97718345002711349, -0.34211067275519191, -0.16532546104545709, 0.55106238174549538]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[-0.10917855961628065, 0.009281999038969202, -0.95879411286155047, -0.2200493016220586, 0.086832824809237152], [-0.96492566434818916, -0.2179029211593253, 0.72396616854629658, -0.038464223790368512, 0.876561490699034], [-0.68426500648350652, -0.058557828253184896, -0.52136920231045947, -0.79890956990666195, -0.059588502010352817], [-0.4085026674820218, -0.38435755101034141, -0.98338809381368986, 0.97833331032985194, -0.13769396362353792]], [[-0.97207843075501343, -0.27957650875987827, 0.66262969914199044, -0.59519936443703014, 0.63005650745250352], [-0.4517961995884201, 0.67637939283315363, 0.52842447770884271, 0.28068727147747197, 0.27239844025972748], [0.39362343521403242, 0.81104754741810936, 0.87323013976076314, -0.85600915358648666, 0.93750298168070056], [0.37969728230167266, 0.57376102921709404, 0.91869589068253066, -0.09672438500317404, 0.70634870025436158]], [[0.3805293873010025, 0.27470839279114512, -0.11279642795953526, -0.44459896593376436, -0.87819197504806668], [0.085915754695845115, -0.57780031198002435, 0.26174094434899775, -0.38197312683374185, -0.99118254622860147], [-0.88467765715898716, -0.5444175337464372, -0.39375738164408314, -0.88046821116323915, -0.7540266436744707], [0.11126963935395406, 0.51964174522409512, 0.98812663188703875, -0.85780390483412683, 0.54698796009487571]]]))
      res=generalTensorProduct(arg0,arg1,offset=1)
      ref=Data(numarray.array([[[-0.39450041228196531, -1.2285918984327764, 0.73418969344000007, 0.55271250236147029, -0.56465581402139464], [0.65317133975461406, 1.1835958344759319, -0.32013544436040214, 0.68642525261031462, 0.10987032441651598], [0.2988072254525293, -0.098377628576773707, -0.12258101450377851, -0.06617846215999712, -0.14875941337326462], [-0.084436444604804942, -0.34174722739016328, 0.79160271699960183, -1.0728032351822232, -0.64567311111696002]], [[-0.074127436965432295, -0.71512574458295841, 0.36207888711933006, 0.24186168074418857, -0.46323422667540975], [0.48117467639068701, 0.53815718505592613, -0.37513932226342628, 0.46899138126929535, 0.15575904539753596], [0.10992514558364511, -0.15540796748789887, -0.077377975885004543, -0.063170202069067094, -0.10378203827580457], [-0.074689787384309855, -0.013287619809245879, 0.39342617052135093, -0.63155283185818312, -0.35166809214292805]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[-0.3649839680787561, -0.031068778235856659, -0.489318589672741, -0.51626237322783808, 0.083071740010313477], [-0.88056003753799894, -0.048973293082320429, 0.8207699957275959, -0.018547876336369618, 0.50619187380884578], [-0.5912508873780622, 0.132555706220853, -0.15130685004136091, -1.1682689792661292, 0.12661192256421522], [-0.12837238256438141, 0.073234984813507653, -0.11837046161200254, 0.47233226317971927, 0.31798934303092991]], [[0.32508104939334997, -0.020281132945850849, -0.61762298468411192, 0.66928828367733839, 0.27142634164675722], [-0.032415681799097387, -0.070528112864260695, -0.34773576731650102, 0.092626033393803708, 0.81143144717570403], [0.21992912670730413, -0.14088682777798339, -0.42370338096337934, 1.011748405233686, -0.066277675941707526], [-0.44807289687369811, -0.87867024389964854, -1.626520659672432, 0.98281056483242846, -0.91898883666684994]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2, 4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank3_taggedData_rank4_offset2(self):
      arg0=Data(numarray.array([[[-0.56165139534218822, 0.76310905876431834, -0.86992229681684097], [0.82756271844050966, 0.91644261930679938, 0.56386688981822686]], [[-0.046955299313429011, 0.21038073837230553, 0.86011856302617984], [0.70849825502178931, -0.2094498402860101, -0.37027412530958714]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[-0.8718602894609353, 0.4240471080784125, -0.95223969660686159], [0.75089412810431821, 0.61499345471389621, 0.78114956065294061]], [[-0.60204358264202207, -0.09506819135207234, 0.35553856120789518], [-0.014192243097152613, -0.0091690888506701373, -0.25170151107528316]]]))
      arg1=Data(numarray.array([[[[0.90874402264076393, 0.22061089861668282, -0.5248416835961438, 0.60405106564016364, 0.85929743488313792], [-0.52486837804835718, -0.35859514725438602, -0.94901986799906002, 0.18855206444623884, 0.97251202983297769], [0.086158276913878007, 0.78131114104879429, 0.83952366996779348, 0.7513340731606033, -0.218397832500838], [-0.25117237604146747, 0.3646093726053623, 0.61334909124852599, 0.67287172980667687, -0.9597637807531203]], [[-0.94523139572750936, 0.9062600846179627, 0.52326670015854759, 0.73753448273755362, 0.35032038314092939], [0.87597224798560269, 0.3257558446427371, 0.4713035102645895, -0.11469756872820369, 0.51402261752685585], [0.23358768913811456, 0.61824073685426528, 0.99394246938196495, 0.47509117829108671, -0.96519840920776301], [0.62973192674744172, -0.093828222317536403, -0.15871035511108755, -0.024404685846560747, -0.48146534135406371]], [[0.83627560740447993, -0.012767642386463329, 0.79588896020036648, 0.59027950474456614, -0.86526068195958605], [0.2138897189644442, 0.46187184475063492, -0.45402243411883259, 0.12375749672363923, 0.047112934134816209], [0.86390192815640798, -0.83313905400371091, 0.73340891980657275, -0.61895633859245969, -0.86008426834561225], [0.52047309828484023, 0.38485526028158135, -0.29338259212984008, 0.14947443699448582, -0.85340875049494769]]], [[[-0.80829462109830641, -0.60095016822992542, 0.67601783144481176, -0.85532740567737808, -0.19120262928670662], [0.82074857504972698, 0.021781990819788932, -0.046697199723160221, -0.24226811408108939, -0.72118021568960966], [-0.8195562518707955, 0.75061239491576637, 0.24377141619870923, -0.63088154710798605, -0.81250064977960146], [-0.97081733018077609, 0.31494866812066968, -0.19738957739556828, 0.72510417435250196, 0.99873943571703983]], [[0.86991709990079435, 0.20131586325067041, 0.7177448914159279, 0.86296617373641138, -0.62996371782203342], [0.84025504778325133, -0.51950402501876858, 0.97027653777441447, -0.33139024316324361, -0.054029388678011436], [-0.61531914888591555, 0.18581692535791494, 0.51297518344123438, 0.20048765877341701, -0.16718604563746342], [-0.72622273796774639, 0.24929529354641966, 0.80402841941508463, -0.91850386616580271, -0.54318621677512646]], [[-0.31676192713236428, -0.37181517033423184, -0.88221765362195304, 0.70353201283530953, -0.92435734263535729], [-0.72332455443250132, 0.14850363658190302, 0.31278243843630449, -0.64892991071040762, 0.79651295180024806], [-0.29620279190742971, 0.25416170977638997, 0.082107220368832445, 0.1719957536619392, -0.20086592052082675], [-0.96826267501299967, 0.54541457857856468, -0.36278889208401499, -0.94749000435070285, 0.043756827934242848]]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[[-0.57246361774784282, 0.092453322881399735, -0.21731969494620307, 0.26969664797303761, 0.43924466364358872], [-0.9119947643817865, -0.50711777866900465, 0.90208728056979015, -0.12143545396110622, -0.65026860165719991], [0.045612439765439383, -0.15724017409677749, 0.65341851654596317, 0.67094986976229865, -0.037289770348779339], [-0.9392334036322707, -0.43408990593414321, 0.083115806176871532, 0.56995054259183364, 0.20140503377942776]], [[0.78944464737878373, -0.62949093486088148, 0.80014342711954356, 0.36705617275690416, -0.050001828473383858], [-0.93757447431685281, -0.054971403490392756, 0.060348500325829058, 0.73799873859421394, 0.35287120636839653], [-0.43437480278306628, -0.94210776367649363, -0.27648210973732201, 0.74664244319734485, 0.84793818892078643], [-0.99548023483411718, 0.2932852000793762, 0.60321255821932263, -0.41516591418466731, -0.6251058687265314]], [[0.34958111993103502, 0.19832562007270926, 0.3090708864604883, -0.35703688839263092, 0.37530672974926804], [0.52335450660765881, -0.35391885877952656, 0.88725075759284922, -0.011484964963803357, 0.53842175789487245], [0.5911968217490311, 0.44215672865742772, -0.22157747533085925, -0.68179076916729064, 0.19250240022866638], [0.6658926431253871, 0.10729446389278974, 0.15432741761584245, 0.40371955514992863, 0.45269480400886164]]], [[[0.039883228836290918, -0.70815039521738887, -0.90503362567002088, -0.64125566334619788, 0.7676764340737483], [-0.21781599949895525, -0.88811018885944537, -0.028757149659588199, 0.73311346273884559, -0.12164163690983965], [-0.047731987542438903, 0.11962687424448082, -0.59609258554081079, 0.55689438008624603, -0.61155353790053368], [-0.25277820142833818, 0.39174930960407051, 0.10348667660486055, -0.17767028887450209, 0.022146362521814122]], [[0.24024124743301534, -0.93740961735699768, 0.50750367307933608, -0.44429250262001285, -0.19424846660024619], [0.65337253509568605, -0.47674199741704859, -0.12865037465188012, 0.85540599926782535, -0.98882222496249206], [-0.19914472129322092, 0.82881968494538816, 0.94320418017706498, -0.43725785890434876, -0.71014189089939195], [-0.75155870700432881, -0.18140074861376432, -0.65803293527195783, -0.75717521713867431, -0.6782198781578066]], [[-0.40100082537740867, 0.44452939226248622, 0.88472142609305249, -0.49935446255370031, -0.88225895399986731], [0.11573124592987294, 0.39061805321653997, -0.55650707944743538, -0.42757164923562652, -0.03700458949727814], [0.2612916439244668, 0.93466411029699392, 0.33217401427259974, 0.78495507026385236, 0.95482169239647452], [-0.21315922493266926, -0.075355697949335942, -0.6001430355087003, -0.36091575263658071, -0.085503053397008255]]]]))
      res=generalTensorProduct(arg0,arg1,offset=2)
      ref=Data(numarray.array([[[-2.0095037371874165, 0.056291936396716841, 0.7214919087950169, 0.18977613412017541, -0.71935565284285174], [1.8185956709423106, -0.32613329741646635, 2.3145641208087886, -1.1711889816036856, -0.39215142800029262], [-2.0308234236742266, 1.6925096102715551, 0.36710408919241633, 0.23762656871751264, -0.80455502594868533], [-1.8460706598656762, 0.18546712857920944, 0.15854738693965073, -1.3025190774834685, 1.2674349531832776]], [[-0.15982323354126154, -0.16094505521825597, 1.4745764729629982, -0.41273579246560987, -0.37213000439587574], [1.0662395722221225, 0.55189072842005737, -0.59892282536530761, 0.21150749492940435, -0.69156804049192755], [0.44605540068037547, -0.22444037982203502, 0.83537176517358813, -1.0203610805376795, -1.398841412372021], [0.41475338237435488, 0.26313397688527412, -0.48845586090611787, 1.14878313156489, 0.014915646017434579]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[0.36543825410341663, -1.2973965328064812, 0.55808810653350549, -0.88432660307203659, -0.9937390800386402], [0.22786382768332325, 0.10090216206201386, -2.1412068365294052, 1.1723196995898881, -0.52449449147558502], [-0.74113065250708154, 0.64621245979790531, -0.083996667872525799, 1.1432905633244956, 0.058682749686681746], [-1.0558622037423617, 0.52440035707793631, -0.75941140218664172, -1.9384034979066069, -1.3390072346940172]], [[0.49205022883545013, -0.018547244594169815, -0.049840251303209848, -0.18534199775730748, 0.086697109906079733], [0.79223755042058985, 0.10335764554508084, -0.091719815246028041, 0.088238494659378358, 0.56947998598976368], [0.16076371562266054, 0.096880022112933312, -0.52967824070956382, -0.91879462071521023, -0.21485924886861152], [0.96097955822850945, 0.28667688914202338, 0.10310544665572575, -0.059820937166870133, 0.12654913503236387]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2, 4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank1_taggedData_rank3_offset0(self):
      arg0=Data(numarray.array([0.82243311448085965, 0.69053103908751745]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([0.063404660200528262, 0.30492778583851687]))
      arg1=Data(numarray.array([[[-0.52456982006940378, 0.28064307420747503], [0.51608616729975409, 0.35558122960968186]], [[-0.50034379462042899, -0.59963048242927819], [-0.61925068642140202, -0.75168927768835303]], [[0.51175065457510294, 0.27421285941038076], [-0.41132899328731964, -0.24991058373377895]], [[0.13607798705238205, 0.49924009054514151], [-0.96250452537730369, -0.87326744575775495]], [[0.56379209837643285, 0.32387605013807952], [0.75390013922552601, 0.20448374802076774]], [[-0.52919368814513779, 0.081061279204317271], [0.9789235329208712, -0.2326336121341257]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[-0.48541571688121876, 0.04569624112801085], [0.062553059463267724, -0.39083278804801735]], [[0.83395212902210991, 0.19971702597409235], [0.59671880307900116, 0.47400981359700012]], [[0.49349695404544791, 0.73926454709984668], [-0.0088627181978104819, -0.34411089478100365]], [[-0.6732711626259722, -0.93516536575925091], [-0.14122827114652248, 0.6689047092267062]], [[-0.994980284404688, -0.93002774488725715], [0.85028399107091257, -0.50325374318665506]], [[-0.79644115310653785, -0.012066502192733752], [0.58957642583626546, -0.62164326954760174]]]))
      res=generalTensorProduct(arg0,arg1,offset=0)
      ref=Data(numarray.array([[[[-0.43142359088234389, 0.23081015757793671], [0.42444635391282676, 0.29244177811882432]], [[-0.41149930532085099, -0.49315596520197164], [-0.5092922706779639, -0.61821415377109989]], [[0.42088068467982048, 0.22552173599558156], [-0.33829058502556691, -0.20553473972190148]], [[0.11191504270377667, 0.41059158254074712], [-0.79159559450797745, -0.71820406518929558]], [[0.46368129138742886, 0.26636638862081979], [0.62003243951080311, 0.16817420574543934]], [[-0.43522641310481847, 0.066667480319809194], [0.80509913001871847, -0.1913255861604013]]], [[[-0.36223174292647747, 0.19379275364520299], [0.35637351736419359, 0.24553987596239074]], [[-0.34550292040023628, -0.41406346010043882], [-0.42761181995022918, -0.51906477799308381]], [[0.35337971125746304, 0.18935249073980956], [-0.2840354371415153, -0.17257101506465441]], [[0.093966073796219129, 0.34474077847828288], [-0.66463925003522728, -0.60301827672040476]], [[0.38931594352121002, 0.22364646543740896], [0.52059144650762657, 0.14120237499729082]], [[-0.36542466735341766, 0.055975329358720578], [0.67597708437507276, -0.16064072991366032]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[-0.030777618584849505, 0.0028973546411629322], [0.0039661554797719286, -0.024780620121409625]], [[0.052876451364153983, 0.012662990168147403], [0.037834752944490006, 0.030054431162833534]], [[0.031290006681247338, 0.046872817407163203], [-0.00056193763578521179, -0.02181823435488927]], [[-0.042688529289114367, -0.059293842247268032], [-0.0089545305427533271, 0.042411675795052471]], [[-0.063086386838904218, -0.058968093141640122], [0.053911967527800218, -0.03190863258139378]], [[-0.050498080682436934, -0.00076507247133921277], [0.03738189294239036, -0.039415080271611086]]], [[[-0.14801673975980642, 0.013934053628307319], [0.019074165919559311, -0.1191757766925763]], [[0.2542951761980291, 0.060899270524533547], [0.18195614339108979, 0.14453876292586135]], [[0.15048093351513075, 0.22542230149607023], [-0.0027024890365690809, -0.1049289732284823]], [[-0.20529908488846171, -0.28515790437383515], [-0.043064424018510801, 0.20396763192145648]], [[-0.30339713507649929, -0.28359130101686036], [0.25927521473119064, -0.15345604962485232]], [[-0.24285703736745179, -0.0036794117964459119], [0.17977823411283897, -0.18955630576456653]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2, 6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank2_taggedData_rank4_offset1(self):
      arg0=Data(numarray.array([[-0.30378886616368339, 0.37866365578668537, 0.62845180185397065], [0.23214274629362674, 0.38122641438404137, 0.44578505841364469]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[0.22945763283484832, -0.094605342374876722, 0.90174254173403745], [-0.079491330209681577, -0.63657284277850645, -0.98636353392633125]]))
      arg1=Data(numarray.array([[[[0.068079242566699394, -0.19716963276843291], [0.50720153217186237, -0.73906763056368052]], [[-0.75034956166269651, -0.5911613825837061], [0.74432500567224746, 0.075994857550283124]], [[0.8156530031505036, 0.37918483040393602], [0.45653684940381201, 0.98998439226767898]], [[-0.59069472849699634, 0.51255668904047713], [0.813952476754914, -0.21584801064969716]], [[-0.80555390904910085, -0.26570647123670543], [-0.83715455589911714, -0.067326017372286495]], [[0.4462219137898138, -0.47467857128556457], [-0.40039314559684214, -0.21318008633643126]]], [[[0.84721414882851653, 0.77850252136717368], [0.6356691926418403, 0.9257875030314151]], [[0.86010965286536378, 0.96025468195089636], [0.97730397492288512, 0.47307664549417416]], [[-0.89613232954922895, -0.20585757819248851], [0.12195794919121061, -0.043804059927738281]], [[-0.072084421773115803, -0.52818386719225785], [-0.28531499532368598, -0.37463264035845434]], [[-0.12865554119293177, -0.20728442986247764], [-0.55378732400009434, -0.50403791801175002]], [[0.1054886276132998, -0.91938105242847579], [-0.47694659276443629, 0.036257851750443715]]], [[[-0.36967589415753133, 0.83148608246138922], [-0.8930139494432201, -0.10861999428004632]], [[-0.060864690415460609, -0.14929923866607964], [0.98923415695059758, 0.64145093504855089]], [[-0.43577577923694544, 0.15773505421885248], [0.83323313907992524, -0.85368661246991273]], [[0.32362474622394344, -0.029226243081799774], [0.25922329483665374, -0.60693401644206335]], [[-0.97275635749583578, 0.40890885361005225], [-0.71948205873553728, 0.83028153998907595]], [[-0.2390589190395378, 0.75554039523332062], [0.7532314130142066, -0.44519708865891361]]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[[0.62339461578621402, -0.82310015037102024], [0.42695930013102523, 0.81899143823018195]], [[-0.75570488369005795, -0.31748410143115913], [-0.37624652143766446, 0.4745509482263055]], [[0.014523021384303725, 0.90316488573206], [0.67575481435578344, 0.21034179907103789]], [[-0.27753169261473265, -0.92871302653193744], [0.88791536948032568, 0.25746778385037872]], [[0.59145596216131135, 0.050314567015916412], [-0.27884379048146402, 0.04283915599111543]], [[-0.68523731931757581, 0.91056712920709582], [-0.24449904371616271, 0.38608354751082929]]], [[[-0.13242086987847035, -0.63575716105712154], [-0.17987045137668112, 0.7322421419569054]], [[0.84321483283360688, 0.54887660510693648], [-0.46474826273322911, -0.86494991437261803]], [[0.56354105807209742, 0.19945232256538414], [-0.37845150315151188, 0.93700275152909707]], [[0.42198881757467022, -0.77105390897916748], [-0.80719045331821859, 0.92259095967453297]], [[0.68370935919475362, -0.22662650753569547], [-0.39913378262783095, -0.63143350753302308]], [[0.56384490495486994, -0.67650412062661092], [0.37741295097973926, 0.77091308400475511]]], [[[0.42044076699227584, 0.52144446691452173], [-0.3595284117430364, -0.81214908109748696]], [[-0.67844862361679303, 0.88301400400028984], [-0.57088841400399049, -0.054688239825127161]], [[-0.10937957903530271, 0.15056258710736481], [-0.19766598014362424, 0.50116112991309647]], [[-0.72339557141651434, 0.62118759001729207], [0.65657052135533167, 0.48764020200502434]], [[0.61480542020982787, 0.1374181985466727], [-0.34488998544165295, 0.65532222592801692]], [[-0.66883288390180229, 0.75957234380395566], [-0.54156613329683401, 0.47154466100145775]]]]))
      res=generalTensorProduct(arg0,arg1,offset=1)
      ref=Data(numarray.array([[[[0.06780400913571269, 0.87723747670003749], [-0.47459358362656534, 0.50682016676406016]], [[0.51538958373446275, 0.44937441893354302], [0.76563783481980618, 0.55917153637283068]], [[-0.86098311865162103, -0.094014033785269874], [0.43113709866988548, -0.85383413134260688]], [[0.3555332860340612, -0.3740803346129668], [-0.19239877248190704, -0.45771631899567489]], [[-0.41532935453474396, 0.2592070934752464], [-0.40754069550779937, 0.35138398364362888]], [[-0.24584954829128403, 0.27088659734730336], [0.41440227801118085, -0.20129364513622089]]], [[[0.17398852443721508, 0.62167829661335627], [-0.038015231968786811, 0.13294429031142466]], [[0.12657574144218325, 0.1622852526100384], [0.98634954751589221, 0.48394021077659521]], [[-0.34654371783606186, 0.07986259183357855], [0.52391819325756617, -0.16744230549971578]], [[-0.020338905740431262, -0.095399946879607844], [0.19574142230007191, -0.46348952414216948]], [[-0.66969063704236975, 0.041581327297423643], [-0.72619206511952272, 0.16234529003676917]], [[0.037233337598533867, -0.12387690999194623], [0.06100630562126369, -0.23412797005456015]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[0.5346997004689491, 0.34148807076759768], [-0.20921628787026408, -0.61369955846865143]], [[-0.8649608679852191, 0.67147548282917646], [-0.557159337147898, 0.14140350764301179]], [[-0.14861379624585175, 0.32413751146411984], [0.012616810757704461, 0.41153737629258969]], [[-0.7559207230373205, 0.41999680271338929], [0.87216105879113615, 0.4115218298092771]], [[0.62542772928393797, 0.1569009754192088], [-0.33722462002645887, 0.66049868415663227]], [[-0.81369073822521099, 0.95787617788763824], [-0.58016067480180722, 0.44086920178734323]]], [[[-0.37996637840985736, -0.044198737952433675], [0.4351867966056796, 0.2698460569433524]], [[0.19250130521869857, -1.1951355207965153], [0.88885797277488376, 0.56682342522455165]], [[-0.25200135953122882, -0.34726915563605021], [0.3821658148376964, -1.1075179178066092]], [[0.46696575444609195, -0.048060173884205803], [-0.20436327201706095, -1.0887533194803991]], [[-1.088668078564754, 0.0047204083456565682], [0.61643029533844795, -0.24783786520572232]], [[0.35525443896009345, -0.39095250243440366], [0.31336580420687887, -0.98654708641325284]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2, 6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank1_expandedData_rank0_offset0(self):
      arg0=Data(numarray.array([-0.20031333879668889, -0.50653891697442588]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([-0.95151970101483685, 0.93944767977785792]))
      arg1=Data(0.0837446081594,self.functionspace)
      arg1.setTaggedValue(1,-0.85233900532)
      arg1.expand()
      res=generalTensorProduct(arg0,arg1,offset=0)
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([-0.016775162066619883, -0.042419903119484945])+(1.-msk_ref)*numarray.array([0.81101735550559118, -0.80072790093225987])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank2_expandedData_rank1_offset1(self):
      arg0=Data(numarray.array([[0.19236453205510662, -0.47896002086828582, 0.40593223158773739], [-0.49198671767556257, 0.33166984763376162, 0.19387889731561625]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[-0.90469327811830369, -0.2424631066589078, -0.71485774128175361], [-0.76384131963877233, 0.40263364293999837, -0.22906358026988616]]))
      arg1=Data(numarray.array([-0.87416009643629189, 0.44265367470648487, 0.65545515696735257]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([0.53136818909815964, 0.91999815266141116, -0.64336923729593498]))
      arg1.expand()
      res=generalTensorProduct(arg0,arg1,offset=1)
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([-0.11410043659360741, 0.70396895648573343])+(1.-msk_ref)*numarray.array([-0.24387335931420601, 0.1119136898598426])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank3_expandedData_rank2_offset2(self):
      arg0=Data(numarray.array([[[0.73484475927485282, -0.3273144782720363, -0.98428229903480702], [-0.86747701258606047, -0.54426503828892003, 0.24190297451979981]], [[-0.55850963693473887, 0.32760876450033294, -0.85643254271950542], [0.8719536971376507, 0.52800833012744253, -0.33900733971626806]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[0.84637223130472927, -0.67431325633789108, 0.34394957494969702], [-0.84129019539952776, 0.5154664362236685, 0.10683123550016793]], [[0.089469616571687061, -0.31939964644159158, -0.78448104747489], [0.76230731077477776, 0.57325748923830244, -0.91559613983950139]]]))
      arg1=Data(numarray.array([[-0.85170872073018589, -0.38621517233062153, -0.23893438323718819], [0.69923979283779381, -0.63417533484290112, -0.057231649774727833]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[-0.46461955722733084, -0.4204898046030705, 0.86479030704370752], [0.99774597538652965, 0.11922300135855557, -0.36474374893597084]]))
      arg1.expand()
      res=generalTensorProduct(arg0,arg1,offset=2)
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([-0.53954047816320805, 0.84804804665956179])+(1.-msk_ref)*numarray.array([-0.62915945973686471, 0.57721585367778538])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank4_expandedData_rank3_offset3(self):
      arg0=Data(numarray.array([[[[-0.88481884417833045, -0.32402275950347192, -0.21621837190554638], [-0.79494351912074168, -0.63023859505013013, 0.58357552656421974], [0.10879135320496003, 0.19083688699575885, 0.25507731496536801], [-0.25684559330845214, 0.70399193622415068, -0.05262505527181327]], [[-0.058704735297595123, 0.16824181695067963, -0.3826563017056348], [0.21094740709857995, 0.76253306614145688, 0.48952828023672001], [-0.31238654681826294, 0.68172295903079227, 0.77947837270490639], [-0.25933372227936236, 0.72652982448754222, -0.86330104014039821]]], [[[0.29431487021129743, -0.8419940220881077, 0.73683205084914527], [0.79589779939287464, 0.4876054507587495, -0.70952304624589058], [-0.86694062329126331, 0.79439797482857322, -0.053829451219499891], [0.31032899105659029, 0.47981276511894855, -0.16027531796003402]], [[-0.35867253161155666, 0.58281395631096466, -0.97204665202786678], [-0.61088701553553926, 0.33693557489782711, -0.060041907621848134], [0.9029203375690753, 0.23775279068826172, 0.50450913818183363], [0.64351268346716051, -0.43945846087105966, 0.15669262319240995]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[-0.9451965031465932, 0.57899076853772935, 0.14932221064747164], [-0.58669207955179803, 0.13934693548680221, -0.62902985422104885], [0.092709910437190013, 0.93625955026147478, -0.080808097116621846], [-0.27359505249134242, -0.58791629575328375, -0.36553880037538145]], [[-0.58258789307915548, -0.48943742604399154, -0.32270460313622462], [0.037150808295573823, 0.32154341655156471, 0.89840018913722042], [-0.90118306075273735, -0.86838263091913981, -0.022170179378442123], [0.216367439600335, -0.51668491216086254, -0.32368604913065813]]], [[[0.3861160479565624, -0.80334429525139051, 0.75442862577667635], [0.56824908852048517, 0.00083575481091968662, 0.72289442538374016], [0.21663350384620639, 0.033238798470353492, -0.26326212663134752], [-0.70826227434852007, 0.29826099236479675, 0.50278766221782334]], [[-0.66658278632159496, 0.36327261841857816, -0.53731019072197506], [-0.85390973738393217, 0.26505483427639209, -0.47142580162263936], [0.36961403669338888, -0.91500472758114593, -0.88123928289141773], [0.26698775438419453, 0.79345918957335337, -0.019678261063790448]]]]))
      arg1=Data(numarray.array([[[-0.6291045663030761, -0.15385625001799097, 0.39576247438786072], [0.84044377393239955, 0.040879081125433148, 0.00283003616749955], [-0.099348169182058799, 0.98752811016182962, 0.72321210628336718], [-0.60559693869456832, -0.7620684729818592, -0.58259203505231971]], [[-0.96918984412963338, 0.59009436761548795, -0.79021651413687377], [-0.78115172901767571, -0.5245090803125152, 0.84339212013992837], [0.4679573807848445, 0.88225232734068171, 0.3727878725492586], [-0.98201152651621681, -0.62738315424417568, -0.83566874706408178]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[0.22109660505936901, -0.95591983304837647, 0.71753527122906147], [-0.050368576906380635, -0.80520036551357266, 0.33471750969857061], [-0.38564694104125308, -0.64279726634499035, -0.95495180629204235], [-0.42972395730452173, 0.51592264964035572, -0.83629202815983161]], [[-0.40224452916124775, -0.91486176579898992, -0.21801445821044174], [0.49980863541156517, -0.56182902571083737, -0.50671717648952286], [0.73666893467906025, 0.06690540578401083, 0.24776523243321225], [-0.17442402304210702, 0.22568303394611622, 0.48396081980663697]]]))
      arg1.expand()
      res=generalTensorProduct(arg0,arg1,offset=3)
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([1.413366119158177, 3.3369988110438289])+(1.-msk_ref)*numarray.array([-2.2922839505060839, 1.6233544390910941])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank1_expandedData_rank1_offset0(self):
      arg0=Data(numarray.array([0.37667600453676364, 0.025171562793877333]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([-0.89609482927751904, -0.7184918463982688]))
      arg1=Data(numarray.array([-0.20747263484246825, 0.71668413622091443]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([0.96858474041534559, -0.19299306351791756]))
      arg1.expand()
      res=generalTensorProduct(arg0,arg1,offset=0)
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[-0.078149963143175877, 0.26995771694657572], [-0.0052224104559483722, 0.018040059738260485]])+(1.-msk_ref)*numarray.array([[-0.86794377760329922, 0.17294008630483373], [-0.69592023853420959, 0.13866394254904696]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank2_expandedData_rank2_offset1(self):
      arg0=Data(numarray.array([[-0.49051547895903669, -0.19601777675885601, 0.62086838166437519], [0.62972107547085443, -0.2982683512333717, -0.8185937203236977]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[-0.28986951139170025, -0.5303006057533115, 0.93531289159918529], [0.28159280895638084, 0.73338856092367011, 0.46429644408210891]]))
      arg1=Data(numarray.array([[-0.12881017239828574, 0.48102571958620355], [0.20302997313859383, -0.79279608542310109], [-0.57204028208461444, 0.61141509905138025]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[0.65638628106509112, -0.019340534460006165], [-0.30786781367622029, -0.24367620857253902], [0.16684477373962259, -0.99904498007386722]]))
      arg1.expand()
      res=generalTensorProduct(arg0,arg1,offset=1)
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[-0.33177582472600348, 0.29905986792651251], [0.32659668705342321, 0.038877454135833989]])+(1.-msk_ref)*numarray.array([[0.1290481852825123, -0.79959177686287519], [0.036512358979822482, -0.64800853108803924]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank3_expandedData_rank3_offset2(self):
      arg0=Data(numarray.array([[[0.63353373440615224, -0.34080075132556664, -0.43589751061600079], [0.18020697221313253, -0.23905335299706088, 0.93341267327047772]], [[0.93145524711834393, -0.43143342291337206, 0.15330278023579624], [0.52590188970253759, -0.5995774616003553, 0.39454705762582143]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[0.90901983536127329, 0.8890780872366808, 0.66949948151275285], [-0.14286763563592753, -0.3698817549509501, 0.42301929262688986]], [[0.50905768441220967, -0.16601269657916862, -0.89857700106291771], [-0.32822303394761221, -0.30012241644382232, 0.49550774090895633]]]))
      arg1=Data(numarray.array([[[-0.42570241110959395, 0.26598181464674209], [0.96360305643626321, -0.36693348867808906], [0.34585901193907898, -0.91340766842634991]], [[0.8360621947895146, -0.81053944850283233], [0.37954056425530114, -0.7740411718275384], [0.17406579722200499, 0.8198308682990616]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[-0.39487557824913133, 0.25280954440145464], [-0.86616203479726739, 0.38270812837795942], [0.43475243699674304, 0.24175128738272456]], [[0.21885566889211505, 0.74803437155046115], [0.93377148705077162, 0.96776242218079522], [0.38379740443511978, -0.82061207242795731]]]))
      arg1.expand()
      res=generalTensorProduct(arg0,arg1,offset=2)
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[-0.52644355286620215, 1.4959245898077245], [-0.47843229322184794, 0.62732486300488888]])+(1.-msk_ref)*numarray.array([[-1.0522676088845266, -0.080043640793647008], [-0.60978373536662522, -1.0946608557311581]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank4_expandedData_rank4_offset3(self):
      arg0=Data(numarray.array([[[[0.010471399476696952, 0.25275178135573739, -0.24858088595336136], [0.78756573104551819, -0.82296531870145362, 0.74106815227384359], [0.72119333057518564, 0.2533170728712768, 0.6798639240979103], [-0.36642737388386881, -0.73083897354894733, 0.19367178312280364]], [[0.43563808025334683, 0.19366544913521522, 0.052801816817874103], [0.49262666340264483, -0.65276674759721831, 0.075173684701457688], [-0.29987104849439894, -0.28637160285600571, 0.87742335988795084], [0.66948607230716872, -0.32755495909842014, -0.67880089053036641]]], [[[-0.6974100630815061, 0.033194770544187069, 0.28602242186841265], [-0.57193651439523086, -0.18961621341312629, -0.36197158965182785], [0.81357001899245418, 0.24873035947967392, -0.99547831427252298], [-0.50260125100258457, -0.52428079659451932, -0.23669741115218046]], [[0.78974778986212879, 0.85617816826203375, -0.80893476588222146], [0.18783127806380628, -0.7444401698845573, 0.72199369292312743], [0.11692218617111005, 0.19278707929548711, 0.94019345376773078], [0.44877400428892744, 0.76421983729367415, 0.96641921440447476]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[-0.63759756367791987, -0.63347210956329669, -0.37748702505496179], [-0.4728679172968655, -0.60343796025072627, -0.1161594011150695], [0.85047381798027177, -0.18289339171398367, -0.58178229008762572], [-0.043390326809787494, -0.66802320245962465, -0.52439902907507285]], [[-0.61314857088747599, -0.9883819390873021, 0.31898648673340113], [-0.95551976708740072, -0.44527253618967899, 0.99553801018593924], [-0.15528802745971682, -0.34812909499569056, -0.55658147717543249], [-0.85021798513638958, -0.76488734465576691, 0.57467033238909471]]], [[[-0.36568982979997955, 0.26601573934402745, 0.39390810076196314], [-0.48734328357162093, -0.41816159203530945, -0.39839407034102781], [-0.51429012020497811, 0.47602193417226291, 0.092424669976658436], [-0.98061560746230603, 0.41942142118507197, 0.49100653033946573]], [[0.31664415718477845, -0.44953506841445123, -0.47106624643999617], [0.16715870507041664, -0.58768298478192338, 0.16084330233518673], [-0.9650595243612845, 0.23724668852935404, 0.11197868937097444], [0.25565240554602386, 0.4738623730100755, 0.80173869699607292]]]]))
      arg1=Data(numarray.array([[[[-0.46444854352237708, 0.69857919079146025], [0.59119022837727719, 0.47799991393389396], [0.5566365565118705, 0.08021747114442368]], [[-0.014467204941581047, 0.44688859663032154], [-0.8500294183112278, 0.8923184670514801], [0.54465175706342106, 0.12026325098751034]], [[-0.0030079070897197635, 0.87997796733709177], [-0.85193254099778915, 0.043584979922517642], [-0.13415353391231633, 0.98458749638903842]], [[0.73480285584461758, 0.3403733277941805], [0.36784623032435437, 0.5150368316551055], [0.44158855051094092, 0.2372761097643914]]], [[[-0.1473332361123576, -0.19258432267259695], [-0.35287166477851151, -0.48123429055004996], [0.72861575065407913, -0.32236530975926625]], [[0.63878377596807101, 0.6377687339417093], [0.41586205255299546, -0.52039606490291446], [0.46218715590801107, 0.80430808718152025]], [[0.10127014000889312, -0.71443695356663572], [-0.67806134995920142, 0.34630872896253218], [0.45667929457585821, -0.61045458982846301]], [[-0.98057156448465688, 0.23467047687783693], [-0.37362030213078046, 0.32322583896307311], [0.38902869959841735, 0.21926453241153099]]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[[-0.84152602569936041, -0.80926629683109641], [-0.1205148014710411, -0.079534528454333842], [0.80781003158231957, -0.80225595409940498]], [[-0.6369467568716547, -0.53781033046681381], [-0.26363850963143798, 0.88083476294340746], [0.26875579382140624, -0.13299544489761272]], [[0.33856247485470559, -0.83308586208854174], [0.95369675645645335, 0.46180089573276728], [-0.54486709910219622, -0.27992522082779758]], [[-0.10812172693760935, 0.71771098257567933], [-0.64172273388540857, -0.1798072780951161], [0.77759804809604383, 0.17424486403048456]]], [[[-0.69995916800506874, 0.86443540563135945], [-0.61837909748226205, 0.72110068782710202], [-0.88639494771216754, -0.92854736770473267]], [[-0.63432819994804945, 0.56592412078690724], [-0.91228993040885076, 0.62396186436928369], [0.55413613026877462, -0.16007697273167176]], [[-0.46413381615378912, 0.96729684345006439], [-0.52976160470784084, -0.36603546266755482], [0.27540607869730338, 0.61847656877101187]], [[-0.2258478426056969, 0.86387287427846071], [0.65450631570091655, -0.96276228330367997], [-0.2006062835536182, 0.013171375964953436]]]]))
      arg1.expand()
      res=generalTensorProduct(arg0,arg1,offset=3)
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[0.086471481352973112, 0.67686455599014905], [-1.1753573232282486, -0.90926126263985685]])+(1.-msk_ref)*numarray.array([[3.1940835297757424, -2.8994922651317627], [2.7934219473769875, -1.2524989980801262]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank1_expandedData_rank2_offset0(self):
      arg0=Data(numarray.array([-0.97773320792740348, -0.53426706145325609]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([-0.94487222095858603, -0.61700992355703987]))
      arg1=Data(numarray.array([[-0.23934825088113754, 0.11002010853837962, -0.71272916465061931, 0.738851198419747, -0.7460108503127636], [0.90548520253642506, -0.49058870396779564, -0.093655624194077136, 0.4355370655874633, 0.59380243961410262], [0.6992520555109123, 0.14369578638056946, 0.47741128951304401, -0.46447567473792684, -0.027810742528963761], [-0.98948423380256023, -0.60455451393218373, -0.83937300798519954, -0.87679446610195488, 0.050596516389958879]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[0.18421044759334992, -0.27458308114701135, 0.56191907693638199, 0.85293602362157039, 0.091899316175952261], [-0.12250673895595732, 0.87418681254560804, 0.5454590957163421, -0.20736760976422497, -0.75380733197559069], [0.70666228208810322, -0.25657755369014534, -0.10426100842184516, 0.22736009565634441, -0.45060121258104657], [-0.74321138290427968, -0.49417373043993984, 0.77837071863433582, 0.14101197953042077, -0.12876350146944948]]))
      arg1.expand()
      res=generalTensorProduct(arg0,arg1,offset=0)
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[[0.23401873314582758, -0.10757031365775102, 0.69685897253726858, -0.72239935241194575, 0.72939958182494835], [-0.88532295180673348, 0.47966486730338015, 0.091570213883718374, -0.42583905230811842, -0.58058036415901482], [-0.68368195538451504, -0.14049614218352507, -0.4667808715963469, 0.45413329146575843, 0.027191486507686807], [0.9674515941093661, 0.5910930242739062, 0.82068286374504318, 0.85727106603485936, -0.049469894279905946]], [[0.12787588666224206, -0.058780120089568372, 0.38078771640992032, -0.39474385863093486, 0.3985690248088451], [-0.48377091834854224, 0.26210538525103555, 0.05003711512674007, -0.23269310818538808, -0.31724908449640116], [-0.37358734091296419, -0.076771925532761659, -0.25506512675274373, 0.24815405385875056, 0.014858363687782565], [0.52864883394802042, 0.32299356364684939, 0.44844935043943301, 0.46844240290276801, -0.02703205213143484]]])+(1.-msk_ref)*numarray.array([[[-0.17405533474130377, 0.25944592572102826, -0.53094172622387781, -0.8059155549748982, -0.08683311097974733], [0.11575321451970912, -0.8259948351026758, -0.51538914721156215, 0.19593589399279662, 0.71225160793864251], [-0.66770555994424896, 0.24243300300332848, 0.098513330586930681, -0.21482623854016672, 0.42576056849808541], [0.70223979000646886, 0.46693103022017557, -0.73546086964515556, -0.13323830228067535, 0.12166505561184289]], [[-0.11365967418798094, 0.16942048590857395, -0.34670964670575943, -0.52626999073379066, -0.056702790048668544], [0.075587873638437469, -0.53938193838333792, -0.33655367495143235, 0.12794787304883051, 0.46510660427899542], [-0.43601764065182391, 0.15831089678880889, 0.064330076836342578, -0.14028343524084233, 0.27802541972934103], [0.4585687985524915, 0.30491009564264449, -0.48026245760360975, -0.087005790710691797, 0.079448358198601812]]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2, 4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank2_expandedData_rank3_offset1(self):
      arg0=Data(numarray.array([[0.68813958176820833, -0.20995265146087738, -0.70767260094766349], [-0.64401330322569161, -0.73679300888485533, -0.31061216996489049]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[0.64702510832365312, -0.87100457153231825, 0.038765102821083364], [0.43385430910015343, -0.57151600206099595, 0.23471899812428498]]))
      arg1=Data(numarray.array([[[0.27833767844786239, 0.46454808537637016, 0.34741812138976513, -0.36337134232578183, -0.74821786639064025], [0.73029020123598576, -0.40767376945345113, 0.9976087265746123, 0.71018253344220095, -0.67782674609947557], [0.47899966658040993, 0.18643598665073746, 0.06334559068572343, -0.66896544779460787, -0.61393708138842151], [-0.71750734284539774, -0.5775327818183158, 0.15576364339160742, -0.0016783292258966132, 0.28092519345145672]], [[0.83988131841099078, 0.49845018402023822, 0.65149692764776024, -0.17308309903688701, -0.63681806359846171], [0.49150500603630354, 0.62417692229041299, 0.47666618238109737, 0.44321948385050414, 0.064618658694761022], [-0.55925710321380273, -0.0069750563942769794, -0.75309686794186081, 0.5243478413662086, 0.1144692329888235], [0.39384917748212289, 0.14460743100274431, 0.80973757090569176, 0.20844815842352671, -0.49445334932913565]], [[-0.61311548836867757, -0.43351093943183971, -0.80869248713811936, -0.71320370389964505, -0.40963657270283971], [0.43776586875252921, -0.19567013362017693, -0.49798767805437838, 0.41429143220577669, -0.78426652204769276], [-0.25866197527021995, 0.68448544248326404, -0.58646283479394445, -0.66797343174921875, -0.29527130661233603], [-0.47994012504039008, 0.52984761908846667, -0.71317710293656478, -0.48404992735346308, -0.5127792286730104]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[-0.07388226402389142, 0.74309046066732409, 0.083492048769642002, 0.056565712596869488, 0.50589912505624546], [0.17610075478658604, -0.823322585086945, -0.74262740601792143, -0.48656166881759555, 0.3421067618073601], [-0.70852138869200032, 0.38918986038875247, 0.32309805833387051, -0.27834453716587215, -0.65929236919189793], [-0.84014854173660236, -0.29070688242653886, -0.11389680757361065, -0.094904667201655801, 0.031697483097372858]], [[-0.46220668797772246, 0.4493553273167914, 0.43553272497625084, 0.02033821625118315, -0.012276472012058504], [-0.80164610054843322, 0.91652414569958207, -0.17146044869997912, -0.10176802213401803, -0.17114420653846429], [0.36793832611915955, -0.22766627887323199, 0.75901380748000546, -0.88045940455830962, 0.45024699315285499], [-0.50982830820965019, 0.013962931439029713, -0.2544061800797488, -0.62200223677388089, -0.9744488030333085]], [[-0.69641591369649603, -0.74502452448063372, 0.71455458056313192, 0.99517066949775868, -0.00038073308142272388], [0.7947550812223092, 0.96545117262240354, -0.52667200305503781, 0.1458301678183116, -0.86455133453673971], [-0.85441369709220161, -0.44790692191463743, -0.46386077491207955, -0.46040338019155924, -0.71822505629185174], [-0.69691324420025724, -0.54580281138895903, 0.85086965667194026, 0.50638889262770559, -0.38556616787627074]]]))
      arg1.expand()
      res=generalTensorProduct(arg0,arg1,offset=1)
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[[0.44908489625976011, 0.52180680147290104, 0.67457816911345481, 0.29100377217541318, -0.09128810985097241], [0.089553903478119645, -0.27311366463836151, 0.93882895838935276, 0.10246691034907335, 0.074997657194659617], [0.63008413470155866, -0.35463317992849447, 0.61672897217038025, -0.097723327235480495, -0.23755211185975242], [-0.23679440532282814, -0.80274252320411987, 0.44187647379049122, 0.29762970275401845, 0.66000734731216792]], [[-0.60763071912631283, -0.53177598423344596, -0.45257054529324359, 0.58307214589054968, 1.078303461601863], [-0.96842946352058779, -0.13656433694557257, -0.83899656878207007, -0.91261197711320619, 0.63252159204448044], [0.18391812372475896, -0.32753759141430638, 0.696243597929457, 0.25196750115009126, 0.40275837843434703], [0.32097419712269115, 0.10081593162851579, -0.47540135226541574, -0.002150481186100589, 0.34266567814246585]]])+(1.-msk_ref)*numarray.array([[[0.32778382383746962, 0.060526689176501683, -0.29762976082009518, 0.057462650316407682, 0.33800754027810131], [0.84298779071157093, -1.2935812916498364, -0.35157223751960925, -0.22052408250841762, 0.33690462952551348], [-0.81202852717932472, 0.43275082337654086, -0.47003355061273533, 0.56894067773556489, -0.84658797410399478], [-0.12655032764668908, -0.22141453131137936, 0.18087890134572937, 0.49999130664697367, 0.8543119174588174]], [[0.068642334285391571, -0.10929217172528241, -0.044971001355951834, 0.24650312462373233, 0.22641335029197057], [0.72109976217186278, -0.65440053488619709, -0.34781963490133672, -0.11870571262517619, 0.043309522409710366], [-0.71822482568743384, 0.19383435552874465, -0.40248798824654247, 0.27437024187467174, -0.71194126243804001], [-0.23670580712936407, -0.26221476144154621, 0.29569785552861799, 0.43316852635369218, 0.48016546911760571]]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2, 4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank3_expandedData_rank4_offset2(self):
      arg0=Data(numarray.array([[[-0.85137315807101044, 0.80642888550897807, 0.891420559609434], [-0.24286949797786384, -0.832911459070099, 0.77125470073425451]], [[-0.025138770949608036, 0.71517773487813563, 0.033663482656445476], [0.0028618039797083661, 0.63724822330209552, -0.47107299553613768]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[-0.57539717257956036, -0.87539366090870563, 0.82000031391372885], [-0.10635385439685852, -0.87637478566158555, 0.12260478089790583]], [[0.081952029830240969, 0.026862869788563559, -0.37254094179518815], [0.76913601753939975, -0.79115443170337874, -0.20149803473964756]]]))
      arg1=Data(numarray.array([[[[-0.35296028025435988, -0.2075975295882746, 0.66734905464332805, -0.50440406376137759, -0.025604610598271238], [-0.30948571381800982, 0.2653292619794716, -0.24068409784918199, -0.65875666518065668, 0.58370988675644186], [-0.78232549884699321, 0.97099914704280721, 0.18687514536432381, 0.45106529740547097, -0.72312596201167745], [-0.24868589806785657, 0.56344000471821554, -0.73813455705138598, -0.23357269728613117, 0.54366659922270011]], [[0.31656239564707644, -0.17379269264403652, 0.58356903766242607, 0.7481908793334664, -0.24711523571053284], [0.27600954185206117, -0.76566247296433732, 0.067028788505638426, 0.52557737431401819, 0.93399777356661584], [0.73195474787586923, -0.07282860148812853, 0.85599059555426615, -0.26097314134532468, 0.61255056329174251], [0.73080827223894085, 0.04478259934008455, -0.89429702491811547, 0.32158229831071017, -0.64649875944542212]], [[0.046297706978831954, -0.13523758578260447, -0.28975051087383941, 0.40867912625687897, 0.29238319765736343], [-0.17130941921327469, 0.91918833524928734, -0.76395175415170846, -0.42243611856116781, -0.41033152047543409], [-0.65593033371522691, 0.86046603889430595, 0.94709441315228693, -0.77871210368827959, -0.20510669572602369], [0.39524066382709622, -0.96328196452295001, 0.4855947351885348, -0.25595168382908096, 0.81556990381265648]]], [[[-0.44219685938046926, 0.40638211430129445, -0.25528027122113239, 0.56233935604668761, 0.421196249147886], [0.04044468254528466, 0.68232839239866006, -0.56983841246757083, 0.81609317206425613, -0.49173048102796346], [0.035869286999725691, -0.33229449129202582, -0.86930270060657966, 0.58193240687312797, 0.58558555467896034], [-0.58288075162447295, 0.31633119652942598, 0.51391368777813606, -0.51993806431557998, -0.0092724219982944778]], [[0.42601861369564609, -0.3105742177697719, 0.60388314429782119, 0.18266302718897465, 0.78739908529492042], [0.19287486137424503, 0.44576916436006542, 0.42928378511595811, 0.16884750016314354, -0.31574865472097136], [0.34551818789080957, -0.84817518375192713, -0.79960515394026777, -0.32486135739895738, -0.84284626832567855], [-0.18027279598960733, 0.71850215900918868, -0.11544144591394567, 0.39558663148433681, -0.88741953918244931]], [[0.28253765943717113, -0.24468734355336985, -0.36805729019586009, -0.22417524407775113, 0.059973444979270596], [0.79851660711605077, -0.68510355390337652, 0.21574291838015291, -0.4550942131380562, -0.56996568941174863], [0.10317946120369026, 0.48881970015851639, 0.49899417849049632, 0.54770767544641163, -0.73367752627037253], [-0.77079385250668331, 0.17947653268588226, -0.37978104505944743, -0.50214010279211685, -0.3304757987331397]]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[[-0.32272964277463712, -0.88515950483003469, -0.69224070546586169, -0.86179083871453455, -0.10299967993257209], [0.76259673121294291, 0.23831076850989952, -0.92498053154144411, -0.67549702041329129, 0.94286892354488816], [0.55910269410847024, 0.17232114702827506, 0.0027576661507033862, 0.84714866192277172, -0.42516629287349961], [0.041089648765493481, 0.64847802546341016, 0.29228229595522404, -0.93415786015995428, -0.40690095209542654]], [[0.10562354414934627, -0.3993789435149242, -0.1403069799180936, -0.19750235566254015, -0.55146608801515518], [0.7112503863073032, -0.56231049040832137, 0.32399553342190601, 0.10583163921040528, 0.60949414327045237], [-0.76869080290185177, -0.1313407070809034, 0.57832588459577661, -0.07571993196513449, 0.58161788448249196], [-0.84029843253063485, 0.91425637952981154, 0.080240056899892664, 0.57970386502337878, -0.76459694958807511]], [[-0.79487928142541198, -0.093846244303958493, 0.27369735985843313, 0.87570442158659545, -0.026335667047448386], [-0.29444555240578674, -0.046263613663428238, -0.47843239550302119, 0.76986004452311585, -0.85254240153874883], [-0.4350409992435873, 0.019889695951523123, -0.19845085178938304, 0.66321979724254865, 0.39916578454180596], [0.85384446454795326, 0.015452599216066565, 0.89115899774372065, 0.47499378527491132, 0.14888647553520418]]], [[[0.77587825943790167, -0.99406768201578721, 0.63692922923474549, 0.75775956415346291, -0.54890505746934681], [0.57002091192405824, 0.19951094118868395, 0.16595779357143248, 0.54129844324198029, 0.49321908287826721], [-0.80498024094948017, -0.54199543796364891, -0.24060661185386722, -0.43984152736777848, -0.40703394246050717], [-0.52008038999937689, 0.059867084212102739, -0.012688434265761384, 0.95849142006589783, -0.27692037782243384]], [[-0.15439183491230235, -0.91267357746945743, -0.60436729318839544, -0.77671129644446069, -0.11864897716248257], [-0.58437920986098768, 0.86655894730389682, 0.68279947271388997, 0.69192089778867794, -0.011029599640282939], [0.47765982191322465, 0.13527884549838265, -0.72672290501267955, -0.80988424502466172, -0.3506040631609737], [0.35141439589640711, 0.0049349920760062282, -0.63796688636658616, 0.85953554434245394, -0.36799620760709506]], [[-0.34787951480840373, -0.73628265997902287, -0.46660949466123003, 0.76787107692992862, 0.29066337739905346], [0.67795125224723507, 0.29074888549951594, -0.29625504472343378, -0.511365136832858, 0.046421894348386505], [0.066691327275378409, 0.42230409018566073, 0.22236559578583348, -0.350494273853724, -0.46244412206343033], [0.41089390195370923, 0.2353228591154346, -0.93004280949899565, -0.37373370062524436, 0.43007480852688196]]]]))
      arg1.expand()
      res=generalTensorProduct(arg0,arg1,offset=2)
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[[0.56752553834944464, -0.11269530660486035, -1.0806930207908905, 0.935490376732248, -0.62872003348865224], [0.77875038333704594, -1.0893555019056373, -0.47480264320632165, -0.081712430438375394, -0.16670180913282345], [0.45469062775489089, 1.0457869373682693, 2.6374335028156737, -0.73697191052706013, 0.92073538102639862], [0.85063190366080244, -1.8391268233969222, 0.018540753931484077, -0.36045927034205616, 0.22931023488851737]], [[0.37394816911835665, -0.20511076826877173, 0.94829998508603874, 0.78514101754092591, 0.30847716947204923], [-0.053725604859885312, 0.085440357432577663, 0.19856962360979002, 0.70253676044165714, 0.70536541409898157], [0.69274198508309037, -0.8192476868428249, -0.10772731995524715, -0.68755781037780606, 0.25954563070697489], [0.78876819946423105, 0.35965885729323532, -0.49786825660658574, 0.71438756480534937, -0.85842854124073575]]])+(1.-msk_ref)*numarray.array([[[-0.54842994122000077, 1.5972733881674983, 1.1502729301362498, 2.0810864334429588, 0.71841624720894315], [-0.76823417939556293, -0.42781844725010776, -0.79606794549037496, 0.2006731928496033, -1.8122546003073887], [-0.33035240639928415, 0.022996113660309417, 0.019154828446097377, 0.83624694530622723, 0.35666327136903253], [1.2098211773615748, -1.1426358154075986, 0.93875047635291065, -0.48149831798551462, 1.4302233116290912]], [[1.0615148158462546, 0.057544481938596653, 0.89959091809119496, 0.6404275062897602, -0.40032496547957358], [0.95544757079108755, -0.56905636183095498, -0.24172583016255289, -0.36736488209274432, 0.78997449048015911], [-0.82323920975779896, -0.60580396163898131, 0.43477716163921759, 0.193384426136744, -0.11042583791618568], [-1.0981273985970079, 0.066671410938733189, 0.37648838929534129, -0.10544673073908681, -0.11785876986270619]]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2, 4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank1_expandedData_rank3_offset0(self):
      arg0=Data(numarray.array([-0.29122113046425513, -0.47541106004230316]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([-0.85143765962749174, -0.79058810451621553]))
      arg1=Data(numarray.array([[[0.27459699797476822, -0.0087039207914585415], [0.38313361318382166, -0.96846009664776034]], [[0.11661592783370489, 0.16449189835664613], [-0.9505294491920715, 0.29705596622248898]], [[-0.45703516582188985, 0.54299390781391987], [0.41598346973877676, 0.20410334702394084]], [[-0.68263375479839494, -0.58701929203324865], [0.46915449414917076, -0.64523883481023403]], [[0.83773032759103483, -0.10303873306648881], [0.095779064770398881, 0.99335902175359991]], [[-0.082760864678280255, -0.17913327987931638], [-0.59504227630290818, -0.79847818852419139]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[0.52030100767617093, 0.34500704463725129], [0.91039689749776076, 0.12243871565648967]], [[0.99602963520593613, -0.078969113787929368], [-0.27674818177892302, 0.47240418857061228]], [[0.9642559628185654, -0.4337885281137499], [0.27172794732103323, -0.23464912258104298]], [[0.21032825685707657, 0.99518700560960482], [0.46301116618382809, 0.019916754970616735]], [[-0.32289907565007248, -0.7060801580221383], [-0.29144719644587758, 0.83526477758984097]], [[0.86136653910595262, -0.97868682188437228], [-0.0079238373346890434, 0.71682273689458742]]]))
      arg1.expand()
      res=generalTensorProduct(arg0,arg1,offset=0)
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[[[-0.079968448172302781, 0.0025347656523598905], [-0.11157660395024718, 0.28203604415528255]], [[-0.03396102233386953, -0.047903516591633832], [0.2768142607332808, -0.08650897429446483]], [[0.13309829765256906, -0.15813129966877329], [-0.12114317631176984, -0.059439207451850211]], [[0.19879737376544773, 0.17095242183024939], [-0.13662770214850728, 0.18790718289287514]], [[-0.24396477302525194, 0.030007056325227495], [-0.027892887517244676, -0.28928713727194999]], [[0.024101712569808018, 0.05216739627022432], [0.17328888437895656, 0.23253372071306563]]], [[[-0.13054644989161873, 0.0041379402099915473], [-0.1821459571815584, 0.46041664115598313]], [[-0.055440501869238365, -0.078201267766103921], [0.45189221304182925, -0.1412236917937241]], [[0.21727957265999445, -0.25814530931032831], [-0.19776314230858719, -0.097032988566833775]], [[0.3245316369893626, 0.27907546389080906], [-0.2230412353870678, 0.30675367843759388]], [[-0.39826626306963975, 0.048985753312555357], [-0.045534426712355747, -0.47225386553446419]], [[0.039345430406718819, 0.085161942476280381], [0.28288967934715065, 0.37960536202694384]]]])+(1.-msk_ref)*numarray.array([[[[-0.44300387227762461, -0.29375199064093882], [-0.77514620373762289, -0.1042489335063575]], [[-0.84805714151936662, 0.067237277426451664], [0.23563382420000986, -0.40222271671478638]], [[-0.82100384026409301, 0.3693438891504256], [-0.23135940752240289, 0.19978909976404766]], [[-0.17908139877191923, -0.84733969494793338], [-0.39422514371695422, -0.016957875239556126]], [[0.27492843326737809, 0.60118323725577894], [0.24814911884687182, -0.71117588740037163]], [[-0.73339991013780459, 0.83329081713349784], [0.0067466535155165808, -0.61032987346930079]]], [[[-0.4113437874365809, -0.27275846546450588], [-0.71974895755019808, -0.096798592130264052]], [[-0.78744918133943864, 0.06243204198492442], [0.21879382046090781, -0.37347713200756122]], [[-0.76232929391318804, 0.3429480502023286], [-0.21482488281661771, 0.18551080504773987]], [[-0.16628301791483588, -0.78678300840406579], [-0.36605112024311515, -0.015745949560333799]], [[0.2552801681682289, 0.55821857376723227], [0.23041468660471146, -0.66035039728391076]], [[-0.68098613944546771, 0.77373815942856494], [0.0062644915389266321, -0.56671152883561771]]]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2, 6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank2_expandedData_rank4_offset1(self):
      arg0=Data(numarray.array([[0.59039172589357491, 0.0092736581174275301, 0.37009730057269419], [-0.88622213404859829, 0.71389686700863697, -0.46665762290279034]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[-0.438850630293661, 0.17887669541177154, -0.61598468283421126], [0.12378562821004668, -0.047880168633327447, -0.087434761016521145]]))
      arg1=Data(numarray.array([[[[-0.097054814669019329, 0.1088238373870476], [0.32378250443009593, 0.32197494344906752]], [[0.70775594074809534, -0.92997702675975247], [0.01237100635908428, -0.5069299832337002]], [[-0.75984443697789894, 0.19780944003201451], [-0.34330237948690323, -0.22804770352989201]], [[-0.93116874633818569, 0.70693758896377368], [0.72264256273908134, -0.58584764059781125]], [[0.91250458697913817, -0.9386782714003421], [-0.82131043333437082, -0.0041944182413649056]], [[-0.81508059372887565, 0.41273186754430746], [-0.7570466850866846, -0.87905330199479348]]], [[[0.10034055727981417, -0.41446837095335098], [-0.24461488029411793, 0.95887342160306654]], [[0.55828015767190409, -0.23703350591265049], [0.65613936822541885, 0.67070384706656316]], [[0.5222900193455422, 0.46165350909287906], [-0.347566563543245, -0.4361907256612414]], [[0.8386775550140797, 0.30622411756326096], [0.16052370699890917, 0.44720608856895838]], [[-0.62525362342338964, 0.0068738203265328313], [0.24469317624942954, -0.12696996392448501]], [[-0.17691852959743914, 0.44436275291204885], [0.98846970293937719, -0.68189521219640503]]], [[[0.60901716857696986, -0.75474512993198917], [-0.14887977761897608, -0.28873323106109305]], [[-0.5815314680511221, 0.0629518562199336], [0.6292589593581952, 0.14305648837410101]], [[-0.50034766349018645, -0.10101709272668913], [-0.74649391667556664, -0.19220174324201955]], [[-0.81383740865982901, -0.9122841795635539], [-0.63882256938029625, -0.52488108688164181]], [[-0.9347191096125973, 0.21424601096938822], [-0.0085357375294463633, 0.65913866886292904]], [[0.93383077145936255, 0.81631933591549877], [0.10614339186250921, 0.7554252189616153]]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[[0.63540736774218032, -0.082306348904535698], [0.074240175451802726, 0.96256586354846974]], [[0.70188297193287119, -0.34874988111042771], [0.16727979575369889, -0.41237750316313337]], [[0.052940682693713548, -0.31010027213496549], [0.82108330554325493, 0.37708391069252456]], [[0.79964323539059134, -0.27420577744959784], [0.48026341888946633, 0.35228763812007391]], [[-0.59589252828603878, 0.78957310568773731], [0.064001761327118656, -0.78774329068751991]], [[0.44037227030826109, -0.69156292756491178], [0.71647754048160728, 0.029357521844604273]]], [[[0.36637184854742699, 0.86006112199533935], [0.84100551136042623, -0.25976357971615549]], [[-0.37761486905325548, -0.52388090313435121], [-0.094625585295324832, 0.96156711166477482]], [[0.62716387092763193, -0.53074063709000208], [-0.061926768068395477, 0.0079820864741007025]], [[-0.0026009507837925216, 0.89945858864834993], [0.42568763673755683, -0.71324678431522948]], [[-0.0029019906723026789, -0.025017673747219416], [-0.051667398744411619, -0.69285730504452614]], [[-0.22204273989796652, -0.45293467291622913], [-0.23875024128690003, -0.67019014555904866]]], [[[-0.99878290177052387, 0.43432718042681473], [-0.47750438286102259, -0.62847361351158293]], [[0.15917797473771977, -0.67433022635403739], [-0.9614759865762823, -0.42880264141075908]], [[0.92821053811932241, 0.96130105109018427], [-0.68867438426243566, 0.68637083549263567]], [[0.91423203393597108, 0.66484677864948249], [0.051603979354333696, 0.63595296648268218]], [[-0.16223219214627282, 0.41511957758082496], [-0.50197906163349915, -0.90320903859370971]], [[-0.52070487489701756, 0.034945409082566048], [0.93070567125403203, -0.43438087775288636]]]]))
      arg1.expand()
      res=generalTensorProduct(arg0,arg1,offset=1)
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[[[0.16902577457756376, -0.21892408000762426], [0.13379003302769923, 0.09212421744587343]], [[0.20780732416189526, -0.52795059751323692], [0.2462755941933383, -0.24012256935614273]], [[-0.62893964908603106, 0.083680120180731538], [-0.48218148126755789, -0.20981590727609173]], [[-0.84317574238287674, 0.082576008809311263], [0.19170432332557194, -0.53598943664635745]], [[0.18699975039077127, -0.47483226893293812], [-0.48578473678851958, 0.2402916161879923]], [[-0.13724927272324866, 0.54991193048900777], [-0.3985039861038982, -0.2457286248647419]]], [[[-0.12655756974348714, -0.040122196670758059], [-0.3920971355873355, 0.53393497330668349]], [[0.042701567803616447, 0.6255717844431713], [0.1638038894768975, 0.86130754586057068]], [[1.2797432182334678, 0.20141028606920702], [0.4044725632495777, -0.019601861361547832]], [[1.8037350630487627, 0.01783306604720053], [-0.22771304091418121, 1.0833899321253149]], [[-0.81885456747591512, 0.73680512546557275], [0.90653244383403864, -0.39451835753981868]], [[0.16026163119791109, -0.42948458015364582], [1.3270443299599202, -0.060291299340357651]]]])+(1.-msk_ref)*numarray.array([[[[0.40192143070052322, -0.077573806032896431], [0.41199132473369726, -0.081758167156763095]], [[-0.47361947882273009, 0.47471611100435701], [0.50191732484296359, 0.61710993360118249]], [[-0.48281152518192666, -0.55099615446671357], [0.052802690375076289, -0.58684962403761864]], [[-0.91454211680328179, -0.12830787381867637], [-0.16640556720493249, -0.67392216618135115]], [[0.36092125854875473, -0.60668703523517564], [0.27188210622349279, 0.7781285476806894]], [[0.087770307271912429, 0.20094753239068808], [-0.93043391214118576, 0.13480700171135671]]], [[[0.1484406986179965, -0.089343507884526899], [0.010672862651025426, 0.18653978431707446]], [[0.091045600039080396, 0.040873185051901101], [0.10930394669460852, -0.059594147272507267]], [[-0.10463328280911478, -0.097025133456905041], [0.16481745709367115, -0.013717284843459]], [[0.019173214798033869, -0.13513968252742184], [0.034555731579072879, 0.022154127263357658]], [[-0.059439250207302431, 0.062639772284085932], [0.054286761286377189, 0.014634692935763485]], [[0.11067090825327155, -0.066974406408050302], [0.018744996318152116, 0.073702844706456327]]]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2, 6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank2_float_rank0_offset0(self):
      arg0=Data(numarray.array([[0.97162096575959755, 0.89398780347183404, 0.41260060593059955, -0.053403737379110749, 0.43986364846255444], [0.24672969835432035, -0.97358031687278435, 0.81793513239387061, 0.39739950721057848, -0.25542133998447158], [-0.34458500124677038, -0.70131013342150861, 0.91735549296927466, 0.26697292972973741, -0.15546150206669784], [-0.094478876851962212, -0.38251081440333956, 0.93376858855058087, -0.96328144005698046, 0.40823675793219127]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[-0.18443449676291945, 0.66178405195327117, -0.091691683619482323, -0.14542676249324393, -0.50961582875653089], [0.74109333362150531, -0.98615665203855873, -0.88665257330881575, -0.02296116563147832, -0.4790510040264031], [0.78339347757717825, -0.020587024732857895, -0.61371727381675556, 0.79111123522651927, 0.49144903100870518], [-0.70916816236167013, 0.18767461899782112, -0.66771288617323798, 0.26280382520308732, 0.76190102549109473]]))
      arg1=0.487462822817
      res=generalTensorProduct(arg0,arg1,offset=0)
      ref=Data(numarray.array([[0.47362909867750042, 0.43578581824448515, 0.20112745606299723, -0.026032336571807157, 0.21441717573420802], [0.12027155523262131, -0.47458420950202435, 0.39871296851803678, 0.19371748557101356, -0.1245084073965699], [-0.16797237740820239, -0.34186261730792178, 0.4471766981296223, 0.13013937794182284, -0.075781702636826972], [-0.046054940006851543, -0.18645980134713946, 0.45517747203285353, -0.4695638899375465, 0.19900024239934816]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[-0.089904960416913524, 0.32259512206051405, -0.044696286926010034, -0.070890140158116149, -0.24841877043796068], [0.36125544837811208, -0.48071470534262739, -0.43221016624320674, -0.011192714613892587, -0.23351955469610111], [0.38187519595631625, -0.010035409189685426, -0.29916435470636243, 0.38563731588588268, 0.23956313192625728], [-0.34569311427687177, 0.091484399547811304, -0.32548520832539402, 0.12810709448064223, 0.37139842459317163]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank2_array_rank0_offset0(self):
      arg0=Data(numarray.array([[-0.17006257760456922, -0.2680718983052166, 0.13193609281839502, 0.62316936944234502, -0.94778984563737878], [0.40833003332217199, 0.15137906665065848, -0.24262960364950992, -0.74045970038257392, 0.29433021929773817], [0.43725512726687588, 0.37156645202335481, 0.89488602307181608, -0.29063173598773817, 0.50013871840787405], [0.75453963311688965, 0.5630091048000665, 0.30281532658486054, -0.9121094759281958, 0.27995590146857174]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[-0.60413869199919179, -0.41378684767147433, -0.34441289343391035, -0.16670184554446554, -0.024898222247398127], [0.60824690163508111, -0.77820148664906741, 0.55027011886652111, 0.19976566942409013, 0.0057718744988692894], [0.45802067010993497, 0.21457186846348586, -0.91943039496554357, 0.89817338699194793, -0.53120956309440159], [-0.043765987883885193, -0.71361728490137377, -0.35147426105775903, 0.72996468061652497, 0.63705138735778188]]))
      arg1=numarray.array(-0.12165633265)
      res=generalTensorProduct(arg0,arg1,offset=0)
      ref=Data(numarray.array([[0.020689189512336108, 0.032612644034270506, -0.016050861196423509, -0.075812500106015479, 0.11530463674292012], [-0.049675934364727364, -0.018416222088661817, 0.029517427772262787, 0.090081611623479718, -0.035807135067760731], [-0.05319485521558965, -0.045203411888842179, -0.10886855170644044, 0.035357191151899808, -0.060845042297650059], [-0.0917945246038918, -0.068493622938397197, -0.036839402102451742, 0.11096389381651353, -0.034058408276322366]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[0.073497297680441054, 0.050339790386414042, 0.041900009532460133, 0.020280335174885439, 0.0030290264081169766], [-0.073997087398499736, 0.094673138928312181, -0.066943844628045257, -0.024302758731457937, -0.00070218508404707542], [-0.055721115003357566, -0.026104026607073134, 0.11185452997822304, -0.10926848034504881, 0.064625007314543098], [0.0053244095807470481, 0.08681606179657593, 0.042759069621069269, -0.088804826007655518, -0.077501335495385709]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank3_array_rank1_offset1(self):
      arg0=Data(numarray.array([[[-0.84245335656854992, -0.85932866176226907, -0.80684712700930872], [0.074806671211705034, -0.81152965974037339, 0.755284274558222], [0.46431874851724264, 0.53860396989077941, -0.23159234295489783], [0.049401300054009667, 0.92991511243698555, -0.49565832093885565], [0.83859449095453709, 0.88135706894644161, 0.10226063989204426]], [[0.8599335267910726, -0.13052060445531533, 0.95600820052705759], [-0.46646281701547654, 0.75599552006294601, 0.39333427081380989], [-0.042581296398193302, -0.38626028268432266, 0.9726713281924031], [0.75100184172098627, -0.68364478354809455, 0.13846493478133137], [-0.56707200509836198, -0.77653390516240872, 0.4331499323734167]], [[-0.72700049914884768, -0.86111870411910241, -0.25452607515050829], [0.56595792794949218, 0.414150002430826, -0.96910680178832065], [-0.17419109246998055, 0.94184134054567958, 0.52648567285479042], [-0.58918511955915931, 0.41391499599567827, -0.72558750711336395], [0.69513360188913675, 0.43338425002567638, 0.045719148551376376]], [[0.80182328248679235, 0.34286587495686227, 0.90648449353549654], [-0.53527217965885154, 0.39016647005472294, -0.32284425388570792], [0.82003949506199048, 0.35057927925827337, -0.027608350505056389], [-0.58760519926644328, -0.11651474315864574, 0.36666533749574493], [-0.84755747917089908, -0.031881187468399963, 0.32440648065741651]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[-0.12730911912086018, 0.7918574966814238, 0.66214929174027626], [-0.65421249840849516, -0.4513392679700885, -0.11544442316422643], [-0.31606098427670015, -0.15216591249987577, -0.67760826137816599], [-0.98513111366181683, -0.32265102764230758, 0.97116134247206509], [-0.20193130976168838, 0.92868241175120247, -0.71963576346643632]], [[0.39294953221029227, -0.19690673952845006, 0.030349844705207074], [-0.49159084620023963, 0.86699532490864639, 0.24366605416830489], [-0.62947099542192952, 0.2613604555890594, -0.1733771831274673], [0.07266681417724441, 0.052454431576554938, 0.36841816412634443], [-0.10238822883439314, -0.36876150270200703, 0.44061409298277421]], [[0.641048596194014, 0.89270439372745813, -0.0022362000049820363], [-0.31437780038211738, 0.21636800273064249, -0.53648148395716699], [0.84478203924979778, 0.13022289378280894, 0.93841781203820873], [-0.93001715790971473, 0.86770594028720827, -0.5068601601584759], [-0.45787225739197512, -0.85518200613815809, -0.02222048190993875]], [[-0.28367690981584004, 0.82720048362230769, -0.043649918465654469], [-0.32618891373664316, -0.12441456717194632, -0.31446195927819742], [0.034666977137569832, 0.75863782929351919, -0.94524586863817861], [0.63679702686775896, -0.17730725764332611, -0.019191874324332892], [-0.13323489670441524, 0.88916222787870303, 0.74326150321244056]]]))
      arg1=numarray.array([-0.23586641045662016, 0.47520789345243331, -0.60707366179882727])
      res=generalTensorProduct(arg0,arg1,offset=1)
      ref=Data(numarray.array([[0.28016232595701301, -0.86180287135143696, 0.28702527309864256, 0.73115200624854237, 0.1589518225861517], [-0.84522125469452924, 0.23049507271560191, -0.76399358265721817, -0.58606792110111328, -0.49821571850747548], [-0.083219330797615482, 0.65163610012934581, 0.16904068181696269, 0.77614971745914463, 0.014234058119383813], [-0.5764934701401776, 0.50765315736100813, -0.010061428911204467, -0.1393652656241931, -0.012178481793887141]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[0.0043514826636586457, 0.0099100396156003162, 0.41359585561237838, -0.51053344792959987, 0.92581794385587168], [-0.20467982391116724, 0.38002954652950455, 0.37792433714252871, -0.21586986465694666, -0.41857364374441697], [0.27437588123195855, 0.50265472504466302, -0.70706149763354387, 0.93940197416662519, -0.28490308453662405], [0.48650076957284455, 0.20871579694867826, 0.92616778006747191, -0.2228059558924034, 0.0027480636516628021]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank4_array_rank2_offset2(self):
      arg0=Data(numarray.array([[[[0.60717548571646529, -0.24667080943012065, -0.91649436690720787], [-0.70035218225951401, -0.11302595922692715, -0.24875957009374683]], [[0.68488457713057294, -0.46588274502204885, -0.2133898948367059], [-0.91610961848447126, 0.35130473246077187, -0.27958138289675771]], [[0.43060958676182093, -0.19477375375555228, 0.83345023930531759], [0.62966218982863897, -0.4652472862401491, -0.00073233098805713936]], [[0.62994725065457691, -0.4322689455914146, 0.5824816766814136], [-0.45399131692405836, 0.26944825701690522, 0.96475614688801214]], [[-0.17031306673909086, 0.55592285374479489, -0.33404370755492985], [0.45332007607408586, 0.023764745737286264, -0.86546031851751448]]], [[[-0.36435488770085622, -0.44686576566745395, -0.98496677479830019], [0.49548059549399137, -0.79188786700688363, 0.50609297372076423]], [[-0.086877719678797316, -0.49624200942062036, 0.60636028579071533], [0.61417642793808147, -0.10673023904954015, 0.51890840725616139]], [[-0.84085595233184374, 0.22269058957471288, 0.81795858696030499], [-0.74890928715565552, -0.42114194199294652, 0.27845274667644593]], [[0.16748913676673904, -0.69032504518566329, -0.44118576300499157], [0.28748632693893073, 0.029348810755292831, -0.16063619059210388]], [[0.75791378771843365, 0.59754918772645182, 0.09760938272276376], [-0.37380771923451883, 0.45900166790837216, 0.73832603022948762]]], [[[-0.9982431230768869, -0.029678921136552239, 0.95608617652906691], [-0.62261168969079494, -0.63549962053565645, 0.52031501174493955]], [[-0.35460442383805968, -0.62026719276254116, -0.21301518422665056], [0.38229943107097553, 0.25137976919612193, -0.13619186988301712]], [[-0.41252313384430295, 0.90137402337048389, 0.54084556338878875], [0.8478880252883858, -0.54136243279776242, -0.11693753092009707]], [[-0.48366728866350761, 0.35270344755428673, 0.98021928526511171], [-0.095990151862184847, 0.43940013873884531, 0.084775411109581533]], [[-0.16629849103140981, 0.095484454024376664, 0.81642687236628242], [-0.55283473879853462, -0.9639797770456342, 0.79649979015597516]]], [[[-0.8753499942164229, -0.64873176851626524, 0.59444721516868348], [0.948282890145, 0.99144703330592421, -0.53704074426137316]], [[-0.36634772267297167, 0.015363810797463628, 0.039324161894908061], [-0.22681274380368555, -0.40544556902880635, 0.051310510529955833]], [[-0.34553982527570914, 0.84601226556231279, -0.31159555401771311], [0.95110991899369379, -0.97751025595768182, -0.38943321929388208]], [[-0.74568357708570643, 0.51698318208579086, -0.66464432989167421], [0.65117455999332652, -0.94917321943025601, -0.66926602409958025]], [[-0.41495647309628514, -0.68191341597316502, -0.94946436976218584], [-0.057675798022862379, 0.53254982497571524, 0.74394623910872593]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[0.25754118662566561, 0.0094520765560983655, 0.71469108217810762], [0.068614449517544251, -0.77719386650845945, 0.79864565928463715]], [[0.48115317838934102, -0.042744135760025781, -0.67208504249491607], [0.78335160350378485, 0.44641095822909693, 0.78204844208079494]], [[0.908737232960527, 0.70203375717279481, -0.97900682077208012], [-0.625376614349195, -0.052080145490269514, 0.7010185829804545]], [[-0.7493707945269501, -0.30359739236268091, 0.21969667001343307], [-0.19161056254850095, -0.89825383598973807, -0.99812043120798744]], [[0.85413539998767751, 0.04981810646564, -0.50122463455594501], [0.86226398002924687, 0.45873593638012333, -0.25604465306819879]]], [[[-0.3771641245541788, -0.6641601584447534, 0.68600132227745592], [0.65642364805785114, -0.44277838197080754, -0.26890043602819858]], [[-0.20393354897643956, -0.98421404071748397, 0.30012286751667605], [-0.16811511061409923, -0.42770111600889349, 0.04560743562698133]], [[0.50898119931151831, 0.61533105806271937, -0.0865775191983158], [-0.71959700276152616, 0.86092112891642203, 0.98617985834745747]], [[-0.80393322893086783, -0.41198795148303269, 0.71506684614257598], [-0.51837428936959151, 0.25016860393489915, 0.76281609801181216]], [[0.91628131520079736, 0.0032131811095674756, 0.84506748693743217], [-0.93133322826644838, -0.30774473968868299, -0.68767782230986851]]], [[[0.29751713383408429, 0.60739038003985546, -0.11005487436793637], [-0.038536823113788365, 0.48398297978745863, -0.40150720965330278]], [[0.28081263541359003, 0.57408622617607152, 0.70195691686748241], [-0.49262769592488409, -0.052366994401104483, -0.67849107344770876]], [[0.036554127359084587, -0.014858305069091804, -0.94665286284596983], [0.68102946186903401, 0.98872546664999961, -0.054851173230963779]], [[-0.31360048117555994, -0.26391526983962987, 0.36754213273500635], [-0.66675310446053704, 0.98197520271257743, -0.061853930643879007]], [[0.2650933494303036, -0.90018064705555867, -0.64285340191226159], [0.50329721655481419, -0.15585351949605597, -0.34577104737123987]]], [[[0.70748547218640101, -0.53474174068213842, 0.17183050214992068], [-0.52803307596404903, 0.8658348542269696, 0.6155943431977875]], [[-0.99579577791161555, 0.83559550899297297, -0.26884492635767288], [-0.2002337599047368, -0.014179584940107182, 0.1211769532327811]], [[0.79664441325127955, -0.58621221536196066, 0.37563112068435189], [0.79412250007613516, 0.99739915606962537, -0.6698238948463322]], [[0.38727352674960391, -0.067537665956955983, 0.32668509970205251], [0.81281553728867695, -0.86408293453697316, -0.53371533397355564]], [[0.02958898591947956, 0.81576024520197743, 0.72582006678413391], [0.021952904482965385, 0.97348253066959889, -0.71865592404395318]]]]))
      arg1=numarray.array([[0.30596574420746081, -0.0084684716953276062, 0.93595690930123387], [0.21346187374327186, -0.77500335886103588, -0.35262120165811872]])
      res=generalTensorProduct(arg0,arg1,offset=2)
      ref=Data(numarray.array([[-0.64412050345850624, -0.35545771242846164, 1.4087100445699288, 0.095654073295972364, 0.014060155318963985], [-0.48855944204240487, 0.57598934302081073, 0.57474952257041334, -0.26057325702023115, -0.37767743862075803], [0.76581497575309965, -0.36780679651152232, 1.0141410569193399, 0.37555010316647042, 1.0606658359100987], [-0.08253695334592584, 0.17229839009550152, 0.69339405447648095, 0.25600062371569826, -1.6972161424932264]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[1.082993826481933, -0.93598542373122395, -0.98453667870916095, 0.98612244548210182, -0.28938500318141425], [1.1103889468416552, 0.50634166637997835, -1.0990841473730231, -0.14673514968297907, 1.3534590880024067], [-0.25885485973480449, 0.91273654355183431, -1.4762661957964824, -0.63126188709331721, -0.16280247469646708], [-0.61899075704623563, -0.63786549002137016, 0.23300605254433268, 1.4561991964752732, 0.18512847254528919]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank2_array_rank1_offset0(self):
      arg0=Data(numarray.array([[0.9038006870589621, 0.46992225205028881, 0.052538692829439126, 0.21287832777757298, -0.79914637303251124], [0.72368961294003675, 0.099701467353720208, 0.53605100398297711, 0.30444093518766446, 0.34605836408808544], [-0.12561870769655514, -0.51699289435615547, 0.57349374383192031, 0.69099082411244783, -0.77960913973922308], [-0.01267955473344462, 0.38086832813387694, -0.83658306821364681, 0.43670756763654772, 0.72339579393369791]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[-0.75528657643143693, -0.10954713725317577, 0.012839050800836471, -0.62778121855298075, -0.93689377046221667], [0.79787689075398527, -0.75938448490273069, 0.16991489868980802, 0.75072269543404779, -0.029256549457009617], [0.71777875195927776, 0.10275395697018008, 0.070234583485319302, -0.99684170701952923, -0.96278346493485478], [0.11919074502422999, -0.8160395327138823, -0.17913320763015506, -0.071152536453349402, -0.30683331651537027]]))
      arg1=numarray.array([-0.70513730798999608, 0.014499239522407725])
      res=generalTensorProduct(arg0,arg1,offset=0)
      ref=Data(numarray.array([[[-0.63730358343226545, 0.01310442264218456], [-0.33135971177533707, 0.0068135152893863925], [-0.037046992427064017, 0.00076177109152824316], [-0.15010845097848982, 0.0030865738635766525], [0.56350792217011414, -0.011587014676061774]], [[-0.51030054548885972, 0.01049294903789613], [-0.070303224292454738, 0.0014455954558971035], [-0.37798956189389116, 0.0077723319029763226], [-0.2146726614801866, 0.0044141620397117531], [-0.24401866326049448, 0.0050175831096457308]], [[0.088578437378331099, -0.0018213757313876758], [0.36455097777625589, -0.0074960038066527309], [-0.40439183467474471, 0.0083152231564213499], [-0.48724340956044032, 0.010018841466592288], [0.54973149008011246, -0.01130373965093723]], [[0.0089408270912529515, -0.00018384390111769218], [-0.26856446759897246, 0.005522301116112063], [0.58990593263018221, -0.012129818286420426], [-0.30793879862209439, 0.0063319276244103778], [-0.51009336274569372, 0.010488688885746987]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[0.53258074326584381, -0.010951080979738714], [0.077245773460714984, -0.0015883501820278699], [-0.0090532937188486321, 0.00018615647280168871], [0.4426719584571282, -0.0091023502554686605], [0.66063875117632476, -0.013584247184983363]], [[-0.56261276285369333, 0.011568608148435975], [0.53547033141368139, -0.011010497536204906], [-0.11981333424952414, 0.0024636368145291693], [-0.52936258050535823, 0.010884908176005804], [0.020629884525191943, -0.00042419771817635011]], [[-0.50613257688898428, 0.010407246048752452], [-0.072455648603272679, 0.0014898542339858178], [-0.049525025126636688, 0.0010183480487101866], [0.70291027777990323, -0.01445344667600194], [0.67889454064144428, -0.013959628066304099]], [[-0.084045841083707551, 0.0017281751609605374], [0.57541991931128134, -0.011831952644572255], [0.12631350779994055, -0.0025972952838468131], [0.050172308011374858, -0.00103165766866396], [0.21635961880929058, -0.0044488497496110958]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank3_array_rank2_offset1(self):
      arg0=Data(numarray.array([[[-0.58646806369627469, 0.38513664314786999, 0.75747753943053819], [-0.83407156866952725, -0.3197913100591383, 0.19398617773836335], [-0.80566383074533365, 0.99967265838497887, -0.4025637078320079], [-0.61978587779873684, -0.91606275097440371, 0.91030040320821981], [-0.73583051325369464, 0.38422127510604587, -0.66969106753985885]], [[0.59294843031305167, 0.078783983670937863, 0.34116898404371776], [0.11350985953856418, -0.47478026526239447, 0.12672690424440747], [0.42679550210393868, 0.89510445094387237, 0.5533861693070794], [0.56791834632298599, 0.57018919421020176, -0.48847627585659303], [0.99439915751551156, 0.038791985424017961, -0.82058562089128317]], [[0.41298926547632075, 0.056205269732152896, -0.97328422184455921], [-0.069115937576003761, 0.56227198226236363, -0.96789596812074774], [0.20295171700709158, -0.38712909121585737, 0.40554709888776586], [0.46473707332403769, -0.46584742886246566, 0.88672254551120688], [-0.42815634624957077, 0.14047792548176852, -0.29076668041370901]], [[0.81666473725694888, 0.95049134482306874, -0.42104456215700381], [-0.16678027641880733, -0.76397535610323009, -0.02693033649011789], [-0.30291798364800937, -0.28278434681092524, -0.93521569835476193], [0.84985396984011863, -0.0068539612313827103, -0.84543453119297318], [-0.9855089294538788, 0.12795215506488766, 0.067959068158940372]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[0.014528421656784252, 0.40580703648531991, -0.62560333170719074], [-0.32744057415153449, -0.85785960912842874, -0.68465866798093478], [0.9730093615454789, -0.77654433474465323, 0.26514540192309455], [0.42882281925289711, -0.018009042409084186, 0.58815470650076529], [-0.090002413335897202, -0.19456907881770436, 0.69864619360781721]], [[-0.81548974823631526, 0.76179982633249232, -0.36164531638878206], [0.4706057385389022, 0.59220576083332244, 0.62763541623975194], [0.54461196641281373, 0.15463832792366983, -0.12423786222970756], [0.23354321719491944, 0.94694292654355672, 0.94428991575624321], [-0.95816080170405193, -0.97975393462725946, -0.59973251687981954]], [[0.2114285595698604, 0.15502179112464276, 0.6373452319712325], [0.54166591734491654, -0.18987077123034912, 0.85758708347418233], [0.23540574326113806, -0.42336735029731543, 0.93717894732737617], [-0.43375172115433402, 0.017785792863463712, 0.68859938835605283], [0.92717561155497674, -0.37264163426933528, 0.70042322348829433]], [[0.42641184032046309, -0.43662303949147763, 0.24319521913022224], [-0.27917042890602994, 0.40544267576020054, 0.36566837874562275], [0.12229811541984814, -0.78254473375854272, -0.80864913529661786], [0.18537659699924514, 0.92286988955790927, 0.78160921102179093], [-0.55180484243746375, -0.51088343872765107, 0.26132713158628484]]]))
      arg1=numarray.array([[-0.38482727972520103, 0.20012427794834853], [-0.19631146703729629, 0.49151806357053518], [0.57157927146794441, 0.48284234954359717]])
      res=generalTensorProduct(arg0,arg1,offset=1)
      ref=Data(numarray.array([[[0.58304063031280351, 0.43767735412825809], [0.4946306722372586, -0.23043643406601461], [-0.11630285660797113, 0.13574947032619469], [0.93865297719012075, -0.13476400526955112], [-0.17504091992181317, -0.28176106155383807]], [[-0.048643811521016878, 0.32211796141838889], [0.1219575915292084, -0.14945788172734739], [-0.023657756497038274, 0.79257042630461383], [-0.609688063409214, 0.15805550486764619], [-0.85931696568171478, -0.17814311424493109]], [[-0.72627236099846559, -0.35966775655406374], [-0.63701201178408073, -0.20480610454175402], [0.22969883798620999, 0.046149938635740906], [0.41943991501829925, 0.29217994234892036], [-0.029007392971398788, -0.15703150887494116]], [[-0.74152756368779682, 0.42731996046297038], [0.19876590091162447, -0.42188757698669771], [-0.36246499392625697, -0.65117660243136144], [-0.80893433360600908, -0.24150402910295021], [0.39297623986318703, -0.1015199512887808]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[-0.4428374042164866, -0.099698803913447265], [-0.096920958846319516, -0.81776450225055419], [-0.070444372513199432, -0.058939342938860495], [0.17468970117023033, 0.36095208780104282], [0.47216320755176394, 0.22369008478765323]], [[-0.042436306509813171, 0.036621404160646381], [0.061384686079674733, 0.68830842145753257], [-0.31095060533731689, 0.12501030673395647], [0.26396698602073115, 0.96812038285144197], [0.21826867202752476, -0.96289425287098462]], [[0.25249729068977012, 0.42624526768179694], [0.31900498854852521, 0.42915494911701119], [0.52819337377016273, 0.29152738906825004], [0.55701707656832311, 0.25442273503057233], [0.11669875328100593, 0.34058425021592309]], [[0.060624547046654265, -0.011847798225766759], [0.23684781577990072, 0.31997379751649457], [-0.35564822999211287, -0.75061009859449523], [0.1942437099568749, 0.86809960654073193], [0.46201100528298256, -0.23535817796026032]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank4_array_rank3_offset2(self):
      arg0=Data(numarray.array([[[[0.24135703759662408, 0.64985530933423208, -0.15862117902528494], [0.56351402212986534, -0.77057151762352283, -0.92859008384884856]], [[0.13825819025384556, 0.90736245643497071, -0.92259683932522507], [0.37244397987283229, -0.3228061124570043, -0.12697036552933016]], [[-0.020302572388321671, 0.25368682227615835, 0.77515507770718584], [0.63353800735385102, -0.37351738788496269, 0.87558013979232907]], [[-0.61590509039825347, -0.47193364229892154, -0.67877940887533583], [0.76015182032052109, -0.35574734001651187, 0.65953475866620614]], [[0.30992081441558383, 0.42184709034577605, 0.53057395566794874], [-0.99327902377536725, -0.45116350953052486, -0.25528367267124863]]], [[[0.73311412126065245, -0.43906651215216841, 0.79215964353484969], [0.50860553987539947, 0.80296267185925241, 0.95284121880886863]], [[0.73309290748556744, 0.3609505816737224, -0.63725995530577739], [-0.41527240577098623, 0.1296582395343544, -0.47221903331905879]], [[-0.73486754065998428, -0.043502474687777015, -0.46744691567144625], [0.27034853756941279, -0.21808506197701671, -0.49958242696428345]], [[-0.77036558937696409, -0.92758317256678757, -0.75453218528968069], [0.51471888146401135, 0.060458187975295896, 0.99254676161893696]], [[-0.63883266819617379, 0.15808433478459127, 0.82245611842908639], [0.89867330152634595, -0.70606501778548969, 0.37092169400724395]]], [[[-0.60543291639920938, -0.66989104391167165, 0.42932628254953209], [-0.59136991422747465, -0.64500875229293997, 0.30125104447277296]], [[-0.0014911752181099303, 0.34710426736062638, 0.0488767473045435], [0.67806257663801972, 0.1498297933384245, 0.91085876933528609]], [[-0.47521057290941315, -0.29507685942253925, -0.083197981160737955], [-0.037096660196674458, -0.50703984438143257, 0.7108791899708764]], [[-0.89620963927210928, -0.58031148641377595, 0.74785813873056695], [0.4272883185644567, 0.94351508608269508, 0.25029514869758729]], [[0.42906714200895868, 0.32803031561979878, -0.86046963285649047], [0.33691549122688258, -0.16380793259683779, 0.34714981596975503]]], [[[0.76030671852660148, -0.26626265011262285, 0.53005864567296523], [-0.34458480429809057, -0.55222742793627555, -0.8869194580075892]], [[0.30661383495997785, -0.54418201509328101, 0.21021569033174869], [-0.86379784035097917, 0.7062739149018753, 0.29459828264271026]], [[-0.73244319536572111, -0.51801642549930693, 0.35745063598024429], [0.074737153382290256, -0.56844792553077172, -0.84263939542063326]], [[0.52356758345808041, 0.070515438339859404, 0.94655817729553471], [0.67362369594533877, 0.48041950284802648, 0.8230808677889625]], [[0.081887400233132457, 0.73420362001195594, -0.52153148893139289], [0.33768220839245666, -0.3292731761706853, 0.44143618993744749]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[-0.16021591731331219, -0.33733741291303665, 0.15990847887684478], [-0.49194428119070865, 0.042638861289690189, 0.21236112227988824]], [[-0.53000546699672801, -0.54520717882167657, -0.060217587438492703], [-0.1731158707688194, -0.9445566657975164, -0.61284879223356792]], [[0.56721131315750428, 0.65778933884659252, -0.48373550863018244], [0.2728497209269849, 0.020426511369573852, 0.76154630950487956]], [[-0.79290353879321218, -0.81666383090269834, -0.45532537287976549], [-0.37629682425342392, -0.92281287158206471, 0.55566653918843767]], [[0.66336466591323529, -0.18168927594142792, -0.53432229558622857], [0.081719094229427913, 0.75007795706980152, -0.66910206584517251]]], [[[-0.72335235432393152, 0.23817965424575083, 0.21091746658014277], [-0.85935044686781215, -0.57688531239023666, 0.0026109718230258316]], [[0.33865644480493362, -0.10490131629017885, 0.63388452637649473], [0.76627834750670276, 0.053438499434298681, 0.079933698538277476]], [[-0.14887408074263764, 0.30468492117854384, 0.49259640204090172], [-0.9472555027519205, -0.034612728963479666, -0.8706089024863044]], [[0.20620942468799641, -0.70883039007503701, 0.57110384701273609], [-0.48806691338637798, -0.73793007462206139, 0.51585665365250999]], [[-0.084455186725344467, 0.14865106012629581, -0.38167731545131378], [-0.3557484816697627, -0.74089941357786193, -0.093348663787181874]]], [[[0.30815340091377497, -0.27580653241068087, 0.82891560695284672], [0.37363426216061812, -0.29993027311881204, -0.34995026891513437]], [[-0.99845191338549877, 0.26070849774447491, 0.80926649983947629], [0.33615942399466858, 0.047970821031055433, 0.88391431522987696]], [[-0.17974000073522944, -0.028485472788176702, -0.70635584223229242], [-0.33184616440504833, -0.96629525129238303, 0.61564303339590953]], [[-0.46961035269458051, 0.019133269815456044, 0.91233324591247689], [0.34883852248663372, 0.58687625555674816, 0.72094643162995276]], [[-0.69475317817361093, 0.29766580146149924, -0.18815399726184778], [0.62444737195932398, -0.97723468550048898, 0.42439268158998611]]], [[[0.35686059947367377, 0.81460381115691538, 0.23916084686256345], [-0.88550230920876771, -0.54192302477725973, 0.36640103454629713]], [[0.31886072850117175, 0.62312940917233606, 0.15344716733365815], [0.062982117108143942, 0.49743897591546049, -0.18420507032723599]], [[-0.95449325754586667, -0.36189243135349214, 0.93949573375184903], [-0.49807449388086567, -0.82996395358374664, 0.14130420731056592]], [[-0.99190913204574094, -0.66726802915460182, 0.60177137350096066], [-0.87856400433838466, 0.25794229241357503, 0.50885595967772601]], [[0.87605986493548138, 0.87560141528865354, -0.34457320342396769], [0.26103568396883747, 0.11684111306340084, 0.12791894317638297]]]]))
      arg1=numarray.array([[[-0.59304290598476772, -0.67549693864092974], [-0.71479448891490072, -0.70916394238691294], [0.84033001367315729, -0.17762434528139703]], [[0.69043796022836768, 0.65841368079136142], [0.17687776754896145, -0.26013222090376331], [0.96084839120957732, 0.26954708178242326]]])
      res=generalTensorProduct(arg0,arg1,offset=2)
      ref=Data(numarray.array([[[-1.380401996133513, -0.27453783563325779], [-1.4278035710472865, -0.27801607036384879], [1.6947439676125433, 0.44642643585601921], [1.2278217901117281, 1.6420994466162191], [-1.0503603399957064, -1.2081894598988825]], [[1.9534724868522408, 0.058278908479284797], [-1.9457867730081684, -1.0724168513337962], [-0.25784483934313407, 0.71035225476317998], [1.8055972690044038, 1.9029203359481794], [1.8089824020211633, 1.04868348968156]], [[0.96572251932393693, 0.66739471262233241], [1.1637075960413004, 0.39916119657726645], [0.99057591928589739, 0.84412700645474226], [2.2771404692608774, 0.98744516367303481], [-0.67480433961452291, -0.011605747736822755]], [[-1.0029335603214418, -0.74120606377863474], [0.19538331992093605, -0.53159467821434969], [0.24642888522261008, 0.76857836709600214], [1.7754459855781852, -0.031397571704898902], [-0.4125652425722568, -0.056371747430556465]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[0.3424494343271014, 0.041295986644712679], [-0.2220271961403173, 0.72189061435988122], [-0.28933295950335114, -0.3840998027273636], [0.78222565547849832, 1.3377020049867145], [-1.1663518422754471, -0.54601365435229832]], [[-0.25688785216060334, -0.13278805206404365], [1.0221411806684459, 0.24521048225360284], [-1.2122213864717621, -1.0523568727036099], [0.89244941092855989, 0.27159828377828649], [-0.84326911661236015, -0.047233285731983821]], [[0.57963059214900525, 0.069899141059402259], [2.1757126021761177, 0.79293044429325743], [-0.27511294074567283, 0.4658979427199561], [2.0688606802406695, 0.41294277366842785], [0.70720522378108597, 1.0713792528329089]], [[-0.94811662246552819, -1.2045195466475693], [-0.55108330582613119, -0.82212986419017509], [1.2593008449115399, 0.66057046457748569], [1.4988544784990907, 0.52794773974464837], [-1.1111651078179363, -0.97556061369242164]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank2_array_rank2_offset0(self):
      arg0=Data(numarray.array([[-0.32469319264933794, 0.222953017153533, 0.012114124132450499, -0.38317849649625524, 0.19060188522206611], [-0.8669423934944418, -0.012385655424806741, -0.51008365193221139, 0.24876792700017236, 0.76477926762227688], [0.77494615806551814, -0.94768164079542316, -0.74369451254477359, 0.79370770337187868, -0.30309847419368086], [0.65769473825300961, -0.53418601020932033, 0.62642135793794207, -0.76995664383444629, 0.54098707306082794]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[0.88031928483668209, 0.750976774548753, -0.81620424898958444, -0.65210310206070554, -0.9199465757791685], [-0.20851843803358183, -0.83405330230036867, -0.11207012022865293, -0.82085607488636003, -0.98138615966111864], [-0.70204223020531664, -0.53189794603211205, 0.97381021824443392, -0.57686414156609489, -0.2585247819153027], [0.53832531491089552, 0.77652538059281651, -0.64783081048308255, 0.94369150723482975, 0.98083355662547578]]))
      arg1=numarray.array([[-0.004921550035238198, -0.9539230636480549, -0.38371326351008128, 0.87141879740616135, -0.37779013985090959], [-0.3150497113083095, -0.24971606836915639, 0.85614898535404071, 0.40786883363843796, 0.81591332718149867], [-0.76787745053497347, -0.45159978637286824, 0.85451657531136038, 0.69445878603797917, -0.27590151844614397], [-0.85130927490356778, 0.75406197721017909, -0.77900956463820648, 0.56433522435361949, 0.58982800696287896]])
      res=generalTensorProduct(arg0,arg1,offset=0)
      ref=Data(numarray.array([[[[0.0015979937937249521, 0.30973232507772452, 0.124589084590985, -0.28294375146445311, 0.12266588665963171], [0.10229449660794723, 0.081081107494621732, -0.27798574743809473, -0.13243223377622609, -0.26492150312770463], [0.2493245809776346, 0.14663137643716556, -0.27745571500962402, -0.22548604040205492, 0.089583344881078691], [0.27641432640043234, -0.24483879083584537, 0.25293910264675007, -0.18323580571985712, -0.1915131386947731]], [[-0.0010972744294284328, -0.21268002517267554, -0.08555002982140128, 0.19428545008600698, -0.084229451530615479], [-0.070241283689537151, -0.055674950874621341, 0.1908809994176193, 0.090935587062582146, 0.18191033803089285], [-0.17120059440093513, -0.10068553491772193, 0.19051704867337199, 0.15483168163594727, -0.061513075974808935], [-0.18980197137053689, 0.16812039293976808, -0.17368253282754831, 0.12582024095565542, 0.13150393375402894]], [[-5.9620268050941661e-05, -0.011555942405840016, -0.0046483501054288131, 0.010556475483128972, -0.0045765966501697527], [-0.0038165513106815548, -0.003025091450091456, 0.010371495084450393, 0.0049409736804538387, 0.009884075326797373], [-0.0093021627542902857, -0.0054707358703090531, 0.010351719866558305, 0.0084127599389349616, -0.0033423052427881692], [-0.010312866231288246, 0.0091348003954851691, -0.0094370185663934531, 0.0068364269601340483, 0.0071452496931441933]], [[0.0018858321429336647, 0.36552280530176329, 0.14703067139746434, -0.33390894460866777, 0.14476105777918152], [0.12072027470069729, 0.095685827628649425, -0.32805788098475575, -0.15628656644125791, -0.31264044198066382], [0.29423412698936874, 0.1730433271603857, -0.32743237655893614, -0.26610167351264746, 0.10571952901922728], [0.32620340801086634, -0.28894033469238989, 0.29849971373427031, -0.2162411227876968, -0.22600940889941873]], [[-0.0009380567149311265, -0.18181953428812822, -0.073136471409732923, 0.16609406560356005, -0.072007512873891372], [-0.060049068914031473, -0.047596353401403557, 0.16318361063943923, 0.077740568614811531, 0.15551461833860208], [-0.14635888969147975, -0.086075770648551014, 0.16287247020784892, 0.13236515382786629, -0.052587349551465691], [-0.16226115270365016, 0.14372563443053879, -0.14848069162606312, 0.10756335765901751, 0.11242233008389867]]], [[[0.0042667003672520578, 0.82699634400859545, 0.3326572950829933, -0.7554698979593456, 0.32752228808094747], [0.27312995079135877, 0.21648944600597811, -0.74223185055066987, -0.3535987828662937, -0.70734985275074203], [0.66570551487719976, 0.39151099969967301, -0.74081664508110423, -0.60205576215101009, 0.23919072277045095], [0.73803610038891676, -0.65372829536574384, 0.67535641652250977, -0.4892461301343497, -0.51134690410645456]], [[6.095662289240579e-05, 0.011814962368120798, 0.0047525402637639364, -0.010793092955372188, 0.0046791784950829156], [0.0039020971659495612, 0.0030928971768578528, -0.010603966324893061, -0.005051722831963517, -0.010105621326977647], [0.0095106655108052642, 0.0055933593439306808, -0.010583747856592428, -0.0086013272305959995, 0.0034172211386549003], [0.010544023338897666, -0.0093395518186737518, 0.0096485440402375392, -0.0069896616329249367, -0.0073054064541427299]], [[0.0025104022151414035, 0.48658055996796318, 0.19572586274604922, -0.44449648254331064, 0.19270457419913284], [0.16070170728433142, 0.12737608409989307, -0.43670760104744644, -0.20804722417162602, -0.4161840495889001], [0.3916817342052753, 0.23035366824487916, -0.43587493537142524, -0.35423207369866261, 0.14073285410265149], [0.43423894386657474, -0.38463468711859211, 0.39736004362077842, -0.28785817215227805, -0.3008616238035231]], [[-0.0012243237998938318, -0.23730546306138009, -0.095455553125873796, 0.21678104777971394, -0.093982069931815987], [-0.07837426358417092, -0.062121348666828349, 0.21298240828982565, 0.10146468423221237, 0.20297306701475482], [-0.19102328155976275, -0.11234354268969912, 0.2125763170274938, 0.17275907258972431, -0.068635448800047044], [-0.21177844355378042, 0.18758643490022747, -0.1937925945083534, 0.1403885038956271, 0.14673029057879863]], [[-0.0037638994315158602, -0.72954058198475802, -0.29345594864419372, 0.6664430296725693, -0.28892606647009622], [-0.2409434874789787, -0.19097767188087783, 0.65476499399461874, 0.31192962787595685, 0.62399359680512168], [-0.5872567542437982, -0.34537415388061887, 0.65351656063771835, 0.53110768177998124, -0.21100376121311609], [-0.65106368378080215, 0.57669096667260678, -0.59577036431475627, 0.43159187957461442, 0.45108823118817781]]], [[[-0.0038139362915350569, -0.73923901326414887, -0.29735711935591924, 0.67530264911597881, -0.29276701743249717], [-0.24414656337802507, -0.19351650778990401, 0.66346936693180536, 0.31607638562277146, 0.63228889821375645], [-0.59506368015722266, -0.34996551943286297, 0.66220433704084269, 0.5381681681749757, -0.21380882172428195], [-0.65971885191206192, 0.58435743218231662, -0.60369046921267, 0.43732941397387964, 0.45708494791532472]], [[0.0046640626126513082, 0.90401537415058553, 0.36363801515820038, -0.82582759574584541, 0.35802477961024237], [0.29856682734478313, 0.2366513334050642, -0.81135667520565402, -0.38652980549179039, -0.77322608065021559], [0.72770336225279009, 0.42797282653270236, -0.8098096701779558, -0.65812584181726985, 0.26146680369899045], [0.80677017046497512, -0.71461069182398351, 0.73825306241166377, -0.53481013137409139, -0.55896917342567543]], [[0.0036601297544211851, 0.7094273478249572, 0.28536544846309414, -0.64806937775932794, 0.28096045390064406], [0.23430074147880486, 0.18571246974039712, -0.63671330232857581, -0.30332981341494347, -0.60679026413702897], [0.57106624626973057, 0.33585228299189412, -0.63549928793761146, -0.51646518836495015, 0.20518644527116789], [0.63311403622425355, -0.56079175456987229, 0.57934513844132729, -0.41969300958751049, -0.4386518521235136]], [[-0.0039062721754986986, -0.75713608404156407, -0.30455617313391509, 0.69165181236432871, -0.29985494425760634], [-0.25005738281049172, -0.19820156712033815, 0.67953204490951991, 0.32372863522413142, 0.6475966930677356], [-0.60947024773516711, -0.35843822928524027, 0.67823638848358281, 0.55119728815262736, -0.21898516056270295], [-0.6756907294428901, 0.59850480013154916, -0.61830589245371792, 0.44791721485356523, 0.46815103279091913]], [[0.0014917143063485541, 0.28913262508988696, 0.11630290469778343, -0.26412570787749978, 0.114507614954228], [0.095491086792708249, 0.075688559304336198, -0.25949745114327777, -0.1236244211469668, -0.24730208454300176], [0.23274248362488412, 0.13687920619580859, -0.25900267015008288, -0.21048939843850736, 0.083625329268745927], [0.25803054229020023, -0.22855503473987543, 0.23611661042412399, -0.17104914543533065, -0.17877596894714837]]], [[[-0.0032368775622250768, -0.62739017965951649, -0.25236619440847102, 0.57312755786879765, -0.24847058714381187], [-0.20720653741560485, -0.16423694422362295, 0.56308468282800561, 0.26825318578139279, 0.53662190215777794], [-0.50502895883998766, -0.29701480329361862, 0.56201105533226337, 0.45674188951075151, -0.18145897695804455], [-0.55990163073006138, 0.49594259472779562, -0.51235049171131619, 0.37116030766820723, 0.38792677665374503]], [[0.0026290231773694328, 0.50957235541680601, 0.20497425729884791, -0.46549973060780137, 0.20181020750337855], [0.16829514830138403, 0.1333948302472775, -0.45734281063103283, -0.2178778249300462, -0.43584948492369657], [0.41018939163098223, 0.24123828809390388, -0.45647080002330781, -0.37097016816843614, 0.14738273134943886], [0.45475750501492634, -0.40280935905645698, 0.41613601124898314, -0.30145998191804169, -0.31507786974921553]], [[-0.0030829640562334386, -0.59755778089873646, -0.24036618358678452, 0.54587534640381608, -0.23665581242097183], [-0.19735386797570786, -0.15642747864673093, 0.53631001000266942, 0.25549774862835489, 0.51110553437269879], [-0.48101483529404304, -0.28289175142417666, 0.53528743348702212, 0.43502381578184568, -0.17283060384217366], [-0.53327831201025777, 0.47236052773336989, -0.48798822932731034, 0.35351163757180754, 0.36948086107151656]], [[0.0037893801475953038, 0.7344794005627292, 0.29544257656698469, -0.67095469262509733, 0.29088202815335246], [0.24257461835995719, 0.19227054591304879, -0.65919759938546374, -0.31404131827292181, -0.6282178870564632], [0.59123234469005925, 0.34771225587200655, -0.65794071442763991, -0.53470315617914632, 0.21243220717162059], [0.65547123216988701, -0.58059502921591621, 0.59980358990376659, -0.43451365534087216, -0.45414199268069871]], [[-0.0026624949484859274, -0.51606004612817913, -0.20758391532093706, 0.47142630461894586, -0.20437958198918443], [-0.17043782118934117, -0.13509316492328752, 0.46316553369068014, 0.22065176650279231, 0.44139856274324063], [-0.41541177443432598, -0.24430964662475316, 0.46228242095965538, 0.37569322602006211, -0.14925915491721745], [-0.46054731289961687, 0.40793778195739555, -0.42143410426001315, 0.30529806124819026, 0.31908932709614951]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[-0.0043325354073088379, -0.83975686917987247, -0.33779018571554409, 0.7671267725258335, -0.33257594573190286], [-0.27734433654693419, -0.21982987071896376, 0.75368446250052012, 0.35905479993576134, 0.71826423667313477], [-0.6759773280971626, -0.39755200097216176, 0.75224742045918758, 0.61134546187350425, -0.24288142740386412], [-0.7494239720579432, 0.66381530050019932, -0.68577714282324098, 0.49679518111112686, 0.5192369692662071]], [[-0.0036959697712434835, -0.71637406550608107, -0.28815974898237656, 0.65441527775723229, -0.28371162068155842], [-0.23659501602083005, -0.18753096757686494, 0.6429480035543651, 0.30630002112475607, 0.61273195875810327], [-0.57665813105147401, -0.33914095095720248, 0.64172210152577203, 0.52152241919584419, -0.20719563241578848], [-0.63931349341051902, 0.56628303145515557, -0.58501809019462858, 0.42380264654932803, 0.44294713420750226]], [[0.0040169900503762559, 0.77859605775870422, 0.3131883960705884, -0.71125572509230273, 0.30835391737268175], [0.25714491301278414, 0.20381931604387901, -0.69879243961408954, -0.33290427504611902, -0.66595192445276818], [0.62674483782993484, 0.36859766448032366, -0.69746005960116053, -0.56682021191234733, 0.22519199165842091], [0.69484224738053424, -0.61546858980043539, 0.63583091666123048, -0.46061280797191462, -0.48142012545615998]], [[0.0032093580449258038, 0.62205618893214842, 0.25022060943676094, -0.56825490098256737, 0.24635812212472591], [0.20544489404747837, 0.1628406228179301, -0.55829740917549553, -0.26597253164950724, -0.53205961166772664], [0.50073526749632213, 0.29448962158369929, -0.55723290952282867, -0.45285872862867799, 0.17991623604198945], [0.55514141897766645, -0.49172615448478685, 0.50799455363553414, -0.36800475040311947, -0.38462867302277681]], [[0.0045275631024432267, 0.87755825595980186, 0.35299570284714904, -0.8016587387433991, 0.34754674551897746], [0.2898289031182949, 0.22972544201324216, -0.78761132743325923, -0.37521753687272436, -0.75059667147320808], [0.70640623123768664, 0.41544767709632413, -0.78610959740422792, -0.63886498223539712, 0.25381465714680324], [0.78315905237658401, -0.6936967338597736, 0.71664718148813888, -0.5191582572356811, -0.54261025530415208]]], [[[0.0010262339260519887, 0.19891054723610146, 0.080011290359890339, -0.18170688650823505, 0.078776209866200111], [0.065693673704939573, 0.052070404528223618, -0.1785228491500605, -0.085048172112865916, -0.17013297255466892], [0.16011660658676166, 0.094166882070769717, -0.17818246155773046, -0.14480746134333683, 0.057530553677483408], [0.17751368028639308, -0.15723582566838093, 0.16243785763157942, -0.11767429950954771, -0.12299001472036016]], [[0.0041048350593269152, 0.795622681376145, 0.32003731456703483, -0.72680972566322477, 0.31509711371916926], [0.26276825210547333, 0.20827651146075951, -0.71407388849564768, -0.34018434760153887, -0.68051520492661011], [0.64045072338068265, 0.37665829314243177, -0.71271237150884181, -0.57921564380648172, 0.23011657256969245], [0.71003731201225306, -0.62892788223129525, 0.64973549991006863, -0.47068565747655577, -0.49194799699663405]], [[0.00055155870416047587, 0.10690627243192245, 0.043002791574903589, -0.097660009394816644, 0.042338986394291039], [0.035307659024324638, 0.027985709805157868, -0.095948719722266554, -0.045709909223380182, -0.091439504673390792], [0.086056118202325962, 0.05061084235404132, -0.095765775332520911, -0.077828079645120687, 0.030920316343527258], [0.095406332790210185, -0.084507816445800507, 0.087303695568274373, -0.063245116442573954, -0.066102095654556575]], [[0.0040398842442824542, 0.78303354176971374, 0.31497336336672088, -0.71530941362101375, 0.31011133132878665], [0.25861046941861981, 0.20498095171755965, -0.70277509563565765, -0.33480160984892593, -0.66974741119767545], [0.63031687003988346, 0.37069842806155134, -0.7014351219354179, -0.57005071327748214, 0.22647543748688839], [0.69880238991169585, -0.61897635483379543, 0.63945473352785032, -0.4632379971830255, -0.48416390265359344]], [[0.0048299410886624584, 0.93616689204573345, 0.37657088608719352, -0.85519834704294306, 0.37075801450612111], [0.30918542628320594, 0.24506789334247972, -0.84021276483436536, -0.40027682828988631, -0.80072604677897674], [0.75358430227088824, 0.44319378005225074, -0.83861074021158699, -0.6815322410727348, 0.27076593163253249], [0.8354631399815039, -0.74002598796076757, 0.76450920497956942, -0.55383077858989438, -0.57884904261387138]]], [[[0.0034551359628056792, 0.66969427504776868, 0.26938291527397779, -0.61177279597385648, 0.26522463233051102], [0.22117820195242677, 0.17531122555598588, -0.60105274306596967, -0.28634114559877027, -0.57280561186873957], [0.53908239789794554, 0.317042121185453, -0.59990672227899688, -0.48753939493577969, 0.19369451732696422], [0.59765506194777174, -0.52938335219366484, 0.54689761210987919, -0.39618715948863276, -0.41408416944577658]], [[0.002617762355037466, 0.50738971822706014, 0.20409629672629082, -0.46350586847411041, 0.20094579941788318], [0.16757429434289969, 0.13282346385676874, -0.45538388680729103, -0.21694459486279835, -0.43398262286806577], [0.4084324387439271, 0.24020499880026919, -0.45451561125850715, -0.36938120189755508, 0.14675145096864484], [0.45280965475929436, -0.40108401685900752, 0.41435358737043188, -0.30016874670726135, -0.31372830541576963]], [[-0.0047926557139162107, -0.92894002679951138, -0.37366389688203622, 0.84859652928439611, -0.3678958985388095], [-0.30679862812699077, -0.24317605903771017, 0.83372663027736904, 0.39718683790054998, 0.79454473521115743], [-0.74776690769044207, -0.43977248652690254, 0.83213697269744213, 0.67627106199340914, -0.26867571789201017], [-0.82901367078735411, 0.73431325859687391, -0.75860747415483332, 0.54955540799081981, 0.57438054018720064]], [[0.002839065736252267, 0.5502840092314345, 0.22135042236226779, -0.502690256510264, 0.2179335847172299], [0.18174088126451399, 0.14405224541503367, -0.49388164948894187, -0.23528490458840187, -0.47067114107689156], [0.44296096633081894, 0.26051172309741649, -0.49293997067098716, -0.40060837146083123, 0.15915769259521692], [0.49108979407450132, -0.43499131517098216, 0.4493826837767963, -0.3255447547522603, -0.34025062690828178]], [[0.0012723426495452055, 0.24661275199359081, 0.099199387766952848, -0.2252833545563232, 0.09766811351470811], [0.081448157908459787, 0.064557792115882973, -0.22133572972566107, -0.10544420126642605, -0.21093381497138597], [0.19851535043723265, 0.11674973628504305, -0.22091371127538079, -0.17953480620963444, 0.071327379886390235], [0.22008454463691934, -0.19494370820888351, 0.20139327780802724, -0.14589464080314291, -0.15248515686761593]]], [[[-0.0026493949725693317, -0.51352093363910534, -0.20656256341455195, 0.46910679853294568, -0.20337399600547218], [-0.16959923505263244, -0.13442848114313682, 0.46088667215135765, 0.21956611831075176, 0.43922679879497678], [-0.41336787037221517, -0.24310759721286743, 0.46000790450106804, 0.37384474468653334, -0.1485247718019147], [-0.45828133349902928, 0.40593065134400219, -0.41936056920246212, 0.30379593736547311, 0.3175193475915577]], [[-0.003821708514219931, -0.74074547005557134, -0.29796308798567755, 0.67667881331155388, -0.29336363213194094], [-0.244644096979342, -0.19391086503050095, 0.6648214166962001, 0.31672050127303619, 0.63357740692036446], [-0.59627632952531195, -0.35067869598882612, 0.66355380886652426, 0.53926487313416716, -0.21424453161752793], [-0.66106325869668758, 0.58554826384370606, -0.60492069866612752, 0.43822062487312685, 0.45801641759115203]], [[0.0031883317481614052, 0.61798075146162457, 0.24858127449284459, -0.5645319457938266, 0.24474409249213186], [0.20409890981932333, 0.16177376296223944, -0.55463969107617694, -0.2642299970667788, -0.52857379203193877], [0.49745467113175501, 0.29256025561992216, -0.55358216555518669, -0.44989179820608166, 0.1787375043084786], [0.55150437753254367, -0.48850458185054607, 0.50466639763364263, -0.36559374577715753, -0.38210875579638315]], [[-0.0046444249706855643, -0.90020909372009938, -0.362106947987824, 0.82235051835698314, -0.35651734649436201], [-0.2973097369184366, -0.235654932940045, 0.80794052640632485, 0.38490235437036957, 0.76997047750089331], [-0.7246394286669875, -0.42617088306913914, 0.80640003491272261, 0.65535485850865072, -0.2603659197908198], [-0.80337333275673795, 0.71160188382194978, -0.73514471020377758, 0.53255835845597299, 0.55661568090011493]], [[-0.0048272214251729173, -0.93563975126499177, -0.3763588449729614, 0.85471679837018011, -0.37054924652800353], [-0.30901132885635857, -0.24492989948505012, 0.83973965430609609, 0.40005143873427357, 0.80027517059755482], [-0.75315997086072084, -0.44294422463940542, 0.83813853175806285, 0.68114848103944137, -0.27061346761590072], [-0.83499270389192126, 0.73960929102309847, -0.76407872192935555, 0.55351892523179647, 0.57852310186671652]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5, 4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank3_array_rank3_offset1(self):
      arg0=Data(numarray.array([[[0.54273025613461945, -0.53604759168753868, -0.39772623868272006], [0.10089462011319661, -0.18534012207185269, 0.1181005210496644], [-0.98767455034656737, -0.27093780125743128, 0.40931393510221636], [0.39864999001075629, 0.26418564398659328, -0.94563853260210884], [0.79253752725303617, -0.74036949775514227, 0.47208793915194192]], [[-0.1861805537297192, 0.85749256911056815, -0.087774575487640671], [-0.14387169800599975, 0.23260782030008298, 0.13976018235006737], [0.58727479168921382, -0.19384115727409479, -0.28470047903983708], [-0.88520658409133457, -0.82610701661575558, 0.031522658928353708], [0.12980781118679885, 0.99723597868459835, 0.98264731763081614]], [[-0.90456867507816119, -0.07028832991813827, 0.74238936402597133], [-0.0062975773295774751, 0.17930123873359571, 0.15872323031194924], [-0.56645000675232748, -0.62654654011352995, -0.1695892285145546], [-0.50670573449384881, 0.48735874836216708, -0.063228910538376981], [-0.68847126820376681, 0.83089610474373776, 0.22604547475022874]], [[-0.74292295523018881, 0.66739442419878126, 0.59368772392916425], [0.87716022679810313, -0.47866487523817258, -0.46473192636080674], [-0.5301897183458435, -0.56016539851213931, 0.33576045346401062], [0.70543462850867189, -0.42702720050297605, -0.10562806824051929], [0.49853232123348712, -0.045250625977709236, -0.26975959790424797]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[-0.8772438539850187, 0.0073383430711853048, 0.50083340110734231], [-0.075268300861094817, 0.38338190065253097, 0.7719401769877583], [-0.83390997912554932, -0.46470652598437834, 0.77494879653526016], [-0.37768741745899259, 0.34730411130157535, -0.3913854819449567], [0.50683360335828942, -0.26622660159096112, -0.32914403265682513]], [[-0.10771102209222239, 0.23775855564915105, -0.85008543132247816], [0.28595895765624957, 0.77566816263969685, 0.12745437707681417], [-0.12414994155696557, 0.41054040462162966, 0.73622697034739071], [0.17680627579464003, -0.04606070835382603, -0.16331584297947987], [0.91085040491026037, -0.43358200452945828, 0.21308954688646309]], [[0.91402278320667207, 0.10744053162842637, -0.46032061850520889], [-0.52123825351466468, -0.11719321880463807, -0.53604854298054461], [-0.16737347041693451, 0.24336487078836133, -0.34186693379133182], [0.11926566909080094, -0.39485038884417367, -0.75137258726585698], [0.66564447840456764, -0.15453800498373327, -0.52326542821547894]], [[-0.29065224268755752, 0.33851246762317944, -0.15368939416199812], [-0.38857600358409194, 0.10078974584436251, -0.03202049066044399], [-0.69693508905828305, -0.88840526676385956, -0.74476130624288062], [-0.41141874422473745, -0.36090090507535533, 0.050082688159819755], [-0.30537525319171532, -0.51344324499062099, -0.93598815901366472]]]))
      arg1=numarray.array([[[-0.64399156160577653, -0.51740287367472271, -0.48322650482214935, 0.18621623203631521, -0.76513489461629369], [-0.88606537573589295, -0.76374210364427531, 0.61153333933334597, -0.80789621854190319, 0.87318001971692083], [0.82197557574103897, -0.42494269522696193, 0.046013416948134767, 0.48236449857158537, -0.80944275163147039], [-0.82380912352985192, -0.21382413807772771, 0.073871634453505974, -0.59104431254791612, -0.44791198784950348]], [[0.64136671715107307, 0.061605343898209375, 0.22757125736594963, -0.10294578480012762, -0.6726228498171829], [-0.39914681040583955, 0.95536040082738594, -0.21742066100759549, 0.059578020733797477, 0.063117432510143567], [-0.28587746602079367, 0.38769012695074467, -0.24931048288896318, 0.94079796236255442, -0.20688425980116376], [0.13766749857986738, -0.7908545920550043, 0.64361176035011192, 0.45774418450280208, -0.33649174372270862]], [[0.80331743941346168, 0.73018793697586104, -0.22826310385141069, -0.99389119366864742, -0.048411461218194285], [-0.52677753415814177, 0.95723460416993356, 0.68719870419654283, 0.1817871789565999, -0.34536690977596018], [0.10924638328564207, 0.93687448497380332, -0.31364322366625519, -0.38472039930973323, -0.79326627124339999], [-0.76598051939542633, -0.91513402569976576, 0.67849004689853953, 0.53685144561724063, 0.1518553965556646]]])
      res=generalTensorProduct(arg0,arg1,offset=1)
      ref=Data(numarray.array([[[[-1.012817212942362, -0.60424849209089238, -0.29346444345661976, 0.55154562944369512, -0.035449490194679439], [-0.057419554594070332, -1.3073419082422624, 0.17512851175975014, -0.54270790707845096, 0.57742875005270033], [0.55590478882262873, -0.81106918172248865, 0.28335929713807906, -0.089505276767012809, -0.012906452359282283], [-0.21625191680339917, 0.67185968415157005, -0.57476745736603907, -0.77967020504446993, -0.12311667474178653]], [[-0.08897406145091033, 0.022614467477768713, -0.1178910307541739, -0.079510867527086942, 0.041748587771128082], [-0.077634012176454714, -0.14107417720436624, 0.18315572084094905, -0.071085419141351747, 0.035612961735626981], [0.14881953269542966, -0.004083602426363131, 0.013808313416843986, -0.1711353059666679, -0.13700962492791513], [-0.19909591801094151, 0.016925576184756416, -0.031703803669113573, -0.081069118964355744, 0.0351077124569424]], [[0.79109261015392074, 0.79321053203097358, 0.32218159548957348, -0.56284264420518548, 0.91812773330432362], [0.76767079531817406, 0.8872948550378188, -0.26380843429483108, 0.85620462200403835, -1.0208820706253197], [-0.68967327805484047, 0.6981409570075886, -0.10627718892677353, -0.88878829113538305, 0.53082383314770087], [0.46282947567852489, 0.050883954509783724, 0.030375542468811911, 0.67948000051400026, 0.5957161343103119]], [[-0.84693527501966004, -0.88048125221681528, 0.083337204433030443, 0.98690011053496884, -0.43693857568721944], [0.039462324070810295, -0.95727120569992796, -0.46349323197028902, -0.47823312283084873, 0.69136018346207906], [0.14884824301396993, -0.95292584855462947, 0.24907211552045799, 0.80464635195048562, 0.37280295644293038], [0.43229897226529251, 0.57121257698643646, -0.44212441861186325, -0.62235778038795864, -0.41105671186006809]], [[-0.60599935960335172, -0.11095899325618758, -0.65922221503604606, -0.24540277429937707, -0.13126314285426111], [-0.65540925881177747, -0.86071506684948029, 0.97005296623185733, -0.59857828593033902, 0.4822541591786691], [0.91467534614264345, -0.18152983261924743, 0.072982053600557345, -0.49586800841069484, -0.86283440049850912], [-1.1164346273035437, -0.015962772782445289, -0.097657505280357604, -0.55388353735218887, -0.03416973476943902]]], [[[0.59935505234257969, 0.085064541938071114, 0.30514373741916384, -0.035706709076178164, -0.43006656171745267], [-0.13105960717479492, 0.87738751127207337, -0.36061079146289593, 0.18554598292381314, -0.078131976324774338], [-0.40776272554921822, 0.32932370907477382, -0.19481878911317285, 0.75068904204748566, 0.042929394472869642], [0.33865971074839452, -0.55801653888595204, 0.47858466424581092, 0.45543128641472241, -0.21847571085746129]], [[0.354110865376704, 0.1908207139733315, 0.090555378891044286, -0.18964365457403931, -0.053142073135605171], [-0.038987463628646454, 0.46588845655803246, -0.042513069753108923, 0.15549832359481039, -0.1592128259904311], [-0.16948806159624366, 0.28225473135848844, -0.10844643056260783, 0.095669770739287618, -0.042534032332011987], [0.043491777138597823, -0.28109501931886438, 0.23390698388848011, 0.26653988178965615, 0.0073945851062988781]], [[-0.73122813670336284, -0.52368417145835888, -0.26291280583465448, 0.41227652789136338, -0.30517967803253165], [-0.29301896298474278, -0.90623980089288625, 0.20563738673269996, -0.53776065287008368, 0.59888798268222654], [0.50703785621420461, -0.59143705036338268, 0.16464352840226643, 0.21044522661131052, -0.20941935157792238], [-0.29241293784935785, 0.28826573871412886, -0.27454194110183433, -0.58867695173063939, -0.24105477448721302]], [[0.065550726824208483, 0.43013328884019253, 0.23256161121729327, -0.11112569261873602, 1.2314348442222287], [1.0974834567324512, -0.082985811884998775, -0.34005827438523362, 0.67166764619131181, -0.8359733397198279], [-0.48800907455665377, 0.085421312378267056, 0.15533889122658534, -1.216319437923215, 0.86242672973051004], [0.59136743098770328, 0.81376160471762427, -0.57569603806281189, 0.1619736193397161, 0.67925971713247257]], [[1.3453765578847576, 0.71178934851676579, -0.060086456052266063, -1.0551334344439085, -0.81765558436449204], [-1.0306982980352617, 1.7942040896613249, 0.53783606193855926, 0.13317478980091971, -0.16308530577697991], [-0.071037778778661936, 1.2520748616451114, -0.55084915488956987, 0.62276778807532729, -1.0908853927718796], [-0.7223385792231457, -1.71567869207452, 1.3181383435269185, 0.90729243429559137, -0.24448385002448675]]], [[[1.133828321186757, 1.0057800533358849, 0.25165585511315586, -0.89906373418410468, 0.70345444075221453], [0.43848830709079573, 1.3343472847641991, -0.027722758407023762, 0.86156684060356481, -1.0506844329641067], [-0.64233615483728412, 1.0526654123283383, -0.25694407147989012, -0.78807126551386264, 0.15782566389103292], [0.16685971817925904, -0.43037930157343929, 0.39164343216080971, 0.90101889974371563, 0.54155442737103376]], [[0.24655857247612303, 0.13020208717269693, 0.0076163074233677672, -0.17738463869602317, -0.12346763751501144], [-0.14959928419691626, 0.32804239680316072, 0.066239425857255396, 0.044624050102694532, -0.048999636424552351], [-0.039094699679808442, 0.22089317414277018, -0.094773917088452231, 0.10458444777350751, -0.15790686080383393], [-0.091706947705500322, -0.28570766269658521, 0.22262730554209412, 0.17100704221393764, -0.033409647011165139]], [[-0.17329105795736019, 0.13065223731242259, 0.16985063666798708, 0.12757138015310393, 0.86305024793535523], [0.84133158674240871, -0.32829271196215126, -0.3267203993720349, 0.38947526825758083, -0.47558832924136601], [-0.30501954305642565, -0.16108093621817743, 0.1833308324575228, -0.79744464602432596, 0.72266088425642239], [0.5102936340062616, 0.77182476624874141, -0.5601619130670622, -0.043045202712779312, 0.43879444680038449]], [[0.58809701123260283, 0.24602591868598186, 0.37019531157850949, -0.081685704088633668, 0.062950612507123846], [0.28775428667059455, 0.79207085162166346, -0.4592801364808477, 0.42690731115052605, -0.38984731688689878], [-0.56273215166211843, 0.34502752252976149, -0.12498758779544709, 0.23841471156646321, 0.35947979218117854], [0.53295438055395494, -0.21922105974161471, 0.23333845468484979, 0.48862664331001943, 0.053365726453392312]], [[1.1578650660917125, 0.57246033175812883, 0.47017779422352812, -0.43840638374328289, -0.043049506365713225], [0.1593053451607061, 1.5359982808974177, -0.44633895666388346, 0.64680864868337495, -0.62678395381392082], [-0.7787463894390938, 0.82646729036509159, -0.30972765602072166, 0.36264695890177245, 0.20606450126592854], [0.5084098701980907, -0.71676812974164195, 0.63728561155016306, 0.90860772719186012, 0.06311108038860061]]], [[[1.3834003871827529, 0.85900914931726136, 0.37536284869941644, -0.79711075678900212, 0.090790247278679126], [0.079148596495906998, 1.7733021787015186, -0.19144605795988129, 0.74789150155522843, -0.81162135275437541], [-0.73659931404257684, 1.130652792576746, -0.38677898145797163, 0.041119877386098541, -0.0076722473583501483], [0.24915199841003666, -0.91226092133708547, 0.77747317888232992, 1.0633184166332625, 0.19834606889421372]], [[-1.2452107649790709, -0.82267518282576635, -0.42671628610955453, 0.67451097259078341, -0.32668661357281203], [-0.34135340952090776, -1.5720791454925218, 0.32112117860573131, -0.8216546420112234, 0.89620971545410566], [0.80707350189347171, -0.99371196132959305, 0.30545732995802788, 0.15157586596931713, -0.24232659684267599], [-0.43253359133238728, 0.61628828382814804, -0.55859306985041546, -0.98703863269957604, -0.30239585328955249]], [[0.25188848969252498, 0.48498073468267894, 0.052082457158343767, -0.37477262292712166, 0.76619204681792619], [0.51649992036966252, 0.19116989593537009, 0.028296990818764411, 0.45600166847490275, -0.61426782069188035], [-0.23898371911883531, 0.32269505534658638, 0.0099502744247925712, -0.9119210588730231, 0.27870018539159291], [0.10247259143406084, 0.24911092181732114, -0.17188489347079988, 0.23720664889432033, 0.47695639920861793]], [[-0.81302785105406161, -0.46842940275621303, -0.41395283615227108, 0.28030683558408603, -0.24741078846172293], [-0.39897216080371989, -1.0478458466888989, 0.45165385863319768, -0.61456123275020935, 0.62549900183629104], [0.69038800448909998, -0.56428376395093982, 0.17205134308793679, -0.020832426659159402, -0.39887255667336208], [-0.55902220696453542, 0.28354131035495883, -0.29439571219937527, -0.66911892384183125, -0.18832169162899498]], [[-0.56677544294010596, -0.45770494027404285, -0.18962560986954241, 0.36560486037701756, -0.33794841375648499], [-0.28156728970287481, -0.68220400184619479, 0.12932911005622005, -0.45449715617764885, 0.52561839746358452], [0.39324726563414619, -0.48212177352589297, 0.11882890087416956, 0.30168461666141599, -0.1801805412538986], [-0.21029441817958877, 0.17605460825746011, -0.17532563987842434, -0.46018873407679217, -0.24903659168558118]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[0.97197241379206178, 0.82004308003705506, 0.3112556907483644, -0.66188640340840632, 0.64202786976765736], [0.51053854480334959, 1.1564138912934945, -0.19388730657903719, 0.800204287443812, -0.93849991239868114], [-0.66845665116698083, 0.84484140556067677, -0.19927751551632489, -0.60892821960566867, 0.31126624673640862], [0.34006311309689863, -0.27655733791385895, 0.27973008439960828, 0.79072220987805741, 0.46651300134460844]], [[0.91447354800578295, 0.62622381429966467, -0.05258712165498014, -0.82070827396611823, -0.23765177507894111], [-0.49297377048050883, 1.1626813064764951, 0.4010920677134836, 0.22397893756565496, -0.30812728864807304], [-0.087137278763338363, 0.90382914811365767, -0.34115828408101034, 0.02739702160343066, -0.63074440600008153], [-0.47650519748569153, -0.99353387885182787, 0.76494263444549093, 0.63439493655232926, 0.021932011692177039]], [[0.86151357359567138, 0.96869727724458532, 0.12032133850166957, -0.87766278057155089, 0.91310944822440498], [0.51615927046756971, 0.9347377532791592, 0.12361685461372007, 0.78690217925761752, -1.0251262858998087], [-0.46794415786314281, 0.90023157668758791, -0.16557227789350026, -1.1375821321250639, 0.15640211153728889], [0.029411982325267205, -0.16335663933089106, 0.16510216692509128, 0.69619342226855319, 0.64756834249366535]], [[0.15157002430720545, -0.068972613265628091, 0.3508838688624123, 0.28290956176585991, 0.074324684339039299], [0.40220349427892305, 0.24560865082473737, -0.57543913310664285, 0.25467506525269273, -0.17269656838759892], [-0.45249370006649409, -0.071537187694046767, 0.018790159939864312, 0.29513397739115199, 0.54433749033334022], [0.65874848333856484, 0.16426180693127007, -0.069922530388822457, 0.17209057543650766, -0.007128241641011418]], [[-0.76155258669377046, -0.51897514637195885, -0.23036951463714356, 0.44892090582842559, -0.19279163666211918], [-0.16943852641919169, -0.95650057304847325, 0.14164145690796506, -0.48516437073968682, 0.53942889364515223], [0.45675523402767731, -0.6269553084886933, 0.19292802396817846, 0.12064151631381687, -0.094075833624406191], [-0.20206697976413551, 0.40338417564879014, -0.35722689517965334, -0.5981262470593951, -0.18741609099745765]]], [[[-0.46103303834205989, -0.5503449374081304, 0.30019897328756939, 0.80035864227038422, -0.036354497840983269], [0.44834434546279955, -0.50432263973909741, -0.70174011021368032, -0.053350120830525052, 0.21454697565708658], [-0.24937440166744923, -0.65847569399721528, 0.2023916825823896, 0.49877199811260808, 0.7123415036500178], [0.77261382854135585, 0.61294087387970531, -0.43170709087671338, -0.28387500953311218, -0.16084879323641449]], [[0.41571891121000287, -0.0071050338777987471, 0.0092436997288355451, -0.15327735110680635, -0.74669955963101409], [-0.63012390678590824, 0.64464749108304409, 0.093813634415503458, -0.16164281501790898, 0.25463330684175295], [0.027229159778928105, 0.29861147213619277, -0.22019945713735309, 0.81864917726007813, -0.49304619767535879], [-0.22641887254617482, -0.791223493168286, 0.60682993347303205, 0.25446724159137074, -0.36973574279024907]], [[0.93468243095318049, 0.62711107196289795, -0.014633714978899315, -0.79711164083982256, -0.21678922789465341], [-0.44168875645450228, 1.191774515586902, 0.34075242553574214, 0.25859607706589632, -0.33676142577776885], [-0.13898233647408786, 0.90167133603169169, -0.33897718987639214, 0.04310851781406716, -0.56846610097615946], [-0.40514159202906291, -0.97187786117606667, 0.75458014505222482, 0.65654511291277706, 0.029264829031500156]], [[-0.27459801975516496, -0.21356891941886497, -0.058640590771505685, 0.19998413237266249, -0.096392807681364864], [-0.052245817316289689, -0.33537055011735428, 0.0059070462382910666, -0.17527405384044284, 0.20788036174082603], [0.14065649374948874, -0.24599626351781467, 0.070841785796941767, 0.10478218632840675, -0.0040323730359228815], [-0.026898931367923817, 0.14807775803276993, -0.1273924189744135, -0.21326071150997583, -0.088494994483834272]], [[-0.69348649233764448, -0.34239216885331825, -0.58745834089323701, 0.0024627459693402354, -0.41560224139126623], [-0.74626091817242335, -0.90590519392359303, 0.79771993627190085, -0.72296760784638803, 0.6943757132964683], [0.89592737307048986, -0.35551652889816343, 0.083173785964665153, -0.050531063107013136, -0.81661671630458854], [-0.97327946553057676, -0.046866978309897916, -0.067193332377391307, -0.62242516119068247, -0.22972525310166433]]], [[[-0.88949775900785844, -0.80241966650949537, -0.31215544483522617, 0.61665393783269318, -0.74933288870481363], [-0.61028192600265596, -1.0360680789095109, 0.21926388088374454, -0.81571484264642669, 0.9638673118853307], [0.67030121381336571, -0.77801631403290239, 0.15964770330967146, 0.71906670689749175, -0.39692005093317145], [-0.38559261223338409, 0.14084508911153354, -0.1756526114204211, -0.73817147851266263, -0.51545678366583758]], [[-0.17010793611596958, -0.12894573802719672, 0.34756643550312394, 0.44777545056767876, 0.50359530623412052], [0.79100679809581287, -0.22699437510814374, -0.6616462067846669, 0.31667752154185141, -0.27739833478059983], [-0.45350357769044236, -0.3261484681980758, 0.17336153794522557, -0.15545316074216675, 0.87138718740223964], [0.82386987286818814, 0.69469237664854788, -0.4776352566495316, -0.033348044368857022, 0.19150154875560965]], [[-0.01075443904077783, -0.14803501997706248, 0.21429775416491204, 0.28355749028173449, -0.019079212479011492], [0.23125334540600023, 0.033084467847611931, -0.39019752226176108, 0.087572565679314512, -0.0127170779133291], [-0.24449716337084515, -0.15481211624557362, 0.038849408444404335, 0.27974533769546128, 0.35632238911980008], [0.43325063647957696, 0.1561763258152275, -0.087684970869520346, 0.026792234462374331, -0.05883602468486001]], [[-0.93364068499043107, -0.63467649330727727, 0.024021707037443912, 0.8096399843151405, 0.21070611351349447], [0.44773229215325555, -1.1875524799125408, -0.35755870290937108, -0.25646859069801597, 0.33871768507315825], [0.12882755797837842, -0.90770247796717429, 0.33959108251562714, -0.024876554791564198, 0.58118812967909472], [0.42292655298702697, 0.97437398488156712, -0.75511882590128465, -0.65460722431127194, -0.034656609273208627]], [[-0.9481332039811603, -0.73600883643405235, -0.23738327207597271, 0.65993174390339182, -0.38002998053390047], [-0.2524767011027727, -1.1569079796538797, 0.081076221661380676, -0.64210167150223751, 0.75219198061332126], [0.5341575811131426, -0.83300764605101407, 0.23327517730985087, 0.37700510934433085, -0.091740802324805859], [-0.16882773043242316, 0.45874423185969238, -0.40532061677418274, -0.74508005778491704, -0.3256100578603619]]], [[[0.28082685114354627, 0.059016340930083247, 0.25256819338414538, 0.06377793830760195, 0.0021372805525052743], [0.2033808369739446, 0.39826795562689266, -0.35695829354226888, 0.2270459891924454, -0.17934646204457177], [-0.35247214144564953, 0.11076081692719414, -0.049564972568479596, 0.23739896156319187, 0.287150062427733], [0.40376721592197973, -0.064919280227809489, 0.092122924709725607, 0.24423209497407439, -0.0070585906041704498]], [[0.28916023719923045, 0.18387855183329915, 0.21801616984609387, -0.050910155048548164, 0.23106973221234572], [0.32094151215494005, 0.36241126468948326, -0.28154539391044942, 0.31411302281341424, -0.32187639458112605], [-0.35171162420373736, 0.17419854292916789, -0.032964639961551745, -0.080293545655395468, 0.31907899282410362], [0.35851500119762064, 0.032679936233959483, 0.014439137044043374, 0.2586113102283159, 0.13527044856027959]], [[-0.7192529986088112, -0.23795001588139997, 0.30460353095699499, 0.70188865480920271, 1.1668660213382975], [1.3644577045655204, -1.0293798349142846, -0.74484038655379925, 0.37473373875815363, -0.40740774341413838], [-0.40025105373896031, -0.74601634072743717, 0.42300971817127997, -0.88546174236594299, 1.3387201465834107], [1.022309606255281, 1.5331773419075247, -1.1285849453838832, -0.39456900763611857, 0.49801059498914813]], [[0.073712667673633853, 0.22720559092080678, 0.10524573918894713, -0.089236364147882205, 0.55511645666339648], [0.48221391434684902, 0.017368266037560483, -0.13871220677425453, 0.31998627668613483, -0.39931866895604057], [-0.22953137038054727, 0.081832865008283601, 0.055337500936792197, -0.55725646415796348, 0.36795572971573437], [0.25088382675722104, 0.32755902439496576, -0.22869163646982729, 0.10485338190859186, 0.31332488889524179]], [[-0.88454193352451371, -0.55707607699334227, 0.24437205375506943, 0.92626137742119774, 0.62431947529501974], [0.96857920642862805, -1.1532556609639997, -0.7183238286358482, 0.045970933030308053, 0.024204549098953143], [-0.20648246690634278, -0.94619331810301821, 0.40752176800042461, -0.27025480127306756, 1.0958949477421955], [0.89783516866824065, 1.327910160329929, -0.98807532972887158, -0.55702194912196656, 0.16741579644826007]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5, 4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank4_array_rank4_offset2(self):
      arg0=Data(numarray.array([[[[-0.75403381122448221, -0.11645488942064164, 0.55211460812682644], [0.35197305699165171, 0.38522481724149737, -0.22881402817584373]], [[0.79006497320158076, 0.35089894749233719, -0.9586795244402575], [0.47053311818730825, -0.76040442270150121, -0.8276982628263454]], [[0.025114543323580429, 0.74440565965223326, 0.81544483291339076], [-0.016880019039402727, -0.96495447258564848, 0.37687957347421852]], [[-0.86411239368284232, -0.48213659242832674, 0.20019095838029677], [0.98454144646302133, 0.53189137511605433, -0.91720398431258499]], [[-0.59921333102367269, 0.12330834716285577, -0.94041900117314614], [0.89245439688141137, 0.63021515047877585, 0.45830267032090655]]], [[[-0.83615114780213884, -0.2081610881413487, 0.65773340220714216], [-0.77564176785867534, -0.69900102145135579, 0.57473753702372021]], [[-0.20347388595086779, -0.80867187182968836, -0.92601215768667622], [-0.042708779461411162, 0.014332083358477465, -0.95551837240647974]], [[0.54012497737708065, -0.6106152805968712, 0.34329919439952206], [-0.6229762773787888, -0.51455540818510004, 0.6591719856663234]], [[0.75060718962061901, 0.88184270894609518, 0.80122655169738488], [-0.44488653765241781, 0.18571425594065172, -0.86881152470554457]], [[-0.54635622513909521, -0.97020076451693682, -0.66907771438877783], [0.96295654098364181, -0.43969331813357715, -0.66627555552572515]]], [[[-0.064137762387223241, -0.85386120836778834, 0.96814517091562258], [0.17160615755325659, 0.10229501853782552, -0.22443932947510015]], [[0.19292594519898731, -0.14924442430498619, 0.11454118504476263], [0.22988843177831786, 0.85057940888847416, -0.2151136457800582]], [[-0.87623748972877991, 0.2935697903751544, -0.28465778796801411], [0.52070966807668251, -0.12871622221283974, -0.33889825215271729]], [[-0.88535097790728723, -0.66693348757174253, 0.88207299255414373], [-0.37497435226864462, -0.89620199556899016, 0.90757899594559976]], [[0.081313188428964178, -0.4884351001584899, 0.21992674492674746], [0.37036217615220246, 0.42731808770253799, 0.91428807532505307]]], [[[0.4386978693068877, -0.0049542793792309858, 0.76696630663594934], [0.082938336048346439, -0.42559967404178334, -0.096307320705558697]], [[0.91869501323300451, -0.19233453751066154, 0.51727360541167045], [-0.26802748284218603, -0.78904645942107954, 0.43762365810377268]], [[0.89176203344240812, -0.51291439974388253, 0.7604478550173861], [-0.63029310422879781, -0.86520111965318347, -0.022139373876245427]], [[-0.93704695117055903, 0.26039988249372237, -0.69984508561913916], [-0.42180880546020183, 0.68571934243169586, 0.18555528256477816]], [[-0.37058125202698333, 0.21864428310606043, -0.070574785778604765], [0.5147030735934166, 0.91385404245497326, -0.81683228771167093]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[-0.11582454580841506, 0.45109147152470719, 0.31090340375539038], [-0.91034136931849208, 0.55303239896812184, 0.75356731809642619]], [[-0.47346361920640967, 0.40733025449300886, 0.54125750665205308], [-0.39989362696008857, -0.27017334395655346, -0.56002752300418179]], [[-0.82792695820874473, -0.01040697005391289, 0.97669793937331906], [0.062156505519241234, -0.090881265965298885, 0.036748868017977054]], [[0.94718275060243373, -0.81449246442820034, -0.068213895939450708], [-0.81559530278223225, -0.78255318198575341, -0.044876651093835207]], [[0.27067334308771707, -0.47046012836010309, -0.37405187910812132], [-0.99109028543439348, 0.42861743225152282, 0.48809835188106465]]], [[[-0.41509252218164194, -0.69973459019633455, 0.77473865628450622], [-0.054980720271728512, 0.023610771152680954, -0.093667815101136531]], [[-0.40369068346306713, -0.76639670843166052, 0.70864593351516048], [0.62146761094716729, 0.45503749871133703, 0.33772718130269719]], [[-0.0063080009965397199, 0.16209775816882654, -0.90485809693693575], [0.32575287065762337, 0.64341193095669014, 0.381954575644881]], [[-0.62481312470374473, -0.30436058404165278, 0.98541696077142849], [-0.44030970616883458, -0.21752368024553603, -0.48870011364963384]], [[0.10405894451778663, 0.44876902065861213, -0.12288631333924371], [0.08891412075221683, -0.46050857126234268, 0.46744481872675192]]], [[[-0.43825179144041027, 0.29684667307239021, 0.57513569857605917], [-0.63414872670060918, 0.20054116005671707, 0.2137826055749148]], [[-0.56321449703209092, 0.97722960678728854, 0.44269750040436118], [0.3925919563767537, -0.30082136853500963, 0.916422891552233]], [[-0.37509610674967986, 0.60901489234741968, -0.19371053599136956], [0.34581130104951896, -0.2436359057508688, 0.37300807093769506]], [[-0.34370973323868714, 0.47091965463392471, 0.31285803597223749], [-0.90452595095352395, -0.75025548429299471, -0.40788189206826075]], [[-0.98015337671937863, 0.78573600923398845, -0.98384000239568237], [0.13132854307527775, 0.90858617180010937, 0.87922289325345182]]], [[[0.16090522982969402, -0.76907763901338844, -0.79257805010076021], [0.44788205628589273, -0.39459374625411803, -0.13462701711504166]], [[-0.12665645401432268, 0.8287815302601369, 0.68623612561335179], [0.42035613213078049, 0.98684058895610738, 0.42936309631843672]], [[-0.60900765274824398, -0.52370092243590438, -0.40209618609326325], [-0.72138125702267342, 0.78060848570221819, -0.54978013001357406]], [[0.45308379757980299, -0.99961774027563943, -0.89817804860519934], [0.10136572707036984, -0.86591458250684861, 0.89325989060484257]], [[-0.012929827417867079, -0.77614296158193019, -0.88031377573387304], [0.77375784553211435, -0.44613017170605529, 0.086377594066008312]]]]))
      arg1=numarray.array([[[[0.93414511597640359, -0.1820478034606916, -0.94780327768162986, -0.30997164544394651, 0.48112269948813013], [-0.74999813875217458, -0.95858645549120003, 0.14834821850524271, -0.019879061182381585, 0.26423900852130666], [0.83329957744533378, 0.53955258706213249, 0.94441509641977817, 0.87721496461429993, -0.56843916716679033], [-0.77001171989092532, 0.53580643686307172, -0.52976030036398924, -0.056822219023473508, 0.68208188706143291]], [[-0.16494374889332231, 0.67234427833982746, 0.60593309240069804, 0.38271174543018338, -0.43384618224343008], [-0.4783593164541684, 0.98298921256020555, -0.45159761849118119, 0.52467012127796808, -0.080737880668218409], [0.30255479931906204, 0.11790477488733186, 0.50707475881590125, -0.072689684981847913, 0.11719279913991909], [-0.77804213000285882, 0.21416211755580594, -0.87583239815564196, 0.056141390103557232, 0.55369172068165362]], [[0.77806271389898729, 0.73960219710925479, 0.23761507509501167, 0.52845160233903865, 0.46326665115097754], [-0.85346126103821174, -0.61774262249746581, 0.74513863460638108, 0.81178736574480803, -0.55753849519082088], [0.13773075354965192, -0.97612887994488351, 0.13617350930053052, 0.23441810652428763, 0.35619676065471251], [0.70003014099133076, -0.13959419601756551, -0.40426485541654, 0.41869084472947082, 0.15281171557235429]]], [[[-0.82085301226368834, -0.25976930905510831, 0.25425968376478081, -0.21253714938982782, 0.93260718846250756], [-0.31181658318864391, -0.55075728723290496, -0.39400684342502945, 0.69130134791522679, 0.87267712725954949], [0.62226404376683386, -0.011764885402432812, 0.71596711489664933, -0.44190173764270924, -0.89402329323872287], [0.5813437504624428, -0.039179276291298359, -0.58445408298979862, -0.72972836964640342, 0.0025602177353039046]], [[-0.41478368254995024, -0.70933513183539065, -0.1983064839924904, 0.42876485918962981, 0.012690574608176686], [-0.8386877968181774, -0.46729270535975376, 0.94271053662537874, -0.13533984334728633, -0.38996858053917505], [0.37933697174942971, -0.15051325208626465, -0.39815795946107535, 0.62494097576361973, -0.40390361382500917], [0.95073689815088147, 0.98808840003240483, -0.32465776896677623, 0.6441326085907384, 0.70182318781126285]], [[-0.9146125447177087, 0.34524041950204332, 0.055532460160206298, -0.47186862650956374, 0.73896735301865157], [0.72705528428659183, 0.58483751551069862, 0.060396226545657905, 0.95506817383061593, 0.79297469692766254], [0.80861602221373463, -0.6009097378279975, -0.2087572513052709, 0.60226060016934113, -0.71381694110488603], [-0.94635674864545827, -0.95696747696406059, 0.70136646363987865, -0.37892876083678617, -0.28047223319968095]]]])
      res=generalTensorProduct(arg0,arg1,offset=2)
      ref=Data(numarray.array([[[[-0.49501563741128918, 0.023636452288183007, 0.77569597376745181, 0.67925997205831046, 0.10757224262055362], [-0.44917203097566871, -0.24041552839225791, 0.56278930052667975, 0.37473893290416915, -0.52217844705755634], [-0.40739937688269834, -0.8841322801572975, -0.54960147122142677, -0.57615941903230961, 0.30470163444070364], [1.8451230336184929, 0.079785316695837272, -0.21300919458095283, 0.34546862420459634, -0.15898651411961584]], [[0.62043198925635068, -0.48554956299346663, -0.53953498549528778, -0.6526959423221953, -0.39871162386591569], [-0.052967719207769881, -0.20808559812126426, -1.7078339314015316, -0.97215855641174187, 0.7657494313681511], [-0.032456431393594665, 2.0097361525320618, 1.6059698585325708, -0.738809092298925, -0.27217201808761715], [-1.2185832336904467, 0.65459563909536567, -0.94696688714334243, -0.94610760266324645, 0.28636297848956549]], [[0.60454738587705636, 1.9180047095855046, 0.82901223235018551, 0.12004253743810248, 0.31740746733355274], [0.017691477268328037, 0.88455953549066924, -0.60508647748739364, 1.5309092602417369, 0.15231970664558403], [0.28666739976596245, -0.77569323127479506, 0.80567228013754466, -0.20952528776739751, 0.49923840539919345], [-1.3115749398489505, -1.2544118080223565, -0.40745871364793723, -0.37026713221073776, -0.22906394663362267]], [[-0.76181724000177264, -0.96848912171174206, 0.66835152686535348, 0.64072671879933185, 0.133327464339005], [-0.71208316901088176, -1.0964827556209755, 0.29682009661990783, -0.34063603122524277, -0.37657335604746978], [-0.76561981302131166, -0.25897537206695387, -0.34870388358605175, -1.3311032634964475, 0.065679671039151954], [3.1266869101264874, 0.77051858702814868, -0.59228492998411864, 0.077566810221252336, -0.19269433708398964]], [[-2.7249423203651122, -1.024186229797343, 0.54658533256166308, -0.39975948787124499, 0.40152113706238302], [0.71940991446260361, 0.75855734801090224, -0.57516344178839962, 0.28255974245171722, 1.2525114563748483], [0.57345576986356916, 0.22844779326484477, -0.33907090534592166, -0.47956562385658702, -1.3594724306319659], [0.39141431110041941, -0.014215536470470969, 0.18485560265383161, -0.77174471896415209, -0.16810147952355659]]], [[[0.16596613334366161, 1.3944611688190758, 0.79598107206511015, 0.12104272761262236, -0.31480299001407014], [1.4113051773858303, 1.280549611642495, 0.14143060278413316, 0.54865968144442667, -0.51939302587064895], [-0.95222334997610125, -1.3487543996383891, -1.2026629416903376, -0.31210367827862112, 1.2507020444211598], [-0.39314981805263083, -1.7947020005899161, 1.4427401536487254, 0.20918633320364266, -1.2388301117342608]], [[0.12585770692945042, -1.5204999422938359, -0.58394583216293983, -0.26966825889428558, -0.92179276700058721], [0.63633874380499555, -0.56982933406874692, -0.38236927855405978, -2.1160155950971857, -0.27274978881153222], [-1.3355495255141527, 1.2713016638010655, -0.5651323548369076, -0.88442352909371325, 0.40550854029266731], [1.0306804598287018, 0.77729109476990821, 0.54054733933458832, -0.019079974781731845, -0.45010066230611995]], [[0.99429475974199466, 0.49942774083123487, -0.82010380072764011, -0.61895631295851161, 0.58340298272458091], [0.69906836843466069, -0.36099004640768623, 0.41187608985615642, 0.21610687054429034, 0.18032935551489127], [0.26279558960495719, -0.42699909915004619, -0.13154028598467338, 0.94938754874171938, 0.037952116264099278], [-1.1756804011991135, -1.0041154192668569, 1.1033526403859732, -0.047853338563263653, -0.46482433339353435]], [[2.2619072341721314, 0.7327297946559842, -0.18489906056143468, 1.1123816359388881, -0.70483930899968272], [-2.3173147839714057, -0.6975037945902518, 0.60802821946366548, -0.064278691186685832, -1.4691836436696659], [0.09371640286508387, 0.22622402866600527, 1.0540537373930816, 0.57157063377136053, 0.90496604534864589], [0.036934660324889679, 1.5115476966886829, -1.9035291301321169, 1.1158115415412257, 1.4955584524383969]], [[-0.86961605261986685, -1.2159792195786747, 0.066013660927277229, -0.6343220307394537, 0.24821647146159276], [1.0289830747989162, -0.73120217892030359, -0.97562179284978756, -0.95246053771949701, 0.79047697865880362], [-0.9473096769792072, 0.69914892974807041, -0.095459581738718935, -1.667178255640235, -0.24916665908728403], [1.4794936732869517, -0.2417018370805496, 0.52229834507098649, -1.0370064999873512, -1.1313445239422599]]], [[[0.85618404080962895, -0.040995255349611015, -0.2156637997905885, 0.31800974500906531, 0.7835816446632291], [-0.67220176196397308, -1.6494949009758921, 1.1127546389699727, 0.22963966841531713, -0.5558967399630762], [-0.21433902664085008, -0.96286237454909118, -0.23272028472461484, 0.085679379314734516, 0.24671357072338565], [1.8008751124727904, -0.043243342180577932, 0.099508871782584746, 0.38677320678521609, -0.2333977981035408]], [[-0.050807442671136432, -0.78808020872393991, -0.36824110839837143, 0.36095441505857873, 0.27686127052505283], [-1.112511211908068, -1.0522876414463713, 0.87964821226063117, -0.1507994880277915, -0.30249342750291075], [0.42314951729535977, -0.026774095628366107, -0.0070443013380081451, 0.507355938972475, -0.48188378171009971], [1.1936411751845082, 1.0927167244027218, -0.57917632306279987, 0.49025864593687341, 0.72433744695581259]], [[-1.1525132023911744, -0.014599273221821182, 1.0798463173577348, 0.22758983056551177, -0.44726498699024042], [0.45887808705589805, 0.87953367064939592, -0.82164669142709323, -0.0059187256784456466, 0.13933830748182324], [-0.67939998741455043, 0.056594430800825268, -0.22262507790702601, -1.3713646871661451, 0.25947148114134361], [0.74808913756774931, -0.19015501291624026, -0.17807899695764762, -0.38738107340976924, -0.47256895272617394]], [[-0.18128602019285145, 1.4115977520932739, 0.77739722946946899, -0.24749869017777149, 0.58161324982503582], [1.7586473076404494, 0.80429770555920788, 0.18480974303230224, 1.1126069602649313, 0.070059141622992094], [-0.65747063560231422, -1.8234162249056298, -1.1553120355363558, -0.36916252186392684, 0.78866968021787387], [-0.11082414761257942, -2.4797000650909506, 1.8432143474973084, -0.26537037033907568, -1.7228523940222553]], [[-0.98983738677534627, -0.26421238853126405, -0.26056909879047374, -0.42283459156684022, 1.3793664296261741], [0.17583022630450806, -0.56288260598952367, 0.70864629063499751, 0.99205617083414721, 0.8198769859677526], [1.0821391395346214, -0.84647184780547091, -0.23676873589398809, 0.8124127288591787, -1.1814675330794566], [0.22769844733220457, -0.55896309182378401, 0.58186130335852437, -0.28142482657186429, -0.13695530279053766]]], [[[1.2039080362055503, 0.73115378745715454, -0.13641961612625697, 0.11275935368505752, 0.56930662887899652], [-0.72016573304044496, -0.80231102043802682, 0.19910144681034603, 0.63424921333650552, -0.14931253126252744], [0.28199086574159754, -0.39158688687987403, 0.76518306449887574, 0.20435587511118319, 0.18973549575079698], [-0.062324878730054281, -0.20468451295015144, -0.51596925312308661, -0.0022556270489294608, 0.1422143137188942]], [[1.4394288198322522, 0.866424323688467, -0.75174523482113709, -0.57287449722657025, 0.82849602657390875], [0.025028128004772832, -0.61698084857837643, -0.0032217954102639716, 0.64020329002368603, 0.39071015646470464], [0.66637205423630008, -0.17297565069635829, 0.87144956502772675, 0.83002988271130373, -0.11457292006249423], [-1.5157942266722617, -0.80909460208872397, 0.19240351109712783, -0.32491398136185307, -0.078021940584230565]], [[2.405811542812764, 0.82503547075062744, -0.96522549967991345, -0.29741968319680362, 0.38870698843326679], [-0.16640235468060283, -1.0902886252082877, 0.36192975677538314, -0.009287191245933045, -0.37712610191170043], [-0.0456564924435853, -0.17067433190472034, 0.58349976609808429, 0.72230764647123147, 0.63260475657786575], [-0.92330562585432574, -0.54720320482926965, 0.30312841302438426, 0.1499526805021543, -0.1621588004919699]], [[-1.5707058869927284, -0.48471190730949687, 0.64670011119472826, 0.31638650404295843, -1.1355833983681349], [0.86684091346463066, 1.6069372467558913, 0.045750419943266868, -0.62005794618066956, -0.3668091673142363], [-0.65076056494241108, -0.0014940098047813849, -1.4619812987862311, -0.27829155848479953, 0.28157849987756844], [0.26014367508268743, 0.16789343530235043, 0.70531241217833129, 0.45403337582667885, -0.17377531390300166]], [[-0.49161453989038273, -0.90166589210046921, 0.37123665110226284, 0.82912456252841937, -0.41784725875991824], [-1.2872358532696442, -0.57447176829736768, 0.40306740792409346, -0.48320524526670983, -0.63115883867886313], [-0.24593747625858031, 0.24196112764563843, -0.073552070989476387, -0.50580586102477398, -0.035058838395439218], [2.0069018871038899, 1.5226021511429098, -1.1370545063568622, 0.52635422647265206, 0.72929060063855233]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[-0.11205378833822233, 0.65867455044850753, 0.1576998978963865, 0.44785517425491844, -0.39250991190700035], [-0.026336513484684465, 1.0460511824747263, 0.93631475990468283, 0.50690478387815718, -0.65290568336279808], [0.33544384569506203, -0.8381439687550174, -0.86759392017761039, 1.1402266106590422, 0.28203215241095148], [-0.76071663335016027, -0.14788114395504137, 0.42162471172152405, 0.89705851371669731, 0.39271905130045104]], [[0.86418755859115204, 0.86255381777003171, 0.74497678663726641, 0.82208960027757716, -0.94398060028295638], [-0.3575821220589529, 0.5388684838578981, 0.018167040622411083, -0.11223421718947107, -1.1474729960274073], [-1.0009228976746507, -0.35387405904667357, -0.22872357758455369, -0.64746873668701865, 1.376060949342051], [0.46719540354771072, 0.042633970032029567, -0.39609337741035255, 0.60638770181060586, -0.048260643432325223]], [[-0.058691374681015693, 0.92709927616338084, 1.0463511041340277, 0.69927070535135782, 0.14262263677017425], [-0.12409386799577085, 0.20978880346540679, 0.50170831996962806, 0.89423563836307096, -0.64365273979088067], [-0.52461966225850742, -1.4104554111828835, -0.58116792330163725, -0.55868785589709513, 0.77220907422503204], [1.2442811022638747, -0.70958017889568648, 0.071825053572182496, 0.33757271509699421, -0.49515583013352277]], [[2.0011957916877194, -0.019037175807516259, -1.4621592478464223, -0.78237449151185101, -0.026249126960152372], [0.61545881453185791, -0.8778243300703954, 0.038425541831798381, -1.0023159111471696, -0.088091361864221313], [-0.3071917341433773, 0.63595473294890825, 0.20924488177001307, 0.71843350494182767, 0.41910497611136427], [-1.3190582455784177, -0.35573634454295966, 0.93842054758251503, -0.020008236698466981, -0.35406083447421732]], [[0.22874687213231459, -0.52030353906851246, -0.94037942377624228, -0.2975186951513098, -0.39712111730532956], [0.64571993282241325, 0.14016538205283233, 0.79792989845063522, -0.83285155892643981, -0.32694478082884759], [-0.02775169669510158, 0.109540256118491, -1.0160059865334532, 1.1837392943437512, 0.02229286184769852], [-0.73480834061350297, 0.091737118203549406, 1.20229685935538, 0.61595401642569114, 0.028350208242124003]]], [[[0.45146294170690654, 0.14329898466331015, 0.12966013918805963, 0.33628996785426468, 0.34258409045739613], [-0.085926096495490878, -0.80405113461024624, 0.86997166305478835, 0.13938199705231474, -0.61659925647915059], [-0.55189652586633309, -1.0093320602219973, -0.6705498798162749, -0.14901013671931956, 0.53638963411216423], [1.4855176108568513, -0.36529422007783174, 0.47832297449360239, 0.39950127614343284, -0.5094741515717004]], [[-0.7070875624653985, -0.28529057253429702, 0.17315127513410844, 0.10996499590064068, 1.3014947730249424], [-0.26529355769894114, -1.1615460666339417, 1.0187591982143902, 0.87177852908991482, 0.19280838382657678], [0.36175116554635212, -1.2786481663274079, -0.48010262582696256, 0.080848800820951333, -0.5883983874638099], [1.8775058522635364, -0.37728137378923987, 0.32453349598930903, -0.011757009416018094, -0.36518435098154911]], [[-1.6202783884870677, -0.96825030568119763, -0.13436484340835791, -0.38777623536445072, 0.10166570135443995], [0.33595655934979773, 0.46766542159542285, -0.2471125076463849, -0.14647233563340112, 0.82598592814978122], [0.67478903424619952, 0.56877203083670858, -0.14966641810389186, 0.25874848272398709, -1.1234778232607279], [-0.31506502282835608, 0.41511526728351339, 0.095787440619282932, -0.33739905264847481, 0.29244445319801415]], [[1.1318785180477557, 0.73788441324735399, 0.54597233274708112, 0.8288550649622195, -0.48658521143692862], [-0.26239447625208223, -0.25063898185078581, 0.71793837898160895, -0.089008165123020622, -1.3768820946871057], [-1.2286944620289326, -1.0033140112828962, -0.73684762437250395, -0.5306626304985439, 1.5008498671114847], [1.407445925480229, -0.26753138441254137, 0.18440429145392478, 0.79737601857727347, -0.46083603348766805]], [[-0.38193362630644612, 0.65683518742165947, 0.28398442381616384, -0.36236560731344725, 0.22094355328228255], [0.51051809855532682, 0.85689918750924066, -0.71972055289610282, 0.70386282458572524, 0.68762672970073979], [0.46418777430808467, 0.016384597241919041, 0.4585326645646095, -0.015703975560205807, -0.27749063835884996], [-1.3438143158115785, -0.73681726492417299, 0.02689745629426249, -0.57080974739962276, -0.15339530207712215]]], [[[0.2309713076121977, 0.80102544727855796, 0.54277142613732754, 0.67327157921442837, -0.50408580409922932], [-0.11918894374662337, 0.73719217315856866, 0.68130957137659021, 0.36999439179961324, -0.92251792577000646], [-0.3418360083846218, -0.91405427750676616, -0.76355526878079294, 0.26311415341946598, 0.82211203684567979], [0.12880099183810789, -0.23311554269125795, 0.19513683406999843, 0.7932949148122036, 0.032486201681271192]], [[-1.3785219357535961, 1.5147727881443334, 1.4415102560498849, 0.13766875818119767, 0.54966745824683927], [0.3732864051491579, 1.6873300724865108, -0.57791832609655214, 2.0706543924382146, 0.71207348158671213], [0.7585295900878033, -1.1308222537708521, 0.23345129456168884, -0.27087565416382775, -0.29127683283325168], [-0.94177653014554985, -1.3438928683853226, -0.22552740477898148, -0.55529381530887301, -0.24257456584300902]], [[-1.1255282518750498, 0.54625017006826515, 0.83546556063453259, -0.10699140236753414, 0.060629343684015374], [0.52302012438082435, 1.2194206723456742, -0.81841759315492801, 0.79801831114640343, 0.65229340879919884], [0.26939918763763454, -0.13303404242075509, 0.19491836534790896, -0.4991428865745971, -0.26142500256176276], [-0.7042111714227306, -0.65474916428353636, -0.11777077129328067, -0.57622572670487249, -0.22296337845664888]], [[1.2714036300403737, 1.2369155667412777, 0.58160016006932602, 0.5151259332376219, -1.3792365337266126], [0.38022426780889135, 1.2093372333461159, -0.40605117402224195, -0.40543126320103812, -1.1234960344980567], [-1.2781174532996928, -0.066650326312557406, -0.30695255399805454, -0.57720373249616874, 1.7648566613815482], [-0.73585905275156183, -0.44253226683956065, 0.12931504905168795, 0.50831163435665627, -0.34034843025521261]], [[-3.0995133912854507, -0.39599428434433698, 1.0733592519096236, 0.031398257598699464, -0.48451743149080262], [1.0351914954273491, 2.3369883654992512, -0.37544655596286369, 0.44060534408041913, 0.68358412112404943], [0.42279685687937307, -0.14248054630845119, -1.112495746671325, -0.10825029839354605, -0.81319666144009006], [-0.43720887860955143, -0.16832886097191357, 0.47372761901874821, -0.15586502411547665, 0.0075738443451572046]]], [[[-0.42035477423612549, -1.0154953542247676, -0.62219191026983878, -0.96390348690194183, 0.35710701044275506], [1.0170541159413644, -0.56164581082606835, -0.77598413299339042, -0.81566780484312362, 0.9844836816657534], [-0.18761290315623796, 0.90481822393620404, 0.1599371658758422, -0.51434036685226436, -0.60884903541231439], [-0.067728846304207169, -0.24646146351164488, 0.6806719147991519, -0.91415414633898728, -0.67522581520706271]], [[-0.86815994326049029, 0.42686296957422232, 0.72031792513770254, 0.8502652132274725, 0.61924534936183928], [-1.5336936748191263, 0.070627196171313467, 0.90888976430584212, 1.5615374724230908, -0.16051226764657922], [1.2228323848963671, -1.0519619120470876, 0.21249518091048153, 0.67906685946243828, -0.66732450413600553], [0.70935248572273812, 0.56156565454917318, -1.2011207473635142, 0.50725901290849396, 1.0506037027883948]], [[-0.024176261526444365, -1.0947566711064263, -0.20440092309625857, 0.52330203454303159, -1.3212080567472575], [0.22097661833951548, 0.028387370099725973, 0.83345183710000492, -1.7184971000744713, -1.264364411384135], [-1.3186520387250245, 0.22352248563293992, -1.6079865391354946, -0.11491864940128643, 0.86366789636899965], [1.4379959026583951, 0.94335826403677858, 0.72644193447927896, 1.0744051287922738, -0.066606658295867149]], [[-0.65173796062418377, -0.52258328746354477, -1.0014618081704274, -1.8119712537867878, 0.97920865242660349], [2.2489984265429288, 0.0091289664148673788, -0.9529240638406653, -0.22221493342102527, 1.8356697920512612], [0.40831574405787396, 0.59571086007929708, 0.029581027898506113, 0.21160063140175406, -1.0731280237321288], [-1.8095579624577813, -1.5603268482530757, 1.8469584269621215, -1.4281392112333724, -1.2396859541643832]], [[-1.0980937046686143, -1.0252851353271675, -0.37720890480732805, -1.1547304767303745, 0.7024665151305215], [1.3279809576206636, -0.37390100035442697, -1.027590227807023, -0.44381406983174904, 1.4677691609600902], [0.015247846638108173, 0.76695261011882032, 0.18793445661756061, -0.72999427881286105, -0.97039519976730504], [-0.05849528170381843, -0.60405347940913956, 0.79569682371472639, -1.2961493587626474, -0.90843541872235756]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5, 4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank2_Symbol_rank0_offset0(self):
      arg0=Data(numarray.array([[0.46363644093589662, 0.8713937684895392, 0.29588226632231085, -0.37501968228304561, -0.010738788409441202], [-0.018423857989603443, -0.92396353398762332, 0.34553440686475634, -0.94884865285447439, 0.83004102408573677], [-0.78117338687530791, 0.75643820574235265, -0.36960604210381098, -0.80958122642618924, -0.78088429559664396], [0.6197370543485452, -0.16367309906848337, 0.24571243849649615, 0.29047411160985415, -0.76317806843782154]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[0.23291479236456536, 0.024311791793168114, -0.70146613159459004, -0.38792046963009863, -0.71811447381090754], [0.89357174111351401, 0.18871369778823155, 0.54111746994967858, -0.41156696002607984, -0.81673246942072231], [0.46577154286993538, 0.5821182973921506, 0.062119314704801587, -0.1961928582412531, -0.28329288612530856], [-0.16945252971100633, 0.086700824071460847, 0.39251512739792416, 0.65448975231970041, -0.84609726099533367]]))
      arg1=Symbol(shape=())
      res=generalTensorProduct(arg0,arg1,offset=0)
      s1=numarray.array(0.112665628152)
      sub=res.substitute({arg1:s1})
      ref=Data(numarray.array([[0.052235890852000096, 0.09817612629423586, 0.033335761394112651, -0.042251828073620747, -0.0012098923417364696], [-0.0020757355333739544, -0.10409893194585812, 0.038929850997397202, -0.10690262949461833, 0.093517093370190221], [-0.088011390327594322, 0.085224585607807102, -0.04164189690224071, -0.091211977415023321, -0.087978819677090508], [0.069823064516981212, -0.01844033251806448, 0.027683346227861231, 0.032726448246292852, -0.085983936472047426]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[0.026241491387545765, 0.0027391032938674184, -0.079031122343154861, -0.043705303383726274, -0.080906818276638551], [0.10067482151104426, 0.021261547302116254, 0.060965339655667694, -0.04636945007776952, -0.092017676699066894], [0.052476443452566204, 0.06558472363420785, 0.0069987116115613991, -0.022104191612602294, -0.031917370966178478], [-0.019091475701762749, 0.0097682028052697139, 0.044222963387279816, 0.073738499063863136, -0.095326079387360346]]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank3_Symbol_rank1_offset1(self):
      arg0=Data(numarray.array([[[-0.31993299853794266, 0.031457179276909608, 0.18252386998907255], [-0.093546108277535733, -0.33200277434152459, 0.14511954372937153], [-0.97919911050605801, -0.10898634638461369, -0.32679710701640752], [0.3674355178616393, -0.047671881198801058, 0.59268327305022273], [0.88368852643698692, -0.53374871912499477, -0.93653687536190078]], [[0.40968852335785622, 0.67709771907701066, 0.72347838594143576], [-0.22280609034975374, -0.38453709049266971, -0.87196169122607659], [-0.046879574612087582, -0.39165751735276411, 0.028565103948712922], [-0.21160677085362356, 0.89091295848265917, 0.65982183739475708], [-0.21072428821147349, 0.0084417708190689389, -0.10741930572017977]], [[-0.98757874880410923, -0.93399238212560931, -0.89798686168907005], [0.16634183984521811, -0.36141813143543278, -0.097500918693735006], [0.057434499405521588, 0.13961566619997723, -0.8228875188965028], [-0.95184727197228902, -0.8427691547504792, -0.94540093372983525], [0.88269819353554402, 0.18966483686926217, 0.39534329192397588]], [[-0.078984855970301471, -0.26752970505654861, -0.93066167232663277], [-0.54122463521570552, 0.65236947927156641, -0.98110073595215908], [0.68155061858118282, -0.48062193923587437, -0.36359901937453509], [0.69159059634425524, -0.35884316283085882, 0.31736559652820429], [0.64991116085528366, -0.15623002621137383, 0.44783469637603956]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[-0.78792092375170819, 0.11234792604981458, 0.40263991333633697], [-0.10447819106380773, -0.67341161077026523, 0.49640045742296457], [-0.77138425401101118, 0.2756585595980634, 0.85020153903822515], [-0.89100919455932437, 0.17736568119591545, -0.018149922879484359], [0.35123151871462799, 0.66605799120103604, -0.074068568357043008]], [[-0.83000688348574725, 0.12213505840475913, 0.31364658090301112], [-0.48881188252878149, 0.35687268230573843, -0.22457073103229175], [0.88935066585789402, -0.98701277935008691, -0.33640846270276792], [0.11853557788902869, -0.80760410314754605, -0.076282922406927911], [0.75872046113573299, 0.29292119871311173, 0.053302275184319514]], [[-0.44479911484721835, 0.33747696448014364, 0.27487100987844149], [-0.8182868045425391, -0.088944514763764859, -0.23556857516423868], [0.68163019246550771, -0.35933256541778968, -0.15035678283118514], [0.59557701736441326, -0.50701693959053129, -0.75472400354363023], [-0.19558500307312343, -0.92138733278668083, -0.48586052178487749]], [[-0.5414019579504854, -0.72061034275975144, -0.24281981154572474], [-0.18867376685777182, -0.52366964374797287, 0.0063459661687668145], [-0.47139146336751825, -0.7645686640790661, -0.57562684163899247], [-0.47922730765360422, -0.60485804051078107, -0.19812979756483595], [0.036633724644431487, -0.060624695439456255, 0.95225371895513833]]]))
      arg1=Symbol(shape=(3,))
      res=generalTensorProduct(arg0,arg1,offset=1)
      s1=numarray.array([0.24450940207259397, 0.039865572182832043, 0.93706943396020947])
      sub=res.substitute({arg1:s1})
      ref=Data(numarray.array([[0.094064971810214545, 0.099878705132475099, -0.54999977217029006, 0.64332635114641767, -0.68280812455049189], [0.80511506547351608, -0.88689662349976894, -0.00030866199855953888, 0.60207578552116936, -0.15184688169642938], [-1.1201824702842187, -0.065101127497652733, -0.75149360801853482, -1.1522393997422138, 0.59385321953985726], [-0.90207237116965167, -1.0256869406744074, -0.19323226165355176, 0.45218851507814178, 0.5723333953948132]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[0.18912629608838333, 0.41276985645036945, 0.61907645842767445, -0.22779707899551088, 0.04302480013156243], [0.095833121219991796, -0.31573053525901118, -0.13713131738308854, -0.074694931315894553, 0.24713969031948169], [0.1622693683126761, -0.42436875266413787, 0.011445247090366512, -0.58181713479602593, -0.53983904951189754], [-0.38864443601386606, -0.061062288978273579, -0.68514193078364616, -0.32694997158032246, 0.89886830534419404]]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank4_Symbol_rank2_offset2(self):
      arg0=Data(numarray.array([[[[0.86906716812570917, 0.96241313636257542, 0.26477643038714205], [0.023757990344761559, 0.4373917920170729, 0.29274139933927201]], [[-0.72863010588035215, 0.19565418744511121, 0.51856066173402215], [0.095437430384435418, -0.2865211457926129, 0.35521043370262295]], [[-0.57920633985226377, 0.51574419402124327, 0.56657356245215684], [0.142684217373519, 0.037235215449854309, -0.95989204163748054]], [[-0.092831299828106006, 0.16024759392575527, -0.57642186019546315], [0.52912329013800807, 0.19915719814570632, -0.61390074696080532]], [[0.15525178588329425, -0.33387987518650797, 0.49345040022254683], [0.7789564018971511, -0.59468611875040089, -0.90017112458642434]]], [[[0.60107474671939287, 0.18536211075853615, 0.077165198562635151], [0.49074539747419621, -0.17907668032519952, 0.02325746426643005]], [[-0.31412082971481725, -0.32899707791018762, 0.4004472434396944], [-0.81878696834299025, 0.74015402668288521, 0.014557097187682722]], [[0.94114607451142906, 0.2663052262484209, -0.81811618958521515], [-0.18889911064444154, -0.79086511660904368, -0.58872281881497779]], [[0.41369388341934621, 0.74158399830679977, 0.22309150474730233], [0.6251689491322725, -0.28881009213828079, -0.074088717017223082]], [[0.75663004339979412, -0.56253916644764357, -0.16623213718442176], [-0.11553693936049392, 0.1870915259171293, -0.54717793621830713]]], [[[-0.27427248734300846, -0.025664723938901846, -0.05145092504215576], [0.29443955531826793, 0.31248906662023312, -0.79734472823788516]], [[0.95042007091064007, 0.96423788625683926, -0.39827702783980667], [0.2127808028081084, 0.12690327204406504, 0.56754050316593085]], [[0.81362465557035835, -0.95404911553960248, -0.51124422324111318], [-0.87337738246769381, -0.58953713748854941, 0.96564590873205169]], [[-0.86716415213135756, 0.0079865094570881201, -0.47534712618873098], [0.68329703305203915, -0.94778794464755944, -0.51054735297967468]], [[-0.51882461530596302, -0.40434576923395182, -0.36213631825113812], [0.59179765100481774, -0.42609564160765867, 0.58444661556402111]]], [[[0.79376732763876268, -0.91341405450102631, 0.12110863329146793], [-0.96446039769395209, -0.78220439886513926, -0.096030835807153991]], [[-0.88876163126421615, -0.80782500627731357, 0.32849585664487169], [-0.60117312136965184, 0.65650003668728307, 0.1167982184581664]], [[-0.65039664042620005, 0.64573812531739327, 0.79938574586364597], [-0.15415073149398206, 0.89104455244053327, 0.85349167499006162]], [[0.13159359336595511, 0.60884241836905528, -0.57213078118034577], [-0.57211158650267957, -0.61672542455303381, 0.64064420883300754]], [[0.70074350557449661, 0.78255642147937299, 0.99882041455024462], [-0.49735552464043042, -0.67883797689218484, -0.54471911883958746]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[0.33115301267651542, -0.46647492311280692, -0.33116750936980055], [-0.93292946450037118, 0.68674608694263317, -0.64665204745903893]], [[-0.86248747081544108, -0.12638635840015366, 0.34591174257268742], [-0.3297233324543527, 0.30121397318133791, 0.083525185865715335]], [[0.035978122333955254, -0.18260769821194911, -0.39128152989624798], [0.46217812445006023, 0.92860913008113721, -0.18496516748638925]], [[0.63598727878898487, 0.47639080540506984, -0.27534372005652941], [0.57551590560241994, -0.72292218354567139, -0.75183774911662549]], [[0.33248422698399493, -0.41994100152848279, 0.74829584202016042], [0.47716612192793506, -0.99392750486147863, 0.4623265884975456]]], [[[0.59122061597130071, 0.18554413592794483, 0.035177044146344594], [-0.54382086802509777, -0.87733127828878676, 0.75893363983685891]], [[0.15854859391039167, -0.53511011729738578, 0.59272342721916238], [0.74472865813282341, 0.60221991419910603, -0.44321470294408183]], [[-0.83315454392772414, 0.7125286751622788, -0.85335411230709801], [-0.65906590330279924, -0.46008492441297966, -0.35326655297653486]], [[0.5380170333223393, -0.61711066460947928, 0.022771664974561512], [0.15051515510276325, 0.41382131973615732, -0.62483437606674674]], [[0.23734312948751213, 0.3290604469084375, -0.24305334726670136], [0.42714871228697149, 0.16966823409707521, 0.65504626105396846]]], [[[-0.20547950618612854, 0.23477417807823708, -0.56249338864849618], [0.58233888283565349, -0.51959480560606286, 0.44238423652232139]], [[-0.092023549325770837, -0.4213779606435808, 0.95090305366309003], [0.56497467996438355, 0.63699602469545025, -0.72425560212676587]], [[0.47110970674850372, -0.26167771437227794, -0.98510678982018551], [0.71237543095244282, 0.5754879263098196, 0.37835779791938884]], [[-0.89610604374566716, 0.93450629746174529, 0.43560574840204613], [-0.31131987921226512, -0.015063335699199154, 0.59407174976314381]], [[-0.18130771405883306, -0.74133546981619092, -0.90162768377269731], [-0.45217762314312093, -0.28589000499438399, -0.24811337455900273]]], [[[0.35401133675502128, 0.64779677848732242, 0.87233466316476327], [-0.03818984177975504, -0.88308846124461837, 0.75549394294876149]], [[-0.52985388065552286, -0.91060311084104639, 0.38222603529062571], [-0.59331090411687248, 0.94671195135926434, 0.38035962080516295]], [[-0.94484409977739436, -0.76847296890732086, -0.83773762206239932], [-0.41187849758242656, 0.32086073319315633, 0.22328679316903099]], [[-0.35035732360482852, -0.19908510315817574, -0.36537525903505563], [-0.24717497307939329, 0.049857836443054193, -0.60805809667314281]], [[-0.69345464311073512, 0.10668926653933397, 0.8947167568459331], [-0.85982179281615601, -0.37373842806482527, 0.071192228605201358]]]]))
      arg1=Symbol(shape=(2, 3))
      res=generalTensorProduct(arg0,arg1,offset=2)
      s1=numarray.array([[0.8631066709420101, 0.97190069657762201, -0.020255859660097908], [0.27427113672566095, 0.11496125866191398, -0.85160508888604314]])
      sub=res.substitute({arg1:s1})
      ref=Data(numarray.array([[1.4876035702689008, -0.75849506796004429, 0.85072256824476522, 0.7781169629199538, 0.71137521040220741], [0.79158638327795328, -0.75086116804287972, 1.4463342622627708, 1.2746471998793394, 0.56548674963452905], [0.53507544227646664, 1.3551530321984993, -1.3443055496302496, -0.21783002289389702, -1.2178387276693217], [-0.47776154301556051, -1.7477540671559166, -0.61664193761486985, -0.056486415009907365, 1.5945867995513237]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[0.21292689840548062, -1.0011965481912015, 0.25253562391873474, 1.7325149529877355, -0.51343891097560279], [-0.20642083414774937, 0.25569776220862961, 0.057880189841519269, 0.4851020629234114, 0.10840887766878937], [-0.21453095073539863, 0.33674083729790583, 0.11157877209592004, -0.46704363412605676, -0.80432004630057197], [0.16209597931267328, -1.7278875809495073, -1.8116435629211975, -0.032721575423845461, -0.8523746178270295]]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank2_Symbol_rank1_offset0(self):
      arg0=Data(numarray.array([[-0.23796394844499957, 0.32992837196809099, -0.52282852969986493, 0.76076316700930757, 0.96141948012540368], [0.99008720675594097, 0.081407964233878083, -0.21334431931468423, -0.34164837845723239, -0.24190865211685497], [0.069586234180961881, -0.68897648397919586, -0.93121888465960145, -0.35714561176025073, 0.22660110035473924], [-0.54456058636826099, -0.69775179678255728, 0.364103151842744, -0.68967445533193339, 0.99973347194562567]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[0.20077918594080479, 0.38244809767539945, -0.77504434865982397, -0.89833550968698073, 0.37430461327796771], [-0.86766922125432222, -0.80366638419329028, -0.3627535870252323, 0.98833075432985007, -0.39954348139230067], [0.36428390858537441, 0.22596058274439801, -0.94729833241843586, -0.43414711765747138, -0.33817213165296089], [-0.5239982068771829, -0.82418338379536049, 0.92296798527722013, 0.40697105884089346, 0.38298006101878745]]))
      arg1=Symbol(shape=(2,))
      res=generalTensorProduct(arg0,arg1,offset=0)
      s1=numarray.array([0.78314547535209744, -0.24576647996851886])
      sub=res.substitute({arg1:s1})
      ref=Data(numarray.array([[[-0.18636038952162121, 0.058483561968737642], [0.25838191169709424, -0.08108533462034187], [-0.40945079741943891, 0.12849372737145201], [0.59578823205787124, -0.18697008564557996], [0.7529313157755757, -0.23628468140358383]], [[0.77538231617491182, -0.24333024766627076], [0.063754278847386991, -0.020007348811163297], [-0.16707963836336803, 0.052432882379249632], [-0.26756038175016256, 0.083965719360386354], [-0.18944966635383956, 0.059453037904688436]], [[0.054496144445611766, -0.017101963828920031], [-0.53956881605230411, 0.1693273252486536], [-0.72927985608359358, 0.22886238736300041], [-0.27969696989189718, 0.087774419838520079], [0.17746162645262059, -0.055690954791177354]], [[-0.42647015926938869, 0.1338347384413201], [-0.54644116256905595, 0.1714840029869584], [0.28514573592708264, -0.089484349973834323], [-0.54011542915912591, 0.16949886321113475], [0.78293674511225975, -0.24570097630678242]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[0.15723931101441874, -0.049344793779616328], [0.29951249725150608, -0.093992922736339204], [-0.6069724748501546, 0.19047992138961836], [-0.70352738975947926, 0.22078075604649453], [0.29313496429205704, -0.091991527241303855]], [[-0.67951122472760039, 0.21324401028470075], [-0.62938769247355564, 0.19751425831221225], [-0.28408883034655402, 0.089152672179145118], [0.77400675840474742, -0.24289857053627822], [-0.3129006696588052, 0.098194395016153152]], [[0.28528729475221304, -0.089528773922201169], [0.17696000798419853, -0.055533537032725941], [-0.74187240284208522, 0.23281417663852683], [-0.34000035083060343, 0.10669880889515514], [-0.26483797479419013, 0.083111374419798739]], [[-0.41036682480847808, 0.12878119481402098], [-0.64545548787971774, 0.20255664908392856], [0.72281820156469623, -0.22683459286521812], [0.31871754333049795, -0.10001984458038735], [0.29992910193693356, -0.09412366149471596]]]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5, 2),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank3_Symbol_rank2_offset1(self):
      arg0=Data(numarray.array([[[-0.63562542211536388, 0.28708049607930208, 0.78521382591859723], [0.0035880505812593277, -0.86182375874683403, -0.24956624774491321], [-0.10506502958847141, 0.94016614604361659, 0.59105930265473816], [-0.93442713689011958, -0.75594094366449771, 0.69230635971771126], [-0.17115329068491358, 0.22107723843409666, 0.63464932807003116]], [[-0.11221088841889904, 0.71499620460915936, 0.59820593945565137], [-0.48922378713212478, 0.46894231163668643, -0.0099905167116520754], [-0.44720959396435989, -0.44669764548313218, 0.44326716946138989], [-0.022248612390465272, 0.11882084163318418, -0.9034706238638095], [0.1256248106262885, 0.71153420292114089, -0.71718132764417253]], [[0.47981553256171394, 0.98787281047240016, 0.76653877100341083], [-0.97524555598427298, -0.39390381598987045, -0.17008928459139283], [0.34407707982456026, 0.043946741833764458, 0.69857130038886028], [-0.16086829058102681, -0.64078886643258537, -0.093546361341438899], [-0.49368899623511497, 0.43337242410288179, 0.45276451983225097]], [[-0.17338468426614884, -0.80087060951522693, -0.30357786763827099], [0.82003952968633165, 0.40671699702586817, -0.54440105671649408], [0.10688285891154781, -0.61915966567589176, 0.17501650779786893], [-0.027671445480546453, 0.34322437522040428, 0.33379475014301363], [-0.43655135498054887, 0.69561900920746322, -0.99269132961635753]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[0.10196017162530024, 0.21444170772517501, -0.95863748511044955], [0.032187218439938103, -0.84784881600307993, -0.42033119119826656], [0.59169591822774414, -0.24137219814959043, -0.86950605918022972], [-0.73366349253643781, 0.64687835776159597, 0.32683312671369591], [-0.89630574815037978, -0.58349071915974848, 0.33174268360495418]], [[0.51545243657790363, -0.05998793614309772, -0.24922922357082689], [-0.54214544912892282, 0.68967882300486472, 0.92699005204115448], [0.43801544662581082, -0.49329596038329337, -0.51820794970747452], [0.37967624292239255, -0.71110293178145856, -0.0150556523136125], [-0.32091374965656683, -0.030265442378097918, -0.69249387316869582]], [[0.095808528090675527, 0.22371875163864963, 0.40489890985141996], [-0.53359955475255427, -0.55497458503462571, 0.98665125609879589], [-0.23763439572256129, -0.041579863520118332, 0.5827547070040715], [-0.71996761856896518, -0.098045064817342764, 0.58831886203505923], [-0.028486201852257365, 0.9909878301969941, 0.10157805367445749]], [[-0.87605863523231275, 0.76984269147920403, 0.9792567729565882], [-0.099508063109612577, -0.18348898526628643, -0.85148808399577791], [-0.32160519480519456, -0.64575689571242378, -0.53649522996960153], [0.21233577322889685, 0.76421833659707472, 0.38613189914981216], [0.82868249936787253, -0.094996041992198244, -0.60457861227461152]]]))
      arg1=Symbol(shape=(3, 2))
      res=generalTensorProduct(arg0,arg1,offset=1)
      s1=numarray.array([[-0.96262981608830223, -0.18039135146254903], [0.58652755714978322, -0.65150840975152757], [-0.37016221080437561, -0.16210454342573333]])
      sub=res.substitute({arg1:s1})
      ref=Data(numarray.array([[[0.48959611950651316, -0.19966075729406951], [-0.41655735437516828, 0.60129399589892718], [0.43378426487678057, -0.68938672642656063], [0.19986157522837761, 0.54883844978704399], [0.059501954971182741, -0.2160386461927844]], [[0.30594929107735425, -0.54255606712261295], [0.74968710447452125, -0.21564861144110292], [0.0044160549762287948, 0.29984439356956], [0.42553955916148245, 0.073057372659513814], [0.56187765530692713, -0.36997379472385639]], [[-0.16621379770701739, -0.85442143365080669], [0.77072563287204299, 0.46012975842276427], [-0.56402757789569458, -0.2039417830225736], [-0.18635638757417761, 0.46166287389575184], [0.56182830126088268, -0.26668373939116985]], [[-0.19045436082811223, 0.60226238636733964], [-0.34932707621179737, -0.32465769822455659], [-0.53082733046529296, 0.35573601471101279], [0.10438971015828813, -0.27273152301048914], [1.195693885952557, -0.2135317708237956]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[0.3824774405715109, -0.0027038173046493585], [-0.37268034804586714, 0.61471193382647105], [-0.38929729351437103, 0.1914700733600134], [0.96467706309357681, -0.34208127601288391], [0.39777864619116454, 0.4880579195164324]], [[-0.43911922147568766, -0.01349932727278718], [0.58326432220584912, -0.50180250210389576], [-0.51915740310458758, 0.3263761313947855], [-0.77699610381179918, 0.39723981931986835], [0.5475046908886344, 0.18986465837277239]], [[-0.11088920851128489, -0.22867363089064974], [-0.17707005663476683, 0.29788670277972901], [-0.011347551827695646, -0.024510365150035157], [0.41778275326585568, 0.098383955467120796], [0.57106298154335711, -0.65696450489756941]], [[0.9323702641163929, -0.50226755859114358], [0.30335679384384101, 0.27552509807211145], [0.12942279538508142, 0.56569915824427563], [0.10090293030966593, -0.59879194548971548], [-0.62964012268606029, 0.0104085041644323]]]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5, 2),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank4_Symbol_rank3_offset2(self):
      arg0=Data(numarray.array([[[[0.38897690449280642, -0.091167782620206861, -0.75950572124465343], [0.6333860101748201, -0.37504852635297015, -0.51265332402259167]], [[-0.10808566430529654, 0.9195873368438412, -0.061535607770388134], [0.36466830427661368, -0.31825022558111105, 0.91558696890774471]], [[-0.22126969468858571, -0.58446935773922215, 0.75936514161241653], [-0.84593458303573565, 0.1216267037523453, 0.76825045846768392]], [[-0.21916239746116251, -0.74085753034207524, -0.41158438688745158], [-0.31161916804805778, -0.29880785241654828, 0.40554990997072649]], [[-0.22621272366037215, 0.12216231446354509, -0.54651086336642418], [-0.53943501835020302, 0.66077151454009986, 0.13369060691321133]]], [[[-0.64661405403946692, 0.3492278854226567, -0.454986709211743], [0.12010851095743802, 0.87589440576005906, -0.088152819459001552]], [[-0.44118592226749187, 0.46236894722641453, -0.48640614719820841], [-0.28880416030563349, -0.41324721434425227, 0.26294945352795951]], [[0.32494696599087569, 0.49043579946471461, -0.23557929961931112], [0.33303468184001028, -0.27701512566733433, 0.28356413557794924]], [[-0.12141292731866526, 0.93025228514730363, -0.4587693267715347], [0.61874435742120504, -0.26911442104733685, 0.84262364484756147]], [[0.58159943694126914, -0.56786534071243944, 0.15356093417750771], [0.23498328823558845, 0.66398025506876301, 0.20996064576288154]]], [[[0.63615936697224984, -0.92966150012196791, -0.5887247332635821], [-0.57317415886210776, -0.41044383753115121, 0.58217919738536072]], [[0.29490336594606781, -0.49809232883182886, 0.795009972974839], [-0.3580416813722942, -0.70318132883755213, 0.83694591801075502]], [[0.78240853940375588, 0.97775077401722843, 0.2810046744520589], [-0.28745184566079285, -0.82908708574856727, 0.700361715777162]], [[0.57738702384240415, 0.79034059425205294, -0.25323665402580975], [0.49835766649635738, -0.46945414935294316, 0.90286636847870638]], [[-0.14247950083401895, -0.30430426271301192, -0.65008417124542195], [0.97079307420689775, 0.49379185414129401, 0.1720270012021119]]], [[[0.33045901299612068, -0.37333291055237638, 0.35780644495346015], [0.91127867358406744, -0.11549958345772149, 0.93546382886677804]], [[0.83340124625951972, -0.64315670673028502, 0.56837732387468121], [0.69021174225032333, 0.5412426431070454, -0.5718417918675216]], [[-0.92565206015539458, -0.68105671682386038, 0.33683793415067398], [-0.43181291101588948, -0.64976424974748137, 0.49321690051803291]], [[-0.1837257431536734, -0.72394579933348857, -0.54421498614278119], [0.67341498203362726, 0.26402228326608768, 0.23844821656420634]], [[0.47605625162068921, -0.37283879894855465, 0.84427305869025426], [0.057467029202093123, 0.41922676467041353, 0.84930558534716916]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[0.60875248034205076, -0.13182876018047307, 0.18470458939404355], [-0.020218502700041885, 0.11512076544806638, 0.84227476341481178]], [[0.46927805670499834, 0.90656725108838443, 0.31176581523073454], [0.26663873081511569, -0.0081904382755826344, 0.34660225821750479]], [[0.92136855327904876, 0.44736409092028806, 0.49843926561554763], [-0.5946840605950201, 0.6999868813866017, -0.63455636277529281]], [[-0.11113727826721087, 0.39638237493797712, -0.15513613532790682], [0.48007385712525097, 0.38469102674676003, 0.76973386525659815]], [[-0.86105689565205346, 0.3674547953945102, 0.022193489418559587], [-0.22263272238889487, 0.68941797588379128, 0.96882732918642112]]], [[[0.089215693801399043, -0.58213767801950334, -0.88171431743109752], [-0.62544026365075611, 0.67343782381062822, 0.031325849542236162]], [[-0.25635928257460461, 0.73955025698136057, -0.40983539894225718], [0.25741600702276268, -0.973973676171491, 0.02981173259605896]], [[0.043322790026276037, -0.74234223715368208, -0.0073549163013255647], [0.183969066744053, 0.85274198493758968, -0.90599782919001659]], [[0.43619392079959396, 0.16472858963469372, 0.72180747471074902], [0.94875742893767034, 0.12582317129142773, 0.12002910350712548]], [[-0.068033981555040146, -0.5462467011900729, -0.14507149796487662], [-0.25850347841370125, -0.21353282956523789, 0.19000292542621788]]], [[[-0.64096664219659427, 0.43863490278328476, -0.55668125484379116], [-0.96521083203635571, 0.56731180448084295, 0.21396710749576431]], [[-0.92780774765771912, -0.39074876891420507, -0.096029842834875812], [0.092982654024926781, -0.057355216962008626, -0.92992360889035819]], [[-0.50512037424737577, 0.40654403893513757, -0.1423289924420672], [-0.61719357074265657, -0.83054932404853443, -0.1715956779316683]], [[-0.24220634182619349, 0.984775044202294, 0.98188179860344449], [-0.90650035085445602, -0.54813114562106202, -0.52652395535585539]], [[-0.35374905307815441, -0.73527725391365251, -0.99802389161745353], [0.70082546179641181, -0.35784654219198209, 0.45803935792771755]]], [[[0.59346980653845915, 0.7413062772102319, 0.84005358946575925], [-0.47381302251642587, 0.16874024625414075, 0.13615033164750989]], [[0.9514053465887371, 0.7539684967977891, -0.33584633422823962], [0.19148386724847244, 0.77665600453013717, -0.19470442564378154]], [[0.47079354895402759, -0.63510398999107975, 0.87304571285330423], [0.99713781948205082, 0.55431498887644826, 0.81571152499829402]], [[-0.48864754369849361, -0.13420871763695019, 0.21974287426494654], [-0.13297010317736002, -0.96092049516168809, 0.70961803377119881]], [[-0.62124162313135067, 0.4341469322255862, -0.50618806896596524], [-0.7907699417906302, 0.37789586843392153, -0.75030521334175582]]]]))
      arg1=Symbol(shape=(2, 3, 2))
      res=generalTensorProduct(arg0,arg1,offset=2)
      s1=numarray.array([[[-0.88553699677827336, -0.97296400613271183], [-0.18909337768769108, -0.38647898214385035], [0.095116970278609658, 0.8458393279738341]], [[-0.30412782811759298, -0.73440544041878608], [-0.98043255409520724, -0.76740614667666684], [-0.86032222696910199, -0.80350628391450063]]])
      sub=res.substitute({arg1:s1})
      ref=Data(numarray.array([[[0.21667042337080045, -0.75107332431734497], [-0.67060981954401411, -1.0615540444152129], [-0.14422718010902358, 0.99410128108278439], [0.33384840917110775, 0.28372862112881403], [-0.47356451006949174, -0.50771406283291132]], [[-0.35615687022821108, -0.58022643993876044], [0.5237632160281378, 0.15708695427849764], [-0.4765453073794596, -0.9648120037313126], [-0.76128234513494197, -1.5543802422493518], [-1.2961286173371693, -1.0673396544344986]], [[-0.36767852667131151, -0.48949736776862968], [-0.013073811070022479, 0.70810468543768601], [-0.55326026780922144, -0.61684298046191532], [-1.1528851556990896, -1.8126177238405083], [-0.80549469737307411, -1.5237515266282242]], [[-1.1567114125787645, -1.206856629135022], [-0.81092493486884409, -0.54431668878177608], [1.3245723476516658, 1.8682069666332493], [-0.42097735949985404, -0.89053665731063314], [-1.4299367430746912, -0.65131555135134089]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[-1.3279231937093963, -1.1353836710195879], [-0.92858643725599532, -1.011288693204522], [-0.8125965068175629, -0.23832072471555388], [-1.1766797682046197, -1.4425502384103654], [-0.74659725950538203, -0.42948381924528956]], [[-0.54978831352517066, -0.69025243737408981], [0.89916970329955848, 0.15138458091107124], [-0.011247554651872438, 0.17699470412622242], [-0.86392717503183925, -0.76730620436164299], [0.27424837911500677, 0.3556445282732803]], [[-0.015037260176428341, 0.084825007669833613], [1.7143502826301737, 1.6954411542010515], [1.5065210022311049, 1.4424729352728529], [1.3877397228234549, 2.1950207431139965], [0.1010073580170297, -0.82392745551014812]], [[-0.7242840873851828, -0.044292780111444774], [-1.6692056266276538, -2.0813393284088204], [-1.7622702591129324, -1.287271940125569], [0.85105221142957843, 0.97806019771321262], [0.93538904139835877, 0.90212438677299067]]]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5, 2),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank2_Symbol_rank2_offset0(self):
      arg0=Data(numarray.array([[0.65179731177582578, 0.72990401388196435, -0.87114454792905138, -0.011615586588471061, -0.44903339122596053], [-0.28103252575411419, 0.11678099846034362, -0.39463964389892725, -0.26485657405735785, -0.74624690111413616], [0.4336093936969283, 0.64540352935681411, 0.62458370708114819, 0.072097405005399962, -0.028674198243495042], [0.34743902602838372, 0.80551338866092026, 0.71851146772147345, -0.33666377795695168, 0.42490799045564409]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[-0.25789489159419565, -0.69426809722632643, -0.36504978908730523, -0.12526519050024953, 0.36706627954749815], [-0.52855423194997786, -0.38621038954960629, -0.72580890953607202, 0.71474670525952244, 0.78801570461872905], [-0.31871436347226956, -0.096093631524107881, -0.013007042635239552, 0.55609511946848067, 0.39159249341565272], [-0.2281224770839505, -0.29160634192712065, 0.65164822740334105, -0.052148146054825872, 0.34922873471602967]]))
      arg1=Symbol(shape=(4, 5))
      res=generalTensorProduct(arg0,arg1,offset=0)
      s1=numarray.array([[-0.4238898249054186, -0.92015646102432469, 0.95160407132772229, -0.8889098771870223, 0.54980708327126893], [0.9855031016147564, 0.5910886980172978, -0.3585429050813107, 0.82716818222201383, -0.76352655569200456], [0.894700994912901, -0.15850732958858926, -0.9006874139255685, -0.70826202952829331, -0.77446647014933623], [-0.5795850349336642, 0.37513841672155235, 0.85125967200225006, -0.90205144588459718, -0.65140979617253647]])
      sub=res.substitute({arg1:s1})
      ref=Data(numarray.array([[[[-0.27629024836247734, -0.59975550770881225, 0.62025297556634051, -0.57938906836148063, 0.35836277887152068], [0.64234827237923675, 0.38527002438874758, -0.23369730168829339, 0.53914599755880499, -0.49766455646950392], [0.58316370332738565, -0.1033146513226073, -0.58706563514700605, -0.46164328687943212, -0.50479516330385021], [-0.37777196771526039, 0.24451421156294731, 0.55484876583423781, -0.58795470751107726, -0.42458715400969788]], [[-0.30939888464218812, -0.67162589430107789, 0.69457963128852362, -0.64881888733813153, 0.40130639694043463], [0.71932266956173607, 0.43143801324308995, -0.26170190556774886, 0.60375337635929605, -0.55730109770506531], [0.65304584741111338, -0.11569513609642276, -0.65741535867723877, -0.51696329823288767, -0.56528618517899709], [-0.42304144338400002, 0.27381503612638608, 0.62133785145028675, -0.65841097107919699, -0.47546662490836661]], [[0.36926930988895562, 0.80158928426303111, -0.8289846985242334, 0.77436899311175711, -0.47896144300453986], [-0.85851565393886498, -0.5149236966202505, 0.31234269696022721, -0.72058305216309149, 0.66514199619013703], [-0.77941389374507164, 0.13808279597789275, 0.78462893002957579, 0.61699860552873753, 0.67467224302445172], [0.5049023432437304, -0.32679978644571683, -0.74157022213663271, 0.78581719903388458, 0.56747209240327978]], [[0.0049237289651607261, 0.010688157047969141, -0.01105343948844875, 0.010325209647813034, -0.0063863317826921432], [-0.011447196610012998, -0.0068658419532865453, 0.0041646861596539254, -0.0096080436438280101, 0.0088688088202375503], [-0.010392476877202008, 0.0018411556117435795, 0.010462012645598517, 0.0082268789313121385, 0.0089958823438871533], [0.0067322201586540011, -0.004357452762091131, -0.0098878804294156106, 0.010477856676928056, 0.0075665068920203818]], [[0.19034068558345874, 0.41318097615223087, -0.427302003252718, 0.39915021664754069, -0.24688173912135197], [-0.44252379978177647, -0.2654185625860449, 0.16099773656866861, -0.37142613397736413, 0.34284891859345801], [-0.40175062187898081, 0.071175083739335274, 0.40443872390953844, 0.31803330099567095, 0.34776130548195555], [0.26025303374008002, -0.16844967543961623, -0.38224401733306917, 0.40505121980584169, 0.29250474985316577]]], [[[0.11912682813463901, 0.25859389433063312, -0.26743169568312802, 0.24981258795364833, -0.1545136732892273], [-0.27695842578530844, -0.16611514974851208, 0.10076221820621838, -0.23246116347329193, 0.21457579642646338], [-0.25144008039509147, 0.044545715184821082, 0.25312245885044382, 0.19904466705407128, 0.21765026821794126], [0.16288224625669415, -0.10542609675865729, -0.23923165569541113, 0.25350579619709901, 0.18306734031934063]], [[-0.049502276989635018, -0.1074567902581569, 0.11112927358857946, -0.10380778299916189, 0.064207020144988067], [0.11508803619233673, 0.069027928333084576, -0.041870998446267675, 0.096597526214514229, -0.089165393524699446], [0.1044840755093914, -0.018510644212638223, -0.10518317549889269, -0.082711546979863465, -0.090442967658097395], [-0.067684519072226446, 0.043809038865575349, 0.099410954445447383, -0.10534246851299989, -0.07607228640387774]], [[0.16728372955305301, 0.36313021810993662, -0.37554069184154171, 0.35079907739132565, -0.21697567155528141], [-0.38891859308253579, -0.23326703329822696, 0.14149524438377534, -0.32643335687661851, 0.30131784804566714], [-0.35308448202844317, 0.062553276104210756, 0.35544696029583206, 0.27950827512017717, 0.30563517199139323], [0.22872723179536855, -0.1480444911878008, -0.3359408138244856, 0.35598526138240988, 0.25707212999380258]], [[0.11227000680222246, 0.24370948786364538, -0.25203859419089414, 0.23543362471750146, -0.14562002046769676], [-0.26101697521658457, -0.15655372752088567, 0.094962445492408398, -0.21908093091257488, 0.20222502774239878], [-0.23696744031834052, 0.041981708277814223, 0.23855298274890746, 0.18758785467577499, 0.20512253600604818], [0.15350690672744438, -0.099357875850171806, -0.2254617203597061, 0.23891425558048054, 0.17253016692165979]], [[0.31632646824948241, 0.68666390757955276, -0.71013158931590814, 0.66334624122056274, -0.41029183210178627], [-0.73542863561838157, -0.44109810917899794, 0.26756153183338799, -0.61727169268339088, 0.56977932610350834], [-0.66766784487748687, 0.11828560350936176, 0.67213519151446077, 0.52853834471229766, 0.57794320336574578], [0.43251353625137529, -0.27994588096732187, -0.63524989227511508, 0.67315309613690655, 0.48611254174914642]]], [[[-0.18380260997153566, -0.39898848517106866, 0.41262446440794215, -0.38543967289827574, 0.23840151602753148], [0.42732340237761685, 0.25630161196838724, -0.15546757168664244, 0.35866789397867771, -0.33107228688511403], [0.38795075594422151, -0.068730267079427379, -0.39054652346272006, -0.30710906920231917, -0.33581593656005393], [-0.25131351559339915, 0.16266354142705794, 0.36911419025554171, -0.39113798053345772, -0.28245740676661318]], [[-0.27357998905239911, -0.59387222750557489, 0.61416862618522539, -0.57370557201663641, 0.35484743200865276], [0.63604717997425075, 0.38149073186328808, -0.23140485636532312, 0.53385726417774804, -0.49278273380127185], [0.57744317983583926, -0.10230118994539927, -0.58130683579482367, -0.45711481356698058, -0.49984339320289534], [-0.37406622710857929, 0.24211565814941718, 0.54940599670937618, -0.58218718683533621, -0.42042218150735794]], [[-0.26475467823340515, -0.5747147335212428, 0.59435639854338218, -0.55519862635451855, 0.3434005462490427], [0.61552918054651407, 0.36918437022141321, -0.22394005680332929, 0.51663576963180013, -0.47688624660901296], [0.55881566413189121, -0.099001095513974444, -0.56255468391096419, -0.44236892398759908, -0.48371913893592383], [-0.36199936968762475, 0.23430534298449976, 0.53168292162784758, -0.56340663604851149, -0.40685994532241798]], [[-0.030561356383874042, -0.066340893038806262, 0.068608184135302314, -0.06408809542885309, 0.039639663957446336], [0.071052216251196926, 0.042615961255067669, -0.025850013039459933, 0.059636679441241007, -0.055048283318104525], [0.064505619988969712, -0.011427967137672936, -0.064937225265058032, -0.051063854392847913, -0.055837022761459194], [-0.041786576998681275, 0.027046506363458265, 0.061373613337110153, -0.06503556842964843, -0.0469649558991364]], [[0.012154700872738376, 0.026384748778444305, -0.027286483790568104, 0.025488778039061508, -0.015765277301398151], [-0.028258511305280763, -0.016948994506437373, 0.010280930339100129, -0.023718384437745457, 0.021893511822085498], [-0.025654833696784771, 0.0045450705916702154, 0.025826489462322629, 0.020308845843034423, 0.022207205098001902], [0.016619136190650887, -0.010756793329824647, -0.024409188591685085, 0.025865601985126278, 0.018678653633206008]]], [[[-0.14727586790848074, -0.31969826461201578, 0.3306243917067484, -0.30884198195686924, 0.19102443751527615], [0.34240223777298223, 0.20536728153551537, -0.12457179773083782, 0.28739050759288509, -0.26527892285643656], [0.31085404225916424, -0.055071632210619462, -0.31293395785032324, -0.24607786971219658, -0.26907987608032569], [-0.20137046003797904, 0.13033772613156608, 0.29576083133770315, -0.31340787578563972, -0.22632518512753402]], [[-0.34144892927844789, -0.74119834901794379, 0.76652982015872162, -0.71602880738708075, 0.44287696675561661], [0.79383594291754966, 0.47612986013908493, -0.28881111045237728, 0.66629504545414797, -0.61503086320806744], [0.72069363025058764, -0.12767977618449788, -0.72551577091542563, -0.57051454746519636, -0.62384311077425325], [-0.46686350550657368, 0.30217901727027008, 0.68570106302491596, -0.72661451692098455, -0.5247193123218592]], [[-0.30456970024499069, -0.66114296934398431, 0.68373843797941147, -0.63869194052976208, 0.3950426943649018], [0.70809527998528299, 0.42470400796598345, -0.25761718897109348, 0.59432982466084239, -0.54860258617458357], [0.64285292502673108, -0.11388933402730861, -0.64715423573791853, -0.50889439036776363, -0.55646304016806825], [-0.41643849411958855, 0.2695412543973123, 0.61163983634243679, -0.64813430834281915, -0.46804540873607503]], [[0.14270834989016898, 0.30978335047994771, -0.32037062177240749, 0.29926375751703288, -0.18510012980159773], [-0.33178319737791756, -0.19899815418215921, 0.12070840898433478, -0.27847756523264738, 0.25705173480972915], [-0.30121341708922067, 0.05336367641316217, 0.3032288275304586, 0.23844617064445331, 0.26073480774146029], [0.1951252875080792, -0.12629551663026711, -0.28658829719867301, 0.30368804768303925, 0.21930608297761398]], [[-0.18011417367515625, -0.39098183275862303, 0.40434417365727188, -0.37770490961171105, 0.23361742289107384], [0.41874814249493059, 0.25115831085557305, -0.15234774529022849, 0.35147037007680393, -0.32442853443860908], [0.38016560180710623, -0.06735103088797792, -0.38270927907980423, -0.30094619568290315, -0.32907699150643055], [-0.24627031249182754, 0.15939931079186681, 0.36170703658640679, -0.38328886715843236, -0.27678922745479317]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[0.10931902044186551, 0.23730365076556692, -0.24541382881565818, 0.22924531641415688, -0.1417924381379648], [-0.25415621555668116, -0.15243875569772528, 0.092466383637812607, -0.21332244868431413, 0.1969095983094791], [-0.23073881609228161, 0.04087823058113467, 0.23228268297459093, 0.18265715932548421, 0.19973094636250244], [0.14947201975383542, -0.096746281313222937, -0.21953552082953082, 0.23263445984879563, 0.16799525876731339]], [[0.29429318217068567, 0.63883527534586826, -0.66066834791352314, 0.61714176904032148, -0.38171351754430027], [-0.68420336316871999, -0.41037402566445602, 0.24892490048480095, -0.5742764799574368, 0.53009212900205871], [-0.62116235732468095, 0.11004658210989605, 0.62531853706180507, 0.49172373157826443, 0.53768736259616923], [0.402387399384249, -0.26044663477376889, -0.59100243272650888, 0.62626554093455589, 0.45225303970329606]], [[0.15474089117797779, 0.33590292202425093, -0.34738286553280601, 0.3244963631847449, -0.20070695978688319], [-0.35975769938935198, -0.21577680454310441, 0.13088601187868218, -0.30195757045987581, 0.2787252081179229], [-0.32661040948915665, 0.057863067235106487, 0.32879575048711918, 0.25855090449785023, 0.28271882158320494], [0.21157739476069254, -0.13694419990274831, -0.31075216372295, 0.32929369006607095, 0.23779700870218892]], [[0.05309863966789468, 0.11526357438024747, -0.11920286527568018, 0.11134946510338577, -0.068871689024362068], [-0.12344923376235924, -0.074042838359681284, 0.044912945307523273, -0.10361537992178568, 0.095643299450758335], [-0.11207489056852733, 0.019855450836600473, 0.11282478048656344, 0.088720578052955024, 0.097013689919312418], [0.072601829812059232, -0.046991785234587254, -0.10663320497854178, 0.1129956462097596, 0.081598972211281498]], [[-0.15559566096607244, -0.33775840874979135, 0.34930176606451907, -0.32628884147206377, 0.2018156405252462], [0.36174495699224868, 0.21696872926378416, -0.13160901022634849, 0.30362554720830159, -0.28026485213357977], [0.32841456551012366, -0.058182695753092532, -0.33061197806491593, -0.25997910812371089, -0.28428052583200036], [-0.21274612245450686, 0.13770066294131919, 0.31246872073068949, -0.33111266820130048, -0.23911057034184707]]], [[[0.22404876083429412, 0.48635259153052168, -0.50297435904109622, 0.46983707740933572, -0.29060286061910306], [-0.5208918349583086, -0.31242243279484522, 0.18950936981636599, -0.43720324324781584, 0.40356519221719944], [-0.47289799719106945, 0.083779719849138803, 0.47606214429444066, 0.37435489303665959, 0.40934753030079285], [0.30634212298906399, -0.19828099772519084, -0.44993690212513937, 0.47678310915890026, 0.34430540450066666]], [[0.16371065440283611, 0.35537398525879155, -0.36751937908447097, 0.34330622994289256, -0.2123412078073296], [-0.38061153677698029, -0.22828459631963019, 0.13847299504170052, -0.3194609458790037, 0.29488188850527824], [-0.34554281977573181, 0.061217177506876892, 0.34785483699462127, 0.27353815432731693, 0.29910699712948369], [0.22384176211885262, -0.14488235405705327, -0.32876532953185905, 0.34838164030887586, 0.25158123113622494]], [[0.30766301157803838, 0.6678577575786363, -0.69068271332046061, 0.64517870863695637, -0.39905487956432806], [-0.71528693152742318, -0.42901744334703151, 0.26023363495896151, -0.60036603634149477, 0.55417437678864678], [-0.64938195347857142, 0.11504603204216873, 0.65372694973418155, 0.51406289131773586, 0.56211466417134059], [0.420667982188629, -0.27227880516575848, -0.6178518542679875, 0.65471697628293657, 0.47279903382110366]], [[-0.30297385574418378, -0.65767879884039826, 0.68015587469303707, -0.6353454059920709, 0.39297280129648737], [0.70438509490218748, 0.4224786994240044, -0.25626736010104451, 0.59121573293869267, -0.54572809005901157], [0.63948458830641275, -0.1132925915829294, -0.64376336157201985, -0.5062279520657702, -0.55354735787321041], [-0.41425649413656168, 0.2681289473680033, 0.60843504588390995, -0.64473829892060419, -0.46559300558809752]], [[-0.3340318390535531, -0.72509774199355936, 0.74987895278536643, -0.70047494321407933, 0.43325661612837724], [0.7765919210228952, 0.4657871768602681, -0.28253743998369513, 0.65182151795187349, -0.60167091677874629], [0.70503843492936757, -0.12490626501298528, -0.70975582712577778, -0.55812160225342911, -0.61029174117830909], [-0.4567221096897221, 0.2956149637823885, 0.67080599024636123, -0.71083070573109419, -0.51332114952644403]]], [[[0.13509977572710227, 0.29326708077026387, -0.30328988587083522, 0.28330834569187513, -0.17523141457734759], [-0.31409399373109448, -0.18838845814423563, 0.11427277377048831, -0.26363038068140343, 0.2433468801915516], [-0.28515405809167155, 0.050518562655516464, 0.28706201581677215, 0.22573328191268779, 0.24683358806426114], [0.18472207548693589, -0.11956200169940456, -0.27130868451181012, 0.2874967523943498, 0.20761365854673081]], [[0.040733112641279906, 0.088421175910198588, -0.091443090987007022, 0.085418578196549716, -0.052832959269213817], [-0.094700571912433848, -0.056799859545338893, 0.03445368980646666, -0.079485594510908322, 0.073370039501538725], [-0.085975067729413032, 0.015231544923356219, 0.086550324472165208, 0.06805947048800863, 0.074421295610306817], [0.05569443078380272, -0.036048412786978082, -0.08180063325271715, 0.086681399256623215, 0.062596332924597944]], [[0.005513553025189008, 0.011968514319634532, -0.012377554727627223, 0.011562088671457154, -0.0071513641732660971], [-0.012818480859863953, -0.0076883158963192292, 0.0046635828529552562, -0.010759011812675332, 0.0099312224630235101], [-0.011637413986623348, 0.0020617115939567483, 0.011715279593953524, 0.0092123944149958056, 0.010073518396795897], [0.0075386872601289753, -0.0048794413804134932, -0.011072370847393303, 0.011733021615800438, 0.0084729149918288879]], [[-0.23572306282225211, -0.51169451712301617, 0.52918237973168236, -0.49431844435102967, 0.30574503565635319], [0.54803346502901618, 0.32870154014039793, -0.1993839596357676, 0.45998418911327676, -0.42459339120490286], [0.49753885665465819, -0.088145152384196387, -0.50086787505069597, -0.39386105792552484, -0.43067702424202764], [-0.32230440924357956, 0.20861264266398835, 0.47338134900079093, -0.50162640656591084, -0.3622458084255053]], [[-0.16599207346823733, -0.36032636290503817, 0.3726410110357094, -0.3480904352294677, 0.21530032663578361], [0.38591561683018183, 0.23146589708640541, -0.14040271019728215, 0.32391285095041139, -0.29899126773249729], [0.35035819345940811, -0.062070280418252334, -0.35270243020720948, -0.27735009413461503, -0.30327525611259776], [-0.22696114897607175, 0.14690138797999289, 0.33334689750355179, -0.35323657488314414, -0.25508718631858568]]], [[[0.096698796868106146, 0.20990837119367051, -0.21708227795445234, 0.20278032308829375, -0.12542335375414371], [-0.22481540871427441, -0.13484061796803315, 0.08179169564802434, -0.18869565469351435, 0.17417756920383698], [-0.20410140720900596, 0.036159084661711145, 0.20546704394303814, 0.16157048860050036, 0.17667320958892999], [0.13221637384985546, -0.085577504871871796, -0.19419146501882451, 0.20577821029235344, 0.14860121629963033]], [[0.1236089612207968, 0.2683234595999085, -0.27749378220283188, 0.25921175758939363, -0.16032723231835455], [-0.28737895441971056, -0.17236521298328869, 0.10455338497468385, -0.24120748777626741, 0.2226491858695594], [-0.26090048424510642, 0.046221742549964966, 0.26264616199463336, 0.20653369955662393, 0.22583933430545752], [0.16901067187270824, -0.10939274141650367, -0.2482327189826567, 0.26304392236447743, 0.18995522775736465]], [[-0.27622705301392864, -0.59961832676023263, 0.6201111062705128, -0.57925654579024466, 0.35828081122752353], [0.64220134926775074, 0.38518190230112087, -0.23364384854428047, 0.53902267970941908, -0.49755072659207311], [0.58303031739099764, -0.10329102035684135, -0.58693135672909602, -0.46153769607920514, -0.50467970245613747], [-0.37768556064402575, 0.24445828428749547, 0.55472185632021576, -0.58782022573731862, -0.42449003898900511]], [[0.022105068500322334, 0.047984453522788177, -0.049624388097965003, 0.046355002105126171, -0.028671420080407944], [-0.051392159680490219, -0.030824179755562911, 0.018697347781101759, -0.043135287178418399, 0.039816494342964796], [-0.046656998158115984, 0.0082658633741461759, 0.046969178811133952, 0.036934551760928837, 0.040386990599913027], [0.030224285052912078, -0.019562772945971644, -0.044391613706156505, 0.047040310548956833, 0.033969813192349783]], [[-0.1480345072107187, -0.32134507662430456, 0.33232748578040289, -0.31043287168660511, 0.19200843202873602], [0.34416600123564417, 0.20642515811352627, -0.12521348508295566, 0.28887089767475216, -0.26664541296640693], [0.31245529640260533, -0.055355314155439719, -0.31454592593987918, -0.24734545241957312, -0.27046594545024244], [-0.2024077484102294, 0.13100911461504239, 0.29728433816812821, -0.31502228509504299, -0.2274910188989617]]]]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5, 4, 5),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank3_Symbol_rank3_offset1(self):
      arg0=Data(numarray.array([[[-0.24939946565048188, 0.53356097126778268, 0.89103027552375935], [0.87880588263027093, 0.36651480427072247, -0.71324030341020772], [-0.24143044740182429, 0.86772495859205301, -0.26635104456914216], [-0.19030614768390786, 0.88353632418609451, 0.072357444666261372], [-0.74114332567133645, -0.2290207508002291, -0.44202189474136278]], [[0.26728927211673015, 0.041867165653448835, -0.83742633008238943], [-0.80498368904176543, -0.7077113569407314, -0.15275150928781067], [0.2136497929533907, 0.77250861548945959, -0.0945375642659807], [0.61416332222204795, -0.93754426865434626, 0.46023879702959269], [-0.52237328018872686, 0.065768823511589858, -0.36831877856332773]], [[-0.23148243043638539, -0.21438443290471376, 0.99389616557344085], [-0.94659613863081593, 0.2556798304271537, -0.10284656086815214], [0.071184137816809656, -0.92808851587479269, -0.25852610424308886], [0.83013178967481438, 0.51144522951228244, 0.80936123989369158], [0.87184603468093802, -0.37298359358219568, 0.43450278739982306]], [[-0.86588479220535408, -0.65500908172821259, -0.26689681561025025], [0.32663257912040145, 0.32910606483383931, -0.70421131278999494], [0.78068705336619582, 0.16018684593483545, -0.15443387804240372], [-0.4490133570699939, -0.1728440574380703, 0.16806058999847884], [-0.89520868324779057, 0.13574527139273118, -0.48612338245992248]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[-0.078517253230035333, -0.70323077539753553, -0.29163628677300535], [-0.43284345300041638, 0.67376732235825831, -0.80141651719088158], [0.99702062428264204, -0.90215574913255003, -0.22913948508903781], [-0.52347550810876076, 0.19381358314563069, -0.15119028472997909], [-0.21484212884818255, 0.90567334266036981, -0.29141122666559527]], [[0.084308506332748889, -0.38167297257481003, -0.02607412446293611], [-0.92756952901861944, -0.29407610586186639, 0.83942586486353976], [0.46075820625241981, -0.42113165923204776, 0.28524174213955011], [0.77789560038292227, 0.19427177223007952, -0.33002177545377687], [-0.39530892938920092, -0.33733052506849748, -0.39912021911461726]], [[0.9665338226160658, 0.53666354528109506, 0.042724216104913948], [-0.54143401641386113, -0.89429646737404034, 0.61813233080247243], [0.88490583210725449, -0.20163405039843862, 0.24837329707707223], [0.36854244302978523, -0.56217658000613002, -0.57728076556740837], [-0.48258853458229645, -0.4630481807189033, -0.38084473447607259]], [[-0.065485244661313669, 0.029855860717884708, 0.8886669476026483], [-0.7570786788046624, 0.56888302194404616, -0.37525510313009325], [-0.86535929875878037, 0.1495819937594054, 0.28725942532242388], [-0.83406904306193907, 0.020565620431672871, -0.69729291505782975], [-0.7789705094125865, 0.32257265548115632, 0.0016542455512416065]]]))
      arg1=Symbol(shape=(3, 4, 5))
      res=generalTensorProduct(arg0,arg1,offset=1)
      s1=numarray.array([[[-0.58754480495480887, 0.30310816259847595, -0.64872867036571025, 0.20002069365495978, 0.46807702492921388], [-0.59330801951972467, -0.26095927115687578, 0.47179165405622148, -0.99180098469139688, -0.93018262927416973], [0.051270348089248241, 0.39552488892508353, -0.89964177226840958, 0.090952523720983836, -0.19358918469749953], [0.21081959884498036, -0.86637869884444796, 0.40040577010997724, -0.92070977716277813, 0.11148704674430276]], [[-0.85515237554187973, 0.43772997805122649, 0.5573143361789592, 0.11620680541728801, -0.9029038015702926], [-0.38086429918040587, -0.17362504953938762, 0.4243350246693347, 0.76366487953491813, -0.98672273371980102], [0.68401254049516047, 0.034338258087263318, 0.67822087127513431, -0.59516098152959396, 0.97109114916348682], [-0.26650968649002738, 0.028139828186548144, 0.40280655946713373, -0.015773469801720896, -0.18682449145827618]], [[-0.8781076137499626, -0.034953092002549591, 0.80474013925985832, 0.1199369163676629, -0.96675926833853887], [0.67291366772408923, -0.17942290466850896, -0.16767438063582052, -0.81491829309533825, 0.66857800714794324], [-0.026894770743945529, -0.33446791193040437, 0.17141429700358324, -0.58138605056537007, 0.12166603312722102], [-0.70206875753635378, -0.66203205468102699, -0.73321174472860151, -0.29118983006104493, -0.59248685878908613]]])
      sub=res.substitute({arg1:s1})
      ref=Data(numarray.array([[[[-1.0921630406937712, 0.12681635525823926, 1.1762015902642007, 0.11898578548633748, -1.4599041664606682], [0.54434282839834292, -0.18742768746764327, -0.040658928090680765, -0.071300460764689655, 0.3012335564409574], [0.3282115430626425, -0.37834317733390271, 0.73897769238005062, -0.85827075500212513, 0.67482549497571664], [-0.82034198094071897, -0.35880190548670776, -0.53825298892926243, -0.038250535933107649, -0.65541079603511299]], [[-0.20346209558867978, 0.45173770753868964, -0.9398157179984753, 0.13282703415405261, 0.76995290679845196], [-1.1409441303698671, -0.16499704670348544, 0.68973047559117795, -0.010473485272281757, -1.655955236817009], [0.31493984034919609, 0.598731074042119, -0.66429207704535931, 0.27646226533488655, 0.099014849756550227], [0.58833349169863514, -0.27887708996207744, 1.022469680787967, -0.60721805582019672, 0.4520870375254506]], [[-0.36630097436169684, 0.31595948033750626, 0.42587503571384877, 0.020599136903161959, -0.63898286840849483], [-0.36647409593893532, -0.039865797254962781, 0.29896146802095069, 1.1191563700447016, -0.80970598548759365], [0.58831998058107116, 0.023390290402677066, 0.76005371596262472, -0.38354196468164031, 0.85697247565864831], [-0.095158629814989126, 0.40992075743193246, 0.44814687501312839, 0.28615905540176251, -0.031219147957636251]], [[-0.70728242115557216, 0.32653787261728773, 0.67409345425038769, 0.073286094826776088, -0.95677847163109153], [-0.17490696584928439, -0.11672446735680528, 0.27299806600809523, 0.80450607993985435, -0.6464093081647051], [0.59264682640509159, -0.069132963025208355, 0.78284323607909001, -0.58522277931463518, 0.90363895961437368], [-0.32639115574918992, 0.14183680520778069, 0.22664121904174789, 0.1402105452824646, -0.22915372993386407]], [[1.0194453410368998, -0.30944580793338622, -0.0025483846203205873, -0.22787251494555863, 0.28720030715940137], [0.22950953208086089, 0.31248081357478574, -0.37273101402358355, 0.92038330410083324, 0.61985251114819107], [-0.18276366434929286, -0.15316266505037482, 0.43566796951676479, 0.32588072257524042, -0.13270174240473126], [0.21511847233574743, 0.92829884876333169, -0.064913480102164411, 0.81470263853424996, 0.22205096863960722]]], [[[0.54250320698194621, 0.12861471321686457, -0.8239756239598327, -0.042109696527389058, 0.89689961041630051], [-0.73804620060818116, 0.07323266223898435, 0.28428549379851975, 0.44930875623622385, -0.84982394896068958], [0.064864069526403334, 0.38724944122262484, -0.35561625457148927, 0.48626091714444503, -0.11297381787825131], [0.63312267501986075, 0.32400747700500976, 0.73789935635691939, -0.002906205896378633, 0.51814157542051087]], [[1.2122972959731049, -0.54844446608979736, 0.0048730423019883035, -0.26157481680516526, 0.40987484166973498], [0.64435668990904649, 0.36035149568285169, -0.65447878753648669, 0.38240930652505856, 1.3449704295323135], [-0.52124702031855807, -0.29160218106495461, 0.21802854696023932, 0.43679448446664992, -0.55000076902048844], [0.12614765580066484, 0.77863224066246473, -0.49539169008700834, 0.7967991027054403, 0.13297582210432496]], [[-0.70312724862448106, 0.40621355566571732, 0.21585120749477948, 0.12116659421016646, -0.50610133974858384], [-0.48459670708511698, -0.17291853650500733, 0.44445217915236024, 0.45508001426218236, -1.024190875368695], [0.54190204600688519, 0.14265019255909744, 0.31551809776835765, -0.38537217685452951, 0.69731397949996543], [-0.094467594996463761, -0.10077647199929593, 0.46603419988321976, -0.1813662173059862, -0.064492080292527745]], [[0.03675554733527886, -0.2403200850217376, -0.55055958352159717, 0.069095971439171441, 0.68904790231744895], [0.30239009340053186, -0.080067824652061137, -0.18524599595274333, -1.7001544336133485, 0.6615177276118962], [-0.62218168664854334, 0.056788133306599264, -1.1094975605652542, 0.34627305477073317, -0.9733408893334291], [0.056223013925152165, -0.86317319106336299, -0.46918693455902649, -0.68469470642976438, -0.029057952920755692]], [[0.57409886510310315, -0.11667273932296997, 0.079131526554966969, -0.14101769951502013, 0.052181741212552979], [0.037032519269428771, 0.19098386032331921, -0.15678571547560197, 0.8684653846935726, 0.17475712293259718], [0.028110289257892725, -0.081162433997407857, 0.4514195078587685, 0.12748119430521643, 0.12018145510843106], [0.13093055333164721, 0.69826264394454907, 0.087386492226787515, 0.58716746638494444, 0.14769895483128179]]], [[[-0.55341013374805592, -0.19874645138957703, 0.83051791009203613, 0.047990634904647125, -0.87564141772914861], [0.88779807326219951, -0.080697742850224324, -0.36683322634472315, -0.74407752644588521, 1.0913560471678738], [-0.18524043489517042, -0.43134502574841754, 0.23321927961065636, -0.47129802810782939, -0.042450926526549221], [-0.68944895120677407, -0.4634724148551625, -0.90777869828664004, -0.072902732229090161, -0.57462544699167739]], [[0.42783277742121584, -0.17140748443800918, 0.6738133336407085, -0.17196217932601418, -0.57450632932128909], [0.39503690437926819, 0.22108364387900437, -0.32085751742201574, 1.2179002331351783, 0.55946123514904378], [0.12912193151266124, -0.33122385812115701, 1.0073754542095927, -0.17847241074999004, 0.41902626198116572], [-0.1954968124577296, 0.89539323742555088, -0.20062473671862649, 0.89745523435933316, -0.09236522646516955]], [[0.97884696918298564, -0.37563938575698913, -0.77146255934799601, -0.12461872469439417, 1.1212268160129861], [0.13727591333808831, 0.18894875837902111, -0.31688817674874625, -0.56867145106401895, 0.67670692147030787], [-0.6242215477186559, 0.082754841482975655, -0.73780429617586574, 0.70913991975166757, -0.94649286817272904], [0.44385469157611068, 0.083363895902016955, -0.15578322648836562, 0.024379416872524741, 0.33449909372477749]], [[-1.635809490453026, 0.44720495269043153, 0.39783094333706431, 0.32254924400368123, -0.85567770371267748], [-0.14268483652910569, -0.45064823469627802, 0.47296422960762546, -1.0923160469506006, -0.73570768094518857], [0.37062851158342869, 0.075194558288158075, -0.26121231735173978, -0.6994409982457015, 0.43442717073143666], [-0.52952429697667536, -1.2406396035485776, -0.055030115024919057, -1.0080554828728234, -0.48253745192323905]], [[-0.57483100811863963, 0.085810333505353914, -0.42379878906415575, 0.18315694120784928, 0.32479980584079049], [-0.082834244881645092, -0.24071676306010215, 0.18020469463871652, -1.5036164966103227, -0.1524456380697144], [-0.22211145858557313, 0.18670195909865292, -0.96283437974795372, 0.048668019275150687, -0.47811679902083531], [-0.021844860218339313, -1.0534993004663051, -0.11973060197364591, -0.92335671568543687, -0.090555181826040443]]], [[[1.3032428094639967, -0.53984499040436007, -0.01810424219948531, -0.28132217072178467, 0.44413438266978839], [0.58360745096865041, 0.3875740504471083, -0.64170875493934953, 0.57607705545600929, 1.2733020033014197], [-0.48525051207374498, -0.2757024365387919, 0.28899536891672828, 0.46625152642558165, -0.50091986773255837], [0.17940069620670243, 0.90844654382588652, -0.41485534184407097, 0.88527799843190569, 0.18396965619237368]], [[0.14502620731067095, 0.26767895424341315, -0.5951875006185483, 0.019116706156510829, 0.53654090232989826], [-0.79301189670981787, -0.01602721735263396, 0.41183195062075917, 0.50124691074889016, -1.099384583345602], [0.26079884334093117, 0.37602833091489685, -0.1913575974508096, 0.24325560273307409, 0.17068085509813466], [0.47555535655254755, 0.19248394155701931, 0.77968765636956983, -0.10086578121288406, 0.39216617705687457]], [[-0.4600632202025538, 0.31214914441292335, -0.54145878891748644, 0.15624604446260598, 0.37008874412724302], [-0.6281180076066466, -0.20383099853145517, 0.4621891302793244, -0.52610612757010422, -0.98749263288496425], [0.15374937216169693, 0.36593487404596792, -0.62016879669880287, 0.065454199713814498, -0.014365899187193682], [0.23031598620296301, -0.56962282558498778, 0.4903486462655583, -0.67634333061280638, 0.14860971127318878]], [[0.26404818796928131, -0.21763287637653028, 0.33020446957435479, -0.089740949964375066, -0.21658541281460644], [0.44532362444050028, 0.1170303372181309, -0.31336399713960617, 0.1763813042416835, 0.70057520026239406], [-0.14576852499050771, -0.23974199664872944, 0.3155327129848568, -0.035676941808449311, -0.060475939340012809], [-0.16658628986510823, 0.27289030827510707, -0.37263425754114865, 0.36719980380981532, -0.11734136105046539]], [[0.83676096325254612, -0.19493376914242858, 0.26519732610057872, -0.22158987691657528, -0.071627253181902495], [0.15231489500101403, 0.29726589535158915, -0.28324007524322947, 1.3876835869429847, 0.37375321918125287], [0.060027984067446263, -0.18682338617122779, 0.81410390472119765, 0.12041357545742881, 0.24597904716005295], [0.11638707392678471, 1.1012388445190333, 0.052663736915477155, 0.96364039845542282, 0.16285700224664015]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[0.9035899162311325, -0.32143082227568665, -0.57567562551354001, -0.13240323427149348, 0.88013970141176967], [0.11817436907205942, 0.19491451307171984, -0.28654929944430396, -0.22149941128867312, 0.57194757076632974], [-0.47720078506478991, 0.042339732157084441, -0.45629901742601847, 0.58094744515901064, -0.70318332089805724], [0.37561356316020988, 0.24130945264697631, -0.10087357974477237, 0.16830551290929863, 0.29541774276941368]], [[0.3818711414222305, 0.19174175675351379, 0.011366106091289851, -0.10440072538532442, -0.036174306677754342], [-0.53908855513646237, 0.13976410666124894, 0.21606816286710778, 1.5969159842139251, -0.79800753099129818], [0.46022717686567055, 0.11998374662733408, 0.70899286267726991, 0.025564158463660391, 0.64057812597643982], [0.29183209752016559, 0.92452946783390266, 0.68569288368866532, 0.62125989009470373, 0.30069607921370617]], [[0.38689547021682769, -0.084686393263747856, -1.333977937516392, 0.067105836002127883, 1.502765024059709], [-0.40213250620018487, -0.062432066816867526, 0.12599054863624676, -1.4910607403346949, -0.19043129901043213], [-0.55980559750748415, 0.44000781984532605, -1.5481000433726422, 0.76082794339116999, -1.0969663651146402], [0.61149640751691081, -0.73748625484312291, 0.20382631911819124, -0.83701342262122191, 0.41546180773723435]], [[0.27458650941753099, -0.068547115999724961, 0.32593976798934265, -0.10031677343472782, -0.27385727043155728], [0.13502753344478688, 0.13008189413338286, -0.1393787468929473, 0.79039987979398985, 0.19460505663485284], [0.10979837791950524, -0.14982407252304794, 0.57647267470929608, -0.075061778424320935, 0.27115512981379619], [-0.055866118554368127, 0.55907472536973923, -0.020678738900229227, 0.52293697903748182, -0.0049916056718149748]], [[-0.3923689168835135, 0.34150569289660532, 0.40960867521720579, 0.02732157034244713, -0.6365740642927713], [-0.41356568231392227, -0.048896684886541815, 0.33181039381138133, 1.1421878984886868, -0.88863719742074898], [0.61631433137496527, 0.043591540329839779, 0.75757546654684127, -0.38913944722174476, 0.8856276316960493], [-0.082072932196306458, 0.4045437094506017, 0.4924532690415816, 0.26837762302694534, -0.020496753828410624]]], [[[0.29974941148094164, -0.14060373419073754, -0.28838805911312571, -0.030616801024420048, 0.40928425420324499], [0.077799061569809161, 0.04894519755405595, -0.1178091979094692, -0.35383922322046635, 0.28075050462364765], [-0.25604531554289112, 0.028961085530025122, -0.3391755077711528, 0.24998406464650813, -0.39013279583700794], [0.13779925791246087, -0.066521399697583708, -0.10086491022972661, -0.064010839100157188, 0.096153741489839684]], [[0.059362295411827581, -0.43922035247136743, 1.1133678048961098, -0.11902859566828082, -0.98017428656428141], [1.2271986677014537, 0.14250461976095066, -0.70315656596408371, 0.011325285318627976, 1.7142023143137415], [-0.27128472309130675, -0.65773591239704554, 0.7789213367618596, -0.39737265409721206, -0.0038776596276312719], [-0.70651037921970317, 0.23962440047817946, -1.1053368789678715, 0.61422866000247622, -0.54582016237192699]], [[-0.16105729714776912, -0.054652459508951499, -0.30406429031896814, 0.077433826213943513, 0.320151608546133], [0.078965542318144955, -0.098299022393796037, -0.0091467692061935404, -1.0110326141054764, 0.17765725781694369], [-0.27210761375616282, 0.07237620085707544, -0.65124309740111441, 0.12671268342664446, -0.46345080115544673], [0.0091132111782070147, -0.59988084437902112, -0.19428694575252003, -0.50064137231507344, -0.038955704044496525]], [[-0.33338585259622955, 0.33236036620003206, -0.66195450427849045, 0.13858912553123881, 0.507757946821905], [-0.75759904378666032, -0.1775160494338448, 0.50477716604506839, -0.35421831097268414, -1.1359226499927622], [0.18164316666966021, 0.42472971931826253, -0.62463865657752526, 0.14699864603397159, -0.0020890167780302504], [0.34391830715787697, -0.45000040971138172, 0.63170367288896256, -0.62318144010623411, 0.24596412318110103]], [[0.87120121087608648, -0.25353056084138248, -0.2527389622168229, -0.1661393172929671, 0.50539515688396408], [0.094443661509481913, 0.23333986824685263, -0.26272237479710925, 0.45971067833634782, 0.43371819646942639], [-0.24027168905888083, -0.03444495672179998, 0.058436911430125166, 0.3968545495141047, -0.29961052769313556], [0.28677281890728817, 0.59722519159349385, -0.0015232922960264905, 0.48550541791666657, 0.25542326361245254]]], [[[-1.0643274913582614, 0.52638466950297225, -0.29354602250139061, 0.26081493255552646, -0.073447310916827213], [-0.74909854420452893, -0.35306989948699991, 0.67656397312575989, -0.58359484061233724, -1.400026621630567], [0.41549006252706239, 0.38642639480696989, -0.49823424240487824, -0.25633177519676464, 0.33923681009032269], [0.030742902233041533, -0.85056749624163619, 0.57185141881559243, -0.91080304389338318, -0.017819429063615732]], [[0.5400897861007411, -0.57717907914673583, 0.35027542546818119, -0.1380844574373899, -0.043554303338565026], [1.0777924351441763, 0.18565739649152296, -0.73857031942934193, -0.64967535732560788, 1.7993248538912232], [-0.65609403641961628, -0.45160464208574885, -0.013477152248035015, 0.12363205854753684, -0.68842190575363171], [-0.30977762847194446, 0.034698132685088978, -1.030243672213317, 0.33261590256105455, -0.25952167975993296]], [[-0.56559247055603235, 0.17127949768370543, -0.48656136913244907, 0.18335735685675494, 0.35614305290897946], [-0.2810927291122437, -0.24047951740358431, 0.29028495771000451, -1.2340352617553052, -0.4581102081608765], [-0.09923073190882617, 0.26000562083898027, -0.89027593831465701, 0.056088367776955944, -0.3368946464935178], [0.065917788013729411, -0.93676859514755173, 0.090991664573422365, -0.88388476105212865, -0.010832197797474685]], [[0.77112607557489632, -0.11419557157050528, -1.0169541202162709, -0.060849904247336342, 1.238189152080706], [-0.39300631508782563, 0.10501076099738565, 0.032119230661007248, -0.32439861203228498, -0.17405659060757139], [-0.35011469751225005, 0.31954543660558554, -0.81179024310910575, 0.70372841480184334, -0.68750599293074433], [0.63281226391790346, 0.047061496723454499, 0.34438714403422677, -0.16235486726593443, 0.48814732967311203]], [[1.0139417991567203, -0.33565489294824807, -0.251475415741579, -0.19601438634063381, 0.56038453400174837], [0.20640654142251463, 0.27466498405710771, -0.36031089917590708, 0.43537549160552397, 0.65117122506946545], [-0.33123051279434096, -0.079395701363643795, 0.054825631530759075, 0.45311338064874507, -0.40257393705932742], [0.28904689375322462, 0.65720575250077973, -0.10051024614266463, 0.56252597214362066, 0.25835187078633987]]], [[[-0.76740100769262165, -0.037841964509042578, 0.77426721806413501, 0.096955023509013277, -0.91673611670013966], [0.62547802444549272, -0.14754194859960251, -0.16723318453158892, -0.63644274965421188, 0.62559695739903853], [-0.006836161973680234, -0.32210642423637376, 0.23149234952691555, -0.54038365857238602, 0.14979057950358587], [-0.64566774885659217, -0.53075084539435569, -0.66577557641813101, -0.19894880295115253, -0.53940205082306436]], [[0.28785034020989764, 0.032656751578452159, 0.50620246445051986, -0.13033026377029122, -0.50523642983194983], [-0.020000669705598995, 0.16612371795740583, -0.052865743975588644, 1.4911096116677769, -0.1079956835842889], [0.36039983366042744, -0.15439821752763525, 1.0026038534429227, -0.1892671118450667, 0.65334371189231089], [-0.047764975173772872, 0.92035601811616319, 0.20115259027224919, 0.79734695219957685, 0.031647969971169365]], [[0.12827727460635246, -0.2068615493110105, 0.87591676676640962, -0.12125431188505317, -0.81782366871772738], [0.64975496397839227, 0.14831143033148339, -0.39296246212509051, 0.73840175930638674, 0.84940156810528511], [0.050222910705987563, -0.43321381558485594, 0.92920337576816947, -0.33474060114841508, 0.34773166608848327], [-0.42397561830919306, 0.56376312732307166, -0.49686423260726875, 0.71073831682141941, -0.29461936707359415]], [[1.0847644117842197, -0.21943840312986515, -0.0085935811707922305, -0.24807236553464318, 0.26513705524755649], [0.017809208519285635, 0.33919766293014675, -0.2678619427160005, 1.4111724923853559, 0.28934926271081723], [-0.0099423347980662422, -0.095966772727559518, 0.64478541026172498, 0.31729583470677691, 0.096600975103235259], [0.30822853239250014, 1.1848286265701915, 0.18558126413372555, 0.97065573702155694, 0.3163068329280051]], [[0.18037869778524579, -0.094970419419702842, 0.68644610597956812, -0.11812667871069547, -0.65746953268876862], [0.34042620628046188, 0.1469760735592025, -0.23091028397375635, 1.0175730514092598, 0.4074010563267994], [0.1806611618462387, -0.29757893317086709, 0.9198534784209661, -0.26379374727376936, 0.46424898201453008], [-0.25135238170779028, 0.68286543190475635, -0.18318281744860174, 0.71163597461660011, -0.14808971266424806]]]]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5, 4, 5),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank4_Symbol_rank4_offset2(self):
      arg0=Data(numarray.array([[[[0.37418655846219084, 0.96308586237830518, -0.026290804155062686], [-0.43300885771210074, 0.15589396342684392, -0.89802952894820809]], [[-0.74725082053443903, 0.71202893535296741, -0.12814869323452838], [0.63487600943388944, -0.98745503889999453, 0.024097218121297947]], [[0.76940051018301392, 0.80989708637336078, -0.14529241601537124], [-0.24796301141079091, -0.60874175746333092, -0.84845056943145147]], [[-0.099803457001520712, 0.82125661387725946, 0.78089385725118277], [0.24420214317088873, 0.47819701934182191, 0.10073926163843683]], [[-0.56205582209533289, -0.35578852354442292, 0.3154130223559144], [-0.72424026220116322, 0.16201186711516757, -0.56904669403924935]]], [[[-0.64696136345299116, 0.63779751306287835, -0.43250784950864385], [-0.75465194149132686, -0.24662677160302482, -0.91036483960725878]], [[0.46533236301553327, -0.033742743759988203, 0.14276555681888659], [0.056933258353454752, -0.77735133812493373, -0.12848046739829933]], [[0.40397896222966923, 0.60525969237865307, -0.88261834378553505], [-0.42522548607338528, 0.90894629444857644, 0.66394692801772015]], [[0.74155427382215833, 0.56207446587995324, -0.0091731272379973472], [0.020102883578093866, -0.35847884824060094, 0.79402855452590515]], [[0.55635220993878653, -0.55280470239033064, 0.76019792706765377], [0.33485331282843522, 0.53610204550238882, -0.36172022376052038]]], [[[0.044514978467841804, 0.39123786331191113, 0.33715169349444896], [-0.94443307975323698, -0.11993592184738056, -0.65149388643460449]], [[0.24409218625486617, -0.077716269070041699, -0.037355090738798724], [0.73303771992802891, -0.98806758045475962, -0.77929703740009715]], [[-0.19099675677644035, 0.2876698727411473, -0.64275350058507041], [0.079480163191557374, -0.73240567712646421, -0.42936085047464068]], [[-0.47586657305311486, 0.68319797106878943, -0.077232990571614479], [-0.30709263070445525, 0.88979362049940391, -0.14445279166745983]], [[0.058785770094585521, 0.25683648268413739, -0.89006595665785349], [-0.80252783761660518, 0.78249205129204635, -0.78687061172285588]]], [[[0.78100606362187142, 0.72234855621996275, 0.99880379552672616], [0.40339950562201898, -0.060516034874153357, -0.6727329788340275]], [[0.16756722709601912, 0.58084048236693131, -0.76366684787468642], [0.39119649949578106, 0.71390890785071215, -0.4276827974214179]], [[0.81834206395422204, -0.29144683978398955, -0.15949901183470283], [-0.1241262797521876, -0.92512555612307179, -0.49795410527859385]], [[-0.17781898303346888, 0.19728662766563998, 0.12498422697157618], [0.49218000631855752, -0.069038559490448126, 0.28416596323909915]], [[0.3298117379301102, -0.38894361202708128, 0.71748609520948592], [-0.88303382101628314, -0.52738923041142671, -0.52666627639675578]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[-0.96819952894057915, -0.96506786039678971, 0.67234320197858155], [0.080810185629993869, 0.23804316745449383, 0.64143359681564993]], [[-0.63246146197439423, -0.84047701001421538, 0.20223503007316701], [-0.95101528738549845, 0.82549622743159845, 0.57994668166727292]], [[0.20426557992709626, 0.80218652404309387, -0.56240353796613896], [-0.075245574386032965, -0.076021394433619882, -0.14135734765382169]], [[-0.79807808951202497, 0.59062985164666948, 0.42869399685658993], [-0.49541147603790581, 0.38436937115832648, -0.45999334164801953]], [[0.034260507466302714, -0.76898519859527825, -0.62030502323751224], [-0.47110665853649913, -0.671259203465566, 0.96535980500571283]]], [[[0.66700933104567217, -0.9444845052715829, 0.24616685654585813], [-0.52115518740958566, -0.94313911678196582, 0.58621189153445807]], [[0.25133384478517007, -0.66600584630941517, -0.82775688497543509], [0.87484242099346532, -0.67605593124349328, 0.94117551176922376]], [[0.42451167771392306, -0.806621454489302, 0.85770241128741076], [0.54616897492998939, 0.81602431600490233, -0.81710026437063576]], [[0.65229115597233545, 0.067918029635051003, -0.92618763407912175], [0.022105067622035568, 0.0932164215226301, -0.25374255923049027]], [[-0.010065319683864482, 0.40718712444297922, -0.71763097172612311], [-0.18058559283979614, 0.15623380691905386, 0.1908068738513875]]], [[[-0.99309992861418239, 0.92862269819493282, -0.40834778722808518], [0.50941622953696597, -0.36176769234779704, -0.85679501108946998]], [[-0.88880000415686378, -0.98710940335978603, -0.55232690957848107], [0.811082247182908, -0.31327452806235523, -0.9785665462674269]], [[-0.19612912195768528, -0.054822464416534489, 0.49098417526483762], [0.021482871568876183, 0.86628961297443152, -0.62757847091566132]], [[-0.61971487733745745, 0.058565486361765284, 0.1840928826298649], [-0.84368790561524776, -0.71826564341268373, -0.32668165451555464]], [[-0.4119959892362961, -0.67563480035597068, -0.091482983564125098], [-0.15041434998361125, 0.036896310620794237, 0.068331898114685208]]], [[[-0.27496033097577355, -0.25793429727519279, 0.93033859700882982], [0.31477827141630388, -0.32598196704976568, -0.38426756283929597]], [[-0.50946329369122734, 0.097336358879653417, -0.13389260839276029], [0.59066878565703007, 0.096183482565642242, 0.09291845993971104]], [[0.32685187913202829, 0.27543839385061353, 0.68430671576429702], [-0.38428986478485716, 0.57719688384582701, 0.51794084939615881]], [[-0.94009996213643277, -0.3805114698824843, 0.55674699624090662], [-0.79686742999922222, 0.23506406840104832, 0.88751132093423357]], [[0.5888162051774759, -0.08893088437775476, 0.97808895586442923], [-0.86964653682671766, -0.127263254047564, 0.36881475387002549]]]]))
      arg1=Symbol(shape=(2, 3, 4, 5))
      res=generalTensorProduct(arg0,arg1,offset=2)
      s1=numarray.array([[[[-0.72602105835213071, -0.052871344534723086, 0.66217196585695182, -0.17893056416850017, 0.66523032520867531], [0.54406320967565458, 0.90770290827031608, 0.84528698443006411, 0.39547232881296335, 0.029787414070755025], [0.59732064902233395, -0.14040528620369663, 0.33778364268890959, -0.20874516114472841, 0.3203851844477712], [0.61432153177084814, 0.50357438733996518, 0.40585887635037143, 0.9020710722879266, -0.23605516891202627]], [[-0.30879762260587151, -0.66503371222269858, -0.46200918563086701, 0.070779769143924032, 0.78361244291556997], [0.83033108020914326, 0.9253323387197272, 0.70675602059093712, -0.74500782922912623, 0.24174722396980464], [0.91464568036398419, 0.73097062995941986, -0.59703264575628223, -0.62379170208147872, 0.80671918508945972], [-0.97206622791474406, -0.76508068998234369, -0.14479993691744908, 0.026423453462006474, 0.77512465212386705]], [[0.68132804873116481, -0.86453394731900257, -0.41065036507954344, -0.87104062659760362, 0.20722313568781403], [0.60470340233708653, 0.99430242386331069, 0.033099769454032035, -0.60864892562678996, 0.71514850872098634], [0.074848200752383631, -0.91731978631205924, 0.9390420645611901, -0.40241538688130873, 0.15134272825611927], [0.68028912121777041, 0.84348957291237303, -0.96296858656716711, 0.2183854978961679, -0.61621914545836676]]], [[[0.74429015873256477, 0.5314312181580152, 0.61100791650149233, -0.23877307557444305, 0.34421088994018456], [0.731035353141128, 0.082753836097328781, 0.4103857546758789, 0.57792119321173385, 0.1571115542306889], [-0.9952235440069146, 0.40011361462167305, 0.84192131628682199, -0.074409595045957344, -0.5419184037538225], [0.38392686717708835, 0.98064168339816726, 0.71109488523728892, -0.68361123947339841, 0.85004499849613535]], [[0.46574885263217491, -0.5147493097562108, -0.53594549952622983, -0.52274595615943698, 0.36752339133739009], [0.16628618327747136, -0.21534730256128998, 0.30817983008784622, -0.83944715275123061, 0.65126770258268452], [-0.53278796234109427, 0.35066653085904997, 0.82723134212175542, -0.7516629344471879, 0.6257888069683708], [0.70690237798838607, 0.70080198740605648, -0.78739360683927773, -0.41546343052543389, -0.16996871333012908]], [[0.46173877334012969, -0.55379965195342495, -0.74505481350533742, -0.85647979357149517, 0.79986036666590921], [0.22040994967191985, 0.84847567293050452, 0.71241804379781049, 0.59737579058414214, 0.41910175565343377], [-0.30400451140666784, -0.1258078856095588, -0.14867518549289005, -0.95878890450122434, 0.28109445173154035], [-0.97933013833191263, -0.91776388456542124, -0.71113529050329349, 0.76652321162311776, 0.78298898597053923]]]])
      sub=res.substitute({arg1:s1})
      ref=Data(numarray.array([[[[-1.2513104581187209, -0.45057131422585728, 0.13457637750217299, 0.81515600483049799, 0.18810833401473237], [0.49880671141848781, 0.37332301304236648, 0.22666180766349076, -1.4710950475766644, -0.11770018918753777], [1.7233110734324864, 0.66996003590900577, -0.57537208081643831, 0.1077662693491761, 0.97262579788155024], [0.099227732377826561, -0.061780315157472732, 0.2456895783817975, -0.09986960344507656, -0.42333752077620723]], [[0.25908822438614793, 0.50911350485758511, 0.12803445776224973, 0.63968402330544283, -0.090801725703096497], [0.41240406918898631, 0.13879320829748815, -0.15925471086418702, 0.46223312729196275, -0.47502502954059073], [0.082249088737268022, 0.64766701868136067, -1.0837714067036548, 0.43528459744302472, -0.63961077236026553], [-1.7162572017114934, -1.120688181417933, 0.92885952822834972, -0.68853074243188761, 1.5336487730142447]], [[-1.7675267952060421, 0.19776786491767101, 1.0018471618099249, 1.1503156100160408, 0.12864564838473191], [0.53372439701429619, 0.69402778153593936, 0.32414081956601504, -0.34981135980578132, -0.67619565392443493], [2.018514516132103, 0.41132572772074394, -0.9462718437492208, 0.68215662328858717, 0.39281228480322272], [-0.10806260034920301, -0.24583187696952746, 1.2412642930698472, 0.45578764964824126, -0.23595791702307012]], [[0.80189439768209569, -1.3881601517448685, -0.94832386775373789, -0.99876962922873824, 1.0793568590956619], [1.3800665672800358, 1.4484931088088626, 0.84126912444447299, -1.3267146562635388, 1.1460399509994132], [0.22155412090901525, 0.15072050962016093, 0.79546431914614113, -1.2799049196722088, 0.94396047827868879], [0.0047437434002560591, 0.46223115083636518, -1.1859179037300225, -0.18618720326866034, 0.3841156342738416]], [[0.0064917711262843514, -0.15949877610275409, -0.4426996016009439, 0.37626380067083348, -1.232242147572477], [-1.038413289909863, -1.1034311534339405, -1.3688022831770925, -1.0436770022780879, -0.12394781008607253], [0.16991586268741379, -0.63186564726581262, -0.072378701534424161, 0.69004507398294379, -0.085451847286628621], [0.60889491901242143, 0.18078616130520853, -0.71823148941676196, -0.45593255194337473, -1.4261988717490208]]], [[[-1.1188194046524564, 0.21403167899447539, -0.19610657753393557, 1.6264590332332358, -1.0987831619733455], [-0.87728508766712365, -1.2088800028296958, -1.1446808390562011, -1.2407031448751091, -0.83511296430214033], [1.3237450974831835, 0.67989685849594816, -1.7094882564486549, 1.0256263268876622, 0.24051473318258698], [-0.88417858607402078, -1.2559553052608878, 0.36651919303465008, -0.74066858693426696, -0.39876414925925668]], [[-0.60915128071669766, 0.37596125778365524, 0.81222238859335438, 0.29279897759374818, -0.056167894623175299], [0.19552245224804454, 0.59621183471614647, 0.066485801247681331, 0.73096776207104597, -0.44336292862636056], [0.65433647735017886, -0.45460921760707212, -0.2646241661551757, 0.56971696147813888, -0.40995488843393102], [0.013957218839983659, 0.0095431363331621999, 0.8001998879203116, 0.63560676891426404, -0.14405136412157554]], [[-0.66813303239855104, -0.72237464362954251, -0.89132311762662275, -0.20292033762554867, 1.2788857567335299], [0.1752645652806982, 0.38158433068370967, 1.3186548308871806, -0.36608938001464636, 0.33057099784316357], [0.46591665376285507, 1.2604183257099095, -0.75852803240756994, -1.3948707554761453, 1.4700033435323856], [-1.1115576172269945, -1.3934673931995039, -0.56397963956500607, 0.6096454480411464, 0.92158660999044073]], [[-0.50356614946674505, -0.64959765772693967, -0.15206681711904535, -0.5823891286662487, 1.4421342920378954], [0.99471090840272902, 1.9366707442428466, 1.4872263163371309, 0.66697289840521301, 0.25388023834260143], [0.88595615961124585, 0.097598327229924411, -0.49137808913312564, -0.99506819896507936, 0.67760181961825139], [-1.1203688344468281, -1.0245817125882439, -0.039691245313303924, 1.4256169421153702, 0.96601686906848405]], [[0.61662221341785761, -0.2166843605585384, 0.49840407093136885, -0.85123215191727786, 0.11741284430965787], [0.55758335278987059, 0.35469254886732127, 0.14968045889009618, -0.30342133037282965, 0.67674539643012965], [-0.62531836019931641, -0.81206372244975666, 2.0110063389333122, -0.15828718743902648, -0.10031478661931587], [2.2580708143372261, 2.3803702042349899, -0.35297898330516247, -0.075628802722137983, -1.1179740268165781]]], [[[-0.98303348118141265, -0.63338622128477506, -0.31710869656732565, 0.57224637171202886, -0.48421034393340678], [-0.30100069549189451, 0.13255787178265022, -0.56338242369614422, -1.3133925447970141, -0.16251378862899368], [1.6115484678933107, -0.36751764892217842, -0.69943784357866245, 0.39605313143481613, 0.63452627975672626], [0.067049401032683531, -0.40481221104148923, -0.47709536870627184, 0.32019144188453119, -1.2075470055645172]], [[-0.45309877847123903, 1.4008138624601185, 1.7709377464636125, 0.99229233638350811, -0.64040994623344527], [0.24549227508595026, -0.27526765362429251, -0.4086944699955023, 0.9647024371955768, -0.89316381889804286], [0.10572642240912314, -0.011955725958075356, 0.0094332389896601282, 1.4478880541337125, -1.2247694433991585], [0.54623881296079024, 0.89248745624238046, 1.9997351646098673, -0.47797898776728825, 0.086034529592996845]], [[-0.86830344659333869, 1.0314937592447304, 0.76555804190392152, 1.346024052079934, -0.62007554663800091], [-0.41204983995837685, -0.7462728002407466, -0.47838919831176913, 0.50562034152316593, -1.0402609107178653], [0.54256479090779763, 0.6556936043727617, -1.3149540432323592, 1.0753520010035946, -0.54849378514278557], [-0.90096452600542731, -0.89970552627483569, 1.4383222598902203, -0.38422027671253756, 0.52000574343733641]], [[0.20105312114771245, -0.90364079219534066, -1.1559251537452979, -0.067312926266129725, 0.30857037184973019], [0.15330194481231352, -0.21614567451439698, 0.1233332951099203, -1.6608747839270224, 0.56645894813810216], [0.2103271790746824, 0.84438138396712326, -0.14216257901235113, -0.80323314864504003, 1.0696368173722024], [-0.35642643296084575, -0.37248615680156288, -1.0339530811869821, -0.6985507390462985, 0.16410222491000007]], [[-1.3246145713613711, 0.20207231392749925, -0.037690833642414212, 1.2394601281223407, -0.56211722273764297], [-0.92297613988174043, -1.496536001882542, -0.44702794799119416, -1.2170753805481684, -0.51894220898114329], [0.8244129674043954, 1.0482471928515926, -0.88066747621471264, 0.41168083630912833, 0.79471840638193858], [0.19658870426122221, -0.4341178145842981, 0.21654315821600212, -0.51419641822644468, -0.69761567641472833]]], [[[-0.14813921684089543, -0.7670898030854717, 0.553406041089886, -0.44712110072465683, 0.8710864862610338], [1.7652444537216987, 1.8460642436033563, 0.87139110320215307, -0.95515115835994213, 0.65420596587640489], [1.0372460922879416, -0.27304448501223155, 1.1600527641263008, -0.35508050548405057, 0.53853552050502373], [1.2280182220472069, 1.6537109498041671, 0.063474965255567117, 0.17544250482880863, -0.41348131447043723]], [[-0.39513890981202288, 0.3423384067152162, 0.33125977055604222, 0.57601519452137073, 0.4633209904597852], [0.42209124219693595, -0.55398785245026183, 0.60274256207956367, -0.53035290034749027, -0.053562545805007272], [-0.065477025591443222, 1.5622495924900786, -0.023784240036239107, -0.24566114782053766, 0.52122615303744146], [0.092507894355516707, 0.27229190411997412, 0.73948101679705713, -0.89212656439013083, 0.75757632860332169]], [[-1.3659934831483895, 0.97445741045159517, 1.5330104595439957, 0.91160645826263553, -0.49807195038708002], [-0.24754749031596474, 0.080985454137210588, -0.21032347701808052, 1.0452338004386432, -0.99084515902472425], [0.9781132561156537, -0.4930556630456232, -0.49511443747549971, 1.2572136783485641, -0.64870913847707201], [0.46355793135583512, 0.18749176112744131, 1.5222105356217648, 0.78318597715554272, -0.65895826245463485]], [[0.61871449259551381, -0.090127477131613121, -0.13421223146927957, -0.38789729804802908, 0.43353882379167952], [0.55360067112561329, 0.44212596636883827, 0.37641472048100516, 0.21877526066088693, 0.28323804623511473], [-0.45584669561156527, 0.19149504155794231, 0.25453209666614057, -0.39342684638621417, -0.10894769180374166], [-0.35412297412721372, 0.038410229520828787, -0.018825627620209312, -0.21785460466000262, 0.77048751243511793]], [[-0.77654855525462119, -0.28519895820011776, 0.23895815507799756, 0.22611203513643507, -0.8557377826785445], [-0.55895622476866735, 0.24650102390940043, -0.87247582857333583, -0.398725943707542, -0.27402583826447768], [1.214871916292845, -1.4607706952444592, -0.084049023355889832, 0.85213265653755044, -0.099060142886215397], [0.87273443475285273, 0.31667012508609421, -0.3388674889467102, 0.86298581092546023, -1.8948149237842038]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[1.926219509704489, -0.32308405315837274, -1.0274480404990329, -1.1738113506954795, -0.6326303145561708], [-0.68148262139287574, -0.60366735154365436, -0.91472725559499846, 0.15692018348689263, 0.65523458898473752], [-1.8129464824953496, -1.1511400296496814, 1.0500809305348064, -0.26639365435465467, -0.70150563986155745], [0.37183505253200622, 0.47529115199867245, -1.4867720162285729, -0.41452244948604994, -0.40334229482818407]], [[0.80093251193063864, -0.83395151136458279, -1.5691289636246082, -0.82363759367283573, -0.59751728991585096], [-1.3498121464252497, -0.91512278320666818, -0.84464705493896786, -0.64317542819705054, 0.55386591883887115], [-0.80103208529198699, -0.87507940313915633, 0.27403690576388329, -0.53085333128738554, 0.34492537076789576], [0.21650857584142691, -0.39122547833620747, -2.0684081718609009, 0.20313554122552974, -1.1214222061572932]], [[-0.93587729520148022, 0.019363835817913434, 0.095679270984517922, 0.6888817573159649, 0.48103784853871101], [0.33832140873124261, 0.2587082639767484, 0.56598426679498659, -0.2386610735094854, -0.32276648338971037], [0.97199631737681447, 1.0346176464964723, -1.0432763538799104, -0.11844359766379567, 0.58093609634753096], [-0.98108368448852534, -0.98258824763046981, 0.61519959607039232, 0.057306973930460331, 0.75841832011568733]], [[0.28701059569625142, -0.92760065463820629, -1.1433658155622828, 0.12253370937821401, -0.37643726499485242], [-0.084188982688433611, -0.26570068821808301, -0.65554662716029166, -1.9003212566132233, 0.40529879030564231], [0.52369333639927906, 0.14497335896928315, -0.25038682718424837, -0.18536445166310711, 0.66536482610660119], [-0.24077683456607407, -0.28646131160450378, -1.1500661477028871, -0.78431426354074363, -0.46458976688283948]], [[-0.4275784611453638, 0.60641793465428384, -0.014644461054942104, 0.11632648277640734, -0.34504724703101253], [-1.2382148343836632, -0.37258701237754577, -0.2475211760936834, 1.8319037437324854, -0.73509146692699501], [-0.19629167083172155, -0.54323208016449942, -1.2072570409390739, 0.33619440511162313, -0.59666505092012523], [-1.2542264324693835, -1.7360113539271778, 0.22963043545939421, 1.2160287030667112, 0.24759437601142686]]], [[[-0.58136774556848958, 0.26390688410970009, 0.52722811590544461, -0.28523873763372926, -0.30250882739837831], [-0.68108860326319098, 0.63360995855288649, -0.1824609268597483, 1.6583205023698968, -0.4828452781084287], [0.39592294106320047, -1.622854484680857, -0.28576710266511257, 0.5365135012981157, -0.65397970436875263], [0.054436583158678276, -0.44388952159209893, 0.12557696343807884, 1.8279449299787709, -0.86494071768241532]], [[0.23005493112468334, 1.4369471358247541, 1.0096831450781534, -0.032682290275963366, 0.27924695943195244], [-0.18224483528363467, -0.19463304942302728, 0.53553350616546336, 2.7347271572573604, -0.65388481239068663], [-1.3175795028727164, 0.23175732948986499, -0.25741045660748124, 0.23676718062698654, -1.2146332671987952], [-0.82506400017555559, -0.54174209157213737, 1.4806625220189873, 0.43260999756449714, 1.5300072779806151]], [[0.93453878840524163, 0.09518623808959592, 0.80670393798602624, -0.73729823157815122, -0.3376055679980246], [0.43471925887997487, -0.3320676000988193, -0.28935539123266835, -0.61070030989928781, 0.70584279078058021], [-1.1499317446833006, -0.82852795363956766, 2.6867458108265567, 0.19880758693572531, -0.39990521404758061], [3.2151111462809667, 3.4117393856927438, -0.20993544147790921, -0.78978608251111493, -1.5681839020359414]], [[-1.1828824073656414, 0.82535213679379826, 0.93348901842742282, 0.85815822742278658, 0.13412716906925592], [-0.1730539384968322, -0.49951629547916199, 0.42574635152354323, 0.55403181259779144, -0.66867478926708956], [0.38789924281438426, 0.88112643357192244, -0.55649765107223559, 0.36575622163719212, 0.098632461107353228], [0.027499682586975188, -0.1848361046201098, 1.2695593008305881, 0.1396028154238815, 0.27367159029391852]], [[-0.58091232297702589, 0.068096492565986308, -0.23632735608982802, 0.45373348997039598, 0.31155030821394869], [-0.16530913119259805, -0.23258880916848015, 0.36549306134860238, 0.0079163102940278951, -0.26173073695972149], [0.35118372575472701, 0.91587834600758233, -0.97155518146133102, -0.25005449200295321, 0.46591943420854498], [-1.0359452712795139, -1.1646303402825231, 0.24088981942750656, 0.049758264556728465, 0.72955363461131795]]], [[[-0.028918700066108749, 0.71940378889680923, 0.22455738215919363, 1.4004164757604349, -0.66050684349454636], [0.10722401632317066, -1.0550841546495957, -0.70948954659606966, -0.74977558269364208, -0.61177596213277219], [0.17182954356717525, 1.3775740193616586, -1.0163197609961241, 0.84787056384562531, -0.37412975209668498], [-1.0116306782351532, -0.52264529467564158, 1.1120971747542738, -1.8151812108416565, 1.029511292129583]], [[0.5797199069177208, 2.3151805319441419, 1.4868898756559075, 1.3784861514448643, -2.0978918122900878], [-1.3120341934291995, -2.9650575033131332, -1.9280552377845073, 0.86722867290608585, -1.1468159247475636], [-1.817905228858619, 0.24768618504549753, 0.33966172187646837, 2.1369114983249311, -2.0753228248084192], [1.0860662147859479, 1.3156901199713338, 1.8333994750067228, -2.1228686013490354, -0.23847613326900796]], [[0.62352977931045661, -0.46459666266206051, -0.28974300908410711, -0.31692463474795296, -0.24788613555574035], [0.16610455834301474, -0.45782962485112855, -0.35958901422633405, -1.425246593690876, 0.6365736571788585], [-0.42268807342103609, -0.071596861408848536, 1.2555505376233995, -0.17348183300844144, 0.3213072396056173], [1.5020524664408379, 1.5614513758922586, -0.76500613755606539, -0.92679823458144373, -0.91911855347968663]], [[-0.55605277825108923, -0.063056571191354049, -0.40016643187335721, 0.81139545700604132, -1.1438978790885947], [-0.98542095469719859, -0.51760373705569096, -1.2766783648691231, -0.48055055029624655, -0.60989709794330038], [1.0188312502175232, -0.58739475929564544, -1.3273453240412139, 0.9346388912229594, -0.20754144230589494], [-0.82412629470071586, -1.2325003295996653, -0.23934225098576858, 0.1074824264525725, -0.77263724115346699]], [[0.38220624228654965, 0.41342343311655105, -0.085684969450320031, 0.063685404711407614, -0.80602347602573299], [-0.9292343358641979, -1.0525333720557803, -0.83046820648637332, 0.31902090044144366, -0.21199349018529762], [-0.76164271304684505, -0.40794484955849719, 0.072029636046082354, 0.46221452751166925, -0.56708093080003408], [0.24284337845966869, 0.047921446813356888, -0.16588913165866717, -0.26960696696610015, -0.45070090153678355]]], [[[0.81817167861227191, -0.070347538678717958, 0.20839408853863836, -0.35505785539358425, -0.51106107668783118], [0.29002360455511733, 0.20698745120224848, -0.62896270760863282, -0.25681618990875754, 0.27089156916151669], [-0.3533002102782386, -0.94337451874613298, 0.98723225830095407, 0.43394886030868984, -0.63796926551678645], [0.98145360767833489, 1.2765112505660878, -0.21635350426837158, -0.42597920213290408, -0.6862127189173215]], [[0.77592942044172597, 0.29088999475355543, -0.087214700480432339, -0.056224211460473558, 0.022604004776994376], [0.19094975499300648, -0.3984962706186107, -0.028040795868233548, 0.12362490489758843, 0.10698647760701135], [-0.89264680077880865, 0.52387677410037492, 0.20711582117124033, -0.10582734214533712, -0.33874993096431022], [-0.2949092423384726, 0.11740294761888553, 0.18627957440290449, -0.85876472480662924, 0.83671743885572325]], [[0.36584028537500396, -1.5802340926706775, -1.121878264146716, -1.2886224114713243, 1.0692098755180606], [0.74954544716218663, 1.5153252388294867, 0.88276553509687883, -0.88965564695395305, 1.0983066964934576], [0.41585745484194264, -0.48879946675858943, 0.66548086873243961, -1.4172790743036996, 1.1455321800611906], [0.15182176302447414, 0.083369875282396533, -1.6622673064383038, 0.87147867814680402, -0.3045659946995482]], [[1.1055393741703803, -1.2145521305946523, -1.9494548223637067, -1.0364129669121871, -0.28619944072833903], [-0.83859153052325763, -0.015388634680732149, -0.66745679494956534, -0.55483562019174504, 0.67801615383388603], [-0.46988830456723646, -1.0049270693612677, -0.17596199235927645, -0.75877271413628788, 0.30451170344824063], [-0.83783042646144357, -1.143911887660594, -2.2454566648787662, 0.39087909729878501, -0.43852164500149116]], [[-0.26987788045031957, -1.4184787027080943, -0.70861007518642327, -1.0053147948132195, 0.47357998168386195], [0.26235083400274423, 1.6930653362002566, 0.33388052260236817, -0.47163345393133055, 0.63057632061348501], [1.1647557162757423, -1.4838833118351662, 0.27817008490592227, -0.65428260768315361, 0.76024171316025146], [0.32851768739771892, -0.090922948581268065, -1.4704875883220407, 1.6724830927941925, -1.2394727975534288]]]]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5, 4, 5),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank2_constData_rank0_offset0(self):
      arg0=Data(numarray.array([[-0.22575711284869393, 0.062709961587137375, 0.29708183233765051, 0.4908491789867333, -0.25174738120604556], [0.27990622325803982, 0.93619840250920716, 0.8761790514955341, 0.25933741140183764, 0.44108270948039974], [-0.89736856509657947, -0.87185277741872858, -0.41607560940776511, 0.46064000409089623, -0.19555939920414511], [0.96667371985793715, -0.3410252898937709, 0.1034176120484338, 0.98098327087282011, 0.53973264525199771]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[0.12148552314134542, 0.084501588753530532, -0.088122788983800326, -0.12624330772779979, 0.82145409822176907], [-0.014959805113731628, 0.15127864398031621, -0.016793969245435747, -0.043178661074101177, -0.47313299708415713], [-0.96888230154207644, 0.99809800337989696, -0.52828008977305463, -0.6814911824135379, 0.43901093616528475], [0.79000163377680743, -0.74665198417835499, 0.98272215497051318, -0.49107834545394646, -0.18198494529449749]]))
      arg1=Data(-0.828193017007,self.functionspace)
      res=generalTensorProduct(arg0,arg1,offset=0)
      ref=Data(numarray.array([[0.18697046440105716, -0.051935952283274259, -0.24604109902182808, -0.40651786244066551, 0.20849542316476616], [-0.23181637951924428, -0.77535297949168014, -0.72564537209683555, -0.21478143317179704, -0.36530161991440452], [0.7431943792950062, 0.72206238211676466, 0.34459091425864136, -0.38149883474237567, 0.16196092883105043], [-0.80059242451098511, 0.28243476371297138, -0.085649744134101147, -0.81244349473802346, -0.44700280784867802]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[-0.10061346193316247, -0.069983625731711491, 0.072982678475606799, 0.10455382590408978, -0.68032254793944291], [0.012389606130985272, -0.125287916566858, 0.013908648056908205, 0.035760265585303139, 0.39184544430091767], [0.80242155643927993, -0.82661779668833535, 0.43751788137412662, 0.5644062384270605, -0.36358579172200384], [-0.65427383651844973, 0.61837195943129042, -0.81388362640511813, 0.40670765650854368, 0.15071866089339045]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank3_constData_rank1_offset1(self):
      arg0=Data(numarray.array([[[0.21540416334065604, 0.74366578008235762, -0.69195728055683925], [0.10044832092598632, 0.087970834091693373, -0.41518568239679898], [0.19643178990517485, 0.78559488827261914, 0.45012266275925628], [0.085812841162166142, -0.15224683121259153, -0.70297494432375762], [0.75401001620850683, -0.73165139566430137, 0.34063775183996503]], [[0.40231494259775968, 0.27818402322291091, -0.2999283312562453], [-0.41701324222801595, -0.3687666148562676, -0.64431267191935415], [-0.39072724693733685, -0.24153844816192294, -0.51824861809662726], [0.13461542281990968, 0.67045662121206284, -0.92965765460657201], [-0.31880344736597799, -0.610033569416498, -0.10443555506480107]], [[0.79114478412075062, -0.26265029730742429, 0.22011170955511372], [0.1854643975972845, -0.4873583994456685, -0.24326736424741191], [-0.88443654131254501, 0.058262834012185349, -0.26507412834556687], [0.75221684591406546, 0.29314338088076797, -0.4571313565066204], [-0.064178291660620612, 0.14858115721037946, -0.55932263881951827]], [[-0.81755732568696105, -0.060016600069249693, 0.45214737600635591], [0.86463830557566435, -0.50379605649996151, -0.94468894380127089], [0.7932563081256141, 0.20793861726963092, 0.65468217311036958], [-0.23640179526284144, 0.96936122725531182, 0.091403698424982638], [0.28932133965263351, -0.25706194238825475, -0.16686165421540777]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[-0.70309468466127045, 0.97456356817127343, 0.94171756377467841], [0.53252895127796585, -0.62772520967691148, 0.82258656501191285], [-0.76235119862658451, -0.47452687450475084, -0.55923574869906623], [-0.10081514923594459, -0.43586311943779688, -0.036283879418308906], [-0.31836652090397766, 0.46589954162149927, 0.17485594715405162]], [[-0.88334363443743191, -0.09187414228153723, -0.22450695051449077], [0.76770850539666102, -0.65765949781693456, -0.92250856254218316], [-0.042219071904437966, 0.18779635375600567, -0.26414130929118507], [0.2650209709354252, -0.58941182332410214, -0.15013379629778534], [-0.056548264988479424, 0.64361452647932293, 0.74322859854739942]], [[0.51226747520824301, -0.39006238326379639, -0.78129885211011829], [-0.21322007153002476, -0.81821386117653194, -0.37209964615817381], [-0.91069698830057999, -0.89612536234931461, 0.89614375647063005], [0.3716204883024794, -0.81807785295590008, 0.54747944531700754], [0.078519257401486797, -0.34412016983016969, -0.48784533459437363]], [[-0.61440084912451343, 0.24522515969241443, -0.65393908765154829], [0.38106508690493057, 0.51995376536120586, -0.80708310803751493], [-0.85819601811790869, -0.58699556179500245, 0.93562087956732309], [0.5954329981618498, -0.46460656472788031, 0.67036152716639896], [0.2981121548039638, -0.97625242840669046, 0.4494913198893129]]]))
      arg1=Data(numarray.array([0.36437080498202867, 0.9553851407151488, 0.004783404466390806]),self.functionspace)
      res=generalTensorProduct(arg0,arg1,offset=1)
      ref=Data(numarray.array([[0.78566431279557225, 0.1186604622148579, 0.82427281104471339, -0.11754927973786292, -0.42264022688719483], [0.41093002314284305, -0.50734360309690352, -0.37561083853477101, 0.68514729479871705, -0.69947923380627963], [0.038390753930072838, -0.39920080738174829, -0.26786736541183109, 0.55196404368679652, 0.11589206758562351], [-0.3530701850040619, -0.1707891402231797, 0.49083251429998459, 0.84041262092529778, -0.14097107735544656]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[0.67940099148519539, -0.4017465708751633, -0.73380949547251662, -0.45332480524897528, 0.32994644034866094], [-0.41071372905727477, -0.35300027733990275, 0.16277095392493734, -0.46726754392057707, 0.59785038111041355], [-0.18974176103319909, -0.86118043710632253, -1.1836896320810752, -0.64355295256764378, -0.30249073340255334], [0.0072866865698713494, 0.63174448880734813, -0.86903295826450955, -0.22371319704348752, -0.82192359907882184]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank4_constData_rank2_offset2(self):
      arg0=Data(numarray.array([[[[0.043160074980980845, -0.53541782159071416, -0.4712512687078183], [0.40065424131044658, -0.16719342017637828, -0.66345073205472271]], [[0.99506022871633903, 0.64824062767688084, 0.5090157458050657], [0.71681834087290097, 0.52462155618054207, -0.37895110808669985]], [[0.71372121529084653, 0.55942137496645183, 0.81294341044762386], [-0.36692033295483051, 0.6495564085516794, 0.18239324581523797]], [[0.026172523849041118, 0.32011561183817405, 0.99463733909015395], [0.74896870024857209, -0.32822176188657348, 0.88988152753540328]], [[-0.61165639871399446, -0.80636834434423665, 0.41361990652192793], [-0.33713053137343296, 0.8649458258988878, 0.53459558395198115]]], [[[-0.33984519530364676, -0.46853327105322928, -0.38622523136414699], [0.88532995085204846, -0.8546841060215109, -0.53810542386165272]], [[-0.81785647717117804, 0.085526243220275688, -0.088579968032897138], [-0.36822256533001441, -0.61644843148455042, 0.54561351455889961]], [[-0.33162138143917153, 0.27786695793794203, -0.52915060409658299], [-0.50141940876307034, -0.48996889656340548, 0.15055074966841731]], [[0.2106501028867267, 0.57905908851025867, 0.3634850793387272], [0.32797007802534028, -0.7650512766168851, 0.50574626105482423]], [[0.10867927876999284, -0.35510237020750779, -0.2228012631719356], [0.037780655507809069, -0.51220580841039354, -0.83412449507867192]]], [[[0.83941243850610037, 0.91697345235742089, -0.20439940641386234], [0.42140901565791289, 0.98253792418552743, 0.42644419333122086]], [[-0.67076941364551756, 0.12741609021980116, -0.3272018186031187], [0.16473254267353643, -0.59458878250839287, 0.37146888992586913]], [[-0.86064409726938629, -0.64479408785993675, 0.81178289926328229], [-0.5701268383447633, 0.092059070036735857, 0.50334176363968308]], [[-0.12216702234808174, -0.34715094922740164, 0.54351451241181614], [-0.38824112073729689, 0.5654567689846417, -0.026025714617836648]], [[-0.84248206278199245, -0.0483211119103506, -0.84682487025452313], [-0.66488071771690826, 0.59363614534996278, 0.7300790591352162]]], [[[0.049876612830762834, -0.62374415614731493, -0.92231334889090011], [-0.14152166373190078, 0.50435006123676906, 0.13489009290970699]], [[0.93585211150629033, -0.77149509545312012, -0.99964175475157946], [0.12847271875472632, 0.50882283870881673, 0.77315024135996824]], [[-0.18474943657415444, 0.094007600900607224, -0.35798780650393502], [-0.21416926325789953, -0.42131507059439954, 0.99808578848282625]], [[-0.46809589308524369, 0.36424587244216755, -0.73359880146697476], [-0.48860613141112075, 0.60390416686341908, -0.044567396872656762]], [[0.4823973985074832, 0.61347098182505455, 0.22135538944932187], [0.95168736082420602, -0.20332073370760551, -0.016848698038549159]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[0.12251615540365157, 0.98552399375620015, -0.95389296809308632], [-0.66481326267041352, 0.14646064340823717, 0.094147045463586876]], [[-0.15442358525539079, 0.15812715477980621, 0.54126812108667965], [-0.4929974243875932, 0.027010909006572215, -0.085171268600229499]], [[-0.21638982757210101, 0.26036898367119266, -0.79443356868322246], [0.19203463266316034, 0.88420118852159213, -0.42656899818923]], [[-0.10359754620902795, 0.93741664325396923, -0.33099405106144064], [-0.58561945330786469, 0.56439618880329667, 0.90370838122101027]], [[-0.24508635666316425, 0.30499592535498277, -0.039098821503546377], [0.71748987415040699, -0.59299850791732744, 0.13321620140684254]]], [[[0.52252790494702572, -0.67878471331461698, 0.9842690834789809], [0.92575324194792286, -0.53449748703287447, -0.66181773870837435]], [[0.1464144846020603, 0.84446001739704335, -0.91677829343306172], [-0.44308334690579687, 0.024407132008480659, 0.48062348075496142]], [[-0.73511025115103834, 0.0029623775698572885, -0.90682680688414452], [0.2746715149048593, 0.33451638508389947, -0.07032936660269784]], [[-0.81566991015038859, 0.98249054945523895, -0.570604093602046], [-0.55467590144173418, -0.47846339955004935, -0.64883557696953065]], [[0.74182296944143689, 0.71802606825713933, 0.91852926285500547], [-0.071623325757161016, -0.32123959777461275, 0.98897980107147432]]], [[[-0.13547733775409543, 0.39032320566693124, 0.89638297539093892], [-0.66509866937481443, 0.16229475937028215, -0.75614107929541441]], [[0.91862599775648102, -0.098046311340248549, -0.7389090636480331], [-0.81024283319083512, 0.54838479551438346, 0.069901166426615591]], [[-0.31670720096624949, 0.46463188997758076, 0.15636481552386106], [0.6998815281167603, 0.41441102034199506, 0.15316818746269933]], [[0.25649438762567511, 0.035856523109893734, -0.65187387126692875], [0.32511123942930231, 0.058578004034689712, -0.61552932959352402]], [[0.57231053138348686, -0.40522017826871704, -0.89896855709668211], [0.15936014029447754, -0.20492740223413586, 0.42433006785263538]]], [[[-0.14288797799582165, 0.91699970721908164, -0.74444587709520404], [-0.1736223457776227, 0.78048436310582048, -0.98494429887342427]], [[-0.65771673807015341, 0.099872213565725509, -0.40806990446248026], [-0.11112611987070964, 0.7639695254191845, 0.92419500038873137]], [[0.25411915571021515, 0.96488822130829499, -0.78784134441854903], [0.3612964169794135, -0.98663892985534085, 0.83842417105884381]], [[0.57396220168707779, -0.52732225210373662, -0.41649173157217589], [-0.22226184487258416, 0.70713743949444252, -0.99736521422304558]], [[-0.94529005110278197, -0.7761078096114713, 0.75439406175919399], [-0.85611346700344559, 0.57574633200751668, -0.93437808893599894]]]]))
      arg1=Data(numarray.array([[-0.16967198230783209, 0.71834115164305645, 0.30201025291390704], [-0.43940868572576686, 0.66658958279462577, 0.90565426866610754]]),self.functionspace)
      res=generalTensorProduct(arg0,arg1,offset=2)
      ref=Data(numarray.array([[-1.4226157582397854, 0.14208442217088868, 1.2856748846237904, 0.78393459207302807, 0.85831157466612795], [-1.8416311672568453, 0.41847159045749877, 0.12612803010789714, 0.29393992066840663, -1.4542733539535981], [1.3105340442286457, -0.025788519620226213, 0.6957497397774931, 0.45945627634333785, 1.2015500143998796], [-0.21452771338283344, -0.031955825757289502, 0.70794459563843626, 0.69641254947016096, -0.14328654492696991]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[0.87408795994282507, 0.46075593834598344, 0.10251554529665663, 2.0429932024587365, -0.34104292188617258], [-1.641450515663732, 0.95113441934728771, -0.10841738492937694, 0.0090014177385082661, 1.3803370744641317], [0.28972051058050041, 0.33542771282887934, 0.54214979254007445, -0.87590126782133926, -0.48201947726064986], [0.16266732867051636, 1.4551821852831857, 0.35494826463452189, -0.93620117934856761, -0.25553950371677658]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank2_constData_rank1_offset0(self):
      arg0=Data(numarray.array([[-0.51271482846318839, -0.98288116523786151, -0.224718279189277, -0.83632152454725905, 0.82674337352828209], [0.63234262240648587, 0.58273066587389266, 0.025350875565599118, -0.69634632916395245, -0.45133886005880841], [-0.7948760604758387, 0.32833102391180646, 0.32170901344073188, 0.049384648681700227, 0.73693703271333577], [-0.3259894376731487, -0.69688453910447579, 0.63424901236411713, 0.82602410154620576, -0.011232598963358376]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[-0.74532749263666154, -0.8343983995772275, 0.55162958672681195, -0.77349601093398057, -0.97018077768368816], [-0.95811051388566715, 0.09157705551394435, 0.84799347650664947, 0.39599966735925052, -0.77825793346629735], [-0.45045194399503452, 0.69272608701474336, 0.72916070036018077, 0.78331376871861869, 0.93804206061182005], [0.54167702087509073, -0.45494269416457112, -0.69163967359335121, -0.99721026938960411, 0.48314062361524046]]))
      arg1=Data(numarray.array([0.46315179701387121, -0.068416316165926583]),self.functionspace)
      res=generalTensorProduct(arg0,arg1,offset=0)
      ref=Data(numarray.array([[[-0.23746479415838442, 0.035078059807096308], [-0.45522317793100325, 0.067245108554447861], [-0.10407867482837846, 0.015374396837276535], [-0.38734381697544346, 0.057218037839795004], [0.38290767911893403, -0.056562736031395687]], [[0.29287062189602775, -0.043262552779753265], [0.26989275507458316, -0.039868285476009166], [0.011741303574082271, -0.0017344135177790921], [-0.32251405369629726, 0.047641450617063354], [-0.20903840409842925, 0.030878942147752331]], [[-0.36814827581269127, 0.05438249186624116], [0.15206710374015747, -0.022463199139032552], [0.14900010769063463, -0.022010145576989437], [0.022872588781828167, -0.0033787157379504122], [0.34131371098725144, -0.05041851702449536]], [[-0.15098259386586019, 0.022302996434598758], [-0.32276332659742135, 0.047678272958517842], [0.29375356983071388, -0.043392980957830118], [0.38257454700789362, -0.056513526092060659], [-0.0052023983950155788, 0.00076849304204218579]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[-0.34519976757851267, 0.050992561383387154], [-0.38645311818969108, 0.057086464713818737], [0.25548823437854207, -0.037740464211980983], [-0.35824606744713405, 0.052919747637142217], [-0.44934097061251527, 0.066376194824111737]], [[-0.44375060624403034, 0.065550391839900191], [0.042414077826522366, -0.0062653647835866268], [0.39274970250009467, -0.058016589795322163], [0.18340795755433212, -0.027092838443652241], [-0.36045156042521742, 0.053245540834670854]], [[-0.20862762732969192, 0.030818262617920537], [0.32083733203926573, -0.047393766985585853], [0.33771208868371061, -0.049886489011610587], [0.36279317960773616, -0.053591442457776507], [0.43445586604695918, -0.064177382195755542]], [[0.25087868561941851, -0.037059546320007422], [-0.21070752634065312, 0.031125503201341741], [-0.32033415771084794, 0.047319438581460982], [-0.46185972826848176, 0.068225453074467979], [0.22376744803780099, -0.033054701657863228]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank3_constData_rank2_offset1(self):
      arg0=Data(numarray.array([[[-0.1210409029002093, 0.42366483726456283, 0.96996162999676416], [0.52546283217891032, -0.26495449863639853, -0.8751290516913568], [-0.13384330147913714, 0.74082273526652287, 0.20015269040230721], [0.44351650100933493, 0.8873542013766198, -0.66777376651587517], [0.84171669198437327, -0.0044391194644366472, -0.69311952067933502]], [[0.56108764004231571, 0.97884848638229816, 0.71285710094870836], [-0.69213579175826889, 0.37115217950406465, 0.30362527091152858], [-0.83905781929977108, 0.3232651251990577, 0.90785604777524731], [0.1085537941771173, -0.72469676173889797, -0.49819412719942036], [0.086979232930776806, 0.72042306486218699, -0.75954064178220926]], [[0.86106237352653969, 0.75045519289362006, -0.19184899406615519], [0.37211988367186888, 0.95806010363544813, 0.79428450903898562], [0.85030166352015613, 0.038466652251867073, -0.70145047866398835], [-0.46089048428045398, -0.24318868006119509, -0.60723257355123716], [-0.78980694254180239, -0.78614675902845588, -0.67388250812701722]], [[-0.24599095708616248, 0.60022636852626876, 0.03545511181248906], [-0.5392077934016235, 0.80786658746896278, 0.40858856336172389], [-0.27741280035833937, 0.027634574347700891, -0.38426730096299666], [-0.45480548579700097, -0.050128641356284032, 0.87793304504938652], [-0.53947760858528837, 0.70526168532087352, 0.59650996836540249]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[-0.040615116256996542, 0.96550478860496369, -0.02173230355730249], [0.29416553920630251, -0.39003471011456492, -0.48640273819657343], [0.44272119481409034, 0.74963444862187112, -0.11828083260861466], [-0.11865591623668759, 0.77638361325819338, -0.5333826451257464], [-0.56693548790300619, -0.90856311133506318, -0.048206068858062778]], [[0.93239626382831631, 0.87903727660203823, -0.80103780653227852], [-0.55041298147494189, 0.68027283831700247, -0.89397199087271817], [0.97409633798926243, -0.48428121581947603, 0.22079191308613089], [-0.44438866230276131, 0.14903336287733726, -0.63213912282441531], [-0.72979064934735405, 0.62882920930385966, 0.37538493701144726]], [[-0.43145383627853406, 0.73504477465137597, -0.10963203697541957], [-0.57284777497872419, -0.84485734929703882, 0.082096670689712603], [-0.12373798812337933, -0.11310562575064553, 0.90086442396520416], [0.97147194504551071, -0.86035573031174217, 0.70991901181240324], [-0.75328209708973715, -0.95980164826700021, 0.35989401780656305]], [[0.24699886541978144, -0.20438977152881588, 0.37513231006932046], [0.78216817372224257, 0.27202224183817347, -0.68457430353665538], [0.17106517898958873, -0.20285501374399262, -0.23624132759603067], [0.24577907806724397, 0.8709351824671443, 0.77730632898181429], [-0.83938684053721846, 0.18720369672769732, -0.72196995647653361]]]))
      arg1=Data(numarray.array([[0.81553946122203369, -0.85193229168882034], [-0.94059277446439071, -0.27238026284109296], [-0.87877676487573786, -0.33195628110370001]]),self.functionspace)
      res=generalTensorProduct(arg0,arg1,offset=1)
      ref=Data(numarray.array([[[-1.3495894607248988, -0.33426414144180011], [1.4467930389207271, -0.084985793350694339], [-0.98185653968002595, -0.15420200355308405], [0.11389032827847317, -0.39787210355958114], [1.2997259112305697, -0.48579112338338271]], [[-1.0895509589185459, -0.98126507921123651], [-1.1803859422774106, 0.38776798724422201], [-1.7861484035212354, 0.32540089368942582], [1.2079758639665616, 0.27029128153052512], [0.060776935372018781, -0.018195154210860875]], [[0.16495005053950049, -0.87429054525262062], [-1.2956647327865396, -0.84164533988420054], [1.273691487738364, -0.5020261094048154], [0.38648901457717366, 0.66046194996676189], [0.68751752321900927, 1.110692430705901]], [[-0.79634104634323699, 0.034308276718411107], [-1.5586768440982337, 0.10368807769872282], [0.08545120889061153, 0.35636975430619738], [-1.0952683441002791, 0.10968214360353629], [-1.6275284237826668, 0.0694838014375527]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[-0.92217221448891529, -0.22116894435582413], [1.0342068601775554, 0.017093078996642974], [-0.24010169374646417, -0.54209004490893875], [-0.35830512351722038, 0.066674953278371141], [0.43459200855304325, 0.74646761586684462]], [[0.63752324795884185, -0.76786135897341279], [-0.30314140871839268, 0.58038131567976037], [1.0558986119781935, -0.77124874306081037], [0.052912978802899246, 0.54783785727644752], [-1.5165248441469878, 0.32584016736655491]], [[-0.94690334634566931, 0.20375080986337452], [0.25534210575776861, 0.69089747909807053], [-0.78618560191829567, -0.16282347609643438], [0.97765775753071105, -0.82894647554092393], [-0.027815280995997615, 0.78370728874956441]], [[0.064027306058254463, -0.27928209634301482], [0.98361484759487217, -0.51319907451457081], [0.53791775369328332, -0.012060455450757082], [-1.3018315438488881, -0.70464440539212092], [-0.22618511349375803, 0.90377262437334682]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank4_constData_rank3_offset2(self):
      arg0=Data(numarray.array([[[[0.077825327658266108, -0.29938979340559135, 0.70059488842224971], [0.85432120404869538, 0.71318317399071574, -0.46563512689938902]], [[0.20232385792175478, 0.6356839820753446, -0.46688438463852178], [-0.50376602450666375, 0.018530908558254344, -0.72622740031197974]], [[-0.30187978956491679, 0.33038875326208061, 0.74007442222381115], [-0.031609808128535422, -0.19423270409057314, 0.58777650960641892]], [[-0.74815247047679523, -0.97201111598083423, 0.43915633628233897], [0.48920402703058374, 0.93740207895533012, 0.84935388667454648]], [[0.88172615994608239, 0.19886983698787697, 0.95209077094439487], [-0.16864670282261973, 0.49490650131421243, -0.54907688347373695]]], [[[0.16485818648923445, 0.54518998615986836, -0.5070746010941598], [0.57214918598570574, 0.50584746437797956, -0.50718529726813766]], [[0.69513268323812527, 0.41841670088503569, 0.62892896254252917], [-0.73531361783564653, -0.44522529087764573, 0.11777239886201563]], [[0.72526938901584082, -0.83406834977497435, -0.28865749336487867], [-0.60333888091386068, 0.93876036645447902, 0.81579406745062011]], [[-0.25299157560946295, 0.033668540070111108, -0.26033892245679624], [-0.68859217223971969, -0.85119217533578184, 0.3188769952608892]], [[-0.80227032953148347, -0.72640499947590143, -0.060626349221511555], [-0.66079297087846145, -0.41113009636835418, -0.30759482691344742]]], [[[0.75723814844225212, 0.71329792025919714, -0.566465674153386], [0.28603573030723584, 0.26549466401581201, 0.11119184460009368]], [[0.90799212172994315, -0.98431019963899247, 0.21841427874088071], [-0.53365184251810316, -0.96444589355772692, -0.78568647816318649]], [[-0.73626193331166889, -0.17657270050177365, -0.35051231473805289], [-0.95480756863889216, 0.82548416539356473, 0.85959614496040615]], [[0.9882499373045841, -0.92096057226431016, 0.085668353456718194], [0.30120028197000104, -0.89441687151431237, -0.67960165846914755]], [[0.23500747316525605, -0.78358288009906363, -0.96290004317007338], [-0.56264619457154641, 0.097222751725591916, 0.67943553600787032]]], [[[0.22997570364133146, -0.051258720448909001, 0.30184405639417133], [-0.55823703547456915, -0.71174972249481394, 0.50410846098121209]], [[0.15041243076361055, 0.18181519528804757, -0.33929030061611454], [0.033494943732579774, -0.62087459983073257, 0.99625527309740591]], [[0.72912003123170521, -0.70555120624220158, 0.49508823132376434], [-0.18812640077326215, 0.55256413862748088, 0.97624199118103738]], [[0.18256524520253681, -0.44462714570001949, -0.015616964097897368], [0.47952688163494939, 0.061328952457831765, 0.6769519663648722]], [[-0.57604675332429478, -0.22484615184052359, -0.59738826977716575], [0.43958836332591811, 0.36872412443379221, -0.89681791668528232]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[0.77911374678344125, 0.79323610913194664, -0.13331719180240076], [-0.78869767159221427, -0.32559965191941376, -0.32784172784894072]], [[0.82196757086487904, -0.25478070553409138, 0.43897965360144564], [-0.3355074351331726, 0.26511269383574532, -0.27252337852374309]], [[0.86666525240480508, 0.60889214437622829, -0.50243681905953297], [-0.18556439335342789, -0.32315223497597168, 0.38476329665570641]], [[0.57959758449668453, -0.68129966359835703, 0.010720794964967029], [0.44322426443595453, -0.92299682202862043, -0.32675557880019546]], [[-0.27875642242525767, 0.06230397935405918, -0.9914128484233824], [-0.89149952406660415, -0.73759562143574331, 0.029365160982482097]]], [[[0.75537419343758372, -0.64612593366597659, 0.9519968379894137], [-0.30479920985950248, -0.86763328468884904, 0.52207331356738651]], [[-0.8181456512255243, -0.0064099056730020365, 0.75501681026013245], [-0.17023192648616381, 0.84276082439293853, 0.21121469980032792]], [[0.9000977227328868, 0.6705860154345058, 0.4573660642878179], [0.29845474763865965, 0.8741058849397636, -0.45466501171765006]], [[0.38292338910667967, 0.39410125868220214, 0.080530014880688894], [0.29260604135828228, -0.10847131980325186, -0.27923781044232521]], [[-0.85237108565767228, 0.94695368327993457, 0.63148153789059358], [0.23825837890423229, -0.82090716177823064, -0.76780636542466874]]], [[[-0.74419499801317479, 0.12004727974383367, -0.69382332974773209], [-0.58357542717738609, 0.51781811755813667, 0.37616626216196791]], [[-0.9845510015641159, 0.61393778470787597, -0.82452163096088094], [-0.33798237482480875, -0.97362689634787469, 0.1206353907284623]], [[-0.241968280507602, 0.30099615368924937, -0.83710314239239825], [0.33702030089924495, 0.13269976180427445, 0.32674773082531128]], [[0.84904150967256564, 0.44574250913073943, -0.30386765617744294], [0.93640230028196281, 0.69133677084005551, 0.96807491925607647]], [[-0.80214067947894296, 0.95728784061377947, -0.8432411646458402], [-0.11206598239935062, -0.065154946495660226, -0.89250325061450808]]], [[[0.10929898613541678, -0.72915365744859351, 0.23290519841739954], [-0.51069432418286853, 0.45130808175984649, 0.82272312674465486]], [[0.3315551049183636, 0.38557535010600064, 0.68904865165343843], [0.10395794354931942, 0.62656894682076469, 0.42864257481482881]], [[0.71094657603368905, -0.87995836246917802, -0.07356115811247621], [-0.70163628830290325, 0.97824696074693107, 0.66738921614669033]], [[-0.19395694509980577, -0.20269178777213392, -0.33396812283373678], [0.58901761544264319, 0.54164373012125711, -0.302190812932154]], [[0.76031263878430844, 0.39280927813846245, -0.63921547930035572], [-0.68309954607906009, 0.0671502089107614, -0.45979593246546302]]]]))
      arg1=Data(numarray.array([[[-0.58792038259522839, 0.24369879579659792], [0.66174575941963587, 0.43699419507595394], [0.97084959498701218, 0.4641928650280529]], [[0.022184417478349649, -0.87563658566757585], [-0.036488230995877169, 0.037577947294418212], [0.48504845964435073, 0.78780832811391055]]]),self.functionspace)
      res=generalTensorProduct(arg0,arg1,offset=2)
      ref=Data(numarray.array([[[0.20337146586002033, -0.87476068795654349], [-0.51567105396417134, -0.019943788426898146], [1.4061016440797323, 0.89778255997143486], [0.61161096098813672, -0.12724506599534813], [0.24942494120738218, 0.47743776236237079]], [[-0.48021362767709919, -0.83851066261317919], [0.53585653259704569, 1.3641119341025043], [-0.91052363163993799, 0.88454314634633535], [0.088722255977954301, 0.65439614037676108], [-0.21673970972471587, -0.2202500905631071]], [[-0.47253529996499355, 0.080407006614811913], [-1.3308866088223565, -0.29540207734825674], [0.34136590233995262, 1.1249887343735152], [-1.3976050436697138, -0.95460064877817774], [-1.2779997526478248, 0.29947053635181908]], [[0.3820208926681769, 1.0329664180970723], [0.20911481696385448, 0.69080898636571397], [0.034285273878503164, 1.0537664729176011], [-0.079970932178522136, -0.041336102933803631], [-0.82879774798338279, -1.5935261171433437]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[-0.22720253052335443, 0.89472449389016107], [-0.37497189649709423, 0.38179482955754251], [-0.40008549478553501, 0.6975233279761397], [-0.89617721426693175, -0.83170872194436118], [-0.73601709780649627, 0.2751334906764295]], [[0.33070223048816649, 0.98922380464749737], [1.2776925578715337, 0.49541843898259713], [0.1127972164799608, 0.13802131686386426], [-0.011145745060080453, -0.1773591676778338], [1.4036582930092261, -0.34513932879146592]], [[-0.0060115943825057305, 0.37583815081962579], [0.27116382707134834, 1.6694413473017367e-05], [-0.31013713137547461, -0.34871725005790638], [-0.034099252752837816, 0.2293324719021842], [-0.14660037566673906, -0.77601882906059194]], [[0.050606170738195566, 0.92840304365142312], [0.91654372772383985, 0.83934922366496034], [-0.79924930051380971, 0.93148726258421499], [-0.49760580363948781, -1.0243477816183006], [-1.0482731792421787, 0.29866264049424535]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank2_constData_rank2_offset0(self):
      arg0=Data(numarray.array([[0.23253233637201376, 0.39061557364229227, 0.42201919397497822, 0.51083779366263427, -0.10247491791460095], [0.48870502899569335, 0.09057574097886123, 0.92181358829143067, -0.92850597772023757, 0.74226347563948702], [-0.89968533920715466, -0.12372936497980636, -0.43477372851668905, -0.59897451352802533, -0.11287470828651736], [-0.4570373081239818, 0.86103497164334541, 0.31879489616399992, -0.96053649984762357, 0.11084524002008322]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[-0.12332955613303498, 0.61102289995288173, 0.6583581144455195, 0.28020841099912341, -0.83490794995998074], [0.088870464180985653, -0.57034162041397751, -0.055577725405030476, -0.9806710215487533, -0.059413763859514468], [0.057533492223169169, 0.46892938930385419, 0.1641471238760126, 0.19571971248844089, 0.97780276792461596], [-0.13338512920231804, 0.93526857158486654, -0.59202953810471315, -0.6433261815106861, -0.2878979765822387]]))
      arg1=Data(numarray.array([[0.12774738100940364, -0.17051621541410023, -0.97482621922791379, 0.98895724349654901, -0.041732493695573636], [0.40163224255661434, 0.44048385037750504, 0.24080840996505937, -0.56412213734963634, -0.92200442708767616], [-0.19167345429334826, -0.11841607746292349, 0.4405111334077858, -0.62328114842849169, -0.32894063319791056], [-0.088434873150254223, -0.64685142863930145, 0.68253594095771342, -0.31322811407666418, 0.2955006614539295]]),self.functionspace)
      res=generalTensorProduct(arg0,arg1,offset=0)
      ref=Data(numarray.array([[[[0.029705396971522448, -0.039650533959554313, -0.22667861831376368, 0.22996453840227904, -0.0097041542616620718], [0.093392483724020869, 0.10242673886242178, 0.055995742187204975, -0.13117663859708498, -0.21439584357603736], [-0.044570276147326664, -0.027535567156462961, 0.10243308304919628, -0.14493302166070907, -0.076489333965199732], [-0.020563967670391283, -0.15041387398707171, 0.15871167700876793, -0.07283566518364637, 0.068713459207357691]], [[0.049900116514288675, -0.066606289299291438, -0.38078230282525849, 0.38630210097610462, -0.016301361964419843], [0.15688380881949218, 0.17205985189537476, 0.09406351519638996, -0.22035489228514418, -0.36014928818758568], [-0.07487063630079592, -0.046255164026649975, 0.17207050907189858, -0.24346332333382201, -0.12848933413086069], [-0.0345440387055699, -0.252670241859277, 0.26660916810867896, -0.12235177946094954, 0.11542716038550348]], [[0.053911846766002962, -0.07196111578872233, -0.41139537530423959, 0.4173589387761299, -0.017611913351971847], [0.16949651527810533, 0.18589263949530957, 0.10162577107585047, -0.23807036970773549, -0.38910356516090266], [-0.080889876687278664, -0.049973857564581552, 0.18590415345775788, -0.26303660787959082, -0.13881926088780117], [-0.037321213886149729, -0.27298371853592113, 0.28804326766192756, -0.13218827623293636, 0.12470695096586025]], [[0.065258190261023655, -0.087106127265841424, -0.4979780750348749, 0.5051967362944576, -0.021318535003486631], [0.20516892865139683, 0.2250157982708666, 0.12301403684195804, -0.28817490799993778, -0.47099470728064963], [-0.097914044494909799, -0.060491407745343423, 0.22502973547385963, -0.31839556669472358, -0.1680353073088105], [-0.045175875482910799, -0.33043615663362369, 0.34866515417428834, -0.16000875870803105, 0.15095290592297439]], [[-0.01309090238274389, 0.017473635177668333, 0.099895236796381251, -0.10134331234835889, 0.0042765338658255101], [-0.041157231087846149, -0.045138546410142193, -0.024676822044315032, 0.057808369718713226, 0.094482327982708295], [0.019641721495118881, 0.012134677817782111, -0.045141342236430682, 0.063870684522927892, 0.033708164385732743], [0.0090623563668604488, 0.066286047052754773, -0.069942814523406602, 0.03209802527855142, -0.030281406026201711]]], [[[0.062430787540324488, -0.083332131998183748, -0.47640247573353972, 0.48330837835848195, -0.020394879541557904], [0.19627969674423557, 0.21526667287087325, 0.11768428097438115, -0.27568932549056652, -0.4505882002740404], [-0.093671781038135463, -0.057870532570074289, 0.2152800062249777, -0.30460063171521506, -0.16075494168484661], [-0.043218567247125451, -0.31611954618907551, 0.33355874681634218, -0.1530761545721025, 0.14441265932408917]], [[0.01157081369303564, -0.015444632560043246, -0.088295607132190118, 0.089575535126112021, -0.0037799515393722367], [0.036378137970567069, 0.039897151137164362, 0.021811400166526641, -0.051095780593022243, -0.083511234169256696], [-0.017360965148597907, -0.010725623960014525, 0.039899622317848188, -0.056454151857066225, -0.029794041589956549], [-0.0080100541639558757, -0.058589047452239709, 0.061821198596949171, -0.028370868527905133, 0.026765191370933281]], [[0.11775927168311093, -0.1571841643927463, -0.89860805510705211, 0.911634225294356, -0.038469579761866241], [0.37023005868464692, 0.40604399870091357, 0.22198046448064529, -0.5200154516648996, -0.84991620935427548], [-0.17668719468236488, -0.10915754927749351, 0.40606914856895615, -0.57454903194727169, -0.30322194542302122], [-0.081520467748733338, -0.59627643652543283, 0.62917090487209792, -0.2887379317907674, 0.27239652507733803]], [[-0.11861420690533603, 0.15832532531022378, 0.9051319717915367, -0.91825271229627425, 0.038748869861512249], [-0.37291793805900081, -0.40899188816474014, -0.22359204813786324, 0.5237907766934542, 0.85608662203543029], [0.17796994808166058, 0.10995003578250716, -0.40901722062144619, 0.57872027211618915, 0.30542334423933998], [0.082112308358941982, 0.60060541818846713, -0.63373870118814402, 0.29083417631021918, -0.27437413058025772]], [[0.094822215031881749, -0.1265679587061615, -0.7235778976286118, 0.7340668408165949, -0.030976505817579467], [0.29811694428895408, 0.32695507374427063, 0.17874328734388345, -0.41872725835431712, -0.68437021060509251], [-0.14227220437160704, -0.087895929229224318, 0.32697532494115283, -0.46263883153310326, -0.24416061767653471], [-0.065641976312244846, -0.48013418964417554, 0.50662149978414006, -0.23249778862254647, 0.21933934802456109]]], [[[-0.11493244581627093, 0.15341093910515502, 0.87703685771409368, -0.88975033307656537, 0.037546112746462607], [-0.36134264038107777, -0.39629686234215916, -0.21665179600334999, 0.50753241649567271, 0.82951386573487418], [0.17244579674291807, 0.10653720881981102, -0.39632140848451192, 0.56075691144531248, 0.29594306515767838], [0.079563558847928165, 0.58196274699198247, -0.61406757956161484, 0.28180674206228096, -0.26585761283611714]], [[-0.015806102330126887, 0.02109786305194649, 0.12061462907073527, -0.12236305173000774, 0.0051635349439770979], [-0.049693702326945449, -0.054500787091068731, -0.029795071646773669, 0.069798473825321602, 0.11407902227212834], [0.023715634783201919, 0.014651546067887081, -0.054504162803080097, 0.077118180698941705, 0.040699615661632882], [0.010941990696950682, 0.080034516501821293, -0.084449738550592485, 0.038755515648527999, -0.036562109192807439]], [[-0.055541205149700498, 0.074135970748143279, 0.42382882998954741, -0.42997262809858172, 0.018144191884323771], [-0.17461914758885844, -0.19151080598001524, -0.10469717025868427, 0.24526548499430517, 0.40086330247380275], [0.083334582380792208, 0.051484199514876317, -0.19152266792481565, 0.27098626881641924, 0.14301474555609617], [0.038449159530436462, 0.28123400742585614, -0.29674869589683178, 0.1361833550333621, -0.12847592435947278]], [[-0.076517425394586849, 0.10213486717630066, 0.58389606043640385, -0.59236018382336231, 0.024996700109617603], [-0.24056747710251794, -0.26383859999681758, -0.14423810021227873, 0.33789478278938834, 0.55225715318552648], [0.11480751404159446, 0.070928212392251555, -0.26385494183660757, 0.37332952267114478, 0.19702705574931909], [0.052970235124086155, 0.38744751979413378, -0.40882163320053944, 0.18761565725237075, -0.17699736494157714]], [[-0.014419448365803023, 0.019246968072987519, 0.11003322512539938, -0.11162826036751128, 0.0047105430519567984], [-0.045334122217037628, -0.049719486116282838, -0.027181179027746156, 0.063675121691306874, 0.10407098074639901], [0.021635085239630803, 0.013366180200061131, -0.049722565680366954, 0.070352677809351519, 0.037129078015796464], [0.0099820605091901111, 0.073013166312378155, -0.077041045230665531, 0.035355532003539449, -0.033354550960085216]]], [[[-0.058385319136426514, 0.077932272084349385, 0.44553195112460425, -0.45199035641737595, 0.019073306579926015], [-0.18356091899387314, -0.20131755324862166, -0.11005842746404697, 0.25782486310742492, 0.42139042143454558], [0.087601919589056942, 0.054120565282255458, -0.20133002261133864, 0.28486273828218178, 0.15033814152937114], [0.040418036368877981, 0.29563523570145822, -0.31194438915318229, 0.14315693408635008, -0.13505482685976]], [[0.1099949625849435, -0.14682042470381038, -0.83935946603009637, 0.85152677211053207, -0.035933136525774338], [0.34581940658078764, 0.37927199961914665, 0.20734446244574398, -0.48572888853622753, -0.79387805573247616], [-0.16503754728225517, -0.10196038390040452, 0.37929549126235079, -0.5366668659629581, -0.28322938877790699], [-0.076145518495211992, -0.55696170151589841, 0.58768731456808887, -0.26970036032189909, 0.25443640365557402]], [[0.040725213064115764, -0.054359699187216323, -0.31076962333670738, 0.31527452175111792, -0.013304105994345179], [0.1280383090619503, 0.14042400334301561, 0.076768492050229023, -0.17983925820019103, -0.29393030559616395], [-0.06110451895884314, -0.037750441118940867, 0.14043270103382099, -0.19869884899423962, -0.10486459500444828], [-0.0281925862032118, -0.2062129340266011, 0.21758897442581224, -0.099855524102715684, 0.094204102684598751]], [[-0.12270602221947335, 0.16378704872112324, 0.93635616457687243, -0.94992952916712914, 0.040085583424259316], [-0.38578242849128208, -0.423100815881013, -0.23130526724170972, 0.54185990329638001, 0.88561890523880993], [0.18410934890063618, 0.11374296457192158, -0.42312702222742415, 0.59868429273251056, 0.315959484469582], [0.08494492352021378, 0.62132440718662951, -0.65560068374772629, 0.30086703634907114, -0.28383917105561501]], [[0.014160189109924368, -0.018900910824892155, -0.10805484624818837, 0.10962120302497487, -0.0046258482803224693], [0.044519022325992204, 0.048825538120064974, 0.026692466001431606, -0.062530253715162798, -0.10219980202011279], [-0.02124609004662464, -0.013125858528614521, 0.048828562314104922, -0.069087748497549284, -0.036461503439180552], [-0.0098025847404855423, -0.0717004018648571, 0.075655860197791094, -0.034719845485865847, 0.032754841744954168]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[-0.015755027797047454, 0.021029689160505956, 0.12022488492422326, -0.12196765787497918, 0.0051468499237997773], [-0.049533126203222685, -0.054324677750827888, -0.02969879431409269, 0.06957293280414964, 0.11371039674541632], [0.023639002040484209, 0.014604202272517441, -0.05432804255484238, 0.076868987381774168, 0.04056810228641778], [0.010906633652302105, 0.079775899578104603, -0.084176854643158161, 0.038630284277462637, -0.036443965414131363]], [[0.078056575205751502, -0.1041893124313138, -0.59564114342274355, 0.60427552285066954, -0.025499509320134756], [0.24540649756152169, 0.26914571964007439, 0.147139452989893, -0.34469154429099264, -0.56336581880850722], [-0.11711686988630778, -0.072354935052440589, 0.26916239019635602, -0.38083905479873953, -0.20099025960892447], [-0.054035732649233573, -0.39524103576585051, 0.41704508996605089, -0.1913895506098954, 0.18055767109957474]], [[0.084103524886704348, -0.11226073406241305, -0.6417847516029439, 0.65108802609562655, -0.02747492586052739], [0.26441784591009815, 0.28999611717823653, 0.15853817072722012, -0.37139438666248298, -0.60700909612786391], [-0.12618977395782821, -0.077960185478524888, 0.29001407918260858, -0.41034220164881974, -0.21656073503669165], [-0.058221816338430071, -0.42585988688536103, 0.44935307513021866, -0.20621627057483871, 0.19454525829221284]], [[0.035795890641944585, -0.047780077770769258, -0.27315450589013685, 0.27711413774624116, -0.011693795745467623], [0.11254073249280341, 0.12342727978505631, 0.067476541911534765, -0.15807176771617085, -0.25835339544839486], [-0.053708514058252221, -0.033181180902634902, 0.12343492471961853, -0.17464862020685645, -0.092171932141432017], [-0.02478019528234178, -0.18125321097153152, 0.19125231146555238, -0.087769152125674224, 0.082801770795195503]], [[-0.10665730399131777, 0.14236534384632088, 0.81389016026281624, -0.82568826476577728, 0.034842790758089208], [-0.33532595227077261, -0.36776346850916164, -0.20105285589705033, 0.47099005722162757, 0.76978882607379828], [0.16002969078580745, 0.09886652447687172, -0.36778624732804205, 0.52038238588313446, 0.27463514972180547], [0.073834978646849694, 0.5400614002139239, -0.56985468323901101, 0.26151664259357865, -0.24671585146631858]]], [[[0.011352969048210933, -0.015153855214236027, -0.086633258598579982, 0.087889089284686361, -0.0037087860861556863], [0.035693243826056535, 0.039146004247276704, 0.021400755172279916, -0.050133796201031929, -0.081938961412205524], [-0.017034108854222796, -0.010523691770621565, 0.039148428902842022, -0.055391284976097875, -0.029233106760285652], [-0.0078592482266496774, -0.057485986719308435, 0.060657285893117807, -0.027836727892527873, 0.026261280949199009]], [[-0.072859648288545048, 0.097252494606136775, 0.55598396549647966, -0.56404347677596234, 0.023801778078249569], [-0.22906758403023908, -0.25122627299049427, -0.13734305874878536, 0.32174233392738799, 0.52585749897404621], [0.10931934851201269, 0.067537617503270864, -0.25124183363819436, 0.3554831801681908, 0.18760853375809611], [0.050438088853620548, 0.36892629197723553, -0.38927865455660116, 0.17864703014169886, -0.16853632608703634]], [[-0.0070999088629524407, 0.0094769033973898867, 0.054178623929873035, -0.054963994116367064, 0.002319397075079757], [-0.022321806490618108, -0.024481090481631506, -0.013383583684260073, 0.031352625244516978, 0.051242908870901306], [0.010652774610149369, 0.0065812962367751797, -0.024482606810396667, 0.034640548517490752, 0.018281772186430324], [0.0049150090961735315, 0.035950531078766765, -0.037933795105611887, 0.017408506113288404, -0.016423254619291366]], [[-0.12527815463466968, 0.16722031116077293, 0.95598382424274719, -0.96984171024779986, 0.040925847224215106], [-0.39386910159491167, -0.43196974752543604, -0.23615382939796575, 0.55321823271293402, 0.90418302338454437], [0.18796860222563611, 0.11612721565336148, -0.43199650320261246, 0.61123376054144907, 0.3225825467870887], [0.08672551739279423, 0.63434845131397422, -0.66934321846274036, 0.30717373460935171, -0.28978893553635737]], [[-0.0075899527289641309, 0.010131010156831452, 0.05791809479327055, -0.058757672132260311, 0.0024794845256974883], [-0.023862483217625921, -0.026170803470258786, -0.014307334005049188, 0.033516619456415882, 0.054779753308414114], [0.011388041351522432, 0.0070355448635521095, -0.02617242445777726, 0.037031478970817391, 0.019543601104619824], [0.0052542486702953205, 0.038431878033365029, -0.040552029221693091, 0.018610061203911985, -0.017556806519954098]]], [[[0.0073497529518347527, -0.0098103933534513747, -0.056085156702890583, 0.056898163877755523, -0.002401016101487742], [0.023107305503704965, 0.025342574180125799, 0.013854548781998476, -0.032455916602122874, -0.053046134535576363], [-0.011027643191974324, -0.0068128904718113064, 0.025344143868136281, -0.035859541105958577, -0.01892510336197633], [-0.0050879670866471032, -0.037215621639165114, 0.039268676251124054, -0.018021107265307704, 0.017001185007700998]], [[0.059904501361906427, -0.079960064760538463, -0.45712466365993071, 0.46375111624045978, -0.01956959278279229], [0.1883371622268106, 0.20655582295573371, 0.11292214062414745, -0.26453344936014994, -0.43235497292967395], [-0.089881315867540001, -0.055528778888446602, 0.20656861677046165, -0.29227484829717754, -0.1542499302427193], [-0.041469711059512526, -0.30332764540215323, 0.32006116197123202, -0.1468818682467681, 0.13856894471447612]], [[0.020969365175386757, -0.02798974633444716, -0.16001492016518939, 0.16233448715630799, -0.0068502688123022407], [0.065926777471541312, 0.072304157153299325, 0.039528007900920224, -0.092599026360731751, -0.1513443749073928], [-0.031462646245633476, -0.019437658536218004, 0.072308635584250533, -0.10230980788067502, -0.053994658865391447], [-0.014516330077954241, -0.10617880158623114, 0.1120363116502166, -0.051415494042791998, 0.04850558368112183]], [[0.025002680682311793, -0.033373384655464751, -0.19079270735348114, 0.1935584273605056, -0.0081678716675233441], [0.078607347039268305, 0.086211372551686705, 0.047130952763160025, -0.11040982253043559, -0.18045444138266964], [-0.037514273365960436, -0.02317636063505233, 0.08621671237852907, -0.12198840716988965, -0.064380166155260751], [-0.017308447946919499, -0.12660157563602131, 0.13358573812727115, -0.06130491643038128, 0.057835304499907189]], [[0.1249117427461154, -0.16673122740793728, -0.95318777540654254, 0.96700513005002398, -0.040806147847928485], [0.39271711845962826, 0.43070632812521681, 0.23546312980336073, -0.55160018734802474, -0.90153848084507948], [-0.18741883414570829, -0.11578756831002232, 0.43073300554774274, -0.60944603212861259, -0.32163906162379274], [-0.086471863747380875, -0.6324931173595012, 0.66738553227648445, -0.3062753169359696, 0.28894136469320714]]], [[[-0.017039600921197055, 0.022744327424100055, 0.13002732120152249, -0.1319121896993555, 0.0055664940635190129], [-0.053571768565230743, -0.058753995294138037, -0.032120260876194212, 0.075245504176269046, 0.12298167963219891], [0.02556638846557286, 0.015794943792023751, -0.058757634444657071, 0.083136436512503534, 0.04387578885899561], [0.011795896981137267, 0.086280361383757234, -0.091040144669870329, 0.041779972465914264, -0.039415393907402826]], [[0.11947811056037265, -0.15947845722240292, -0.91172432560076688, 0.92494062848352443, -0.039031089767333604], [0.37563401379835132, 0.41197070154877119, 0.22522053761364402, -0.52760570559839626, -0.86232176351721412], [-0.17926615780767702, -0.11075083562143136, 0.41199621850953039, -0.58293526938649065, -0.30764783614723135], [-0.082710357489527139, -0.6049798116911097, 0.63835441455485342, -0.29295241083270335, 0.27637248154039989]], [[-0.075630222973084041, 0.10095063625097353, 0.5771259163018656, -0.58549190007257224, 0.024706868966548313], [-0.2377781510487525, -0.26077945048157991, -0.14256569172334449, 0.33397696840974878, 0.54585385509921758], [0.11347634661222582, 0.070105815644546529, -0.26079560284139508, 0.36900085041349512, 0.19474257113603086], [0.052356057103493905, 0.38295515251969947, -0.40408143786506084, 0.18544029569821791, -0.1749451201102071]], [[-0.082183234822770374, 0.10969754574800669, 0.62713122925239273, -0.63622208713596873, 0.026847605814092169], [-0.25838053697552038, -0.28337479348048472, -0.15491835485848149, 0.36291454052678834, 0.59314958741426249], [0.12330855144750276, 0.076180162943696186, -0.28339234536817526, 0.40097308122609671, 0.21161612149891904], [0.056892469256134948, 0.41613645959125384, -0.43909324064012889, 0.20150784657073395, -0.19010331216703846]], [[-0.036778212506287614, 0.049091273392180598, 0.28065049603503023, -0.2847187893290048, 0.012014700492686683], [-0.11562910996223617, -0.12681440924083728, -0.069328253972926801, 0.16240962188820804, 0.26544320895840823], [0.055182399655583178, 0.03409174909638131, -0.12682226397005014, 0.17944138147441674, 0.094701342713358824], [0.025460221039265141, 0.18622721745458526, -0.19650071634638003, 0.090177740251342259, -0.085074042511299436]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5, 4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank3_constData_rank3_offset1(self):
      arg0=Data(numarray.array([[[-0.78439176557707979, 0.38961871628338307, -0.32705017407394799], [-0.48987088678233293, -0.42982896831833495, -0.8645874264823612], [-0.62212417327847724, -0.38667342583834818, 0.65875500275752041], [-0.87199843530760046, 0.93432026760015541, -0.095961251984686635], [-0.82907535155555978, 0.59198271307199168, 0.12987190535163151]], [[-0.81959192198332964, -0.64358332937827845, 0.52389208961135947], [0.42778467163326162, -0.20375515630251417, 0.049555510254598589], [-0.36657489768359697, 0.053175266792422793, -0.45662607210554018], [-0.65394518572004157, 0.57259354476530921, 0.81276478398126817], [0.97301300145319702, 0.5438415889538244, 0.53204734426981948]], [[-0.4664511008983443, -0.39192050650182897, -0.35078636967902144], [-0.85475147025417297, 0.11883211263161586, -0.35627475190096569], [0.89646437819785674, 0.30337479617345031, 0.28264041761472858], [0.69173273727895301, 0.65499994463575462, -0.32443183636988593], [0.28533643468830472, -0.86472406446254735, -0.36006359247257813]], [[0.15391879215197113, -0.27187496244609166, -0.17966305723726506], [-0.032037293363639474, -0.77039930138255852, 0.077486381851662012], [-0.89925105432488373, -0.38028861900614097, 0.69094001735260857], [-0.21842528618534107, -0.2083853669991047, -0.68079529786466386], [0.38212263246602585, -0.28486254716585124, -0.8015128238260063]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[-0.16307867911827367, -0.70133421871251156, -0.091496188265238088], [0.6100096580605836, 0.91761692721120847, -0.060280451568121673], [-0.78267101096399982, -0.14020019916559878, -0.94759329669025938], [-0.4855953102858086, -0.49172137163079022, -0.94582138095607693], [-0.1492939775392208, 0.79869549624821801, -0.82521018654948786]], [[0.050879413238104299, 0.693226676855204, 0.35527112789536175], [0.55510943572518467, 0.97516017482129014, 0.76979964605716167], [0.15520133379331247, 0.0021382579465272222, 0.39041919936056813], [0.8602668883133866, -0.82809629443694166, -0.96598442537768969], [-0.60651968198285311, 0.96692564440932482, -0.49675439446633796]], [[-0.72876091173987612, -0.2179663780150336, -0.31520738449194807], [0.93041747024739219, 0.76100135225052523, -0.37074208066417924], [-0.27644483128154795, -0.62538113325397426, 0.039918842959708378], [-0.81606444135048317, -0.80340516775228665, -0.60082570433868909], [-0.11967130220277, 0.27146416891849157, -0.28865481356975109]], [[0.30519022069270241, -0.30371051629325452, -0.54286905168623023], [0.84614753105170615, 0.84040310454252509, 0.55210208765498203], [-0.47323315475788363, 0.082651875232516048, -0.47819784387481445], [-0.87750058123180574, 0.26706439671643234, -0.17016565699716879], [0.73941276930397137, 0.32889969981803868, 0.81665032310195573]]]))
      arg1=Data(numarray.array([[[0.60815972703894206, -0.19959440954789431, 0.91363865978077174, -0.23421486563462857, -0.67291493665203994], [0.48420419382919455, 0.98053255379747517, 0.59028844720765838, -0.47654891546866041, -0.043668924807093612], [0.20033940889596047, 0.55388764416438852, 0.5792628073831152, 0.71625825542884347, 0.50166618601970003], [0.38538315791189137, -0.55333230581013604, 0.24598255177523831, 0.46069364204276098, 0.57906765878395694]], [[0.99560544965796116, -0.38036703710111519, 0.084421459870261062, -0.70612705697172773, -0.18205864179972764], [-0.52688289039249803, 0.31284892513980811, -0.86588265934654429, 0.52293417576707268, 0.9264995315412492], [-0.74466575085932285, -0.31182232133416643, 0.98138287402032698, -0.041336430650802614, 0.14709433326069798], [-0.72750472047529091, 0.14366306790533123, 0.448323048184738, -0.23128084437162966, 0.52563611178380243]], [[-0.63445996308833497, -0.58264641565872699, 0.93479719710864639, -0.2682009976784876, 0.75502193406704476], [0.13010116850140707, -0.30930141489412444, -0.39216217340624548, -0.012223812879563756, -0.49979553205683613], [0.60479394374230688, 0.54768264122764299, -0.12786577566565227, -0.60795880840702643, -0.6373421410946547], [0.11265160527009255, 0.13692092481006668, 0.62790930783053045, -0.86695667408980914, -0.83649443477198182]]]),self.functionspace)
      res=generalTensorProduct(arg0,arg1,offset=1)
      ref=Data(numarray.array([[[[0.11837127654651511, 0.19891670625748567, -0.98948404666171763, -0.0036889225131871567, 0.20996542597110043], [-0.62763882768952117, -0.54607278289295436, -0.67212478041388013, 0.58154378758148961, 0.55869331890711593], [-0.64507826114837286, -0.73507642283493668, -0.030185316468528837, -0.37909949051158431, -0.1277492618950494], [-0.62258355805315668, 0.44522311210635868, -0.22362948600277088, -0.16793731378142462, 0.024157414347325407]], [[-0.17731370137582414, 0.76501702660504822, -1.2920656723964798, 0.65013211868870568, -0.2448869559877348], [-0.12321184306982194, -0.34738776806939431, 0.4220748093297147, 0.01924373746677599, 0.055272729958688593], [-0.30095877183173064, -0.61082269005496337, -0.59503963148029271, 0.19252707015641651, 0.24206093663268508], [0.026517452641762779, 0.090930729056208526, -0.85608441656721335, 0.6232906434885962, 0.21362055547196601]], [[-1.1812787121417316, -0.11257090881106419, 0.014762099165351761, 0.24207254888361951, 0.98640836363789108], [-0.01179872592538006, -0.93473722447902663, -0.29075769157497933, 0.086215352943703916, -0.66032806125340393], [0.56171750393245701, 0.1367751923603768, -0.82408029251193349, -0.83011378226950805, -0.78882845491688758], [0.11576037260870529, 0.37888805686782046, 0.087252097223390002, -0.76829054099722238, -1.1145463982659316]], [[0.46078359214565917, -0.12542713955768237, -0.8075191101745095, -0.42977692094958914, 0.34422684286147631], [-0.92698733354796359, -0.53304081021064231, -1.2861099471951298, 0.90531092006411329, 0.95168752933691603], [-0.92848873873754822, -0.82688738570268439, 0.42407980772178627, -0.6048570545475398, -0.23885876263926442], [-1.0265861048877241, 0.60359311755347855, 0.14412594677804746, -0.53462026755940029, 0.066437433464243675]], [[0.0027724514654280802, -0.13536130546972575, -0.58609535509113386, -0.25866501347980997, 0.54817775612053354], [-0.69645083850762834, -0.6679037803456479, -1.0529120164369394, 0.703075421884927, 0.5197671374937588], [-0.52837997556740435, -0.57267942894342938, 0.084103008735762499, -0.69725928611274268, -0.41161460528148708], [-0.73555161671169, 0.56158241006102161, 0.14300920200349221, -0.63145732009006861, -0.27756035729824929]]], [[[-1.4715864254318261, 0.10314000165775428, -0.31341025242618276, 0.50590383306286812, 1.0642355718342862], [0.010402171965477935, -1.1670214777366217, -0.13197865871064346, 0.047619964789679274, -0.8223278808308182], [0.63190466499742626, 0.033648412251814863, -1.1733486434966682, -0.87894085307448377, -0.83972752042198717], [0.21137027193191232, 0.43277932187345181, -0.16118183300582462, -0.68292403527663814, -1.2511226316653692]], [[0.025860677914278853, -0.036755024277399927, 0.41996365840190669, 0.03039266218482076, -0.21335181100057668], [0.32093746753552077, 0.34038462547349352, 0.40951060954672891, -0.31101661332479769, -0.23222757613661862], [0.2674024871902716, 0.32762074254626172, 0.041501475199913478, 0.28469910452709501, 0.1530500607824965], [0.31867635347174667, -0.25919398330751964, 0.04499579852493496, 0.20123986262636248, 0.099162291611324532]], [[0.11971645654422014, 0.31899172578995855, -0.75728063690829772, 0.17077636386688633, -0.10776999290314376], [-0.26492182662502806, -0.20156770534392338, -0.083356995689776114, 0.20807974590179137, 0.29349446207488539], [-0.38920188125542199, -0.46970871484071253, -0.1017710612978981, 0.012849470257902285, 0.11495058807868644], [-0.23139670931541978, 0.14795539126638457, -0.35305109192570605, 0.21469787547656552, 0.19764434079730048]], [[-0.34329258688287317, -0.56082639502545106, 0.21063982188433239, -0.46914443674202189, 0.94945911930256544], [-0.51259109523333124, -0.71346856563734062, -1.2005507136578095, 0.60113051777774484, 0.1528485264847943], [-0.065846574868477226, -0.095622443053119399, 0.079202574914910853, -0.98619012080866253, -0.76184616911844083], [-0.57702470988202037, 0.55539404866745046, 0.60619035079424832, -1.1383301617584833, -0.75757588174398549]], [[0.79563623267551398, -0.71106284744975912, 1.4322505616271355, -0.75461099860825465, -0.3520586283877945], [0.25381612883790433, 0.95964818337026248, -0.10519351044979033, -0.18579858469142693, 0.19546366029282169], [0.11173165597095594, 0.66075102717843681, 1.0293164180554246, 0.35098525536523517, 0.22902754375255591], [0.039271487446355474, -0.38742116213355865, 0.81723841957088528, -0.13878123454969599, 0.40424849644495015]]], [[[-0.45131505914683745, 0.44655909485945833, -0.78716837514987203, 0.48007671006496394, 0.12038302484005586], [-0.064999086591054855, -0.47148367791754897, 0.20158161950927359, 0.021626086162178926, -0.1674232873520253], [-0.013752231510715834, -0.32827154473106968, -0.60996827601964043, -0.10463519361918669, -0.068081094429395667], [0.065844972604255425, 0.15376796672147564, -0.51070785477988923, 0.17986923353554884, -0.1826834720699948]], [[-0.17547345596511443, 0.33298600360622232, -1.1039466467784396, 0.21183817469778121, 0.28454536619189691], [-0.52283661508339785, -0.69073885842755534, -0.46772710279077678, 0.47382729491949349, 0.32548850355329167], [-0.47520342094069301, -0.70561628053880898, -0.33295058855205034, -0.40053451866115797, -0.18425146650510593], [-0.455992666438785, 0.44125191927991791, -0.38068700569314939, -0.11238738525047126, -0.13447463586856517]], [[0.66791110297699152, -0.45900247684227879, 1.1088673263945639, -0.49999087785573271, -0.44507655886043918], [0.3110006706591828, 0.88650190396568063, 0.15564471002976804, -0.27201902177813286, 0.1006665531098439], [0.12462353607033125, 0.55673875977713805, 0.78087526557510956, 0.45772584885815992, 0.31421192996181602], [0.15661557349450431, -0.41375956015292542, 0.53399705767701233, 0.097793663914883283, 0.44215114056371529]], [[1.2786445180204069, -0.19817732891814516, 0.38401185126373749, -0.5375143311460866, -0.82967884395440539], [-0.052377332647974596, 0.98352972210128409, -0.031601356488956317, 0.016843164491082425, 0.73879949924839483], [-0.545389107678251, 0.0012129279913580815, 1.0849845039128725, 0.66562511648746525, 0.65013978542894368], [-0.24648117207775769, -0.33308027607231849, 0.26009198578908055, 0.44845627962660667, 1.0162371063835489]], [[-0.45894792920538485, 0.48175073466889162, -0.14889330715586352, 0.64034443874922964, -0.30643257014098213], [0.54692471868882608, 0.12062184749038565, 1.0583836944902187, -0.58376918443095283, -0.63366860117399482], [0.48333024732155072, 0.23048401136270266, -0.63730079287008934, 0.45902301587324934, 0.24543133216264798], [0.69849295338122974, -0.33141501940176027, -0.5435752252238979, 0.64360632767227166, 0.01189009745805697]]], [[[-0.063083966952483375, 0.17737097981528027, -0.050274444584435085, 0.20411400907084118, -0.18972661682389277], [0.1944000170249538, 0.12143663438019972, 0.39672535531500563, -0.2133263752756801, -0.16881870022212506], [0.12463284395614982, 0.071632061361524543, -0.15468124419643953, 0.2307116842680591, 0.15173142465956313], [0.23686869693457438, -0.14882626331174378, -0.19683858054180667, 0.28954896637257782, 0.096509243975857736]], [[-0.83565954142571286, 0.2542818016558468, -0.021874690908479877, 0.53072147681969106, 0.22032014157696331], [0.40047868768504064, -0.2963988499863463, 0.61777692377115656, -0.38854796530549229, -0.7511029051204372], [0.61413493627683158, 0.2649205838364318, -0.78452254934783339, -0.038209946936583847, -0.17877873486852247], [0.55685146042140965, -0.082341150676608327, -0.30461395789401197, 0.096241887668814419, -0.48831838095107533]], [[-1.3638794751689058, -0.078438986067738747, -0.20780625687695864, 0.29383924620918855, 1.1960291639493454], [-0.14516146142214967, -1.2144265434753563, -0.47249272666137104, 0.22122527765587729, -0.65839663427775186], [0.5209088233270085, -0.0010857144033429855, -0.98245900940515674, -1.0484392868668744, -0.94742733758418785], [0.0079410564987924953, 0.53755537586008262, 0.042155446156085186, -0.92534082985863475, -1.2985881130136487]], [[0.091630290115763957, 0.51952233074533272, -0.85355951887890491, 0.38089497307228215, -0.32909538799412108], [-0.084540018891750668, -0.068795292874983816, 0.31848551638821587, 0.0034404174393448221, 0.15672790061173567], [-0.30032262001460697, -0.42886362519127691, -0.24398105601754899, 0.26606049090584999, 0.29367064591735736], [-0.0092687715528759901, -0.0022906356674707168, -0.57463047645472176, 0.53778843020001765, 0.33346358473011362]], [[0.45730868811364589, 0.49908135575133533, -0.42417844345512901, 0.32661689005494843, -0.81043410100721058], [0.23083682846378878, 0.5334737894474707, 0.78654312625405454, -0.32126694460777755, 0.11998062722744024], [-0.19606849679079336, -0.13849515493393288, 0.044276262533001987, 0.77276047231213463, 0.6606342364268234], [0.26421076831056955, -0.36210890186722333, -0.53699230765988004, 0.93680160968063764, 0.74200183299420619]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[-0.73937938693073912, 0.35262393759694294, -0.29373302476558688, 0.55796588770710653, 0.16834040531086195], [0.2786538589264867, -0.35101570970587892, 0.54689102216860153, -0.28791823164524849, -0.5969349684197367], [0.43425214586447808, 0.078253524668391194, -0.7710435736162814, -0.032189883316531186, -0.12665897173785781], [0.43706898591332821, -0.023046866656114686, -0.41199011260186069, 0.16639909073835246, -0.38654412841285318]], [[1.3228132536439736, -0.43566356027581654, 0.57844496987430816, -0.77466019308649592, -0.62305776500088039], [-0.19594998135968156, 0.90385462618786561, -0.41082721845592451, 0.18989066748719208, 0.85366108767017246], [-0.59756617582072624, 0.018728815152953104, 1.2615972510324582, 0.43564147650714297, 0.47941674075987678], [-0.43927388738959983, -0.21396404291276577, 0.52358989355067365, 0.1210608931222116, 0.88599372051732017]], [[-0.014363062680705085, 0.76165613048003433, -1.612721956739068, 0.53645780725848113, -0.16325805197367838], [-0.42838649489083291, -0.518203939366642, 0.031005512293277526, 0.31124874899528299, 0.37788587857036132], [-0.62549624808333015, -0.90877465040421146, -0.46979752956687248, 0.021298494432529735, 0.19067890480173888], [-0.30637982512218653, 0.28319021392774169, -0.85038104415309013, 0.49337639477018058, 0.26574276163092136]], [[-0.18479419021415955, 0.83503614790966818, -1.3693216604110026, 0.7146216433492123, -0.29782942580891703], [-0.099100175047583214, -0.33743262092275689, 0.51004707565509966, -0.014166448129134337, 0.038343104952474616], [-0.30314285607051145, -0.63364549493154942, -0.64291605107936745, 0.2475347963201372, 0.28687564946144772], [0.0640410680113572, 0.068550633742297667, -0.9337880463887348, 0.71000122068860205, 0.25151527214942981]], [[1.227953828551491, 0.20680656120018637, -0.84037787917916162, -0.30769143596589649, -0.66799906088059524], [-0.60046857117401642, 0.35872210073694655, -0.4560868702043761, 0.49889826900844403, 1.1589468748426139], [-1.1237527717731626, -0.78369646772377299, 0.8028617736107545, 0.3617455368099185, 0.56852906833971228], [-0.73155138046425794, 0.084363684243490153, -0.19680727116134145, 0.46191972374027557, 1.0236556096687623]]], [[[0.49571776070126417, -0.48083327281353466, 0.4371150615726313, -0.596706899025085, 0.10779206971812744], [-0.29439206105519794, 0.15687827920140029, -0.70954332631412742, 0.3339226238938181, 0.46248941969642504], [-0.29116318572538524, 0.0065937564248156888, 0.66436632189007894, -0.20820292826662812, -0.098935064305317177], [-0.44469574796162636, 0.12008189949527767, 0.54638299276078561, -0.44489490441464752, 0.096665276391431354]], [[0.82006293222601601, -0.93023653100437453, 1.3091004379228333, -1.0250628993085591, 0.030137849869093292], [-0.14485706122919656, 0.61128056547020237, -0.8185859009036961, 0.23599789587163192, 0.49450198926291344], [-0.14938792373530818, 0.42499745159053037, 1.1801287162890661, -0.11071440046437708, -0.068705585450454187], [-0.40878463721085034, -0.061663802176245702, 1.0570983804823761, -0.63718342181494592, 0.19009220415748496]], [[-0.15118928875512574, -0.25926698853098529, 0.50694122672019615, -0.1425711601128842, 0.1899484749627221], [0.12481651922552932, 0.032091701113318799, -0.063345567908462602, -0.077615270379220683, -0.1999261518592281], [0.26562382330672718, 0.29912316288122903, 0.042079556290675842, -0.12628294259076886, -0.17065682162868007], [0.10223773691594423, -0.032114165356036346, 0.28428329968003607, -0.26747080096666609, -0.23558746890040386]], [[0.31160093526336208, 0.70610343535134334, -0.18693554449077343, 0.64233189225188803, -1.1574637811359794], [0.72717890177418831, 0.88323100285348433, 1.603662379041449, -0.83119109296610294, -0.32200305908640098], [0.20477877856036009, 0.20565720746445926, -0.19084256074510184, 1.2376825458660916, 0.92542111844766173], [0.8251566370915161, -0.72724379597723854, -0.76619462243136305, 1.4253089407522779, 0.87091601245943195]], [[0.90898637152660267, 0.04270346274201603, -0.93687517048898128, -0.40748640957983157, -0.14296147982905924], [-0.86776427915534016, -0.13856380709619354, -1.0004574266670359, 0.80074699431161878, 1.1706178458508663], [-1.1419802548920333, -0.90951651559282931, 0.66110786011963785, -0.17238777441419517, 0.15456137673819559], [-0.99314562099627013, 0.40650236756918989, -0.027614914797600199, -0.072386603080835055, 0.57256739027878156]]], [[[-0.46022508542441626, 0.41201828203694146, -0.97888016206831652, 0.40913753104583439, 0.29208827642601937], [-0.2790351835489655, -0.6852702549662617, -0.11783342695671697, 0.23716118997965063, -0.012582299225156912], [-0.17432295090137895, -0.50831849547025099, -0.59574832542810952, -0.32133796132169179, -0.19676137683920933], [-0.15778923047422921, 0.32877475051987004, -0.47490347031672164, -0.012052924948216803, -0.2729036514873458]], [[1.5587205350491056, -0.25915441075970547, 0.56774155781857316, -0.65584785207874119, -1.0445570884330708], [0.0013194711323282204, 1.2650541233912014, 0.035667829240627807, -0.040903939662114114, 0.84973230127634114], [-0.6045149224388775, 0.075000530535130061, 1.3331951537747992, 0.86035802802438033, 0.81498752170928279], [-0.23682954371799741, -0.45626460378415479, 0.33724850620788294, 0.57404969886978241, 1.2489081452584023]], [[-0.81608238514518661, 0.26979264081924204, -0.26805025088945822, 0.49563975461630344, 0.33001949787415741], [0.20084036053114251, -0.47905992635020345, 0.36266982835639688, -0.19578164339101459, -0.58729453780013985], [0.43445979153976805, 0.063751277696812048, -0.77897679678429388, -0.19642388092974078, -0.2561150058256485], [0.3529274662106861, 0.068587408604325342, -0.3233079679091318, -0.017325606919789273, -0.52219505847803183]], [[-0.91497223699819419, 0.8185396866426109, -1.3750628439857944, 0.91958260347541754, 0.24177222018421496], [-0.050009514195332588, -0.8656859534670539, 0.44956230533174318, -0.02388901374436957, -0.40842785225985678], [0.07140269745860367, -0.53055015519523563, -1.1843388071086081, -0.18602571180786021, -0.14463674249939179], [0.20229958044549151, 0.25386955676411954, -0.93818671956859934, 0.33074638028407133, -0.39226793608671795]], [[0.38063186184282261, 0.088813393781399755, -0.35625263737311447, -0.086241887721842506, -0.186834506768944], [-0.23852950090433478, 0.056867008148093631, -0.19249720459934633, 0.20251558312899914, 0.40100572855953731], [-0.40070163020325344, -0.30902427366134533, 0.23399822344631951, 0.078553318565487279, 0.163867672096984], [-0.27612819680000789, 0.0656944888955142, -0.088982452798161527, 0.13233494686853986, 0.3148517345699926]]], [[[0.22765723466607621, 0.37090791445699794, -0.25427856886486555, 0.28857614777999724, -0.559951975276888], [0.23716636147462244, 0.37214360370261224, 0.65602063817943246, -0.29762274748643486, -0.023391453344431656], [-0.041019466631168733, -0.033575145502608816, -0.051856582947007235, 0.56119134552618732, 0.45442284186272663], [0.27741093515180443, -0.28683372566004089, -0.40196148565443063, 0.68148556645578551, 0.47119151223351979]], [[1.001016092156515, -0.81022825814596855, 1.3601246372695788, -0.93968603190230648, -0.30553877400950785], [0.038743293053239897, 0.92182845057415896, -0.44473291750817112, 0.029496023926948119, 0.46574457310604434], [-0.122394713717773, 0.5089909452690291, 1.2443040466842212, 0.23566556244712233, 0.19622421239674359], [-0.2231110316334167, -0.27187154770536159, 0.93157965011006882, -0.283202941516837, 0.46989256624532094]], [[0.097884697556347045, 0.34163690291873611, -0.87240451742625025, 0.18072865315926501, -0.057651690740539274], [-0.33490343537462253, -0.29025569373930155, -0.16337978384339472, 0.27458563787693746, 0.33624365254312238], [-0.44556643111023464, -0.54979135498967313, -0.13186809268426816, -0.051649096001735895, 0.07952818831663705], [-0.29637547174618512, 0.20825392364649714, -0.37961723550305104, 0.17744551118915711, 0.1694206304655094]], [[-0.15980644872062622, 0.17270812721228293, -0.93824286794840817, 0.062580883229467504, 0.41338306323467977], [-0.58773987359702007, -0.72423459794253153, -0.68249235167763389, 0.55990912363243561, 0.37080258042581465], [-0.47758681604329423, -0.66251014629163973, -0.22445266124297572, -0.53610281430525908, -0.29247496627260167], [-0.5516339887692947, 0.50061747139633384, -0.20296730765974499, -0.31849956580192385, -0.22541089100210113]], [[0.25900346762737469, -0.74850364302652894, 1.4667247174347775, -0.62445287089285839, 0.059147976951814063], [0.29098230067110453, 0.57532310815378662, -0.16858109691934325, -0.19035604059873629, -0.13572212555779878], [0.39711834477733809, 0.75425853488735894, 0.64666922222275469, 0.0195252032325961, -0.10116799952607625], [0.13767811369598709, -0.25007371518986315, 0.84211829489658308, -0.44342588663476074, -0.082071869854500434]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5, 4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank4_constData_rank4_offset2(self):
      arg0=Data(numarray.array([[[[0.15842263690570424, 0.97039484638450801, -0.2441038814833516], [0.688888599805068, 0.41613775440284506, 0.64934373579748095]], [[-0.15114058666254215, -0.4297524453821564, -0.76702041767155249], [-0.20799692251234614, -0.30527146083087864, 0.97703716423245557]], [[0.19767919546987067, 0.68743217801894252, 0.11002198868308022], [-0.38086792518654944, -0.18583940028563162, 0.57025493530201898]], [[0.54141407699119859, -0.30634261092963078, -0.53682614723389777], [-0.081675933233397835, -0.11237321376281106, -0.86781879000304141]], [[0.27834083990653213, 0.67781410713095447, -0.50160698745984078], [-0.78040940386207569, 0.94031616762392201, 0.024163050493396954]]], [[[-0.67077476435489358, -0.75842740182574242, -0.62009268340370038], [-0.28806181824187127, -0.35510288245902988, 0.26557729821383136]], [[-0.74332722873487778, -0.1197133595602482, 0.54008293183146572], [-0.30883356127039341, -0.52093489553494265, 0.5427053197732572]], [[0.99297465419699948, 0.44084608215253773, -0.95030154610051354], [0.51071296392766219, -0.61578013297989154, -0.64784242218409593]], [[-0.66478566215132395, -0.40578506430166339, 0.68151291986150908], [0.90056321249982862, -0.63331470593501749, 0.22844225379066518]], [[0.68924840659612396, 0.73892635673865192, -0.0078815451857470187], [0.47964874501707855, -0.30821645018852117, 0.14100086243889076]]], [[[0.030296571302762532, 0.96376432073777218, -0.67689172218011073], [0.80309806240537429, -0.40931543098558665, 0.032178996846803587]], [[-0.0054189042829857481, -0.20493985412356319, -0.1506420381915341], [0.43201337670904505, 0.39295574531870958, 0.29224083462424044]], [[-0.046621056845841835, 0.66353553011450428, -0.56723936366469374], [0.91154418225063494, -0.1573256400330949, -0.14433499904439739]], [[0.34344265152812725, 0.65571029484148458, 0.49367524661942697], [-0.095839500761403018, -0.68565459014978303, -0.060883040646811271]], [[0.40314994473532373, 0.83963846526521491, -0.73309939114567602], [0.56044165647502053, 0.61060700310107485, -0.10605286361509147]]], [[[-0.3421909378811212, 0.81775282314468045, 0.9664696445817651], [-0.21159434325959725, -0.53140631464245169, 0.054405267150113623]], [[-0.45801689193604611, -0.020558202171046647, 0.13011302559846794], [-0.75119410569391221, -0.33183142077531325, 0.13642277242663359]], [[0.098471530628763349, 0.10368147050017895, 0.95930906911291003], [0.75946882020980233, 0.67242505546331754, -0.21425743868347835]], [[0.35662364744325425, 0.52985961485945565, -0.23595256380978058], [-0.67417178797283617, -0.59747398645285399, -0.65913413922460329]], [[-0.061687970932480463, -0.26301178315513019, 0.70999588621077381], [-0.27424036608042246, 0.81688843598570604, -0.92354449853102616]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[-0.26801675608139774, 0.55178893203226531, -0.98609953734102684], [0.98514360137889212, 0.087213990377315032, 0.64926759005589907]], [[-0.18807783216204621, 0.78445068683248209, 0.10492841715761858], [0.87505593750077648, 0.81483739340305705, 0.65364728781340187]], [[-0.9675810039446735, 0.76221858140465115, -0.67112687655840353], [-0.062494844403065075, -0.026411077620250856, 0.090322034366472348]], [[0.46980378559542846, 0.32711711907163488, -0.21730963828469507], [-0.3681378411702243, 0.084350675848056333, 0.10022032950734494]], [[0.021084661120942316, 0.15201494223697165, 0.54851796884455739], [0.76506032620968112, 0.97016215111368242, -0.63919324642765529]]], [[[-0.75190274177309391, -0.89286506463130744, -0.15766753415891377], [0.54441250149476428, -0.99487371342421116, -0.20672844927358569]], [[-0.98294821590775494, -0.55625480301625219, -0.74936008774950857], [-0.96328081506468699, -0.0067119482289423882, 0.15909262781004108]], [[-0.46480627023987275, 0.98176506049375156, -0.012378174089108018], [0.022523775954413239, 0.68824217210787553, 0.20207068506355097]], [[-0.72731455011265611, -0.064908814447689034, -0.65516889415985125], [0.85226225021652646, 0.98801826609598153, 0.98283876161463612]], [[0.49035788308330397, -0.14973678500305176, 0.75422145336053159], [0.88493862056425487, -0.8275268494379413, 0.33214298171202339]]], [[[0.48349929799536717, -0.68448970648854157, 0.0070250149422621533], [0.2977992212906726, 0.0096175964330527108, -0.021968143128306084]], [[-0.20739572918593741, 0.15560853659693707, -0.40415358121843359], [0.58033272840281791, 0.37228213110252062, 0.92156083415716572]], [[0.55645734400319369, -0.61309469754846857, 0.42372320980184486], [-0.89805456741779532, -0.65194674196829117, 0.075474625608487944]], [[-0.32512976047664899, -0.29317043985026325, 0.077411639359332707], [0.76727968138336777, -0.88005669646723672, -0.40393068844329361]], [[-0.97611003727438961, 0.94191911528590366, -0.26580659651969718], [0.089429058623662128, 0.22873447296598437, 0.014314363333473468]]], [[[-0.10377709106778976, 0.62395587573599287, -0.61668555472458264], [0.24848290395698158, -0.06897716927066444, 0.37321390987831093]], [[-0.10407064172694014, 0.070702595434118276, -0.62801089531428755], [0.99046402234032449, -0.37367923527539126, -0.46614312756259224]], [[0.43684415951165101, -0.87791995704954262, -0.51306138049780126], [-0.024160269038971505, -0.70850617090708656, -0.098201446504292189]], [[0.27770528241053283, -0.24268455737428418, -0.14805522635129154], [-0.31553970708322954, -0.64096607024188912, -0.88253701007939345]], [[-0.74162893636875649, 0.82922069919215868, 0.85060514369527285], [-0.75168286816314134, 0.30487408156967732, -0.08010167492754805]]]]))
      arg1=Data(numarray.array([[[[0.85080930712953262, 0.94066276036873098, -0.14326748917111298, 0.1789681969811554, -0.69605497057929444], [-0.99418211030348713, -0.39360792263897371, -0.27772876482116171, 0.64158991250502595, 0.54210500032427311], [0.46676380225019698, 0.31477703055939932, -0.1077096668005626, -0.99795211047591681, -0.47354468807730909], [0.36120274786911888, -0.16665810160541983, -0.33252364738242846, 0.33729400623738282, -0.96897845119148673]], [[-0.23263495695983427, -0.81112996297288076, -0.63829894349107863, 0.95477747769223331, -0.63702711583003113], [-0.034908971146058621, 0.33116355891040428, -0.77366910454821691, -0.54404975098095743, -0.11687070300399016], [-0.38204058746042957, -0.51327939556858104, 0.25415021183343223, -0.30214595375355469, 0.59928665284057514], [-0.37591104907608819, 0.028072767179550429, 0.66464337497382364, 0.71250051160568484, -0.53451180166570644]], [[0.2961588493271019, -0.098696355117674051, -0.16462178479763701, -0.54666989043224379, 0.55849104710060993], [0.026121239229864868, 0.91350740774011507, -0.9645254445952729, -0.86858456753471214, 0.50163123731511239], [-0.10066238003190708, 0.40578466862504414, -0.7555740001315725, 0.71670114547441699, 0.54331255767873943], [0.30269207960034983, -0.81865081750299318, 0.21514061619295943, -0.79725075474290485, 0.69626889771861888]]], [[[-0.19340545465590386, -0.35120799630691479, -0.15621575574525171, 0.25734152070537841, 0.19932971341088646], [0.75226688959341304, 0.9176390214299639, 0.29528945725942424, 0.4737921389243267, 0.26100579831952064], [-0.81004254659667008, -0.12071705198543192, -0.10896980154899638, -0.24070861350396688, -0.29229246513315887], [-0.4984870711936833, -0.36661476667788273, 0.65131789720267319, 0.63149727121897326, 0.30387130668312268]], [[0.2205555998981612, -0.44230911289788444, -0.34714938481216162, 0.57977435744823569, -0.63447463936561466], [0.10627602304064654, 0.92864683970496786, -0.87990275554097064, 0.021519145942211049, 0.67933517057186021], [0.32389022234831932, 0.37591736262682063, -0.73043915180483565, 0.38138307159558127, 0.40963387133566997], [-0.78412112209546314, 0.70477929083574353, 0.26692460989065103, 0.86342440182135172, -0.088265048261991774]], [[-0.29470980138416425, 0.96547314834477738, 0.56777469279050785, -0.24154010534232562, 0.35443583157321212], [-0.35427232709649403, -0.065356568762704681, -0.098665684064755732, -0.91208436816735872, -0.57964191883012317], [-0.99690942319966136, 0.56780521699301456, -0.74759905874843069, -0.2804532807810407, -0.24687549942622478], [0.16056027132200712, -0.57761976904980705, 0.50226927473409666, 0.89757388307788744, 0.67142186712177021]]]]),self.functionspace)
      res=generalTensorProduct(arg0,arg1,offset=2)
      ref=Data(numarray.array([[[[-0.39607509823661979, -0.41308266235894464, -0.48531028056098946, 1.3500110843205395, -0.76133072395585821], [0.13465630040357296, 1.0121694944606345, -0.78612579023355211, -0.47118718318277947, -0.063865074043168935], [-1.342795202150185, -0.10529591863707904, -0.45047917554056083, -0.81547271849520131, 0.18269989028911426], [-0.94689342149543243, -0.13367014574309419, 1.4256788624477679, 2.3166225751507352, -0.2335709160010711]], [[-0.57082027991635453, 1.4334925616096905, 1.1154365063845431, -0.48456881539585961, 0.44911609403971581], [-0.38982150528839299, -1.3217183167466695, 1.2250628484597812, -0.19319827964502001, -1.2444717379013936], [-0.73355961780124102, 0.32688109624393957, 0.0018138583084205129, -0.60941737674620966, -0.90816504245820928], [0.37471222136038485, -0.062203886744269354, -0.12661237776904671, 0.736364679674816, 0.46185188533772226]], [[-0.094535175146891331, 0.38402200019880894, -0.037432326133054639, 0.2880798546194081, -0.26995135431156425], [-0.72594290387603577, -0.30899805704076522, -0.69807551974336501, -1.047303675459152, -0.47418697775381541], [-0.50159743473615004, 0.053936056721957004, -0.17878525744246088, -0.46525401465987792, 0.27255206393830095], [0.27343032470294193, -0.42445078618130305, 0.40358476141458466, 0.57962728095338556, -0.19883268093893125]], [[0.61968705443689398, 0.051287712862566726, -0.23461177925448717, 0.2213168921841473, -0.73408656719167831], [-0.30753314473281129, -0.92753543643271485, 0.76480742195762164, 1.7307187004848119, 0.46538417036011509], [1.3186871270000029, -0.41530715526917034, 1.0092018258982476, -0.61230356906809025, -0.53955060274618183], [0.13771618853790879, 0.79265681560191859, -1.0182055661431488, -0.53520387789039159, -1.3322230404095694]], [[0.28178271749118738, -0.35695929794828279, -0.58074854992340819, 1.3096923520478529, -1.6492707957889865], [-0.80918926511388434, -0.18780322496118296, -1.1781119085735017, -0.12605161329039055, 0.24114416383639745], [0.83409554304909239, -0.0024273348601458761, -0.098579162050445812, -0.30237659390955546, 0.60919662132461871], [-0.6505109425233907, 1.3181492496355913, 0.0048689802813039699, 1.3174857830720506, -1.2851767365381763]]], [[[-0.67878605726185015, 0.5600538417844535, 1.0013460006045729, -0.84934813304709289, 0.86573332131683434], [0.32862562412384544, -1.1650596713031689, 1.5723514877731728, 0.13451101397269741, -1.0564096870409476], [-0.10735185787993456, -0.021402624264568126, 0.44024610004912823, 0.31356243416641344, -0.60060613195639001], [0.31979833410709479, 0.30007413610542993, -0.5634565979443239, -0.52239835873387763, 0.74572729746401345]], [[-0.65973546263180582, 0.20742511470810332, 0.6312193633411356, -1.0551641232904982, 1.3566032366454013], [0.27733571052750394, -0.056327085764831739, 0.09176851457145152, -1.533414954262259, -0.86711945297118498], [-0.81517435672026861, 0.19622535346279765, -0.34999547988426205, 0.88851360013506753, 0.3165863792789152], [0.58955106844868754, -0.88901701783068177, 0.21618600259505036, -0.92429450441673544, 1.4768181229369075]], [[0.41717273772844277, 0.137786336394911, -0.50105448690005427, 1.0490160827149499, -1.2398521785940537], [-0.47914774262802534, -1.1738094075058276, 1.056298008921682, 2.0422652490527788, 0.10056816118862727], [0.42341896565974746, -0.96031190956482182, 1.6015753092849638, -1.9813148136501031, -0.96392099291707822], [0.0295421533482641, 0.37783622694568619, -0.39875230765017566, 0.61600389476378858, -2.0849065759871159]], [[-0.65054906918225031, -0.17906680664702812, 0.45093885543850665, -1.0695778108873204, 1.7641415647931089], [1.2221124632282394, 0.97318682117757049, 0.64187968201473811, -0.59301134600527328, -0.29868651652171885], [-1.3862294259417203, 0.0584927235713468, -0.35277951272010977, 0.75209545051650684, -0.13715311800567015], [0.20306031417893305, -1.3669803254197337, 0.63022089015095695, -0.82975933400852309, 1.8185121343746746]], [[0.20988478486733461, 0.15376589670292956, -0.45698014618550276, 0.74385257104825997, -0.61373315174953946], [-0.43312432269599849, 0.11091683868946993, -0.35658287562064456, 0.13906448055395865, 0.11741135402107736], [-0.58871955127711706, -0.2592189894785622, 0.18696868634859301, -1.189297498613044, -0.18910663127034416], [-0.0059783774327649558, -0.56218865952014174, 0.56118913018424099, 0.92858229251960267, -0.80069209345437609]]], [[[-0.65397996208650411, -0.75637507437919282, -0.47317168862875231, 1.2572262809566774, -0.58188309473232369], [0.46779795650856537, 0.043634579313922846, 0.49295958477871449, 0.42538340985723361, -0.52286333572206711], [-1.1011146234490037, -0.99236099200805938, 0.94052905084727023, -1.165004392471374, -0.21489264226828528], [-0.63045067262580679, -0.025347548615945677, 0.91483664313926172, 1.4191781908188477, -0.7140263954401268]], [[-0.084559644472212966, 0.13261953407066526, 0.11841351508877587, 0.15412246007945687, -0.0094348591836925511], [0.27182495288034786, 0.53890127947731448, 0.05833070844642535, 0.18545842869863671, 0.15575871411100384], [-0.42308235399605243, 0.30386080497753354, -0.49026627770639086, -0.076718339297100924, -0.23955071056760571], [-0.44707203449850885, 0.068233608014842351, 0.36623197174402905, 0.84666255239128052, 0.30271530455068452]], [[-0.5304798748209707, -0.91599039178198705, -0.49320661354426842, 1.11350525916425, -0.4766779388972413], [0.72850794224208781, 0.41971363754232377, 0.46854943098581037, 0.66193006850101033, -0.17266226347302727], [-0.86361574770204808, -0.83656592244936046, 0.72574127692256618, -0.79943874330074771, -0.18371376090488573], [-0.79217395256918022, 0.12907336217363649, 0.81369679140023476, 1.2195239539318883, -0.51047509627588572]], [[0.17112311272891573, 0.020623429604838511, -0.33058469549472441, 0.010162604283730675, 0.013300660218210664], [-0.47483565227643837, -0.18775632628725111, -0.49783300086853399, -0.56982061605737222, -0.098322000468332879], [-0.22364374111306878, -0.30887859074307689, 0.31343730843987155, -0.40839472840075602, 0.26071929628063489], [0.60263087280222083, -0.85590927381208448, 0.15180055020299829, -0.51772820934774655, -0.34902444348735168]], [[-0.011904266338784629, -0.79877336475271909, -0.83275028989501199, 1.7984374894648705, -1.5382073576035322], [0.074801338075412144, 0.53793557389586943, -0.41579415325729097, 0.81401240892516735, 0.37523292848847467], [-0.20929149146285453, -0.49988173458873048, 0.29608453055360673, -1.0537159626257302, 0.026466796261958032], [-1.167104532639083, 0.84267040065899901, 0.7410284209124568, 2.1046270214672518, -1.3046739126826601]]], [[[-0.2874634935627382, -0.71869081510495136, -0.38362620510706336, -0.18449799066915576, 0.57128759074544089], [0.10197313503821805, 0.59716441674391241, -1.0700820226560823, -1.665214432195723, -0.244029325504694], [-0.62437825910579725, -0.27860117806478535, -0.11500596541875541, 0.62008443608214603, 1.007940226472954], [0.39243936253089384, -1.0395918005614904, 0.6128929380338245, -0.84690598387962901, 0.58653590478176121]], [[-0.31447572275450875, 0.11530422017558295, 0.36732259655205879, -0.59138019228753969, 0.51372446039819242], [-0.18922641081312586, -0.71406518587720003, 0.074311823251377238, -0.88316816796970199, -0.68118896745406932], [0.14599196116627217, -0.037420917354937341, 0.16804855405967081, 0.57254644707761504, 0.32522279813153976], [0.53823593071446474, -0.068031586608349987, -0.34268899979060885, -0.91130564613304088, 0.43801076764179037]], [[0.40833389660052816, -0.85716201031934824, -0.71193360463480815, 0.22924005137000827, 0.049983564290440041], [0.64223168331235203, 2.2072790498035308, -1.3791072001201858, -0.25674936015015326, 1.30170432645404], [-0.27402881477480878, 0.40649085111429201, -1.1228307530709196, 0.69167114806236163, 0.64306489228810781], [-0.65328087513830857, -0.47960150458307116, 0.80908093644227985, 0.21015588606356436, 0.54467333057481637]], [[0.3031409688157537, -0.20636836796693081, -0.4119691759369779, 0.33802531969705252, -0.70646313306160835], [-0.71635036554058829, -1.3108540355922016, 0.11027869904784229, 0.41439242041157953, -0.18674484069770947], [0.99747156196740605, -0.77293164039818518, 1.2771825615069323, -0.56582690904399857, 0.1354983917873836], [0.55693952201687402, 0.35540611434529051, -0.74682458138888086, -0.84730722759501664, -1.3877457447765074]], [[0.72435911720109125, -1.0714240498174337, -0.70526961186713233, -0.024180714481510684, -0.29328630936007771], [0.29675648599108856, 1.1530743602907589, -1.1728330080176852, 0.21681795774657209, 1.3721409539536666], [1.4076363435755725, 0.21948066873871763, -0.47301692164804354, 1.2864549754957462, 0.9001263150872546], [-0.36062145340472718, 0.63138279928216101, -0.42598543459193428, -1.0710578244385771, -0.080819177505209172]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[-1.0110807839652709, -0.36007691623143168, 0.032991732347826985, 1.165198720807199, -0.34452085497133078], [0.74177906715684883, 0.32997997794706957, 0.74875426634699216, 0.26079660702156149, -0.76440650363880769], [-1.6536646131000166, -0.4852123353614059, 0.25772918631659647, -0.99195141031929746, -0.49067511624903976], [-1.0579375648647733, 0.19269722567745273, 1.2347430860767503, 2.3691018668353485, 0.0057657110248107712]], [[-0.49359344623649348, -0.86022306387794034, -0.5394855455581673, 1.1976827084115056, -0.42109525911142442], [0.67564425014028751, 1.9466247929381728, -1.1789521963430563, -0.80264048896284534, 0.26205914025217913], [-1.4945840856649228, 0.15255507796703438, -1.0388649784858399, -0.057309454484227917, 0.53282624973456905], [-1.3012424064029799, -0.15662084204260424, 1.7222413387507127, 2.2546723903927148, 0.46885942164634048]], [[-1.2196628300327743, -1.3413539229452109, -0.16720447595899096, 0.86825638542146899, -0.1505692444530235], [0.83599452841834776, -0.067590216113942669, 0.32221248471963976, -0.56510381871425108, -1.0368776553793104], [-0.72324668837757822, -0.91923523215132541, 0.76359892823285302, 0.23394004208328034, 0.5354982100690443], [-0.77279960779827062, 0.68419712379847453, 0.68157265067631745, 0.77057967140321759, 0.10685051879193369]], [[0.31952435102842763, 0.38678401635320842, -0.15520300711336998, 0.4451606085186095, -0.74813472167780126], [-0.7876449818172544, -0.54113890373663132, -0.36677368098918206, 0.048190124113448973, 0.010567636476168554], [0.3418073729649177, 0.024855068311657437, 0.10030623593141143, -0.63074811099558792, -0.027088352014656522], [0.11441178352852517, 0.24531132339031672, -0.15247867292571782, 0.4950909288430162, -0.83340527006212661]], [[0.39940785657144828, -1.4725378238554827, -1.0095731506092451, 0.76280339861387336, -0.49476836384117673], [0.89314229691578362, 2.1878806495073002, -1.217192281577465, 0.42074456924376935, 1.4980714059352362], [0.22826294502930944, 0.060598721579335546, -0.69223492922153729, 0.69126192859530744, 0.71072375822922917], [-1.128222571107224, 0.32418730212559538, 0.64824357796382626, 0.42518810836494925, -0.0020882124271415226]]], [[[-0.74250127620132977, 0.081752828194024713, 0.84654236167231678, -1.2876311542073182, 1.6705567501159424], [1.1516292302249758, -0.55456106926938997, 2.1082298810689428, 0.5653807066824742, -0.7962808377511309], [-0.55111671785057736, -0.39946320646820943, 0.79511502117470945, 0.45464289296061811, -0.78031077162178863], [0.49185031608693347, -0.55202546711828937, -0.3921361186794613, -1.4648358315583319, 1.2104873814308903]], [[-0.79088955019465734, 0.095411606087213233, 0.86238082815576012, -0.58757424600772989, 0.48866068424002879], [0.19535390316064677, -1.3824359484050843, 1.1318892307562918, -0.27878197709656161, -1.191951977730263], [0.44866320527667347, -0.12387932000297816, 0.52163143805778933, 0.79663026783798419, -0.035488707857592852], [0.13822333472801984, 1.0181924027164266, -0.75336161496979814, -0.60175355617015369, 0.54272157417286948]], [[-0.53963304656508848, -1.3495758200309611, -0.68574105066834046, 1.2169616943891768, -0.66935480440172301], [0.44600581719793381, 1.1433646553630818, -1.2374047525589413, -0.980416101330427, -0.016625344989542573], [-0.58755930277363444, -0.28451302010802626, -0.34730874068051137, 0.35873746637848414, 1.0271974938972308], [-1.0591409224849377, 0.47523925359503749, 1.1042924796672313, 1.3424424057617323, -0.0012250117350149081]], [[-1.0343114178286741, -0.35427181280471409, 0.33539108098719611, 0.72077660064330651, 0.073055551706990685], [1.1061739396584076, 1.3016338656069562, 0.16947278862120282, -0.33362987081908402, -0.39140169803793995], [-1.5988958936136077, 0.36510856083064408, -0.99245660458096852, 0.17190295034073921, -0.13746742887409358], [-1.478385354826012, 0.47192103136572183, 1.3702243927931934, 2.5042182629181626, 1.1149429299676581]], [[0.22385098991725561, 0.88417876149190144, 0.23877966788210248, -0.79979025081084876, 0.99445901454445484], [-0.0024819848895573926, 0.46825706106518489, 0.20887953813731511, -0.16050531380169833, 0.13794836701850913], [-1.105817144653694, 0.30794533296844484, -0.40102539669293735, -0.52532760999800066, -0.59180552295784239], [0.72278297479718023, -1.8028773535622502, 0.42200080884579055, -0.40014406903271382, 0.69498800981652065]]], [[[0.52368190453436692, 0.87927348053144161, 0.30415022672910974, -0.48332639414293777, 0.14889163717709605], [-0.22377869988996252, -0.12693049933255626, 0.4701529925003004, 0.83784159952721315, 0.44262269887178807], [0.27026092032443361, 0.46157193061257523, -0.25440149872944073, -0.3325123247679691, -0.71302866946385102], [0.27455730190568978, -0.19525570500044492, -0.42870992022890275, -0.15357311776121191, -0.022847426063515551]], [[-0.63407147825885035, 0.23984126579673648, 0.3002650757111972, 0.47498231955790704, 0.025623980307521221], [0.33984625700492355, 0.581991716093339, 0.079894288431237734, -0.42425318272956675, -0.46315314004347719], [-1.3837988730694952, 0.28400491572258935, -0.65687179306198895, -0.38586656180779566, -0.2727547553441812], [-0.6889775503961153, -0.11290036727342456, 1.0256623635095299, 1.8782145203686829, 0.59863088485333993]], [[0.74921075934124837, 1.6555528988727599, 0.65132714586381202, -1.3447364425255983, 0.50126429195968814], [-1.2923508504562626, -1.4694373087933421, 0.21211333086696879, -0.18582776242476617, -0.13517214229902613], [0.89237008540079654, 0.56797653469841136, -0.018264728793140957, -0.12002987643887997, -0.42391046807077237], [1.5307126805226832, -0.63066487396083315, -1.2223955388738017, -1.6492358892757368, -0.081137121925038941]], [[-0.4089507668405033, -0.3458802728717662, 0.17727560716568469, -0.59563495717950843, 1.0244471977831786], [0.96226619636179156, 0.014825819248081139, 1.2832373132185197, 0.59667265458275187, -0.26661319797894334], [-0.55143687254735119, -0.57325886364390166, 0.76321582154375123, 0.061479335838569543, -0.46472145546954241], [0.25893695705752356, -0.68564114351886929, -0.0081338446345722293, -1.0181499339253695, 0.56527073768769343]], [[-1.0993937751237191, -1.7747344458321874, -0.50287151192576529, 1.0221096658562621, -0.19127920884308575], [1.0171188389120223, 0.74685923713827629, -0.37753162912984972, -0.87360065740338355, -0.60214210313061622], [-0.8013340466967761, -0.81526751720898682, 0.35783889720170559, 0.56070473111974839, 0.94631929724589159], [-1.0087454249864161, 0.52687475627641456, 1.0199254458800096, 0.82061362688866668, 0.27388648497056878]]], [[[-0.5893463947436931, -0.23929587851293765, -0.084852766045606043, 0.84809729025639535, -0.44408093991213354], [0.11265856052068737, -0.17629769083272723, 0.23813958594468754, -0.094559474143064315, -0.63686254487050387], [-0.82042204188491819, -0.44718491690030493, 0.38000000984667653, -0.71772818502869917, -0.10500392332881751], [-0.46855804434026138, 0.18437467980475322, 0.64742590401217148, 1.3335652768072748, -0.33015390765981728]], [[-0.42758439387328206, -0.7258878109794159, -0.21650301816573161, 0.54302469728361302, -0.054037964793470311], [0.95511434939713569, 0.083022457904814093, 1.247202788048076, 1.3266388382053118, -0.10485065703101432], [-0.4710171712637311, -0.8486033352319664, 1.0171946371633447, -0.61779790126792866, -0.57705050952192871], [-0.52983020788824198, 0.17622402872980047, 0.2577206996097397, 0.4003890520963086, -0.35323589289541407]], [[0.30130693307473477, 1.4007206592862051, 0.77622629526283327, -0.87283334458362938, 0.37855830836885168], [-0.47573929859557407, -1.6050701038391417, 1.6787274865869879, 1.2664187484421932, -0.34864654521124916], [0.47894064870275965, 0.060751781630612615, 0.71104865287679431, -0.77525702428631849, -1.2706663645690219], [0.88434049124077629, -0.11119101074230142, -1.0933223562282721, -0.78427664348718151, -0.32200256071563832]], [[0.42863403632896568, 0.014947661309524074, -0.089786655350836853, -0.34072107871340002, -0.09041147911296421], [-0.26431610001551914, -1.1520278997881972, 0.81132221252203551, 1.0804588016804648, 0.09840596880789626], [1.1650491223907291, -0.55206668382008717, 1.1826316545029201, -0.23091184931472652, -0.30983850991983947], [0.66490769016397544, 0.24182359743353876, -1.1053724500320268, -1.5060377839458345, -0.87432213278153581]], [[-0.3357482810407954, -1.4023676716719302, -0.59695936392347637, 0.19665976271240723, 0.091375287057474622], [0.22589831851258754, 0.94213479412333567, -1.73832133584705, -1.9423027786581877, -0.014913862477705229], [0.038909509893432004, -0.15404087564043045, -0.43296520476954781, 1.4188692962410863, 1.6746529266622869], [-0.19933535498154353, -0.012756316696216304, 0.53230619784904099, -0.62081954544290774, 0.55853751698912035]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5, 4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank2_taggedData_rank0_offset0(self):
      arg0=Data(numarray.array([[0.54410934958619328, -0.31997270442887249, -0.94966859827992178, -0.62937314906750497, -0.043770218803262706], [0.81494757278600938, 0.24263184992158804, -0.33623101254340115, -0.38842414099707323, 0.67920772294099918], [-0.82588451272913943, 0.34570187000550257, 0.2714620706752624, -0.4275438857850471, -0.055251091681963738], [-0.97148535784285306, -0.34733556113373676, -0.72605703419714973, -0.59915867896720787, -0.50966505019499775]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[-0.7638955497929536, 0.038821195103962536, 0.1795395929869863, 0.58745016953446494, -0.93494857016215716], [0.77738074304792648, -0.81235643416641135, -0.90443373426776352, -0.90638908752804181, 0.68587473464291815], [-0.42679020796434797, 0.19435601117924195, -0.48315478280832269, -0.9143917651582345, 0.45228056846678433], [-0.48422880690796855, -0.11030669657759784, -0.50236738832122896, 0.73295119446091528, 0.68347603223634557]]))
      arg1=Data(0.465679557497,self.functionspace)
      arg1.setTaggedValue(1,-0.932251055926)
      res=generalTensorProduct(arg0,arg1,offset=0)
      ref=Data(numarray.array([[0.25338060114549177, -0.14900474740968087, -0.44224125261616165, -0.29308620955849529, -0.020382896123867365], [0.37950442507856175, 0.11298869250625852, -0.15657590913811081, -0.1808811821008213, 0.31629315186797513], [-0.38459753443165412, 0.16098629385018307, 0.1264143369493817, -0.19909844754309586, -0.025729303925704661], [-0.45240087155545444, -0.16174707041186656, -0.33810991840279686, -0.27901594849217076, -0.23734059504669217]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[0.71214243291138213, -0.036191100127964553, -0.16737597514257849, -0.54765104085220406, 0.8716067917698429], [-0.72471401856269191, 0.75732014353962862, 0.84315930378589676, 0.8449821839274988, -0.63940744560358198], [0.39787562203348897, -0.18118859664734477, 0.45042155644858445, 0.85244268859847849, -0.42163903752781062], [0.45142281654956889, 0.10283353436013531, 0.46833252822507421, -0.68329452497815102, -0.63717125275220332]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank3_taggedData_rank1_offset1(self):
      arg0=Data(numarray.array([[[0.79138338980717693, 0.2808750992721365, -0.41839175571458287], [0.26034263863423046, -0.93281586335613098, 0.21909914037419642], [0.23481832606573549, -0.068556029837298693, 0.88482527511858611], [0.34683774909526921, -0.96126900561080708, -0.61733837615773246], [-0.37232580562777096, 0.13066577701938553, -0.62747998525975435]], [[-0.8849501750437776, -0.3345076112981189, -0.66607673738915785], [-0.63459472822890239, 0.87620073255725006, 0.54390401117201792], [0.36848268101414838, 0.13015189562592844, 0.031354990337499888], [0.2015875659016344, -0.040083992013276726, 0.62487891013500874], [0.77992259562715027, -0.43340692681301007, 0.84397989404885965]], [[0.3880147359518582, 0.49646462396386393, -0.79345953663865698], [-0.98914408916721297, 0.028343616683789596, 0.89608295017377237], [0.20543872488387782, 0.60992881997319315, 0.47018438506212479], [0.19498090406768287, 0.39759417635192329, -0.69099842160845171], [-0.89276320490358629, -0.049140138001998901, -0.97801885535216182]], [[0.42584136621042901, 0.79834856114601349, -0.0929445686787711], [0.16698250440260343, 0.70970624473709631, 0.26740712818429491], [0.733551006062513, -0.89240247937356698, 0.024822770415622086], [-0.16530646576465258, -0.93991413166092586, 0.58520230356083425], [-0.98179380654944381, 0.34963474810249995, 0.78831567905225963]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[-0.23200814831723315, -0.34519351826800615, 0.25075417397389366], [0.77774368677286443, -0.39220765431341542, 0.88395316951297853], [-0.20749078307373359, -0.10739802954242483, -0.41405680726249017], [0.48331920740105727, -0.16066293598090287, -0.14263870600635586], [0.054145539791901953, 0.001871756348182263, 0.22128433750999843]], [[-0.67992653788840873, -0.75149156640120851, -0.1300429002964576], [0.21003185924673717, -0.89819914855571081, 0.36223042925889182], [-0.3671975677472703, 0.49896149990212413, -0.055072638097011906], [0.13865758390105465, -0.90408830847415511, 0.17758670057678749], [0.57038941399908705, 0.046846992631782047, 0.95030517552804916]], [[0.8331091151683232, -0.69774114254239916, -0.56181387448199049], [-0.89686649069238888, 0.36320432156810978, -0.8724243180138529], [-0.04322283581789188, -0.8304749092588799, 0.28304273586154216], [-0.081994091231685218, 0.62445931495811391, -0.52734770870838976], [-0.8521785130416164, 0.6094162594139485, -0.25524960711122358]], [[-0.40803902196132591, 0.52149115976496407, -0.48252418337262526], [-0.22540193124289321, -0.19649993330441595, 0.95227650954752407], [0.49172271302115123, -0.63105035222060679, -0.029684065232219004], [-0.27834651218931028, -0.20623004124205058, 0.13568141778923026], [-0.94059051940944305, -0.03371075521857092, 0.57398959969603647]]]))
      arg1=Data(numarray.array([-0.10913107974770275, -0.065121670507569007, -0.68257278382382225]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([0.70571948788982763, 0.39125211124740145, 0.042176717412224063]))
      res=generalTensorProduct(arg0,arg1,offset=1)
      ref=Data(numarray.array([[0.18092724593440426, -0.11721605613942974, -0.6251191455171029, 0.44612703937175735, 0.46042390384090154], [0.57300511545068256, -0.35905972254889129, -0.070090684751725918, -0.4459144694536889, -0.63296731766907166], [0.46691881202212315, -0.50554125502697389, -0.38307439813827998, 0.42448624271594038, 0.76819735311572379], [-0.035020887060550301, -0.24696506513045283, -0.038881820624523403, -0.32019431395602826, -0.45370740824824757]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[-0.28821437649234821, 0.4326990465775663, -0.20591355192745686, 0.27221203823738183, 0.048276938207336785], [-0.77934485271767062, -0.18792104659192363, -0.066241522291281094, -0.24838307625551562, 0.46094466276161128], [0.29125317796675509, -0.52762769681369903, -0.34349044565806464, 0.16421440200327378, -0.37372917623895419], [-0.10427785848938634, -0.19578765200995407, 0.0988665421764095, -0.27139990026056443, -0.65277346667873404]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank4_taggedData_rank2_offset2(self):
      arg0=Data(numarray.array([[[[-0.14856776885656142, -0.17274604277136341, -0.98804365003423134], [-0.85124682247008954, -0.77064803095641521, -0.31913326469896797]], [[0.86530084417029052, 0.18063942509405417, 0.55349912982817639], [0.39911410069834474, -0.95771160080170059, 0.57984778915116597]], [[-0.86963436895036916, -0.8648241315423153, -0.9796292888826077], [0.99841098377853688, -0.019932284453149096, -0.57409822144403599]], [[-0.13720792387325131, -0.21246973067433617, -0.75453193244920658], [0.52822770545142306, 0.72773358084238171, -0.20886347773177327]], [[0.43144067371224359, -0.60781655237192944, -0.8521766834627067], [0.99367949766300989, -0.86241657926636228, 0.75693140593012154]]], [[[-0.45206747491944066, 0.47505440938730037, 0.1482298729707523], [0.77226092860340834, 0.17017287238598966, 0.0013784916797530133]], [[0.91269514845524213, 0.83577611719500555, 0.61971517795985487], [-0.014960804576159559, 0.84097430224536418, 0.057764810635321684]], [[0.95354875217846069, -0.43070630386307962, -0.0077002939454116071], [-0.1949134413088216, -0.56590742170282415, -0.30563812444591409]], [[0.20273486162347631, -0.33486406638124544, -0.58976342002806126], [0.40874532882322678, 0.28035618668559614, -0.97896623233931646]], [[-0.46555360656024058, 0.093300489524818175, 0.71869692777843674], [-0.35426190311765082, 0.55702341531812438, -0.55757802541522872]]], [[[0.45999336433520277, -0.28546766599603823, -0.52454165873775072], [0.3942864505090562, -0.50161226294102401, 0.53447716209065765]], [[-0.84806252842063601, 0.97247577323094503, -0.96865379925572515], [-0.48421134577759584, -0.087996319171932402, -0.56107755488701971]], [[-0.99964571746322739, -0.719594106693761, -0.058852965723008577], [0.77415413693491009, -0.78350310104264143, -0.84771694218545934]], [[0.87776977299037395, -0.34405253878744158, -0.93159626675317542], [-0.49545614878272493, -0.11595713787236206, 0.18134775000257819]], [[0.4027809222033365, -0.67372887404345905, 0.6160088200317182], [-0.19858096424225313, -0.11667627080901211, -0.16196084513697628]]], [[[-0.41502372720771308, 0.99787061943266386, -0.21257211407230492], [0.90398960096344316, -0.23878006536122176, -0.18906609351418835]], [[-0.79265367243118012, -0.47363642115062055, 0.11844856970407358], [0.081432984620237958, -0.31011596909582684, 0.68065733561981956]], [[0.66287419357764232, 0.5479835167257634, -0.6158209764623892], [-0.049084133536164032, -0.0098295220232287317, 0.60945659320476842]], [[-0.045726188308838012, 0.26689743757448037, 0.65673873997866483], [-0.057648420353971108, 0.90600241110891355, -0.79941109755168549]], [[-0.85594428567100955, 0.69214739895539101, -0.61918287763645297], [-0.96096142553393271, 0.64586883110859805, 0.66994581055649527]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[-0.31094036824952775, -0.40054735319336499, -0.74047851969112144], [-0.22388019540510817, 0.54124736252413341, 0.88319509821648112]], [[0.59041708778799484, -0.45653254499674056, -0.39697960781911323], [0.23829988325069817, 0.97513687124125448, -0.55925257040439957]], [[0.83777557986623918, -0.50951656588807404, -0.45082342135754994], [-0.47761041631173784, 0.22794648605190804, 0.78543828370030755]], [[0.63845869531643085, -0.42436004455275844, 0.61971213942188341], [0.29871416490069302, -0.54859065775804972, 0.90917390396804287]], [[-0.24305351343794968, -0.16584929940814708, -0.79740955714736783], [-0.89075995274404529, -0.021414547204977818, -0.098080130394756715]]], [[[0.235852302191361, -0.27194234817070861, 0.035590920891264144], [-0.96824565965718556, 0.9527725620755978, -0.57995256788367944]], [[-0.00019004522624599396, -0.5650661460218882, -0.76803734658707978], [-0.70942457769004341, 0.23495659492283605, -0.79382757519997882]], [[-0.12471567517777671, 0.50699940275215583, -0.81461688957257339], [-0.47529879764464078, -0.97896456623114103, -0.60524222305373465]], [[0.33944295236232214, -0.56722955668554897, -0.32459722386846068], [-0.79319505697192372, 0.65112828178386217, -0.60178452135628047]], [[-0.31393623771570223, 0.43963285811593655, -0.73151987065675161], [-0.89397196745793295, -0.19577394168712514, -0.78939247272181845]]], [[[-0.82782730635026858, -0.84591514620156039, 0.37027389676292577], [0.0468941823097071, -0.84287024955186207, -0.3920993449899759]], [[-0.20464874263533273, -0.23521070328754967, -0.78340924984557647], [0.74211010610131467, -0.86232501960871999, -0.56560963948250809]], [[-0.92600583114047552, -0.32281890969200044, -0.92314724058868469], [0.86093316330633951, -0.63083932073668847, 0.24977590290576979]], [[0.79470432735047059, 0.69401687175685645, 0.63939920351210766], [-0.4659912250610363, 0.030082201120069652, 0.62353008298357926]], [[-0.035052196314744766, -0.50087075496957745, 0.31347309540059465], [-0.87768025562069818, -0.12071447055670381, 0.32149813173118602]]], [[[0.5172368938790175, -0.6144770672578419, -0.5091777872633183], [-0.77032315916661598, 0.8131774737982127, -0.77095027121672177]], [[-0.93055539544332144, 0.085420224503691911, 0.85624060514988454], [-0.9780062227104851, 0.43846686279927538, -0.51717733296838597]], [[0.42943782267102848, -0.02245542153359037, -0.44358028736346622], [0.21746482372727116, -0.16060299384856558, -0.9517520735510927]], [[0.67095965777246858, -0.18553411986952151, 0.4836349455955038], [0.17377344040411469, 0.72228698207039876, 0.44794694988347672]], [[-0.19001372957345541, -0.52780271306060755, -0.56451015775685409], [0.74965132073277241, -0.60922164036745752, 0.31824508193867951]]]]))
      arg1=Data(numarray.array([[0.13476602401163262, 0.55843410545779237, 0.62270970704226691], [-0.87844047895140154, -0.67070457821310292, 0.090133410828194815]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[-0.23136479348944228, 0.83747563330664287, -0.76822465654712446], [0.46882278068786709, 0.81752503162429258, 0.44736643336144399]]))
      res=generalTensorProduct(arg0,arg1,offset=2)
      ref=Data(numarray.array([[0.50412871810454363, 0.9061648835781716, -2.1255905032065008, -1.5779320895667028, -1.0381773778514582], [-0.49572930769526002, 0.42993224264807794, 0.406418185415449, -1.1622613366073344, 0.32424435202486912], [-0.38580987411632028, 0.25938204674716464, -0.80416931640481948, -0.12460395663893462, 0.29974145714016093], [-0.28204817663411363, -0.099746303367281075, 0.11651050130569182, -0.077233024307853698, 0.356940051012333]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[1.0379808347376638, 0.44476130067077491, 0.039610223674226841, -0.8808949094101024, 0.050935717584931428], [-0.24412634784632187, -0.37880324845558888, -0.21466075403610552, -0.41298492801964154, 0.070474983920137235], [-1.6438513181423107, -0.15788934921727815, 0.65271614769299524, -0.0087745370664514821, -1.0185110964414612], [-0.28436642610879354, -0.70237177115275251, -0.23251978247027544, 0.19019602753109519, 0.031383041148035834]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank2_taggedData_rank1_offset0(self):
      arg0=Data(numarray.array([[-0.77445399191973774, -0.13174607601630628, 0.1691873523111993, 0.10143715414941545, -0.27747329081806771], [-0.31304342608986757, 0.8098310805971185, -0.30320648651579796, 0.93769586291302076, 0.80570717362112876], [0.0089384704634434264, -0.69426636496460947, -0.67835165511652429, -0.44825013143848635, 0.96610445183819627], [0.25145759569452086, 0.86341536641338368, -0.13395390967552023, 0.3775907404063934, -0.8978148180838752]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[-0.35158135157834547, 0.95652299458667089, -0.088806291360575385, -0.036778863032759235, -0.025107873428241279], [0.92887897962808674, -0.38006662054329765, -0.95790782151734066, -0.17430159490769781, -0.11844220086848001], [0.95866176108993417, -0.74785359664209317, -0.025855793674792071, -0.72603372549234457, -0.076884781138241376], [-0.59601343281858132, 0.11540148864988997, 0.52238531624006912, -0.38949095951332535, -0.15626019816618086]]))
      arg1=Data(numarray.array([0.30772366200330814, 0.36335246691343359]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([-0.57685986352037877, -0.1791376319695186]))
      res=generalTensorProduct(arg0,arg1,offset=0)
      ref=Data(numarray.array([[[-0.23831781844662212, -0.28139976847499309], [-0.040541384966303974, -0.047870261726689636], [0.052062951617846111, 0.061474641832826478], [0.031214612538052185, 0.036857440196868339], [-0.085385097158644688, -0.10082060472133349]], [[-0.096330869442435976, -0.11374510112078651], [0.24920418572544148, 0.29425412091813469], [-0.093303810373798021, -0.11017082485966992], [0.28855120478094676, 0.34071410500396693], [0.24793516196902893, 0.29275568914508726]], [[0.0027505788637192182, 0.0032478152933250312], [-0.21364218823263487, -0.25226339640491308], [-0.20874485543846197, -0.2464807473213998], [-0.13793717193971522, -0.16287279105244487], [0.29729319979734842, 0.35103643587145911]], [[0.077379452185665248, 0.091367737719724951], [0.26569333838265452, 0.31372410335726914], [-0.041220787625011454, -0.048672483533299539], [0.11619360537639586, 0.13719852701033294], [-0.27627886362160398, -0.32622322898221168]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[0.20281317048779468, 0.062981450766387573], [-0.55177972411137099, -0.17134926417464888], [0.051228785114012507, 0.015908548738328591], [0.021216249909512198, 0.0065884784302197566], [0.014483724439102209, 0.0044977649897255416]], [[-0.53583300141520684, -0.16639718079683816], [0.21924517885525827, 0.068084234394783935], [0.5525785751855965, 0.17159733879169667], [0.1005475942498389, 0.031223974960275288], [0.068324551828044672, 0.021217455388837566]], [[-0.55301349266454536, -0.17173239774137919], [0.43140672369218225, 0.13396872236235211], [0.014915169610451627, 0.0046317456515947092], [0.41881971579870603, 0.13005996231470612], [0.044351744354200112, 0.013772957627599268]], [[0.34381622751203927, 0.10676843497714442], [-0.066570486992624064, -0.020672749402498566], [-0.30134312223129617, -0.093578868526894093], [0.22468170174727822, 0.069772488160752738], [0.090140236587810438, 0.027992081870577352]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank3_taggedData_rank2_offset1(self):
      arg0=Data(numarray.array([[[-0.6650300655519914, 0.91384051661220833, -0.2412293706666595], [-0.73884147462427996, 0.2644233434794856, -0.39356006300612822], [0.075207668750288281, 0.3071232945872695, -0.61362160117336084], [-0.53837778767462408, 0.68952273483750437, -0.16931318027196895], [0.96395325353130779, 0.19376710462827074, 0.81617514164388383]], [[0.19831553759103748, -0.50374607679546801, -0.80328866224080331], [0.17525888600805439, 0.83815461871929697, 0.040531506229390946], [-0.18679281483088261, -0.4365692122785263, -0.34497203319198277], [-0.10700019829198615, -0.67052265043319337, 0.096086206984764111], [-0.34450821740988902, -0.57705536741145513, -0.021550806969588221]], [[-0.011365645811248548, -0.73626809598484688, 0.039926692090514582], [-0.94980868831047682, -0.16174312252915457, 0.29972130046166501], [-0.99700253782462767, -0.46786739066436023, 0.1226463963003892], [0.88498753198289104, -0.37420798599483218, -0.95768278610480184], [0.30028760719199199, -0.85339603806477693, 0.93866375493065579]], [[-0.34796238929413703, -0.13710886885837903, -0.79563470197010844], [0.7256359750839585, 0.21721507776186422, -0.85866378301662949], [0.52983434972025267, -0.68287625215900505, -0.087972914306935213], [0.4725089623580756, 0.0054601403137672921, -0.51894920083289731], [-0.77417264124000917, 0.99930593734098538, 0.35442158839943905]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[0.24219368696935173, -0.77134108794711231, 0.66134040538949579], [-0.17376046468882822, 0.55900866819788431, -0.59981273580560734], [0.21116212761917308, -0.69310698569003759, 0.6833411585634912], [-0.31956834068003581, -0.059753755020944599, 0.3814095399352202], [-0.21503655936356503, -0.035049319639340215, 0.99554456105731171]], [[0.48616050248934672, -0.51446819863031279, 0.57814800065339744], [-0.51650679703349667, -0.67581373713794868, 0.088807446677640511], [-0.96125370104327224, -0.97870560692516673, -0.35597455080695073], [-0.48574299140236055, 0.50287169807344978, 0.91737129554691021], [0.82181449519828709, 0.51972336095763194, -0.80450460765834131]], [[0.5589085736559265, -0.9112643580952986, 0.11230812378362698], [0.78748174538172688, 0.026992687078434718, 0.72382502265020299], [0.42682322348653612, -0.92282330495758913, 0.089579732110721455], [0.2230168476580936, 0.22516662015324962, -0.81613575326259546], [-0.17355370531175218, 0.80150804324601732, -0.93814338148608711]], [[0.11905915319377702, -0.54035125417232499, 0.71836476287813], [0.07525066181340212, 0.93064875975622496, 0.11249842380432451], [-0.9039683324169574, 0.61813980088353837, -0.10256173278854908], [0.16450582519970869, -0.60666865912990042, 0.31453070197909794], [0.090808696120319166, 0.94532709735302856, 0.4183532681096338]]]))
      arg1=Data(numarray.array([[0.035329083430014618, 0.60660708896529081], [0.56876055304281148, -0.25095241665837076], [0.13126915204054734, -0.46987328670917239]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[-0.82397485138371551, 0.55520749343075515], [0.34562548195696863, -0.24077185537908319], [0.52696303567275304, 0.33067229020389854]]))
      res=generalTensorProduct(arg0,arg1,offset=1)
      ref=Data(numarray.array([[[0.46459556001724656, -0.51939520097712921], [0.072628679228426474, -0.32962079287356222], [0.096787045625851539, 0.25687257055879426], [0.35092734062055764, -0.42006543869566515], [0.25140128926668748, 0.15261565751335154]], [[-0.38495161259445093, 0.62415979021198242], [0.48822155673746243, -0.12306831649161451], [-0.30018675183110183, 0.1583413962744058], [-0.37253389750691807, 0.058213858862426297], [-0.34320644561714897, -0.054041539388010207]], [[-0.41392064429471498, 0.1591132906360874], [-0.086204817252333865, -0.67640188855806727], [-0.28522801326052022, -0.545004620130637], [-0.30728314997131734, 1.0807376672968443], [-0.35155152148583807, -0.044734634273918605]], [[-0.1947176010224955, 0.19717884238074979], [0.036463354976114901, 0.78912845169934998], [-0.38122264275601081, 0.53410684066231762], [-0.048323200568326403, 0.52909741738946059], [0.58753960912347913, -0.88693008883788105]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[-0.1176546948644811, 0.53887192119667282], [0.020302753337057611, -0.42940811731454853], [-0.05345218738298485, 0.51008143639651538], [0.44365258463973223, -0.036918148870533712], [0.68968596309330754, 0.21824798060397593]], [[-0.27373472139798011, 0.58496694016276563], [0.23880840440450629, -0.094685354959483603], [0.26619784845620309, -0.41576141302762604], [1.0574660449010427, -0.087416233205021787], [-0.92146902969507138, 0.065115426948507749]], [[-0.71630056203239023, 0.56685422297593469], [-0.2581067624058494, 0.6700655645729543], [-0.62343764410870861, 0.48878686654459491], [-0.53601032635438006, -0.20026663857128277], [-0.074341391923574363, -0.59955691687099399]], [[0.093690765458521064, 0.43374722938088228], [0.31893378415550289, -0.14509418582461975], [0.90444579690189353, -0.68463498179285487], [-0.17948275704345776, 0.34141019308580312], [0.47236175988620349, -0.038852657335036123]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank4_taggedData_rank3_offset2(self):
      arg0=Data(numarray.array([[[[0.54799744480601476, 0.45878210794537377, -0.36449999319124426], [-0.069573998665257042, 0.10346911337764619, -0.18976089790484174]], [[-0.087684276095028046, -0.76878343671082638, -0.71068450467672517], [0.54378365908901793, 0.19432825647022223, 0.2462511533545928]], [[-0.57918273801074149, 0.14118160975756955, 0.098887406659331267], [-0.048555327895182021, 0.53335876349806521, 0.77265452593328576]], [[0.042752567387550178, -0.0095248896521564763, 0.68346656266175332], [0.97144522579970727, -0.85662100719111733, 0.73710835093676796]], [[0.72057811655315263, 0.026032046570934497, 0.40655786649971604], [-0.2861822560081082, -0.49449266586575158, 0.61064004632820534]]], [[[0.62478795132111631, 0.25271661972979675, -0.17060999637199981], [-0.061971037311694177, 0.49104445301128608, -0.41660486275651554]], [[-0.78038795374141356, 0.86112790571353393, -0.12875901322010619], [0.16268340155592242, -0.20443263834992509, -0.061127556077143153]], [[-0.89503474245869841, 0.34710153183459846, -0.76788632540943969], [0.15309796905838979, -0.77530433621166028, 0.92559302007988631]], [[-0.11764391259382889, 0.71780829747329311, -0.25185291850900793], [-0.59717329579851897, 0.87468938076280445, -0.3109923830330521]], [[-0.82983746762231747, 0.018826329921166618, -0.14964842987258486], [0.13290058220322609, 0.32599885166463194, 0.31640695011919551]]], [[[-0.91016298389691919, 0.90033704937093906, 0.36093335933521353], [-0.60216361977562438, -0.16625352814860461, -0.9747943121546736]], [[0.59273883075863898, -0.41441744851411078, -0.97532147856659601], [0.78330213503872703, -0.4303656182067146, -0.54064289133952848]], [[-0.39884127214270682, 0.61205611098312263, -0.2110635706393662], [-0.24925576997365528, 0.76356907532772733, -0.86744585931790397]], [[-0.38544304808603869, -0.34546258715014466, 0.4480980937191994], [0.76979288864479734, -0.99476898168937677, -0.36464181305053889]], [[0.19381965553989722, 0.0875919787443733, 0.30894633324958765], [-0.89204445636762375, -0.79616710187950734, -0.66578645512976586]]], [[[0.41481127888162361, -0.40068271604445238, -0.57359633510277996], [0.4356362547259327, -0.28312753540351077, -0.24826797657510524]], [[-0.69036938832009587, 0.35283192627503479, -0.78899026725888288], [-0.78930945103908212, -0.26455447255466202, 0.59807142047551642]], [[-0.55764602723807388, -0.15008013324290426, -0.50551279702334351], [0.025022450951993624, -0.54127592855106155, -0.49268460638179956]], [[-0.51227661280638759, 0.8271927082785393, -0.64062911377693244], [0.46317752553847003, -0.68574735955245547, 0.6216709705800485]], [[0.50047559524097429, 0.5955803269767761, -0.053264349717527137], [0.83642698262462645, 0.65311913807080346, 0.67739096927355558]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[-0.55829930362237334, -0.47215083034962735, -0.24487437544756352], [-0.40116692809263044, 0.086434927935702399, -0.51330936380191683]], [[0.75439330399409354, -0.0071084410730133385, -0.14241566798449878], [-0.11404535272029448, 0.55441685054333401, -0.2452989197788713]], [[0.84540766826336333, -0.82809834218297285, -0.99147134145811955], [-0.82812184105238651, -0.40321315166421989, -0.54229175444691013]], [[-0.26629932146639379, 0.54222554971448678, 0.17309109116294086], [-0.31301405768927171, 0.4276131966456429, 0.76727027110774837]], [[0.47550133937744499, -0.68705683730951983, 0.1603825919893429], [-0.59733534553355394, -0.94437749650689096, 0.50566173482024857]]], [[[-0.52106510882408186, -0.74639510537187137, 0.066904543209533429], [-0.93850404154172296, 0.49882862552380036, -0.46709074852249577]], [[0.34099395222421647, -0.080688919756234156, 0.83295123052383357], [0.97489433404360604, -0.28358134892709819, 0.88120524770244035]], [[-0.035588318978808875, 0.055035084210262042, 0.95125775626737186], [-0.68878055526986137, -0.71096671593593119, 0.5566906353835086]], [[-0.28546610587200649, 0.17628576791210526, 0.57268974369482128], [0.64828990923710506, -0.50049085493868439, -0.77614004079858478]], [[0.80398585593913774, 0.27285775392001188, -0.60174995104610907], [0.66211336174065916, -0.56219686832423355, -0.54895338942615646]]], [[[0.85722833479487681, 0.077171963358587004, -0.25766678999485215], [-0.6654053398744495, 0.68596665953020319, -0.10499926807103166]], [[0.047101066027077421, -0.16045430040490793, 0.49216874303282432], [-0.060593626930755873, 0.91029450684495972, -0.32239254013101726]], [[-0.76928261100315454, 0.15704110409700855, 0.18966201034934604], [0.10659685144077224, 0.25349905039036025, 0.45239968025905419]], [[-0.37764841910697866, 0.19805171087477658, 0.5768126437815404], [0.026348527345439132, -0.61190734368386179, -0.16373482421382057]], [[-0.65273145702632585, -0.87430998266884807, 0.56960743187779705], [-0.66830785412063953, -0.41378571908595529, 0.9392522136744601]]], [[[-0.27453298415024863, -0.49488508338559001, 0.11631687631696996], [0.079781365953248251, -0.95158901182904621, 0.55610361613892723]], [[0.027166296423821956, -0.64337781802639782, -0.087708706543212056], [-0.88558866756351518, 0.14011693182793805, -0.87526531435679744]], [[0.34060335340268222, 0.33585742258467577, 0.34790192947939214], [-0.37018553341362592, -0.35467075306194662, 0.16509506215010084]], [[0.17155516817089356, -0.79547668178453979, 0.8604218378077253], [-0.468794530370926, 0.46249100837284796, -0.70202231620251232]], [[-0.92083267940301461, 0.25664245352464388, -0.29445213763795386], [0.18260389598280558, 0.95829119061728063, 0.35701880099321692]]]]))
      arg1=Data(numarray.array([[[-0.11199722409044477, 0.87616867667841913], [0.45940225744072061, 0.14364959647475084], [-0.37388200260867044, -0.28130428620356684]], [[-0.45070643915918573, 0.54051144253357908], [0.47533732028234632, -0.29446349146424233], [-0.49193934571111786, 0.13899744689240001]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[-0.29737833524328972, 0.66212107722550972], [-0.063486247598722567, -0.99795092271121733], [0.67274790535484841, -0.97183770269821479]], [[-0.29015846443563009, 0.12498755099169778], [0.41504735497628875, 0.8671456456415052], [-0.65761911234775994, -0.54618343673469627]]]))
      res=generalTensorProduct(arg0,arg1,offset=2)
      ref=Data(numarray.array([[[0.4595623630800425, 0.55412777202683661], [-0.35150426019461511, 0.28358394541296339], [-0.011935850124754399, -0.59090093078277206], [-1.4723329243344625, 0.72360519212573449], [-0.62721273512865428, 0.5965236576546934]], [[0.57619890010831742, 0.395717865052297], [0.39072019690374016, -0.38419672797080773], [-0.34606943972209919, -0.078625603697163315], [1.2750135629174881, -0.55268596927415692], [0.096946450311359011, -0.66245717285045203]], [[1.052518303835257, -1.1816699973780997], [-0.183758912972254, 1.2091331579737572], [1.3067867519812288, -0.6822991006190755], [-0.9234933324687431, 0.14493013017729145], [0.25415201251690661, -0.24476737298579029]], [[-0.22486727272286711, 0.7515703346072129], [0.47017987442070869, -0.59784828140825574], [0.15631430568932586, -0.26351899736973472], [-0.16363536391833738, 0.38888788433931692], [-0.16229274520631998, 0.89297363199902169]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[0.52110109507900892, 0.64467164290125312], [0.10481495074175196, 1.2454826135349875], [-0.4362879049190958, 2.1927542960459592], [-0.075053737664068088, -0.97304358222667409], [-0.54106038001787216, -0.3251337659990024]], [[1.0338693869842235, 0.90521011447212874], [-0.51598632604085293, -1.1085469327127995], [0.18572613888228678, -2.0096101328183074], [0.57354585349374387, -0.85055461773581009], [-0.72569058826076704, 0.73991923378465652]], [[0.11366587800452137, 1.3099998967805186], [0.93469387292568884, 0.67087391952208697], [0.12317020742918489, -0.86434757326879552], [0.33383977315223307, -1.4461534420076985], [0.037321366220568919, -1.0685814281156589]], [[-0.5924976138060124, -0.91987335020968852], [0.86446853578168303, 1.2341551384978784], [-0.036922451613454449, -0.89174474823676753], [1.367975691595589, 0.79713314424605741], [0.16942013497031183, 0.079143881319528431]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank2_taggedData_rank2_offset0(self):
      arg0=Data(numarray.array([[0.54018104338284667, 0.12192554612850159, 0.40749161608756435, 0.42768037491420818, 0.41249916161733968], [0.38093782265565035, 0.30613753017660028, 0.31165576508949022, -0.80343484065058668, -0.39367886843932309], [-0.91949464266762582, 0.41577730697223791, 0.46300745240418495, 0.60046966755499498, -0.97151168755687523], [0.4177798377618962, 0.049754381209767828, -0.5669812161170229, 0.74321309974699545, -0.9194719286588231]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[-0.44938208689612269, -0.42583399895596119, 0.8533579318318274, -0.44448719886389765, -0.71091755823283531], [0.39334505527111907, 0.85858178418222941, 0.99373080105195455, -0.52512825149170017, -0.27292939112710912], [0.43829193218410145, 0.87520021150691862, 0.95276846127714854, 0.33640779887123551, -0.031906228570688366], [0.29458135579268063, -0.82657366035425706, -0.97445057102283972, -0.74743337165465284, 0.11412332346308629]]))
      arg1=Data(numarray.array([[0.97908192248337977, 0.58150371493734188, -0.14432480915840529, -0.60162920005814402, 0.19211442411795687], [0.37532267027370159, 0.24919248015395246, 0.58570051867157225, -0.62202194890593021, 0.24758571083273817], [0.64559861021010811, 0.96259529965026247, -0.20723062789779556, 0.67903790372852257, 0.66862152276438835], [0.098852670646387919, 0.1315163095692542, -0.78774868154727051, 0.68958766407775185, 0.15365396018918931]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[0.14310853156026271, -0.97637584077584605, -0.070391763357921411, -0.95178948097081695, -0.60052717379356557], [0.68263234930626049, 0.33620941274332816, -0.58147852207459927, 0.52253722040515371, -0.73591786890020283], [-0.15861154449256731, -0.40897766719146067, -0.96773924657982069, -0.90975993545779299, 0.47337379237376109], [0.32034845568344905, -0.41369284555918506, -0.97935834601888105, 0.85011472957182521, -0.23424809236950206]]))
      res=generalTensorProduct(arg0,arg1,offset=0)
      ref=Data(numarray.array([[[[0.5288814944443555, 0.31411728346585477, -0.07796152599721759, -0.32498868901699562, 0.10377657006893266], [0.20274219163368426, 0.13460905393272135, 0.31638431728588434, -0.3360044653670371, 0.13374110760431226], [0.34874013086981193, 0.51997573332050273, -0.11194205679871366, 0.36680340333257433, 0.36117667179509505], [0.053398338770946727, 0.071042617324981197, -0.42552690472166638, 0.37250218388545997, 0.083000956534902665]], [[0.11937509810332934, 0.070900158019487916, -0.017596881176530334, -0.07335396878394275, 0.023423656079744469], [0.045761421547528595, 0.030382929233886448, 0.071411855606778096, -0.07584036582427045, 0.030187023006894874], [0.078714963129669052, 0.11736495761058689, -0.025266707480991021, 0.082792067254052998, 0.081522044316318418], [0.012052665854821745, 0.016035197869036399, -0.096046688209658046, 0.0840783525461576, 0.018734343010873948]], [[0.39896767487487184, 0.23695788856073977, -0.058811149725487878, -0.24515885501716167, 0.078285017157557993], [0.1529408414641307, 0.1015438464548024, 0.23866805089680362, -0.2534687292016139, 0.10088910142742086], [0.26307602101840249, 0.39224951429277871, -0.084444743464913416, 0.27670225277504762, 0.27245766486218881], [0.040281634516268344, 0.053591793528247798, -0.32100098331454535, 0.28100119166909154, 0.062612700555747025]], [[0.41873412367941559, 0.24869772681840721, -0.061724888490288322, -0.25730500184020222, 0.082163568933195], [0.16051814033645842, 0.10657473333804376, 0.25049261741290418, -0.26602658031295467, 0.1058875496323462], [0.27610985565875079, 0.41168311864507884, -0.088628472633035971, 0.29041118524757253, 0.28595630353158241], [0.042277347243317928, 0.056246944583911704, -0.33690465146230986, 0.29492311070898597, 0.0657147833007653]], [[0.40387047217908734, 0.23986979488902202, -0.059533862778424727, -0.24817154062849514, 0.079247038883255239], [0.15482028682388313, 0.10279168914485094, 0.24160097291086455, -0.2565835324312799, 0.1021288981469376], [0.26630888545298925, 0.39706975408252515, -0.085482460269275556, 0.28010256599441136, 0.27580581757961919], [0.040776643765270022, 0.054250367436323867, -0.32494567070341379, 0.28445433329373232, 0.063382129757224681]]], [[[0.37296933575232694, 0.22151675903440299, -0.054978778555995172, -0.22918331751621004, 0.073183650424238647], [0.14297460080736846, 0.094926840812008015, 0.22311548031103381, -0.23695168686024926, 0.094314761605274744], [0.24593292888295251, 0.36668895754733427, -0.078941984178949515, 0.25867122054700048, 0.25470322706257148], [0.037656721119731132, 0.050099536611018167, -0.30008326754847653, 0.26269002328397484, 0.058532605036887758]], [[0.29973372158961947, 0.17802011107943566, -0.044183240618963372, -0.18418127738792395, 0.058813435310771205], [0.11490035529687752, 0.076287170412912483, 0.17930491020926889, -0.19042426315369693, 0.075795278021352414], [0.19764196401516818, 0.29468654759453583, -0.063441072601577206, 0.20787898674374597, 0.20469014160200738], [0.030262512443046112, 0.04026207818947266, -0.24115943576875462, 0.21110866432101405, 0.047039243874172083]], [[0.30513652563684668, 0.18122898518117811, -0.044979658819657466, -0.18750120864429884, 0.059873567833208664], [0.11697147395958093, 0.077662273056927661, 0.18253694325990011, -0.19385672638873347, 0.077161514134802309], [0.20120452880574283, 0.29999837458404965, -0.064584619887462932, 0.21162607741127631, 0.20837975223243546], [0.03080800470143942, 0.040987816080552159, -0.24550641804585177, 0.21491397104442614, 0.047887142521791867]], [[-0.7866285283743043, -0.46720034454840748, 0.11595558004810969, 0.48336986047945485, -0.1543514217278899], [-0.30154730978390409, -0.20020992058381529, -0.47057220288786061, 0.49975410540040338, -0.19891898613026324], [-0.51869641651839848, -0.77338260118551239, 0.16649630650298639, -0.54556270997783396, -0.53719382659775894], [-0.079421679688665606, -0.10566478522172697, 0.63290473643164102, -0.55403875500291888, -0.12345094501993291]], [[-0.38544386335265401, -0.22892572448979545, 0.056817627557202245, 0.23684870269894528, -0.075631389097629467], [-0.147756604132976, -0.098101813610596486, -0.23057791743494918, 0.24487689698970905, -0.097469262482377819], [-0.25415853033351499, -0.37895342833132645, 0.081582319096774575, -0.26732287356725476, -0.26322216449606151], [-0.038916207522275086, -0.05177519193253971, 0.31012000956609814, -0.27147609128384542, -0.060490317178500848]]], [[[-0.90026058245618745, -0.53468955057620815, 0.13270588882518117, 0.55319482632587269, -0.17664818375563746], [-0.34510718458837636, -0.22913115049461796, -0.53854848912616038, 0.57194584964067852, -0.22765373471175873], [-0.59362446340185926, -0.8851012210854543, 0.19054745214867125, -0.62437171464663155, -0.61479390815412516], [-0.090894501072740969, -0.12092854207234624, 0.72433069245120085, -0.63407216276917522, -0.14128399321862423]], [[0.40708004503534106, 0.24177604859099991, -0.06000698048116393, -0.25014376859603688, 0.079876817890286458], [0.15605064909202887, 0.10360857831614319, 0.24352098434550926, -0.25862261079373061, 0.10294052009484311], [0.26842525153817831, 0.40022528139272051, -0.086161792389511355, 0.28232855094431886, 0.27799765611865423], [0.041100697188368764, 0.054681497015631672, -0.3275280253846552, 0.28671490189152393, 0.063885829773080591]], [[0.45332222662402138, 0.26924055361670807, -0.066823462207153406, -0.27855880321088899, 0.088950410080952322], [0.17377719339296249, 0.11537797539436194, 0.27118370502193445, -0.28800079790242084, 0.11463402922434532], [0.29891696778906457, 0.44568879738731104, -0.095949325083077935, 0.31439960989122145, 0.30957674787774619], [0.045769523199334028, 0.060893031443260519, -0.3647335101779573, 0.31928422755399277, 0.071142928659010604]], [[0.58790899650270045, 0.34917534239042025, -0.086662670175285714, -0.36126008575029128, 0.11535888438262887], [0.22536987904510258, 0.14963252571524852, 0.35169539573350711, -0.373505312871454, 0.14866770947510141], [0.38766238284683041, 0.57800927957099391, -0.12443570624100217, 0.40774166430910663, 0.4014869434944468], [0.059358030279959964, 0.078971554685109871, -0.47301918892557515, 0.41407647539879322, 0.092264542393310944]], [[-0.95118953076825796, -0.56493765541936913, 0.14021323890180629, 0.58448979943198043, -0.18664140837885354], [-0.36463036077595645, -0.24209340692084949, -0.56901489929755622, 0.60430159327901667, -0.24053241174608198], [-0.62720659528959544, -0.93517258399754244, 0.20132697702245822, -0.65969325976637994, -0.64957362391767859], [-0.096036524879176313, -0.12776963185087856, 0.76530705098069229, -0.66994247524658024, -0.14927661816319623]]], [[[0.40904068673071181, 0.24294052768446261, -0.060295995355215189, -0.25134854959311081, 0.080261532939720145], [0.1568022442953087, 0.1041075939302028, 0.2446938676676679, -0.259868228898258, 0.1034363181038651], [0.26971808263288466, 0.4021529081182505, -0.086576778102436913, 0.28368834525388026, 0.27933659130461813], [0.041298652704978102, 0.054944862474886336, -0.32910551637396629, 0.28809582242100812, 0.064193526559312361]], [[0.04871361520683043, 0.028932357507888671, -0.0071807915728942882, -0.02993368856662057, 0.0095585342934598402], [0.018673947213465745, 0.012398417652187254, 0.029141166880744144, -0.030948317166708379, 0.012318473838863399], [0.032121359360890028, 0.04789333348952985, -0.010310631658766467, 0.033785110717990542, 0.033266850128674835], [0.0049183534589440107, 0.0065435126016105101, -0.039193948199194896, 0.034310007516077788, 0.0076449577096434143]], [[-0.55512105908781939, -0.32970168347174073, 0.081829455812489876, 0.34111245550047814, -0.1089252698200207], [-0.21280090402807172, -0.14128745544490506, -0.33208119235677913, 0.352674761042165, -0.14037644742114347], [-0.36604228514038695, -0.5457734536242359, 0.11749587342218638, -0.38500173644555163, -0.37909584409896863], [-0.056047607419504555, -0.074567277138798599, 0.44663870545825285, -0.39098325239810083, -0.087118909209263171]], [[0.72766651051512021, 0.4321811784929751, -0.10726408878501195, -0.44713870267351846, 0.14278195665481566], [0.27894472517943725, 0.18520311560886066, 0.43530029800532222, -0.46229486075704362, 0.1840089436010626], [0.47981734428660672, 0.71541343645495947, -0.15401651732243682, 0.50466986527577717, 0.49692827449127736], [0.073468599769370799, 0.097744644102250852, -0.58546513943435574, 0.51251058536651573, 0.11419763604060883]], [[-0.90023834358078159, -0.53467634229570826, 0.13270261063019548, 0.55318116091492664, -0.17664382006691692], [-0.34509865950593993, -0.22912549033443017, -0.53853518551942359, 0.57193172102865553, -0.22764811104774343], [-0.59360979926934387, -0.88507935668734461, 0.19054274511036501, -0.62435629097370893, -0.61477872107897136], [-0.090892255732309732, -0.12092555480973299, 0.72431279952071392, -0.63405649946890308, -0.14128050312121992]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[-0.06431041056519049, 0.43876581292280609, 0.031632797518080742, 0.42771714324444315, 0.26986615459718305], [-0.30676274971405032, -0.15108648753271667, 0.26130603173515654, -0.2348188665865672, 0.3307083077105204], [0.071277186869887113, 0.18378723757640653, 0.4348846821993213, 0.40882981837050492, -0.21272570269885266], [-0.14395885754897841, 0.18590615427138196, 0.4401060973530998, -0.38202633127611979, 0.10526689660044256]], [[-0.060940478279022048, 0.41577402876156738, 0.029975206084265373, 0.40530432084602169, 0.25572488789823555], [-0.29068806312178747, -0.14316939871512674, 0.24761332436202876, -0.22251411416845909, 0.31337884901692215], [0.067542188271851294, 0.1741565955038199, 0.41209627331771403, 0.38740671140590915, -0.20157865500746758], [-0.13641526394304962, 0.17616447876393862, 0.41704408089611605, -0.36200775486493586, 0.099750801921510437]], [[0.12212280051975559, -0.83319806817503761, -0.060069369597111226, -0.81221710302054484, -0.51246462703728946], [0.582529729805492, 0.28690696912103975, -0.49620930900220761, 0.44591128171009375, -0.62800135060276296], [-0.13535241957282912, -0.34900433623991028, -0.82582796201384667, -0.77635085698571904, 0.40395728044346163], [0.27337189560754788, -0.35302807110000972, -0.83574321268091156, 0.725452147447186, -0.19989746763998914]], [[-0.063609910326746857, 0.43398656250483875, 0.031288237718052836, 0.42305824030484146, 0.26692664132115501], [-0.30342134079702143, -0.14944078010195794, 0.25845975947645772, -0.23226110540001388, 0.32710607214134019], [0.070500801118977718, 0.18178533768782373, 0.43014770694292326, 0.40437664535023471, -0.21040859098779335], [-0.14239078772711172, 0.18388117411263719, 0.43531224790591228, -0.37786511486032043, 0.10412027841653153]], [[-0.10173836781910861, 0.69412272864189606, 0.050042740526117055, 0.6766438537634708, 0.42692531204578715], [-0.48529532293955063, -0.23901717476238235, 0.41338329107811195, -0.37148088481620478, 0.52317693441844404], [0.11275973191819468, 0.29074940453151438, 0.68798282218460982, 0.64676431189371608, -0.3365297406057714], [-0.22774134189813725, 0.29410150762332932, 0.69624304398669112, -0.60436148776496912, 0.16653108184802606]]], [[[0.056291033256340224, -0.38405260905536054, -0.02768825204865313, -0.37438168599893573, -0.23621439436763897], [0.26851005916772491, 0.1322463100381949, -0.22872170140440187, 0.20553743184148213, -0.28946965481755443], [-0.062389066735066452, -0.16086934310607845, -0.38065544743397067, -0.3578495720960953, 0.1861992405251563], [0.12600748100682391, -0.16272403520174417, -0.38522576274502851, 0.334388425290222, -0.092140328840235999]], [[0.12287037835870925, -0.83829851140575029, -0.060437085775577444, -0.81718911073780209, -0.51560169232559128], [0.58609570040787595, 0.28866327745202625, -0.49924686694645531, 0.44864093899707974, -0.63184567689192017], [-0.13618098286232752, -0.35114077518793035, -0.83088328895166885, -0.78110330856286181, 0.40643011524137201], [0.27504534864071756, -0.35518914144362862, -0.8408592360786481, 0.72989302127537115, -0.20112114508789075]], [[0.14221135570474877, -0.97025474638195708, -0.06995046338912686, -0.94582252335795403, -0.5967623494673463], [0.67835279130008785, 0.3341016490466347, -0.57783311753569822, 0.5192613306126751, -0.73130425337064586], [-0.15761717716468665, -0.40641370483052991, -0.96167229671318022, -0.90405646942744711, 0.47040611789257925], [0.31834012748207041, -0.41109932280699146, -0.97321855370625998, 0.84478519120347562, -0.23277954447523752]], [[-0.075150332951785553, 0.51272253806535872, 0.036964703611562802, 0.49981154593039795, 0.31535378474746745], [-0.35846953200286807, -0.17655306104895527, 0.30535079957701228, -0.2743990568906915, 0.38645126373706173], [0.083291403025779878, 0.21476572727140622, 0.5081872184563565, 0.47774064418415285, -0.24858195189122828], [-0.168224024401116, 0.21724180064312082, 0.5142887358286985, -0.44641926150739208, 0.12301029116126289]], [[-0.039058524383837182, 0.26648166373417093, 0.019211981113641041, 0.25977132352255228, 0.16390151589876148], [-0.18631043145982576, -0.091761430311239484, 0.15870257898331167, -0.14261576540643062, 0.20085361587849207], [0.043289752264086774, 0.11162202569115083, 0.26412448333883776, 0.24830022525633352, -0.12919762092810119], [-0.087432508958193447, 0.11290893645210957, 0.26729567707418583, -0.2320212955302253, 0.063933189223095016]]], [[[0.062723314809577005, -0.42793765379152215, -0.030852141971989409, -0.4171616506472024, -0.26320621533103955], [0.29919225134881339, 0.14735787312975537, -0.25485734496363183, 0.2290238479694845, -0.32254686468907617], [-0.069518160302351903, -0.17925161197349168, -0.42415230423385619, -0.39874043993547953, 0.20747591410481142], [0.14040614361369189, -0.18131823661087429, -0.42924486177724119, 0.37259842740220017, -0.10266904901506893]], [[0.12524861708998647, -0.85452434235726593, -0.061606886179197781, -0.83300635505571929, -0.52558150951978067], [0.59743997649430391, 0.29425054914357773, -0.50891012550641967, 0.4573246858188279, -0.64407547451317837], [-0.13881685728733395, -0.35793734082757256, -0.84696559329020515, -0.79622208793318106, 0.41429684320734789], [0.28036903617006936, -0.36206406593229779, -0.85713463157679071, 0.74402059112640839, -0.20501397998688042]], [[0.13634929541030374, -0.93026010744418497, -0.067067052061111951, -0.90683499924434108, -0.57216335133041019], [0.65039057306653081, 0.32032972484635452, -0.55401439674272634, 0.49785698344545654, -0.7011593355784046], [-0.15112007718697534, -0.38966102266672575, -0.9220314328813628, -0.8667905738377194, 0.45101561976887677], [0.30521790519403058, -0.39415349590478982, -0.93310174437534255, 0.80996250280318716, -0.22318419452399785]], [[0.048142826101882717, -0.32846044746645431, -0.023680338169903233, -0.32018940428218823, -0.20202202469825731], [0.22964284606841945, 0.11310346850077374, -0.19561390970201506, 0.17578559614479142, -0.2475685104267277], [-0.053358160558311607, -0.13758327680737201, -0.32555502982322532, -0.30605033738859344, 0.15924663553578622], [0.10776771884826863, -0.13916949958334343, -0.32946378549038563, 0.28598522496327333, -0.07880288514381005]], [[-0.004566053518377312, 0.031152470746692175, 0.0022459356911916466, 0.030368012731031731, 0.019160557269966998], [-0.021780223766711529, -0.010727174370605535, 0.018552786634258224, -0.016672191990939, 0.023480363734383749], [0.0050606961925297603, 0.01304893492971766, 0.03087690959820151, 0.029027008445171039, -0.015103572418850799], [-0.010221111049303159, 0.01319937848846984, 0.031247631240689727, -0.027123954873027583, 0.007473973177389054]]], [[[0.042157105252521816, -0.28762211893896722, -0.020736101086614028, -0.28037943573359508, -0.17690410904645529], [0.20109076296658096, 0.099041024636190564, -0.17129273139705964, 0.15392972283908896, -0.21678768357268194], [-0.046724003820991566, -0.12047719569018821, -0.28507793931127084, -0.26799831523301826, 0.13944709355418544], [0.094368682401321888, -0.12186619932655678, -0.28850070937711925, 0.25042794961659631, -0.069005120642057008]], [[-0.11828974275968906, 0.80704655259155633, 0.058183977497547772, 0.78672411517272667, 0.49637994418474457], [-0.56424591964230153, -0.27790184493680797, 0.48063483040858518, -0.43191550294162706, 0.60829032661694493], [0.13110412490566348, 0.33805016737359078, 0.7999077713139533, 0.75198359989500063, -0.3912783082781558], [-0.264791595603102, 0.34194760961622395, 0.80951181286731755, -0.70268244374325295, 0.19362330314086143]], [[-0.13945219029713807, 0.95142999557692842, 0.068593293999431121, 0.92747180322554479, 0.58518404741787211], [-0.66519148258014815, -0.32761945423098976, 0.56662207787311014, -0.50918669280448947, 0.71711558757571392], [0.15455911010159676, 0.39852852133030775, 0.94301406143091893, 0.8865160886005482, -0.46127936228585864], [-0.31216373556702182, 0.40312322958321134, 0.9543362995140825, -0.82839478366619201, 0.22826318737047219]], [[-0.10696409225663345, 0.72977588667323712, 0.052613153023327648, 0.71139922086744978, 0.4488540502787644], [-0.51022219844251504, -0.25129413494877656, 0.43461645229898221, -0.39056175646247449, 0.55004957401298538], [0.11855156148343157, 0.30568355672036795, 0.7233206079536888, 0.67998493595553755, -0.35381536968686983], [-0.23943912633584147, 0.30920783838570925, 0.73200511062301643, -0.63540411861715274, 0.17508484148340747]], [[0.016332021237579153, -0.11142725589840471, -0.0080333419788330904, -0.10862137880559555, -0.068534156903216126], [0.077904272406244868, 0.038369335561841127, -0.066360261461556852, 0.059633684225799372, -0.083985392994762972], [-0.018101276597104962, -0.046673890602069522, -0.1104416190653523, -0.10382482738800622, 0.054022990426018588], [0.036559230428862423, -0.047212002428115477, -0.11176762930898596, 0.097017918263659533, -0.026733170816095598]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5, 4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank3_taggedData_rank3_offset1(self):
      arg0=Data(numarray.array([[[0.58634465887451337, 0.81027860779490601, 0.97471164534982746], [-0.051325473674472599, -0.32077037536315989, -0.5564679778312549], [-0.19412831768519423, -0.48929977920929768, 0.89483365513764435], [-0.82215943976838801, -0.99754492347502288, 0.18970940770192435], [0.010991112999245489, -0.66648748099079058, 0.52307671666990574]], [[-0.82001134007361465, 0.45175621044042824, -0.0068013111228630851], [0.52128392645763966, 0.39659367947788815, -0.20945946108782554], [0.49931790550456046, -0.67778364333963181, 0.72259006115370594], [-0.25851825558597241, -0.85454467697848613, -0.35348576869582038], [0.079310222806198816, 0.65871301335194321, 0.15906084820920441]], [[0.46249145578672457, -0.51247820549356482, 0.14023955427985624], [-0.13313454724436613, -0.70518195947134465, -0.1484583718019834], [-0.67553307276471064, 0.39410753774982066, -0.10029933525096602], [-0.50386769366294493, -0.67710959364416379, -0.57417922083057893], [0.24659090082317392, -0.02879453779091512, 0.91217760382440272]], [[-0.74278194931165675, -0.83251894718855213, 0.14973834108020578], [-0.097781557908017236, -0.99856700782241137, 0.61198679743112816], [-0.84335504577770681, -0.47666281023143053, -0.14132709174995961], [0.046677175889657807, -0.38806485835234317, -0.87600095018868829], [0.64126541073572518, -0.17483122887546632, 0.47457696104607461]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[0.3974492493983226, 0.41108610098860487, 0.94852343297103769], [0.085196484431388386, 0.010736818373726642, 0.67971800644368852], [-0.69897847698877746, -0.2128728421458419, -0.40178975070564626], [0.1441406265629448, -0.48433454174113266, 0.87027121444846189], [0.21532505294750126, 0.82259129207456927, 0.8070719459953597]], [[-0.11744314541653278, -0.70549162628158713, -0.99582790269004851], [0.17961145423423197, 0.046492176619702397, 0.7715581212537741], [0.49172917125747029, -0.15540525739693445, 0.67116064472217962], [0.59453206703386519, 0.0087238446485460308, -0.35538324481354588], [0.18048659668759437, 0.48967081994461803, -0.90139486113579004]], [[-0.060298858420418266, 0.10097486060332295, 0.1899672214770991], [0.4025455973064922, 0.21155216160425017, 0.92691515707283734], [-0.32215284550864087, 0.51092592666177761, 0.96218849231418502], [0.69671799345492769, -0.75405708581217024, 0.7493557766350929], [-0.41843851014237576, 0.55029091395335139, 0.98573648448223006]], [[0.25508123417739625, -0.45398999214150937, -0.50976343905420118], [-0.40694140784731769, 0.68916302150404762, 0.93198362708815918], [0.45949858513864839, 0.23205298891570525, 0.8408479002350151], [0.62002959673006908, -0.30735972309566884, 0.44596741607988899], [-0.66920011277082803, -0.072886225697005091, -0.47827977711305358]]]))
      arg1=Data(numarray.array([[[0.91124683642534032, 0.51470087760325445, 0.43068721693978307, 0.37281430719266551, 0.11718927842819316], [-0.98900007405237744, -0.66582333238018099, 0.76036319034491995, 0.87874330636969655, -0.85221232233341015], [0.13905007198318398, 0.66185306336482097, 0.53923114101041669, -0.55721556538255368, 0.96492519993295001], [-0.56601002358490859, 0.83824839935575213, -0.24204032211843107, -0.58912519379226391, 0.40411664487220889]], [[-0.39214463794509835, 0.21339859724883081, 0.074621999470203315, 0.94736489322768924, -0.68768291263725678], [-0.68546559363738302, -0.62118125698116322, -0.88722911941176985, -0.088031955360578173, -0.012679746516180534], [0.72923633186168368, -0.33800916328353803, 0.44595252735074076, 0.59525420507890558, -0.19457963438572667], [-0.54922052321800385, -0.87884782792274918, -0.067590316826167118, -0.77774878962796357, -0.89886473051773819]], [[0.34925791093161052, 0.72797961117878929, 0.11942501944108397, -0.6991605231528577, 0.20399878314090736], [0.28311835634276972, -0.93164824099765808, -0.9504123545237444, -0.36567403381445729, 0.10144553354531771], [0.047518266508797868, -0.19091595611524181, -0.58856777801399396, -0.26144831297130988, 0.46932522821446399], [-0.95953189567487751, -0.32718614567075188, -0.70646730708665317, 0.14421038810666409, 0.54326793514609073]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[0.26535971416240089, -0.034493782304179765, -0.24268617858884434, 0.097035569697437651, 0.17818387307491546], [-0.61248221713670903, -0.66786568067009289, -0.44623523709680857, 0.11236829661009895, 0.87389603291895313], [-0.22563197401173563, 0.98246725593934903, 0.13229937597645347, -0.96929970266358456, 0.62179891427306577], [0.05299472140053707, -0.55982328421351646, -0.983396211298738, -0.24863095376946664, -0.26209857704865547]], [[0.86437922734015693, -0.54043427588768034, -0.27827474377775374, -0.62712166816170645, 0.61427577526755606], [-0.79306443478097566, 0.82837874906880016, 0.33009304052887645, 0.86684507304871428, 0.48075100547634531], [0.19759993588340197, -0.17232899233510501, 0.84106196655812893, 0.96584203140672753, 0.97711177278484285], [-0.70460078421529726, -0.36416162985849776, -0.73447754111789143, -0.65434090902738618, 0.54088868989701089]], [[0.58879081828681912, 0.26724443894298422, 0.3366033974270457, 0.16156973803708663, 0.78728478409250147], [0.97590924452611683, 0.22770601487127351, 0.059442320120800529, -0.29178164248888638, 0.14426159940912431], [0.23273707558669399, -0.73056119822578114, 0.76141394813703522, 0.51945988636478457, -0.53141609904774034], [0.73206941810336734, -0.28837281941486848, -0.13334670142356986, -0.045413413616177012, 0.20787442347794349]]]))
      res=generalTensorProduct(arg0,arg1,offset=1)
      ref=Data(numarray.array([[[[0.55698405718149746, 1.1842746333780667, 0.42940071633511334, 0.30474728064675527, -0.28966145600769666], [-0.85935425901131746, -1.8018202286602354, -1.1994458700471828, 0.087489294819571017, -0.41108412786621551], [0.71873247449076771, -0.071895591292231414, 0.10383722512673321, -0.099235337338605512, 0.86557178733590223], [-1.7121655079228213, -0.5395212690828739, -0.88528794920102571, -0.83506007259444237, 0.038150356775301375]], [[-0.11533263624127744, -0.49996655662017708, -0.11249795126621964, 0.066038979182503343, 0.10105472045812985], [0.11309165379345162, 0.75186265560634824, 0.77444485778542282, 0.18662201706939771, -0.0086437027474861317], [-0.26749661638292993, 0.18069202023771713, 0.15679446792324922, -0.016852947941073421, -0.24827432127675289], [0.73917317960557472, 0.42095346435188119, 0.42723023925869696, 0.19946743776018278, -0.034723510500230759]], [[0.32750520243811077, 0.44708675433915751, -0.013255586076615783, -1.161551613812051, 0.49627831660901933], [0.7807349178314249, -0.40047118551413974, -0.5639479758216247, -0.45473237568849811, 0.26241961919571954], [-0.3412877886135483, -0.13393463561515029, -0.84955476351486947, -0.41703918034848297, 0.32785647579998656], [-0.48000937900862378, -0.025484878049023663, -0.55211191499103496, 0.62396250252042185, 0.84749826188958433]], [[-0.29175078425804268, -0.49793629168504622, -0.40587630804271657, -1.3841891705927962, 0.62834681528400305], [1.5506086856548904, 0.99032671140759854, 0.079608964584651443, -0.70402307865852021, 0.73254819434440732], [-0.83275266794921188, -0.2431879718189483, -0.99984849712785306, -0.18527197798693104, -0.51018502423802981], [0.83119040109869047, 0.12544606494684182, 0.13239661867207844, 1.2875522634260892, 0.6674726726695106]], [[0.45406379019852727, 0.24421882679724238, 0.017467550472805654, -0.99302378796435231, 0.56632710645552142], [0.59407664550382089, -0.080632111272004425, 0.10254576471718108, -0.12294500982650101, 0.052147926988766559], [-0.45964287198846981, 0.13268968611233312, -0.59916112705317615, -0.53961142006419205, 0.38578359170691068], [-0.14208127062958137, 0.42381090306787828, -0.32714879195545249, 0.58731778638763121, 0.88769458949115598]]], [[[-0.92676192677196367, -0.33060763060080306, -0.32026969693229318, 0.12702122267195426, -0.40814902303663264], [0.49940236106159075, 0.27169662193101307, -1.0178536533171172, -0.75786139591476498, 0.6924056515927054], [0.21509121941850404, -0.6941262773048662, -0.23671079418190863, 0.72761105773346613, -0.88234419142169418], [0.22254693062467992, -1.0821728627946585, 0.17274636745395444, 0.13075567403910138, -0.74114289011496715]], [[0.24634087020933815, 0.20045561226611727, 0.22909023664883577, 0.7165068210998029, -0.25437128461836134], [-0.84670298214869177, -0.39829702287631985, 0.24356850797917207, 0.49975573006126661, -0.47052201967341184], [0.35174193706483453, 0.25095021912593574, 0.58123556974510715, 0.00036936034828907727, 0.32752633442975121], [-0.31188628189188194, 0.15695215693356357, -0.0050013605035957309, -0.6457579785592652, -0.2596171683650535]], [[0.97316137840257544, 0.63839211719966926, 0.25076760051697361, -0.96116201507562937, 0.67202242822711566], [0.17535043234327943, -0.58463077566539412, 0.29425381928116323, 0.23420646419096264, -0.34362721275405439], [-0.39049804005942867, 0.42161819511906568, -0.45830479154037906, -0.87060122531144524, 0.95281706866920768], [-0.60371446342204704, 0.77779966080059315, -0.58552971012574317, 0.33718964355370262, 1.2035784990969918]], [[-0.023926530718032177, -0.57274864083264543, -0.2173233852578485, -0.65880163604849451, 0.48524953793901815], [0.7413572383894208, 1.0322790176305876, 0.89756639739071442, -0.022683380878149056, 0.19528830044331796], [-0.67590903866387042, 0.18522890536228759, -0.31243711892345705, -0.27220265856630088, -0.24907357770860031], [0.95483826827542173, 0.64996786548535557, 0.37005692641860599, 0.76594438573015389, 0.47161105703910822]], [[-0.13048632694572823, 0.29718252875322027, 0.10230822615834015, 0.54240050348355739, -0.41124315635125258], [-0.4849298770589236, -0.61017553391014856, -0.67529818800048402, -0.046458889155802603, -0.059805450585909442], [0.49894384957285204, -0.20052657448300076, 0.24290318504118569, 0.306322610072287, 0.023007564180627882], [-0.55929304413455505, -0.56446933954165002, -0.17609018224254952, -0.53609867257424737, -0.47363065552141304]]], [[[0.67138923006519335, 0.23077416420104557, 0.17769512106866239, -0.4111303888943017, 0.43523024342109407], [-0.066413514564839737, -0.12024968048845824, 0.67306166082656138, 0.40024376602118283, -0.37341614744656121], [-0.30274431599908852, 0.45254974764191408, -0.0616916383927512, -0.59942763973045288, 0.61180544311496576], [-0.11487557700541362, 0.79218864104929088, -0.17637767691894787, 0.14633793606631407, 0.72373673255120752]], [[0.10336462839108779, -0.32708397704299796, -0.12769107937592528, -0.61390286283948448, 0.43905431510838577], [0.57301675734510471, 0.66500088483671427, 0.66552403053205933, -0.00062517378992265477, 0.10733999144708715], [-0.53981115827444437, 0.17858552814607054, -0.29889015686780984, -0.30676369385228447, -0.060926090994721807], [0.60510643589446178, 0.5567213347076031, 0.18476838690229974, 0.6054780919768491, 0.49940863231319288]], [[-0.80515486945745107, -0.33661134075850663, -0.27351261664891735, 0.19164058661802752, -0.37064719514480976], [0.36955851872995482, 0.29841716521583495, -0.76798843868915956, -0.59163736058367289, 0.56052550549627989], [0.18869856224965412, -0.56116684920496518, -0.12948226022473605, 0.63723480416758527, -0.77559719430924634], [0.26214695364911339, -0.87980851756220213, 0.2077265904708645, 0.076992685874031463, -0.68173293733870832]], [[-0.39415958054617567, -0.82182614751882088, -0.33610801103810362, -0.42787549859645652, 0.28945694373397712], [0.79989983866239145, 1.2910277164714792, 0.76333592663707872, -0.17320064976678748, 0.37973991796856671], [-0.59111975665049998, 0.0050028455439074804, -0.23571649776514458, 0.027828777515779751, -0.62391969172943673], [1.208019926691704, 0.36057349412758322, 0.57336119876498826, 0.74065971129831432, 0.093075450894949396]], [[0.55458204617352003, 0.78482253644774336, 0.21299167088487911, -0.57310488906761359, 0.23478244253909281], [0.034113469653053285, -0.99612800822202752, -0.65389886772653916, -0.11433472097019917, -0.1172463531085093], [0.056635557875445552, -0.001209498647494256, -0.41674984952514649, -0.39303165357382575, 0.6716525670011203], [-0.99902187586919811, -0.066441429458184598, -0.70216236449314595, 0.0086674909496435998, 0.62109072526468245]]], [[[-0.29809256014436791, -0.45096243737355113, -0.36414841468360365, -1.1703100982268315, 0.51600941312890647], [1.3476681702310889, 0.8722032567204725, 0.031537830389965049, -0.63418181845359933, 0.65875434513356501], [-0.70327164037469159, -0.23880091436155637, -0.85992624930845718, -0.12081957694274122, -0.48446180748307544], [0.73397980614023228, 0.06002937768318637, 0.13026815908885514, 1.1066759876334928, 0.52949940925892758]], [[0.51622079283054034, 0.1820928584435304, -0.043541798591227476, -1.4103386999686585, 0.80008308016221219], [0.95445399100785688, 0.11523992849018549, 0.22996841661212308, -0.22180676409873418, 0.15807555227287029], [-0.71270732282805205, 0.15596973059312494, -0.85823605144592685, -0.69991872013473122, 0.38716975734618819], [0.016557984535059633, 0.59538961000425983, -0.34118812454958125, 0.92249471452186527, 1.1905343130551083]], [[-0.63094345713081679, -0.6386779985581561, -0.41566976021047009, -0.66717811602599031, 0.20013014567050977], [1.1208018649837965, 0.98928660700925097, -0.084027993794979133, -0.64745139441045418, 0.710424523494261], [-0.47158403750150968, -0.37007912605101834, -0.58415171616396444, 0.22314474617143537, -0.78735403040984742], [0.87474825964201797, -0.24178667535978751, 0.33618668723001621, 0.84718479374638611, 0.010863099615564906]], [[-0.11123827959649174, -0.69649854413011913, -0.11347134318253974, 0.26222817850895075, 0.093632508776707646], [-0.028170571083257462, 1.0261046080601464, 1.2123561745602225, 0.39551016524155547, -0.12372468420724189], [-0.31812657577488423, 0.32930546888634254, 0.36769721524659305, -0.027977517143301711, -0.29057984432961215], [1.0272642874681583, 0.66679240032821196, 0.63379770032237714, 0.14798983658049453, -0.10822238935610051]], [[0.81865996378201666, 0.63823348226170817, 0.31981492200021433, -0.25836152500767928, 0.29219100201821913], [-0.38000929744787448, -0.76050638118037206, 0.19166616385519603, 0.4053579505253081, -0.49613375622829275], [-0.015774208002964151, 0.39291371964499178, -0.011496856714833359, -0.58546943841116383, 0.87552269180632636], [-0.72231348233304615, 0.53591474315289556, -0.47866829610266987, -0.17337190498596081, 0.67411809738375894]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[1.0192831938204479, 0.017613065467646349, 0.10842589113453269, -0.065981604481711753, 1.0700973461282848], [0.35622442308843583, 0.29107676754913725, 0.01472323450002537, 0.12424693117314373, 0.68179488624086715], [0.21230989840181075, -0.3733155958513622, 1.1205501441988699, 0.50451667030171687, 0.14474995805386692], [0.42579612073865269, -0.64573150530147938, -0.81926606569333771, -0.41088432594842106, 0.31535470166641449]], [[0.43210011874459286, 0.17290956362128704, 0.20513159564348943, 0.11135565819393546, 0.55690765094558414], [0.60264676568756292, 0.10677022259147731, 0.0059304909234326672, -0.17944869440920311, 0.17767181274876559], [0.14109412470444754, -0.41472311005938406, 0.53784854220776801, 0.28087538182893407, -0.29774693828227144], [0.49455055876225357, -0.24761711092151673, -0.18230600602183406, -0.059076337645698342, 0.12477353500187117]], [[-0.60605370777237288, 0.031778115221426609, 0.093625755962746998, 0.00075433238447303319, -0.57163227950328577], [0.20482343548405452, 0.19899445467105686, 0.21775766771200714, -0.14583592183025623, -0.7711361830994351], [0.022136862015419562, -0.35650730215497201, -0.5774419879743683, 0.26320443337991339, -0.4291070763013759], [-0.18118978713787207, 0.5846897909538441, 0.89730044564257727, 0.33132573857053854, -0.015461061283805547]], [[0.13200809898615684, 0.48935417439291895, 0.39273338013208009, 0.45833294571977096, 0.41331984416051615], [1.1451306524793121, -0.2993130293907621, -0.17246514806492541, -0.65757533889898734, 0.018666321122891377], [0.074317168917165305, -0.41070805182886505, 0.27435099414152125, -0.15543513798096614, -0.84609863149787512], [0.98600013183395707, -0.1552797865999469, 0.097937701449675119, 0.2415600962369811, -0.11884300189835609]], [[1.2433659714612535, -0.23629841539068594, -0.0094996363000365847, -0.36457223122665372, 1.1790608183217655], [0.0033783091553188926, 0.72138406900852003, 0.22342026363293416, 0.50176614007557852, 0.70006279008734507], [0.30179533432047573, -0.51982196248329893, 1.3348534567538475, 1.0050202361117082, 0.50876149462318088], [0.022645311579467808, -0.65283777648112851, -0.92354505262417452, -0.628443499200384, 0.55626355178944409]]], [[[-1.2273113120160142, 0.11919344534725684, -0.11037672559466805, 0.27013726965761931, -1.2382930455579326], [-0.34040550026032745, -0.73273402782317465, -0.23966492712353668, -0.33418452543514127, -0.58545863354134697], [-0.34467224524475176, 0.73370584206760192, -1.3671370844942565, -1.0848485087063771, -0.23317121457923895], [-0.23814906688982068, 0.60983008780439851, 0.76645126520545737, 0.53605597774629477, -0.5578179113299111]], [[0.54213485342863987, 0.17487317301876409, 0.20318226893104022, 0.1129328919589465, 0.6679988513071109], [0.60609058973558827, 0.094245230003687952, -0.018939011088941714, -0.16464234849300252, 0.29061910658797369], [0.14823094493091193, -0.39522000293554693, 0.65034040013177652, 0.27160026311699081, -0.25290814663392874], [0.54159413973054771, -0.33997773177366319, -0.31366141359041566, -0.11011778837559397, 0.13845838556121287]], [[0.39132926122471745, 0.24638867870387138, 0.14982443794352499, 0.25361247407824716, 0.52055108654190374], [0.47706288732340374, -0.3043161346402764, -0.23082973135576254, -0.27528986762363983, 0.45183164635062201], [0.014546073213964505, 0.019564716151225015, 0.44538108743915678, -0.27808883674651841, -0.20275721340354108], [0.62689389930401362, -0.41223329517353646, -0.45891999076899026, -0.051050771414937593, -0.073421330073725255]], [[-0.043940822053959022, -0.12019652022864702, -0.26633554862419351, -0.0051993319480478917, -0.16849294835699635], [-0.71788068346431611, -0.47076381854125127, -0.28354628209314803, 0.17806308428903755, 0.4724850566104013], [-0.21513246986533385, 0.84223412626948879, -0.18460024413260742, -0.75246123992965641, 0.5670599427179619], [-0.23480497175893189, -0.23352691554330912, -0.5436788667461776, -0.13738827702172901, -0.22498246700589153]], [[-0.059577861185760861, -0.51175332430538389, -0.48347719707373643, -0.43520769330313269, -0.37670173524809492], [-1.3785649209015451, 0.07983906587795192, 0.027516448657224059, 0.70776018222869763, 0.26309959551451878], [-0.15375262839787041, 0.75146180223045655, -0.25061285314520204, -0.17023941718353797, 1.0697052336247412], [-0.99534121830537869, -0.01942214568754691, -0.41694402375027406, -0.32435078646353244, 0.030175191027883241]]], [[[0.18313063993549367, -0.0017226564562668606, 0.050478558209904573, -0.038481702893193956, 0.2008404295895439], [0.14224317534112949, 0.16717364579527816, 0.071530666528933307, 0.02532493250589727, 0.023253807805329846], [0.077770392021015045, -0.21542523089346383, 0.22159230561235049, 0.25465378130551736, -0.039781679431204232], [0.064726706115561278, -0.057795848110556117, -0.040197600776944058, -0.059706879398268714, 0.10990973169817339]], [[0.83543981244357679, 0.11949756162961589, 0.1554409147132117, 0.056153735986221864, 0.93142470100446006], [0.49025855527249013, 0.11746308218751619, -0.054700146310390087, -0.041840514921881594, 0.58720517803295869], [0.16670305879311115, -0.31813695026416827, 0.93695113772910066, 0.29563388389746786, -0.035565113907696622], [0.55083921248097778, -0.56969071550317396, -0.67484320543462939, -0.28060691094009882, 0.20160149717325443]], [[0.92267512045101374, -0.007870089300152483, 0.25988017714495837, -0.19621246168327902, 1.0139633373974861], [0.73112435245712293, 0.85749111658019861, 0.36960376039046999, 0.12594491705037014, 0.10290691011732767], [0.3975838486795209, -1.1074895500835402, 1.1197234829988221, 1.3055547171481592, -0.21240500673925433], [0.32731756077626512, -0.28317996253592237, -0.18676439217343191, -0.29791883003735598, 0.56080423562341819]], [[-0.025696592696761777, 0.5837470204507651, 0.29298691525947218, 0.66156518148454735, 0.2509013103481455], [0.90259170505914033, -0.91932608478708189, -0.51526566922794126, -0.79400991480673744, 0.35444865121659586], [-0.13180061597359322, 0.26699825887844497, 0.028536560722398407, -1.0143683048760339, -0.70179928763242994], [1.1168120373178914, -0.33153413594395997, -0.23123596186437617, 0.28615393593782856, -0.43469784389334709]], [[0.94501590288284965, -0.01952995099232957, 0.2802194295617787, -0.22643758957627563, 1.0395267187682151], [0.78185934166074589, 0.95976814591408888, 0.42696367241143973, 0.14237793437972451, 0.041085078000965364], [0.4325679830578576, -1.2260740407698816, 1.1580231129646588, 1.4491369798761293, -0.24632511808879798], [0.31171709281183013, -0.25040282436250061, -0.1241301805230452, -0.30080674968152132, 0.61222767301405145]]], [[[-0.62487526765136159, 0.10032159183796754, -0.10715884668113435, 0.22709656876916084, -0.63475269118601718], [-0.2936722560394347, -0.66251186510409954, -0.29398669341790856, -0.21613633059155798, -0.06888095561678638], [-0.26590372778615479, 0.70125798690698971, -0.73622762022944643, -0.95053443881550714, -0.014093233365684354], [-0.039782560770240005, 0.16952724137395106, 0.15057480696098174, 0.25679323150916572, -0.41838126158901157]], [[1.0364557467950224, -0.10934292863704154, 0.22069124717414362, -0.3210965045414344, 1.0845622817851841], [0.61222513102431753, 1.0548884796523121, 0.46447878191231456, 0.27973454341369736, 0.11014078224381713], [0.44490470588529463, -1.1994404526785938, 1.2354160449284266, 1.544198907308828, -0.07491752737618973], [0.17512615962514766, -0.29191019991747136, -0.23026706521902313, -0.39209388553810987, 0.67315480693758212]], [[0.8175977197054789, 0.083452692137610751, 0.10694381821084453, 0.034917824443374018, 0.88640652483295368], [0.35512355438915522, 0.076810553820493482, -0.078463433351321291, 0.0074430820206834725, 0.6344157613772603], [0.13787256422477195, -0.2028379932203363, 0.89619563877971997, 0.21552144296526657, 0.065617317693292432], [0.47640531457233981, -0.5842204813707047, -0.73443117032561611, -0.30427310867003382, 0.17987168433458431]], [[0.16143703643853716, 0.26390287535361268, 0.085171982143897429, 0.32497170601055492, 0.27277900365657448], [0.29922268708548039, -0.56715728850986313, -0.35162702172657684, -0.3268866971470078, 0.45841388168161096], [-0.09683961120736248, 0.3363192780050665, 0.16308676660457527, -0.66619325980115252, -0.15178533840831873], [0.57590330445086879, -0.36378326857775545, -0.44345422653609745, 0.026706587882757093, -0.23605105347577204]], [[-0.52218683143046318, -0.065344153077757081, 0.021697415963433553, -0.096503221035782613, -0.54055530181229028], [0.00091898620920671803, 0.27765120631302631, 0.24613137551604389, 0.0011753165333557303, -0.68884885567992227], [0.025277192291298725, -0.29549414158391241, -0.51400548304842697, 0.32981173137271491, -0.23316031934786918], [-0.33424237987465644, 0.53909905946668235, 0.7753991819664463, 0.23579661882128722, 0.036550929260707549]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5, 4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank4_taggedData_rank4_offset2(self):
      arg0=Data(numarray.array([[[[-0.20221383541020055, -0.87757021077249786, 0.011154048480889633], [0.42166882610704093, -0.49239095775233155, 0.85485624582291275]], [[0.18069326986529322, -0.4962465020596174, 0.32038163872020786], [-0.22005258315665155, 0.062589278483885513, 0.47369512585711737]], [[0.061233310836841026, 0.87655500601801117, -0.16501666821251604], [0.93329176810208603, -0.86612707053374294, -0.78028821019378913]], [[-0.83333896622625003, 0.72015524655698648, 0.9739639056377416], [-0.10267809978885389, -0.56952793739028018, 0.93304140843702332]], [[0.35573518027381623, 0.073342756224150651, 0.45881834464101945], [-0.487255591698454, -0.079067569187053044, 0.75528935706643674]]], [[[0.40557581494656247, -0.77754721649769554, 0.094251923056723586], [-0.12208613548320413, 0.48436444827630454, -0.55765756861752624]], [[-0.6423985611990215, -0.1409585445123851, 0.9454274326658656], [0.72583720547928121, 0.56336322878464129, -0.044612820329444469]], [[-0.70729205526454586, 0.055797245670030415, 0.6128559937276099], [0.28887128971618603, 0.55704810898734114, 0.83578791183481149]], [[-0.84124779386866955, -0.17472291624286229, 0.75865732481934267], [-0.066913345512014777, -0.18583424581008079, -0.72643095276905201]], [[-0.43441953098965214, -0.77562006779665249, -0.68820100614190749], [-0.79522300038848237, 0.15731582659387056, 0.54942031799351332]]], [[[0.80989804867473447, -0.75332560236846069, 0.59223333385274124], [-0.95844883618714305, 0.41999399037100238, 0.80606177461413275]], [[-0.49417080964331173, 0.069859710740675762, -0.34820203271819605], [0.3582327092163331, 0.49047139642857851, -0.44634715596790997]], [[0.92494539344556093, -0.29581781122201067, 0.22883654351307769], [0.99943052731417525, 0.59670053207954576, -0.33260956949221132]], [[0.27115110832366729, -0.80936037050871179, 0.86755834056849457], [-0.58084229089200345, -0.26733652452608059, 0.12643965661074263]], [[0.18816003340182208, -0.95048138890075839, -0.14586467030179118], [-0.93551485650145016, -0.225638651907212, 0.6603976695463778]]], [[[0.098003364124334746, -0.31597748038895479, -0.97941667887435657], [-0.59164387884478087, -0.69945572643849308, -0.047285851464631046]], [[-0.011880608800353798, -0.30424441167631056, -0.76654428594837376], [-0.65832898514303873, -0.087628008188346929, -0.73741886061816997]], [[0.082543329319756165, -0.19967282919928819, 0.272946940659472], [-0.043042782800757129, 0.77581343105621614, 0.81538496048917586]], [[-0.40108998509160587, 0.12162545146570691, -0.72271708094790243], [0.1646399317261289, -0.7746554715253664, -0.39110885514229055]], [[0.12714691295350677, -0.65465021105134036, 0.38708936272631078], [0.5797076347341561, -0.94339371066660127, -0.4217937678835848]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[0.21866297364992837, -0.47683657657818146, 0.038377118073626315], [-0.70355899180518899, -0.29042634919480426, 0.73415377146674254]], [[0.32461823400045065, -0.75673750935242934, -0.36265688206474644], [-0.42525554742443439, -0.40874041320454402, 0.090794563148781426]], [[0.40050359726507878, -0.32656148506338023, 0.58452089562109699], [-0.77464643743661887, -0.061738487853877144, -0.88098922124584789]], [[-0.63331818712229904, 0.31923390016625164, -0.027610326902609561], [-0.99315395597001221, -0.44574088541382029, 0.50004066269190606]], [[-0.38633435284927953, -0.92458717282738734, -0.14088692841341777], [0.18985234651574467, -0.87299050714040916, 0.33180862722823079]]], [[[-0.03769739601513078, 0.18025592664369561, 0.17546335018990922], [0.86980035650455201, -0.41471841455898772, -0.48922243972715984]], [[0.77201674208698279, -0.60645349249621305, -0.94745643478778319], [-0.27136510679251802, 0.052452319102121781, 0.42574088802576338]], [[-0.73519329817725332, 0.60674875889635893, -0.72031356204239283], [-0.34653024369177121, -0.75834792214957858, -0.21460034750209744]], [[-0.73663845669380379, -0.87506983327754106, -0.51288308283273354], [0.77790800625275058, 0.95834042629779947, 0.13378342890647832]], [[-0.4558171975312737, 0.30345789446103644, -0.32936467344140152], [0.017347836555849705, 0.22881643953643627, 0.31903429711799269]]], [[[0.6642468347054169, -0.31048801054173469, -0.72099060758052214], [0.76904491706866529, 0.71036672337622808, 0.1526916229599975]], [[0.059410514824332239, -0.63356908623756314, 0.35923375471082064], [0.17123939012316525, 0.93520574354856101, 0.055595674941145257]], [[-0.17974783251663196, -0.16115219256198854, 0.53486531090083611], [-0.0078035751164993172, -0.12716231381111154, -0.60726761075083657]], [[-0.26028991912758115, -0.96900432720725949, -0.11287370793895191], [-0.81740162197970445, -0.98631578792946595, -0.2258889841873053]], [[-0.39656170237391586, -0.30760601101008667, -0.15390482259785032], [-0.98313932539880278, -0.97959565364274392, 0.80387805687345981]]], [[[-0.61184863249980004, -0.49613268322345827, 0.83715837370533075], [-0.78354351461692606, -0.8998811426265847, 0.39868925918902076]], [[-0.50859466079938609, 0.58854311171781748, 0.48728627164512828], [-0.317928773887592, -0.70038936460295376, 0.23593498551373093]], [[0.96525798299836829, -0.62603814526401913, -0.41238664883440812], [0.9749022594949508, 0.28800707484871491, -0.061698774863069072]], [[0.86964092188256537, 0.65872252791157893, 0.37251418487387777], [0.5005772961210766, -0.15686831364483922, -0.1739516090093518]], [[0.44084860314150065, 0.46561127357007592, -0.68603176160782842], [-0.48084096543659549, -0.70833314662142888, -0.86857617366568651]]]]))
      arg1=Data(numarray.array([[[[-0.77437451201162033, -0.046914699242393665, -0.52151480114827931, 0.27108953796627389, 0.41340691699410304], [-0.26527366406203612, -0.86414721087338764, 0.70707046183425604, -0.019624697965859639, -0.58701663722791886], [-0.82420360201111786, -0.51921765386985141, 0.93130785014634299, 0.39874413908256812, 0.54811811257688881], [0.94523467852331144, -0.45216165103637995, 0.57148771695346356, 0.8886912849978208, 0.40851257791421713]], [[0.33038522211403776, 0.77527797026382372, -0.98761909589272157, -0.66529342037473072, -0.31989456489974177], [-0.17446221923270633, 0.25561560282992701, 0.55989769907359199, -0.47890199310764348, -0.76008138002471082], [-0.63413911730400163, 0.81120809564098084, -0.84822660035645381, -0.5914777041134609, -0.23451687742912086], [0.18864690411218876, 0.028823025643342604, 0.81723771157003311, 0.22372315024418565, 0.58624099398049001]], [[0.028263362541893766, 0.65363815161853145, 0.693118641661294, -0.22334359435976747, 0.34851307391792763], [0.88018459135290761, 0.59194841162193823, -0.31445408837100453, 0.31174096288607434, -0.19054558798722709], [-0.69168344213868971, -0.15051733393471234, 0.95493638161073102, 0.22243768385131024, 0.14075320678420011], [-0.89098427749525611, -0.97848268768756119, 0.49250409200560541, -0.83133076491979097, -0.68623642430962351]]], [[[-0.45468795877595425, 0.38404897604029431, 0.035322993011166703, 0.85591458458059422, -0.53563392469907289], [0.71143178776983462, 0.66820570575266913, 0.5177171549252233, -0.86050186204424906, 0.75533084120324823], [-0.69163370590687934, -0.23882169465835812, 0.45063470826864416, -0.72244613071799613, 0.75814010240662366], [-0.55381142054229771, 0.23821901529325817, 0.12575166740526345, -0.78306091383227194, 0.61703803254214096]], [[0.74805888076623872, 0.84984296637952639, -0.3871181678650375, 0.13776074773126523, 0.26756972256454481], [0.083562171735150237, 0.11522713471610313, -0.35088564001114531, 0.46053283084701579, 0.27126460930265184], [-0.10349431714714608, 0.30048744649362247, -0.42096893466328389, 0.41075695847612259, -0.16976820252632097], [-0.70269480529272554, -0.301504069511352, 0.19208299995417288, 0.35238145422977007, 0.13994755236237433]], [[-0.34622537864011371, 0.17768910857593201, -0.68212101076607867, -0.23636644057295153, 0.95463233621495491], [0.33391739631756923, 0.4666268327615033, -0.27574837907899297, -0.32389168532110446, -0.93494168259533161], [0.74620618149692941, 0.93339071478720959, 0.11398896289475346, -0.90224287924995505, -0.68806687391690891], [0.22336015690926492, -0.74510627634629323, -0.50282356713760534, -0.93691706251264506, -0.62732115708174785]]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[[0.67756047221161064, 0.20305016435943735, -0.051039278925267162, 0.63518051856528768, 0.51105579279646518], [-0.45688040529731189, 0.91258494086401853, 0.038989563462340282, -0.17103344332240655, -0.51991724052498656], [-0.027902382365722289, 0.066602649651750667, -0.65282663483043413, -0.25666571460275667, 0.58906936771813334], [-0.10044736990696213, -0.17805084736635979, 0.34959229962027405, -0.73684442494635638, 0.70331685936444854]], [[-0.71263171883627185, -0.033684565348243378, -0.93957123095949591, -0.85868061635362536, 0.7727589549187972], [-0.39561690516886427, -0.69976421654304954, 0.13626566645750016, 0.41650006765725189, 0.15398041136338225], [0.010561563600324009, -0.50836427077781865, -0.24086841301541995, 0.72952601880393897, 0.82596924575108721], [-0.31352917019288018, 0.071468711633853044, 0.51403456881126997, -0.59188225547056472, 0.32410413709644303]], [[0.073098970043681488, 0.72022052998690134, -0.4529910732798279, -0.31723038073401777, -0.22349134583067798], [0.69500862082216108, -0.43800127085141427, 0.41826437441228159, -0.7129917474690628, 0.35066254970260924], [-0.20053854115614844, -0.3282079620005558, -0.94194768895060221, -0.88496929369418531, -0.26285606273418893], [0.54232965226885477, -0.3458851248529915, -0.99802934332123305, -0.25422995053562403, 0.65688857064120776]]], [[[-0.1899101186613148, -0.3395674933897983, 0.84857142107788275, -0.0037005136884700196, -0.62051278988602721], [-0.070533334497167921, -0.49478285691094515, 0.75253292670649441, 0.23434249052718115, -0.60342573823927248], [0.26165161650112245, 0.37749115193658711, -0.20904008219912251, 0.8447897949353822, -0.14758792126312836], [0.97086571059090732, 0.46793407342784987, 0.55969983833606096, -0.13366395562738798, 0.965936117296605]], [[-0.13675289892833975, -0.080295156412434787, -0.3807080983535458, -0.35349310797704647, -0.735380455882926], [-0.20243006269236408, 0.67519548896624904, 0.63182042959200069, 0.2640055162138959, 0.31515216535443913], [-0.0063763469351505453, 0.6188008533714171, 0.83897438566741478, -0.39802517415462946, 0.60088902059384086], [0.88213657091669817, 0.090581454934168137, 0.30413332512664804, 0.44226371678214171, -0.41052565115170991]], [[-0.15445685186457792, 0.084064167929118749, 0.45267314011922499, -0.32648898798498838, -0.41338398105201501], [-0.061777481310449245, -0.74026165632909091, -0.32326673346058321, -0.51700489417195916, -0.619736689177115], [0.8525655976104467, 0.41691511304665463, 0.30060242149157745, 0.16088099940643152, 0.90005222835034582], [-0.65062415903150606, -0.46547577616515246, -0.037422271542734364, 0.63583003810296224, -0.068846306378728794]]]]))
      res=generalTensorProduct(arg0,arg1,offset=2)
      ref=Data(numarray.array([[[[-0.98906983194353004, -0.76819820584799992, 0.6022863692165783, 0.61755347023788576, 0.65948504906408933], [0.76085719401387064, 0.58094808347452431, -0.4824835307383174, -0.43877415956633387, 0.16929279931673313], [1.1126702077065924, -0.059324026788297624, 1.0614505530756009, -0.83726127216448343, -0.088383962021895912], [-0.063212133134331161, -0.33282627439211082, -1.2986490206635941, -1.6899423697603841, -0.94972145795593144]], [[-0.31195125991544731, -0.13094193562828382, 0.26281103252815424, 0.015888900676877815, 0.93192290549964873], [0.32749081849466771, -0.012134083934609963, -0.51733705649425654, 0.39873763112168026, -0.38204110183464102], [0.44335098023625635, -0.031098050247695963, 0.82363916951445049, 0.19413113838770263, -0.24287610449633537], [-0.024581733882532972, -0.83373862302220236, -0.39833281917230423, -0.46622757735038134, -0.86114269040768454]], [[-0.5645956157016383, 0.052548886032826314, -0.11150150347977872, 0.33422251763555733, -1.7891418439213564], [0.016631719519296928, 0.23319131464142706, 1.5882234818702958, -1.4216784722346496, 0.52876349425844449], [-1.6302999363930279, -0.50735143356614665, -0.14782861978076806, -0.85676351058248046, 1.1962667407430954], [0.28773655020620531, 1.2239098907485368, 1.0134185190611302, 0.082740506353957133, 1.5962829597139085]], [[0.20837605064149528, 0.87638487711340052, -0.021167363684085894, -1.3094345762225468, 0.55787825343445885], [1.1436103230983377, 1.7818938405289777, -0.60288672911511065, -0.50104128309428231, -1.3481652943330404], [0.38268746473322751, 1.5945595679522291, -0.1570367137202498, -1.5431866594011283, -1.1117197339887355], [-0.85415945610257915, -1.1034057386362996, 0.00051246510324542971, -2.3836221267341693, -1.3149913792836392]], [[-0.33737143516147905, 0.21995465287634081, -0.44174189358945748, -0.66129913747770364, 1.244363807529647], [0.19563020354058663, 0.00067736386273548055, -0.28446974561535815, 0.23916647466047267, -1.4476336554572775], [0.25172224217951122, 0.60332060494833395, 0.60703537848480571, -0.16139087850129596, -0.63330949715207729], [0.4353988122115669, -1.2626868471076644, 0.032968636756149583, -0.40283720034014464, -0.9120685722077515]]], [[[0.042625618306280422, -0.29457905444293098, 0.81030567223261407, 0.7002364833664726, 0.11188579261046994], [-0.12156985492652235, -0.77942284341124535, -0.25760356671992224, 0.90253352126405351, 0.8955129371445425], [-0.28821404296514341, -1.2013314106188484, 0.80477131899545196, 1.4328872951878167, 0.62683527882347767], [-0.24460069928254274, -0.057627905287712222, 0.00084915555749048854, 0.89688267667613863, -0.012542112676712402]], [[0.58445293023159195, 1.2884234213490204, 0.96750902977300646, 0.41788506543392695, -0.17161924480706719], [1.5757165378778861, 1.6078457424252235, -0.64003271478503398, 0.024153381102755014, 1.0468697005849401], [-0.62869069714158587, 0.031191459094578808, 0.50896066563161657, -0.2152014513694416, 0.29936054814205998], [-2.2839838432849944, -0.6023860223225922, 0.20522746918566961, -1.7164500822630144, -0.43915327812168747]], [[0.57945239832007189, 1.2098813777604125, -0.03700937588335218, -0.2393021771954581, 0.69552977482384681], [1.2484623373723278, 1.6354598031319521, -0.93795336544247343, -0.084528797085096918, -0.15610737402301256], [0.4898927721661448, 1.1987701580089976, -0.12985078867739924, -0.91267537121661113, -0.76514565855125793], [-1.5688093682713256, -1.0001388473849997, -0.33370336475702561, -1.9385415405608137, -0.94489652208564645]], [[0.75807575361838975, 0.087188633900149831, 1.7022124478558331, -0.19242159735810871, -0.73483978656249704], [0.61570099326612926, 0.7262888279040427, -0.70033478321870268, 0.54397018431840627, 1.0602898899266793], [-0.19714756594847849, -0.53704142186913939, 0.054485289174071, 0.56408179257524615, 0.16730790111491067], [-1.4987028711299728, 0.21436890241683754, 0.07124543831553104, -0.74987608024389429, -0.57829795196835043]], [[0.3497356957621216, -1.1048597475666193, 0.051807845168173661, -0.23688191883754656, 0.82121332751883558], [-0.72432772897992315, -0.48710888902682181, -1.1434277056292355, 0.74421820692284224, -0.095978669044285037], [2.269620982451106, 0.4499669511339926, -0.76581723329226548, 0.27587167776479848, -1.160719308276779], [0.5088067197438586, 0.20121977613332259, -1.5671176133632878, 0.175915611385008, -0.97322738465628877]]], [[[-0.38841721110078248, -0.10286052295408088, -0.014161363623092282, -0.36455167086993612, 2.1774513031033229], [0.06023957843496866, -0.75777756055251932, -0.90120596971555267, 1.2865898404781548, -1.3793195262125097], [0.62147116078076126, -0.01328670149983513, 1.4419677934463515, 1.0379320198604169, -0.64861843039979949], [0.51147499058348922, -1.9229603488816189, -0.30628165468465951, 0.20218005477538592, -1.5554707539358965]], [[0.75446663294905836, 0.32483797996380259, 0.074623523511822526, 0.37701274650385319, -0.83473805821105429], [-0.040779531060111535, 0.32638711298659856, -0.064362384592220101, -0.070120438881637798, 1.1242760889552459], [-0.02775165881999192, 0.01087387678308871, -0.94791258669802292, 0.02955281845205332, 0.15918302236980841], [-0.78642727047543837, 0.83620310682301846, -0.033118036743545659, 0.17644026245635119, 0.64771504461929452]], [[-0.7004243008465787, 0.70867265107768618, -0.00041728294424675516, 1.4126863027553465, -0.13642788965133298], [0.65748789549623043, -0.15806847815437916, 0.81618049869688092, -0.28262848068647328, 0.86601847014700506], [-1.7342263976463412, -1.1245010037109451, 1.4921256599861392, 0.41784685908813668, 1.4938282822606355], [-0.43249054493386141, -0.34465860154453842, 0.80708440794045067, 0.30484955888429299, 0.95624177323128146]], [[-0.43251118075830158, -0.50093001001678583, 1.2559778906393595, -0.14566119942396447, 1.0336522123606631], [0.43953655277813691, -0.2875762494513443, -0.77601633802790393, 0.98848238139041267, -0.33876061791425466], [0.21343558210569608, -0.75152462351876836, 1.632714574822193, 0.97555384495720243, -0.021430412892341807], [-0.1315880759368446, -1.1467987745621457, -0.26717378377326556, -0.41916397360537316, -1.4341948716813913]], [[-0.43592405497948683, -1.274752937588763, 0.34331631634874599, -0.2719656351903415, 1.4021611378564445], [-0.47637023654364197, -0.8348569885290511, -0.94052451305379758, 0.89322380966731485, -0.74548030755580996], [1.711726177523716, -0.074750333350667608, 0.59085647685887999, 0.59210780793561635, -0.81983589113435207], [0.95267359241038574, -0.61664135075465887, -1.2341244484292253, 0.11014967673710796, -1.403355017819012]]], [[[-0.44581636442845329, -1.7198022216949431, -0.13576871001074162, -0.13604551343533952, -0.11513401484926783], [-1.3280909186818382, -1.2432231972096395, 0.15252558003577982, 0.046378487962714265, -0.22315241846003733], [1.2433508011378651, -0.27280582569917422, -0.55354501299146253, 0.19090057115986497, -0.30730434879440316], [1.7142741342274279, 1.0101023848116695, -0.86956503432341514, 1.0917433665351262, 0.093617577549461276]], [[0.37611354101783767, -1.1946911240097444, 0.28904451228155997, -0.030850155887382436, -0.54952325101529664], [-1.3403852406465644, -1.3153534320332039, -0.044441932910260218, 0.67195473514064907, 0.55270332578435299], [0.64705631791405394, -0.68266649567087268, -0.82883216006647031, 1.1096524573966546, -0.019890758439246148], [0.8758100411704044, 1.1657021641921093, -0.36178206259394119, 1.7341606603401101, 0.38693779129625339]], [[0.19544419123983608, 0.80740817029550938, -0.51470534353662678, -0.028437246300387381, 1.2021560223546621], [0.55966035916030754, 0.48031525683840365, -0.65860854956882187, 0.30932211138672816, -0.53309374432500878], [0.42771781879106557, 0.7585570831508478, 0.25384298011949441, -0.17417903660370304, -0.59489199278570315], [-0.54203424690421542, -1.1618649269142791, -0.24796708688811664, -0.6550857820445033, -0.70013662232452845]], [[-0.18858518963590523, -1.0238863982443356, 0.1606084135619546, 0.098411928956321518, -1.1254232889960776], [-0.62914473793875714, -0.21187094803904127, 0.47666030107182111, -0.64742625882773663, 0.56059677981923728], [0.42779785983584995, -0.22145320578682678, -0.81113676574786053, -0.4768939645846525, 0.17534839555940324], [0.6535584239771588, 1.4562290774322837, -0.41719786526128833, 0.23612144133467772, 0.64193512913125872]], [[-1.1270700545162524, -0.91453311510627566, 1.5219311506958071, 0.84946423428184059, -0.56870447763858889], [0.61393922865963424, 0.033763579903410945, 0.34909968801519092, -0.36499809921273674, 0.92550621645565112], [-0.5754535082666612, -1.4709612451180885, 1.6536463485504282, 0.098260706145695986, 1.1675822977709622], [-0.10054737141310474, 0.28169541067406551, -0.16792169168612905, -0.74646040997060736, -0.10720032523462453]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[0.55070612112804274, 0.41204319224588576, 0.26535633949945547, 0.40174051931570443, 0.08134609617536076], [0.17847542546268363, 0.12496096406917556, -0.99067519821468764, -0.88447273373169022, -0.29561764048123196], [0.42484531155759458, 0.10515097187728539, 0.060056781571781459, -0.7986016145189625, 0.31496719649725213], [-1.2685640797915343, -0.78354336060188512, -0.71655296923251066, 0.54374636423092582, -0.58645521126252731]], [[0.85534671685462493, 0.015066633151995655, 0.69457218406338528, 1.0874499478868702, 0.18909621628031648], [0.006143761537842754, 0.85184145528258282, -0.84976727872190005, -0.366636835486991, -0.34094156196727277], [0.024422518909815311, 0.14974012538598355, 0.085224328647070247, -0.49639332120012419, -0.43961788726942091], [-0.8245313772367634, -0.26472251716684042, -0.27928777546566058, 0.23470480388901543, -0.50439957990750817]], [[0.83844229001461268, 0.70724877689173138, -1.0110350293032975, 0.66170031257377349, 0.71195714083041861], [0.4740194771397464, 1.33174746729701, -0.12155947212019241, -0.36362710241366231, 0.94042271412444267], [-1.085237900540938, -0.69708134565722069, -0.88808152393121265, -1.6298880452630491, -0.90315603772746422], [0.14581346179267285, -0.25482269987291012, -1.0305975237415819, -0.73434740904676254, -0.10245478578389058]], [[-0.48629422205744405, 0.25583499429910178, -0.70182157527923605, -0.6696487613208193, 0.66654566366830992], [0.27325749005337852, -0.96897935470315399, -1.1833963580869191, -0.34797422746050805, 0.51767181295253328], [0.19587895696612154, -0.63766301082967058, 0.34651833471416305, -0.1612683988788926, 0.22666601800895175], [-1.7342098856047981, -0.59273517287078636, -0.73989540846473434, 0.53828220579734287, -1.1708564003174162]], [[0.41890555522844514, -0.1152481549940983, 1.5959129403473793, 0.7927883562827398, -0.49342444049577272], [0.587203584535541, -0.5728613829460808, -0.71594626439089859, -0.5760938300890367, -0.58623081318780046], [0.36739810596848638, 0.16033274549192364, -0.064739630600651771, 0.11056821612955663, -1.2081705491084904], [-0.549374268333782, -0.093248449042084, -0.64138220553704239, 0.66723818220567344, -0.14499856812084652]]], [[[-0.1740783516841472, -0.19053612210176907, 0.42759395922579435, 0.068717905291490577, 0.048304659263649213], [0.12068393604790548, -0.58561758805844755, 0.64715813847275161, 0.30369382878213724, -0.2434863999341022], [-0.21909669656820027, -0.28398528680279556, -0.86090810714190824, 0.8070575794811149, -0.73733965036070481], [0.83935109037530264, 0.55606917071686524, 0.28336672949180169, -0.73425939336456847, 1.1912736310354104]], [[0.86461130919560503, -0.38146667148891855, 0.90207215160868515, 1.1551447641598585, 0.0914682208092365], [-0.78906529837080086, 1.3984151455946363, -0.7575240639553793, 0.021045220587620123, -0.91057235813797077], [0.45368978936773674, 0.77819781714105929, 0.7632478759594854, 0.016265824325061962, 0.65766141804471856], [-0.89542618538562468, -0.17349144037251449, 0.75187967282765567, 0.36113296740386813, -0.58892006633951366]], [[-0.78051813819397764, -0.52798193205263055, -0.30875460808065669, -0.42006075899226314, 1.1155426253522029], [-0.21355696950903078, -0.9617246102939746, -0.91780931825536161, 0.72156580069540233, 0.32618609130038112], [-0.097423091462908798, -0.81055113621657537, 0.38399969563625286, 1.2433645358757162, -0.34027603257192962], [-1.3728092016126594, 0.29245678483022908, 0.3572050281297236, -0.059795974328222368, -0.80222016705124133]], [[-0.21245800677627774, -0.81934311202426824, 1.4479421001674502, 0.060884991181981228, -2.1808070831550945], [0.069159770389091421, 0.32787768025370539, 0.78516880876674278, 0.49334194347930305, -0.18189862051451738], [0.42565401270119385, 1.5065760723644788, 1.8564076608932314, 0.30181774555771962, -0.44043900441646922], [1.5837902260337824, 0.63456220382956419, 0.52638485585601025, 1.5960409477558439, -0.78983541754263542]], [[-0.63303652922058806, -0.33743506426717029, -0.040629605603709984, -0.63072555006908815, -0.2357534196468751], [-0.20796247682881122, -0.57431518205067555, -0.059690186160526001, 0.33871635690813995, 0.032144541052119974], [0.35705142936238549, 0.204625006787645, 0.81896769954005499, 0.60475782743255679, 0.49079492627929933], [-0.21686314426314071, 0.097110156968802958, 0.3927145722056139, 0.54171940026612708, -0.53773029925259808]]], [[[0.35184894522436583, -0.6792839225870877, 1.0356918021383623, 0.61343907458795566, -0.80204231948959293], [-0.88921753164562278, 1.1253392724590481, 0.66022086135686775, 0.55995197078442005, -0.9808033443118036], [0.44964502240639137, 1.2322590997287588, 0.80140190939510947, 0.63255871793537755, 0.77513092692316077], [0.91354556184567726, 0.46205415677186379, 1.4329502324841561, 0.18608493566975193, 0.33364730452675856]], [[0.3490159385288194, 0.16356612151939229, 0.24395645349039408, 0.11843620006800121, -1.3564903516791533], [0.26835129418138032, 0.84578631354034528, 0.76801049976675761, -0.27188855051440058, 0.15447122512445133], [0.0058514385841113639, 0.87466354962476189, 0.54097257131943877, -1.0139944694720995, 0.0039825725334317122], [1.3425556278187936, -0.041149468610543832, -0.28524340688265931, 0.66596244740725064, -0.14992858970608125]], [[0.14481867736000548, 0.31596240422516719, -0.31480495195191188, 0.09777648278175706, 0.013458861835612845], [0.5814211471133256, 0.082000268663717013, 0.30484052611768997, -0.13917149575807219, 0.59717636789530193], [-0.62291419602490861, -0.44040769214300968, -0.63525527641765955, -0.59844538663613633, -1.0014145777411501], [0.63400665589905802, 0.102983215836841, -0.69980415457420453, -0.34946467894486433, 0.25917090482237948]], [[0.83093459059685948, 0.23626484780139922, 0.55448525666094306, 1.1279720215286202, 0.46930125695825964], [0.69509653799457294, 0.3956740135650233, -1.3546753672892422, -0.61375309467833294, 0.2689342614264153], [-0.38050650412382647, -0.50075423298303101, -0.21487890081862607, -0.87451188622410347, -1.5993666580594321], [-1.2479418015598043, -0.35055345306140212, -1.2254635772762827, 0.32344396612976234, -0.94036824414138431]], [[0.1357711594249682, 0.29907052561107439, 0.28154556078573489, 0.14853143628707827, 0.592141653713816], [0.41389237374288679, -0.84929223457937297, -1.7403911042607363, -0.85517860653374778, -0.10881753528610039], [0.47304508837440029, -0.46167547842248852, 0.10325645949106355, -0.29773538696150481, -0.16721718761408089], [-2.2888460068040315, -0.82110602067768856, -1.0214270595173274, 0.72269852654461642, -1.0825479049079336]]], [[[0.21047476227487444, 0.86725218114639058, -0.023669637532629267, -0.037353240411150235, 0.099964610635739554], [1.2704513292746802, -1.0929105421160754, -1.0283965972116182, -1.3261951519940698, 0.47740449939275431], [-0.015419147684980039, -0.7497050394499617, -0.74096389093563264, -1.1853732794422529, -1.056509762987355], [-1.1429039963634591, -0.8498178688430138, -2.031588422618773, 0.49190400702099102, -0.45607931738818269]], [[-0.60868161121886266, 0.41188835709351251, -0.64409613998187232, -0.81127285337040511, 0.70077722482024596], [0.48782646032594312, -1.5796568997953337, -0.4938592888763404, -0.39670656704913942, 0.35082390294756793], [0.04511666003981285, -0.94805125038527405, -0.71896173375054007, 0.17681000898851582, -0.10314519899877661], [-0.94917886206794133, -0.3579609590481494, -0.7613809228658085, -0.2147224840041117, 0.11732450255782891]], [[0.85501044734135823, -0.43928306172204945, 1.4154470218208626, 1.1962292756468662, -0.68953986169480463], [-0.60320126347111913, 1.2573542576914356, 0.71540080435818998, 0.20458699954815174, -1.2021384997067193], [0.24980054417437642, 1.0384055949904614, -0.071616546322289004, 0.35951702882597669, 0.13355835732572016], [1.1163775484937488, 0.43702863651257046, 1.0627695809469815, -0.27802720398723213, 1.0327953280133573]], [[0.10029367046421138, 0.25067720455894055, -0.42629477857601655, -0.021033351861709959, 0.74686715258760616], [-0.39182932587326641, -0.055315066987016159, 0.61329865748663037, 0.025847019848530023, -0.46377858759623591], [-0.108339416829906, -0.37984253027657056, -1.3658185730918597, 0.38501922003359246, 0.63374062235669326], [0.36893479276183005, 0.064388705378991329, 0.50981964724409645, -1.3722704664574665, 1.6297282110884701]], [[0.23908472773359157, -0.27312614214872627, -0.68075012834958004, 0.63358798589726073, 1.9167434729792947], [-0.63145507974675441, 0.7795986300733827, -0.73491355007361614, 0.75703506222600092, 0.20713219126264576], [-0.73162173712119549, -0.96413026331995244, -0.50859715886107482, 0.56962934105855489, -0.31182860465768097], [-1.0888821017368011, 0.30720880198027312, 0.62608716336170478, -1.2272798316979707, -0.10355809581396913]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5, 4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank2_expandedData_rank0_offset0(self):
      arg0=Data(numarray.array([[-0.48611627704686478, 0.035022078130363621, 0.62493739769274614, 0.78671125684859788, -0.81837915651743254], [-0.0019924273354641198, 0.39557194714446364, -0.16222026358112629, 0.4212491394156872, 0.91492092728202024], [-0.99519674746714415, -0.83092760508759378, -0.76642705133709632, 0.446979107497119, -0.4302993742944492], [0.63473760392433021, 0.43855209537303996, -0.28336722687084759, 0.80826477911750927, -0.80245704645774785]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[0.044454576464619144, 0.75696713268189986, -0.5951658379549094, 0.69326044077791216, 0.32475527713132135], [0.79803074596953416, 0.99412313230101534, -0.61960543259400458, 0.53841842050606292, -0.85171521804106143], [-0.35256075347682692, 0.034711067072433988, -0.29910287869393337, -0.2346236945170066, -0.094123416120378778], [-0.28657048934537466, 0.6770553726131483, -0.53331416220801375, 0.01027296648944187, 0.71801426377868949]]))
      arg1=Data(0.0234287781779,self.functionspace)
      arg1.setTaggedValue(1,-0.329448451904)
      arg1.expand()
      res=generalTensorProduct(arg0,arg1,offset=0)
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[-0.011389110423603249, 0.00082052449984578064, 0.014641519665624717, 0.018431683526771891, -0.019173623723473383], [-4.668013807819646e-05, 0.0092677674030522371, -0.0038006225714045708, 0.0098693526450063223, 0.021435479455619705], [-0.023316243839786897, -0.019467618541500621, -0.017956449375327747, 0.010472174359710935, -0.010081388590438837], [0.014871126523522288, 0.010274739761953316, -0.0066389479012470588, 0.018936656218962896, -0.018800588138760732]])+(1.-msk_ref)*numarray.array([[-0.014645491396322445, -0.2493816500043583, 0.19607646394046779, -0.22839357898065632, -0.10699012329860977], [-0.26290999383155916, -0.32751232693865179, 0.2041280505594821, -0.17738111511238805, 0.28059626004681421], [0.11615059443509342, -0.011435507310953717, 0.098538980345784427, 0.077296412938654788, 0.031008813728786801], [0.094410204076241983, -0.223054844360774, 0.17569952511797696, -0.0033844129064096052, -0.23654868764697121]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank3_expandedData_rank1_offset1(self):
      arg0=Data(numarray.array([[[-0.51142967873700362, -0.97752926392502415, -0.24559696738920911], [0.58538401847744903, -0.85717120852560158, -0.85361883906310032], [0.75861894845111411, -0.98457869976108636, -0.59579756129570738], [-0.79650638445558442, 0.82732719786741304, -0.5819383908787521], [0.069873547584429208, -0.21539675010428216, 0.71340016124102368]], [[0.44110627152188142, 0.019445225217771256, 0.52707993746065163], [0.56213466343630003, 0.32394449675538994, -0.91616182870295271], [0.13835699557228165, 0.33618850149870072, -0.41387368226440935], [0.75643141793728264, 0.96408227159012627, 0.95370929327331866], [-0.33678315769231659, 0.94594692249374779, 0.76920664318488097]], [[-0.38113111332849692, 0.59240195925627304, -0.077135763979397476], [-0.5390256341060975, -0.73860568806354832, 0.32913635613983172], [-0.5591911024911822, -0.34931680640805385, -0.56909036979820171], [0.90311323313855052, 0.010918120270220433, -0.22413272785575544], [-0.47575385821596949, 0.61826859010082513, 0.59034671527629157]], [[0.91117003972748534, 0.73878604335703013, 0.14342307249770081], [-0.69082388580679144, 0.87176146172582736, -0.32635389415714333], [-0.65985041502060771, -0.80421993711355744, 0.3569981882092097], [0.79229858478451565, 0.15290702203208806, -0.96591652678930973], [-0.5556261074389941, -0.92755773589103407, -0.59004044161008329]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[-0.58777540197482736, 0.33243683644263622, 0.88117311387835695], [0.7688256632616226, -0.88554696069088634, -0.11553030979019496], [-0.4518582185642428, -0.47579102918597393, -0.16461545507996056], [-0.33345416934702876, 0.56879454218487258, -0.13314453802599191], [-0.69407710958737323, 0.67247828122658881, -0.12786229725217457]], [[-0.98230647990719833, -0.30485692539573983, 0.52474471003189227], [0.50242676487859583, 0.33374809441550002, -0.5815695200292248], [0.64301516219421306, 0.22190848530381757, -0.90000968916776203], [-0.3617892493909749, 0.12557080745720528, -0.94342506558172712], [0.12845066568783969, -0.82525008710095582, -0.22823205668530955]], [[0.33271950427403207, 0.82571581158948271, -0.91334091045902066], [-0.81655196966842447, 0.51550514034877271, 0.26006748119964018], [-0.53512630965252872, -0.94020670196829692, -0.67108443830414299], [0.46996217235019055, -0.87431418738332645, -0.11396370921690036], [-0.061732132360959202, 0.17151915800433315, 0.88823352534720335]], [[-0.14969920427390915, -0.095949981073458313, -0.493942197549053], [-0.41448723100341867, 0.12688063068961952, -0.053375319853747438], [0.4823110396429886, -0.68140152401394838, 0.058427880910389307], [0.20176533023537191, -0.23980970451526806, 0.67582323452751125], [0.36880865107533412, 0.83583930529060235, 0.75587079655541123]]]))
      arg1=Data(numarray.array([0.55778068272971204, 0.5641268476240382, -0.67644245955146243]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([-0.67455139040269207, 0.21554157178803979, 0.91215123592011271]))
      arg1.expand()
      res=generalTensorProduct(arg0,arg1,offset=1)
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[-0.67058388081329656, 0.42038663276108673, 0.27073848462239408, 0.41608944559980565, -0.56511113426268933], [-0.099529118386840698, 1.1160244048723009, 0.54678755058320783, 0.32065806541873076, -0.17454111784273529], [0.17378018310524568, -0.93996719092002212, -0.12400809429163695, 0.66151121422900361, -0.31591998519808256], [0.82798463263292055, 0.32721545746006553, -1.0632226053976055, 1.1815747529681997, -0.43404932352971798]])+(1.-msk_ref)*numarray.array([[1.2719018177774277, -0.8148657187911944, 0.052094652521261747, 0.22608288829917794, 0.49650795258158681], [1.0755533967508395, -0.79745544044092742, -1.2068612183070817, -0.58943516914893801, -0.47270442861193473], [-0.87956536063350543, 0.89913992909036367, -0.45381393393659963, -0.60941682919291162, 0.88881431255575349], [-0.37025138931592899, 0.25825462457358922, -0.41891887411787337, 0.42866295395122289, 0.62084621052309019]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank4_expandedData_rank2_offset2(self):
      arg0=Data(numarray.array([[[[-0.5199122681326187, -0.19435478338737888, 0.18436395491710811], [-0.38231612688237337, 0.51393073015276314, 0.49742664809471893]], [[-0.39893302617558279, -0.094289891857278318, 0.87562112429843775], [0.2863443711845608, -0.35794107674802178, 0.10439236793721207]], [[-0.73203398151667454, -0.78019303533023265, -0.99852066106683735], [0.99318177786041084, -0.83720027402512454, 0.19817006991233299]], [[0.43142764321142257, -0.72264932114743252, 0.27483862630518097], [-0.078592428972771966, 0.36078013906798723, -0.58793692451656576]], [[-0.7922398774770858, -0.33518873926829462, -0.72427242273460535], [-0.69766298736931609, -0.052548320530552362, -0.72670080382671465]]], [[[0.033257056783698946, 0.99564442008095977, -0.80820396953958951], [-0.25283941033549007, 0.63195930096481545, 0.96508164178410172]], [[0.44694102224593735, 0.86794481454733341, 0.76280782363452082], [-0.00579557286160437, -0.37066068973192334, -0.68481827361272529]], [[-0.89536281455439393, 0.97627284378222035, -0.38055393818042327], [-0.50418129809443468, -0.56388887238947127, -0.2654507627003917]], [[-0.96187554965881628, -0.69863824877505998, 0.72157167858833793], [-0.61142807379437447, 0.36849159059803771, -0.75925224722633788]], [[-0.80986101601288119, 0.58797259546920255, 0.0095119518383020019], [0.65354988844888218, 0.75064026427987218, -0.52978361987089406]]], [[[-0.77707643372813151, 0.42056077125023994, -0.19479892591769099], [-0.20195392059828499, -0.12478469712256834, 0.14664491455021622]], [[0.53823519698777011, -0.2696502631959965, -0.58495896267010239], [-0.2116575583175897, 0.55859161515022238, 0.53162130912309058]], [[0.39096462993928638, -0.93424743638528507, 0.62011401086532647], [-0.16644340273080194, 0.00083067728137264929, -0.35673633793593895]], [[-0.29236514335819996, 0.48507694405228063, -0.28783238120994592], [-0.82712831643244278, -0.33894104632581112, -0.15627307429490589]], [[-0.65744023560617504, -0.56453505585480546, -0.4117220052398789], [0.20384888198682183, -0.2455909708141728, 0.30829371752559265]]], [[[-0.024687112374589981, 0.065905063920987494, -0.40403233955159168], [-0.54093421969381739, 0.70379360941543245, 0.00038922149172337939]], [[0.62160971056345016, -0.87337286123477753, 0.93834012998153815], [-0.56656382866294508, -0.55457213061439203, -0.86769913318213487]], [[-0.74566387069253404, 0.041708131527181225, -0.60083262697920969], [0.14013025335400875, -0.3584194945710959, -0.99004529370145633]], [[-0.074268730933011895, 0.11474253300127746, 0.73942264143003711], [-0.031362308597022048, -0.91534434855827951, -0.006401834105645543]], [[0.0025854911886609155, -0.44163509467547302, -0.34645714028259489], [0.79054531379670601, -0.68985038699724255, 0.95429974970965881]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[0.92803273740296621, -0.89218182099518306, 0.067693219482339195], [0.5465164681556729, -0.24500119549488009, -0.14860133328432346]], [[-0.66779932707104961, 0.39273331248384147, -0.17461619400130779], [-0.81535155599552467, 0.60170919506151055, -0.73371813706190769]], [[-0.70319015332014123, -0.80585413006198792, 0.20552713686404367], [0.93993443041562807, -0.083681478054943081, 0.4189488034648674]], [[-0.2951305643677955, -0.047462610359177537, -0.10200688511332667], [-0.15928670415047619, -0.6512459433701363, -0.0061556363479926546]], [[-0.48950321518829698, -0.88754577416162972, 0.5281064573716947], [0.43058505737896491, -0.59700918172865736, 0.70256931346641704]]], [[[-0.79290220391242117, -0.25471165892869507, -0.45626711771928896], [0.051439525544449527, -0.23874258632343981, -0.75425852916624803]], [[-0.71105983197732625, -0.30711403522007164, -0.69982292792508916], [-0.10759600706071448, 0.066762018965752956, -0.073953108359688491]], [[-0.62711619948702335, -0.23538986275241336, -0.16909750760994391], [-0.32793332113415308, -0.49070953694269526, -0.50176978284290641]], [[-0.67090425193358061, -0.41085268167902433, -0.74288132079844793], [0.57698208486831049, 0.68978594308682561, -0.8872055426997183]], [[0.77207843807135679, -0.37713851362718009, -0.86308036928722598], [0.65756333779665233, -0.82036814723654161, -0.63779733698687258]]], [[[0.61994230554820073, 0.41182394468411343, 0.94204836223008992], [-0.85062495432860996, 0.67701192372311048, 0.76394384133776772]], [[-0.91112580313677838, 0.991765015197559, -0.087108985065155187], [0.84615817393434867, -0.99436143324004789, 0.67443280803152872]], [[-0.85802625742875538, -0.88273090894896233, 0.5734256347942337], [0.92007378364494086, -0.27057381681066461, 0.29028874336797172]], [[-0.8432469524435855, -0.27644152345945683, 0.92404949861928443], [-0.56321321523732926, -0.43892143743290357, 0.4388901690024325]], [[-0.84003565665067192, 0.14769110652934203, 0.018890122828331135], [0.26883639547018934, -0.44371171951372768, -0.94365908927752407]]], [[[0.70682074358021452, 0.87359093488550066, 0.72159558911911659], [0.3462815348522954, 0.37946330544809159, -0.91236506089990277]], [[-0.45056829666444287, 0.68966570232903046, -0.29078700314249195], [-0.10278704026536323, 0.61194356919486559, 0.02977613707839577]], [[-0.15867665879657755, 0.51887056238418983, 0.69778586960090538], [0.19324766416124972, -0.81837685117575254, 0.23952894746409559]], [[0.27945241432061563, 0.60867384246558531, 0.99040675977804193], [-0.1652782690329746, -0.7761178158905595, -0.63585181502351351]], [[-0.49914396498594726, -0.21842521124718139, 0.50945235418494339], [0.79984012558825968, -0.49126045571698262, -0.55709695177620944]]]]))
      arg1=Data(numarray.array([[0.96670723802172032, -0.66926191490688969, 0.89210369641796161], [0.82651216891746748, -0.36327419755315904, -0.89380281744174317]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[-0.041622414608717184, -0.28617507731128589, -0.86780051493242327], [-0.40759403163700192, 0.92172727563668433, 0.91319549290399094]]))
      arg1.expand()
      res=generalTensorProduct(arg0,arg1,offset=2)
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[-1.1553449769446469, 0.73198970346952497, -0.12840792000912354, 1.4753704134648378, -1.0956713458368021], [-2.6563408501839603, 1.2736362471989628, -1.8330345823192284, 0.22084224540173236, -0.42691973551728662], [-1.4591095119616118, -0.6740856329157443, 1.7373932496535229, -1.2848771239801429, -0.64288249347766557], [-1.1315183642167235, 2.5312682752236553, -0.15382814554590207, 0.82337437589250195, 0.040037629429385047]])+(1.-msk_ref)*numarray.array([[-0.42633417534941653, 0.28385306664632792, 0.0038662792044312777, -0.42657984825932643, -0.26812368492781802], [-0.42796401392658268, 0.76264932604847857, -0.53664289750144922, 0.3806012066696276, -0.78183477947326752], [0.70719278459595913, -0.81583202767921648, -0.56861182822696144, -0.46189297356551251, -1.4039965916015964], [-1.530168832817171, 0.70686561302831796, -1.3617723593499462, -2.2739537999362023, -1.6463762349219506]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank2_expandedData_rank1_offset0(self):
      arg0=Data(numarray.array([[0.41258090523469826, 0.14163280591899574, -0.63042359212497967, -0.70238242753679803, -0.13846740105821853], [0.18164129303385002, 0.81120588114291836, 0.64594069242343766, -0.49212452544096408, -0.64691704073626943], [0.15288524037211815, 0.023189086486477661, 0.26251435314412075, 0.98355468974009841, -0.29897682833700245], [-0.82761503174780104, 0.59635941309616114, -0.919545760364614, 0.37728947976276173, -0.98447117707965148]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[0.14038957535348362, 0.46308010483294293, 0.069247514177988911, -0.041450917241341978, 0.53620466007989243], [0.91248140697150482, 0.5511222264317388, 0.88808987107729775, -0.77387624757239593, -0.46343123030901334], [0.11334459912882933, 0.4169059551668004, -0.58401233736908664, -0.6752094748220494, 0.82630824643555778], [-0.95682518190944177, 0.76802249616131602, 0.62468813344009644, -0.1598528460190074, -0.82503647270058433]]))
      arg1=Data(numarray.array([-0.62998174439782262, -0.36410839408493767]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([0.43269824918954924, -0.41727420356163392]))
      arg1.expand()
      res=generalTensorProduct(arg0,arg1,offset=0)
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[[-0.25991843838498796, -0.15022417083511583], [-0.089226082136807189, -0.051569693512909194], [0.39715535427643611, 0.22954252172188411], [0.44248810693400925, 0.25574333772390362], [0.087231934860889426, 0.050417143032422951]], [[-0.1144306986401409, -0.066137119506066711], [-0.51104489606818848, -0.29536687065520484], [-0.40693084419045467, -0.23519242819241054], [0.31002946699824918, 0.17918667064812149], [0.40754592580371229, 0.23554792480866327]], [[-0.096314910422307401, -0.055666799351181614], [-0.014608701155743172, -0.0084433410408881106], [-0.16537925012319921, -0.095583679547552008], [-0.61962149915312636, -0.35812051857597638], [0.18834994385027318, 0.10885997283439405]], [[0.521382361390339, 0.30134158013024653], [-0.3756955433503813, -0.21713946819987917], [0.57929704216812172, 0.33481433009397255], [-0.23768548460389163, -0.13737426658156077], [0.62019886944601654, 0.35845421930938021]]])+(1.-msk_ref)*numarray.array([[[0.060746323459916658, -0.058580948243980871], [0.20037395059572732, -0.1932313819294042], [0.029963278145544291, -0.028895201327243276], [-0.017935739317629575, 0.017296398478780173], [0.23201481762384685, -0.22374437248087375]], [[0.39482910721458669, -0.38075495235883383], [0.2384696224664597, -0.22996908809941827], [0.38427493233811927, -0.37057699364493357], [-0.33485489741395386, 0.32291859486103736], [-0.20052588197446883, 0.19337789753278167]], [[0.049044009598135756, -0.047295777329494922], [0.18039447687737126, -0.1739641004023289], [-0.25270111588470018, 0.24369328294585388], [-0.29216195759169583, 0.28174749584363978], [0.35754213152355246, -0.34479711542780772]], [[-0.4140165809926874, 0.39925846572897783], [0.33232198942718877, -0.32047597540313116], [0.27030146162901725, -0.26066624335561994], [-0.069168046600391109, 0.066702469009641815], [-0.35699183725506417, 0.34426643705543603]]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank3_expandedData_rank2_offset1(self):
      arg0=Data(numarray.array([[[-0.51029727994481267, -0.018465937109350072, -0.19026690974674643], [-0.72861708371618739, 0.84027015766743651, -0.20266078827983924], [-0.9252188029355799, -0.69013278033402048, 0.92133764805211738], [-0.91973482686845065, 0.89045999331414927, 0.78667522205802354], [-0.69273262686918891, 0.45763135082737127, -0.92573667441240759]], [[0.30121937329668946, 0.66204515411302922, 0.78516965539090422], [-0.98117398828671898, 0.59786013115851455, -0.6996852900502919], [-0.4944209648596547, 0.20982356124677382, -0.54921306902651201], [0.28828345852567927, 0.60069088192633302, -0.0276659104933481], [-0.0072413277528049491, -0.79554225919532229, 0.95113901742647755]], [[0.33165709013591305, 0.70222391456516919, -0.10798108246669313], [0.23663130820034306, 0.17460508788071216, -0.90234398574084751], [0.096790129301592254, 0.64148530018682992, -0.93977032328908416], [-0.028187413735458744, 0.98174312540894926, 0.86088740352131765], [0.57576321528783492, -0.046173150145771169, 0.38838155806642094]], [[-0.41607873925856564, -0.777935025411993, -0.44253679095222598], [0.65631368823625991, 0.90271607365801598, -0.33698671129671176], [-0.34504244010322416, -0.83628672628346767, 0.65892290326432579], [0.49690913674858717, -0.95249285585455468, -0.57636458698231863], [-0.24881503944147076, -0.016620394787253856, 0.58066703705849254]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[0.98052033305311248, 0.906121635199298, -0.88536243383719326], [0.7885600555653931, 0.80672945735632262, -0.97906197002568529], [-0.2681157123268072, 0.10099592313381556, -0.08756696215153692], [-0.48391153465561709, 0.81522918416267842, 0.50711831288701403], [0.80863497585962785, 0.96538099763457219, 0.45484855308048266]], [[0.055380421365819332, 0.39737381846509479, 0.043296323960043459], [-0.0073053360990664729, -0.34768031285281809, -0.25072533274221986], [-0.20051007156029765, 0.94378243162374309, -0.45565840597129759], [0.27982516575746197, 0.87050515318418986, -0.28696077061068737], [0.47415135224262639, 0.52319173674770236, 0.83431636731860292]], [[0.18048681037212133, -0.22562218404715773, 0.80968056065134664], [0.05990338368856718, -0.26439070125547692, -0.41049159358475884], [0.041392358370344828, 0.81968218982142038, -0.71304496747914992], [0.52428413221989656, -0.62745071707328681, -0.27532308909422532], [0.3185711948925618, -0.85242211753398434, -0.29943944726055771]], [[-0.24913377286062155, -0.6297443380714165, -0.93840923631585582], [0.22506387687402096, -0.1022033048083999, -0.926403834216174], [-0.6854961286782606, 0.78555840618291195, 0.14545319201538875], [-0.077866627163132085, -0.66583601198179188, -0.87297548050986795], [0.28926312567594592, -0.77890372265399499, 0.4135370887466836]]]))
      arg1=Data(numarray.array([[-0.82601311676079403, 0.27894065808769875], [0.63741160728231838, -0.7269683047175326], [0.76314487340243775, 0.27100126838866689]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[0.31185871965021739, 0.13057989947194804], [-0.93146642087443121, -0.51857850202267652], [0.48414746070433834, -0.82623722059695393]]))
      arg1.expand()
      res=generalTensorProduct(arg0,arg1,offset=1)
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[[0.26454062727757122, -0.18048108196652418], [0.98278567838027997, -0.8690120315264469], [1.0274583251312188, 0.49330718681981162], [1.9276497292403376, -0.69069764664357325], [0.15743457387731352, -0.7767905950739491]], [[0.7723823096738518, -0.1844815406046362], [0.65758432918412013, -0.89793028507425787], [0.12301303756240667, -0.43928662624148679], [0.12364832468011053, -0.36376675129113972], [0.22475042665393197, 0.83407398690610912]], [[0.091247357827182032, -0.44724489203204276], [-0.77278444146768444, -0.30546263655679518], [-0.38824064452983686, -0.694019728419627], [1.3060394455523667, -0.48825717298969173], [-0.20862787486138407, 0.29942208171478418]], [[-0.48989800198335764, 0.32954479760235927], [-0.22389169289369837, -0.56449722779138245], [0.25480435060882101, 0.69027652090846414], [-1.4574331467340633, 0.67484474416406948], [0.63806352615597095, 0.100039372932646]]])+(1.-msk_ref)*numarray.array([[[-0.96688403490431862, 0.38966044284288337], [-0.97953243762186071, 0.49355498015611476], [-0.22008385617596796, -0.01503375386741114], [-0.66475059852514917, -0.90494947403047998], [-0.42682634243193646, -0.77084716206700621]], [[-0.33190769583096641, -0.23461098403880865], [0.20018627067765157, 0.38650420782674322], [-1.1622383180620937, -0.1391259297228532], [-0.86251172988311831, -0.17778804679721277], [0.064464849832714388, -0.89874458763480547]], [[0.65845066126169405, -0.52841745222328818], [0.066213990076214091, 0.48409294498775834], [-1.0958167780958339, 0.16947973995326532], [0.61465487745612846, 0.62132560613231114], [0.7483789358243087, 0.73105479604715196]], [[0.054562716359559671, 1.0693886516752529], [-0.28312898490965832, 0.84781858425941647], [-0.87507842844421169, -0.61706455819862249], [0.17327163817340718, 1.0564052600048528], [1.0159448221853791, 0.10001494076568579]]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank4_expandedData_rank3_offset2(self):
      arg0=Data(numarray.array([[[[-0.072033815926631606, 0.34792236828636725, 0.38687009876460365], [0.4303295649901675, -0.74527463215728829, 0.57540657173585652]], [[0.3268141337375805, -0.99564282937557214, 0.87746107600854395], [0.43233545873567469, -0.93285163245360048, -0.55585241296304]], [[0.10853815052084692, 0.92119156994964957, -0.86313410651291655], [0.043032105561968015, -0.72162321644592708, 0.57678146409963915]], [[0.34150420180268082, 0.10292436925280923, 0.89398980648518034], [0.80342804097883258, 0.061501113934582907, -0.16535529363501755]], [[0.84605339953349823, -0.90602670938178997, 0.43080829039908153], [-0.87197842212461096, 0.7316430650630128, -0.10183066910817895]]], [[[0.78298609974320366, 0.94955561152500612, 0.37406856841459568], [-0.15940808903513415, 0.064837278626448835, -0.027419160191229919]], [[-0.016211326825720018, -0.71221260386000496, 0.51962935194585325], [-0.44134179859876044, 0.24821124117544446, -0.05172856938188608]], [[0.57171486480285205, 0.70142382017268501, 0.03907380737526811], [-0.82976929857316328, -0.90920234559748625, 0.27856078731620149]], [[0.47371719371547538, -0.38425053620596006, 0.76179280943398409], [-0.088250508717500065, -0.89735165025550545, 0.25038865495489371]], [[-0.49011551421454724, 0.14819267875728714, 0.44200649345313958], [0.78201453005109656, 0.87501418433175027, -0.45593407211742676]]], [[[-0.80429128125266347, 0.65656324256023701, -0.13139116623403146], [-0.89912353514920329, -0.95680365764237707, 0.75810100703188699]], [[-0.75245515425240983, 0.81081915401184768, 0.98855073273829408], [0.23537644950809744, -0.11172374284117836, -0.36614279791351323]], [[0.025301686262189316, -0.24189202892526573, -0.66704995377146159], [-0.84477595694976926, -0.74103473585773205, 0.69172862069137486]], [[0.0082160131804713821, 0.31363752747630591, -0.24728358839521447], [0.74710594653205153, -0.58169837494539878, 0.37866473658219801]], [[0.63042465509339518, 0.33736095632505703, 0.70798385162445809], [0.50626581725009423, 0.53807078076256354, -0.86943180041221568]]], [[[0.70303036299787647, 0.58627931039081882, 0.92585776969135947], [-0.14333626650812414, -0.92066829519098747, -0.74887071166943064]], [[-0.99334035245734209, 0.35577564611952206, -0.89285310927992723], [-0.98378748197022792, 0.63872290026799527, -0.82524186186655113]], [[-0.089073863683797549, -0.56287090129802686, -0.078944286488068061], [-0.45182894729778322, 0.78201753812702202, -0.59131317032542885]], [[-0.13242965407749097, 0.18624100525453846, 0.12342573528184952], [0.76038045899027162, -0.024693635037958739, -0.28127645973907112]], [[-0.34157325308068365, -0.23160328082036097, 0.86433698213125743], [0.34676919304974718, -0.071570020419557734, -0.044989299145718364]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[-0.55805180240545815, -0.25498410585540898, 0.62854830657502725], [-0.96638596616794925, 0.095419304241421976, -0.39459478549117466]], [[0.32897033841730461, -0.11790104014897196, -0.19719996569432285], [-0.86029198314727529, 0.036882459663510003, 0.36618096211670892]], [[0.59043446826672108, 0.37432554113487781, 0.78736089565820611], [-0.099074033326099986, 0.82504285126292665, -0.9837467922060199]], [[-0.35920231593569252, -0.70527552852439634, 0.95824732569526705], [0.55569828722806336, -0.83406754404915029, -0.68736501036940978]], [[-0.47130819036974425, -0.58834461207159738, 0.81045381800381011], [0.8135487121099596, 0.97037862083977089, -0.47296604559991917]]], [[[-0.64817965142850564, -0.72966253084611066, -0.3444406879833859], [-0.31631215909136379, -0.98121360569213012, -0.012214669517630616]], [[0.68953889081629005, -0.9107836472608184, -0.96306174065464711], [-0.90017171980162147, -0.36765799008329303, 0.13747029535351674]], [[-0.20060436901597956, -0.18566873023847963, -0.076459664536488781], [-0.25177804194361819, -0.96736219801133272, -0.16775477820152918]], [[0.91104087926792676, 0.84442721297247036, 0.10513549611137352], [0.48895024855081348, 0.47162583230123256, -0.34889525106439501]], [[-0.17791722719046987, -0.77875270717292167, -0.82272069245110369], [-0.40578650969287522, -0.085469953144157174, -0.30487692282432999]]], [[[-0.72910781780064138, -0.20952143814213375, 0.56694364488713944], [0.71708617109127171, 0.13700259270781423, 0.41389380897434269]], [[-0.69814066846696665, -0.00093475806661280636, 0.28399533438185753], [-0.36346723822770799, -0.67203403130563788, -0.34581050357595688]], [[0.71647239250211614, -0.38654783809415227, -0.19997904408364664], [0.93679799466529401, 0.27639285837045802, -0.66866063247982743]], [[0.51871385227976918, -0.5132691328081278, -0.19627849778700246], [0.62220988176334391, -0.23867252062837507, -0.80682925420627827]], [[0.057596798532589366, 0.065513611918060155, -0.68260040189701066], [0.95427908221817015, 0.41304954957909779, -0.35410435084659553]]], [[[-0.11105272066774052, -0.0062661535393384593, 0.57095820355934124], [-0.54301802298026436, 0.73475015143480604, -0.68507846115847326]], [[0.56734420894594839, 0.64279901724763189, 0.62497241381490709], [0.40528917205908455, -0.010462151915689333, 0.81229268318626824]], [[0.15626214946240635, 0.67489952427459121, 0.29267377205129574], [0.34248259233530387, -0.57593258088352894, -0.17215868676271362]], [[0.40021600703163163, 0.87827794405208426, -0.019024353323349175], [0.52480291589834005, -0.079013460372644451, -0.64536877496367828]], [[0.0056431364770728187, -0.98255100670923023, -0.7881132570628504], [0.048301825985085367, -0.054613803052597998, 0.88348757748008278]]]]))
      arg1=Data(numarray.array([[[-0.41492399182904527, -0.90711832800000924], [-0.52659306701774211, -0.71247799944123336], [0.43343338935461695, -0.9673835135861244]], [[0.74387668581392896, 0.60497770386212069], [0.24150983290807848, -0.0035404283584028473], [-0.86116789650809933, 0.70643852643052707]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[0.64724057278738023, -0.58047759764280915], [0.28803779826697284, 0.83203500778121287], [-0.38578420862336849, -0.14586937125209576]], [[-0.76395653015089549, -0.35932129996217221], [0.82187468539346953, -0.51170050446938364], [0.67886269313889214, 0.84748677325332711]]]))
      arg1.expand()
      res=generalTensorProduct(arg0,arg1,offset=2)
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[[-0.34104321869054544, 0.11267216051073081], [1.3440101939822626, -0.56374641010415183], [-1.5432135206049511, 0.51624499945575597], [0.94649066851874675, -0.87892210816207128], [-0.071465893915571232, -1.1407582268114407]], [[-0.74208393250019722, -1.8647041326817895], [0.38318596331009558, -0.28496324176833088], [-1.6663621915107543, -1.3581483165828612], [-0.16201993562778302, -0.76622168845998351], [1.5025865131276568, 0.05933298351256544]], [[-1.6217379976057924, 0.38389570606767798], [0.77712993962073429, -0.96729695328015164], [-1.5753121291794265, 0.7749009626996457], [-0.18657442892338846, 0.72985059234856098], [1.1229090626456779, -1.8069495135593101]], [[0.11679134890032328, -2.5635891872119601], [-0.029067506145745381, 0.33091280758469965], [0.66112553183443867, -0.13563845161283844], [0.81226365061190287, 0.12943284853246448], [0.91773212186468045, -0.18302690177195441]]])+(1.-msk_ref)*numarray.array([[[-0.12829893833424127, -0.015901985146889841], [1.1911646593683678, 0.34028971293549665], [0.27216273992744633, -1.3664216933501199], [-2.3819678071219879, -0.87349816993204299], [-0.93224078555825551, -1.5238609351206722]], [[-1.0698967469137477, 0.42478576632932857], [1.0343381652682342, -0.38949863869828422], [-0.8704074511731259, 0.41641556437071026], [0.56955858907161272, -0.55428739271307736], [0.010715282222923672, -0.49349920528253599]], [[-0.90522279519848525, 0.18920276772310785], [-1.0711075648137254, 0.5444628912890449], [-0.51290303893681999, -1.7530695693562719], [-0.95561360064635603, -1.4847501722524412], [-0.31045516384447908, -0.73370275813471375]], [[0.25969113072437844, -0.78548437246891922], [0.54446742746355392, 0.66246811007784856], [-0.66923147473116196, 0.45388270665186287], [-0.38462998417551791, -0.19386649891311736], [0.54266284603116233, 0.05350310838255723]]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank2_expandedData_rank2_offset0(self):
      arg0=Data(numarray.array([[0.67918431461605122, -0.82903525520214516, 0.41635614629302187, 0.13133873748855929, 0.55634300767227352], [-0.42725690892777846, -0.37461846784033725, 0.69295034742750938, -0.36390368830599162, -0.04898877339542973], [0.17465954074231416, 0.33523004077870122, 0.58659210411937335, -0.94622936188424855, 0.70191355262689514], [-0.73205030850603592, -0.092847740941421897, -0.4348219414010448, -0.088907102900838808, 0.86243415318053862]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[0.90868742918718448, -0.14026599685382735, -0.30022178491391127, 0.90013753748581515, 0.06765484737989258], [0.62958872860632265, -0.31267880360367162, 0.59917179222448924, -0.42705927460462423, -0.40848639407946008], [-0.84378236187615063, -0.27177944236230256, 0.29866990743094957, -0.39844960294323717, 0.11615568884107064], [0.19138149942387339, -0.38523752862327476, -0.25923850389144287, 0.74064973416718161, -0.79844497979302265]]))
      arg1=Data(numarray.array([[0.81239112453684825, 0.14294251641815059, 0.20074033111459677, 0.63829276847480632, -0.0052942266245552538], [-0.69483042660144534, 0.96977805391778293, 0.11445858387640806, 0.30014823708548621, -0.61330587913592249], [-0.53581568015045455, 0.003011369080241133, 0.90805491952380146, 0.39949035189277726, 0.58212971749720888], [0.20724373134330243, -0.36678951276117999, -0.30111249594267631, 0.40914758216164793, 0.24384424434888574]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[-0.046590240100562008, -0.67586451504450684, 0.37512488600516414, 0.92933002065774195, 0.05248025511969745], [-0.087057693872188091, -0.20601047208854051, 0.59393853455388679, 0.7451796051894588, 0.56481593685753961], [0.36720427180224946, -0.7116897486604401, 0.82790149020403314, -0.25821884018386432, 0.82278156543064473], [-0.4714436974035392, -0.48025411999650713, 0.58202443106161827, 0.46677803316841393, 0.30107219865832868]]))
      arg1.expand()
      res=generalTensorProduct(arg0,arg1,offset=0)
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[[[0.5517633091187224, 0.097084315042955255, 0.13633968420386658, 0.43351843648094318, -0.0035957556814206104], [-0.47191792706568114, 0.65865804287983742, 0.077738474842022023, 0.203855974688122, -0.41654773317092625], [-0.36391760548351981, 0.0020452746448195425, 0.6167366581505066, 0.27132758084602104, 0.39537337319597732], [0.14075669163087393, -0.24911768383305741, -0.20451088417915511, 0.27788662016727333, 0.16561518597116689]], [[-0.67350088325436364, -0.1185043855779583, -0.16642081163495284, -0.52916720820619478, 0.0043891005207861563], [0.57603892003974466, -0.80398019641916885, -0.094890201294054094, -0.24883347033064004, 0.50845219602642555], [0.44421008913484306, -0.0024965311339455571, -0.75280954194497818, -0.33119158583222336, -0.48260605890605124], [-0.17181235970323955, 0.30408143731743531, 0.24963287491839156, -0.33919777019272246, -0.20215547534335274]], [[0.33824403789481655, 0.059514995277288187, 0.083579470668458708, 0.26575711728887441, -0.0022042837950017385], [-0.28929691874691416, 0.40377305328875446, 0.047655534892937869, 0.12496856330955732, -0.25535367233588652], [-0.22309015171081767, 0.0012538020253151599, 0.37807424691535008, 0.16633026339531995, 0.2423732858197834], [0.086287201325483745, -0.15271506803394005, -0.1253700384113659, 0.17035111057393126, 0.10152604987283605]], [[0.10669842464358059, 0.018773889639797557, 0.026364981651626495, 0.083832566359558339, -0.00069533704084740377], [-0.091258150998470886, 0.1273694252456736, 0.015032845901055802, 0.039421090518224532, -0.080550819860022993], [-0.070373354957534398, 0.0003955094131109544, 0.11926278670053139, 0.052468558456457648, 0.076456182150655097], [0.027219130027047504, -0.048173671530097183, -0.039547735059140034, 0.053736926887607422, 0.032026195196634411]], [[0.45196812163109068, 0.079525069508317239, 0.11168047957342284, 0.35510971858873586, -0.0029454059636036985], [-0.38656404935765698, 0.53952923929118357, 0.063678232807710053, 0.16698537296767002, -0.34120843742156698], [-0.2980973070528688, 0.00167535413131264, 0.50519000505947598, 0.22225366390808263, 0.32386379788780811], [0.1152986008167575, -0.20406078071220263, -0.16752183164045378, 0.22762639644164986, 0.13566104030463189]]], [[[-0.34709972070997569, -0.061073177719177245, -0.08576769336916136, -0.27271499524949988, 0.0022619949027706241], [0.29687110029870317, -0.41434437366290838, -0.048903220747284967, -0.12824040799726685, 0.26203917414684796], [0.22893095125611843, -0.0012866282448645138, -0.38797273805240201, -0.17068501289617849, -0.24871894369285838], [-0.088546316048398355, 0.15671335344946771, 0.12865239425599612, -0.17481113124965997, -0.10418413810033483]], [[-0.30433671836108273, -0.053548906489809825, -0.075201035275912223, -0.23911625895959907, 0.0019833150664904098], [0.26029630982228136, -0.36329676870386379, -0.04287829932295472, -0.11244107270194315, 0.22975570875937035], [0.2007264491427915, -0.0011281144709416988, -0.34017414266688722, -0.14965646354306938, -0.21807654285313274], [-0.077637329105342434, 0.13740612529049709, 0.11280230187762516, -0.15327424034997505, -0.091348557209664394]], [[0.56294671199483404, 0.099052066414119913, 0.13910308218857309, 0.44230519567508386, -0.0036686361788455333], [-0.48148298551667612, 0.67200803938990161, 0.079314115463217691, 0.20798782516814213, -0.42499052202657156], [-0.37129366171736472, 0.0020867292503855524, 0.62923697196727735, 0.27682697813803797, 0.40338698998756878], [0.14360961563651484, -0.25416692030062654, -0.20865600867824205, 0.28351895920803938, 0.16897195383975885]], [[-0.29563212656601123, -0.052017308940304763, -0.07305014688436777, -0.2322770926670244, 0.0019265885954034372], [0.25285135498749156, -0.35290581065888804, -0.0416519008309056, -0.10922505051394965, 0.2231842714773109], [0.19498530225893393, -0.00109584831515037, -0.33044453439911176, -0.14537601249644014, -0.21183915126975925], [-0.075416758214123789, 0.13347605652575098, 0.10957594786856284, -0.14889031421010243, -0.08873581989074697]], [[-0.039798044708393994, -0.0070025785453812729, -0.0098340225922965135, -0.031269179794753778, 0.00025935766841438817], [0.034038890317027976, -0.047508237327239106, -0.0056071856286831418, -0.014703893971618602, 0.030045102735074523], [0.026248952936608675, -0.00014752327748193651, -0.044484496683156689, -0.019570542322535748, -0.02851782081721629], [-0.010152616192400361, 0.017968568324477529, 0.014751131830268023, -0.020043638187804937, -0.01194563043018736]]], [[[0.14189186071473806, 0.024966274270144882, 0.035061214040935547, 0.11148392180094993, -0.00092468719083055274], [-0.12135876320399466, 0.16938098951925515, 0.019991283693869075, 0.052423753243966247, -0.10711972318444146], [-0.093585320617609088, 0.00052596434056052127, 0.1586004552128262, 0.069774801392577954, 0.10167450911051558], [0.036197094938144742, -0.064063287847964875, -0.052592170253119776, 0.071461528796181673, 0.042589723730633015]], [[0.27233790980674261, 0.047918625607866791, 0.067294189385476266, 0.21397491080455941, -0.0017747838072413435], [-0.23292803224388489, 0.32509873656114791, 0.038369955740360666, 0.10061870575782282, -0.20559855487255249], [-0.17962151230670442, 0.0010095013795689549, 0.30440728770126424, 0.13392116695571343, 0.19514736893508317], [0.069474324509345473, -0.12295886332013033, -0.10094195429383988, 0.13715856065255624, 0.081743915976728546]], [[0.47654221910997369, 0.083848951473841027, 0.11775269321013103, 0.37441749810381664, -0.0031055515353826738], [-0.40758204194630365, 0.56886414917642336, 0.067140501550585985, 0.17606458593969587, -0.35976038611112288], [-0.31430524723960829, 0.0017664453250586683, 0.53265784589941489, 0.2343378860921731, 0.34147269585710416], [0.1215675364342179, -0.21515583205950031, -0.17663021257165076, 0.24000274111555525, 0.14303710837001149]], [[-0.76870833537092897, -0.13525640609647535, -0.18994639541499767, -0.60397135900924637, 0.0050095526806235172], [0.65746895118084581, -0.91763246912797214, -0.10830407278354834, -0.28400907484808174, 0.580328030654642], [0.5070045291163392, -0.0028494458431945237, -0.85922822705685931, -0.37800950075041656, -0.5508282311212418], [-0.19610010366348371, 0.34706700660584577, 0.284921484891212, -0.38714745558529928, -0.23073258372939293]], [[0.57022834034621761, 0.10033328952049236, 0.14090235896814587, 0.44802634473620756, -0.0037160894184534738], [-0.48771089320908162, 0.68070035908502768, 0.080340031237333034, 0.21067811540737322, -0.4304877084712565], [-0.37609628760760172, 0.0021137207693828395, 0.63737605454328083, 0.28040769213722777, 0.40860473809815673], [0.14546718372683123, -0.25745452996848772, -0.21135494176747546, 0.28718623294378676, 0.1711575798385471]]], [[[-0.5947111733447652, -0.10464111324253625, -0.14695202132204438, -0.4672624180791537, 0.0038756402338065428], [0.50865082815296858, -0.70992632355289609, -0.083789441637888512, -0.219723609555973, 0.44897075803001762], [0.3922440339565117, -0.0022044736642160591, -0.66474188397782252, -0.29244703534829247, -0.42614823928436329], [-0.15171283746580658, 0.26850837597360039, 0.22042949554985869, -0.29951661374593302, -0.17850625430302303]], [[-0.075428680674107698, -0.013271889733907392, -0.018638286259823333, -0.0592640416121318, 0.00049155698212188467], [0.064513435447308656, -0.090041701520834586, -0.010627220944278745, -0.027868085760937706, 0.056944065383863138], [0.049749275462961179, -0.00027959881624123664, -0.084310847928529623, -0.037091776701138057, -0.054049429204483961], [-0.019242112279496581, 0.034055577660880403, 0.027957615017510561, -0.037988428715353816, -0.022640387229362124]], [[-0.3532454859480903, -0.062154542497690958, -0.087286300492737529, -0.27754370077046286, 0.0023020458991062157], [0.30212751503935664, -0.42168077613265748, -0.049769103651154077, -0.1305110391576122, 0.26667885303855637], [0.23298441427614192, -0.0013094093497455282, -0.39484220300610884, -0.17370717038100397, -0.2531227739093781], [-0.090114121605891315, 0.15948812802435958, 0.13093032006590874, -0.17790634599507124, -0.10602882772725325]], [[-0.072227341304925724, -0.012708605016093355, -0.01784724127475391, -0.056748760847650889, 0.00047069435128969445], [0.061775360236488427, -0.086220157230643538, -0.0101761810945841, -0.026685310200064687, 0.054527248906026872], [0.047637819811019395, -0.00026773210068940274, -0.080732532169715515, -0.035517529823623453, -0.051755466695160575], [-0.01842543974809278, 0.032610192954006759, 0.026771039661503931, -0.036376126188875035, -0.021679485324103666]], [[0.70063385154132218, 0.12327850810058294, 0.1731253174739982, 0.55048548326083113, -0.0045659218556941715], [-0.59924549057008991, 0.83636971470365384, 0.098712991859693636, 0.25885809067945281, -0.52893593651323512], [-0.46210574237141161, 0.0025971075426318192, 0.78313757556093189, 0.34453412333844274, 0.50204854995093151], [0.17873407194303609, -0.31633180283369061, -0.25968970045040041, 0.35286284854744571, 0.21029960438297962]]]])+(1.-msk_ref)*numarray.array([[[[-0.04233596550219336, -0.61414958865463609, 0.34087126828816822, 0.84447050733795659, 0.047688148107805452], [-0.079108232035683498, -0.1871991262677741, 0.53970448005897509, 0.67713533972233042, 0.51324114162702883], [0.33367390573053818, -0.64670352808912879, 0.75230367675374188, -0.2346402140543721, 0.7476512654737798], [-0.42839496140012295, -0.43640088165617968, 0.52887828398551562, 0.42415533096085639, 0.27358052219856999]], [[0.006535026471364491, 0.094800809940846345, -0.052617266080192696, -0.13035340175374613, -0.0073611952995075386], [0.012211234214777799, 0.028896264229826708, -0.083309380619102313, -0.10452336015704093, -0.079224470422251198], [-0.051506273233326287, 0.099825872046506461, -0.11612642782023788, 0.036219323024828859, -0.11540827646808195], [0.066127520176761559, 0.067363322884467697, -0.081638237016139606, -0.065473086131836458, -0.042230192069784012]], [[0.013987405042558411, 0.20290925106663688, -0.11262066284209787, -0.27900511757594931, -0.015755715864773], [0.026136616244797184, 0.06184883164137913, -0.17831328697292065, -0.22371915115142302, -0.16957004871119355], [-0.11024272190848435, 0.21366476664777023, -0.24855406312194187, 0.077522921098399741, -0.24701695016785025], [0.14153766832090442, 0.14418274911761109, -0.17473641355682273, -0.1401369342764261, -0.090388432869159124]], [[-0.041937623994992762, -0.60837102024620704, 0.33766399113833556, 0.83652483630650154, 0.047239447610071802], [-0.078363898181305333, -0.18543775904206911, 0.53462636991126944, 0.67076413479989139, 0.5084120265356894], [0.3305343489743488, -0.64061865781310723, 0.74522520867309516, -0.23243247093554689, 0.74061657219546462], [-0.42436416884402955, -0.43229476094107311, 0.52390203813238767, 0.42016442932868825, 0.27100638750574813]], [[-0.0031520555833960736, -0.045725510614821226, 0.02537901691107898, 0.062873680713151955, 0.0035505436505809574], [-0.0058898749921682944, -0.013937607047809828, 0.040182820908280265, 0.050415012459701446, 0.038212536005827885], [0.024843148966025779, -0.048149261327456186, 0.056011548965339497, -0.017469756223252215, 0.05566516123619937], [-0.031895451396048706, -0.03249151919192831, 0.039376774054842592, 0.031579796594295481, 0.020368993650557925]]], [[[-0.029332690030376144, -0.42551668073699989, 0.23617440004858301, 0.58509570616159534, 0.033040977097745769], [-0.054810542800389349, -0.12970187120181254, 0.37393700684008402, 0.46915668021459284, 0.35560174758272739], [0.23118767062278878, -0.44807184402127981, 0.52123744662883709, -0.16257167129355835, 0.51801399970019946], [-0.29681563805775812, -0.30236258081654926, 0.36643602156990251, 0.29387818844386165, 0.18955166277200736]], [[0.014567780534251534, 0.21132850796229211, -0.11729360055805842, -0.29058179901223818, -0.016409463383642461], [0.027221095564450466, 0.064415107942472433, -0.18571199039842728, -0.23300186742049633, -0.17660597139290241], [-0.11481699238528481, 0.22253029914814418, -0.25886724745869394, 0.080739558016618376, -0.25726635550601007], [0.14741045127063002, 0.15016528366624199, -0.18198670277245446, -0.1459515969595746, -0.094138894874813153]], [[-0.027915557661223007, -0.40495895278015243, 0.22476425025572142, 0.5568283340455209, 0.031444688516467548], [-0.052162514464329873, -0.12343566377830394, 0.35587121621983908, 0.44649059957050535, 0.33842177716388594], [0.22001844164824227, -0.42642442221267218, 0.49605521967087596, -0.15471744525909495, 0.49298750516835027], [-0.28247576510621836, -0.28775472180150208, 0.34873262147762851, 0.27968023070454068, 0.18039396885907827]], [[0.019896794141001286, 0.28863420952591323, -0.16020056170350774, -0.3968790044903957, -0.022412179682483609], [0.037178795593808087, 0.087978682771088293, -0.25364695972631646, -0.31823586164237055, -0.24120988427951212], [-0.15681798994758792, 0.30393370780647488, -0.35356300985062178, 0.11027475057816849, -0.35137649849086833], [0.20133440343007741, 0.2050969761115905, -0.24855893133134382, -0.19934188824627608, -0.12857567476264517]], [[0.019031479177974837, 0.27608145863679362, -0.15323341201371801, -0.37961866904827113, -0.021437470174215333], [0.035561883446723619, 0.084152474886055165, -0.24261581028475601, -0.30439572986539776, -0.23071962536554838], [-0.14999794887907483, 0.29071557913362045, -0.33818649438645693, 0.10547888291008713, -0.33609507477781742], [0.19257833596385984, 0.19617727371917754, -0.23774906111050975, -0.19067247560446801, -0.12298389678751555]]], [[[0.039312022832429155, 0.57028255681253315, -0.31652376231195917, -0.78415227979300139, -0.044281913616761259], [0.073457746554965758, 0.17382800271008952, -0.50115485949513827, -0.62876940728869901, -0.47658172522694553], [-0.30984048775231404, 0.60051125704775021, -0.69856867480514384, 0.21788050285126132, -0.69424857258722594], [0.39779587648678355, 0.40522995567140507, -0.49110194911079508, -0.39385907129874848, -0.2540394108791702]], [[0.01266226947405653, 0.18368608101126413, -0.10195123233470582, -0.25257279478490824, -0.014263054471462746], [0.023660491493931325, 0.055989411225018236, -0.16142028371853853, -0.20252449755815188, -0.1535053603564836], [-0.099798572223470744, 0.19342264302590167, -0.22500660533857142, 0.070178572392611174, -0.22361511503872297], [0.128128705185556, 0.13052319692484904, -0.15818227531516302, -0.12686067356148389, -0.081825234262152949]], [[-0.013915102698020569, -0.20186039214420648, 0.11203851497820788, 0.27756291124265026, 0.015674272938552655], [-0.026001513369958363, -0.061529128628490616, 0.17739156713488322, 0.2225627237013672, 0.16869352357676642], [0.1096728658674271, -0.2125603113519694, 0.24726926144118377, -0.077122197094641909, 0.24574009398306243], [-0.14080604546241965, -0.14343745356268894, 0.17383318294772462, 0.13941255195721089, 0.089921205703315479]], [[0.01856386266909902, 0.26929794766290732, -0.14946836188288476, -0.3702911777343077, -0.020910736814803238], [0.034688103556527239, 0.082084790805827812, -0.23665457326568434, -0.29691651780913808, -0.22505068577689918], [-0.14631239629866682, 0.28357249777252463, -0.32987702004791136, 0.10288719434372395, -0.3278369880548555], [0.18784655404053185, 0.19135706342446204, -0.23190740345976532, -0.18598752197857971, -0.11996209801265849]], [[-0.0054117214321516525, -0.078505508308230845, 0.043572889535357942, 0.10794696871018643, 0.0060958801839835815], [-0.010112246400639062, -0.023929288293918577, 0.068989339610362757, 0.086556850351098641, 0.065606584214102176], [0.042652865136574014, -0.082666812996781844, 0.096165467887198361, -0.029993587253299092, 0.095570759498330965], [-0.054760867421689362, -0.055784248126956482, 0.0676054487122945, 0.054218923978557237, 0.03497124862605383]]], [[[-0.0089165100089638304, -0.12934796429660675, 0.071791963154877889, 0.17785657281309789, 0.010043749914955106], [-0.016661231989643911, -0.039426593045324899, 0.11366884730854089, 0.14261359018124861, 0.10809532089429573], [0.070276104132366055, -0.13620425122323462, 0.1584450285705071, -0.049418308813881484, 0.15746516969043858], [-0.090225601703024183, -0.091911753589424355, 0.11138870831789933, 0.089332679885897562, 0.057619648814073228]], [[0.017948308954305499, 0.26036837545991393, -0.1445121840097171, -0.35801280043360539, -0.020217363783831207], [0.033537890834963349, 0.079362965137903474, -0.22880741320566883, -0.2870711494836547, -0.21758829564203816], [-0.14146086616900785, 0.27416959992046752, -0.31893872402972806, 0.099475587836400245, -0.31696633686329084], [0.18161780487275841, 0.18501191029860004, -0.22421765342054537, -0.17982041591343276, -0.11598430974831016]], [[0.012077984139612802, 0.17521010571345352, -0.097246814220426803, -0.24091812417671674, -0.013604902821071602], [0.022568706311665274, 0.053405846570203093, -0.15397173710122566, -0.19317924597973138, -0.14642203844499224], [-0.09519348604456189, 0.18449738567760951, -0.2146239436899896, 0.066940265805848581, -0.21329666205169964], [0.12221635878394362, 0.12450035955559599, -0.15088314273668216, -0.12100683896796993, -0.078049506343492406]], [[-0.034507048945266419, -0.50057887340074514, 0.27783614709921911, 0.68830803275373798, 0.038869487003429785], [-0.064479257823643985, -0.15258160138803312, 0.43990041772898164, 0.55191707649037802, 0.41833077348692432], [0.27196974629538956, -0.5271128231548633, 0.61318501863623065, -0.19124971533913707, 0.60939294771386454], [-0.34917464915672453, -0.35570008630810673, 0.43107624014459267, 0.34571902618126565, 0.22298904390142002]], [[0.037199743315645309, 0.5396406290575323, -0.2995165820262532, -0.74201888956512008, -0.041902596238579504], [0.069510778624606376, 0.16448802722388578, -0.47422724122017562, -0.59498491480767002, -0.45097444929099539], [-0.29319240737905866, 0.5682451069880865, -0.66103378861657258, 0.20617353663278329, -0.65694581038434263], [0.37642185344691675, 0.38345649113612701, -0.46471448509803931, -0.3726965772609811, -0.24038958557399015]]]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5, 4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank3_expandedData_rank3_offset1(self):
      arg0=Data(numarray.array([[[-0.70552385106924542, -0.64828345576263868, 0.12285918288277498], [-0.58189272712924534, 0.20382682414219544, 0.60603931112988252], [0.69311894778989691, 0.049502285672648583, -0.96855521777825948], [0.11334115561828928, 0.56762423318383393, 0.7542006883725525], [0.40711701265744416, -0.58569180947223098, 0.11652200660166345]], [[-0.22097208767539622, -0.2445120519450672, 0.14266192763040642], [0.99391139620457003, -0.64825422103833641, 0.15417312867154442], [-0.0056711723117388591, 0.41852611899004266, -0.89138658525256265], [-0.06990196750649913, 0.58264546506562831, 0.65114996995951957], [0.92918101014159959, 0.95839459750045108, 0.5841569266614548]], [[-0.50500233583346099, -0.88035086893285874, -0.21539555522324205], [0.96669087985464253, -0.41406154475357115, 0.57796282998609194], [-0.32174260434832025, -0.35116536365811646, 0.2038273711907026], [-0.59818770332878768, 0.93191399049520252, -0.24165300621502483], [0.99624358623008313, -0.68871164488336478, -0.73636808564771616]], [[0.11371563169128018, -0.40002014833125843, -0.3595508208326974], [-0.28068720798178926, 0.33452123155746638, -0.084108161890757094], [-0.43395818152951393, 0.54193988464603216, -0.75101690857691072], [0.47310681903879281, -0.68208367941386272, 0.21133399457834257], [0.50897307225085009, -0.21783266248888244, 0.52017754929244142]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[0.36945378222334058, 0.25828419551183424, -0.18142224884662417], [-0.78065929062008532, 0.29672192998673963, -0.53688347345096576], [0.84973993120658453, 0.42873959252465199, 0.83245457502359943], [-0.2708790701751087, 0.94400174636712864, -0.90397606823875853], [0.86955665175533992, 0.084097857050341673, -0.75089517451665988]], [[0.48311200936579457, -0.34804513181996932, -0.56442115806295345], [-0.14363262083232953, 0.39337229314367339, -0.66884339796161796], [0.65402514217882657, 0.55768133632398076, 0.52369494682223161], [-0.87262911852336345, 0.96002376228542041, -0.5686271522780395], [-0.038894027419293709, -0.83577317231266046, -0.40481988170666816]], [[-0.72638748110510232, -0.91044174459913307, -0.87963636254727651], [-0.72763017727537993, -0.62857198277352544, 0.72842403218365326], [0.7322350403290423, 0.74186033236186133, -0.81045730991293929], [-0.22237751882941259, -0.81820886018236649, -0.86368744613738424], [-0.47472878766146476, 0.35992676004172774, 0.83624259072652096]], [[0.14238521139586147, -0.88246269356458407, 0.33466788406455916], [-0.30084191188143494, 0.69046874762241117, 0.33474884981975794], [0.056359552028735216, 0.88428107015780921, -0.57581586893165326], [0.46533409720207453, -0.12327928907611763, -0.14594262958143966], [-0.3921872357183207, 0.6147172033167736, -0.67971231282323741]]]))
      arg1=Data(numarray.array([[[-0.41707777608856134, -0.53130384819766108, -0.86669863537572556, 0.50970457831636051, -0.86101404830213824], [-0.95495278193450628, 0.69091167651142027, 0.091825707723040217, 0.78088105573661548, 0.23413105515166821], [-0.072090515524667831, 0.50963401514036621, 0.50755514149357106, 0.36592043389227924, -0.74502777342572934], [0.43840040851530193, -0.20015345521899275, -0.53257433404167931, 0.43353657882379681, -0.96681349316248633]], [[0.86310463932770287, 0.22306709776661493, 0.27580110348506803, 0.0094759587229689135, -0.81216808423947251], [-0.97667913367788883, 0.82898170589528131, 0.21124206825736391, 0.74462051567685017, -0.13829508062885276], [0.9553488792410656, 0.69335295090100235, -0.076104613853439584, -0.99689297288643197, 0.26439419466958936], [-0.010312746790791083, 0.15941625169285834, 0.026439473470127872, 0.008183166410928866, -0.20156230584312529]], [[-0.69054326125302112, 0.14065842272370332, 0.59485204595919616, 0.696663198923692, -0.36072300077914998], [0.50850384307692087, 0.31476059403742385, 0.48663248760357147, -0.72496145425053338, -0.91745457800907748], [-0.45195763679509859, -0.50903707441688351, -0.84296580457734538, -0.37645774173918611, -0.89842477131724241], [0.17040529431845464, -0.15022697337310187, -0.45498509615814897, -0.059821862480451404, 0.095470818338808883]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[-0.20951276484833636, -1.363144550214912e-05, -0.62509255307967493, 0.035272529184403378, -0.82203632555821793], [-0.6232344471360729, 0.56512923303564033, -0.89184840030111157, 0.3844253603095884, 0.16353425517522902], [0.10644502205620898, -0.93507876128760992, 0.6427701230195324, 0.067728723217342024, -0.7768846899902464], [-0.47450441863572967, 0.01390926787154223, -0.72479068088419596, 0.67717220301301473, 0.61259587038957841]], [[0.6613796821357607, 0.73417814478744559, 0.95045500116357773, -0.95140947540763987, -0.59127534557884287], [0.74089738870492283, 0.1160221396823653, -0.05701577743745645, 0.2671585631986515, 0.72998869428229085], [0.23436492917138141, -0.8747651271675716, 0.26163416062219635, -0.67972080209517793, -0.39737470857977231], [0.88225332440083504, 0.10278786128885309, 0.20697293684644125, 0.75819947879005256, 0.73547896241726285]], [[0.69064183721559758, -0.67265069745949702, 0.54325060587875007, 0.64814704573280335, -0.47526216739216776], [0.32915831691838093, -0.13870544483832359, -0.059296963141278303, -0.16919988004090869, -0.66575528191023636], [-0.58098855708399189, 0.18875589848343077, 0.64129821320336089, 0.67814521718100385, 0.050841472979858304], [0.68584915406245028, -0.72053076890589596, 0.69161686029264091, -0.96200112605456889, -0.48292796730765986]]]))
      arg1.expand()
      res=generalTensorProduct(arg0,arg1,offset=1)
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[[[-0.35011772030948357, 0.24751800694265427, 0.50576230277898637, -0.28016037290470996, 1.0896629463709839], [1.3693812549048654, -0.98619856243571147, -0.14194269516106245, -1.1227235426957902, -0.1882483506867218], [-0.62400244070910671, -0.87158807909093483, -0.41232098593664462, 0.34185233724372538, 0.24385274837120421], [-0.28168050617924306, 0.019409354783175025, 0.30270452476613424, -0.31852507321398232, 0.82450895387542988]], [[0.00012203973457103334, 0.43987343688247427, 0.92104501971356323, 0.12754335263069089, 0.11686385248204009], [0.66477999130124954, -0.042310477684781633, 0.284542505971284, -0.74197051251431834, -0.7204409457164983], [-0.037229420180876827, -0.46372487483526281, -0.82172522270858028, -0.64426815833613582, -0.057063857624260861], [-0.15393171653045271, 0.057917696744767322, 0.039551351293914516, -0.28685823366925478, 0.579357004473947]], [[0.42247042190056378, -0.49344988227517728, -1.1632195141088653, -0.32100179372957993, -0.28760918313445077], [-1.2027577673617666, 0.21505744775604568, -0.39722733188283987, 1.280269072388446, 1.0440401666084944], [0.43507057820377115, 0.88059006264855899, 1.1644876617134332, 0.56889801541986817, 0.36686925060418729], [0.13830618837390032, 0.014664435465815667, 0.072849641233197149, 0.3588382798268171, -0.7725633051821551]], [[-0.078161171056842615, 0.17248437742276559, 0.50695658751293493, 0.58857315392618903, -0.83065214877040772], [-0.27910824769721787, 0.78625148967378822, 0.49733230597461114, -0.035595817357678139, -0.74390782902302544], [0.19324159187746554, 0.067410333366964004, -0.62143732689018127, -0.80831145242218738, -0.6119583377786274], [0.1723548342128185, -0.045498383021432928, -0.38850497734038703, 0.0086648105432232739, -0.15198725096474006]], [[-0.75577626266516384, -0.33056160595509282, -0.44506885263678586, 0.28313600771516156, 0.083114559774793123], [0.24250733342746206, -0.1675693615773361, -0.029635547447825011, -0.20268213790277023, 0.069413383362803241], [-0.64155229981961626, -0.25792448796924994, 0.15298411491485747, 0.68897887158836568, -0.56285325288842092], [0.20437632282061363, -0.19235941805822115, -0.28532123132948678, 0.16473673985117246, -0.26442837817782355]]], [[[-0.21739117226256627, 0.08292732845307911, 0.20894225263397331, -0.01556015601215438, 0.3373835179410774], [0.52237186738382968, -0.3104638604039433, -0.0025182211754535971, -0.45804600584195188, -0.14880745272015422], [-0.2821414707420436, -0.354768255294588, -0.21380615053794458, 0.10918795706191396, -0.028188234298014203], [-0.070042314862469104, -0.016182537563115777, 0.04631024166396823, -0.10633466793278981, 0.27654325995000562]], [[-1.0805127954704632, -0.65098738816765966, -0.94850067925391079, 0.60786510385411796, -0.38489407971277956], [-0.23760445336653344, 0.19784172461059252, 0.029353708088834307, 0.18165361244953993, 0.18090905098144364], [-0.76064025136219249, -0.021417759922119542, 0.42383730104885303, 0.95189289909018815, -1.0503992050793378], [0.46868836112899903, -0.32543802068967115, -0.61661767598275141, 0.4163692504955987, -0.81554429853339139]], [[0.97913815453321784, -0.029008508743040715, -0.40989797121972699, -0.61992091622339685, -0.013486953346991182], [-0.85662352980898038, 0.062458845821321052, -0.34588810781386808, 0.95343553866865627, 0.7585988024875393], [0.80311627098743354, 0.74104491684652629, 0.71667820868844401, -0.083731563922809338, 0.91572484606948068], [-0.15869939156018897, 0.20176527866616556, 0.41965354224197404, 0.054290613956962198, -0.16397753043646718]], [[0.082391337312562984, 0.25869794498295301, 0.60861609391032134, 0.4235239925567677, -0.64790424624716381], [-0.17119232758478442, 0.63966269735280101, 0.43353116514811163, -0.092793984687639719, -0.69434374388859532], [0.26737675929696558, 0.036895056450956309, -0.62871826946815823, -0.85154417531247373, -0.37888227713075073], [0.074305676015507707, 0.0090539872306314301, -0.24363069858633793, -0.064490179003683215, 0.012308622449547044]], [[0.036268444895321605, -0.19772455305346687, -0.19350668295620799, 0.88965015580142626, -1.7891342468561362], [-1.5263219535963919, 1.6203431791032883, 0.57204569921386172, 1.0157288725194697, -0.45092857444550077], [0.58460188246450984, 0.84069043834705615, -0.093751965369038237, -0.83532091853731427, -0.96369274456264964], [0.49701308663696303, -0.12095124239479091, -0.73530120459432102, 0.37573130338976546, -1.0357510233483798]]], [[[-0.4004697188999134, 0.041635171968557455, 0.066754607507631014, -0.41580232766627745, 1.2275051152923779], [1.2325442418768029, -1.1465048085223228, -0.3371578100922793, -0.89372060020269573, 0.20112710288037544], [-0.70728667112764454, -0.75811591759569019, -0.0077466815717166793, 0.77391224536883652, 0.33699780926681117], [-0.24901893771491704, -0.0069060509498913014, 0.34367703665772831, -0.2132556793522829, 0.64512463353176441]], [[-1.1596720600804928, -0.52467475151052323, -0.60822592544835119, 0.89144857116882925, -0.70453134273204998], [-0.22484255396511937, 0.50656849445119312, 0.28255534679100958, 0.027551100126022632, -0.24665961386695773], [-0.72647719139478584, -0.088636747507444102, 0.034958018285171533, 0.54892840871770265, -1.3489431458379511], [0.52655571465204631, -0.34632026583732717, -0.78874679456732144, 0.38113270937302246, -0.79597200229090204]], [[-0.30965238228463876, 0.12127968185162916, 0.30324921010355144, -0.025322278524807229, 0.4887049819578545], [0.75387187981931003, -0.44924855995501867, -0.0045361193842003295, -0.66049462616839472, -0.21376784798462398], [-0.4044121833828504, -0.51120820515933074, -0.30839631262527395, 0.15560969810402875, -0.036262466736618426], [-0.10269734652806996, -0.022203941111837832, 0.06932880984671104, -0.15455416552872009, 0.40130635756778943]], [[1.2207019406420168, 0.49170824725032863, 0.63172358794615191, -0.46441898891122813, -0.15465298669958633], [-0.46182141983775093, 0.28318193682581266, 0.024334226029495143, 0.40199794567462144, -0.047227781772181537], [1.0426435678955239, 0.46429885354847428, -0.17083097798142985, -1.0569354674061227, 0.90916614856685773], [-0.31303527816995408, 0.30459437068584438, 0.45316724923003848, -0.23725411022494905, 0.36742639999308724]], [[-0.50144725589936356, -0.78651333239976595, -1.4914204506558808, -0.011736832231812655, -0.032805200523823574], [-0.65316129294732739, -0.11439268393805629, -0.41234473323860399, 0.79895740145532612, 1.0040812657685838], [-0.39697243197839138, 0.40503802362058527, 1.1787958039443946, 1.3283291510767414, -0.26274917259380282], [0.31837508362805311, -0.1985710761528392, -0.21374643348702449, 0.4703231044047263, -0.89466509817549622]]], [[[-0.14440211221755847, -0.20022273760156978, -0.42276272253238123, -0.19631502133170659, 0.35667109215302084], [0.099265298917958295, -0.36621435717069573, -0.24902817548060974, 0.051595659345136546, 0.41181672610163478], [-0.22785487960266637, -0.036377098361419169, 0.39124937942512428, 0.57574383822437558, 0.13254505513123543], [-0.0072910775574499473, -0.032516057656499987, 0.092451915872872881, 0.067535454239292456, -0.063639434720555943]], [[0.4638755478024586, 0.21192035261567588, 0.28550063274538828, -0.19849270671936578, 0.00032791002682059506], [-0.10144620007435348, 0.056907976752560673, 0.0039608912598047483, 0.090883224005255628, -0.034814814688051296], [0.37783269525867946, 0.13170770690056113, -0.097022540356326806, -0.40452788126643363, 0.37313009332188962], [-0.14083569548301036, 0.12214394995672047, 0.19659932821742918, -0.11391922206809239, 0.19591543420401042]], [[1.1673548072473383, 0.24581575523619442, 0.078834637332781399, -0.73926091392117177, 0.20440688568437615], [-0.49678678857384051, -0.086959052945662058, -0.29083724149049217, 0.60912814364132961, 0.51247319395979307], [0.88845375762881051, 0.53689121775397974, 0.37157974070845706, -0.41632409939608855, 1.1413288514487234], [-0.32381359021146594, 0.28607525163434644, 0.58714509509778345, -0.13877473088674189, 0.23862177374525806]], [[-0.93196719387860472, -0.37378799401940027, -0.47244800684371402, 0.38190993160929637, 0.070381944969684959], [0.32184637252836246, -0.17204025293897587, 0.0022005888197148965, -0.29166234881479891, 0.011208475366320692], [-0.7812484059234942, -0.33939024243098137, 0.11389018274205623, 0.77352556107658843, -0.72268438084750664], [0.25045681055952523, -0.23517725440766427, -0.36615230027114531, 0.186885114328355, -0.29974746774806266]], [[-0.75949883997361389, -0.2458432981162762, -0.19177607639367711, 0.6197502873461016, -0.44895623575581556], [-0.0087803522917712096, 0.33480754091847842, 0.25385668522095478, -0.14186391207650723, -0.32794768590351747], [-0.47989653702966667, -0.15643458679892888, -0.16358191599629385, 0.20757463242776958, -0.90413316189160953], [0.3140214642741036, -0.2147434844215278, -0.51349840818407788, 0.1877578937109978, -0.39851340385685508]]]])+(1.-msk_ref)*numarray.array([[[[-0.031879159524197453, 0.31165537752105055, -0.084013049235009976, -0.35029075626237849, -0.37019837536126637], [-0.098610879789727476, 0.26392007132925438, -0.33346525046513065, 0.24172686066040983, 0.36974571215867441], [0.20526352376506468, -0.60565091175263641, 0.18870405772377058, -0.273569137929567, -0.3988823683532608], [-0.071863657915711227, 0.16240762414256721, -0.33979350602132413, 0.62054318171825551, 0.50390233127353501]], [[-0.010990246355172206, 0.57899244046126008, 0.4783428791313577, -0.65781932058210835, 0.72144633630983068], [0.52965460398749387, -0.3322784119511728, 0.71114746753517055, -0.12999280528701601, 0.44637212681905769], [0.29836707325901668, 0.36907600323029394, -0.76845428740045274, -0.61864608497556706, 0.46127651391489261], [0.26398911590524271, 0.40648207532968739, 0.25591032581204032, 0.21281614704966129, -0.00071987590727617956]], [[0.68045625012667144, -0.24519149503986226, 0.32856303910832652, 0.16161853922057495, -1.3476544070437413], [0.062074195126721077, 0.41449017835744451, -0.83164614775654333, 0.3003518185152988, -0.1022743881955912], [-0.29271447242659532, -1.01248949521065, 1.1922119950675527, 0.33065366945929697, -0.78819699688083289], [0.54598984483374058, -0.54392064893122338, 0.048593528807530095, 0.099668158230160953, 0.43386052762740052]], [[0.05677250531247946, 1.3011292760847049, 0.57547012372279993, -1.4935962142453478, 0.094133102168920346], [0.57067835520164467, 0.081829823972192975, 0.2413631075382362, 0.30101800836991766, 1.2466394373974992], [0.71760692535013415, -0.74311735727709671, -0.5068481060633353, -1.2730309649113771, -0.21064009125139774], [0.34139077299236786, 0.74460676253476099, -0.2334916505517074, 1.4019358509439286, 0.96490935030325353]], [[-0.6451622272217824, 0.56682111821331227, -0.8715464171801276, -0.53603052470063084, -0.40766007623843958], [-0.72679316825199369, 0.60532234621350089, -0.73578181005346188, 0.48379846526981674, 0.70350521283296819], [0.54853106925005513, -1.0284057227427119, 0.099380174540164345, -0.50748507226297579, -0.74714022799136148], [-0.85341367978617622, 0.56178221272614259, -1.1321723402450401, 1.3749645483306825, 0.95716729887047158]]], [[[-0.72122097703360666, 0.12412457093502854, -0.93941309161532804, -0.017653887414880276, 0.076902907484777683], [-0.74474169379988941, 0.31092806622869862, -0.37755014833928535, 0.18823726316182904, 0.20070271849157995], [0.29777753003580126, -0.25382785809761699, -0.14249281039003792, -0.11346543308485396, -0.26571399385405953], [-0.92341053152217545, 0.37762773062431232, -0.81255419452168842, 0.60623617576854849, 0.31254731201654407]], [[-0.17166992346436277, 0.73870527644131079, 0.10031676381854421, -0.81283328531657562, 0.20335585625081828], [0.16080993465914009, 0.05724112333385642, 0.14533047832064505, 0.16304497732400328, 0.70895449793583698], [0.46549405282498707, -0.33604868739459309, -0.41833120365899079, -0.73068433600973337, -0.078735199788735277], [-0.043517352093874084, 0.52035831991519821, -0.27706236708946458, 0.84441875135165989, 0.52433147825464343]], [[0.59349812934661905, 0.057164762340852715, 0.40572236641867176, -0.16808285407376683, -1.1162680450362661], [0.17795219518766345, 0.36167276832821504, -0.64614143172075644, 0.31180407328829218, 0.16540390806423244], [-0.10394210393411474, -1.0005546946692958, 0.90214094308066728, 0.020369906041522112, -0.70308515584099351], [0.54085412933022514, -0.31091843996721452, 0.0035898707605608315, 0.3619262163348439, 0.5579090556705868]], [[0.42504944891212643, 1.0873278105170774, 1.149026304695334, -1.3127095489775844, 0.41994142518653671], [1.0679632684117593, -0.30289253132553173, 0.7572342455358565, 0.017229451617201935, 0.9366682698354527], [0.46247474400355354, -0.1311500823174867, -0.67438449137560164, -1.0972619614475452, 0.26753319745450199], [0.87105807698281346, 0.49625451640141321, 0.4379002647608245, 0.68398929438377665, 0.44611424099806435]], [[-0.82420014666433472, -0.3413034911543506, -0.98997107057275091, 0.53140781433044149, 0.71853994905396301], [-0.72823189415818579, -0.062797621854444735, 0.10634442292035719, -0.16974033495663926, -0.34695449810897483], [0.035179723012770475, 0.69106206384655033, -0.50327699800527992, 0.29093150163694709, 0.3417496561431464], [-0.99655364526506207, 0.20523685628390292, -0.42477265496546379, -0.27058355581464755, -0.44302106357024956]]], [[[-1.0574738956398497, -0.076728516497314159, -0.88913749124002406, 0.27044766928764619, 1.553496537247566], [-0.51137383554461713, -0.39412384638506931, 0.75189682186986706, -0.37363971048876088, -0.1977788615249888], [0.2203627145997219, 1.3096156425882046, -1.2692120598036494, -0.026872295876384955, 0.88138382765152512], [-1.0618640415554528, 0.53011918685511183, -0.27032926395554358, -0.33597469575576056, -0.6897917203519468]], [[0.23980318392116279, -0.95144882682151932, 0.25312361741289202, 1.0444898682237129, 0.62360516931217758], [0.2275436790402352, -0.58516972981795268, 0.64158099689948245, -0.57089713972030931, -1.0627950469476448], [-0.64797386589435713, 1.3677387079587509, -0.16501781136983684, 0.87194926292915342, 0.85209750392631545], [0.29029301909461747, -0.59958230082134623, 0.9010725244258474, -1.6700586190511202, -1.2598210486650698]], [[-0.22249696251463646, 1.0898023358568685, -0.19289123240454087, -1.2052806789209136, -0.655387828697505], [-0.17348048156760326, 0.61229449154301197, -0.64728273572801054, 0.61681333931321392, 1.2008614021313759], [0.72267524233169134, -1.4866295801764458, 0.14500998758313954, -1.0042723042259571, -0.90486356910847865], [-0.24879147805620033, 0.67039851893635372, -0.93769806181174875, 1.8379881774701239, 1.3855793306300352]], [[-1.0910544716383839, -0.01974806865898826, -1.107862900568084, 0.21081137826666729, 1.0770670926259429], [-0.75190538403532226, -0.10080422790810049, 0.29619189135964791, -0.1579432490041924, -0.058645080218684309], [0.28636208164227789, 0.76065497256775927, -0.91089022945629583, -0.044613273435360146, 0.4539860551931072], [-1.2087076759679873, 0.53511833235599615, -0.60551073723172266, 0.059914890085403627, -0.3209041304776461]], [[0.91505410622189975, -0.29824232971114195, 1.0931329131077852, 0.18282554972140319, -0.22000597731513566], [0.83779233385671859, -0.3425150433815547, 0.35327795972896187, -0.22783241521262493, -0.37162487483482221], [-0.45202568280765826, 0.28690315025783358, 0.32530853374037821, 0.29029143261033236, 0.26829954073120849], [1.1163437614273604, -0.57214554487663905, 0.99693357486120304, -0.85304317104188465, -0.42994326937041738]]], [[[-0.3823387727720699, -0.87300134975494781, -0.74593648496473797, 1.0615196552335742, 0.24567763417107882], [-0.63239495635083931, -0.068339422317740983, -0.096516515662743746, -0.23764674493278334, -0.84370984143615724], [-0.38610032077116063, 0.70197674040909908, 0.0752604898010589, 0.83642524338413082, 0.25706647305817265], [-0.61658637183524034, -0.32986448672559898, -0.05438341844241773, -0.89461432835932997, -0.72342863470362462]], [[0.75088378221305185, 0.28176211776823479, 1.0261660285780079, -0.45056348600440799, -0.32004763144228143], [0.80924690271962352, -0.13633638556694253, 0.20908817520367953, 0.01217391294379442, 0.23197560665370981], [-0.064686716056379684, -0.25950127959964048, 0.20195185777187838, -0.26269327807544096, -0.023636217318664516], [0.98150637995557433, -0.17440953103543977, 0.59247370714605696, -0.0022375061313449351, 0.16187114362217264]], [[0.17535495791163541, 1.0365420131420782, 0.49242710962598185, -1.2125387994621124, -0.29551969651893445], [0.43050173923921187, 0.21431540849768302, -0.066538016650584855, 0.35533727721154706, 1.0380843572950553], [0.54778609497057129, -0.93492750458743823, -0.10168531614433807, -0.98773385527816515, -0.42445113260406403], [0.35849423077898085, 0.50657033087556802, -0.25607059137814842, 1.2625620828180266, 0.96297333992135936]], [[-0.27982193612829726, 0.0076531086560228667, -0.48733171764101191, 0.039110310062907092, -0.24026851671996113], [-0.42938777248086279, 0.26891381191697677, -0.39932465095958847, 0.17064458565755208, 0.083267654228567259], [0.1054311541651225, -0.35483114038448543, 0.17325603400345213, 0.016341685292060815, -0.31994280253465535], [-0.42966127692150874, 0.098956997250864598, -0.46372167691611688, 0.36203799701299033, 0.26487220012751211]], [[0.019291940120299444, 0.90852624327132459, 0.46016023488967045, -1.0392347351538804, 0.28196657435185285], [0.47613400487852608, -0.056035867787257887, 0.35502785550276694, 0.12846748720378603, 0.83712262356113876], [0.49722685071896067, -0.29930692628039318, -0.52715350994541332, -0.90534206523763927, 0.025853614325704072], [0.26225075771783418, 0.54748406470232258, -0.058617017186180953, 0.85438397908220653, 0.54011137544062915]]]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5, 4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank4_expandedData_rank4_offset2(self):
      arg0=Data(numarray.array([[[[-0.10636487994891652, 0.29150806007696795, 0.29275033208751267], [-0.80537227868973327, 0.18855251144256546, 0.36730211423925563]], [[0.95237776531673068, 0.26568206134781547, -0.56859598296569369], [0.26090686262314344, -0.45019584428062664, -0.77967603569580723]], [[0.17043054316780082, 0.036554015950833518, 0.96552869474601111], [-0.34394425614446544, -0.84361224007802904, -0.83086754132603602]], [[0.23445740814264227, -0.9552164681114601, -0.69607895334860914], [0.26504988317035671, 0.11465540671925578, -0.40224778079209456]], [[-0.64730401368305168, -0.36521701896195125, -0.66870368175674133], [-0.73586240976308992, 0.41033916318329045, 0.40313225012675469]]], [[[0.84161695735495234, -0.92994399529093763, -0.3919209526972911], [-0.56175880867273142, 0.61370060965977991, -0.056747373607125784]], [[0.80159215776589465, -0.13390980963485188, 0.70469750445333768], [0.042189973925045976, 0.29283870922268385, -0.60252811193949007]], [[0.96586697160179358, 0.21533543246931397, -0.93208922951602502], [0.65148124661346385, 0.58713119931380819, -0.80861527875962014]], [[0.44740368388824092, 0.92746270485560411, 0.44647588706679242], [0.55550533414489389, -0.85011969677235455, -0.6519361215277637]], [[-0.70089389911246802, -0.85042295333014462, -0.026734616947711842], [-0.50643971846320834, 0.86621385795370243, 0.64978524739373378]]], [[[0.89193041634905135, 0.37017255604362798, -0.5930086734887885], [-0.38229069823437367, 0.3670857753311263, 0.36147160573566084]], [[-0.42273927406973955, 0.61936775385318943, 0.47425208071165348], [-0.3545525881732059, -0.86625492036648155, -0.6462812599145964]], [[-0.88888403701148855, 0.98556334877985563, 0.00028420106439774884], [0.86140260283006009, 0.1797149099072175, 0.049136161126248634]], [[-0.23990792244067283, -0.79575205529454895, -0.62096735897540611], [0.17150724629936698, 0.6961344247484107, -0.26373824585371208]], [[-0.71075592589901149, -0.26807631457635295, -0.32242225783377654], [-0.16177306205945086, -0.2773353030852348, -0.99200081823465269]]], [[[-0.78678911243833838, 0.23649066913088856, -0.59049350220667729], [0.8538713303139509, 0.90477981459520795, 0.76341493264900184]], [[0.44387123846434617, 0.76158931411222253, 0.96223254592888607], [0.25190686693586106, 0.59242362437869045, 0.70062079700289592]], [[0.96204771501951236, 0.68807794221833896, -0.11892596894004637], [0.97396767376177396, 0.25568338684127778, -0.74317724901845628]], [[0.77872385036104008, 0.84342170458729915, -0.14413092225071544], [0.7264549976342638, 0.0016809112853031216, -0.73043866827553883]], [[-0.20609829148457104, 0.26088029781785371, 0.3699690709174146], [0.98592685870184837, 0.41256701505189008, -0.50015406988707767]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[-0.73032928156786459, 0.27326602440123193, -0.96215942041060365], [0.035548678376426057, -0.76223756007763099, -0.086920913114044707]], [[0.55175126521131124, -0.8258683268873388, -0.21591170856667197], [-0.51408741471724717, 0.66659877334226691, 0.73621865952687093]], [[-0.47555568928755787, -0.30010132914003251, 0.77549440813170278], [-0.38538776253235119, 0.24688633337669108, -0.50857319564483916]], [[0.32002383757997377, 0.624783337681873, 0.081625119936591606], [0.48615699593704842, -0.68595392798202504, -0.88567363185910897]], [[0.61406987813327207, -0.69275557191478798, -0.21661099797278505], [-0.82593590427413321, 0.068348406851021393, -0.17041344029150052]]], [[[0.42396128135182876, -0.73234750353190003, -0.74810685479765393], [-0.30934184272173337, 0.30771677807981335, 0.95500914562958306]], [[-0.21705043388203049, 0.81113542346770062, 0.78904071607374893], [-0.97643817936770372, 0.24187857863617102, 0.023089215132658047]], [[0.9547001878709187, -0.023974523258595948, -0.65077493872600112], [-0.56135756304583739, 0.27044261921099744, -0.9197703510263906]], [[0.58191012654267116, -0.22528461094451191, -0.96104720456823567], [0.88503831639264052, -0.65763292639016568, 0.54079889545957016]], [[-0.11051566589767825, 0.57698160244350727, 0.89274742640496751], [-0.43204868952729969, 0.071093951977197811, -0.11818668426644718]]], [[[-0.36333635670061049, 0.14058551905369532, 0.93651789498151627], [-0.43203818409283312, -0.62266271060998157, 0.49745754258962682]], [[-0.50514301407696904, 0.012606998138551706, 0.13394850830553984], [0.41032731930672939, -0.20586527441577607, -0.40709447312812541]], [[0.89867242372681266, -0.69217629598851227, -0.29661292079926849], [0.76932951015215001, -0.88118977186351688, -0.8160005078795074]], [[-0.70658965014982389, -0.87681848728750489, -0.42024114547421276], [0.49091527720584827, 0.86818347740665192, 0.73194960836806788]], [[-0.13202427471680434, 0.14457325983762592, 0.84248070567062872], [0.23587232347147569, 0.64202551743912206, 0.27857679840583294]]], [[[0.48589555116630545, 0.31393913706297094, 0.84016496072074109], [0.39827233426363517, 0.031041423213845176, 0.67881265051891604]], [[0.56950908681764156, 0.55342961791619172, -0.33248985763841898], [0.15465175258240604, -0.598975151792285, -0.87453526526070346]], [[-0.47146259018173153, -0.017876100085612912, 0.85221624257197814], [0.050197148820576354, -0.1707002614315587, 0.81548035066470703]], [[0.59668874718378295, 0.52835604611693143, 0.5231365886695718], [0.92145517612088623, -0.27135892414399243, 0.34047251152014502]], [[0.2416271259834748, 0.5120059268860635, -0.66848624097843135], [0.29838116556092054, 0.97601157080153977, 0.28353011639023062]]]]))
      arg1=Data(numarray.array([[[[-0.053936965252169511, -0.38376259490212528, -0.13465560776566132, 0.61712497494348395, 0.83885934327952527], [-0.72434401417369809, 0.14790848504855303, -0.027302833941968974, 0.34450047635195591, 0.58007263167416223], [-0.75328712739133241, -0.87311668029678335, 0.62239464628214791, -0.8274862969128256, -0.82649214453192843], [0.71652416204770319, 0.869609187146132, 0.32283289285540806, 0.27018231261212855, -0.38819829196835132]], [[-0.8775702522010691, 0.77818758046179548, 0.45586943577867367, 0.18271990006690353, 0.42867105362016811], [-0.027067368090654798, -0.58716585708860647, 0.92871582449292633, -0.89636804654968261, -0.34622006044746834], [0.16843998084690903, 0.4447637349237632, -0.8672116295671779, 0.89906949819546189, -0.66057820026392244], [0.26909073370884973, 0.87310786495287052, 0.76577177522203543, -0.16611849654022226, 0.83862610234906376]], [[0.3253573424121472, -0.33615997730297664, 0.39514977962558162, 0.73453931484824198, 0.92823709163227641], [0.012620603749422532, -0.20654582641472574, 0.41548699129149647, 0.0071786109889377947, -0.81936585480163071], [-0.65928209245702174, 0.57295470065757881, 0.23222720471203018, -0.36482379826206257, 0.33686689306040551], [0.64961999973134033, 0.05208261195863706, 0.6934831570468698, -0.98563377079397174, -0.99847400463346969]]], [[[-0.2991059785058523, -0.36195856672688764, 0.36034123413712971, -0.24193631825060535, -0.61519192002661782], [-0.6268396497313673, 0.9385789112962335, -0.88508000923254149, 0.11271227230715053, -0.084481115968957798], [-0.52350847309158888, -0.24471250140956391, 0.46738930770111153, 0.79652273700750698, 0.66623942693283711], [-0.58430205021041193, 0.30867830673816954, 0.62214060201283661, -0.98594151599002555, 0.77818240425639384]], [[-0.08994498966310438, -0.39431616282860205, -0.5885872565797079, 0.54582624645110522, 0.6644266022103329], [0.57912269115577497, -0.38110437522952578, 0.4171977061176424, -0.89060157576142607, -0.31935776996079968], [0.57612731475532986, -0.9694441022297724, 0.55523124203736951, 0.65880011581847131, 0.43045530448096403], [-0.59994544501209268, 0.5266204629901714, -0.46303458853791124, 0.37365592353954291, 0.30360195851744587]], [[-0.37630621342836568, 0.20066269827414973, -0.881322050118311, 0.48157299645124185, 0.22807246497777678], [-0.64283302139734033, 0.91993437668568179, 0.18624147609634978, 0.20389142579239339, 0.30081589506872852], [-0.74178944763308974, -0.99761329136348476, 0.43805500375767137, -0.68466470416134051, -0.21357429397201932], [-0.47054865774613863, -0.79763978040611816, 0.50064229301407548, -0.58593315615771746, 0.28151959340534649]]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[[-0.83682203446003123, 0.40577915209273585, -0.59193247904528201, -0.2613119146432481, 0.44135165038023372], [-0.27802639451168876, 0.51356160184927679, 0.63406709859336519, 0.028989302609885748, 0.18766374881902936], [0.8875845270270406, 0.90932619595950137, -0.76754917734682637, 0.11746560727504352, 0.63556800579955675], [-0.10363997739504427, -0.73834750906693092, 0.17747410380436546, 0.44519708608579123, -0.10295584368650612]], [[0.084369821896750796, -0.67058074357986497, -0.77920582829158413, 0.54798421505999162, 0.55608540686491326], [0.99420887307031558, 0.50261207570358368, 0.8463552138888335, 0.54784369397513055, -0.33274336516850389], [-0.96116209123598573, 0.012698582993054819, 0.88273329534010081, -0.2386369703512683, -0.38000929380371873], [0.4961022168539877, -0.13044650800090563, 0.34694750934756402, 0.11914504869930553, 0.91757051854609406]], [[0.030017778130858819, 0.0051779047683173651, 0.027313553871123997, -0.49017150473016824, 0.837944686076602], [0.96130462242738157, 0.6637314192929229, 0.34814707970541914, 0.4698296725770712, -0.68138767433082248], [0.0094182436665455338, -0.36860947049962101, 0.93755421181179299, 0.31386072271823418, -0.54975063966029136], [0.57845397538309085, 0.42435360987350723, -0.45365344966167109, 0.33439836658408617, 0.62457271718231744]]], [[[-0.089680339342997017, -0.11172171176380807, -0.93824299398668809, 0.97579846346392207, -0.48582543342585982], [-0.62772871340655501, -0.02872504226729955, 0.18416688027467765, 0.8569903582890932, 0.14735851395542032], [0.80406962225489176, 0.95572386674499654, -0.59201207278301182, -0.075249588578882198, 0.63796470753786227], [0.32390268913231135, 0.5798586300179478, -0.062084685836017783, 0.75525652535931598, -0.63956281019782879]], [[0.7622481881039691, 0.27550237758544038, 0.78815532372465325, -0.4901504381817865, 0.4381499325013023], [0.16620111133252258, 0.39847245591854907, -0.21954346054106244, -0.65102444688002081, -0.99914315163754797], [-0.49813791292253606, -0.63639908218763952, -0.98005501446140642, 0.46941504232498787, 0.40011955039578218], [0.83184793493570663, -0.98208134574564987, 0.029787577387944131, 0.41222413436425098, -0.18629325228604166]], [[-0.69279063309546784, 0.79799625105767391, -0.10463459924005103, -0.063277595865872227, -0.71599842903077326], [-0.31144590961969643, 0.24777892872303076, -0.46663113100656162, -0.59338127296283338, 0.50688164063342556], [0.69658881446849641, -0.49108851476432958, 0.5529542062674222, 0.69952426848460991, 0.5565269513088833], [0.13292041599639925, 0.56670613149038407, -0.64814081050933958, 0.80941643398630392, 0.77690941566086891]]]]))
      arg1.expand()
      res=generalTensorProduct(arg0,arg1,offset=2)
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[[[-0.069119090935547245, 0.46012179549950344, -0.46200742697185271, 0.67730902134976934, 1.0119869323067612], [0.45076948115056636, -0.73723198954717672, 1.2551556327379745, -0.47965047304328934, -0.28418156654990911], [0.19400848698091527, 0.038121916924472254, -0.36184913797242413, -0.52545851090995632, -0.53988986356474755], [0.37703151833637671, -0.26501081304650997, -0.012566168873307498, 0.28358183749560451, -0.47262554602724605]], [[-0.2136689231311355, -0.04096714263294117, 0.81433346721576771, -0.46569707786841869, -0.25244320986339552], [-0.62728036581211299, -0.19849105848323412, -0.57945584922353199, 0.35724722920358393, 0.81354484437028962], [-0.11539890058855851, 0.11125680311677877, -0.23924991536211676, 0.10327026976247144, -1.0076216735153394], [0.86904298223474163, 1.4959061542706404, 0.097037157260845275, 0.80498911401419693, 0.26768350694393445]], [[0.76428572269952788, -0.071111701718989562, 1.4801068823752588, 0.043698409751246725, 0.51645175438804602], [0.1488977885385529, -0.96133919236917575, 0.22818276528257939, 0.57602759037557194, -0.65638212905955395], [-0.44842330240699679, 2.1515432274318202, -0.69452440382051894, -0.72127776638930685, -0.25458627888016994], [1.8572329606747318, 0.34271222543150687, 0.51326303523281824, -0.40096161661005025, -1.7572401851679644]], [[0.66092689259967519, -0.82118337123810925, -0.3595469126309655, -0.73639982465721721, -1.0375412527178478], [0.0060763669772262441, 0.57435393106451527, -1.4444093522779315, 0.77774654348447836, 0.85705042456681302], [0.34708540889936157, -0.8031013214383339, 0.82398648806837915, -0.23681200400201802, 0.51458251103727692], [-0.57561133765553385, -0.2033304408962856, -1.2280796538374767, 0.92531259187094694, -0.069242559170021534]], [[0.16934127654550282, 0.37443707806693238, -1.2055375858452411, -0.36124570163752767, -0.5029903141727543], [0.91007454023791201, -0.21937261208673781, 0.29822233967575351, -0.26662225917916083, 0.35126514563023153], [1.1895515534992689, -0.6002965132303304, -0.180956292956123, -0.14057133884720635, 0.15125538542159966], [-1.0023973035088209, -1.2492092852230017, -1.3983647067023486, 1.1875105452744286, 0.27811925192099074]]], [[[0.77736307473497146, -0.96494957396652503, -1.2057574743857635, 0.50513797714512831, 0.68396858815939665], [0.15462438121627409, -0.061879528988253052, -0.30680302627417178, 0.49924593237884229, 0.96568831695146939], [0.15751728025043824, -1.7738552197867592, 1.2925886488287255, -1.3938233974129788, -0.31128967058404439], [0.084952222693154417, 0.094572658984481223, -1.3742815146394285, 1.5845858079403128, -0.98207230122491285]], [[0.4913347484871472, -0.90036610974810782, 0.48333976069887841, 0.84731307353741336, 1.3003409996607773], [-0.037642027653885857, -0.57465259522073642, 0.11915715934245145, 0.022342500044586378, -0.34439574475465806], [-0.49740469920762642, -0.04880708382154697, 0.69705663195379031, -0.40173399124935044, -0.05381534569485083], [1.0792917092187608, 1.2646950606643783, 0.23393440166630591, -0.034887469584034325, -1.1749846756413247]], [[-0.48771446940109014, -0.51934462549835636, 0.2016186741853303, -0.27580212296368573, -0.15776848633520324], [-0.26576072503877868, -0.14722325519680612, -0.69591737274812293, -0.48130903685177284, 0.76365453583164389], [0.52023432681878645, -1.2035172123301767, 0.47422354943100875, 1.1937602369864, -0.39504169109927229], [-0.20790769570390666, 2.1346693555839931, -0.44105288223652483, 1.1947447407680392, 1.1938892517937489]], [[-0.53714441459838369, 0.40328259647163212, 1.8140881103144708, -0.13884541783546817, 0.13204744128496537], [-0.76499366843092043, -0.32498588594048228, 0.066886625855369017, 0.012793950608849414, -0.39895678617822022], [-0.77214478454973179, 1.616261181926629, -0.92012058057151003, 0.62951930835163372, -0.68863651022155459], [1.3523970361397128, 1.4658871687378843, 1.5771353474305396, -0.95660690268586523, 0.14897220013857732]], [[0.60446099665001851, -0.41168887970833362, -1.5688703337399423, 0.30068149405846384, 0.057972113859720897], [0.93176678692119119, 0.19350134683150011, 0.14886631876873763, -0.17540599585843905, -0.12861225260775819], [0.68452588806816561, -1.1456410438816635, 0.82394172520202524, -0.45246980121051855, 1.028726975113015], [-1.2779385607387574, -1.5718627255305939, -1.2868952186691378, 0.42050755121095118, -0.36259822747467479]]], [[[-0.6205962733875684, 0.21127934351597408, -0.85807033273796829, 0.64941226277804587, 0.91795919975587803], [-0.44371139745429622, -0.1291229690509843, 0.63187169654620789, -0.32511243837460474, 0.89891537264894483], [-0.07508310482914804, -1.5768138078013458, 0.2798853756217643, -0.49905959844661385, -1.3553505523445781], [0.1865212255953701, 0.85493191712139083, -0.066673357658509319, 1.0662625352277237, 0.47201165382269389]], [[0.060727696599329306, 0.82501836729950473, 1.4783642623743281, -0.4976324781298514, -0.15373927603772836], [0.43146002979517839, -1.1213315015741951, 0.61584765101723038, -0.09765651203162784, -0.73605642366666912], [0.27604722358059891, 2.4875859352021559, -1.6198919688684406, 0.32303509450978007, -0.37106219685426178], [1.2028251329964668, 0.1477265702201791, 0.52367472985375463, -0.2799795290156224, -0.51084785817275447]], [[-1.1091702690850567, 0.73518131486761418, 0.73040991890258755, -0.4549105568211575, -0.72221634324592665], [0.14971414186870924, 0.074984882207395492, 0.26141302883397899, -1.242591722964911, -0.97245663719273401], [0.45154422706488045, 0.7805667173296692, -0.88394462424402331, 2.3924067893987635, 0.72447514054710982], [-1.0057757055966738, 0.40888107742227359, 0.94525163367214204, -1.2150927181219844, 1.9100215865836341]], [[0.49456564175993767, -0.70793030668927437, -0.69132559536459626, -0.53811245402302443, -0.82190088299649888], [0.65265715109331446, 0.21306356723780007, -0.90097216982236261, -0.028240772484325244, 0.32899903811135794], [0.96299055647013965, -0.95396481482633977, 0.74770689219652442, 0.48542291675890642, 0.98500248384671363], [-1.1831751783755176, -0.30583779749725959, -1.4651162527931811, 0.92496827707216245, 0.3163773790955553]], [[0.61531765034668806, 0.14138871605156297, 0.82530910398263058, -1.3143988497160493, -1.3214206486605746], [1.0965042428868523, -0.83984534297465541, -0.5207965640217328, 0.019625730719787265, -0.25146853498500904], [1.36358060546605, 1.6146910492918249, -0.94891415158728754, 0.83237235903957107, 0.6406120044828949], [-0.063167556291324756, -0.2736589807533617, -1.1272023888258174, 0.80740598993798851, -0.11632747398987153]]], [[[-0.98127776914624376, 0.17182816804473783, -0.91725017669969655, -0.22116625160146774, -0.85676770466934327], [0.054042207299958289, 1.0256336541492002, -0.24032102715446285, -1.0411736178924587, -0.18587955209591095], [0.52978073334109144, -1.3938641844088975, 0.40396063605231514, 1.8326185553554226, 1.0904409398934696], [-2.2846735198562298, -0.37735461921334418, 0.012080652879356168, -0.62095261672175162, 2.24742667946775]], [[-0.77150011596613233, -0.085339502665785494, -0.20775160365023776, 1.7196941851571479, 1.9904400280762153], [-0.59518716963927398, 0.074912357526170315, 1.2496609069410538, -0.87921282431298442, -0.79433902209903406], [-1.150740148351407, -0.83242338157036277, 0.59284167351280592, 0.077626991597526951, -0.27259351586282671], [0.31577887134983162, 0.93195728102630748, 1.6269611638278156, -1.3925166033945064, 0.078743383834423225]], [[-0.72907488185640545, -0.39625005480731701, 0.99258224017219221, 0.17809986065358452, 0.39279784895608327], [-0.70168950816932352, -0.10412802994098014, -0.33042917166717234, -0.55566029458245103, 0.029779159705811686], [-0.34168566820203317, -0.34689630034965935, 0.24607927701669097, 1.318994486239486, -0.37203689829462017], [0.4244428083385326, 2.4592563530348723, 0.87050677882161454, -0.16644210721298197, 0.9486508575643342]], [[-0.77162746614301347, -0.0042349566958207741, 1.127211373118048, 0.002212137129695535, 0.26861723015490868], [-0.57355943101730122, -0.34103982550197065, -0.076154306898286464, -0.5573269984405872, -0.0038332667763134876], [-0.1870190118999836, 0.16191926977224713, -0.25972439733260233, 1.2463446862607692, -0.60858863137311525], [0.60953042533662716, 2.2138298632100488, 0.88280418204610689, -0.075276055277713305, 0.90911919496160742]], [[-0.24124618821699312, -0.46217095176287348, 0.84610806544940709, -0.061965856301094163, -0.16412173973260902], [0.089318378942458809, 0.047950883387204934, -0.39202350869797559, -0.6604737620566028, -0.87851697222607195], [0.04783895249408876, 0.36568453051387995, 0.20219075690827301, 1.6696697043530333, 1.0639121705205501], [-0.42538458719346617, 0.98836387593002328, 0.56176083138335375, -0.98852642627320553, 0.68106744896148963]]]])+(1.-msk_ref)*numarray.array([[[[0.081344930839674923, -0.76791368240100732, -0.43192480433265434, 1.2260119078844518, -1.2656187092094187], [-0.57212246809883582, -1.202626690252472, -0.35231947159504401, 0.25476168886911638, 1.1503840058587609], [-0.57220886139573357, 0.25577148449895198, 0.57763425211911501, -0.87426808790339272, -0.36975097560007719], [-0.97941074264953543, 0.81522826618555333, 0.43310612425897221, -0.97204627543361743, -0.22327158288071558]], [[-0.49370531993732653, 1.6051665902223111, 1.2417129461563647, -1.365873756313321, -0.38196351695398922], [-0.9778393587284262, 0.18776738858697672, -1.0088674939927835, -1.8492920186934001, 0.15685845933589943], [1.0489071930062892, -0.70627536524020895, -1.2968089411209993, 1.060727485079775, 1.1316857912860319], [-0.1059405751565678, -0.92680806185879439, -0.51606234684791708, 0.55746712058634651, -0.17286746169896938]], [[0.97099971459588119, -0.28247852688571862, 1.1459055698017093, -0.88519862640410518, 0.93259417654842847], [1.0206847774774015, 0.10309227241069996, -0.17340228364789229, -0.0030691897447817085, -1.0790515414879813], [-0.91347449005765602, -0.99778875396905453, 0.53214532283540372, 0.048284206100306093, -1.0446496664471645], [0.36193746270239502, -0.034788050251839897, -0.17941607475276539, -0.58908915106660109, 0.063320872843748988]], [[-0.16551940214001293, -1.238746494327982, -1.5781373796202203, 1.0853902234459156, 0.65447610945205592], [0.46731508862474525, 0.025802871293198248, 1.4135363736329472, 1.7786575646782943, 0.1046198505195865], [-0.20004770272812206, 1.6049685722983686, 0.27713581209480675, -1.064016094779306, -0.53611384229042292], [-0.20686039700895234, 0.17049651500037133, 0.7599588649486918, -0.38826348547846362, -0.27991226026357086]], [[-0.3345875531780127, 0.68771954503091881, 1.0170237362098189, -1.2625709901390496, 0.25750472945844383], [-0.48480269163631884, -0.1678609891917672, -0.35996353883298948, -1.1146860344358629, 0.21696656544090737], [0.39198422176275322, -0.11973775873722003, -0.95818379293359446, 0.14449026777160126, 0.17820866203840735], [-0.76593806086771965, -1.0975731774027551, 0.13066381740566899, -0.61514469738709399, -0.45105425664628956]]], [[[-0.83834762866200485, 1.5406897788048686, 0.73209896821723863, -0.65851383451363876, -1.24567673945984], [-1.6172454548643882, -0.27876482781017276, -1.1816221714008368, -1.7725230827684915, 0.96403606299860667], [1.3363911950773795, -0.30849148485283362, -1.2636383322392106, 0.82554150553914341, 1.4162899546830121], [-0.55728681720488238, -0.47532833214784231, -0.43007161170738922, 0.51754097209406269, -0.30040332487409982]], [[0.52969600963533148, -0.43376818330132183, 0.62234749753858309, -0.95838279872692211, 1.5802632227493596], [2.2712400015007552, 0.95008000494641465, 0.57988179700037301, -0.19916965363922554, -1.2221293522006749], [-1.854381328252859, -1.5763926816686087, 1.9761577291953765, 0.23175550919852533, -1.3932679281399809], [0.76932919491971186, -0.40137460531788505, -0.062188687214390581, -0.35519785324540515, 1.8568052932160577]], [[0.073223719521693043, -0.19664524379252779, 0.27186845577022239, -0.56574942257773153, 0.91248354240760254], [-0.23107365328892077, -0.057703058711999849, 0.62492372048814016, -0.40257984906043409, -0.1885764099051413], [-0.36249866330135827, 0.85078765340218043, -1.8053883134883106, -0.56059697043286905, 0.21185745134670675], [-0.56639661801795405, -2.0902759836131484, 1.0953911942071224, -0.85240800610416134, -0.93268301130273323]], [[-1.4901213925146379, 0.53372036943378287, -1.6004422039603343, 1.3473031366931945, -1.7790819934906927], [-2.1429183444993787, -0.6057340936534763, -0.10126636338865333, 0.30762440085456511, 1.9006195122066074], [2.1399168550887855, 1.8793255340051593, -1.1269446173262134, -0.17651891219292754, 1.5862506004521486], [-0.9164960102305888, 0.65743203282597351, 0.036043971241894068, 0.74592084464516972, -0.89024269144606971]], [[0.34277621057046148, -0.4535919030519065, 0.11398063866087579, -0.54150408842434961, 1.3458192719540285], [1.7824027497573889, 0.83724126333357851, 0.68903676397010782, 0.38591549455684643, -1.015639425353863], [-1.1093960675819974, -0.82236634416079668, 1.5518964213365625, 0.11273702384598505, -1.0932468722232385], [0.71759719251533616, -0.0021499993676736412, -0.11888635143621665, -0.074586663890487501, 1.2696428303083163]]], [[[-0.4364908870741131, 0.036833182138232501, -0.0063442349951691596, -0.43493333454444477, 0.28346534281963914], [1.1538518712539496, 0.3932166023990431, 0.039656853758341298, 0.24642401716654971, 0.057521061724194578], [-0.13949036259631836, -0.93475830768026413, 2.4221011104261883, 0.3059148317606219, -1.0471161872911501], [0.057356702708485696, 1.290240956113498, -0.75470876592556113, -0.012162108839597674, 1.5301211204200873]], [[0.51611180363805731, -0.64015564794668811, -0.21179865756738148, 0.60031226399175786, -0.10176199512062872], [0.1167410313979734, -0.35886753595579285, 0.047737246753993878, 0.78242802401090616, -0.13045740058224325], [-0.31030935787206088, 0.21453713099401059, 0.25817067644419422, -0.43258993310921234, -0.4466372114923286], [0.043636769442726625, 0.6375734292744949, 0.086205231283222494, -0.28306317996974295, -0.39311849235897278]], [[-0.99469286765287546, -0.15259923728161356, -1.3316576913295954, 0.76551636285712554, -0.41242180066916423], [-1.5984027633979996, -0.65866043721660439, 0.59664238466904596, 1.2246733929762592, 1.1812599973107161], [1.9492794776322522, 2.6145144637721471, -1.6219218519228873, -0.86470081100524221, 0.68136155427866629], [-1.2003966295652311, 0.14996057321421996, 0.50877285691482221, -0.22426068977025043, -1.8747337910680866]], [[0.61535606486349737, 1.0675160359898721, 1.237075516036295, -0.082674311729078423, -1.5337586732266906], [-1.4711011711219397, -0.56929679423938018, -1.7781750188102585, -1.2771089792169428, 0.021414196512892281], [0.6837715829150891, -0.94153373216286429, -1.3624141505215985, 0.87695786088782768, 1.1830547257661674], [0.37364563650992416, 0.30459076409249913, -0.71799116055484469, 0.76153700352314635, -0.90131574989597929]], [[0.42320212209316505, 0.22667228007774878, 0.24406977459187348, -0.40138956283496163, 0.6953282922442191], [0.86220276747666769, 0.88212208562437011, 0.10445004041662193, 0.090062435538260099, -1.1124500712632484], [-0.18431235114866365, -0.7487251299572556, 0.40400670903302516, 0.69291113809749616, -0.039603218654267219], [1.2202382455823353, 0.10025294410271191, -0.53154250203998221, 0.90845970091889494, 0.61840804502653834]]], [[[-0.83723220459038727, 0.4967413081952442, -0.92953072657768709, -0.03629659615347397, 0.42712071714081806], [0.52842246347490007, 1.1340950145884041, 0.61607390236555037, 0.49912188849852851, -0.21400256901462261], [0.91506892884961877, 0.16365791978919231, 0.80102397371774514, 0.70530071770935099, 0.3719201605846913], [0.83643574318491964, 0.54195873856480981, -0.64975759898438123, 1.3977092858857438, 1.0296525814177275]], [[-0.30443270689586122, -1.0219188312175964, -1.3031077200967032, 0.81726360344637805, 0.56909099924355677], [0.14800279126516044, -0.10985444625567228, 1.2818178323148315, 1.2049043732391991, 0.32724597091250995], [-0.2160480612961001, 1.6059220461414383, -0.24842780413917998, -1.0740906122858758, -0.29326188507826556], [-0.54120404430639757, -0.45146786856455173, 0.98329778470632312, -0.62967536453094486, -0.42524684317733324]], [[-0.28097109214299554, 0.42320419631726669, 0.049317332721128176, -0.22327967396580062, -0.1869733683952407], [0.61868709567624292, 0.44713044949376879, -0.35117959097172313, 0.047193545091654798, -0.071914934459601954], [0.30019407500032991, -0.98694019408614642, 1.7335914411984557, 0.70290417522976312, -0.34379958764638913], [0.51561819168184309, 1.3709626500833869, -1.0132326242680119, 0.70056425344760154, 1.1976587005861274]], [[-0.96439701574409398, -0.015483575536820893, -1.864655889257385, 0.88779920397928525, 0.18518013677992257], [0.13273187103175171, 0.8689807666837589, 1.0780476019703706, 1.3168486935958306, 0.15920099622546693], [1.1399605517847822, 1.2426081150240975, 0.40757822162636326, 0.14964684853114577, 0.55962339497763092], [0.6208764335325595, 0.70626718182453629, -0.23407961283570575, 1.3631895022721934, 0.47584835304888951]], [[0.34170959244531451, 0.21305840071443619, -0.10061606367450754, 0.33993030532335455, -0.089121811479956625], [-0.31414930898578375, 0.38833095858224131, 0.062186155582499403, -0.57450992396059752, -0.45701369892856847], [-0.33271738352774605, -0.0025712659078696021, -1.3366492294451227, 0.33042540930367148, 1.0651743136820806], [0.78850313448705611, -1.1536943289511847, 0.35056350784685469, 0.8022177394068406, -0.12497429821122863]]]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5, 4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank3_float_rank0_offset0(self):
      arg0=Data(numarray.array([[[-0.29174887532951765, 0.030931571244535938], [0.73743028716883829, 0.73156674990068282]], [[0.74773392712324327, -0.970095270351921], [0.011747978061634523, -0.19022450784213385]], [[-0.45545318753728448, 0.45983585996364384], [0.68135443466622392, -0.74132162628264031]], [[0.98451085781444037, -0.49595898462113652], [-0.02781159713808945, 0.52052974297144305]], [[-0.78196057546762709, 0.33729519665315411], [-0.27878014959450281, -0.70776948650140703]], [[0.099968627135526233, -0.32421288687485839], [-0.16055485121790936, 0.55162033485400208]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[-0.53880512484349885, -0.21643132719329805], [0.66259463188846945, -0.04741841979691741]], [[0.31740092966588618, 0.15291283689084967], [0.04454369039666628, -0.94716668459896947]], [[-0.59294302857097714, -0.99833380329239496], [-0.88794714175660228, 0.61488636048995549]], [[0.13523080943318866, -0.44167240248890405], [-0.95805209105563827, 0.4896863840374106]], [[0.16795743214915015, -0.14034141779445108], [-0.68289888731150961, -0.63947794300862704]], [[-0.037698280712729293, 0.2294370311475733], [0.10374507114400067, 0.34229969195234777]]]))
      arg1=-0.214511884915
      res=generalTensorProduct(arg0,arg1,offset=0)
      ref=Data(numarray.array([[[0.062583601168798395, -0.0066351896510514321], [-0.15818756089407868, -0.15692976246241663]], [[-0.16039781412218473, 0.20809696499042421], [-0.0025200809179425866, 0.040805417734265333]], [[0.097700121749218174, -0.098640257072362], [-0.14615862407552113, 0.15902229938222423]], [[-0.21118927982916788, 0.10638909663166425], [0.0059659181245912581, -0.1116598163191822]], [[0.16773983697286513, -0.072353828406880927], [0.059801655366433254, 0.15182496663481662]], [[-0.021444458639217588, 0.069547517477295331], [0.034440923767018849, -0.11832911778703636]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[0.11558010293210033, 0.046427091950913359], [-0.1421344234210293, 0.01017181461033274]], [[-0.068086271696437634, -0.032801620869172994], [-0.0095551509880639866, 0.20317851084212082]], [[0.12719332670603448, 0.2141544659187227], [0.19047521508319351, -0.13190043219729242]], [[-0.029008615830109392, 0.09474397957288011], [0.20551355989920797, -0.10504354925712958]], [[-0.036028865355815967, 0.03010490206274672], [0.1464899275236235, 0.13717561891641813]], [[0.0080867292537465125, -0.049216970020792845], [-0.022254550761751812, -0.073427352126559778]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank3_array_rank0_offset0(self):
      arg0=Data(numarray.array([[[-0.93633956644243499, -0.35934899602071413], [0.99870870400109024, -0.171998314928824]], [[0.026577820386440409, 0.24294892162501314], [0.80117147714558645, 0.42091321598918685]], [[0.82824623137899667, -0.39414901016841486], [-0.67233326746679745, 0.49351984007017013]], [[-0.99089417165207272, -0.70771609779462619], [-0.91003567314749589, 0.062027972954762589]], [[0.34167581085735121, -0.62341975904906177], [0.41098430556381227, 0.76330839060817768]], [[-0.974694566583022, -0.21457064115196922], [0.46488694353093218, -0.90217638385202403]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[-0.63777282346491027, -0.12345976368841893], [-0.42451089037980982, 0.25833723561105737]], [[-0.39876596670887743, -0.613136429132636], [0.23307188079329544, 0.063800535574575212]], [[-0.081764828580360938, 0.82640324858225211], [-0.80838449360276865, 0.33383180278946556]], [[-0.34278947603330856, 0.26935739731600616], [0.27444313611317872, 0.63000404490237427]], [[-0.87183046467481007, 0.08050023646808091], [0.95908704050949956, -0.3096536312768281]], [[0.2992285291904655, 0.58886980160927971], [0.27085367034103913, -0.64578921184111393]]]))
      arg1=numarray.array(0.887106280856)
      res=generalTensorProduct(arg0,arg1,offset=0)
      ref=Data(numarray.array([[[-0.83063271040460906, -0.31878075138909712], [0.88596076406443347, -0.15258078546992379]], [[0.023577351396260902, 0.21552151430062216], [0.71072424941813639, 0.37339475759909951]], [[0.73474243395121386, -0.34965206251338304], [-0.5964310643979035, 0.43780454985305467]], [[-0.87902844333567143, -0.62781939541616516], [-0.80729836145171552, 0.055025404396905592]], [[0.30310275782795548, -0.55303958386185126], [0.36458675879869795, 0.67713566753822529]], [[-0.86465767193153786, -0.19034696345310564], [0.41240412749401067, -0.80032633655464192]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[-0.56577227745467418, -0.10952193180093345], [-0.37658627714749415, 0.2291725842894187]], [[-0.35374779365886433, -0.54391717730488065], [0.20675952934253908, 0.056597855830151068]], [[-0.07253409298671229, 0.73310751233671312], [-0.7171229616212168, 0.29614428900385281]], [[-0.30409069720031728, 0.23894863895392213], [0.24346022978368445, 0.55888054519727293]], [[-0.77340628105420173, 0.071412265381188347], [0.85081213752309992, -0.2746956811953904]], [[0.26544750765601821, 0.52239009961373006], [0.24027599215230355, -0.57288366593298157]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank4_array_rank1_offset1(self):
      arg0=Data(numarray.array([[[[-0.86499934467070361, -0.7418847301449043, -0.25739492084253723], [-0.17201480409489078, -0.47902902079262155, -0.25059513767082953]], [[0.99644163864099999, -0.61526131452359523, 0.82408504066533728], [-0.89033206588971758, 0.87125354550409129, 0.74734567114724415]]], [[[-0.66612307100495594, 0.70545000996778917, -0.96529659989261374], [-0.96723347672922078, -0.96383304499287159, -0.70985815374750771]], [[-0.58064874956528323, -0.4303420276817711, 0.91568600951868984], [-0.23735873409245456, -0.76821971738327677, 0.52368158694326783]]], [[[-0.092225991361518433, 0.17839190174500663, 0.77958920529478637], [0.56914266674141523, -0.73567726468089822, 0.0018107129734408201]], [[0.45296998735543337, -0.1865535451352669, -0.41078772721273737], [0.23072434986507417, 0.31623278151756407, 0.0071435683212326406]]], [[[0.7531605732389286, -0.85070695032175192, 0.73918295954883617], [0.82723803136671914, 0.53033161206812762, -0.010234377532859273]], [[-0.0056405553872993508, -0.27681467470828647, -0.41172059867450206], [0.86192461163358169, 0.57502082346173466, -0.58374905478811012]]], [[[0.44142402461769947, -0.33117222897404219, -0.67547811971268312], [-0.3442891441210969, 0.26817377135838649, 0.81724656280092112]], [[0.65644186337611021, 0.2414575088579678, 0.22523971298439793], [-0.062701064439464327, -0.90032269808931331, -0.68815756060326216]]], [[[0.28011200987814777, 0.53194168767924888, 0.58738837451216797], [-0.95142559741330457, 0.30949640605645312, -0.023445141061264385]], [[-0.35681933441279057, -0.82940779754496852, -0.39259902789256862], [0.16683149352161974, -0.760393216880898, -0.63925617568846071]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[-0.25606204289105472, -0.95177357875322754, -0.069887055369313833], [-0.87130177073382176, 0.98758339011478546, -0.85637551512028343]], [[-0.51592915136966155, -0.61813855619420877, -0.41787772963489545], [-0.095357887635405758, 0.28628902920281152, 0.90372112551721595]]], [[[-0.53454302632430228, -0.055614717775300138, 0.72823304108190623], [-0.98365304596591097, -0.75190560544512586, -0.19549121432554828]], [[-0.59254528358913738, -0.58936435123685338, 0.55676729713451834], [0.58217568781582174, -0.85395398349323615, -0.68511718512534237]]], [[[0.80906568277455349, -0.58511466363601117, 0.71090455367308092], [-0.78643757766323574, 0.85362385503636129, 0.57244344695937888]], [[0.19670701392351186, -0.31337051960395845, 0.17125429786247093], [0.61548294126461545, 0.4259932650067102, 0.51722119473598926]]], [[[0.60954934409024397, 0.39457416397251599, -0.87020900626059583], [-0.86342985386396642, -0.53749739210044822, -0.78447983801186116]], [[-0.047796221427376384, -0.26976170716835113, 0.45919727558199952], [0.68201392095790658, 0.98679365739305003, -0.19072098194778775]]], [[[-0.47588877271523256, 0.56328796212907206, 0.90710498230266645], [0.52677701548477041, -0.82767472467677594, -0.83868615109881595]], [[-0.22198130753784717, 0.86331978787631658, -0.89021876298130631], [-0.52637381429503161, -0.9042934358418806, -0.10946600855216837]]], [[[-0.92607544434286293, 0.70491012039257361, -0.47792829487648802], [0.080800515165809328, -0.43090262133667268, 0.90753065030967073]], [[-0.57842612196468823, -0.49098043776540012, -0.10607202911010427], [-0.6931766098758787, -0.81016369673601707, 0.35675869841207586]]]]))
      arg1=numarray.array([-0.59305959205997327, -0.31355830957741082, 0.32078700402208171])
      res=generalTensorProduct(arg0,arg1,offset=1)
      ref=Data(numarray.array([[[0.66305133486050294, 0.17183089610712243], [-0.13367320273915967, 0.49456996166907685]], [[-0.13580364013718546, 0.64813168101728547], [0.77303680090576776, 0.54963979731653945]], [[0.24884133119519503, -0.10627694506381914], [-0.34191814595975123, -0.23369914133509825]], [[0.057197417985755061, -0.66017438852118393], [-0.041931890398236776, -0.87873432632453508]], [[-0.37463354997426118, 0.38225794137125185], [-0.39276617930214308, 0.098737128824188891]], [[-0.14449129383473497, 0.45968601021408728], [0.34574216991484563, -0.065578479193098782]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[0.42787770604146952, -0.067645241471890771], [0.36574946787088958, 0.25668659821949424]], [[0.56806202150219642, 0.75642008381811532], [0.71481846704670438, -0.29727719762265076]], [[-0.06830765701889463, 0.3823759143116105], [0.036537102102805898, -0.33267395265705169]], [[-0.76437283319609617, 0.42895119362269662], [0.26023655075920449, -0.77507306125957476]], [[0.3965942698082966, -0.3219254920861695], [-0.42462355951890851, 0.56060448775568672]], [[0.17487431363362166, 0.37831761534738245], [0.46296562760173299, 0.77957215073046271]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank3_array_rank1_offset0(self):
      arg0=Data(numarray.array([[[0.99909443081149196, -0.28434210462022125], [0.26497078913817473, 0.17665852798683779]], [[-0.43429585752496447, -0.82880612090889683], [-0.36686785766003727, -0.93222120821089738]], [[-0.10941756589867935, 0.53760774958878565], [0.98253177544858672, -0.10504218540330701]], [[0.86872492600391427, -0.78771832378997608], [0.61096514422021309, 0.6721529367958472]], [[0.65402660895904408, 0.12876886412344946], [-0.84890966294587678, 0.79233510174597033]], [[-0.44171203066055598, -0.42769276729857419], [-0.82930175007391105, 0.28928649751444158]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[-0.65059026488206473, -0.13761988051266916], [-0.35820171783908972, 0.42858664381081812]], [[-0.28879911929580127, 0.28729161753859089], [0.58091004405332636, 0.87778352971583429]], [[-0.52142036009776471, -0.2038058978649302], [0.44595197110383245, 0.26319728688054034]], [[-0.89921083367132337, -0.15920659330777487], [-0.86310684489960177, -0.25986418165875125]], [[0.71668618163550857, -0.84661476003795344], [-0.23058614665782495, 0.29474540945360839]], [[-0.82823136997230273, 0.45711999217676103], [0.21604046768677354, 0.81372796761210187]]]))
      arg1=numarray.array([-0.71252210737835497, -0.0030966254938669113])
      res=generalTensorProduct(arg0,arg1,offset=0)
      ref=Data(numarray.array([[[[-0.71187686931178229, -0.0030938212852313169], [0.20260003560039672, 0.00088050101014674955]], [[-0.188797545070438, -0.00082051530077530555], [-0.12587310664753976, -0.00054704530147304316]]], [[[0.3094453996293775, 0.0013448516242925968], [0.59054268387808684, 0.0025665021634794318]], [[0.26140145906931211, 0.0011360523609104086], [0.6642282198172248, 0.0028867399592692787]]], [[[0.077962434638337033, 0.00033882522403871326], [-0.38305740667993649, -0.0016647698630770521]], [[-0.70007561120882367, -0.0030425329443884131], [0.074844879307192191, 0.00032527630925137521]]], [[[-0.61898571500841448, -0.0026901157530213669], [0.5612667200873791, 0.0024392686434341502]], [[-0.4353261720945068, -0.0018919302414563861], [-0.4789238270063273, -0.002081405919859535]]], [[[-0.4660084176970174, -0.0020252754709699011], [-0.091750662429957261, -0.00039874894746095787]], [[0.60486690201604509, 0.0026287553042681688], [-0.56455627644588213, -0.0024535650757522049]]], [[[0.31472958694063191, 0.0013678167350912004], [0.30474055186606047, 0.0013244043267592533]], [[0.590895830615221, 0.0025680369413873185], [-0.20612302484509315, -0.00089581194323468669]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[0.46355994657361094, 0.0020146344002954283], [0.098057207280044439, 0.00042615723045844945]], [[0.25522664286125507, 0.0011092165714074473], [-0.30537745864230054, -0.0013271723275554367]]], [[[0.20577575708965726, 0.00089430271541768964], [-0.20470162876073314, -0.00088963454704426279]], [[-0.41391124878612912, -0.0017988608520588809], [-0.62544017041513711, -0.0027181668562145361]]], [[[0.37152353380684, 0.0016146435801000034], [0.14521620784285785, 0.00063111053912897881]], [[-0.31775063824043398, -0.0013809462427603278], [-0.18753388550438807, -0.00081502342847088432]]], [[[0.64070759818493872, 0.0027845191919079388], [0.11343821737218446, 0.00049300319562855686]], [[0.61498270802054722, 0.002672718659847141], [0.18515897434764511, 0.00080470204986735137]]], [[[-0.51065474846787906, -0.0022193087011546475], [0.60323173295986288, 0.0026216488494175444]], [[0.16429772714888785, 0.00071403894027315519], [-0.21001262028398116, -0.0009127161491142851]]], [[[0.59013316112952718, 0.0025647223750765503], [-0.3257081001505629, -0.0014155294215308012]], [[-0.15393360931518529, -0.00066899641994579357], [-0.57979916631568063, -0.002519810769580143]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank4_array_rank2_offset1(self):
      arg0=Data(numarray.array([[[[0.30191863070895741, -0.15691453810453559, -0.8585210233942564], [0.62007422765197462, 0.71776250032909061, 0.98967961104467994]], [[-0.14383128879496709, -0.43030080179011332, 0.026222970283046765], [-0.36891133679217059, -0.39332368420769837, 0.0086168057891127248]]], [[[0.96536407346595454, -0.36065674405216441, 0.039390454460008106], [0.23928150415709548, -0.43921029433457681, -0.89289032805982504]], [[0.38747618983705889, 0.04194197315928383, -0.062547800857405411], [-0.74208269603050869, 0.81807571349596442, 0.77339812140527386]]], [[[-0.83339302219526457, 0.71547602279071087, 0.91503830090294058], [-0.24550108695041373, -0.90752799689669672, 0.85044457515249827]], [[-0.97199843211677384, -0.96369903669742341, 0.44097115697059941], [-0.24346136022761056, -0.86159793383823247, -0.52339448421648482]]], [[[-0.030263977053410551, -0.55394240819576579, 0.19560466889795536], [-0.35301752568164035, -0.77481298620147232, 0.65273174302372849]], [[0.29330870102913909, 0.44692173879255526, 0.95263263341658755], [0.12752889956571289, -0.90092442343209633, -0.59567223634197308]]], [[[-0.011858102327171993, 0.18845027306049533, 0.12185003444417353], [0.0046060719895777424, 0.40273083219368688, 0.9608530029935034]], [[-0.76891367672558775, 0.88947426199265278, 0.11884248461225666], [-0.2111422408709156, -0.66842718768636278, 0.12532872627551606]]], [[[-0.48377317386861418, 0.26829619779401459, -0.017125111845426977], [0.44365505555722096, 0.35217971148294303, 0.94124253564001825]], [[0.34461769504403739, 0.70898742809054194, -0.50051737096436977], [-0.17657937759462894, -0.49111099576308503, 0.026995357456339297]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[0.1245575705116635, -0.76786897586332348, -0.51882243231197478], [0.28207831080556289, 0.54049253149134224, -0.53922590596182829]], [[-0.52020274661253985, -0.51590913520127213, -0.048424769497518838], [0.10858181303182812, -0.455313955622205, -0.69585506603994252]]], [[[0.18349011060065479, 0.70780458908997823, -0.50371099953641951], [-0.31155279725476825, -0.017791046542673383, -0.2570475336936433]], [[0.45962899348951458, 0.053340500850119099, -0.54916824797740271], [-0.24583182869234199, 0.028953506935385231, 0.6551093759842308]]], [[[0.92039273856212223, -0.28504835826951447, -0.47842913654620611], [-0.68893754828320919, 0.29968000370431658, 0.197306352204623]], [[-0.20759025359854189, -0.6264247035401973, -0.62941169049146639], [0.59664716320403333, -0.91725636125509946, -0.42917985734282471]]], [[[-0.5777470276143708, -0.36740887163204206, -0.13908057377458771], [0.28624516962648583, -0.66014532501504375, -0.18048559200660597]], [[-0.40694724001024296, -0.82703906416953887, -0.41316497028289523], [0.93533536469645395, 0.14129261803622661, 0.27938190461762424]]], [[[0.82512160871033302, -0.12058132042833059, 0.080383234077477717], [0.056809580722658293, -0.29492669542637273, 0.30278868763994415]], [[-0.30820075193399643, 0.62625942238997778, -0.88447336457751979], [-0.074862925707920525, 0.56707276617594093, -0.47966336682563582]]], [[[-0.43675969473547105, -0.7562088529011044, 0.22958536186644873], [-0.92595763424071365, -0.056792014808523694, -0.56550920328419285]], [[0.77946633222336659, 0.28835371346806871, 0.60009759536171248], [-0.42236427484153705, -0.013425209455720788, -0.66730900533155291]]]]))
      arg1=numarray.array([[0.85177798422629691, -0.89284844544304787], [-0.52406593416569236, -0.52176377406394736], [0.25844531513862479, -0.84979336419739959]])
      res=generalTensorProduct(arg0,arg1,offset=1)
      ref=Data(numarray.array([[[[0.11752047021730783, 0.54187021023253679], [0.40778875941872283, -1.7691579474188783]], [[0.10977087024260755, 0.33065080679532982], [-0.1058760377296088, 0.52728145908198543]]], [[[1.0214640564425426, -0.70721993517520809], [0.20322654824955422, 0.77429417751108753]], [[0.29189814246680346, -0.3146886098357265], [-0.86093419475140398, -0.4215034816556219]]], [[[-0.84833507672993991, -0.40680928168720093], [0.48628550274041998, -0.029991660014499599]], [[-0.20891809962782312, 0.99593617254151434], [0.10889024700534986, 1.1117018462344967]]], [[[0.31507726655180074, 0.1498246767438442], [0.27405599602247299, 0.16477339307067451]], [[0.26182087673404564, -1.3046086812877218], [0.42682140974057958, 0.86240406127004077]]], [[[-0.077369268340639299, -0.19128638816458859], [0.041193798084122518, -1.0307693890658089]], [[-1.0903726182453992, 0.1214363782660812], [0.20284422838074675, 0.4307755937308998]]], [[[-0.55709814131826529, 0.3065016959150112], [0.43658994316718569, -1.3797330029665282]], [[-0.20737476287192111, -0.2522789890255982], [0.11394494013522082, 0.39096207378578202]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[0.37442214146335956, 0.73032704180903485], [-0.18234603765088414, -0.075632007690554781]], [[-0.18524199882804465, 0.77479595886667307], [0.15126164948621315, 0.73195224246445734]]], [[[-0.34482518466929912, -0.10508538882804735], [-0.32248286305061913, 0.50588944270717107]], [[0.22161795724693065, 0.028469359607423639], [-0.055257737035180554, -0.35232392549751274]]], [[[0.8097066367416913, -0.26647741314516876], [-0.69288101485218356, 0.29108502043026252]], [[-0.011201463010932999, 1.0470622306285247], [0.87799420631673097, 0.31058984350501767]]], [[[-0.33551044776032846, 0.8257309236345548], [0.54313135431395754, 0.24224181991438393]], [[-0.019986250975853825, 1.1459660841051182], [0.79485636803777349, -1.1462509845919804]]], [[[0.78678765320506816, -0.74210271972195452], [0.28120450209922565, -0.15414809766708798]], [[-0.81930784188419592, 0.70003667850666829], [-0.48491686089839853, 0.17857796636780238]]], [[[0.08361626774570112, 0.58942248251602725], [-0.90510077113530085, 1.3369378186045997]], [[0.66790831516188309, -1.3563567792144804], [-0.52518778187669912, 0.95118683875608323]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank3_Symbol_rank0_offset0(self):
      arg0=Data(numarray.array([[[-0.32492930900972072, -0.78676957149090176], [0.16932743771808911, -0.46016768132537034]], [[-0.76440257476277695, -0.03642113722859186], [-0.28581670163610884, -0.26706563863396737]], [[-0.42511054327860931, -0.79738470693803576], [-0.066257917015272616, -0.31808887315947487]], [[-0.61308943732573695, -0.24530915565265121], [0.30285335905636535, -0.81911391258084776]], [[0.090717624203527247, -0.2993236818157452], [0.37485356712260143, -0.92883894442965098]], [[-0.21721732363147961, 0.42613044070761052], [0.40233229707861051, 0.31839586647296314]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[-0.78996642710302201, -0.82002295993337571], [-0.052718262018640605, 0.77437738122421784]], [[-0.42097889781101983, 0.037446276572979276], [-0.2210103041331406, 0.11931241750017496]], [[-0.63856599251127633, -0.11737791890453542], [0.91458916748756569, 0.55658673003643377]], [[-0.81790119209450207, -0.83857252156174922], [-0.59275176929381423, 0.83283838329596804]], [[0.0038324352360208369, -0.88734000279385561], [-0.65955513261773313, -0.68066451146156903]], [[-0.6850014690269064, -0.90005260174074575], [-0.69920956979376658, -0.40929494451186721]]]))
      arg1=Symbol(shape=())
      res=generalTensorProduct(arg0,arg1,offset=0)
      s1=numarray.array(-0.911244264091)
      sub=res.substitute({arg1:s1})
      ref=Data(numarray.array([[[0.29608996907014007, 0.71693925918236967], [-0.15429865637382431, 0.41932516012777055]], [[0.69655746170892519, 0.033188552391223272], [0.26044882994729529, 0.24336203134098608]], [[0.38737954416721537, 0.72661224047111894], [0.060377146830780562, 0.28985666113772152]], [[0.55867423313781872, 0.2235365610174696], [-0.27597338630078638, 0.74641285447638384]], [[-0.08266591470742149, 0.27275698816117894], [-0.34158316291449814, 0.84639916037580132]], [[0.19793804022037084, -0.38830891984935378], [-0.36662299797141523, -0.29013640703375199]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[0.71985237552204118, 0.74724121866216198], [0.048039213877329429, -0.70564694688233043]], [[0.38361460593361713, -0.034122704738690245], [0.20139437194631818, -0.10872275608185773]], [[0.58188959791943762, 0.10695995533268922], [-0.83341413287275079, -0.50718646521483191]], [[0.74530776988925573, 0.7641444002974187], [0.54014164979874346, -0.7589191996932213]], [[-0.0034922846263239892, 0.8085834878443382], [0.60101583144964754, 0.62025163183961562]], [[0.62420365954463508, 0.82016777071638036], [0.63715070987206246, 0.3729676705078579]]]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank4_Symbol_rank1_offset1(self):
      arg0=Data(numarray.array([[[[0.67577676982278811, -0.33516090129836162, -0.47408001302804781], [0.11425443235716193, 0.86409315860523561, 0.83700762127147921]], [[-0.13558430796211018, 0.77784526003079324, 0.74839710831600792], [-0.95935620595211324, 0.85898864987469659, 0.41379367781531773]]], [[[-0.42100517654510572, 0.22352520497840267, 0.91958507198649841], [-0.48903639463459414, -0.26186447915055222, -0.60231395575745306]], [[0.0062499752680325038, -0.36274234010219941, 0.47241149192556176], [-0.92449288968312704, -0.23061159782149909, 0.85106608026378594]]], [[[-0.78735366895886116, -0.74471410427203866, 0.21943349619288033], [-0.35490315235527059, -0.11471630397865695, 0.44664540727839097]], [[0.24686617576231584, -0.77648575609828452, 0.0099839120862128539], [0.52986838308408446, -0.91677194527052519, -0.034962445578754942]]], [[[-0.72937965820172823, 0.93390099455834363, -0.13765020128012395], [0.18952851094137246, 0.95378128431104536, -0.86007148045293014]], [[0.43722478630189188, -0.44478280956461314, -0.58245259414669492], [-0.3055348609279922, 0.75891613939938773, 0.55851950402469774]]], [[[-0.1122018038892687, 0.3169990850066482, 0.51581686325911824], [-0.07723850625204598, -0.27030308462762553, 0.50870687078585464]], [[-0.53549893073535526, -0.92919998127747427, 0.60279729925331704], [0.26362073831095301, 0.31695438448211632, 0.58377167185124246]]], [[[-0.38770684072021844, 0.52939786576122949, -0.22649336824641564], [0.47453082504488941, 0.61568817378273621, 0.94664213019803545]], [[-0.20931238739675018, 0.91221098152313895, 0.24381112974528785], [-0.51637141272418718, -0.078495545253383758, 0.049805696723141057]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[-0.84425075003580696, -0.18357976671774523, -0.72139851815456857], [-0.86823478732424064, -0.22823251490500596, -0.62421661999525191]], [[-0.9578539462180542, -0.50334315274484864, -0.22098926637938221], [0.72783922020900405, -0.28859715335542879, -0.77199353688504413]]], [[[-0.10194430705724478, 0.23744575257364708, -0.55723969321815647], [-0.10978705424382662, -0.76469985763589166, -0.52566608293711714]], [[-0.40638049048591474, 0.56640355342583559, -0.043244375355661502], [-0.61629362298095547, -0.10226889515394899, -0.085581977555677646]]], [[[-0.039376077889024197, 0.39656769676615733, -0.24573162467975695], [-0.64019996529752321, 0.16495806704406557, 0.23111383591639401]], [[-0.77715194272677324, -0.97523474479037819, -0.069417594093261537], [0.14078587263141462, 0.58038484431633708, 0.29643899601191936]]], [[[-0.49775463505388284, 0.3710856385148722, 0.89371836292744877], [-0.17085404327842468, -0.11384445163043222, -0.33403346012429735]], [[0.028075410095606657, -0.58082327911576104, 0.085485903440458921], [-0.65576557016061288, -0.31081755661842814, -0.56489949427723296]]], [[[-0.54332615152228914, -0.11283007174689574, -0.14115705053513783], [-0.81109798165719593, -0.11500088869080405, -0.88428741177444703]], [[0.95919049651615751, 0.11512479189536839, -0.70378208992644353], [0.65330949386932935, -0.8357140904305862, -0.13229032608397673]]], [[[0.48730977966888211, -0.90140072774789215, 0.30702325792247165], [-0.1912372277651111, 0.026016140960696488, 0.082366390856626781]], [[0.40674060721330685, -0.10997341173432806, 0.90955288245913657], [0.92498583069933082, -0.60956065575062146, -0.071526200928957673]]]]))
      arg1=Symbol(shape=(3,))
      res=generalTensorProduct(arg0,arg1,offset=1)
      s1=numarray.array([0.36903107671626412, 0.99068273155422593, -0.003926074060031981])
      sub=res.substitute({arg1:s1})
      ref=Data(numarray.array([[[-0.080794214979365647, 0.89491945296679987], [0.71762478130716389, 0.49532838377032673]], [[0.062468207938542145, -0.43752951556964326], [-0.3589108597443168, -0.57297088261527884]], [[-1.0291948874168764, -0.24637131677059074], [-0.67818893679626235, -0.71255496987479761]], [[0.65657625257374774, 1.0182132628368685], [-0.27700236305073073, 0.63690046636138886]], [[0.27061443172924388, -0.29828522820212994], [-1.1205247494418358, 0.40899354948262212]], [[0.38227868058791042, 0.7813516759785829], [0.82551167068599018, -0.26851682046351227]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[-0.4905918040451786, -0.5440609090247589], [-0.85126362235387609, -0.014282021295198484]], [[0.19980055366194505, -0.79602597464650104], [0.41132897012975217, -0.32841152648408867]], [[0.37930653321559932, -0.073739944092445733], [-1.2526689004566385, 0.62576776363096842]], [[0.18043240060834845, -0.17452274376291704], [-0.56538651787584837, -0.54770162318457349]], [[-0.31172884534955175, -0.40977797816373246], [0.47078634561705629, -0.58631663033694092]], [[-0.71437507855343185, -0.045122115029510475], [0.037580192310801869, -0.26225188127466892]]]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank3_Symbol_rank1_offset0(self):
      arg0=Data(numarray.array([[[0.6456655708070651, -0.6879270281493437], [-0.93255202328410092, -0.3005505783048561]], [[0.12952810372614709, -0.42773909195971216], [0.41945934842714783, 0.89687020889384339]], [[0.15853539054184651, 0.946064784637203], [-0.032950539663999301, -0.012951519117272881]], [[-0.32438647494445605, -0.8375978335598071], [-0.65806379434604012, -0.24327042255997244]], [[-0.12203002687258668, 0.97425114473189178], [0.50055897600640198, -0.37356700345574834]], [[0.94718157325388219, -0.45369702690071501], [-0.90381400214448027, -0.84229263895896622]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[-0.092088815301833771, 0.16324556256068234], [-0.15117337024621147, -0.10953536894240967]], [[0.010164422784849636, 0.28940303538352175], [0.70284142048201037, -0.1298990620796372]], [[-0.68624644062441975, 0.98764609165135697], [0.64787873631760817, 0.025172661183649359]], [[0.23433857178722173, -0.90767078426613512], [-0.50249285510012243, 0.51714065558253597]], [[-0.25291507881800679, -0.35979030678345936], [0.13232670542166036, 0.0079237980125117513]], [[-0.13599108497969992, 0.98140219369641302], [-0.23685603010580603, -0.21305006294022699]]]))
      arg1=Symbol(shape=(2,))
      res=generalTensorProduct(arg0,arg1,offset=0)
      s1=numarray.array([0.77569917277622036, -0.24811226720508817])
      sub=res.substitute({arg1:s1})
      ref=Data(numarray.array([[[[0.50084224916512654, -0.16019754862920832], [-0.53362442666584953, 0.17068313462579218]], [[-0.72337983303226772, 0.23137759678371045], [-0.23313683496849152, 0.074570285393018229]]], [[[0.10047484291164477, -0.032137511482270183], [-0.33179685979720036, 0.10612731587836988]], [[0.32537426958819093, -0.10407300993862868], [0.69570147912659031, -0.22252450091735251]]], [[[0.12297577129906537, -0.039334575179581631], [0.73386167083579146, -0.23473027863922991]], [[-0.025559706359894296, 0.0081754331016660499], [-0.010046482665463976, 0.0032134307719366164]]], [[[-0.25162632027420867, 0.080484263749135518], [-0.64972394661149668, 0.20781829749059383]], [[-0.51045954090820411, 0.1632736999807789], [-0.18870466554069221, 0.060358376085294589]]], [[[-0.094658590898925435, 0.030277146634455316], [0.75572580704481418, -0.24172366034658216]], [[0.38828318361387792, -0.12419482240680572], [-0.28977561555711545, 0.092686556180416727]]], [[[0.73472796284191533, -0.23500736759490301], [-0.35193240845791524, 0.11256779796854427]], [[-0.70108777380703835, 0.22424734120377141], [-0.65336570327596977, 0.20898313630226589]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[-0.071433217851574596, 0.022848364748768592], [0.12662944783771002, -0.040503226638100957]], [[-0.11726505824577953, 0.037507967632821743], [-0.084966495078365276, 0.027177068727447063]]], [[[0.0078845343459556291, -0.0025219179819800995], [0.22448969514592504, -0.071804443245039928]], [[0.54519350846075909, -0.17438357832143628], [-0.10076259499958147, 0.032229550800393282]]], [[[-0.53232079631298801, 0.17026616024474669], [0.76611625628962476, -0.24504711099586249]], [[0.5025589998208716, -0.16074666214172925], [0.019526412456732881, -0.0062456460378607602]]], [[[0.18177623628490883, -0.058142274339729891], [-0.70407947650838421, 0.22520425616009127]], [[-0.38978329202712614, 0.12467464153324923], [0.40114557874432544, -0.12830894052050865]]], [[[-0.19618601742176045, 0.062751333615889235], [-0.27908904334483198, 0.089268388734458318]], [[0.10264571593178454, -0.032831878893947987], [0.0061464835635512242, -0.001965991489759462]]], [[[-0.10548817212369391, 0.033741056413993158], [0.76127286981107556, -0.24349792331806411]], [[-0.18372902662013327, 0.058766886630748152], [-0.16526275758265577, 0.052860334144286453]]]]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank4_Symbol_rank2_offset1(self):
      arg0=Data(numarray.array([[[[0.83528881962713974, -0.5454517878865015, 0.83135601356312283], [-0.98519489017308293, -0.81289361292415152, 0.76384225893185431]], [[0.93252677650316507, 0.43793650837247111, 0.8899181251358228], [-0.74588740428074307, 0.7045178840271773, 0.057458861179606524]]], [[[0.96586686466841498, -0.63229159203085716, 0.8640698698489182], [-0.77223170251005979, 0.57125835014938509, -0.53726125596192698]], [[0.057406464678161129, 0.97010540768171238, -0.65355236330555622], [0.21597130726523051, 0.91760220581870189, 0.1162972934249058]]], [[[-0.0062346780117237266, -0.018543427822134584, -0.4396272090255009], [0.44543386973870169, 0.99611343966944044, 0.46302979312814818]], [[-0.81264436495115788, 0.078717681931803618, -0.88950620137977277], [0.54660740604591718, 0.15045369501376404, 0.79460367268784782]]], [[[-0.7785600755941986, 0.31610817034257277, 0.24304486953807825], [-0.25483772877318045, -0.20618777110473863, 0.60852711926281011]], [[-0.069739214032218166, -0.60113344161675153, 0.99034100643175638], [-0.53652359458348475, -0.75729582048719668, -0.62344712568688121]]], [[[-0.55247641383021096, 0.71135482518243576, 0.9884857314019373], [0.62206442060896538, 0.64143613140060762, 0.47589461185914472]], [[0.78279805536133518, -0.4179756103420329, -0.23658249305397594], [-0.77632325095078469, 0.4635091313088715, 0.58739244320862594]]], [[[-0.43862808876101123, -0.66466198525797004, -0.9997674472914726], [0.53664254365451147, 0.72135355345542207, -0.13918842155288313]], [[0.4117791595531386, 0.36995887885293066, -0.44958444336946624], [0.063980646466842206, 0.1378367232963591, 0.14352308467898101]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[-0.24182870033627868, -0.06265971766569578, -0.47782830086703609], [-0.23031447020716334, 0.46840446220812937, 0.19312253673522028]], [[-0.37662795653113235, -0.52181038517328027, -0.48652525888799403], [0.44269206822833507, -0.58379158423481203, -0.17701512289577681]]], [[[0.86711671014350333, -0.12131027427286534, -0.35489980813843247], [0.1572903480521064, -0.5400915419876624, 0.74143301590468202]], [[0.53102361430964495, 0.12612106977166615, 0.21089243324817009], [-0.63297355736122207, -0.028624686239583363, -0.79313407869391295]]], [[[0.69440580614131076, -0.75415673519333892, -0.5537608961565279], [0.93447451559560779, -0.090268408249939203, -0.1065418187010343]], [[-0.48010813625689286, 0.51631951589047098, -0.24056112466735846], [-0.6019081260273631, 0.91263559046071796, -0.64432853130525092]]], [[[-0.8991765696352354, 0.5302041498584551, 0.29251341710334233], [0.11610001777942425, 0.34747645307250385, -0.22908415508757907]], [[0.27380547470258865, -0.33673599137794996, -0.088175171209843972], [0.084454610932696905, -0.9636242082553188, 0.42086325536827141]]], [[[-0.37852771589301115, 0.70530083912166686, 0.60900335479265788], [-0.42753943021581753, -0.63314228578011256, -0.60102268609865894]], [[-0.80927308228379036, 0.30339986818259557, 0.18297870147003725], [-0.78971466470767027, -0.24203416763195529, 0.38216780199413281]]], [[[-0.6136796719732065, -0.1128909375971876, 0.20824667429391885], [0.16252454009544981, 0.31918214413147106, 0.52427486758471775]], [[-0.93295403800871335, 0.27322216753904582, 0.85235588937869622], [-0.63818722093336366, -0.70358092340015332, 0.9292765169256576]]]]))
      arg1=Symbol(shape=(3, 2))
      res=generalTensorProduct(arg0,arg1,offset=1)
      s1=numarray.array([[-0.841493976515439, 0.36964388847956475], [0.69751852352256405, 0.018261067957540122], [-0.55241539009838747, 0.9665566257628273]])
      sub=res.substitute({arg1:s1})
      ref=Data(numarray.array([[[[-1.5426070926493771, 1.1023515384015319], [-0.15993100633481189, 0.35928122078659464]], [[-0.97085130690271049, 1.2128562723548839], [1.0873328729097178, -0.20731022854680514]]], [[[-1.7311317406682718, 1.1806529217030373], [1.3450829933795703, -0.79431236848528153]], [[0.98939168111284614, -0.59276025743278671], [0.39406156690514638, 0.20899678957410511]]], [[[0.23516889576852362, -0.42756782516851466], [0.064192873580069032, 0.63038651735953921]], [[1.2301192946619459, -1.158709666673079], [-0.79397389832332199, 0.97282697688356679]]], [[[0.74138319180140422, -0.047100871967332619], [-0.26553512189089234, 0.49021150118465889]], [[-0.90769619549994984, 0.92046464864794963], [0.26765529766641255, -0.81474864835019589]]], [[[0.41503401084778668, 0.76419800206169308], [-0.33894138729432377, 0.70163471036189884]], [[-0.81957376881791877, 0.05305345985214685], [0.65209291875782127, 0.28924908445353931]]], [[[0.45777577242734258, -1.1406054804091301], [0.12846582370610082, 0.077005831739672015]], [[0.1599008541891134, -0.27558132861835216], [-0.0369800217056101, 0.16489028916498777]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[0.42375078815453221, -0.55238284468078247], [0.4138451668070906, 0.11008309684106315]], [[0.22172178806478976, -0.61900124984604521], [-0.68194227457788581, -0.018117380188903576]]], [[[-0.6182375359619332, -0.024721623697550543], [-0.91866174409693246, 0.76491576160474151]], [[-0.47538161623839109, 0.40243221777313143], [0.9508166584129103, -1.0011065232683265]]], [[[-0.80447055409037482, -0.29233010829559425], [-0.79046322258459267, 0.24079569530604045]], [[0.89704019865166096, -0.40055644155738729], [1.4990192890125364, -0.82860597077545106]]], [[[0.96488996952851647, -0.039962248191988403], [0.27122340976933401, -0.17216185480944368]], [[-0.41657592762115525, 0.0098350655731091752], [-0.97570512075401006, 0.42040949164902519]]], [[[0.47406636700247401, 0.46159531744036364], [0.25015756449157928, -0.75052165125316594]], [[0.79154520143729035, -0.11674316708668908], [0.28460144284712763, 0.073053819335592574]]], [[[0.32262555954678851, -0.027622246480431795], [-0.20374546911250535, 0.57264615678399111]], [[0.50479821511176759, 0.4839788025736308], [-0.46707667417092191, 0.64944822962068183]]]]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank3_constData_rank0_offset0(self):
      arg0=Data(numarray.array([[[-0.55788308221700267, 0.60337924544778176], [-0.97831661808633141, 0.12849482337370355]], [[-0.82298233026939638, 0.57325622828650036], [-0.48721452101074325, 0.40401995030016447]], [[-0.44091805622059854, -0.12809369961685224], [0.47350159238103195, -0.46821372757124124]], [[0.072585998208448244, -0.19520661788607252], [0.069329708346334895, -0.65842051916212241]], [[-0.48067444883589161, 0.014878146401128722], [-0.56694396022981963, 0.81412961300471309]], [[-0.48375562235564207, 0.9204871714354701], [0.11171694543948196, 0.62461121329671676]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[-0.30243160569497429, -0.64444577930674596], [-0.78304334018388255, -0.089184423002487856]], [[0.68853074482235588, -0.39652167607336386], [0.676470117077272, -0.48743517485672272]], [[-0.91717636552331716, -0.58624351923886997], [0.1427944941635555, 0.87877843559947588]], [[-0.92038406257928451, -0.2627197059878057], [0.67072676928646646, 0.73494612784099345]], [[0.47609379679770147, 0.14615397830110233], [-0.67163595051316105, -0.18361583673716564]], [[-0.3336047141304368, 0.88671688123111081], [-0.56230301553785833, -0.47912849869393437]]]))
      arg1=Data(0.133176218056,self.functionspace)
      res=generalTensorProduct(arg0,arg1,offset=0)
      ref=Data(numarray.array([[[-0.074296759007187921, 0.080355765962329934], [-0.13028850725825436, 0.017112454616707271]], [[-0.10960167427234409, 0.076344096460348926], [-0.064885387290266286, 0.053805849000223581]], [[-0.058719799200143502, -0.017059034471797328], [0.063059151316886955, -0.062354933479926648]], [[0.0096667287252341291, -0.025996879109605905], [0.0092330683565031799, -0.087685954632601107]], [[-0.064014405212205056, 0.0019814152693885573], [-0.075503452473203322, 0.10842270286751288]], [[-0.064424744248740284, 0.12258700026101077], [0.01487804028641933, 0.083183359142341595]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[-0.040276697467115943, -0.085824851630343035], [-0.10428275061977189, -0.011877244164994331]], [[0.091695920610849274, -0.052807257196750113], [0.090089731820375524, -0.064914773134973389]], [[-0.12214607965091218, -0.078073694752180817], [0.019016830691948251, 0.1170323885624686]], [[-0.12257326861349586, -0.034988016852288722], [0.089324854482614693, 0.097877345780900682]], [[0.063404371297527545, 0.019464234084006479], [-0.089445935799913556, -0.024453262711877567]], [[-0.044428214153606184, 0.11808960072893437], [-0.074885389010919998, -0.063808521418995776]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank4_constData_rank1_offset1(self):
      arg0=Data(numarray.array([[[[0.33121922768713841, 0.52416218005418225, -0.42781067362211611], [0.42732831313179065, 0.66101725333124683, -0.71381967002089386]], [[-0.75037822610811422, 0.019416983602859039, -0.70983696680869413], [0.78581476543394269, -0.64975738473872746, -0.96368532446278365]]], [[[-0.3422791250761692, -0.87833460259945073, -0.38303179882175709], [0.6106598541948709, 0.36551987679822395, 0.26251436195103617]], [[-0.72294618227767282, -0.26323789003827236, 0.78125982920123827], [-0.06772562665393389, -0.10726355705547985, 0.7112722041085966]]], [[[-0.39085652474319854, 0.67308553394276438, 0.64724902979054177], [-0.69126212890541194, 0.53739551798262508, -0.46071825071623573]], [[-0.064618891157437908, 0.85015594216484947, -0.060297611156528097], [-0.94663820799810594, -0.26970573431552047, 0.10686241206413238]]], [[[-0.43073380803034356, 0.57222347165055032, 0.26340045976120208], [0.86069072860061602, 0.35520314842445755, -0.10238894647724472]], [[-0.24570404492384146, -0.36528027900852389, -0.024599783805886455], [-0.25111489012584176, -0.59350468171105986, 0.13349821611504864]]], [[[0.94261487132230481, -0.51684385719635739, -0.10791959815923091], [-0.065380316168370589, -0.10138246217231739, 0.68954617669924345]], [[0.012070798777537695, -0.86021117774305811, -0.2848193175640974], [0.86004954994237415, -0.77709205709455298, 0.84941172157398137]]], [[[0.54324825277848565, 0.54883362656297274, 0.35124385982057404], [-0.92232058936385686, 0.94284905264352492, -0.044605783241616237]], [[-0.28623084219961181, 0.2792159484091874, -0.28281103086087023], [0.52433778183359392, 0.77778406139318546, 0.45735393193275486]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[0.17036527429859905, 0.51987449708603783, -0.17429243133091843], [-0.27965134709262363, 0.76289701397987053, 0.88164331064979384]], [[-0.29851661537461993, -0.95763985877860835, 0.97119645214843819], [-0.53921685230055272, -0.93122613230250195, 0.015394683244506213]]], [[[-0.65024858647844752, 0.27559024204643756, 0.79876587787442688], [0.9838435179296483, 0.82264146011858141, 0.60637140023109004]], [[0.27417849965944052, -0.69873175575354241, -0.27337015847201207], [-0.057617574883679135, -0.21274438801843876, 0.91443781014713865]]], [[[-0.91827378008274296, 0.95022282333230335, 0.46439951748674413], [0.62679410113723844, -0.2343552825621773, 0.56856460747576043]], [[0.35605331947137353, -0.18896195010631356, 0.099313531681968437], [-0.98771916430617268, -0.19484338201589191, 0.045838601497844689]]], [[[-0.96544267114761695, -0.59674628232438698, -0.034513786632143884], [-0.17467426559240229, -0.7039666274567149, -0.35591936402308155]], [[-0.56835425090613767, 0.1890969187991749, 0.49631884580015884], [-0.69744448192963815, -0.91710926669000448, -0.66408657929899184]]], [[[-0.21198711976669982, 0.45049000117714111, 0.63208102159919166], [0.33661234892505387, -0.83377199977781857, -0.38518633039067196]], [[-0.13874162735800111, 0.24989172389414205, 0.46377734128458137], [-0.24912093827090831, 0.79670246618253238, 0.23410313316374398]]], [[[-0.73603695944161451, 0.48963102614792708, -0.11250103669431266], [-0.39225572342158199, 0.34133798424950301, 0.066467378591382742]], [[0.8533522351479963, 0.24811957668181206, 0.68785454320096218], [0.49328133892903669, 0.115990554156296, -0.14403551012572202]]]]))
      arg1=Data(numarray.array([0.97779317139624511, -0.50826260868066697, -0.21758807930452084]),self.functionspace)
      res=generalTensorProduct(arg0,arg1,offset=1)
      ref=Data(numarray.array([[[0.1505383648409474, 0.2371870039331056], [-0.58913156996438998, 1.3082981338042958]], [[0.195089598618916, 0.35419895356469244], [-0.74309068929732225, -0.16646795270004497]], [[-0.86511472346037466, -0.84880263787780574], [-0.48216634606881686, -0.81178702245486789]], [[-0.76932117075835516, 0.6833196524859374], [-0.049236810092864888, 0.027070192554632472]], [[1.2078568096574815, -0.16243654017475334], [0.51098921009152642, 1.0510955480839415]], [[0.17580634434531195, -1.3713480065054158], [-0.36025328025832842, 0.017860582936379057]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[-0.059726810852671397, -0.85302827863499653], [-0.016475745912565398, -0.057284832364254197]], [[-0.94968277609883156, 0.41193839070385052], [0.68271117737908438, -0.14717882039059754]], [[-1.4818923616917952, 0.60827613833540672], [0.42257935752686748, -0.87672738174614195]], [[-0.63318964050519366, 0.26444842118544498], [-0.75983686309268772, -0.071326780244139854]], [[-0.57378007676929499, 0.83672434164260134], [-0.36358365620827088, -0.69946087720164396]], [[-0.94407417098412005, -0.57149681136327524], [0.55862313611840708, 0.45471387314411638]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank3_constData_rank1_offset0(self):
      arg0=Data(numarray.array([[[0.15353842607576618, -0.57980732359351506], [-0.39098749642353736, 0.13877089994271508]], [[0.22856599843158887, 0.79638342499562054], [-0.60307935108347865, -0.80642442399572833]], [[0.7655435833970563, 0.97840561229924616], [0.97916254552254656, 0.5401714364034973]], [[0.20865067453778052, 0.71138225446363457], [-0.97460222379220141, 0.80062968492339515]], [[-0.26779202550478254, 0.76073856207292501], [-0.89974212644138274, 0.18351490485543565]], [[0.34655848557090474, -0.9366109987418918], [0.56949237355340676, 0.23610342759771985]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[-0.15352555766621379, -0.55739622188759497], [-0.65935330630725608, -0.5129260367909978]], [[-0.65665456536841282, -0.79916924525615896], [-0.3927942719364359, 0.47136712401353531]], [[-0.6318827424905058, -0.23100396717245442], [0.092103168694301019, -0.18108020317505158]], [[0.8811527919772828, -0.42025015770745355], [-0.66664451859031337, 0.31300852318845718]], [[0.091568733644977307, 0.81137858555742826], [0.0054333658576617427, 0.99472521645678902]], [[-0.50281332291530934, -0.58815522301144973], [-0.073046828090624905, 0.80336133153586098]]]))
      arg1=Data(numarray.array([-0.48692802957406767, -0.77213351675464281]),self.functionspace)
      res=generalTensorProduct(arg0,arg1,offset=0)
      ref=Data(numarray.array([[[[-0.074762163272976481, -0.1185521648828541], [0.28232443761000414, 0.44768866780635796]], [[0.19038277122161087, 0.30189455062059922], [-0.067571440871326355, -0.10714966299597525]]], [[[-0.11129519124392301, -0.17648346817951888], [-0.3877814119185648, -0.61491433462697576]], [[0.29365624009988561, 0.4656577802341943], [0.39267065577664251, 0.6226673264966589]]], [[[-0.37276462861659959, -0.59110185927732029], [-0.47641311692108113, -0.75545976623709654]], [[-0.47678168892402195, -0.75604421974875191], [-0.26302461316014875, -0.41708447084063927]]], [[[-0.10159786182198156, -0.16110617910408487], [-0.34639195943993556, -0.54928208189585237]], [[0.47456114044964115, 0.75252304249356794], [-0.38984903489825545, -0.61819301423806272]]], [[[0.13039544331469224, 0.20677119841185673], [-0.37042492905117896, -0.58739174126423777]], [[0.43810966075288416, 0.69472105226148539], [-0.089358551018729776, -0.14169800886292119]]], [[[-0.16874904051121362, -0.2675894222250258], [0.45606214809478895, 0.72318874428965529]], [[-0.27730179931181925, -0.43972414915674068], [-0.11496537677584127, -0.18230336986885262]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[0.074755897283669381, 0.11854222875253137], [0.27141184401575641, 0.4303843050318199]], [[0.3210576062333389, 0.50910878718282282], [0.24975806441187628, 0.39604738462245442]]], [[[0.31974351362565706, 0.50702499885090413], [0.38913790588877628, 0.61706535982179167]], [[0.19126254086198924, 0.30328962255135977], [-0.22952186490190593, -0.36395835514709285]]], [[[0.30768141872276, 0.48789784413576259], [0.11248230655907585, 0.1783659055571413]], [[-0.044847614449843948, -0.071115943548176769], [0.088173026526899692, 0.13981809409219781]]], [[[-0.42905799275118667, -0.68036760406759156], [0.20463158122068154, 0.32448923218734937]], [[0.32460790186353422, 0.51473857656434452], [-0.15241262343604431, -0.2416843717836806]]], [[[-0.044587383044341435, -0.070703288334065514], [-0.3950829759040726, -0.62649260068586488]], [[-0.0026456581310262467, -0.0041952838874909672], [-0.4843595896169422, -0.76806067958730384]]], [[[0.24483390057074098, 0.38823901929368565], [0.28638926382466157, 0.45413436074144192]], [[0.035568548068803642, 0.056401904261386041], [-0.39117915020075611, -0.62030221014347686]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank4_constData_rank2_offset1(self):
      arg0=Data(numarray.array([[[[-0.018563813114883088, -0.72907769261407118, -0.96631844483501306], [-0.65567102973845204, 0.059337025681712952, -0.76230702641878589]], [[0.22093951588526717, -0.097578336976083868, -0.64205469550215732], [-0.37332267843256339, 0.20955436731511501, 0.90739152323893424]]], [[[0.68411714360906006, 0.41484118106561185, -0.32970134664187811], [0.9777921315767284, -0.3112125100483254, -0.81094917348835427]], [[0.35331470499286843, -0.73894998918062349, -0.10177422967169503], [0.9173686458028274, 0.69651310536539168, -0.97228395045013594]]], [[[0.56368483514977119, -0.63963831391154469, -0.30560167960965434], [0.42385964514200603, 0.51210956698259791, -0.23683907027697626]], [[-0.27134769028821415, 0.095999370243148752, -0.84726008061352531], [-0.42958976441462671, -0.77196628872528694, 0.23942404247740545]]], [[[-0.59517542803886947, -0.35350935232755298, -0.60999881302853143], [0.86651528806429234, -0.31564121927201394, -0.1404748627011303]], [[0.34087368208521962, 0.54406835422468292, -0.31278412944926082], [-0.72383323125186627, -0.39424452256920861, 0.94790257886505014]]], [[[-0.226774401964559, -0.031858402580247747, 0.68629440550008924], [-0.76942220513853443, 0.83019459704528731, 0.54522933631839265]], [[-0.29694244466611086, -0.46098161522543002, -0.29663087822780021], [0.61487422882382381, 0.54060531685219781, -0.84083391077447622]]], [[[0.18974270897168433, -0.478056632432037, -0.20438582327670596], [-0.091273211468117177, -0.71573378483029781, 0.8582515337066059]], [[-0.58438082679092607, 0.64306721388100652, -0.65750180762336963], [-0.51031735113224541, 0.94370016384746025, 0.49675182408013696]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[-0.36548131021342023, -0.62352841098185352, -0.4314348253698157], [0.89862855174846668, -0.9091771720972992, -0.65415336351761733]], [[0.7844416638997429, -0.0850882211642916, -0.9657974620036831], [-0.86067662843268966, 0.76770769639309377, -0.23046903036695676]]], [[[0.18356824155595897, -0.24983338494229068, -0.77885985260956958], [0.79072921700504195, 0.36769722389630832, -0.72708992258887473]], [[0.49969511921527365, -0.67976784607394336, -0.98440069481499215], [-0.63467562677460898, 0.92658675443032967, -0.68384585647790153]]], [[[-0.61358277969203345, -0.92810352710687494, 0.96809280335897885], [0.27638044486605229, 0.80058500198666294, -0.11161815086482574]], [[-0.96542298773166624, 0.44650656026655655, 0.82860300168690859], [0.0050557379379216894, 0.24222163598288082, 0.45792524863957929]]], [[[0.9032224664690891, -0.80265550120995122, 0.39221963838560314], [0.59267826425735981, -0.59089611954724708, 0.74815874118639303]], [[0.89750783641006726, 0.40641407437901256, -0.090443072439682304], [-0.87928953583762559, -0.80543600799589621, -0.24728038202214364]]], [[[0.27923358320267866, 0.9549841895219251, -0.32322382452230514], [0.92854584041357779, -0.30130881839554347, 0.82430726805522858]], [[0.41491893524241785, -0.30181369128257596, 0.7080309933729263], [-0.97550588508246583, -0.56194513939546376, 0.44655563673006338]]], [[[0.77269724927223282, 0.53291397356073245, 0.0077457980037325402], [-0.69966253912605936, 0.052029527173708567, -0.95655794962180707]], [[0.23423319201731818, -0.76782493016611331, -0.14211202956964519], [0.03330810329676992, 0.8015729549532784, 0.58607742156094877]]]]))
      arg1=Data(numarray.array([[-0.76484389760121729, -0.62448834778148021], [0.32661215164037483, -0.58569105910455965], [0.37538528337903698, -0.41678072855192139]]),self.functionspace)
      res=generalTensorProduct(arg0,arg1,offset=1)
      ref=Data(numarray.array([[[[-0.5866689379693355, 0.84135007638877779], [0.23470734042515878, 0.69242063048498115]], [[-0.44187239487298069, 0.18677263005592476], [0.69459799931649824, -0.26778175682642802]]], [[[-0.51151568523650293, -0.53277878794196065], [-1.1539225177791543, -0.09035742076023584]], [[-0.54978519001347725, 0.25457302301098439], [-0.83913525286848922, -0.57559831505765569]]], [[[-0.75476292541430146, 0.14998472082095332], [-0.24583115698962416, -0.46592344388999318]], [[-0.079155779540492438, 0.46634917162239187], [0.16631180126320644, 0.62062022858307597]]], [[[0.11077126665943285, 0.83296313637405883], [-0.81857338416965386, -0.29771324493837475]], [[-0.20043037885275247, -0.40116521578737624], [0.78068305619817591, 0.28786338320791854]]], [[[0.4206664959502972, -0.12575712917484952], [1.0643105908206993, -0.23298343119165119]], [[-0.034798446756286433, 0.57905994064362476], [-0.60935121185361396, -0.35016612191257379]]], [[[-0.37798608858527993, 0.24668545686271931], [0.1582174025316696, 0.1184952360015632]], [[0.41017717324432279, 0.26233438182992896], [0.88501037712248454, -0.44106609613778347]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[-0.0860700902966888, 0.77324755581023719], [-1.2298184221534556, 0.24395239672025365]], [[-0.99031242061259217, -0.03751349840117707], [0.82251124734016512, 0.18389804226586759]]], [[[-0.51437219523945921, 0.35630272876255342], [-0.75762889146539592, -0.40612109110430605]], [[-0.97373873519671528, 0.49635940909106718], [0.53135660301921162, 0.13866773026716711]]], [[[0.52957294611336314, 0.52327481017712163], [0.0081930822051312427, -0.59497155085324571]], [[1.1952777217376633, -0.0039652563842236255], [0.24714407861951443, -0.33587871469884506]]], [[[-0.80574775182916558, -0.25741334180336028], [-0.3654524255866401, -0.33585624115782581]], [[-0.5876646148150918, -0.7608213459148121], [0.31662863185038215, 1.123904435796635]]], [[[-0.022994128158756733, -0.5989903593388044], [-0.4991709237573943, -0.74694756048631405]], [[-0.15013981963524692, -0.37743613308854884], [0.73020202643601662, 0.75220251866212517]]], [[[-0.41402893767659338, -0.79789167745492751], [0.19304832226252311, 0.80513279333385812]], [[-0.48327954454634608, 0.36266185269742712], [0.45633280694153011, -0.73454041007769555]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank3_taggedData_rank0_offset0(self):
      arg0=Data(numarray.array([[[0.3408116744379055, 0.56887093713406411], [-0.96021689624699791, -0.65848280155169858]], [[0.68886307403239377, -0.95953200221527979], [0.49822841612609148, -0.20565693129639828]], [[-0.27110578938370233, 0.1617359088345558], [-0.91578731668706337, -0.47583978924401382]], [[0.066556664516868258, -0.026011796759949135], [0.23586448799521609, -0.38222856540972816]], [[-0.52947623742171168, -0.82526957265796264], [-0.82957143183650039, -0.041373658838616212]], [[0.63907685922762303, -0.95384189331141278], [0.28676386707542023, -0.75571706180752085]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[-0.52563626086379656, 0.23925843608485509], [-0.86243841428406687, -0.59363199579380765]], [[0.30910920254401764, -0.39263598142914424], [0.34554301311641589, -0.11527719916350132]], [[-0.96187716820875702, -0.60853176611744675], [0.15344312473031074, -0.96882505400312757]], [[-0.3052242437089574, 0.99462087193328208], [0.33531102508605781, -0.23407695168028431]], [[0.4457209836745204, 0.29580462263415264], [0.15081746268799412, 0.3721091921747528]], [[-0.16134522000333451, -0.83865235766712654], [0.96320537584992993, 0.44153150756926163]]]))
      arg1=Data(0.741754345545,self.functionspace)
      arg1.setTaggedValue(1,0.119609480993)
      res=generalTensorProduct(arg0,arg1,offset=0)
      ref=Data(numarray.array([[[0.25279854052676443, 0.4219624896734156], [-0.71224505545688743, -0.48843247951758012]], [[0.51096717864897523, -0.71173703233262275], [0.36956309273550203, -0.15254692248054103]], [[-0.20109389737775302, 0.11996831320869233], [-0.67928922174757123, -0.3529562314549366]], [[0.049368695130363877, -0.019294363282124114], [0.17495350893018435, -0.28351969938407495]], [[-0.39274129997034007, -0.612147291765061], [-0.61533821450466386, -0.030689091234637474]], [[0.47403803746930256, -0.70751636932655537], [0.21270834454846507, -0.56055641459818417]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[-0.062871080352977116, 0.028617577363286923], [-0.10315581112087302, -0.071004014917687819]], [[0.036972391286424926, -0.0469629859578852], [0.041330220459583795, -0.013788245962263712]], [[-0.11504962886838777, -0.072786168713011981], [0.018353252510924154, -0.1158806618822505]], [[-0.036507713376484521, 0.11896608627666411], [0.040106377681746914, -0.027997822702883309]], [[0.053312455524962568, 0.035381037388577161], [0.018039198436779855, 0.044507787348716417]], [[-0.019298418025287121, -0.10031077323405262], [0.11520849509499929, 0.052811354462380333]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank4_taggedData_rank1_offset1(self):
      arg0=Data(numarray.array([[[[0.38424925061114346, -0.59474799680789636, 0.73736822263155122], [0.90506441154612927, 0.21406259358579516, 0.32006128273314016]], [[0.64140848411706375, 0.53550573515726518, 0.67643120780678623], [0.052569135247117815, 0.37778543782573326, -0.31873241781700945]]], [[[0.83455223481026231, 0.15163272356011559, -0.016785447140725607], [-0.18379578039212863, 0.4430960482026487, -0.18840204539714511]], [[-0.89142151846542883, 0.82734149968348003, -0.35693550478664826], [-0.28430998328475665, 0.2221707257721488, -0.18439879720993391]]], [[[-0.49199434004781373, -0.4795130729174959, -0.69119689520046923], [-0.46996246395445551, -0.023019547343175129, -0.6812425539085003]], [[0.67097721210023575, -0.7358265409749114, -0.4605079964070431], [0.92018558486113267, 0.23849886847479129, -0.024092435772827825]]], [[[0.82898688686505073, -0.59046526654725029, 0.88894088619495082], [0.8919694826791682, 0.69786875619239486, -0.46814251921933314]], [[-0.90327410124977647, -0.031102685524891927, -0.53370511179903923], [-0.21256695025473404, -0.32261284033884574, -0.85634430462200295]]], [[[0.56725237822076457, -0.21170751298679424, 0.88712137516860157], [-0.013775441134548982, 0.378368525743489, 0.95438939870784911]], [[-0.18531571124988733, 0.85361247680811592, -0.16851226814244025], [-0.67363830094129784, 0.3032981783847386, 0.065382849687144695]]], [[[-0.018304478002726166, -0.81806376481144993, -0.020984482803131144], [-0.69339699943167021, 0.62758980002179054, 0.65044952737774109]], [[0.32076768603236561, -0.031647244247374529, -0.7168203751821578], [0.18295523759416898, -0.86567258088504184, -0.67428140321732921]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[-0.14358819932622224, 0.28709841204498354, 0.6934275198707649], [0.55298381012846431, -0.46888870796502191, -0.46079600300288304]], [[0.97996805961189803, 0.24524435619835594, 0.40522310835910846], [0.05352368692926146, 0.7080940918355243, -0.49102612690174885]]], [[[0.75207229549190679, 0.57508259272564932, -0.18252168569948868], [0.049557476254514565, 0.070463037983077292, 0.55069630655607504]], [[-0.62766650566857551, -0.82092001162344319, -0.47855773203452956], [-0.56101735011207388, 0.74378135903467313, 0.42321173604742568]]], [[[0.94850599190914053, 0.72769944177542589, -0.50129489227587576], [0.74675581286213322, -0.99188065429858074, -0.9827479944519748]], [[0.31973628660469422, -0.93175095338498481, -0.10495092398250261], [-0.46262278960368897, 0.20069072105812502, 0.43096063835027731]]], [[[-0.63789949045993311, -0.05563333311145513, 0.032636970050093028], [-0.49000004064869374, 0.0025786073117077812, 0.89052810293858298]], [[0.73554366473543942, 0.33611697869696755, -0.2744532442212364], [-0.9667120316410136, 0.780444707711202, -0.27886054173802122]]], [[[-0.53126484133034446, 0.50497347167074791, -0.89954937201105212], [-0.74732738306434632, -0.040244401749919945, -0.7079389763791768]], [[-0.26056715147341025, -0.72125340840807506, -0.21436998037853794], [-0.43000797152589532, 0.64533581695893227, 1.235225132156792e-05]]], [[[-0.023180536393181406, 0.43567968173014227, -0.39417680821841539], [0.18420975309415244, 0.98060158292259425, 0.74677568062729627]], [[-0.39482762694758433, 0.80784433181665904, 0.68602669130890237], [0.46230513777643645, -0.29424313808839409, 0.62305062315871917]]]]))
      arg1=Data(numarray.array([-0.87899887524184472, -0.64116474206930163, -0.78912677719619029]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([0.074378200701110453, 0.32788821992753414, -0.24012818495573729]))
      res=generalTensorProduct(arg0,arg1,offset=1)
      ref=Data(numarray.array([[[-0.53830022226226704, -1.1853689159220733], [-1.4409347116797111, -0.036910627895841153]], [[-0.81754618601351792, 0.026131819682519541], [0.53476367740888464, 0.25297414800340845]], [[1.2853513255609457, 0.9654425404114082], [0.24539701068067427, -0.94274717339993674]], [[-1.0515800874589156, -0.86206521562730221], [1.2350798592229799, 1.0694583100282751]], [[-1.0629260412446533, -0.98362219134477213], [-0.25143637868925584, 0.3460678530755687]], [[0.55716267562342425, -0.30618040892816978], [0.3039988144547538, 0.92631479961896135]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[-0.083055136383270653, -0.0019630351486319836], [0.05599550690724979, 0.35406591946060445]], [[0.28832919287804593, -0.10544770854508234], [-0.2009395070560977, 0.10052461873668525]], [[0.42952727624821646, -0.03369813621809517], [-0.25652707693932786, -0.072090723284746874]], [[-0.07352438727169916, -0.24944072341631074], [0.23082117154255161, 0.2509586001970418]], [[0.34206748772192391, 0.10121557011852891], [-0.20439473779070111, 0.1796118269452249]], [[0.23578307022201334, 0.15590700871123253], [0.070781727243265369, -0.21170544972564914]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank3_taggedData_rank1_offset0(self):
      arg0=Data(numarray.array([[[0.48168512310725209, 0.10208405832589706], [0.29609107206959862, 0.79282844635200678]], [[-0.37310722838022503, -0.67847185314884806], [-0.16138066159775821, 0.95337917733992183]], [[0.20385832317983144, 0.35276892670596238], [-0.55305964990309242, 0.32269871697142483]], [[0.35085949937039751, 0.7081841971518148], [0.7067765863033828, -0.96958000346049888]], [[0.14056130596604, -0.45970942399121562], [0.82075092761473178, 0.82864052566944268]], [[-0.24867119404922278, 0.24391502205473792], [-0.91115448048640957, -0.047635694256189742]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[-0.041472039353402046, -0.33599318871238704], [0.77747382821089661, -0.090277799792133129]], [[0.50587362325995566, 0.86568654642522125], [0.97323081341867801, -0.72099391192574958]], [[-0.95007266759299958, 0.58918282717886372], [-0.57935406765292963, 0.75175236330407857]], [[0.59062845175421907, 0.48329610917075971], [-0.51914751632225431, 0.31568622230041576]], [[0.97419338224717777, 0.61019526508404098], [0.37034246362282497, 0.34261848244380233]], [[0.39210610676867552, 0.72937600295382121], [-0.028960311450379805, -0.89453305757199675]]]))
      arg1=Data(numarray.array([0.8124797351421944, -0.7090990431252997]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([0.56025714551038486, 0.86783242619082501]))
      res=generalTensorProduct(arg0,arg1,offset=0)
      ref=Data(numarray.array([[[[0.3913594012441155, -0.34156245988304462], [0.082941228670865175, -0.072387708077240889]], [[0.24056799581307589, -0.20995789588249653], [0.64415704610527591, -0.56219389267072606]]], [[[-0.30314206209400346, 0.26456997862755022], [-0.55124463154780989, 0.48110374185529703]], [[-0.1311185171920187, 0.11443487271789815], [0.7746012614952229, -0.67604026238732395]]], [[[0.1656307564236813, -0.14455574189994658], [0.28661760413645648, -0.25014810837153689]], [[-0.44934975787109932, 0.39217406853749609], [0.26218616809566919, -0.22882535142219926]]], [[[0.28506623312058349, -0.24879413527497057], [0.57538530893379403, -0.5021727365568105]], [[0.57424165364447677, -0.50117460105109457], [-0.78776410441075406, 0.68752825268726458]]], [[[0.11420321264252913, -0.099671887560961445], [-0.3735045910467536, 0.32597951266785369]], [[0.6668434962861276, -0.58199369741580842], [0.67325363482399758, -0.58758820384704713]]], [[[-0.20204030587860575, 0.17633250575312959], [0.19817601251623598, -0.17295990874290104]], [[-0.74029455097922181, 0.6460987702522426], [-0.038703036252583596, 0.03377842521567348]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[-0.023235006386631379, -0.035990780531144274], [-0.18824258481893402, -0.29158578414386255]], [[0.43558526770246825, 0.6747169986361311], [-0.050578782414498522, -0.078346002024776457]]], [[[0.28341931215661859, 0.43901353381963071], [0.48500707340693772, 0.75127085590495601]], [[0.54525951744869849, 0.84460125805280151], [-0.40394199102588629, -0.62570189585533731]]], [[[-0.53228500077309071, -0.82450386817482202], [0.33009388893896857, 0.51131196238060284]], [[-0.32458725618306072, -0.5027822461547653], [0.42117463319542886, 0.65239507734086499]]], [[[0.33090381043703682, 0.51256652226319455], [0.27077009856028517, 0.41942003499024622]], [[-0.2908561055935121, -0.45053304864088289], [0.17686546178298773, 0.27396274021398592]]], [[[0.5457988035129111, 0.84543660649461405], [0.34186625741993742, 0.52954723734803688]], [[0.20748701153060745, 0.32139519872728356], [0.1919544529730646, 0.29733542887702358]]], [[[0.21968024811540834, 0.34028239396129834], [0.40863811741868189, 0.63297614624878107]], [[-0.016225221426281505, -0.025132697349225037], [-0.5011685373999637, -0.7763047936606029]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank4_taggedData_rank2_offset1(self):
      arg0=Data(numarray.array([[[[-0.17199598147646711, 0.93859544690713759, -0.85474595282134991], [0.67552432444779198, 0.93209261196790028, -0.12371714328874028]], [[-0.18320804036592264, -0.71939666157959214, -0.57123439078143767], [-0.047966381895214738, 0.018921102111833177, 0.57728482297863248]]], [[[0.83701940607580738, -0.097927949522160329, -0.065074792425169559], [0.18486087365679538, -0.75658890218145802, -0.13726106650437386]], [[0.64554091785236212, 0.33962646326137702, -0.06386902493775759], [0.63901583711638654, -0.81959227761373188, -0.21286409556662456]]], [[[-0.50879127043366501, -0.83077111360190425, -0.747374903265833], [0.13713457798860218, 0.85883260693619268, 0.90864676054794091]], [[-0.39168521949456037, 0.75382920140674892, 0.9611559631046791], [-0.44607293562987205, -0.32195177155771093, 0.47858376847856343]]], [[[0.72685812694705954, -0.95016330053314535, 0.89557217370321185], [0.8443254177933881, -0.59227314372952722, 0.71909687033607583]], [[-0.34107564778295862, -0.46981846497114721, 0.25613727455494906], [-0.34769288087860106, 0.30626854745455034, -0.83297590706743319]]], [[[0.84905190885517023, -0.91623916362547653, -0.29587292945241361], [-0.71414494639511017, 0.76147253420250594, -0.35586140792096921]], [[-0.95957287411840153, -0.73074134101203425, 0.24702611486652226], [0.97038393540246815, 0.55666944922723882, -0.99439544127369506]]], [[[0.070747917943548622, 0.1216906711034671, -0.0063887115893535018], [0.55436968776071449, 0.74121946528593918, -0.088255145707389238]], [[0.32503996992386752, 0.39408761864412112, 0.53044367718013796], [-0.34679914863905492, 0.26361688304028053, -0.86659964079776741]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[0.75856796081050049, -0.80174106148110269, 0.10679042738347411], [0.62441366596242731, 0.99455341999984115, -0.19326491010818603]], [[-0.42068657915138474, -0.029971034273205799, -0.44929178265266478], [-0.26704010150641366, 0.26161993237997527, 0.93183175802763873]]], [[[-0.63783747831939563, 0.058258544277750568, -0.92348979761937122], [-0.45895501783929582, 0.029415900663597894, 0.14293741492124656]], [[0.63206666362057096, 0.087722742129151765, 0.69916925815303133], [0.34314524609837127, 0.11358966614814148, -0.74080518231651071]]], [[[-0.42520630141736615, 0.63196675264867541, -0.90261888590873318], [0.22477486112230771, 0.54958410506678046, -0.91914230550618781]], [[-0.28334934635951115, 0.82647919912074186, -0.2510647177645815], [0.12841432802913144, 0.31207737474735953, 0.31232622055710246]]], [[[0.16687083419932458, 0.40976749296349224, 0.6996984241549733], [-0.095243753584991708, 0.48316781160070832, 0.17054783741345725]], [[0.77847033443889213, -0.91214994182439413, 0.02579298308450273], [0.90361882092247137, 0.3624213291676559, -0.6519146377766718]]], [[[-0.69410095423440477, 0.90665528952267427, -0.31615522988616385], [-0.72220643539023022, 0.62049418938324097, -0.52757500409335045]], [[0.67524390906236631, -0.64183187625987226, -0.39588347581523275], [-0.83544255889445274, 0.62226495608519006, -0.34926301624914413]]], [[[-0.60598742844781106, -0.76752669759687153, -0.10231648638044888], [0.91968434815098288, 0.27127369086079134, 0.86927579872477478]], [[-0.53260051085897797, 0.47462031811077776, 0.89756587818688449], [0.47473280468267598, -0.49105753839701394, -0.28509074857810957]]]]))
      arg1=Data(numarray.array([[0.36132190241038864, -0.66492652356646231], [0.085470514907809436, 0.30455433617929217], [0.63636138905709139, -0.91116139080169289]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[-0.5523844043525743, -0.72569393811778338], [-0.12332478686188697, 0.84179903467344164], [0.18343558144217242, 0.37574374135053867]]))
      res=generalTensorProduct(arg0,arg1,offset=1)
      ref=Data(numarray.array([[[[-0.52585100092506187, 1.1790295144590777], [0.24501935636723227, -0.0525749095991659]], [[-0.49119579116491829, 0.42321123463113797], [0.35164766381425905, -0.48834301893882343]]], [[[0.25265240658791649, -0.52708714712752347], [-0.085219403436244831, -0.2282743446695164]], [[0.22163233978631858, -0.26760757666854973], [0.025380952419991193, -0.48055541575580585]]], [[[-0.73044439620163415, 0.76627302196043845], [0.70118230644405422, -0.65754706979644673]], [[0.53454826512477249, -0.38574436076191698], [0.11585892628310485, -0.23751313382509193]]], [[[0.75132636712654632, -1.5886943880874498], [0.71205685892359583, -1.3970070234340906]], [[-0.00039785621198989984, -0.14967740129020238], [-0.62952582799511991, 1.0834411187018971]]], [[[0.040187509488223139, -0.57401375444153158], [-0.41940922089820371, 1.0310108540757845]], [[-0.25197365346875022, 0.19041435287942221], [-0.23459507021396975, 0.43035681116659136]]], [[[0.031898207240341141, -0.0041595982334539008], [0.20749615246424472, -0.062458825731877096]], [[0.48868080720351675, -0.57942640277040502], [-0.6542452085831657, 1.1004937510779036]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[-0.3005574015281296, -1.1852671876979115], [-0.50302112064456816, 0.31146281622437494]], [[0.15366077746935144, 0.11124153724635238], [0.28617566534937122, 0.76415074049691101]]], [[[0.1757458649970465, 0.16492126619865449], [0.27611169229001581, 0.41153099015886618]], [[-0.23170963657539226, -0.12213355373685264], [-0.33944653309350248, -0.43175166449061264]]], [[[-0.0086322556961581365, 0.50140524050842772], [-0.36054287363314658, -0.04584035374509704]], [[0.008538186352380385, 0.80701829864627217], [-0.052129205956314928, 0.28687155602153908]]], [[[-0.014361747816624248, 0.48675203089918229], [0.024309138427809907, 0.53993029451994379]], [[-0.31279282398436686, -1.3230865912472762], [-0.66342481796206487, -0.59561762071356583]]], [[[0.21360335340758671, 1.1481330535064667], [0.22563723034768052, 0.84819923599457314]], [[-0.36645954072872067, -1.1790646037573904], [0.32067748272296659, 0.99886424753811076]]], [[[0.41062458692991677, -0.24478660911741185], [-0.38201794937972289, -0.1124264844577329]], [[0.40031328512524589, 1.1232946489693711], [-0.253971218510742, -0.86500354487075914]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank3_expandedData_rank0_offset0(self):
      arg0=Data(numarray.array([[[-0.25565639449158506, 0.89172623633013059], [-0.20509858319566132, -0.42167695570041497]], [[0.00040652270891894382, 0.47770973532219729], [-0.59892941057019478, 0.17325477495130892]], [[0.76201199154592669, -0.81353850978235309], [0.98673175878046404, 0.33335329080237286]], [[0.94493297069099347, -0.44253660929236616], [0.57794767489812271, 0.95400579970531241]], [[0.51007149320041756, 0.25391351363012293], [0.65631331120050174, 0.4848065337923797]], [[0.93427851984832877, -0.95517837260112315], [0.18750511653122226, -0.43941211500008182]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[-0.33861192057602518, -0.70057858339640422], [-0.79354191721593037, 0.37920628729360484]], [[-0.63843975364035499, -0.2894116885114526], [0.12503510379876137, -0.16392793508778469]], [[0.96363725065605377, -0.42583870054481832], [-0.22909311550049116, 0.58966484928082585]], [[0.63418771129589246, 0.81148098051542328], [-0.14692963865867692, 0.98677701118574856]], [[0.69282871079625852, -0.77394663661243457], [-0.59718981127967297, -0.56934462600099756]], [[-0.87776178002608884, -0.33292026312020373], [-0.4124862871451298, -0.53491935819147418]]]))
      arg1=Data(-0.345584059835,self.functionspace)
      arg1.setTaggedValue(1,0.242083711813)
      arg1.expand()
      res=generalTensorProduct(arg0,arg1,offset=0)
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[[0.088350774731114384, -0.3081663730121213], [0.070878801047110265, 0.14572483428970412]], [[-0.00014048776816322575, -0.16508886975522508], [0.20698045725927705, -0.059874088513427931]], [[-0.26333919768119857, 0.28114594104249169], [-0.34099876716722827, -0.11520158359475542]], [[-0.32655377228309695, 0.15293359806475698], [-0.19972950386334296, -0.32968919736805175]], [[-0.17627257742616939, -0.087748462887202019], [-0.22681141860825194, -0.1675414101823797]], [[-0.3228717639055792, 0.33009441986983817], [-0.064798779410646212, 0.15185382264229888]]])+(1.-msk_ref)*numarray.array([[[-0.081972430597011925, -0.16959866388496181], [-0.19210357279845949, 0.091799665570682421]], [[-0.15455586532993085, -0.070061855796782604], [0.030268962034468438, -0.039684282995813495]], [[0.23328088247963358, -0.10308861326131173], [-0.055459711751054297, 0.14274825543927516]], [[0.15352651513639934, 0.19644632782844057], [-0.035569272301765507, 0.23888264159911504]], [[0.16772254595984434, -0.18735987453595726], [-0.14456992617120426, -0.13782906036283504]], [[-0.21249182979588424, -0.080594573033741235], [-0.09985621146385984, -0.12949526375136541]]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank4_expandedData_rank1_offset1(self):
      arg0=Data(numarray.array([[[[-0.073847794998378458, -0.77896900055749541, 0.077347011293467993], [-0.72803060310027279, 0.54125218265170938, 0.051767331336219691]], [[0.61439967955977903, 0.91572560688564431, 0.44888275011600243], [-0.089107891785812132, 0.79679077182097169, -0.5681147589861435]]], [[[0.41680490219641242, -0.32830153782056359, 0.10815483490843869], [0.23696931751596839, 0.80562500892739863, -0.96106620786546682]], [[-0.24771648091369336, -0.4408902603577538, -0.025415342723573486], [0.37828974022089201, -0.41251437700612104, -0.011157421463758643]]], [[[0.8284586509083649, -0.95005658258054315, 0.45424304755152933], [-0.54077421306340501, 0.4256159308519083, -0.3019849476814922]], [[0.28978254346253363, 0.1653690238355936, 0.56365483777752279], [0.50305144733624241, 0.64106522049013703, 0.28701162283862369]]], [[[0.3742546437186538, 0.44265496096873491, -0.96875965166271216], [0.28349892352465678, -0.32923756726614029, -0.18138489111709477]], [[0.42467517916283959, -0.22984676054642006, 0.59218366603907535], [-0.76868734411409023, 0.33550565072878258, 0.44638152226156569]]], [[[0.96069067400286423, 0.4335774672333168, -0.26075966855818988], [0.49610687321916358, 0.35462094839951774, -0.40848858904808028]], [[0.47691376352899884, 0.13618873278950727, 0.53825620883379144], [-0.77551501445217208, -0.89074453136457787, 0.027408872638967186]]], [[[-0.82860810521057382, 0.68347949105070183, -0.92213966350115539], [0.24293022518814422, 0.85304513003218774, -0.76094371904797065]], [[-0.90294171282330349, -0.69221481098674542, 0.47555261556537465], [0.83051319044810756, -0.51672290750001526, 0.64533236264561822]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[-0.87871620353224911, -0.82039209204344488, -0.046780051474077933], [0.75303823720019691, 0.76723180672032298, 0.84573038386947164]], [[-0.40105480617729583, -0.45342529443238466, 0.34842151557162127], [0.35836328224453373, 0.16036297622134477, 0.73137650320679315]]], [[[0.072895855059779358, -0.41034883111261666, -0.4656231224535341], [-0.23330232883190716, -0.91828896498403734, -0.53063918561313272]], [[-0.37739306154656793, -0.61041642020602094, -0.41613347373253906], [0.14176881897186866, -0.054102732902791217, -0.1985902996549973]]], [[[-0.045799520298569263, 0.84150261680416216, -0.87311863840869752], [0.27320463505829662, 0.73303239592523184, -0.022328240261782151]], [[0.81751735204806253, -0.56168798369778017, -0.30557908000658229], [-0.96888559639504335, 0.56636294026406153, 0.89154457610789195]]], [[[-0.67432061142418531, 0.21096730180983525, 0.14536776129273199], [0.7178434262657305, 0.90766328186340961, 0.80131229696314121]], [[0.84825820730877344, 0.59568448081134084, 0.78771740492838083], [0.48923187774563348, 0.18345663571468274, -0.40586045537786308]]], [[[0.66112095314806574, 0.31206871162075589, 0.61156404796763053], [-0.21906806382159272, -0.14021900033416901, -0.86059318365223492]], [[0.2290358628724416, 0.98802277142405814, -0.98747968880522641], [-0.19792916892341794, -0.096307155718921011, 0.40922519564745219]]], [[[0.91060316936619223, 0.81609877259200458, -0.2823810520232124], [-0.59008919040996877, 0.36333246503216921, -0.41811677258798241]], [[-0.93431785892473651, 0.043881710550256026, 0.78236006465860264], [0.55153100651962306, 0.47451349587559966, 0.93007291099886813]]]]))
      arg1=Data(numarray.array([0.19809646876729814, -0.83883056841324577, 0.27406174056766797]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([0.41886362016230638, 0.24300865399820792, 0.54798764340119566]))
      arg1.expand()
      res=generalTensorProduct(arg0,arg1,offset=1)
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[[0.65999187864130671, -0.58405172272678618], [-0.52340663659430453, -0.84172293442500612]], [[0.38759804717678986, -0.89223157688876398], [0.31379509451534776, 0.41790970870473304]], [[1.0855418767081837, -0.5469076355973399], [0.073164532229073875, -0.3594334830498121]], [[-0.56267394550632899, 0.28262401237018758], [0.43922402841278657, -0.3113705472135449]], [[-0.24485285182776131, -0.31114096571785749], [0.12775109378865795, 0.60106867905897654]], [[-0.99019103083664284, -0.87598227165675668], [0.53211215610444063, 0.77482561105411918]]])+(1.-msk_ref)*numarray.array([[[-0.59305951831051396, 0.96531409081945529], [-0.087242853259303449, 0.58986021916818498]], [[-0.32434061295966748, -0.61165774022947816], [-0.53444869824724861, -0.062590661869919531]], [[-0.2931495596996494, 0.28033309859416222], [0.038479676813476832, 0.22035557860737548]], [[-0.15152175546344065, 0.96035776588583155], [0.93172039182813504, 0.027096471031152231]], [[0.68788445480134586, -0.5974285034471607], [-0.20509379310183423, 0.11794155007061023]], [[0.42499627706981513, -0.38799678610944777], [0.048035522767921224, 0.85599562264884332]]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank3_expandedData_rank1_offset0(self):
      arg0=Data(numarray.array([[[0.21579177895416635, -0.77818582084073862], [0.021959913725539959, -0.98688909482543696]], [[0.40713496636656021, -0.22175344638773153], [-0.99056658222615956, 0.6321932166751083]], [[0.3102343487758481, 0.42403358420680015], [-0.48337380992957857, 0.11052462610706915]], [[0.086870721441705268, -0.45718541730530116], [0.22897091462794372, 0.82645167295937871]], [[0.2299335920931096, -0.4940113315460386], [0.28171064164358306, 0.6451405490714297]], [[-0.74860224840074108, -0.37357145013075388], [0.40152219855407068, -0.70026506765292984]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[-0.14346864236157075, -0.61335013083009726], [-0.5666175358621075, 0.78771885319194657]], [[-0.074301225777664959, -0.79580731463077514], [0.7326813505380787, -0.18322193296118772]], [[-0.34206338639621148, -0.17922345983533328], [-0.20551065021729475, -0.51989916514349943]], [[0.36333356977465359, 0.47042208083662707], [0.82822874153163784, -0.3682901090398556]], [[-0.30342175875243038, -0.12175179903906641], [0.16363195389340768, 0.11054678281608599]], [[-0.69103109456354539, -0.89014995554482179], [0.51609154265470858, -0.12977581025886642]]]))
      arg1=Data(numarray.array([0.088474995651587784, -0.74337511360580066]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([-0.74099028677917866, -0.34338972852712568]))
      arg1.expand()
      res=generalTensorProduct(arg0,arg1,offset=0)
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[[[0.019092176704618258, -0.16041423819525125], [-0.068849987115011627, 0.5784839729739073]], [[0.0019429032713763907, -0.016324453360496847], [-0.087315008373279934, 0.73362879298218497]]], [[[0.036021264378890756, -0.30265400187563551], [-0.019619635204879152, 0.16484599340095776]], [[-0.087640374055067638, 0.73636254559648107], [0.055933292096293503, -0.46995670426667518]]], [[[0.02744798265891633, -0.23062049426566766], [0.037516369518823825, -0.31521601383240488]], [[-0.042766495731610885, 0.35932806087046915], [0.0097786658142163078, -0.082161256488581164]]], [[[0.0076858867018051672, -0.064577532420745515], [-0.04044947780805587, 0.33986026152824361]], [[0.020258200676047399, -0.17021127967397176], [0.073120308171328488, -0.61436360627588216]]], [[[0.020343373560591831, -0.17092691014400518], [-0.043707650410370856, 0.36723572971058932]], [[0.024924347794422017, -0.20941668023576154], [0.057078807273757699, -0.47958142895768269]]], [[[-0.066232580672024408, 0.5564922814504587], [-0.033051732425875793, 0.27770371918083286]], [[0.035524674771087367, -0.29848160996538314], [-0.061955948815551797, 0.52055962422067037]]]])+(1.-msk_ref)*numarray.array([[[[0.10630887044731974, 0.049265658152695062], [0.45448648933984054, 0.21061813491782411]], [[0.4198580903925746, 0.194570641818398], [-0.58369201892806621, -0.2704945631532813]]], [[[0.055056486597036457, 0.025514277749025042], [0.58968549028922612, 0.27327205773096275]], [[-0.54290976405296687, -0.25159525005815864], [0.13576567264914594, 0.062916529819757469]]], [[[0.25346564678238576, 0.11746105339366436], [0.13280284290094022, 0.061543495218547309]], [[0.15228139564068871, 0.070570246387549926], [0.38524023147593722, 0.17852803318010554]]], [[[-0.26922664606382329, -0.12476501588970977], [-0.34857819258639028, -0.16153811063165494]], [[-0.61370945270628652, -0.28440524271291207], [0.27289939351537756, 0.12646704056242153]]], [[[0.22483257603300616, 0.10419191536722008], [0.090216900485838747, 0.041808317219714175]], [[-0.12124968844171349, -0.056189532225820411], [-0.081914092301407129, -0.037960629740762891]]], [[[0.5120473289339712, 0.23729297996597837], [0.65959247083563066, 0.30566835158296934]], [[-0.38241882019602125, -0.17722053472734589], [0.096162614860717699, 0.044563680254179915]]]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank4_expandedData_rank2_offset1(self):
      arg0=Data(numarray.array([[[[-0.86715354312157689, -0.82301470863766824, 0.6685142867429803], [0.8564036057929596, 0.72889317014117871, -0.35339578481670886]], [[-0.43687014271778724, 0.30540428920716489, 0.93190433781503335], [-0.056172563836953016, 0.049619116158298615, -0.1621152926139906]]], [[[0.75191565506549773, 0.98637634231365845, 0.0062706489146557853], [-0.070460587429358235, 0.75201859890001344, 0.24101989724729322]], [[0.24595634136993261, 0.99717213934806903, 0.27170557747287627], [0.66349105599490921, 0.19446657810715684, 0.097093780401438456]]], [[[-0.56729654788959682, -0.65106705533764764, 0.53017091590970544], [-0.7706594970676659, -0.02991851716653704, -0.15292496940538602]], [[0.61234619807901236, 0.37049240893290269, -0.40730833573205616], [-0.54409242969835181, -0.45421686769205905, -0.59504564725814157]]], [[[-0.94541240526719217, 0.53903332969912832, -0.17552512098479034], [0.44454625815096693, 0.81341687086629233, 0.47452893159622356]], [[0.97415109733595506, -0.2882574265658997, -0.099200019597468048], [0.87505534525039352, -0.66861405029441179, -0.30968009800392582]]], [[[-0.7694061499494278, -0.79406513480987306, -0.45125746229093067], [0.98394855032044304, 0.40761705508502044, 0.35970968567787054]], [[-0.57284046851221659, 0.59692264969804754, 0.34609210676735525], [0.99609002093352284, -0.90969914825483067, -0.40069057761825055]]], [[[-0.38653001719558566, 0.23267093468529021, 0.16733834332266362], [0.45661458933748866, 0.015281786060183711, -0.74211528957597195]], [[-0.075067176081041964, -0.75810940489701717, -0.006120713407868017], [-0.94499190513775488, -0.91174424544622168, -0.19967056687485329]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[-0.71493740152054053, 0.68734706575567905, 0.13166049693280213], [0.66280436650202179, 0.47241562808108317, 0.87212606862508935]], [[0.87505095929763033, 0.98101710482441828, 0.88135852901231626], [0.92743182622236775, 0.36325098109932297, -0.99412818668088687]]], [[[0.55168571935190869, -0.3395960791797521, -0.42481919251789235], [0.49570419076282035, 0.62642841304510299, 0.86875313589990655]], [[-0.69040585977491142, 0.20176670517415451, 0.47919935481086107], [0.96117101980605457, 0.15224222220639905, 0.042262662807470042]]], [[[-0.060067123373838349, 0.17976126144153382, -0.68643279469928675], [-0.48511892890859287, 0.94810363460453173, -0.45157901298417302]], [[-0.037963650905041613, 0.93904064590023673, -0.027202248272844232], [0.45985954127500439, -0.21204109133326221, 0.55786203052039784]]], [[[0.39225118395307446, 0.22271947648683232, -0.23018048490715026], [0.74134461296585386, 0.67889887156324669, -0.35987808703762814]], [[0.18104532340537527, 0.93878058371955087, 0.23764745810204047], [-0.48754863961533657, 0.89274755010510898, 0.3435542756767731]]], [[[0.74270710445004751, -0.68377031288922963, 0.91189578525645754], [0.32039705509981098, 0.64127220365052362, 0.2359577136808253]], [[-0.79345020920683629, -0.42567212518849407, -0.10853638131969912], [-0.25287096771871265, 0.3146392439672645, 0.016125153464616293]]], [[[-0.47283754777531795, 0.55595514875142293, -0.28078584806940121], [0.30831166821010947, 0.34077409790506596, -0.35087118516834725]], [[0.27259807732562269, -0.9429568914358466, 0.3692192935425942], [0.31624166184456781, -0.38589180425713332, -0.57164045465983526]]]]))
      arg1=Data(numarray.array([[-0.61649048704335208, 0.025591545894195322], [0.91725171602308797, -0.30931390247571167], [-0.48169548407492413, 0.38496057636673986]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[-0.57537609449001037, -0.18691541636789233], [-0.30634566450713852, 0.93017799538900126], [0.68782139114608598, 0.49778224340331745]]))
      arg1.expand()
      res=generalTensorProduct(arg0,arg1,offset=1)
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[[[-0.54234005663341611, 0.48972973676149573], [0.31084298870584259, -0.33958354377127259]], [[0.10056478429953669, 0.25310045616928534], [0.15823327503370949, -0.079193421684291498]]], [[[0.43818600096052118, -0.28344327913520412], [0.61713043610777796, -0.14162984435684006]], [[0.63214876163822542, -0.19754886715765207], [-0.27743075733241734, -0.0057941767005772193]]], [[[-0.50284038462965763, 0.3909609973804053], [0.52132470464482816, -0.069338238950099967]], [[0.15852777792256184, -0.25572521869577824], [0.20542740674685173, -0.10249768980219878]]], [[[1.1618166589602408, -0.25849531947319787], [0.24347103803064843, -0.05754958968969609]], [[-0.81717530216418521, 0.075903965324224942], [-1.0035791762566291, 0.10999101115769289]]], [[[-0.036657353681335991, 0.052208760096927959], [-0.40597800892467817, 0.037573190382299657]], [[0.73396801929600952, -0.066064530497087687], [-1.2554922851957311, 0.15262400140635926]]], [[[0.37110376837545384, -0.017441590380975494], [0.089992277567532919, -0.27872652526982106]], [[-0.64615063262397343, 0.23021646008914165], [-0.15754004349302575, 0.18096607040115081]]]])+(1.-msk_ref)*numarray.array([[[[0.29135100244507461, 0.83852619537412632], [0.073782698459560425, 0.74967113875442792]], [[-0.19779649078699368, 1.1876846354220576], [-1.3286850976056896, -0.33032259552561621]]], [[[-0.50559271602948685, -0.63047081680261086], [0.12042702073330147, 0.92248505524118807]], [[0.66503623870062734, 0.55526337797297165], [-0.57060440871507878, -0.017007713197784838]]], [[[-0.49265105601321846, -0.16325661529929317], [-0.3219273082091057, 0.74779333068524756]], [[-0.28453794172652452, 0.8670301410371658], [0.1840751200546476, -0.0054969818426617856]]], [[[-0.45224416164855996, 0.019271204638477132], [-0.88206154049090413, 0.3137871329006644]], [[-0.22830150761855419, 0.95768956430172247], [0.24333847049190435, 1.092559701595698]]], [[[0.40935558535920169, -0.32092597688249691], [-0.21850300273111148, 0.65406570399766262]], [[0.51228144780946872, -0.30167025126392005], [0.060198767031203568, 0.3479627985095155]]], [[[-0.091385540546452648, 0.46574766354069969], [-0.52312653770554929, 0.08469491773657678]], [[0.38598126653383968, -0.74427972589102498], [-0.45692814386365682, -0.70261097475816192]]]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank4_float_rank0_offset0(self):
      arg0=Data(numarray.array([[[[0.82322558842097271, 0.2380081555890734, 0.5912765860884337, 0.32110218334364049], [-0.00096180785271249292, -0.27970596489320032, 0.8195832739877289, 0.15928004819589647], [0.50172317514443621, 0.22177167007920295, 0.65926376425007716, 0.40337466591286875]], [[0.87684022457895705, -0.44557492036610702, -0.70164809112542215, -0.072500750240855005], [-0.45390200719555929, -0.98179298679123983, -0.62218298870760269, 0.24915807324428552], [0.013473094501085914, 0.24194129269473819, 0.089702070119953126, -0.72015526036436239]]], [[[-0.23759356475563354, -0.80309111684415257, 0.44181065612548864, -0.052913905416216434], [0.047137701626965844, 0.26965768826321224, -0.78954021121603679, 0.00753086899113109], [0.84613363221037541, 0.350295507320042, 0.56418910587207649, -0.076658763256936879]], [[-0.73966742485925518, -0.36940417123351454, 0.57185171509468535, -0.77361003107117665], [-0.20773063478551013, 0.43751173838201129, -0.79233640900954194, 0.45153392690882921], [-0.27754614635467578, -0.71662403283282794, 0.70771762685068706, 0.40665954057086684]]], [[[0.12040581725203747, -0.28224451687117846, -0.95503625685412996, 0.95292096826608774], [-0.61763815399401478, 0.89468198569267554, -0.69993212158160012, -0.86771372909225475], [0.76639773079216122, 0.27327898573756526, 0.62010710828537086, -0.56421922406245395]], [[-0.41758544276448806, -0.41568849005524977, 0.88828494786837497, 0.70143502513992928], [0.3069882630621672, -0.29057827820555127, 0.4033669623188112, -0.25736329308424821], [-0.34846990515958054, 0.022898432990515527, -0.45858485567066376, -0.51544875308662474]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[0.75093182703030892, -0.73614674867771446, 0.45562881783609077, -0.22981467704051783], [0.86532648384669519, 0.047342895781120387, -0.3318329804302238, -0.62677624739740678], [-0.46519420244496468, -0.86545078158533051, -0.44166676409761307, 0.18012002249391568]], [[-0.066882391279079467, 0.63828692126343944, -0.3206619173954488, 0.15233996988704535], [-0.29001682356026093, 0.72119709714504698, -0.82876625142604543, -0.79737569880052006], [-0.11685276519967891, 0.29257581154352819, -0.51965563540150983, 0.47547416467042947]]], [[[0.37873695222301973, -0.21467343404680261, -0.59906055148643111, -0.57978104458997981], [-0.90503008946222141, -0.84312097870336755, -0.85398745836429768, -0.88623566519940233], [0.16522729379543977, -0.33682135250267708, -0.68125110105452324, -0.62365445357715066]], [[-0.48482948647536861, 0.78218754845501093, 0.75593175489198061, 0.79778726946568734], [-0.61895289937572096, 0.89749955935376691, 0.01128500067420557, 0.7079831348606489], [-0.10494102487287749, -0.22377390750716675, 0.71178964777337606, -0.35480294272149737]]], [[[0.17322542166984256, 0.094328451609638986, -0.55699782306357881, 0.040507233818124488], [-0.58357745364126234, 0.1785642222489745, 0.37511954969892169, 0.054247035332519067], [-0.81996650582179353, 0.451737597501912, -0.25314651469129035, 0.3838174011789941]], [[0.86459503968711737, -0.48221195064064593, 0.14679649134465511, 0.32215723569891219], [0.89933754116181142, -0.39386667488644611, 0.67251635063888493, 0.80864683542857563], [0.79024838754231697, 0.81735016082097522, -0.53825736991984896, 0.39095445122974404]]]]))
      arg1=-0.251866233437
      res=generalTensorProduct(arg0,arg1,offset=0)
      ref=Data(numarray.array([[[[-0.20734272822494806, -0.059946217675622929, -0.14892260665786894, -0.080874797467315615], [0.00024224692115329139, 0.070448487847647914, -0.20642535220765196, -0.040117265800841601], [-0.12636712635192499, -0.055856795225989547, -0.16604628114348532, -0.10159645776757832]], [[-0.22084644469118081, 0.11222527690681891, 0.17672146191036167, 0.018260490884556019], [0.11432258890205996, 0.24728050159844853, 0.15670688587466144, -0.062754505438579328], [-0.0033934175647358069, -0.06093684210401993, -0.022592922532657805, 0.18138279291816364]]], [[[0.059841796243986722, 0.20227153470664028, -0.11127718585087094, 0.013327226053649796], [-0.011872395361683918, -0.06791766626031491, 0.19885851914641992, -0.001896771607307344], [-0.21311249092960591, -0.088227610018772107, -0.14210018504246263, 0.019307753961500598]], [[0.18629724829570493, 0.093040437224681236, -0.14403013756566446, 0.19484624467535339], [0.052320332553004334, -0.11019443363096373, 0.19956278695261628, -0.11372614943976368], [0.069904502487441289, 0.1804933959403853, -0.17825017301219839, -0.10242380677500255]]], [[[-0.030326159675232889, 0.071087863372726545, 0.24054138481008464, -0.24000861504078116], [0.15556219547375413, -0.22534018186078447, 0.17628926712466578, 0.21854778864846089], [-0.19302970976965764, -0.068829748815336877, -0.15618404169164732, 0.14210777079763096]], [[0.10517567260741628, 0.10469789427353141, -0.22372898403882074, -0.17666779778312192], [-0.07731997752698401, 0.073186856450381976, -0.10159451749235911, 0.064821123254197255], [0.087767802478861345, -0.0057673420689418027, 0.11550204030924299, 0.12982413596997663]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[-0.18913437084245327, 0.18541050884670718, -0.11475751419395039, 0.057882557094847402], [-0.21794652218017024, -0.011924076840414214, 0.083577522911295304, 0.1578637726400664], [0.11716671158676835, 0.21797782858342513, 0.11124094430778825, -0.045366151632217702]], [[0.016845415974753874, -0.16076292271103135, 0.0807639093412338, -0.038369294417430075], [0.073045444983626723, -0.18164519642397131, 0.20873823414678214, 0.2008320138914699], [0.02943126583759801, -0.073689967648384036, 0.13088370757314152, -0.11975588695237581]]], [[[-0.095391049620004872, 0.054068989252458635, 0.15088312470387025, 0.14602726791932905], [0.22794651978044023, 0.21235370523814359, 0.21509060454106713, 0.22321283893173791], [-0.041615176149326229, 0.084833925396168852, 0.17158414884774256, 0.15707749818899008]], [[0.1221121766179814, -0.19700663167106428, -0.19039368384043165, -0.20093567464469894], [0.15589333544097381, -0.22604983352623623, -0.0028423106141516412, -0.17831704551461497], [0.026431100667801133, 0.056361091225418346, -0.17927577758447472, 0.089362880795799446]]], [[[-0.043629634491603425, -0.023758151812909887, 0.14028894372790257, -0.010202404408742548], [0.14698345516766353, -0.04497429808454325, -0.094479948071433048, -0.013662996464351771], [0.20652187536623115, -0.11377744718490543, 0.063759059163122384, -0.096670643162717548]], [[-0.21776229609472753, 0.12145290772640216, -0.036973079356816721, -0.081140529530117245], [-0.22651275908135501, 0.099201715880195843, -0.16938416016053923, -0.20367083262053753], [-0.19903688485032969, -0.20586290640550206, 0.13556885638167965, -0.098468225076854751]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank4_array_rank0_offset0(self):
      arg0=Data(numarray.array([[[[0.36137531403040701, 0.57152481344206763, -0.27063575886074043, -0.18991747270831794], [-0.47258283568395654, -0.90452969470567335, -0.28957635134158144, 0.21464583379461355], [0.90824432940998512, -0.59116498189203526, -0.30719847603768136, -0.14687080139057906]], [[-0.77468335625487006, -0.90738433560285925, -0.5344676457381301, 0.48044372250933187], [-0.25198245308196254, -0.71692467102313473, 0.45876132962566007, 0.32547183412154168], [-0.14001127214280773, -0.91290598019055036, 0.056177061047643528, 0.14820825962272366]]], [[[0.47984156924373877, 0.22871163203974865, 0.097076342135065552, 0.14047118347199627], [-0.9162002850769293, -0.69023396721052088, 0.32357196637998387, 0.8637624261004031], [-0.41437608938756365, 0.14026017010551439, -0.69975757421794116, -0.32485470613147749]], [[-0.52750480556421619, 0.36892920009151831, -0.27775434056007375, -0.73770079287097978], [0.39081217010028868, 0.71666482010727006, -0.87045304854850913, 0.65811597495632301], [0.51296386363047852, 0.33948579443544302, -0.27111240833728156, -0.98010104667906983]]], [[[0.68667840898676102, -0.22739553087866748, -0.10601453214170875, -0.09908310213073368], [-0.44049070336108076, 0.93582845341206733, 0.99677379448947012, 0.071161631443158679], [0.15984581387379704, -0.79869703373840895, 0.25609917730318599, -0.31665539454403602]], [[0.091001755279909835, -0.37192458325413669, 0.6595886806449951, 0.32561604717779424], [-0.70062094457461943, 0.74644632427175139, 0.818908590256475, 0.44076082702784314], [0.9830408244555251, -0.16040883817497487, -0.63526946415059959, 0.87560431179804521]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[0.62114332243442805, -0.14631187116397237, 0.22301230900932101, -0.54956148865395416], [-0.75109049384997562, -0.36505361953130677, 0.028789761768677868, -0.25840520927962629], [0.62291101024586903, 0.32560142760399668, 0.98173554671689489, 0.17131695635716948]], [[-0.76640948986468871, 0.28379352226791799, 0.28179443320981479, 0.14131099041991213], [0.19658830396878435, -0.28787326499398058, 0.43102940811426738, 0.038853485458981929], [0.73902417414449939, 0.44116530681755961, -0.38134806635028284, -0.62640593165968173]]], [[[0.055375996460633514, 0.34626194147118405, -0.7091071025102893, 0.50677494570177939], [0.41687640816155458, 0.041493724860912184, 0.10523082821401442, 0.56187366048396248], [-0.099945102243473194, -0.19476327017879802, 0.33700255345321306, 0.11145818462233414]], [[0.98205044328975322, -0.50550220510633626, 0.63417515513915457, -0.52644865922615591], [0.77426673440218585, 0.072147939727800869, -0.7110252527297567, 0.63231139514595291], [0.99188090111044303, 0.51385773764302556, -0.8005712732055339, 0.41556764463294971]]], [[[-0.76066290069935172, 0.5741747728811013, 0.93700700382195601, -0.53065569573344695], [0.057647190348906197, 0.93056804722486519, 0.9250282003667003, -0.010682461698985568], [-0.78206692900620522, -0.47284518093469452, -0.40262546560597579, -0.24238863820725154]], [[0.088280196747955175, -0.17389067263911806, 0.12242243178530865, 0.59041479615746284], [-0.58790195282636359, 0.87401726091201826, 0.21758702851935685, 0.90036584201685099], [-0.71003466564850681, 0.27011641079401194, 0.87948209285792345, 0.34762775545940716]]]]))
      arg1=numarray.array(0.791059436374)
      res=generalTensorProduct(arg0,arg1,offset=0)
      ref=Data(numarray.array([[[[0.28586935223653576, 0.45211009679549807, -0.21408897086715048, -0.15023600891830308], [-0.37384111163639272, -0.71553675047782861, -0.22907210527964281, 0.16979761230169213], [0.71847524731335843, -0.46764663737982881, -0.24301225330946, -0.11618353336789612]], [[-0.61282057916764932, -0.71779494109700792, -0.42279567459798756, 0.38005954033787753], [-0.19933309731127005, -0.56713002618250319, 0.3629074788440706, 0.25746756565594714], [-0.11075723802736004, -0.72216289015240698, 0.044439394249522292, 0.1172415423231908]]], [[[0.37958320131498641, 0.1809244947336455, 0.076793156494658801, 0.11112105522421015], [-0.72476888111907145, -0.54601609306805932, 0.25596465735112439, 0.68328741795241743], [-0.32779611571797723, 0.11095413110945351, -0.55354983225960097, -0.25697938073595605]], [[-0.4172876541744458, 0.2918449250864753, -0.21972019209401061, -0.58356517342150649], [0.30915565500781234, 0.5669244686634578, -0.68858009797521047, 0.52060885221797437], [0.4057849048439896, 0.26855344120323593, -0.21446602893341127, -0.77531818157595922]]], [[[0.54320343518357528, -0.17988338049094887, -0.08386379604352176, -0.078380622925770832], [-0.34845432752900418, 0.74029592889932871, 0.78850731606166791, 0.056293080060911861], [0.12644753942982206, -0.6318168253430555, 0.20258967085342014, -0.2504932379329361]], [[0.071987797240811641, -0.29421445120282175, 0.52177384995000076, 0.25758164675494416], [-0.55423280952733733, 0.59048340856219594, 0.64780536785048737, 0.34866801140458464], [0.77764372052686814, -0.12689292511617692, -0.50253590425687589, 0.69265505337800493]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[0.49136128655273553, -0.11574138633786399, 0.17641599146947945, -0.43473580146770391], [-0.59415722273117344, -0.28877911051289057, 0.022774412718085172, -0.20441387920896448], [0.49275963267654005, 0.25757008180313579, 0.77661116825463516, 0.13552189493728975]], [[-0.60627545908439484, 0.22449754377198078, 0.22291614550841532, 0.11178539243509182], [0.15551303293535676, -0.22772486275341267, 0.34096988064368766, 0.030735416308365363], [0.58461204666584543, 0.34898797895906258, -0.30166898642954332, -0.49552432324032375]]], [[[0.043805704548822613, 0.27391377625811969, -0.56094586484091291, 0.40088910291554508], [0.32977401647808696, 0.03282400260154994, 0.083243839656195431, 0.44447546117609571], [-0.079062516249109274, -0.15406932273408583, 0.26658904999145117, 0.088170048706663687]], [[0.77686027016007675, -0.39988228945746296, 0.50167024078706268, -0.4164521796475309], [0.61249100651968369, 0.057073308536652372, -0.56246323567240641, 0.5001958958573034], [0.78463674658301441, 0.4064920123165448, -0.63329946015955019, 0.32873870673880135]]], [[[-0.6017295654981879, 0.45420637221575522, 0.74122823232231416, -0.41978019557579527], [0.045602353905976709, 0.73613463494577991, 0.73175228681255922, -0.0084504621306912362], [-0.61866142406675029, -0.37404864232257706, -0.31850067389226605, -0.19174381952380029]], [[0.069834882682463489, -0.13755785748867574, 0.09684341988767653, 0.46705319587546179], [-0.46506538744626513, 0.69139960179860693, 0.17212427214291509, 0.71224289551666253], [-0.56167962241423297, 0.21367813567820207, 0.69572260867761582, 0.27499421630183579]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank4_Symbol_rank0_offset0(self):
      arg0=Data(numarray.array([[[[0.21217760650102857, -0.27510119195945748, 0.49116811519465342, -0.5713648142409975], [0.033981165698521609, 0.53092309621312883, -0.98701145517437339, -0.5757922073357693], [-0.80621602540153292, 0.13335440707849555, -0.48072623792537028, -0.11279017470120856]], [[-0.78715240996444336, 0.5288910262035853, 0.10552174442212814, 0.8305728854646004], [0.80389891098095401, -0.90137536979986188, -0.831050430500617, 0.27014137569845187], [0.84430108927493186, -0.33565462259218237, -0.52832444729456207, 0.0039322289492587092]]], [[[0.51666808734190894, 0.56573758141810315, -0.79474479920846997, -0.48362198328024997], [0.10968213280544425, 0.67738124324442572, -0.5467968891520818, -0.41614286993206817], [-0.21362774824149344, 0.39638427810480237, 0.025486262830347606, -0.84713090366268617]], [[0.58391644174511148, 0.3470035648369787, -0.10185823202315825, 0.50335713047136821], [0.35651882637612209, -0.92410997153138585, 0.075378924101205502, 0.30381375010069345], [0.85841195435228257, -0.4848676767557365, -0.59113726743229233, -0.16800972921764767]]], [[[0.967855442025219, -0.51618357576972396, 0.74438932066498253, 0.86590372975056007], [-0.2917879241239385, 0.78989862617953155, 0.85973658264786512, -0.37756758498845411], [0.85138182181750355, 0.72910018503919005, -0.29114663717446887, 0.18473330122754072]], [[0.10329881117326378, -0.77540504440304825, 0.97121928573488669, 0.22128298571949556], [0.72125363370966133, -0.98005074069407727, -0.97762960885057026, 0.30607779867350193], [0.43372993984699915, 0.45214406172864541, 0.48269336451857714, -0.26632358085272623]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[-0.66296013784738816, 0.5083622721324943, -0.25078213441005204, 0.74038902254048744], [-0.47002941362508754, -0.72583783419786774, 0.5724823388925866, -0.18169384642066033], [0.48124430470798174, 0.29568809382299666, 0.29325361099327396, 0.1635451539016739]], [[0.29032349820655057, -0.93065324698770979, -0.63781861134744133, -0.11925145342111998], [-0.28641006317077622, -0.36173168808209044, 0.84662061438290381, 0.5324911554857823], [0.69882246387292835, 0.14355759116426836, 0.35049096421976822, 0.98710049108847975]]], [[[0.95532421793755451, 0.49893363645745792, 0.72184181598431985, 0.71166666815194191], [-0.67102478272814459, -0.16692710998264193, 0.15982383826920321, 0.48558978443281209], [0.63706523851127028, -0.23142878507514975, -0.1121045209019107, 0.99870636859415507]], [[0.70953490623845905, -0.96224470689743713, -0.52019193580256218, 0.32665838070197917], [0.55256928815835171, 0.44273377906491351, -0.48309240885961202, 0.96480177481935248], [0.19816194175674395, 0.15623444862234792, 0.68985701721294901, -0.24605837176635914]]], [[[-0.17821366196813093, -0.63868591861955659, -0.086027233831774685, -0.81508755139035838], [-0.20929966703927327, -0.29266270435894293, -0.96483015755529467, -0.788253171995557], [0.22176318768932601, -0.58404002412367229, 0.12336585984085335, 0.41804855741799574]], [[-0.95952039414608059, -0.53812876031788814, -0.063394154631246202, -0.14572914811480642], [0.57387986578411443, -0.83271774427165335, 0.77720441081292013, 0.44828392501568559], [0.095912021428184335, -0.4914391142265977, -0.83409664523486482, -0.18237220849960223]]]]))
      arg1=Symbol(shape=())
      res=generalTensorProduct(arg0,arg1,offset=0)
      s1=numarray.array(-0.742058260964)
      sub=res.substitute({arg1:s1})
      ref=Data(numarray.array([[[[-0.1574481456956045, 0.20414111209449029, -0.36447535740218823, 0.42398598043155172], [-0.02521600472376604, -0.39397586948140506, 0.73242000397799756, 0.42727136405206101], [0.59825926177056954, -0.09895673940852065, 0.35672687611454706, 0.083696880892576583]], [[0.58411294845164108, -0.3924679551439666, -0.078303282159745885, -0.61633347099150682], [-0.59653982787318072, 0.66887303938924425, 0.61668783723046516, -0.20046063946514872], [-0.62652059803715732, 0.24907528552519931, 0.39204752058403808, -0.0029179429757982388]]], [[[-0.38339782238840481, -0.4198102458289566, 0.5897469436106233, 0.35887568787678298], [-0.081390532728403242, -0.50265634737142273, 0.40575514866458318, 0.30880225437425529], [0.15852423535368482, -0.29414022808382184, -0.018912291874352852, 0.62862048518058444]], [[-0.43330001930951934, -0.25749686187115089, 0.075584742519947151, -0.37352031688128784], [-0.26455774030150292, 0.68574343841384244, -0.055935553331859192, -0.22544750305659647], [-0.63699168203715029, 0.3598000650108964, 0.43865829266167111, 0.12467300748823848]]], [[[-0.71820512617353738, 0.3830382865737324, -0.55238024477264558, -0.64255101586072716], [0.21652363954563297, -0.58615080088043992, -0.63797463340659366, 0.28017714551281581], [-0.63177491411404751, -0.54103481537853104, 0.21604776726713079, -0.1370828722510018]], [[-0.076653736178855097, 0.57539571879224671, -0.72070129418688722, -0.16420486756387562], [-0.53521221714437817, 0.72725474829568382, 0.72545812741032711, -0.22712755900327219], [-0.32185288489077685, -0.33551723615144585, -0.35818659865339769, 0.19762761326121317]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[0.49195504697932207, -0.37723442359822029, 0.18609495454110109, -0.54941179050304612], [0.34878920927644447, 0.53861396098656578, -0.42481524883109406, 0.13482741970273021], [-0.35711131185031481, -0.21941779268997957, -0.21761126459500946, -0.12136003249332529]], [[-0.21543695019606585, 0.69059893001996897, 0.47329856954679744, 0.088491526143076149], [0.2125329533990245, 0.26842598739367834, -0.62824182080504076, -0.39513946081835838], [-0.51856698226394948, -0.10652809644750225, -0.26008471539242978, -0.73248607381358266]]], [[[-0.70890622781929791, -0.37023782660594201, -0.5356486826602409, -0.52809813015469753], [0.4979394833348264, 0.12386964094142421, -0.11859859948659686, -0.36033591097797568], [-0.472739523010131, 0.17173364178981951, 0.083188085826646427, -0.74109831109240243]], [[-0.52651623861638963, 0.71404163382188723, 0.38601272324901692, -0.24239954991294585], [-0.41003860503276474, -0.32853425816281961, 0.35848271280315347, -0.71593912719719], [-0.14704770588920971, -0.11593506324733013, -0.5119140985066819, 0.1825896474485168]]], [[[0.13224492008005315, 0.47394216207286449, 0.063837219532728764, 0.60484245091793198], [0.15531254694345542, 0.21717277744554581, 0.71596018884086465, 0.5849297780101842], [-0.16456120540251937, 0.43339172463443992, -0.09154465541580159, -0.31021638551600306]], [[0.71202003503929423, 0.39932289205607169, 0.047042156140929728, 0.10813951822180226], [-0.42585229520587126, 0.61792508118788125, -0.57673095350119286, -0.33265278981514457], [-0.071172307826516568, 0.3646764544725557, 0.61894830603868323, 0.1353308038873336]]]]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank4_constData_rank0_offset0(self):
      arg0=Data(numarray.array([[[[-0.2601218537624268, 0.28211479211339996, -0.59543987491062955, 0.36820516508142487], [0.83952027357164272, -0.62405857166950196, -0.82464820695601415, -0.53539980292337885], [0.73632149727008156, -0.62585950138185265, 0.11936002237144927, -0.52833236686534879]], [[-0.004417540412483989, -0.93703260254067455, -0.016308384382328844, -0.28512840792323479], [-0.4586197845994564, 0.96909101904571182, -0.54116350043858419, 0.66790573246069784], [-0.25029376658691205, -0.38912800155128613, -0.53185867427748201, 0.93795857723133502]]], [[[0.70011776438828077, -0.29070999132688446, 0.73460745383950954, -0.83326080471319242], [-0.74350553748365567, 0.4168891308188738, -0.77320896396464889, 0.23943316988543617], [0.4510605056880288, 0.40778474266064713, -0.16843302480507183, 0.10055335124997367]], [[0.99431856453514511, 0.41391097628017826, -0.97361910114427119, 0.68239369914425163], [0.28304419946517667, -0.37169939345252256, -0.66795883459941341, -0.6562601725840076], [0.026456043398236817, 0.71906983900961485, -0.77028945707081431, -0.074394220326396976]]], [[[-0.52612068423207248, 0.43876849026057818, 0.097302826924375641, -0.42517714889383651], [-0.13235756809131471, 0.95113047522909322, -0.55025803337039902, 0.86564371085456493], [-0.48795278024035782, 0.3087479421571635, 0.94593565583563577, 0.81698749836411944]], [[0.82156274318683042, -0.66482072535630921, 0.16209416278270439, -0.1669698208082051], [-0.24536345778482027, -0.84358982843588715, 0.83923259313023157, -0.67243339443562311], [0.41877444362397709, 0.49160916167707192, 0.084124353934303953, -0.069273717058795592]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[0.024252053797688022, -0.57292429392423116, -0.78414890710081253, -0.43482936250647319], [0.81984685100276633, -0.35027605856072053, -0.86980666522911476, -0.26716775838969875], [0.4655861456849697, 0.82388894546086777, 0.87056354638148914, 0.25814960402939358]], [[0.13060442660841898, 0.68074111391963688, 0.27064341731444297, 0.053677086430601095], [0.57341332010412271, 0.44949156707045246, 0.64904771520229398, 0.055207013838826313], [0.81674856563245601, -0.38867142744172734, 0.25318634697980658, 0.44499675443605424]]], [[[0.6265111666733989, 0.95423592181457662, -0.80930100107260983, -0.80398663877372867], [-0.89503833570530866, -0.042894950159288125, -0.42295586480643577, 0.80742558304931555], [0.53781366946882736, -0.57580977171877401, -0.057037197665431583, 0.18869500911626158]], [[0.64097425455291579, -0.22550746996798043, -0.095282338404156786, 0.18921225797736296], [0.31713717438309863, -0.51828733663859539, -0.057164334162668196, -0.62849341564562722], [-0.80897607562341456, -0.24164879941783202, -0.78719851349222969, -0.63308919933759222]]], [[[0.84519236974372491, 0.028892679530953869, -0.99212811531977141, -0.93282042354222172], [0.79396238703088984, 0.066603035624892337, 0.54273379545150746, -0.4937700936736773], [-0.074173335317889943, 0.50732028022838338, -0.4537128246064106, -0.58433396349295097]], [[-0.82402735307823494, -0.45285353497456926, 0.16929239212234348, -0.238088925838704], [0.86772105837058411, 0.14780535812092332, 0.88755662063711838, 0.2862984152437833], [-0.64798979827725156, -0.17124443112029941, 0.65102059932803069, -0.20995315004511439]]]]))
      arg1=Data(-0.255987779369,self.functionspace)
      res=generalTensorProduct(arg0,arg1,offset=0)
      ref=Data(numarray.array([[[[0.066588015709871246, -0.072217939160126032, 0.15242533132585218, -0.09425602256121994], [-0.21490693056647245, 0.15975136795757749, 0.21109986325891672, 0.1370558066247087], [-0.18848930498748528, 0.16021238395544096, -0.030554707072246331, 0.13524662936238444]], [[0.0011308363604625522, 0.23986889512030926, 0.0041747471031209089, 0.072989387979155565], [0.11740106023409212, -0.24807545797150546, 0.13853124275257808, -0.17097570528013095], [0.064072145498370814, 0.099612013007230785, 0.13614932096618723, -0.24010593332512289]]], [[[-0.17922159180222136, 0.074418205120016123, -0.18805053081595191, 0.21330458303337121], [0.19032833148865239, -0.10671852284120349, 0.19793204567315847, -0.061291965466142739], [-0.11546597721192835, -0.10438791073406983, 0.043116795992176236, -0.025740429094545374]], [[-0.25453340132026425, -0.10595615167422648, 0.24923459165271408, -0.17468444769901925], [-0.072455856084236145, 0.095150502322543781, 0.17098929877870048, 0.16799458426779368], [-0.0067724238003923154, -0.18407309129896351, 0.19718468758655464, 0.019044011259208123]]], [[[0.13468046563642408, -0.11231937147869145, -0.024908334590652122, 0.10884015418357949], [0.033881919938315734, -0.24347777824363792, 0.1408593320421874, -0.22159421126600096], [0.12490994865043348, -0.079035700097418143, -0.24214796796288612, -0.2091388154780881]], [[-0.21031002224032128, 0.17018598116214234, -0.04149412477934683, 0.042742233650255153], [0.062810046696522182, 0.21594868687918881, -0.21483328788910783, 0.17213473141482347], [-0.10720113987959695, -0.12584593761494228, -0.021534806554455412, 0.017733224998485501]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[-0.0062082293967964785, 0.14666161774795156, 0.20073253742300309, 0.11131100291226914], [-0.20987077481048688, 0.089666390396922868, 0.22265987671195453, 0.068391681189049106], [-0.11918436353865207, -0.21090550159481417, -0.22285362903739675, -0.066083143880351886]], [[-0.033433137143190385, -0.17426140607715288, -0.069281407399036821, -0.013740678158342665], [-0.14678680247379508, -0.11506434809924944, -0.16614828331885859, -0.014132320878169301], [-0.20907765161869113, 0.099495135614807662, -0.064812610729792858, -0.11391373099429219]]], [[[-0.16037920230631544, -0.24427273461900342, 0.20717116610531228, 0.20581075430166182], [0.22911887600691411, 0.010980583037400288, 0.10827153260269912, -0.20669108201014144], [-0.13767372696137006, 0.14740026480099383, 0.014600825571778197, -0.048303616361597856]], [[-0.16408157605540499, 0.057727156468120613, 0.024391114221121675, -0.048436025748932104], [-0.081183241025542252, 0.132675224380948, 0.014633370961382492, 0.16088663381887175], [0.20708798916111246, 0.061859139550044101, 0.20151319939109008, 0.162063098280636]]], [[[-0.21635891786992853, -0.007396172873135696, 0.2539726730898012, 0.23879062877219254], [-0.20324466835818131, -0.017049563188819825, -0.13893321908588979, 0.12639910979811969], [0.018987467396384607, -0.12986779196428833, 0.11614493844202207, 0.14958235372417694]], [[0.21094093225343166, 0.11592497079733259, -0.043336783523386505, 0.060947855417690391], [-0.22212598684360346, -0.037836365404146685, -0.22720364838073995, -0.073288895554987715], [0.16587746951446058, 0.043836481651714027, -0.16665331754515739, 0.053745440651478321]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank4_taggedData_rank0_offset0(self):
      arg0=Data(numarray.array([[[[-0.68819088430749775, -0.98593303163587698, 0.31880044499782412, -0.45637435826871431], [-0.051155390926146627, 0.13245741522899146, 0.16463463196796013, -0.017292712291198997], [-0.6248219786389646, -0.16139717237895668, -0.15922423995387835, 0.86438437016956216]], [[0.46393382791629278, -0.35665847169656595, -0.96700031666682973, 0.67995824420790618], [-0.37796882452717151, -0.12136065109008798, 0.14231928780739467, 0.31162498105709613], [-0.83366364647810975, -0.45781171260542375, -0.00098732532630330105, -0.50247499309752142]]], [[[-0.089038035407488669, 0.76851790147152821, 0.96505532799334803, -0.2110877245955376], [0.28213119383562901, -0.32705140004087996, 0.45121277198740484, 0.99242426009746199], [-0.034230135116044336, -0.99678630611960983, -0.35339360678424581, 0.91011715562237816]], [[-0.63162107302257642, -0.21197390253487947, -0.11510003308911432, 0.58444928513671957], [-0.33982883900064853, -0.35109466223869545, -0.30059635900469894, 0.85196622684146917], [-0.5108492143929968, -0.77194019926444857, 0.45204692614291586, 0.23490633704768138]]], [[[-0.30631358754838711, -0.81911779734407086, -0.56238648425247773, 0.48605018531409616], [0.97445868843754879, 0.62608819789210224, -0.36006981715380304, -0.16444916606668469], [-0.5000109752782318, -0.83638436072192679, -0.48956234610861826, 0.7463864988256812]], [[0.83684488540340385, -0.61398377338434984, 0.097716760596600505, -0.48893037091249747], [-0.19621562526148995, 0.21506265843359884, 0.29799436311773309, 0.69211885574871612], [0.74096992925026317, -0.96810961438846777, -0.46018098907217042, 0.26966672175674211]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[-0.13752986292405267, -0.37545411561630382, 0.98392001481680369, 0.3717492424441533], [-0.038141620681795274, 0.42280870484365263, -0.74203310046498894, -0.96662438708588594], [0.457279431135587, -0.90182555274609433, 0.45983585405969252, 0.16315010476186731]], [[-0.94176640490999897, 0.02336594759228916, 0.1944766925046304, -0.7278260121257778], [0.83758972063223314, -0.36389615715227119, 0.15229266429544186, -0.93551520016332668], [-0.25861814564491459, 0.70792812213492651, -0.031314218454737031, -0.025800078414858207]]], [[[-0.43082735483220058, -0.61792439787934939, 0.6310927141317928, 0.91236801833991343], [-0.13729017564081247, -0.4078377878201338, 0.72698220201460129, -0.70779572749368769], [-0.17265596768210956, -0.89972817817981143, 0.67979784079208261, -0.22911784047385853]], [[-0.366578546321217, -0.50722965395057429, -0.53793685572855532, 0.062709124804335659], [-0.33436838274142211, -0.70057445628429837, 0.2654794412276551, 0.67313370900886915], [0.76525441375726433, -0.018269464725020113, 0.83182560313627385, 0.29707354401313935]]], [[[0.57677691343641202, -0.17352786819810073, -0.69593521562029048, -0.1310553414190947], [0.62051008754741566, 0.75911759703232828, -0.98520610531877151, 0.34354033562718111], [-0.3477895588149551, -0.80057091363036248, 0.63074748260705404, 0.96879572646422818]], [[-0.31189685892814323, -0.69682379936721306, 0.2702848529023465, -0.098016689422113057], [-0.9333141449094613, 0.48330899505733282, 0.98663038023960903, 0.27791097036571144], [-0.017098911218140556, -0.58331786248420814, 0.19605322838212569, -0.19462977534999482]]]]))
      arg1=Data(0.51132202119,self.functionspace)
      arg1.setTaggedValue(1,0.0280814215177)
      res=generalTensorProduct(arg0,arg1,offset=0)
      ref=Data(numarray.array([[[[-0.35188715392858422, -0.50412927049395639, 0.16300968789253154, -0.23335425928920908], [-0.026156877883117498, 0.067728393276479656, 0.084181312775715056, -0.0088421446005915449], [-0.31948523700155684, -0.082525928395145137, -0.081414860195644992, 0.44197876324007163]], [[0.23721958258853273, -0.18236733062239396, -0.49444855640937058, 0.34767762375313194], [-0.1932637833040094, -0.062054373408307766, 0.072770985895986171, 0.15934071516738316], [-0.42627058070974128, -0.23408921021382145, -0.00050484118141739555, -0.25692652906801289]]], [[[-0.045527108227336265, 0.39296012670105324, 0.49345404086965444, -0.10793380198857028], [0.14425989227275732, -0.16722858290189396, 0.23071502655930379, 0.50744837855093949], [-0.017502621873139654, -0.50967878873950756, -0.18069793329651437, 0.46536294353245017]], [[-0.32296176368404622, -0.10838692428364848, -0.058853181558151953, 0.29884178975910802], [-0.1737619688164336, -0.17952243232488005, -0.15370153784861176, 0.43562909309412506], [-0.26120845282670702, -0.39471002292564306, 0.23114154794808367, 0.12011278304953969]]], [[[-0.15662488270317507, -0.41883296773060097, -0.28756059381786681, 0.24852816315453605], [0.49826218613796042, 0.32013268278934076, -0.18411162667656544, -0.084086479976213088], [-0.25566662249640576, -0.42766174181597, -0.25032400831073509, 0.38164385316841093]], [[0.42789721822691068, -0.3139434239846961, 0.049964731532384746, -0.25000086547611272], [-0.10032937009774785, 0.10996627319274394, 0.15237108005256053, 0.35389561222508426], [0.37887424186519236, -0.49501576476249992, -0.23530067344555605, 0.13788653321631561]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[-0.0038620340520360967, -0.010543285281161063, 0.027629872675731318, 0.01043924717594444], [-0.0010710709277321289, 0.011873069462049808, -0.020837344274212286, -0.027144186863006917], [0.012841056457073445, -0.025324543482058315, 0.012912844446782657, 0.0045814868624681161]], [[-0.026446139387447398, 0.00065614902349858629, 0.0054611819775825556, -0.02043838903802029], [0.023520710003931442, -0.010218721377648975, 0.0042765945001275417, -0.026270596671962906], [-0.0072623651599700075, 0.019879628001875198, -0.00087934776792350684, -0.00072450287715627212]]], [[[-0.01209824455238079, -0.017352195482895245, 0.01772198052225794, 0.025620590902233759], [-0.0038553032924030064, -0.011452664830606488, 0.020414693650607479, -0.01987591017214789], [-0.0048484250060205174, -0.025265646222782108, 0.019089689714076478, -0.0064339546555620252]], [[-0.010294046678576543, -0.014243729718842059, -0.015106031595597333, 0.0017609613666339948], [-0.0093895394979395964, -0.019673126611423699, 0.0074550400933861907, 0.018902551420422836], [0.021489431760966272, -0.0005130325398452801, 0.023358845390850102, 0.0083422474111775977]]], [[[0.016196715627861832, -0.0048729092119315287, -0.019542850138815834, -0.003680220284530228], [0.017424805324378068, 0.021317101223736729, -0.027665987925226936, 0.009647100973064697], [-0.0097664252005231871, -0.022481169280431069, 0.017712285930290568, 0.027205161159348037]], [[-0.0087585071655948143, -0.019567802833566905, 0.0075899828841890764, -0.0027524479714277619], [-0.026208787911595456, 0.013572003613480823, 0.027705983589636003, 0.0078041351032210032], [-0.00048016173340962204, -0.016380394775198519, 0.005505453346096212, -0.005465480761490356]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_taggedData_rank4_expandedData_rank0_offset0(self):
      arg0=Data(numarray.array([[[[0.23967450736559703, -0.43173500285331556, 0.33932258964062822, 0.35632097921641392], [-0.67425449224330247, -0.79482434392288148, -0.31181811348288946, 0.95061956484128851], [0.23020491053035808, -0.32957664379693807, 0.65658477726181608, -0.72931733073813043]], [[-0.064015734478346076, 0.054323413309819601, 0.4097774513449719, 0.41171998112133967], [0.66342094179232647, -0.92018551460701659, 0.16069390486352786, 0.25277242553416324], [-0.66376453906207367, 0.46093860931533959, -0.90669874146600704, 0.92782024419181108]]], [[[0.87679824177684007, 0.46236937635034581, -0.87909770038811241, -0.28686276224227547], [0.43103115291126093, -0.61186004275644335, 0.65065091637064754, 0.18189972401091037], [0.082726551081752753, -0.17795449247496031, 0.91847563088675455, 0.39568427164087483]], [[-0.69898936218677044, 0.96648907719375021, 0.38361441828682596, 0.9683957657185287], [-0.072004581548102964, 0.53041443084322815, -0.58611429840276852, -0.2004646336926319], [0.76582451045497102, 0.40304158339556828, -0.56062967836891131, 0.74273032607469558]]], [[[0.85232953597705996, 0.85970504982159679, -0.042469836252492676, 0.28248723827574418], [-0.8650552414255972, -0.82482458743427722, -0.52367371456540557, -0.30026032236877498], [0.59831773942171984, 0.93109501029415642, 0.0011001865711133263, -0.74038772679160902]], [[-0.68035113342407838, -0.41551746574472159, 0.79624547735765394, -0.26865220127579126], [0.32107361078781604, -0.75325820119125519, -0.74613481007685545, -0.9149228869993784], [0.31892766001307526, 0.11582830074002537, 0.16735501696626431, 0.72196128434138962]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[0.5555148885338399, 0.88535096575128924, 0.13763792221915816, -0.56175836078190344], [0.87093641363978169, 0.50892175655719218, -0.49299707303942908, 0.88660158857904148], [0.78419772622948924, 0.4225364021569944, -0.0037847461147297867, 0.57914738742990535]], [[0.63139558700632059, -0.89399211810016843, 0.6048869913633903, -0.84472450557939038], [-0.42629888876975097, -0.26397410039234326, -0.05021510485378422, 0.15313047825428505], [0.66339586151470264, -0.17234673549448498, 0.92460559311767265, -0.5229306411628305]]], [[[0.82818754357257363, -0.15628490270866746, 0.51850345126279795, 0.59284482325827526], [-0.23656234807251142, -0.98022563166675813, -0.91253524045076717, 0.1525318680009804], [-0.014255063933986234, -0.11768969629569903, 0.29124766937730007, 0.17550928567028801]], [[-0.95563111779307852, -0.58077798490813137, 0.23185208598204565, -0.29115179261393331], [0.6868546269791389, -0.046700993214097819, -0.43277824683067823, 0.89054778875964025], [-0.88062600619420905, 0.46179573561023535, 0.51361602488647384, -0.27756288917505256]]], [[[-0.82623224068953283, -0.40936241374381432, 0.95390438352533269, 0.16413706707554931], [0.389696799486412, -0.84258184827890603, 0.69196789956029048, 0.20053000682451971], [-0.50093320936616847, -0.51536638320779349, 0.26183169467298839, 0.82543854445092579]], [[0.18408995942250383, 0.7467354326990947, 0.68267524522423462, -0.93774515358797683], [0.51786162197829189, -0.1908932194701416, -0.19454312555363718, -0.57671974947687077], [-0.62932280855135669, 0.95687550532851029, -0.16385173232302042, -0.10195429823315716]]]]))
      arg1=Data(0.474536003761,self.functionspace)
      arg1.setTaggedValue(1,0.130144212272)
      arg1.expand()
      res=generalTensorProduct(arg0,arg1,offset=0)
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[[[0.11373418292875519, -0.20487380293793356, 0.16102078567403674, 0.16908713353370969], [-0.31995803226731578, -0.37717276785744919, -0.14796892147259239, 0.45110320939719617], [0.10924051828932918, -0.15639598348049688, 0.31157311633239809, -0.3460873316024114]], [[-0.030377770817205895, 0.025778415462721218, 0.19445415419277884, 0.19537595451004394], [0.31481712252976196, -0.43666115682075074, 0.076255043442754813, 0.11994961667406057], [-0.31498017180505117, 0.21873196564384334, -0.43026119739077934, 0.44028411088771813]]], [[[0.41607233375781277, 0.21941091611494876, -0.41716350965802068, -0.13612670882240907], [0.20453980079918327, -0.29034961955092842, 0.30875728569822686, 0.086317968117440913], [0.039256726955299151, -0.084445813710457673, 0.43584975543324089, 0.1877664330157052]], [[-0.33169561860384728, 0.45863386437057568, 0.18203885303908857, 0.45953865672354183], [-0.03416876638034938, 0.25170074434972856, -0.27813233691147271, -0.095127686167996564], [0.36341130277384054, 0.19125774233420426, -0.26603896716322811, 0.35245228080789548]]], [[[0.40446105189037146, 0.40796099875584491, -0.020153466375659356, 0.13405036516496902], [-0.41049985729896515, -0.39140896352521609, -0.24850203178476116, -0.14248433346499137], [0.28392330904474394, 0.44183810530717843, 0.00052207813884808682, -0.3513406331056852]], [[-0.32285110800960842, -0.197177997687569, 0.37784714683839782, -0.12748514199512012], [0.15236098817649676, -0.35744813659380686, -0.35406783104115003, -0.43416385054653767], [0.15134265727158255, 0.054964698955646478, 0.079415980960594129, 0.34259662274181846]]]])+(1.-msk_ref)*numarray.array([[[[0.072297047573589568, 0.11522330402193222, 0.017912778965963449, -0.073109599351155713], [0.11334733349212676, 0.06623322111520466, -0.064160715723104902, 0.11538606534469938], [0.10205879534560933, 0.054990667214955692, -0.00049256280175091901, 0.075372680526436281]], [[0.08217248130293768, -0.11634789998749921, 0.078722541004552254, -0.10993600536546175], [-0.05548033307135674, -0.034354701355764274, -0.0065352052653502831, 0.019929045467234442], [0.086337131821317969, -0.022429930128575862, 0.12033206657856002, -0.068056396367014438]]], [[[0.10778381547171303, -0.020339575553021488, 0.06748022322489626, 0.077155322522465375], [-0.030787220443105324, -0.12757069268206753, -0.1187611800388807, 0.019851139807360182], [-0.0018552140665752531, -0.015316632816931507, 0.037904198507156796, 0.022841517729976338]], [[-0.12436985904776539, -0.075584893350772661, 0.030174207093747119, -0.03789172070131324], [0.089390154373559988, -0.0060778639741675237, -0.056323584022224177, 0.11589964045867092], [-0.11460837788235909, 0.06010004224155046, 0.066844152969112294, -0.0361232035676202]]], [[[-0.10752934411824656, -0.053276148870442269, 0.12414513457668658, 0.021361489299179384], [0.050716782994068163, -0.10965715091892142, 0.090055617205765839, 0.026097819775070516], [-0.0651935579338314, -0.067071951974034136, 0.034075879651051862, 0.10742604914648983]], [[0.023958242756221264, 0.097183294664194703, 0.088846232027284117, -0.12204210432556772], [0.067396692858251131, -0.024843647676002466, -0.025318661828105681, -0.075056737497357043], [-0.081902721183702079, 0.12453180888332521, -0.021324354632577692, -0.013268761831296062]]]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_expandedData_rank0_taggedData_rank0_offset0(self):
      arg0=Data(0.515983003512,self.functionspace)
      arg0.setTaggedValue(1,-0.597127801446)
      arg0.expand()
      arg1=Data(-0.225302501878,self.functionspace)
      arg1.setTaggedValue(1,-0.314329306922)
      res=generalTensorProduct(arg0,arg1,offset=0)
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array(-0.11625226161774301)+(1.-msk_ref)*numarray.array(0.18769476797247858)
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_expandedData_rank1_taggedData_rank1_offset1(self):
      arg0=Data(numarray.array([-0.64978455227011844, -0.23568183560223011, 0.22549144830864232]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([-0.45540456840981003, 0.53375045021692902, 0.330039809402217]))
      arg0.expand()
      arg1=Data(numarray.array([0.049321118387828156, 0.47669446133930982, -0.081737271046585125]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([-0.4760811826492819, 0.3034003957257787, -0.8537544992602677]))
      res=generalTensorProduct(arg0,arg1,offset=1)
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array(-0.16282738212805181)+(1.-msk_ref)*numarray.array(0.096976671114912982)
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_expandedData_rank2_taggedData_rank2_offset2(self):
      arg0=Data(numarray.array([[0.69890298475002965, -0.70908523817862767, -0.75223340482205225], [0.89950668692292646, 0.28022239260262016, -0.83580570008878641]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[0.73319433316736782, 0.9380812611397884, -0.039398021418717066], [-0.47814579414981218, -0.62966367657436284, 0.75982115259635785]]))
      arg0.expand()
      arg1=Data(numarray.array([[-0.58810948345400837, 0.49108021964117254, 0.15586211925528226], [0.50420362772758298, 0.050312035453859316, 0.9796239324737972]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[-0.83159762341984855, -0.88390028638931528, -0.28468042317608688], [0.12016014996825164, 0.9782681451880646, 0.97814182403293692]]))
      res=generalTensorProduct(arg0,arg1,offset=2)
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array(-1.2276360735467051)+(1.-msk_ref)*numarray.array(-1.3578982541020315)
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_expandedData_rank3_taggedData_rank3_offset3(self):
      arg0=Data(numarray.array([[[0.51341890227214737, 0.47313389764845581, 0.54423806928072205], [0.5782109281684773, -0.88786467594171614, -0.019757885921938501], [-0.22571992486003167, -0.83606475301128635, 0.27484755711317876], [-0.2287737264275731, -0.17995475032185815, -0.87570960557245137]], [[0.32261658119933867, -0.84822924564994739, -0.16540129325751973], [-0.63241773260846146, 0.66594952446851541, -0.31108809582252506], [-0.18625877438725524, -0.26949884531133872, -0.28097330026552259], [-0.076421831487475167, -0.24774456037846893, -0.38922374448731833]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[-0.26726682716078565, -0.90156750183257905, 0.4590918490703646], [-0.28745466894673699, 0.76183564305563611, 0.23433343071909585], [-0.5836405761346608, -0.9625583343435471, -0.10415651235120094], [0.57988410213002584, -0.44050552661755837, 0.27299072138741654]], [[-0.47329538696826523, -0.95397911879912001, -0.77594245244657345], [0.58679161589117323, -0.56899380261339827, -0.14102931172003874], [-0.11066878187907325, -0.51345876637868648, -0.86587511432271325], [0.79702856271392664, 0.61864898117739409, -0.52271238674156528]]]))
      arg0.expand()
      arg1=Data(numarray.array([[[0.59967934268480017, 0.33310375893336586, 0.570857780934521], [0.73679262017970415, -0.21914749021833169, 0.090807057390330792], [0.35999282309383318, 0.87266944741238262, 0.40103204099075263], [-0.63962581372933558, -0.58742304926465905, -0.4698094527796568]], [[0.56427473046830823, -0.6505985124667113, 0.45990874096188028], [0.1769943286161606, -0.15231740904554281, 0.41795194955889969], [0.70086197151114615, 0.39496645197233238, -0.95194760163251702], [-0.15000038690401896, -0.98116741582926181, 0.0080687532261132233]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[-0.22173470560033848, 0.31560120039853268, 0.53817456453690182], [-0.077630546574802173, 0.99470821383277697, -0.87113094780793809], [-0.75009619730423616, -0.92832075349108667, -0.042632739760088523], [-0.97470521821042455, 0.7649717312664539, -0.92831227987548059]], [[-0.90103655346103206, -0.73816967555719737, 0.23399384963256642], [0.36585511520849945, -0.10035141631983668, -0.85293119512791082], [-0.041793555067322741, -0.6180737545058359, -0.85808328966380065], [-0.049041129920993409, 0.36574140571982272, -0.11924415102454988]]]))
      res=generalTensorProduct(arg0,arg1,offset=3)
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array(1.9541158321672432)+(1.-msk_ref)*numarray.array(3.4336012347503169)
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_expandedData_rank4_taggedData_rank4_offset4(self):
      arg0=Data(numarray.array([[[[0.73867105725598337, -0.50159652328255788], [-0.64121408383276846, 0.85593509828401215], [0.90075103322645855, -0.65300182605438972]], [[-0.23345340460877151, -0.34546406593860879], [0.52255349852301292, -0.34315793321004162], [-0.97942013965425345, 0.58089605135268374]]], [[[-0.15676960470851276, -0.66531982473331097], [-0.901333939011707, -0.67602458056169512], [-0.063347110099184478, -0.44285925632218914]], [[-0.83388693425199811, -0.91009623678991636], [0.99679711499789603, -0.31399135724990579], [-0.57678814888541297, 0.97993507553666781]]], [[[-0.77880931504422501, -0.24851759680925944], [0.037775269979054116, 0.5745851241258737], [0.52747564968364702, -0.66356433484141286]], [[-0.94685331326797129, -0.65521466523649718], [-0.63249003229041723, 0.37807646654504845], [-0.86595642215404811, 0.0012990429420003391]]], [[[-0.79584034148769711, 0.79853293267306014], [-0.20470427993096241, 0.32899125839589227], [-0.89679501581342258, 0.43449279491808945]], [[0.31501235303435116, -0.32903570715910191], [-0.26313594951985619, 0.39945989148464789], [0.69932830322269735, 0.58490404933200613]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[0.43410077540625047, 0.96841778348987151], [0.92599254658666097, -0.55346226138024845], [-0.41851601201552202, 0.11901933447468949]], [[0.35518364901357757, 0.22358676500963592], [-0.85158033562669533, 0.85178641516805942], [-0.081316248656086998, -0.49627377200873091]]], [[[-0.74378040944254176, -0.63328820461170432], [0.47282111648055625, 0.66657503760601], [0.017558942583736581, -0.06522506173497078]], [[-0.46937604867815286, 0.83644634134419249], [-0.2534967526123193, -0.18300123697110493], [0.62849481204286595, -0.27360526686051578]]], [[[0.74780056691956598, -0.63087391049453734], [-0.7689938156466829, -0.47059429582817924], [0.9795061110317913, -0.86860911930541307]], [[0.9674227424941908, 0.079844046560506365], [0.35543122927368898, -0.9250075744153381], [-0.42603316158884885, -0.19443553393446233]]], [[[0.75176770013019256, -0.70478163691150542], [-0.5286435745336926, 0.48444230151996859], [-0.74319532366153251, -0.55986891583088894]], [[-0.47690356895298613, -0.9201477409020915], [-0.85163398964603454, 0.48808269234803325], [-0.2993040375591709, -0.033374281074722401]]]]))
      arg0.expand()
      arg1=Data(numarray.array([[[[0.40218319744388653, -0.34053866735172456], [-0.3310531987273797, 0.60239901530307383], [-0.90421821624750209, -0.51692484937145045]], [[0.26078671628138039, 0.025139874637118753], [0.44491282392854181, 0.49396665054191713], [-0.712221524791808, -0.084925890110761237]]], [[[0.57426907109210035, -0.8873438545113479], [0.91776206728309528, -0.1715937055381811], [0.51680618414026869, -0.7190305755966373]], [[-0.93372283960093205, 0.14579780469138748], [-0.57188041431535397, -0.14190242221106475], [-0.094955954493723294, 0.64397152298357718]]], [[[-0.72314314896754017, -0.10679857144294957], [-0.93450027519587464, 0.50061442675997458], [-0.99985107479901281, -0.9855171234668425]], [[-0.25469053374717743, 0.98629420046603355], [-0.83466121132060156, -0.84907153351413855], [0.2375511736604754, 0.19113845468264801]]], [[[0.28337324449950896, -0.50969236268602947], [0.18983160642096086, -0.14325280033360666], [0.48695038651662048, -0.71516344353395978]], [[0.54062385403870161, 0.96016489569107488], [-0.17092263921315398, -0.20567798463219988], [-0.2305450225176251, 0.25197686431642574]]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[[-0.84361290479794371, 0.39496000800440645], [-0.51621123372585243, -0.33759235465314474], [0.42930755977507506, 0.26064551807883651]], [[-0.19658591319814356, 0.63762287528557704], [0.36314186558424999, 0.58137957427038667], [-0.7966569051705874, -0.72634289741434133]]], [[[-0.24230417099788948, -0.49527408047990429], [-0.48168967692548992, -0.26428489125271293], [0.78631444646643356, -0.93145979632465603]], [[-0.71098587102710531, 0.89150135676117293], [0.54012311333111751, 0.80056336313555154], [0.1610142388605027, -0.91691777228658555]]], [[[0.75219070205218475, 0.85957836275450195], [-0.68585308115689791, -0.75918628172904046], [-0.25934672736102482, 0.20531220142659956]], [[-0.21303188952939478, -0.35740392047890235], [-0.67106410304541586, 0.88923110390657301], [0.1429120098061607, -0.60458797668075603]]], [[[-0.25766922729106168, 0.33457499553471481], [0.089962139850036316, 0.43237184772069837], [0.46437048462644714, -0.80282316809279997]], [[0.75527233822981832, 0.6127289161193199], [0.73100435895076799, -0.20977018316877061], [-0.37915520031023209, 0.094993234879890753]]]]))
      res=generalTensorProduct(arg0,arg1,offset=4)
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array(1.1439847977119435)+(1.-msk_ref)*numarray.array(-0.89537999006003088)
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_expandedData_rank0_taggedData_rank1_offset0(self):
      arg0=Data(0.288150731037,self.functionspace)
      arg0.setTaggedValue(1,-0.282828870106)
      arg0.expand()
      arg1=Data(numarray.array([0.969461758056964, -0.53631487775212339]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([-0.95495077003336171, -0.36735532301025708]))
      res=generalTensorProduct(arg0,arg1,offset=0)
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([0.27935111429622689, -0.15453952409012631])+(1.-msk_ref)*numarray.array([0.27008764729579238, 0.10389869093457033])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_expandedData_rank1_taggedData_rank2_offset1(self):
      arg0=Data(numarray.array([0.50866672132900503, 0.38849111170695827, -0.90990724161091108]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([0.94533051316674732, 0.88689089247200958, -0.74355192613257359]))
      arg0.expand()
      arg1=Data(numarray.array([[-0.28428368799436132, -0.94717302230176226], [-0.3870734916635219, -0.56312831772762695], [-0.40117738025934635, 0.81365446471734537]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[0.55823701287398997, 0.29982523505448055], [0.83395178976063988, -0.55983863686159419], [0.66249496487828075, -0.22824134619803482]]))
      res=generalTensorProduct(arg0,arg1,offset=1)
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([0.070053940880408172, -1.4409158315885591])+(1.-msk_ref)*numarray.array([0.77474332175990723, -0.043372552383459467])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_expandedData_rank2_taggedData_rank3_offset2(self):
      arg0=Data(numarray.array([[0.22942317125359835, 0.82598742823071114, -0.52809332373594886], [-0.26416665384798943, -0.8852530804228691, 0.86947316878955339]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[-0.59765138795185591, -0.83943750050978072, -0.15801814686320048], [-0.28788142924830917, 0.772125785270529, 0.077044074260147921]]))
      arg0.expand()
      arg1=Data(numarray.array([[[0.37386377453832798, 0.56462127171330923], [-0.33916096623952097, 0.083831699409191884], [-0.655424208773151, -0.21844170419905717]], [[-0.021300655433110771, -0.30022162004665653], [0.59940972521687019, -0.44522430382844536], [0.65010274007524904, -0.65400525279267363]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[0.60252823589606175, -0.089744459363675588], [-0.37349055691068322, 0.95542903111430633], [-0.63604833965846019, -0.86306010307039593]], [[-0.26902423058022329, -0.67545386282261011], [0.63607233499262739, -0.69411917252006239], [-0.58094050471112668, 0.12853588954279216]]]))
      res=generalTensorProduct(arg0,arg1,offset=2)
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([0.19199997401788849, 0.21894344579908798])+(1.-msk_ref)*numarray.array([0.57774423080310167, -0.94360165808832808])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_expandedData_rank3_taggedData_rank4_offset3(self):
      arg0=Data(numarray.array([[[-0.1938661276922764, -0.67735204071353272, 0.6540499355770566], [-0.34157008978345416, -0.35565248933201987, -0.1476269638679748], [-0.27379793872942537, 0.37987270424282449, -0.74701951632341523], [0.39799430982777717, -0.50645135987240786, 0.84365662507596273]], [[-0.79423016249389478, -0.97371379057077712, 0.54833620483498136], [0.048288750496076505, -0.46328922980271336, 0.8024464449259503], [-0.76728353966887686, -0.49017626114399748, -0.4899161898602602], [0.34841977676020108, -0.90653040820356523, 0.092403086951692526]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[-0.95938569397078188, 0.71134128438388045, -0.032879814783753902], [0.94546674874684067, 0.37124615346031864, 0.92318449044200213], [-0.17681373377501086, -0.95499080850001206, 0.81490387354113336], [-0.03119395667076752, 0.8693381442128838, -0.37478132104880024]], [[-0.1133780668067863, 0.83210210106610649, -0.54471791841175299], [-0.41562192720074487, 0.26680059737891448, 0.6158432021136484], [0.87374300983704356, 0.70106320517301368, 0.66893637186432242], [0.051094295151578262, 0.23567123979807625, 0.67699551066600816]]]))
      arg0.expand()
      arg1=Data(numarray.array([[[[0.097484903409526869, -0.39084003208222251], [-0.94195867219384266, 0.57825667465783548], [0.45267754265659654, -0.91427848427645508]], [[0.74179706316100047, 0.58187790254898086], [-0.2670550842527033, -0.11944304639712833], [0.3202304266259004, 0.11025628487899053]], [[0.38186010552725569, 0.37204582099006323], [-0.15088229280936805, 0.69159467949973497], [-0.028107085553015443, 0.39218136906984769]], [[0.11156834505602276, -0.22013918818812295], [-0.40734370350666005, 0.89121893817015585], [0.63036092706077662, -0.087909411446522867]]], [[[-0.12390526731150064, -0.084976022477841529], [-0.2320979733628763, 0.80861499584747798], [0.85737369800658381, -0.11779393952018502]], [[0.82265372176417806, 0.38021069753575887], [-0.5947731078419165, -0.49143488005354752], [0.8326006423054757, -0.79918966934251645]], [[-0.62534523841769096, 0.37600025504932155], [0.6769133088196313, 0.21722481838838648], [-0.020048356901592124, 0.7466153296876219]], [[0.27978076793815521, -0.04525846394176436], [-0.48860838186236699, -0.096113881397657419], [0.059672546148055172, 0.48468739283445772]]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[[0.4055918855616345, 0.59983790037317952], [-0.81574377771021211, 0.89095760975575922], [-0.957717372683208, -0.7207913518712008]], [[-0.15941614081629152, 0.54560607793890492], [-0.027538388966989347, 0.41658914233839472], [0.99344327926364495, 0.56904778001302847]], [[0.040164704552006603, -0.30703763250749327], [0.78600806717740301, -0.15108066474913073], [0.58981291877933351, 0.77355410901867194]], [[-0.70894782786998412, -0.075073960383796212], [0.015871411233150834, -0.31886251426239931], [0.25038666425168032, 0.25127057719887613]]], [[[0.012415365324481398, 0.16252520795020908], [-0.18784687554857649, -0.2179492537919272], [0.53930314712470295, -0.5300615780085467]], [[0.35278183446577516, 0.32701881701466751], [-0.95035677984171119, 0.75454000179081104], [-0.40646582367107786, -0.18440952316621151]], [[0.21355677528539752, 0.21921184392593052], [0.98466856626464727, 0.46411580922528284], [-0.74102422383754796, 0.38500415551818112]], [[0.55944014853800961, -0.77234380540627368], [0.76918847309196803, 0.090212211463043035], [-0.71043341052289533, -0.40396193196283714]]]]))
      res=generalTensorProduct(arg0,arg1,offset=3)
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([3.8328756570316767, -3.6560368959546143])+(1.-msk_ref)*numarray.array([-1.5086076936492461, 2.2613061247190931])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_expandedData_rank0_taggedData_rank2_offset0(self):
      arg0=Data(0.108096964573,self.functionspace)
      arg0.setTaggedValue(1,0.216508862819)
      arg0.expand()
      arg1=Data(numarray.array([[0.1966361103298857, 0.98834068048320889, -0.4936537957908651, 0.83325480527888551, 0.8845208537694722], [-0.3266528663692978, 0.4012168994713079, -0.58986108597035969, 0.013566006754255788, -0.28749834199244284], [0.9879385139607868, 0.55797463814472725, -0.089453324674875434, 0.85221742328345651, -0.50298652186574322], [-0.17326927726717534, 0.43743560313482854, -0.64153272964875918, 0.95160800067270124, 0.0037056297212147982]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[-0.62998012556129868, 0.16028799544920158, -0.082494537033762416, 0.42082090479151901, 0.4665436806337615], [0.75613097597194145, 0.72324506648391029, 0.064484068438393605, 0.35213214648869928, 0.73044099294165621], [0.30504556558350493, 0.86189402475692933, 0.78612508318724572, -0.43787783939418934, 0.76556102302682549], [-0.21050256162872572, -0.58988804104783865, 0.68565314403517874, -0.86177803513800066, 0.70374186714167508]]))
      res=generalTensorProduct(arg0,arg1,offset=0)
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[0.021255766652045129, 0.10683662752396142, -0.053362476874788914, 0.090072315166271968, 0.095614019393741742], [-0.035310183323496128, 0.043370328968122478, -0.063762192912958163, 0.0014664441515079311, -0.031077698089069929], [0.10679315454363483, 0.06031536469200121, -0.0096696328682911257, 0.092122116612917915, -0.05437131623467182], [-0.0187298829262889, 0.047285460894907545, -0.069347740749075792, 0.10286593633582428, 0.00040056732469373691]])+(1.-msk_ref)*numarray.array([[-0.13639628058396969, 0.034703771618274745, -0.017860798401975769, 0.091111455546956002, 0.10101084174949683], [0.16370905775005218, 0.15658896688402363, 0.013961372327551664, 0.076239730598350042, 0.15814694873832075], [0.066045068512522453, 0.18660769517078082, 0.1702030477945147, -0.094804433060961507, 0.16575074651423663], [-0.045575670238762661, -0.12771598895790945, 0.14844998250346145, -0.18658258239028774, 0.15236635137310023]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_expandedData_rank1_taggedData_rank3_offset1(self):
      arg0=Data(numarray.array([0.67273497552469097, -0.072363016768163035, -0.36397272483604426]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([-0.56203107161456667, 0.13098177839080916, 0.63241277107146621]))
      arg0.expand()
      arg1=Data(numarray.array([[[0.47723858422752552, -0.042962530577724145, 0.89239501878294414, 0.30761855848808128, 0.45259596388054191], [0.50604598712153637, 0.71289754525889482, -0.25263834966099785, -0.38736212739547637, -0.4281563654310423], [-0.53745220742572708, -0.32629195732982796, -0.57529394942772583, -0.064039528186032424, 0.40725157061955275], [0.18249398962625207, 0.43500539218482492, -0.88634156010214693, 0.88807724989091597, -0.19715885708056025]], [[0.66562618313375266, 0.22786689317779185, 0.42254509551328967, 0.13510570556972024, -0.056923017439996393], [-0.31860500191364771, -0.46488931446587944, -0.084913589586403049, -0.66415211029327836, 0.46914408387072815], [0.45782895202412877, -0.036980112230279749, 0.45917796556393697, 0.47710636616945257, 0.44921134307035304], [0.38644611073893498, 0.23402355318865542, -0.56022197223512804, -0.69768339216762021, 0.094969535628160795]], [[-0.74222633422055617, 0.047970449216808264, 0.5823521847701596, 0.51696457455571809, -0.93363144649509011], [0.56892349524432673, -0.39678078252618199, 0.65973599540358441, 0.91252743355914201, 0.6585316074665466], [0.60311395666486223, 0.62843852771142972, 0.24891485727666751, -0.064501896703596628, 0.64503529490941913], [0.64620059229437232, 0.52197258479857789, 0.94771763594849356, 0.88712516110679829, 0.76635114673091809]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[0.35695104629471519, 0.61347980370125277, -0.71672279833092833, -0.14063918813351473, -0.71541988785578248], [0.10614952460233651, 0.95615771874557609, -0.87164331703667575, -0.28122646200398638, 0.66609907838461702], [-0.32443663565015002, -0.41231809136951658, -0.44424356283889699, 0.59492685884658192, 0.85280254935176414], [-0.76770713842647242, 0.19631643229816542, -0.92525606196500343, -0.63574702710258668, -0.56765887252516567]], [[-0.62613870867295973, -0.75195429557491278, 0.88075754269468365, -0.45007602353986043, 0.53222291794178589], [0.041187693098120315, 0.1084864340024263, 0.95306697500940873, -0.93152312680763161, 0.27010721567440021], [0.19136078361748532, -0.9835313527426186, 0.11377201335291232, -0.56369222393666374, 0.6818338738049996], [0.94538558469832834, -0.78822125190144732, -0.37909842718263431, 0.77082847063267113, -0.32340847048221733]], [[-0.024169693439075601, 0.28613673551100671, 0.60660705696330841, 0.30969304182368962, -0.87935914566466811], [-0.68356481858554763, 0.73352468437368068, -0.99564777714933905, -0.81957762514847055, -0.91392098912164643], [0.29405516606826021, -0.7993872229333725, 0.97028256166303484, 0.71090670122873734, -0.30402401615598929], [0.24706021381353893, 0.60883900859791185, 0.19196550964209269, -0.80531536998671971, -0.18562434887501711]]]))
      res=generalTensorProduct(arg0,arg1,offset=1)
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[0.54303850993963065, -0.062851467881668593, 0.35780839178234836, 0.0090081021330528643, 0.64841263752269063], [0.15641741906914888, 0.65764928849802151, -0.40393995838816654, -0.54466709747898789, -0.56167198678707408], [-0.614209811934468, -0.44556650276985804, -0.51084608266460185, -0.054129555301859589, 0.0066908335384851247], [-0.14039370711482146, 0.085724907582179488, -0.90067698610243774, 0.32503773981703848, -0.41843885604857145]])+(1.-msk_ref)*numarray.array([[-0.29791556344802228, -0.2623304965812604, 0.9018097215154639, 0.21594567040463836, -0.084318243558510475], [-0.48655961490247157, -0.059290222948118643, -0.014935334906079678, -0.48226590298327277, -0.91696456063155463], [0.39337248817906423, -0.40263179576128216, 0.87819982986392642, 0.041385686931213805, -0.58226238785921836], [0.71154758528413387, 0.17145900840424169, 0.59176910974942676, -0.051017657883767831, 0.15929009897603702]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_expandedData_rank2_taggedData_rank4_offset2(self):
      arg0=Data(numarray.array([[-0.35544848463049572, -0.5720427823055112, -0.99933254331636134], [0.57027216798227309, -0.75739066073646, 0.97897865525458272]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[-0.9236754804653331, -0.62060545361965258, 0.9269683723543185], [-0.28224017944022939, -0.038299713965891602, -0.54498217080839662]]))
      arg0.expand()
      arg1=Data(numarray.array([[[[0.17608370495117587, -0.5772289446042318, 0.37905017113606232, -0.52146165992941795, -0.55431410579257934], [0.56746587002532412, -0.47710032532710289, -0.99034826499377249, -0.34145216749545004, 0.03652615753502908], [-0.26981519120557707, -0.6031072113179885, -0.61951607198060987, 0.54804758446566448, 0.13471179791372623], [0.43637432994225622, 0.21433424523892564, 0.16926549148881431, 0.63332710233667666, -0.47458280955454279]], [[-0.14404364334688746, 0.36281995053669247, -0.19204552572356448, -0.26757867981004191, -0.66205688631230886], [0.99554197878154005, -0.48985546224389109, -0.39930144040514248, 0.99224698725998328, -0.57239049700433253], [0.13804341218542526, -0.65078332385357207, 0.26335688692397352, -0.98362553839650468, -0.12338879404608605], [0.83752201269231796, -0.14968333641295817, 0.085286359453630833, -0.26799623654533966, -0.32844738104081062]], [[-0.11969284367010946, 0.58786157479707368, -0.95951284917572055, 0.4228216775293685, 0.85727236470669532], [-0.43392330483834063, 0.86905424994717362, -0.71262296256535351, -0.11159154668098936, 0.37077318306977602], [0.50297962607720637, -0.22500511770972786, 0.5110327219363433, -0.36804792852062596, -0.82033483296975684], [-0.84689456405568686, 0.0047705159725917046, 0.52230349352768202, 0.86789927301581726, -0.41290210673599614]]], [[[-0.94344520615940719, -0.48630348925499134, -0.73955465014162725, -0.74147377557135496, -0.74107182793002746], [0.994575472560707, -0.14344398418458537, 0.095309715240702308, 0.31388583097094735, -0.83133989368740457], [-0.10290460211270003, -0.058419215218030951, -0.63032804547260257, 0.26867235728197003, 0.60715273356649391], [0.66161547322841008, -0.28621790105991218, -0.38282313219860575, 0.80947531456969268, 0.41002668136200282]], [[-0.61440137437422337, -0.38162728121217504, -0.56234806562799, 0.6185708811802284, -0.71815119291646345], [-0.25037890023849374, 0.21723881854351768, 0.15690756326747568, -0.75649674688873247, -0.19614809604674144], [-0.086079773488427547, -0.30311087935734893, 0.17585190358796021, -0.33576048869280761, -0.22758922729768183], [-0.99843770604783022, 0.94878511283891931, 0.1417714057739683, 0.099000012715347419, 0.75484227467732556]], [[0.91144111606932054, 0.75392443884887794, -0.27491643960103418, -0.19548236184544776, 0.059131390743755619], [-0.061491866056944566, -0.40704022492494185, 0.11324643591569927, -0.95020859283920078, 0.66086069711763606], [-0.41766106171022743, 0.68364081095441298, -0.19031656949498044, -0.4086109152493711, 0.4414359285980507], [-0.95614319042561191, 0.36227051754445805, -0.63161649196825986, 0.36708096616601082, -0.35019409114882261]]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[[-0.56987545010754115, 0.33904473813440594, 0.89064815783522011, 0.21783867768757226, 0.58321275617056734], [0.51649611911369697, 0.15485715705536918, -0.40856815753941511, 0.1001447472556567, -0.77283431908321809], [0.15770678497692248, 0.51558164519924654, 0.19489193119148918, -0.92995313314373096, -0.31892027190303462], [-0.4560001721962359, 0.93713923985722491, 0.13929659658023374, -0.13686561151917487, 0.61702269224306261]], [[-0.11176695926415303, -0.13034620139815045, 0.13773902458320286, -0.46515096414496737, 0.61221605840445714], [0.27447094704371633, -0.25858784016082237, 0.93476111769493242, 0.90257598952700779, 0.86004988418857442], [-0.50662258497309298, 0.85476784290778896, 0.46077963992651916, 0.58129592492415894, 0.6478741560519774], [0.95992200265887861, -0.34776179936223173, 0.97682364024242174, -0.77026224582107794, 0.82401446511819443]], [[-0.774275253769664, -0.84961201026688604, 0.83282182601786903, 0.33095774249698628, -0.50767910259115356], [-0.51216000012585083, 0.47163065030046059, 0.15700361848486244, -0.54102496362049157, -0.46410975038487412], [0.87921781429223156, -0.52240978524906767, -0.071928424461229934, 0.95784690021059493, -0.89667473771112194], [-0.87911880642575091, 0.83275260558766928, -0.78298866887358254, 0.59956651989871834, 0.84137168964603881]]], [[[0.70222110173496644, 0.12872722474327225, 0.8451136672941828, 0.92314845406907886, 0.25811740137196559], [0.44614704256436011, -0.36295913842122141, -0.89647864987187642, 0.3608551108295841, 0.45118539718046491], [-0.94991405646378313, 0.6349395534521165, 0.67570583757512881, 0.88754815332024961, -0.042635781099460646], [-0.34049460591013658, -0.049548210094799483, 0.3752385362094095, -0.08257040947029104, -0.96222795900890246]], [[-0.014625200058036691, 0.41876951212910352, 0.0084352517570036589, -0.762968303620156, -0.4551131074641166], [-0.72632554219212664, 0.038626851554231845, 0.81459288316844725, -0.015718710787332002, -0.74422553937428293], [-0.14820327022000002, -0.57752589813783173, 0.55449658639282728, -0.88955732674946431, -0.82608938146705269], [0.7383402731214681, 0.48252226324705116, 0.077761754312485776, 0.96359372820105893, -0.28776852372348549]], [[0.90229275446854773, -0.98512197689984271, -0.98076991257708213, 0.689507289991794, 0.39330233944737381], [0.30789618120263285, -0.0289646719364125, 0.86098683738499959, 0.66045147088822853, -0.40944247075189266], [0.61113611451480887, 0.64360108931999771, -0.19189450008125797, 0.43968733419072503, 0.98862741178827962], [-0.54113958904316739, 0.40303569911402315, -0.88699778523406625, -0.0451248784052527, -0.3945855373325402]]]]))
      res=generalTensorProduct(arg0,arg1,offset=2)
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[0.95902611226112944, 0.15994894386895653, 0.66903027681070826, -1.1668349787076795, -0.10174846237218638], [0.35905032010795274, -1.0634917808666025, 1.3389606130700205, -0.51299201379039738, 0.26536222623437067], [-0.88807412427423182, 1.6770326425919548, -1.1200999768348923, 0.74317234050936998, 1.793260472290628], [0.40958679130897513, -0.52249482466668051, -1.574936267563587, -0.19312584569435987, 0.088485981554794702]])+(1.-msk_ref)*numarray.array([[-0.81135383992022492, -0.53533404429964759, 0.15950205276413321, -0.21284695751238009, -1.6590095813938326], [-1.388069579331392, 0.57137744593855211, -0.30459492466973304, -1.6153379242980688, -0.12581877306648495], [0.9244717252940573, -1.9987985526558105, -0.64002394646569727, 0.93005955119640704, -1.4337963167407599], [-0.62671751550494981, -0.10199758019071364, -1.0861803273312862, 1.1712191382283761, 0.19625126973189477]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_expandedData_rank0_taggedData_rank3_offset0(self):
      arg0=Data(-0.369048441145,self.functionspace)
      arg0.setTaggedValue(1,0.585545142906)
      arg0.expand()
      arg1=Data(numarray.array([[[-0.6408550075740318, -0.5762503286666294], [-0.84071468078372469, -0.36828320066015396]], [[-0.24043269147662372, -0.29452815502758134], [-0.36936387162559248, -0.9630540846350979]], [[0.38864954224724357, -0.83413374149497499], [0.65283585709640324, -0.96380911966288663]], [[0.3290748244828694, 0.39318834704650141], [0.27867043331666297, -0.77353649339803154]], [[-0.25195203054517568, -0.94193309413299664], [0.39101936862676956, 0.36277961677763915]], [[-0.79551071076600999, 0.86964128583013034], [-0.96264785547375653, 0.62238191940805021]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[-0.21312417550906004, -0.88512633139315433], [-0.85400081521098103, -0.22365056482699042]], [[-0.1357275171458221, 0.9619323122982204], [0.29433999783638209, 0.854634033625991]], [[0.29113987590099577, 0.25613511129608257], [-0.35512602568878959, 0.36475195263744054]], [[-0.20717097474604929, 0.93434510071717214], [-0.30264883832091627, 0.75331837746710861]], [[0.4906260866601162, 0.046839821499394807], [-0.93856483491709608, -0.11221740394080082]], [[-0.10129083540900186, 0.54769065367856973], [0.66664578368045535, 0.35285689815681009]]]))
      res=generalTensorProduct(arg0,arg1,offset=0)
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[[0.23650654154519371, 0.21266428550374056], [0.31026444239098938, 0.13591434110353837]], [[0.088731309989756008, 0.10869515648625562], [0.13631316103872415, 0.35541360867295302]], [[-0.14343050771808133, 0.3078357570052061], [-0.24092805538501827, 0.35569225317296838]], [[-0.12144455099548289, -0.14510554655390909], [-0.10284288900872923, 0.28547243705734948]], [[0.092982504116026349, 0.34761894005271321], [-0.14430508844922979, -0.13388325205098525]], [[0.29358198772238431, -0.32093976089098386], [0.35526369043421235, -0.2296890771544032]]])+(1.-msk_ref)*numarray.array([[[-0.12479382580508283, -0.51828142420508116], [-0.50005602938418114, -0.13095750194252997]], [[-0.079474588423367645, 0.56325479327014005], [0.17234935609592744, 0.50042680735148859]], [[0.17047554023995642, 0.14997867034699694], [-0.20794231946142691, 0.21357873423217325]], [[-0.1213079580135602, 0.54710123552254919], [-0.17721455728482352, 0.44110191698736489]], [[0.28728372202659486, 0.027426829973534191], [-0.54957208038766714, -0.0657083558270075]], [[-0.059310356694587847, 0.3206976020762593], [0.39035120067256324, 0.20661364285644304]]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_expandedData_rank1_taggedData_rank4_offset1(self):
      arg0=Data(numarray.array([0.8029633451393603, -0.82232184465645086, 0.76554535136933799]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([-0.97462187693145497, 0.30165820514344488, 0.13645241208192616]))
      arg0.expand()
      arg1=Data(numarray.array([[[[0.49564438020433887, 0.32782970391467048], [0.93320458268887263, 0.73437723312179592]], [[-0.74545741522150211, 0.45888610331533863], [0.27872556805877324, 0.83196910525119261]], [[-0.69933761170468656, 0.71714496256371119], [-0.13410670061328034, -0.74957316249123918]], [[-0.9076958456059947, 0.25026599205011291], [0.54522524048752952, 0.9428590346591692]], [[0.41992855686346475, -0.067407644640798958], [-0.55734629880243314, -0.94185002761550085]], [[0.57744958879364572, -0.70351425838108717], [0.29303594784304621, -0.00099391896600975471]]], [[[0.11332672571006985, -0.79392437845214769], [-0.37859212031327427, -0.66820424684313151]], [[0.9491818025935912, 0.39294889880473782], [-0.52449745807422854, 0.19472922436619378]], [[-0.80356362718341412, -0.95597738603803717], [0.2915768895128652, 0.08286058953001274]], [[0.19201041470262514, 0.42974502178213569], [-0.26482005719535295, -0.77743079713768415]], [[-0.57689002072202866, -0.028757024177242574], [0.15163260827973812, 0.13149894085951219]], [[0.28125446032057888, -0.09563498949275373], [0.29003821770261462, 0.51781607277440589]]], [[[0.3036980239331013, -0.68015391830904948], [0.051102221065291609, -0.94911682717836099]], [[-0.47105196447823183, 0.91226831380613893], [0.56959295722312442, 0.00020493097984841668]], [[-0.29761501334240603, 0.62874981292476018], [0.68666135126870453, 0.59723816020643006]], [[-0.48049006077956302, 0.56028740392252807], [-0.95825675423514611, 0.41958060537536479]], [[-0.9533435877397205, 0.96139579274213438], [0.13600805971127361, -0.92219721325207349]], [[0.99016052833439661, -0.19488239278868336], [-0.56447779186556879, -0.71725375895485866]]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[[-0.68776653897722961, 0.5708093581570961], [0.29317047637867732, 0.93065310175059168]], [[-0.35579540578372115, -0.43836474317580021], [-0.68439461591166095, -0.32359401322994019]], [[-0.055202167850318506, 0.50719401646467355], [0.0089624056137369568, -0.19731366644887527]], [[0.44267436765714696, -0.20241499909815031], [-0.78255326916572421, 0.60230487108783692]], [[-0.57472115892870645, -0.50058654525947821], [-0.02453085192833937, 0.45891232129900117]], [[-0.96302219058151128, 0.43540376190816121], [-0.16308572853629477, -0.45156535908030304]]], [[[0.65101660113403481, -0.8472436509842618], [0.37515861824210317, 0.18702805312391724]], [[0.87141280533935839, 0.4667000244665791], [-0.95008823883215121, -0.99105875095537166]], [[0.37409936234038788, 0.59506979397389914], [0.098518318621471757, 0.12345165893928045]], [[-0.902507489810082, 0.3618046772003598], [0.21177333434261869, 0.66969105362965142]], [[0.4700874996516895, -0.20588916697492921], [0.90991666002025551, 0.63003732055234885]], [[-0.9388885318036404, 0.34413132059553009], [-0.1801127953262478, 0.076058707008117565]]], [[[-0.32815779673971335, 0.55174717038938503], [-0.34813244487686523, -0.32050909292250052]], [[0.60681939062594537, -0.16731016145918831], [-0.57917955302601909, -0.50842783794305935]], [[0.58835430350122619, -0.17281499669085409], [0.65463063600540927, 0.51319888141657644]], [[-0.90922687528782076, 0.92242781786555317], [0.73944844122007169, 0.63732936343204116]], [[-0.88976694530020795, -0.73813771510002946], [0.74293537872612014, -0.58723807910667469]], [[-0.19212057848166642, -0.94466972943048977], [0.80348092990072906, -0.73827713213598956]]]]))
      res=generalTensorProduct(arg0,arg1,offset=1)
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[[0.53728783783566025, 0.39540792472073283], [1.0997747119448289, 0.41256497362017397]], [[-1.7397195522680007, 0.74372102407105145], [1.0911613723204372, 0.50806748477474428]], [[-0.12859233383387492, 1.8432987020855407], [0.17821759485529309, -0.21280494960588736]], [[-1.2545777833773677, 0.27649111661105269], [-0.078025802731797933, 1.7175875536296332]], [[0.08174875289075878, 0.70551374129929967], [-0.46809911677737759, -1.570389290062588]], [[0.99040195641422579, -0.63544473115264233], [-0.43534098678986277, -0.9756998295744288]]])+(1.-msk_ref)*numarray.array([[[0.82191889161669274, -0.73661405483319065], [-0.22006419635349403, -0.89435056480687358]], [[0.69243677853519869, 0.54519388539864089], [0.3013936052286697, -0.052955404323884486]], [[0.24693374650139524, -0.33839572145235458], [0.11030983189368537, 0.29957364704327216]], [[-0.82775511284281444, 0.4322869365961044], [0.92747622334288049, -0.29803657377510201]], [[0.58053072015563467, 0.32505377006524855], [0.39976745588913259, -0.33734011300065936]], [[0.62914374923314509, -0.44944645835102826], [0.21425132723207629, 0.3623095154007886]]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_expandedData_rank0_taggedData_rank4_offset0(self):
      arg0=Data(-0.192802743274,self.functionspace)
      arg0.setTaggedValue(1,-0.658055718856)
      arg0.expand()
      arg1=Data(numarray.array([[[[0.97879366986378247, -0.49636895558008631, 0.48309034082099767, 0.92899627362167392], [0.38398618211633528, 0.39698024815727728, 0.99342170076332348, 0.54524645849316755], [0.48266617810467127, -0.4348436070598507, 0.52203098280279869, 0.95044380974956777]], [[0.94883231298596882, 0.78196780039997238, 0.35830457815844419, 0.17341769615107316], [0.47381636285973383, 0.35035488884288712, 0.45881532318336404, -0.26859884280592627], [0.40503174477864112, 0.12795956737760239, 0.13401577959912303, 0.12015777147297713]]], [[[-0.76761871615552169, 0.51071255827042505, -0.65894714008101807, -0.57161421793655798], [0.29730968186348194, -0.61291592489576896, -0.26744009187505102, -0.28935594914274776], [-0.77321020634115034, 0.82811705061602758, 0.82706969050600554, 0.90758908050479969]], [[0.8982573703984742, -0.62458158277907949, -0.49329728297516806, -0.82227996260578906], [0.64928294963722433, -0.9366224208077425, 0.42715434531326713, 0.59517505465842091], [-0.38848698087565015, -0.46351457262341733, -0.72732003324677397, 0.38739018699059313]]], [[[-0.018014096653332423, -0.68631271894313417, 0.59464999310706834, -0.74761334762323517], [-0.58895413604229807, 0.38005942700076201, 0.99546415471693384, -0.52114210143444928], [0.68310957686377849, -0.4637407931081754, 0.029815371704043914, 0.11258372265473793]], [[-0.97125606821418309, -0.62053550439190475, -0.98932034521590628, -0.8897090406239252], [-0.55437904572509811, -0.7943178447109176, -0.41416122439938641, 0.031719440837302937], [-0.50699228266525376, 0.13740252350487614, -0.82005680889824228, -0.040561776088533952]]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[[-0.52800550858832507, -0.7764817402921993, -0.62987017808046164, 0.74854261368603803], [-0.54439493713994014, -0.27658644292957324, 0.65845616179883959, 0.37083133775163901], [0.15939658215673846, 0.31144947329664019, 0.0054063603890950329, 0.9940575011520576]], [[-0.1379780550031493, -0.5869579027575913, -0.691634591312001, -0.27593409139455516], [-0.15150539941885932, -0.21264172383387625, -0.77136507193225579, 0.41334694312667675], [-0.52850154013929562, -0.88521809419494546, 0.93107311340164323, -0.47736999820633463]]], [[[-0.015389007853963133, 0.52427017550296084, 0.85363422070244677, 0.53571751658537292], [0.84970705651731993, -0.80841841103541645, -0.53940122662397316, 0.9589552267904462], [-0.87530909415531921, 0.11044484483749151, -0.99104130524487655, -0.67990494120575118]], [[-0.9795699120862762, -0.99534573722318109, -0.54600831741561096, 0.55752454708846932], [0.91936556804573888, 0.9810462241419271, -0.89760446816396078, -0.25905340460525883], [-0.61680090595180115, -0.70577689299229784, 0.87401725693846055, -0.8966589214938181]]], [[[-0.34230896840383873, 0.6477672054400434, -0.40723258876828838, -0.17653826664398276], [-0.71988713098725521, -0.58174904777398573, -0.70385079798003525, 0.29435971289514806], [-0.90597974329274322, 0.2707815824515698, 0.17102773744128097, 0.29575860641100982]], [[-0.24403686322913964, -0.21599038945745752, -0.92388407427751496, -0.89334183986602866], [0.8409093066881923, 0.86371913572432568, 0.62929342643887787, -0.020987035123334996], [-0.47740862478928503, -0.48276472331666587, -0.36295403953649585, 0.1356632216133864]]]]))
      res=generalTensorProduct(arg0,arg1,offset=0)
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[[[-0.18871410464909577, 0.095701296311958145, -0.093141142959525428, -0.17911303004570814], [-0.074033589291391227, -0.076538880870370127, -0.19153442913522611, -0.10512501295798976], [-0.093059363224223091, 0.083839040336359444, -0.10064900555847263, -0.1832481738476372]], [[-0.18293747285083792, -0.1507655370691563, -0.069082105596629931, -0.033435407550207394], [-0.091353094567529894, -0.067549383688413442, -0.088460852965961637, 0.051786593733240877], [-0.078091231506431519, -0.024670955618573315, -0.025838609948732841, -0.023166747965696649]]], [[[0.14799899426335453, -0.098466782259089725, 0.12704681628026632, 0.11020878931266792], [-0.057322122265239805, 0.11817187171630825, 0.051563183374996671, 0.055788620777412999], [0.14907704891013415, -0.15966323911085623, -0.15946130520844809, -0.17498566448697558]], [[-0.17318648517903706, 0.12042104255830807, 0.095109069407289901, 0.15853783252974968], [-0.1251835338511792, 0.18058337214379447, -0.082356529577865267, -0.11475138326647709], [0.074901355639111961, 0.08936688114933336, 0.14022929764821346, -0.074689890769266673]]], [[[0.0034731672523679144, 0.13232297495616702, -0.11465014995898853, 0.14414190433011961], [0.11355197309160346, -0.073276500132942957, -0.1919282198604933, 0.1004776267922096], [-0.1317054003761704, 0.089410497079379522, -0.0057484854562777025, -0.02170645057584791]], [[0.18726083437334537, 0.11964094754575859, 0.19074367653454147, 0.17153834374809204], [0.10688580082949631, 0.15314665949186368, 0.079851420221976513, -0.0061155952085536472], [0.097749502916676848, -0.026491583464529001, 0.15810920239621459, 0.0078204217019405796]]]])+(1.-msk_ref)*numarray.array([[[[0.34745704451387632, 0.5109682497863326, 0.41448967282252575, -0.49258274774331384], [0.35824220170104404, 0.18200929052777007, -0.43330084288752119, -0.24402768253838736], [-0.10489183245429919, -0.2049511070374595, -0.0035576863722390837, -0.6541452235045494]], [[0.090797248171413061, 0.38625100463719925, 0.45513409817130884, 0.18158000686944709], [0.099698994525102183, 0.13993010243622336, 0.50760119691058359, -0.27200531979604442], [0.34778346091272538, 0.58252282931955546, -0.61269798694676225, 0.31413605732982874]]], [[[0.010126824625816206, -0.34499898721522138, -0.56173888074420075, -0.35253197548019483], [-0.55915458789329264, 0.53198435861011917, 0.35495606193770196, -0.6310459711160481], [0.5760021551753377, -0.072678861763445193, 0.65216039853863961, 0.44741533483871443]], [[0.64461158266738017, 0.65499295461838836, 0.35930389581813826, -0.36688221661401876], [-0.60499376977154662, -0.64558307825841688, 0.59067375354575169, 0.17047157438953825], [0.40588936355697891, 0.46444052066981123, -0.57515205430695315, 0.59005153115201936]]], [[[0.22525837427375195, -0.42626691402701605, 0.26798173394339647, 0.11617201596195087], [0.47372584347680835, 0.38282328782654745, 0.46317304283193228, -0.19370509247138337], [0.59618515124123717, -0.17818936889306028, -0.11254578070619144, -0.19462564234956642]], [[0.16058985345954929, 0.1421337110003566, 0.60796719863805204, 0.58786870661694124], [-0.55336517830517318, -0.56837531674852215, -0.41411013810642211, 0.013810638484736695], [0.31416147577363912, 0.31768608704033685, 0.23884398139878035, -0.089273958821081384]]]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_expandedData_rank1_taggedData_rank0_offset0(self):
      arg0=Data(numarray.array([-0.94641023326368012, -0.091133406436509912]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([-0.93645042513520926, 0.63144296377043485]))
      arg0.expand()
      arg1=Data(0.551772692255,self.functionspace)
      arg1.setTaggedValue(1,-0.217985618553)
      res=generalTensorProduct(arg0,arg1,offset=0)
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([-0.52220332238531031, -0.05028492502381593])+(1.-msk_ref)*numarray.array([0.20413272516702297, -0.13764548503823859])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_expandedData_rank2_taggedData_rank1_offset1(self):
      arg0=Data(numarray.array([[-0.86179230166054888, -0.08790056967533566, -0.72606958634543317], [0.25800014338293975, -0.040211852178640095, 0.93813757168505374]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[0.78403659255511404, 0.81484777459957325, 0.12338067180412504], [-0.40699260382757951, 0.22355522518982696, 0.63627415555011524]]))
      arg0.expand()
      arg1=Data(numarray.array([-0.007940347454074681, 0.80586400063775243, -0.92568715726410433]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([-0.63642462565249369, -0.6533727547968311, 0.50704695488103613]))
      res=generalTensorProduct(arg0,arg1,offset=1)
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([0.60812031693155622, -0.90287579670718177])+(1.-msk_ref)*numarray.array([-0.96881973621547746, 0.43557609524398644])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_expandedData_rank3_taggedData_rank2_offset2(self):
      arg0=Data(numarray.array([[[0.76158479760102371, -0.50443632444032294, -0.65567925551363326], [-0.0099323172676462068, 0.23556812200187638, 0.20967778832212014]], [[0.3764406548318584, 0.30521098135021418, -0.90740333172920029], [-0.65242344585712586, 0.34937327359943082, 0.38167564765917072]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[0.12030506595888246, 0.23349901013895868, 0.30287340830899789], [0.96585416263111568, 0.71070867441990204, -0.52474979611164518]], [[0.33544545973669915, 0.79586504015252668, -0.47558341703662799], [0.3684566172680761, 0.17881607120392795, 0.84399884765577293]]]))
      arg0.expand()
      arg1=Data(numarray.array([[-0.64312075575133587, 0.047256758419021772, -0.31099451816258794], [-0.050058396123457305, 0.61436855471235785, 0.82502943619644187]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[0.84690162090075871, -0.3164488871747384, -0.30117270708884591], [0.73092339538348905, -0.66231363892937245, -0.52814813981644337]]))
      res=generalTensorProduct(arg0,arg1,offset=2)
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([0.0084968280190332035, 0.61672081395926859])+(1.-msk_ref)*numarray.array([0.44917783346994661, -0.11940374003689874])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_expandedData_rank4_taggedData_rank3_offset3(self):
      arg0=Data(numarray.array([[[[-0.023271697079988218, 0.44881113405084383, -0.038035333960359408], [0.044406190876337792, 0.18703529603056279, 0.53316540480034247], [0.13194523574700612, 0.49673284913266347, -0.17496510104218399], [-0.2420110931103221, -0.31925440620006484, 0.21820257881614036]], [[-0.8584188747994359, -0.41050143057616584, -0.48923021962591373], [-0.95583368742907515, -0.74686591403995206, 0.14548393308574514], [-0.98316747991720099, 0.34947936525950629, -0.1541344931044093], [-0.16128250695530588, 0.21019566081516894, -0.84017881883238488]]], [[[-0.078670793291998997, 0.60203961406645101, -0.61920827608609619], [0.46426347310587612, 0.47563549328233368, -0.32052272051627551], [0.43408536735471226, -0.046257611145800626, 0.093869888237419374], [-0.62000963374762241, -0.084127559960014198, 0.69355278377446861]], [[-0.94301119780121367, 0.2292438445123639, -0.39670714365424509], [-0.85124247555460331, 0.057181062325474707, -0.53787290345083294], [-0.64785124907906955, -0.1699389856942104, 0.24541266209601842], [0.16906315891492052, 0.34569613626841722, -0.027032362849786384]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[-0.45204140408872195, 0.84157168896486234, -0.88609916798142008], [-0.61689236366243438, 0.23838034397781138, -0.61087710594361111], [0.98029591713584252, 0.83640306329287872, 0.8926784027668353], [-0.37831455337962816, 0.36725728776817212, 0.17983971334713189]], [[-0.73261037203634971, -0.50162153458893544, 0.093198351416201142], [0.44827477866292598, 0.87901440992812652, -0.17549451064484467], [-0.98091343109535067, 0.48856726363043057, -0.015025729992678594], [0.57571859286345384, -0.033550279925239845, -0.22579239943428453]]], [[[-0.90530178918510096, 0.34941327432497604, 0.24155019355177165], [-0.79555986657792599, 0.70455816577049535, 0.13164151580573979], [0.58914356238017329, 0.92644878166692002, 0.47136926030179893], [-0.91992876282605973, -0.5416670591877939, 0.74536775594104387]], [[0.77806396874936268, 0.041420917903924215, -0.99463709413009038], [0.40028852194289422, -0.5523797668793069, 0.99940222297299997], [0.58558403048497065, -0.10956927179097176, 0.56362032850854904], [-0.97480712706121952, -0.96604432048747668, 0.21582857277058443]]]]))
      arg0.expand()
      arg1=Data(numarray.array([[[0.21099833150713931, 0.55106752072105003, -0.069742217069671764], [-0.51808982379500312, -0.18938190285629264, -0.65508499539079068], [0.17184283196252226, -0.12675847620024161, -0.49377858693564369], [-0.26778199841214123, 0.26441831010836392, -0.35144269610653778]], [[-0.2265628119264631, -0.65711768626749611, 0.86831206621424895], [-0.11292907527676532, 0.22505563068312218, -0.04318305154131985], [-0.70037921800856306, -0.4745290485728888, 0.71560575032881868], [0.87351173530420545, 0.85869702662027581, 0.55406530995188086]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[0.56460583129489761, -0.21250509218291702, 0.78507310094504024], [-0.67161856931190123, 0.48562833948625372, 0.77754955022784777], [0.54519513533299935, -0.71973746921103166, -0.20724482485719542], [0.79090365174046773, 0.40747814623722411, 0.05293886395933356]], [[0.65572527887950427, 0.48920593289907921, 0.75890325129943337], [0.50339236463816373, -0.89059743999206775, 0.113859325093143], [-0.64517734051272946, -0.57848212240263486, -0.65046057179431127], [0.70683514771938705, 0.62269290525594378, 0.4271216212104374]]]))
      res=generalTensorProduct(arg0,arg1,offset=3)
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([-0.25326961350827443, 1.1621801472653612])+(1.-msk_ref)*numarray.array([-2.0498195487495923, -2.0656149551592735])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_expandedData_rank1_taggedData_rank1_offset0(self):
      arg0=Data(numarray.array([-0.81093360535334336, -0.39242693213442248]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([-0.052139559734571517, -0.90265660367246259]))
      arg0.expand()
      arg1=Data(numarray.array([-0.93917458385554231, 0.69120976842649839]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([0.71876700458624665, -0.89052590229119066]))
      res=generalTensorProduct(arg0,arg1,offset=0)
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[0.76160823134220079, -0.56052522956554995], [0.36855740068105336, -0.27124932888495534]])+(1.-msk_ref)*numarray.array([[-0.037476195170863646, 0.046431628477694734], [-0.64879978319165077, 0.8038390864445214]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_expandedData_rank2_taggedData_rank2_offset1(self):
      arg0=Data(numarray.array([[-0.43003857651486843, 0.49031735302685919, 0.43191929782592409], [-0.44735902925049209, -0.83885479745057179, -0.65640628378777133]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[0.57044956725806517, -0.13631637120186979, -0.38376213959514516], [0.74791438940077981, -0.39304764527763458, -0.044576542585514689]]))
      arg0.expand()
      arg1=Data(numarray.array([[-0.35252234899281265, -0.49346462298454008], [0.94272012064278199, 0.21854396001805432], [-0.090843025628170038, -0.10203929875079409]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[-0.98735377912086064, -0.15078569098493677], [-0.30009068831298102, -0.83728054919335504], [0.48050840862620703, -0.77493474828059417]]))
      res=generalTensorProduct(arg0,arg1,offset=1)
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[0.57459338750757538, 0.27529197775768532], [-0.57347130715922734, 0.10440844228615202]])+(1.-msk_ref)*numarray.array([[-0.70672919735566475, 0.3255100310196673], [-0.64192556396239309, 0.25086027210156425]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_expandedData_rank3_taggedData_rank3_offset2(self):
      arg0=Data(numarray.array([[[-0.10485950395224997, 0.11932909074548004, -0.17554644391917229], [-0.56485425714905735, -0.96909258385729902, -0.73840582030493196]], [[-0.75589055641019676, 0.45981948128264949, 0.11729013227947926], [-0.54817115862897792, 0.31135386944024024, 0.26363585248891996]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[-0.94708435444011307, 0.30228701229600796, 0.46406434255366236], [-0.31404779782311243, 0.63381566286397661, 0.91672078871275953]], [[-0.18362232349837981, 0.83941870742527724, 0.39259922906836708], [0.054485735360924714, -0.43982428656881112, 0.27701618596954591]]]))
      arg0.expand()
      arg1=Data(numarray.array([[[0.77948272373792782, 0.13006236344522293], [0.38723390129762336, -0.98929903482666903], [-0.85315423501157195, -0.50266990322790051]], [[-0.80986771614861564, 0.51426447600874847], [-0.48999600364541496, -0.74553424440841232], [0.43446163146145, -0.12390721585284603]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[0.47347145669149371, 0.75024505860799851], [-0.76933607345319799, 0.22289247063394169], [0.31434509658144649, -0.57198247908040512]], [[0.44873671436788864, -0.297999562161813], [0.74653313314738856, 0.97797501565461387], [0.20102278169373156, 0.2709050939388542]]]))
      res=generalTensorProduct(arg0,arg1,offset=2)
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[0.72574001274433053, 0.48005252281917926], [-0.10528887607177012, -1.1588664106756716]])+(1.-msk_ref)*numarray.array([[-0.018579982752526841, 0.053181789343543395], [-0.85753046730524263, -0.54655030452935882]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_expandedData_rank4_taggedData_rank4_offset3(self):
      arg0=Data(numarray.array([[[[0.76216421057665906, -0.11151118959007444, -0.068744494186866012], [0.26714709551176363, -0.58113540227235227, 0.082492625197026159], [-0.31974204713300836, 0.96815196690514838, -0.10497168330707352], [0.30557824027964386, -0.37169784224984181, -0.76960452661601586]], [[-0.66140790531070426, 0.67104562493302877, 0.81699013105896823], [0.58013672280031581, 0.35405184531789069, 0.64245465193343576], [0.88307737654852092, -0.38824979430000339, 0.66078552689700909], [0.45295605528794503, -0.76593692936570568, 0.97491681186499557]]], [[[-0.32482244494951251, -0.58474906779356939, 0.79370357650367884], [0.66522471974098685, -0.81322802226108148, 0.80437564833520914], [0.55377040090917751, 0.52271686739867151, -0.68807529449028815], [-0.98635410214504393, -0.64032090916031414, -0.77596640017843588]], [[-0.26698222276704509, 0.29099051699381251, 0.36462046624228983], [0.92624713156326544, 0.23094546306887187, 0.49585077225482221], [-0.6906318880720721, 0.22752293067395479, 0.23410130911167903], [0.1602125998893944, 0.5499249951934515, 0.59116164839397989]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[0.55457676839884873, 0.92057026166155032, -0.18456434792003829], [0.99207458826973971, -0.75122058896744592, -0.5388281396032728], [-0.58542573052441194, 0.16359984721317034, 0.66863622060889405], [0.36938231489752349, 0.75688916158403874, 0.013638092586733652]], [[-0.20439392719286764, 0.62898386828680519, -0.3821864083426727], [-0.71644110726724586, -0.60891484062985968, -0.18137782801073365], [0.89095632915811085, -0.86120192711404298, -0.26327189111348748], [0.99448715978816948, 0.92366532248243671, 0.86419795791161169]]], [[[-0.4934104959479193, 0.06217446998718601, -0.17209568597747205], [0.79952613143722173, -0.95621809843596961, -0.40294582170272575], [0.81252635003968088, -0.72231639868909725, 0.67382790805076187], [0.13997673579011938, 0.25854445978873719, 0.51630929969739681]], [[-0.22524179127382271, -0.4557419901805313, -0.39060121300778228], [0.51087724889204211, 0.73403140208526696, -0.011429786558439625], [-0.92131138900668086, -0.16787245920439142, 0.89054733396048835], [-0.27004661203661273, -0.81032704309428261, -0.58294106839686499]]]]))
      arg0.expand()
      arg1=Data(numarray.array([[[[0.46632327618584668, 0.54768954818011717], [-0.86631588907716406, 0.8773294214482108], [0.40000761133211671, -0.26263095353977217]], [[0.55334609787097588, 0.41400961992580654], [0.012707998031989964, 0.4436401402162975], [0.16401551761336952, 0.23792612826536508]], [[-0.70332133280852749, 0.44820163684945413], [0.10381590351226433, -0.72507145125022299], [0.38050917376193416, -0.09290310711123051]], [[-0.52134474371057227, -0.10136196552260635], [0.42695095427934882, -0.45037654230996904], [0.2377329365063976, 0.26912307607350172]]], [[[-0.2190707347025449, 0.30552595983095898], [0.34933172998699558, 0.48137897687074194], [-0.92301966852144002, -0.45804330000003124]], [[0.62578450956239151, -0.58804111102470524], [0.017535068708899093, -0.24977877220001554], [0.10953495075449338, 0.69851224909396681]], [[0.53738334213643668, -0.40136990969029385], [-0.12984431637295457, 0.37308741818102753], [0.4924918973613075, 0.77011355193305753]], [[0.55856432117603427, -0.9875309734382951], [-0.60140351848032014, 0.63960264193919514], [-0.60554550235402882, 0.83873539816094]]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[[0.30830107707743126, 0.014052413833217869], [0.55330189662959195, 0.45262877866984041], [-0.16559183286823664, -0.97303121465795028]], [[0.43880534888085632, -0.86558589779852202], [-0.9884792902001851, 0.62572845497277396], [0.36139438841457094, -0.33535746144469525]], [[0.68683735248519073, -0.46312213732476182], [0.29054369696959448, -0.56425011727518815], [0.82631071029169845, 0.83127975293909584]], [[-0.40632777041273149, -0.42331725679595511], [-0.10880810033197807, -0.82150908272530265], [-0.26475275882777827, -0.32352307461313035]]], [[[0.059516855820729297, 0.011819970142830538], [-0.15108464148034484, 0.42371568740125132], [0.38876644290218243, 0.46260549543939744]], [[0.3583012968766488, -0.97358382717892744], [-0.13973380912907585, -0.79670453975704802], [-0.4784085382949026, 0.25946865098942462]], [[-0.74118583042183483, 0.81856524575431577], [0.36920686234295896, -0.98047292603869129], [0.41221535177766189, -0.15646681122862649]], [[-0.25537837590311985, 0.11279275697229596], [-0.70035966157422958, -0.26759479364826522], [0.28704877073116841, -0.49897934627509311]]]]))
      res=generalTensorProduct(arg0,arg1,offset=3)
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[1.4014851013086347, -1.0401604481680022], [0.19861405876142441, 0.18650427001192044]])+(1.-msk_ref)*numarray.array([[-0.42432946404673438, 1.6795795007744545], [3.1911702455069832, -2.5271391347119501]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_expandedData_rank1_taggedData_rank2_offset0(self):
      arg0=Data(numarray.array([-0.61744744005378682, 0.78407875472531208]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([0.15328126173763756, -0.29610785688177543]))
      arg0.expand()
      arg1=Data(numarray.array([[-0.65956250657364568, 0.5161087554015853, -0.57196224877773405, -0.45688881094626499, 0.97787159955284553], [0.94311245362465956, -0.15706654851448132, -0.74352187528711666, 0.54825670301162188, -0.15554680986630642], [0.27881899148375378, 0.45099071764451293, -0.22909140583106424, 0.69007356363489047, -0.33285602600020736], [0.84943509185226374, 0.5205345179133094, -0.27403125119106919, 0.23889392066692361, -0.92940723560490812]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[0.59966335282802596, 0.17077355892679469, 0.9959503889111665, -0.070412846740986135, 0.59088643356084503], [-0.525480026485875, 0.56492845607465347, -0.61829320732193915, 0.37440875342310576, -0.54896285096918884], [-0.77999863417463966, -0.57531538082196176, 0.72034652216901573, 0.17661803094531359, 0.61064324890167976], [-0.12642223796709651, 0.4516015822866053, 0.82371931051457881, -0.48477419355905194, -0.15096721262509805]]))
      res=generalTensorProduct(arg0,arg1,offset=0)
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[[0.40724518123935649, -0.31867002981205489, 0.35315662631521905, 0.28210482670798992, -0.6037843158452062], [-0.58232237017339183, 0.096980338298350399, 0.45908567852002113, -0.3385196977668552, 0.096041979560484006], [-0.17215607253002235, -0.27846306409762467, 0.14145190206871378, -0.42608415531515709, 0.20552110116030475], [-0.52448152295603356, -0.32140270554520495, 0.1691998945426619, -0.14750443976020441, 0.57386011839171724]], [[-0.51714894881776952, 0.40466991023810567, -0.44846344777153485, -0.35823680993467599, 0.76672834605864415], [0.73947443820395675, -0.12315254376823732, -0.58297970608615124, 0.42987643296715772, -0.12196094898146842], [0.21861604763634906, 0.3536122402833845, -0.17962570420229196, 0.54107202044370328, -0.26098533836905868], [0.66602400903950398, 0.4081400565970083, -0.21486208218971273, 0.18731164782796897, -0.72872846792579105]]])+(1.-msk_ref)*numarray.array([[[0.091917155339301948, 0.02617638658372589, 0.15266053224039444, -0.010792969990997256, 0.090571818079859076], [-0.080546241477682121, 0.086592946538618445, -0.094772762942117561, 0.057389846130309681, -0.08414571844364796], [-0.11955917479992276, -0.088185067469459755, 0.11041562380638584, 0.027072234628914782, 0.093600167663219741], [-0.01937816014729242, 0.069222060335604421, 0.12626073523333151, -0.07430680004657722, -0.023140444832189237]], [[-0.17756503025644671, -0.050567392545886762, -0.29490873522105626, 0.020849797145418309, -0.17496611550221741], [0.15559876447691104, -0.16727975441979584, 0.18308147654465867, -0.11086537357389295, 0.162552213308196], [0.23096372393616452, 0.17035540444631359, -0.21330026489170759, -0.052297986629895897, -0.18081626375160095], [0.037434617946634767, -0.13372277669530544, -0.24390975970860565, 0.14354544752636186, 0.044702577789833095]]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2, 4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_expandedData_rank2_taggedData_rank3_offset1(self):
      arg0=Data(numarray.array([[-0.22765564994568144, -0.60373793374758811, 0.25455050050633288], [0.4731798751355667, 0.66270455278684071, -0.24625943586097976]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[-0.57497081333594147, 0.95149881386233459, 0.940454572360371], [0.17139802463573783, 0.71441013615921234, 0.72871190358639715]]))
      arg0.expand()
      arg1=Data(numarray.array([[[-0.75519110511663334, 0.23112600831666619, -0.83167017734777415, -0.044011098608853327, 0.38172491135256381], [0.41817917987299769, 0.39278183667450883, 0.38212416715622699, -0.43194053720201242, 0.051507751829669601], [-0.40742254893414676, 0.79489192793474017, -0.342252886584963, -0.28491259638461819, 0.86130488472970357], [0.089889725367398254, 0.87622563390165209, -0.98501324262606471, -0.78057205292349474, 0.1437932409152487]], [[-0.93281064733773822, -0.22487138889920866, 0.93393759556039835, 0.38945507043976701, 0.69335766040648505], [-0.46229939457015146, -0.14713029800822031, -0.90039880352765667, -0.43189849980214112, 0.9502140813544353], [0.31375848160226427, -0.74421356640840441, -0.040700058793948779, -0.40923948464444604, -0.73199455403218638], [-0.47333003340153001, 0.26587693130640266, -0.50035259790973541, 0.088400833305785742, -0.83379813680455017]], [[0.7514513896491013, 0.33038253326884659, 0.42777325526458454, 0.87282576668240441, -0.50286471702840418], [-0.46688438292642886, -0.51984404931194894, -0.25896983169116283, 0.17303366464004233, -0.6433989711863719], [-0.39935884050015025, -0.82815519992549325, -0.97704118131802398, 0.50964849875968743, 0.33698065987473136], [-0.81613408570100132, 0.99642909980253336, 0.02935174458377543, 0.20123057918228104, -0.061537296598197511]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[-0.0085837364835954499, 0.21565488067279848, -0.17020433950332348, -0.29897576782819302, -0.047740899271158987], [0.18260382417513266, -0.38654762329407633, 0.9623147485744834, -0.38112109435814046, -0.46133533926781145], [0.86294834157690326, 0.92825905483465099, 0.76827193174082931, 0.82986761291481947, 0.20484459800643906], [0.37400885518590155, 0.089662265717309175, -0.30444295018565981, -0.57853738439845559, -0.75239844647273024]], [[-0.82031791461897186, 0.081520054724226076, 0.29754885394263186, 0.62131121943419276, 0.16637200842946376], [-0.1553455475257397, -0.9352058865641224, 0.83643044244087683, 0.32437784532788316, 0.9702527035523778], [0.15868785777290806, 0.085991990927985373, -0.26377476025252222, 0.25251720001007683, -0.90448699884799733], [-0.7980308499562645, 0.17207057891937794, -0.4476087819540977, 0.79592831144519538, -0.39684325922155161]], [[-0.13972349440416654, 0.6444672136155043, 0.89060019184157646, 0.39116171271654121, 0.90841978022857939], [-0.029818824199719041, 0.16574115303631354, 0.60466073157014866, -0.498772969612858, 0.0049903163077922308], [-0.22458405019580696, 0.4839086478591379, 0.41480745747365222, -0.0091753645013223917, 0.67669379751348857], [-0.97432102513529073, 0.97717200166916696, 0.92989931318083197, -0.22249909912506527, 0.79022467204123603]]]))
      res=generalTensorProduct(arg0,arg1,offset=1)
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[[0.92637902201131883, 0.16724528525241203, -0.26562924319745457, -0.002931188492374559, -0.63351261944285453], [0.065061174910292036, -0.13291742514143939, 0.39069128728365865, 0.40313301753240643, -0.74918384695556428], [-0.19833284492914427, 0.057541001721817975, -0.14621834897885239, 0.44166664361639713, 0.33163055186341572], [0.057556052499094484, -0.10635617924921476, 0.53379717483693545, 0.17555404624416188, 0.45499587090973326]], [[-1.1605710909932754, -0.1210189337202513, 0.12005190540740519, 0.022326901233900937, 0.76395100568075724], [0.0064807433361233485, 0.21636904440947829, -0.3521111560630576, -0.53321784425913799, 0.81252669709291725], [0.11349090616889486, 0.086874176840837647, 0.051686317723819819, -0.53152552822779442, -0.16052865295906021], [-0.07016323954898035, 0.34543012090507785, -0.80490253184892213, -0.36032228074216416, -0.46936761363926266]]])+(1.-msk_ref)*numarray.array([[[-0.90699972398110851, 0.55966311101683841, 1.218548931672478, 1.130949049983494, 1.0400799283024273], [-0.28084622307480139, -0.51172166522308427, 0.81121562991971252, 0.058705320833111974, 1.1931418176054247], [-0.5563898982639548, 0.003193514108758122, -0.30260773893301979, -0.24550885356770563, -0.34199819572154511], [-1.8906742458553465, 1.0311576428496729, 0.623674646494636, 0.88071665959415135, 0.7981816622957103]], [[-0.68933284213706625, 0.56483250397838958, 0.83239019081515875, 0.67767137313730874, 0.77265146067166901], [-0.10141183115032715, -0.61359651268571913, 1.2031167059818269, -0.19704638221629694, 0.61772290310468669], [0.097618784453994689, 0.57316531023971196, 0.24551206105355114, 0.3159523194726595, -0.11794989521446742], [-1.2160162781319572, 0.85037377041076745, 0.30567152751370286, 0.30732134641902742, 0.16337767070534726]]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2, 4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_expandedData_rank3_taggedData_rank4_offset2(self):
      arg0=Data(numarray.array([[[-0.062472111952893483, 0.079882180782946843, -0.31363518219691033], [0.30458538907885702, 0.54452338659307298, 0.54345129133121128]], [[0.41995514168851411, -0.054634460783814065, 0.66554571676373286], [-0.29122149838353706, 0.36785471375332124, -0.83790759709874219]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[-0.053198717736278711, 0.29523774914616174, 0.38579862467272052], [-0.74887151680254838, 0.19221485291519369, 0.95240130670444612]], [[0.070626901346258375, -0.69582624494625556, -0.70161068599337106], [-0.65544347131519265, 0.14339940025498166, -0.12027968619426033]]]))
      arg0.expand()
      arg1=Data(numarray.array([[[[0.9783951477327919, -0.99639523828280607, 0.49554518760074062, 0.20830396202395662, -0.99504642740430693], [-0.45397142788261302, 0.13515973901405109, 0.65111145117725777, 0.31130472596845493, -0.078250894864421383], [0.44527320846694507, 0.75124877377720001, 0.67081779772157679, -0.44814411315889213, 0.78130760151183543], [0.44284142622875988, -0.78034338999936526, 0.62587911060519863, 0.93116720851504176, -0.65576084360823717]], [[0.1703184827947879, 0.77016577081496518, -0.68709290008165769, 0.25620355049364663, 0.48597190509536392], [-0.60580179954791769, 0.68260145823643259, -0.18578620373732169, 0.69791846716051276, 0.239564128075896], [0.41622179707056639, -0.056253690951076463, -0.61282304505004648, 0.13247509381653999, 0.73459560143423852], [0.10536240080322101, -0.05863125927608781, -0.33270553339823783, -0.70561058608409444, -0.72901886536236615]], [[0.23968033467839511, -0.96632543038536345, 0.85243321511297721, -0.50299932591425844, -0.44612843069843877], [-0.4135025440516511, 0.57183447742892612, 0.27468309831171767, 0.7475752850787849, 0.54558653912280808], [-0.061578375276473585, -0.97774243171171915, -0.31351744468638065, 0.77197846058249597, 0.82572496631785186], [0.41579039261433204, 0.56117380312963427, -0.92080984197019866, 0.12395726976413579, -0.61341812705682952]]], [[[0.84405621757361704, 0.26673072022845146, 0.65647789582055927, 0.62245551114358988, -0.14520978299675491], [0.10815041940382319, 0.63426720462886732, 0.77453478520957364, -0.88683417219858196, 0.19439623392369709], [-0.0012726920896528604, -0.37736398337684007, 0.074745656215874368, -0.24038780499653134, 0.12851534500404216], [0.16418912057883062, 0.060276103298174011, -0.25371613479398736, 0.84342122254958585, 0.65503913657350998]], [[-0.041403903535493836, 0.78915611974199251, 0.18323453288001867, -0.61887786639271991, -0.69298190679107163], [0.30604450395841809, -0.73754235638271748, -0.40273672231069524, 0.57589080302361872, 0.75571582817498584], [0.36493563466814294, -0.80661712296406796, -0.43771652729512001, 0.79223680029928412, -0.22341557491106001], [-0.83773995919509536, -0.59245422691060057, 0.77287888195305787, 0.22812501367420679, -0.58982313107037165]], [[-0.41041112581937322, 0.96361509405301859, -0.27570411059300803, -0.60524638645437201, -0.91196456417669891], [-0.48263454327528543, -0.79985514975557059, 0.33214298527718222, -0.84732504218641558, 0.067773374412728238], [0.26416045312083369, -0.80214864516684092, -0.12682640764527608, -0.23405444832164379, 0.78875112325929053], [0.11407849555727778, -0.36366533177069527, 0.84571942340590578, -0.23460155517599923, 0.18195910596811804]]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[[0.60255097857507622, 0.83030307462178188, -0.43493704379761677, 0.94306604712609543, 0.32498088745410314], [-0.048406498440473511, 0.80704239634428454, -0.17752157465011797, -0.75302632811300962, 0.28313992520950593], [-0.072445905194245652, 0.47686623534450234, 0.4392858837105702, -0.0074922823611729417, -0.10312905949607365], [-0.040427286518492922, -0.2667919999034889, -0.64301237310225723, -0.81516114785061422, 0.35956719150060668]], [[0.33894413603186924, -0.64088512303439882, -0.58558313270004647, 0.54373806003235869, 0.43170741068339491], [-0.068488650207969348, 0.71122782376901927, 0.16443419665563641, -0.45908271963121661, -0.28505580906666639], [0.57287820098228082, -0.096421245461605132, -0.1630700039696984, 0.56018910661348809, 0.44531263839304946], [0.83133571349781987, -0.7058848273239815, 0.98903572798921813, -0.23781921759211233, -0.87493442819328626]], [[0.31184421518803562, -0.62627619971206028, 0.66505059535565736, -0.13952458831869397, -0.66428510161603183], [0.395173899428368, 0.06502493185953262, -0.63478852927925256, -0.42719776864334702, 0.050368559899385046], [0.94772062967329629, 0.30248308268231239, -0.25116398637423143, 0.72408026946201409, 0.80563504986211787], [-0.89442037803851138, -0.63992696766736601, -0.28832102608057752, 0.52518054444154005, -0.11499172894226506]]], [[[-0.78511361693366277, 0.016417826499402821, -0.34913291376082745, 0.33621487263349192, -0.93124179032128707], [-0.32380881243066773, 0.13392377748308215, -0.89202580567247058, 0.71443828375356344, -0.30563112244613522], [0.49791050514373358, -0.17790341521627573, -0.86528477289515204, -0.3847116825127066, -0.38946646647559402], [-0.35576703900348883, 0.10746634969511004, 0.71469556030611114, -0.10445476020056788, 0.65282500432277946]], [[-0.50357749702966759, -0.84485232008868483, 0.77608705582427384, 0.66802191950106127, 0.48336992865630113], [0.79761091310552068, -0.17330781195475176, -0.017789136626420232, -0.99413906612546632, 0.12428894368275434], [0.93862850106624673, 0.82055293122908735, 0.52896224746541987, 0.89258593341059123, 0.85985861307596245], [0.68377210575962022, 0.5802638762444865, 0.17256534238132404, -0.46508619387505856, -0.23670971954504894]], [[-0.7193072003420069, 0.28607392775821228, 0.32404878032014062, -0.92198032380533768, 0.86849253602284371], [-0.10502351230507601, -0.048564831664408725, 0.45406449230090118, -0.71548125292937925, -0.51539863529345742], [0.54893321410198492, 0.91075951988078208, 0.38919614229265864, 0.29969408631349626, -0.24775379020746535], [0.26305426424598077, 0.84206194585149108, 0.57769279777215576, -0.0047042450146994597, 0.88105974466891834]]]]))
      res=generalTensorProduct(arg0,arg1,offset=2)
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[[-0.11118584344638124, 1.4614771989148179, -0.20329997165146127, -0.31111335281187186, -0.67627723400113882], [0.046957792271288545, -0.77636628413665409, 0.055448351054555228, -0.61517313463907142, 0.36045699249790508], [0.36663137568948956, -0.73486149953562885, -0.27703537098553216, 0.027434963650635441, 0.097031469795852032], [-0.49381844311888795, -0.63381809704666658, 1.0263008404712848, 0.10020361274714182, 0.1523494266431174]], [[0.64394369733502455, -1.6984559757278128, 0.92021675370485978, -0.1630772915391564, -0.18983095634216296], [0.052732508919156706, 0.61423348036095893, -0.18561282274408661, 1.7702385631254458, 0.48175590346386671], [0.036543374195461192, 0.15313692536951462, 0.03001962809444185, 0.87589896656469257, 0.057026162380996559], [0.0053753981229387321, 0.1182080564764294, -0.68226270534622679, 0.54696723561381733, -1.2040140075786363]]])+(1.-msk_ref)*numarray.array([[[-0.0055917331660626513, -0.3772318610655972, 0.82608308780700423, -0.94493956954764358, 1.4713322370638195], [0.43059160613476916, 0.012276963355520032, 0.91013555832751603, -1.667826881145777, -0.31788750572495295], [0.86897066981615978, 1.2212195117642599, 0.95191984825343856, 1.1902336573946035, 0.668749235775982], [0.55091439478078374, 0.39194394558252199, 0.2631241096457097, 0.16011264031991246, -0.017064558645216277]], [[0.11681977709543855, 0.77766734058696874, 0.21129007390672858, -0.22752983433854462, 0.76385787228402402], [0.10622666238240355, -0.5903046084405742, 0.8459257915525521, 0.041209414230505725, 0.46314635886296107], [-1.326450178829683, 0.013273215573707378, 0.91689886047775815, -0.55423995626066502, -0.47400985659877992], [0.34581204175792873, 0.83279852322119519, -1.0445033560802699, -0.2582268004065234, 0.14706937171300877]]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2, 4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_expandedData_rank1_taggedData_rank3_offset0(self):
      arg0=Data(numarray.array([0.41163818124656726, -0.16510415100954212]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([-0.51321907526443566, 0.011656414369006107]))
      arg0.expand()
      arg1=Data(numarray.array([[[0.86840691729064745, 0.061607198000248831], [-0.84934261223173446, -0.61231283653869828]], [[0.9235281722027715, 0.72844077459248879], [0.79140328958490613, 0.13213939475866909]], [[0.87526379780260655, -0.71805135192420311], [-0.84875821160520504, 0.0090828053068996439]], [[0.23045767707793186, -0.11819670149741546], [0.4050831000912507, 0.73420453320166024]], [[-0.48240265219382006, 0.92661614087867528], [-0.71558668857675301, -0.62668428505577967]], [[-0.97829805457857799, -0.88862977775933039], [-0.48626482233606616, 0.033102516754376587]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[-0.66952854111305449, 0.5369077101312123], [-0.86740980752747365, 0.23012580422539686]], [[-0.33904990362806342, -0.18431952192195555], [0.26220048256550332, -0.39202248134980788]], [[0.30251174997518371, 0.69596714242988589], [0.55623511340984999, 0.64031410639351982]], [[-0.50893958201556555, -0.23829955408216641], [0.50918154491836742, 0.12880165658627929]], [[-0.53231668342229965, -0.86924447937749338], [0.30951694121912365, 0.50092117466605779]], [[0.52515787810859416, 0.96335739376937868], [0.21394252044528184, -0.16711899300109034]]]))
      res=generalTensorProduct(arg0,arg1,offset=0)
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[[[0.35746944401546027, 0.025359874936519585], [-0.3496218481542796, -0.25205134238671639]], [[0.38015945713551541, 0.29985403559909274], [0.32577181075728112, 0.054393620129480728]], [[0.36029199783842814, -0.29557735254771778], [-0.34938128654325568, 0.0037388294571488387]], [[0.09486517904666858, -0.048654275233739511], [0.16674767057528361, 0.3022266187101163]], [[-0.19857535037758445, 0.38143058294501081], [-0.29456280300998833, -0.25796717931616647]], [[-0.40270483190378081, -0.36579394551839201], [-0.20016516707060342, 0.013626259791455599]]], [[[-0.143377586810086, -0.010171604121907844], [0.14022999090874727, 0.10109539102896632]], [[-0.15247833480493281, -0.1202685956498261], [-0.13066396823307475, -0.021816762586544802]], [[-0.14450968624558688, 0.1185532588406995], [0.14013350393945467, -0.0014996088589806294]], [[-0.038049519117583155, 0.019514766052859057], [-0.066880901328879319, -0.12122021612161729]], [[0.079646680335212092, -0.15298817125151196], [0.11814633269119441, 0.10346817683515638]], [[0.16152106973548283, 0.14671646501875235], [0.080284340657602038, -0.0054653629250104906]]]])+(1.-msk_ref)*numarray.array([[[[0.3436148187331885, -0.27555127849588645], [0.44517125929455215, -0.11810495243904273]], [[0.17400687800849074, 0.094596294593968913], [-0.1345662891961564, 0.20119341536121788]], [[-0.15525480057888996, -0.3571836132522978], [-0.28547047053381169, -0.32862141356205571]], [[0.26119750164749694, 0.12229987678197682], [-0.26132168162472125, -0.066103467085737666]], [[0.27319507601382398, 0.44611284788483296], [-0.15884999835115532, -0.25708230204248905]], [[-0.2695210405707259, -0.49441339077947732], [-0.10979938250267017, 0.085768655047143288]]], [[[-0.0078043021070899046, 0.0062584187472036288], [-0.010110888144280065, 0.0026824417310520022]], [[-0.0039521061684602947, -0.0021485047238194188], [0.0030563174725368684, -0.0045695764845793295]], [[0.0035262023092039142, 0.0081124813993758427], [0.0064837069684963167, 0.0074637665504427297]], [[-0.0059324106567622001, -0.0027777183463311124], [0.0059352310766191867, 0.0015013654805840961]], [[-0.0062049038375053692, -0.010132273839595047], [0.0036078577210774117, 0.0058389447781168544]], [[0.0061214578363817749, 0.01122929296722166], [0.0024938026694597661, -0.0019480082313517405]]]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2, 6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_expandedData_rank2_taggedData_rank4_offset1(self):
      arg0=Data(numarray.array([[-0.67886058044453401, 0.92223592729283865, 0.44250862440707195], [-0.66951824189692744, 0.30893965238059562, 0.16098098996582477]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[0.73799877346910248, -0.24982631821150281, 0.019844137763172398], [0.97028357040155555, -0.52116079111795943, -0.13660689083934785]]))
      arg0.expand()
      arg1=Data(numarray.array([[[[0.074480231357040516, 0.40221445396126709], [-0.43845359935840422, -0.29986868110030751]], [[0.98917425108152557, -0.34621442869062014], [-0.92284369142854383, -0.050080161835973191]], [[-0.90348298254843051, 0.48586745994351688], [-0.57416345212505004, 0.58399320409777622]], [[0.54172612617996063, -0.92304397359644108], [-0.60879352135339548, -0.17456041092155505]], [[-0.56558459011874485, -0.90151040238189784], [-0.11935654244697491, 0.32757086663325308]], [[0.51008261582028513, 0.93178241518737503], [-0.55858167217032229, -0.91306666908195422]]], [[[0.17480695564898596, -0.85426867066290413], [0.11159485133324143, 0.73337132818439854]], [[0.47185415475088011, -0.6547604763676409], [-0.57099585411765452, -0.52564746351423897]], [[0.62388143414434971, 0.92765850161823171], [0.20309687384460839, -0.92416350034587125]], [[0.62983724066383884, -0.56009493705718949], [0.7867947279140397, -0.0071474034196941094]], [[0.428059861917504, -0.5757072340467817], [0.64840014160792192, 0.64298901269050912]], [[0.88917141578509784, -0.79219066760677848], [-0.79274093127723333, 0.39545394987938565]]], [[[-0.92233854157951978, -0.93143563878499758], [-0.14961930402656454, -0.96066744584157937]], [[-0.5458869449140582, 0.19854242791884835], [-0.87895922794561865, 0.61298990920601204]], [[0.79227792471433589, -0.3308289220772922], [-0.4879024483389105, 0.15768743000395591]], [[-0.77363685815335015, 0.91575244873880268], [0.99477519157765038, -0.80880679124758892]], [[0.77807159111476487, -0.22551677699289741], [-0.28491309742487947, 0.87670530016373127]], [[-0.49339217610762387, -0.11707531933166759], [0.69046348038481664, -0.17899952113656181]]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[[-0.2318105422839436, -0.30788316536630367], [0.71592575902369449, 0.75321244586053848]], [[-0.059314805498188239, 0.027662834844711881], [0.48175497667289258, -0.8208037245840496]], [[-0.83272619723342256, 0.47703583047051956], [0.16726183972297459, 0.54984620304122656]], [[-0.25504648760816884, 0.41683569355315964], [0.0099968305861344309, -0.086942850138502115]], [[-0.610178281748746, -0.90637750237473469], [-0.22238581500078913, 0.50460379401367805]], [[0.12841979026035544, 0.17729278437328455], [-0.16162627128397022, -0.32408682353484686]]], [[[0.77210784445649461, -0.47355966080984402], [0.89558454364632234, 0.9197982887540046]], [[-0.15881352363683421, 0.97240846394962643], [0.93304075542130271, 0.52469201512981622]], [[-0.29253434619334873, 0.72065987172233581], [-0.6535818393690136, -0.44520143060188322]], [[0.32429264524784829, 0.18446926709589739], [0.40239255782567573, 0.34419754726760066]], [[0.37518411284809883, -0.24077500487888415], [-0.63875359446757729, -0.83351283199560577]], [[0.29653010945947922, 0.7696533956742786], [0.28678243071017695, 0.34139649973259534]]], [[[0.45064894118257004, -0.7197031876782396], [-0.25126906876450961, 0.93804143218895475]], [[0.54463904590797396, 0.39844173337960176], [0.77280624533352626, -0.20645830528587927]], [[0.92430648419457473, -0.9425470652394492], [-0.11334110863257174, 0.45887574819839294]], [[0.12624046208499551, 0.26118141315951982], [-0.67124748036176651, -0.93801995791295489]], [[-0.051821025995563597, 0.72879735115133459], [-0.89054262559953057, 0.82723957654699021]], [[-0.069395325965524002, 0.31010321747117553], [-0.17958126839180966, -0.51311277181142767]]]]))
      res=generalTensorProduct(arg0,arg1,offset=1)
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[[[-0.29749119752248127, -1.4730531005678229], [0.33435781374932128, 0.45480678383499851]], [[-0.4779102333720342, -0.28095557039361513], [-0.28905772584792161, -0.17952020671228947]], [[1.5392946695069172, 0.37928908135211103], [0.36117912690071419, -1.178968700483813]], [[-0.12923896266536683, 0.51530685043136315], [1.5790928903830665, -0.24599339094572273]], [[1.1230286563052452, -0.018731138570411948], [0.55292785472095429, 0.75856227608421101]], [[0.25542055136583453, -1.4149438846646565], [-0.046359044755819867, 0.90533797725849907]]], [[[-0.14434004494944036, -0.68315081145697054], [0.30394289389398038, 0.27268583890589426]], [[-0.60437316777242089, 0.061476958251315585], [0.29996169849475701, -0.03018404032345158]], [[0.92518173609946341, -0.091963799943797719], [0.36861456349302563, -0.65112017523978116]], [[-0.29265465270217705, 0.59237797900286415], [0.81081035296502679, -0.015539254849018455]], [[0.63616860036111511, 0.38941495288089412], [0.23436230433218841, 0.12046301846884283]], [[-0.14623606901797082, -0.88743133472289126], [0.24022300597825857, 0.70467067671073225]]]])+(1.-msk_ref)*numarray.array([[[[-0.35502601625388897, -0.12319162110338686], [0.29962552485194616, 0.34469466463800763]], [[0.0067094364443650838, -0.21461135551238031], [0.13777211882568599, -0.74093100338919982]], [[-0.52312606832621156, 0.15330802154200759], [0.2844718205692679, 0.52611485127425828]], [[-0.26673569949686904, 0.26672187270254966], [-0.10647092995963345, -0.16876752000484679]], [[-0.54507003267123344, -0.59429119702861233], [-0.02221505050368526, 0.59704627918960196]], [[0.019315531807605979, -0.05528408575957891], [-0.19448942418967566, -0.33464778937657225]]], [[[-0.68887604638430977, 0.046383165306953106], [0.26223253857623796, 0.12332393387464727]], [[-0.049186246328849804, -0.53437025657885917], [-0.12439597781201561, -1.0416576470135732]], [[-0.78178975151572427, 0.21603878397674028], [0.51839581995880712, 0.70284267759494279]], [[-0.43372134518948835, 0.27263149503817125], [-0.1083144320266273, -0.13560149509237254]], [[-0.78049810162210553, -0.85351944730442841], [0.23877028527959859, 0.81099635129222047]], [[-0.020456374113227413, -0.27145113312610269], [-0.28175103531175666, -0.42228384973791283]]]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2, 6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_expandedData_rank2_taggedData_rank0_offset0(self):
      arg0=Data(numarray.array([[-0.9059188015735915, 0.11532057699535714, -0.56630120479341595, -0.87333089108090256, -0.1306448951421364], [0.6888731933892045, 0.82061546779703831, 0.35193651027413897, 0.068286112797158349, -0.98793788962904316], [-0.49123318878598399, -0.93655441558678776, 0.20710949699530157, 0.053492144659256446, 0.021537786388128977], [-0.50412409858207918, -0.23282038611369593, 0.9233618394759262, 0.040629132621340158, 0.25855741228762907]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[0.57976864348260082, 0.93362638386146424, 0.60681014704232727, 0.9842233221448613, 0.88297064537391301], [0.56375558391271263, -0.90190295611085602, 0.6584584897308472, 0.48240561262883075, -0.6631704773181839], [0.040583107884733183, -0.63526347523583127, -0.27794379416317261, 0.97023782425257243, -0.94056629709419282], [-0.24310079184683109, -0.64191849908623277, 0.88081242090891343, -0.83754860221998495, -0.24777124199197487]]))
      arg0.expand()
      arg1=Data(0.012859559073,self.functionspace)
      arg1.setTaggedValue(1,-0.106794515368)
      res=generalTensorProduct(arg0,arg1,offset=0)
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[-0.011649716344139414, 0.0014829717721994598, -0.0072823837961285293, -0.011230650184094394, -0.0016800357466607782], [0.0088586055241660737, 0.010552753084319527, 0.0045257483438011729, 0.00087812930137776851, -0.012704445652098682], [-0.0063170422097911603, -0.012043676832278468, 0.0026633368111818115, 0.00068788539418495242, 0.00027696643635890709], [-0.0064828136258182258, -0.0029939675086180909, 0.011874026120456342, 0.00052247273102719099, 0.0033249343170640645]])+(1.-msk_ref)*numarray.array([[-0.061916111306352842, -0.099706177199369236, -0.064803995573838938, -0.10510965270245497, -0.094296422156977311], [-0.060206004370025906, 0.096318289106927676, -0.070319755300825668, -0.051518273611553804, 0.070822969731635863], [-0.0043340533386819402, 0.06784265496887408, 0.029682872797230673, -0.10361607823286621, 0.10044732186975525], [0.025961831250886927, 0.068553375015740936, -0.094065935621182081, 0.089445597071324046, 0.026460609710688494]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_expandedData_rank3_taggedData_rank1_offset1(self):
      arg0=Data(numarray.array([[[-0.61731800244126744, 0.95212945166311846, 0.95605964728782467], [0.82692127633544366, 0.78251108224867982, -0.60796235740746152], [0.45770329055852077, -0.72512294954809997, 0.16793417219742368], [0.20579366611659178, 0.15259262805405305, -0.39859397943330821], [-0.59949224138810076, -0.68483119638666801, 0.86773107352986667]], [[-0.66821485980973505, 0.063751803188302425, -0.45993012890469154], [-0.48176779915314794, -0.019437265538098325, -0.30870379470537945], [-0.52338521258226312, 0.26079360133815221, -0.28576458573370944], [-0.16987666438451465, 0.20182581475568084, 0.15102369537990934], [0.82858689184871093, 0.37748787791827398, -0.78135612572953383]], [[-0.2343954977468945, 0.45396180837272881, 0.62099589856278747], [0.50093122138173207, 0.37205395595969892, 0.67131147595277452], [-0.23352329276698081, -0.41434372643076856, -0.96302584696094273], [0.11743117170589334, 0.45866780400514573, 0.32120656366213396], [0.58519567914958093, 0.41057743336828501, 0.5402419701896084]], [[-0.91725105165020082, 0.25131500995925649, -0.13292103436036595], [-0.92161977091594682, -0.99063366877552128, -0.58682168905689269], [0.93067771606942906, -0.16134484636654323, -0.80640483255583129], [-0.67653073802315422, -0.31817189968618198, -0.66900005323366352], [0.0756764851528553, 0.15991287457488124, 0.22800894501528446]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[0.73504631255220643, 0.012398403125670532, -0.91233665589209156], [0.34887943407699962, -0.37545261350452308, 0.7541701155194882], [0.67805416684170106, -0.11730504278352427, -0.18324735870088071], [-0.55014682453073349, -0.10281730563538005, -0.17910116866843251], [0.95145058010143257, -0.039705718722438554, 0.70489634091491804]], [[0.50736102519761195, -0.795008788827267, 0.32119493156335599], [-0.14239801602219759, 0.6851340234799701, -0.55697638378395142], [0.31362781080682267, 0.71217781645695388, -0.53818026255666762], [-0.65717461798885446, 0.44278417530367364, -0.69942662728606275], [0.36521381128062114, 0.1438880590963576, 0.60209443828818165]], [[-0.11921407232411063, 0.82193236852515228, 0.99192910466288153], [-0.51436960377491636, -0.27128535750664984, -0.30840655695180419], [-0.5734771424423073, 0.57678582921518062, 0.33988131963922541], [-0.39747722550715969, 0.43231276883822622, -0.82047364110385046], [0.96334317712315953, -0.98934300499701378, -0.16494780576557999]], [[0.59162109343112856, -0.58354404372233626, 0.55203758029858174], [0.90010626299927043, 0.90685114073580331, 0.91122898752392545], [-0.83728106947557102, 0.3600389205802299, 0.84783187613892519], [-0.75997802536601267, -0.80589712563766924, 0.4834436259286079], [0.62841207135298838, 0.71066170223957381, 0.38668323027993612]]]))
      arg0.expand()
      arg1=Data(numarray.array([0.26845757203588727, -0.45866066858540111, -0.52835952081950088]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([-0.72922775142588492, -0.18409249219640156, 0.89352412875268672]))
      res=generalTensorProduct(arg0,arg1,offset=1)
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[-1.10757124010494, 0.18430892178626546, 0.36672967219107599, 0.1958595551164696, -0.30530707138498381], [0.034380678981840135, 0.042687484607144929, -0.10913605137642662, -0.21796904732317515, 0.46213853091742563], [-0.59924876815725781, -0.39086154649624738, 0.63617594943593114, -0.34856014046670791, -0.31665749740035154], [-0.29128120674536107, 0.51700172124001365, 0.74992168602692022, 0.31778568445256755, -0.17350051743441863]])+(1.-msk_ref)*numarray.array([[-1.3534934382121149, 0.48857463749185809, -0.63659687428713652, 0.26007901014892476, -0.056672753529199427], [0.063368831072194515, -0.51995928289597859, -0.84068974259067275, -0.22723784113881379, 0.24517315061208944], [0.82193522078888148, 0.14946548702041984, 0.61570566632350743, -0.52284710695603298, -0.66775080391436958], [0.16925845563133712, -0.0091218655890095146, 1.301846367883603, 1.1345252215421957, -0.24357220919628825]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_expandedData_rank4_taggedData_rank2_offset2(self):
      arg0=Data(numarray.array([[[[0.33344344309905916, -0.40365494596516283, -0.81707133167744828], [0.25420026788950656, -0.50797009094157608, 0.066612885200087568]], [[-0.031790390731938567, -0.99346372972560149, -0.97033612551514881], [0.54192938046920158, -0.3175126494663465, 0.41618252003288858]], [[0.080022879248578427, 0.88210633276224959, -0.023507020149906799], [-0.79894959273761312, -0.64545325726960745, -0.25281041228192658]], [[0.4537295776854009, 0.36234456156034001, 0.38326353195646834], [-0.2467812000258911, -0.94486068962272673, -0.22163227936783247]], [[-0.94846970271535147, -0.51115081012452834, 0.68068080885781446], [-0.21113631580843006, 0.86539519605429138, -0.37579514402097169]]], [[[0.059546474489789114, 0.12411831862310541, 0.60724758306842097], [-0.26726635940119858, -0.12093910764703275, -0.82942792831751988]], [[0.08822129731609385, 0.93290715495523413, 0.69767750935752471], [0.48443019860591208, 0.34440296935342207, 0.75347613965780913]], [[0.28573246922230089, -0.36439475112250119, -0.47782103008101617], [0.56596971537243679, 0.902379133523044, -0.8974823822754594]], [[0.33481957984877231, 0.12238124188438371, -0.27660689067070909], [0.87961737054563005, 0.93938648527677771, -0.13914603372719658]], [[-0.42763152210809086, 0.92479461251537831, -0.084702315892976943], [-0.70176645280274408, -0.81752974116565458, 0.65819970721037668]]], [[[0.23401502030041543, 0.13672451017259735, -0.21435932550229286], [-0.57829737821183858, -0.3679364711701032, -0.95825016908086647]], [[-0.28955917214531857, -0.81787958663738558, -0.33499932021071444], [-0.012577119652278146, 0.054990161526634607, 0.85649742773115611]], [[-0.10234206089276188, -0.61189926532742045, -0.0049094844979151731], [0.66907129864709214, -0.13540693059188191, 0.3840433280376947]], [[-0.53448124096562877, 0.95971655759320962, -0.66470394437650948], [0.81218578929426477, 0.50387198426555435, -0.26352222532468317]], [[0.87529349565142867, -0.64535100805398149, -0.62989556621579501], [0.99343789068819865, -0.46976627023801121, 0.15526670005393717]]], [[[0.62882579976737563, 0.8242984870001584, 0.91696025656090274], [0.44720862840231268, 0.90559999637093114, 0.92773644642148101]], [[-0.60709187978555157, -0.74102797100539308, 0.59301170764438638], [0.17821144030181135, -0.34428535717948239, -0.82582809620421016]], [[-0.47823946830492314, -0.80286471953935279, 0.11480026612558336], [0.98770081487970041, 0.87168174220767836, -0.015100301367383162]], [[0.52531787870563473, 0.58188747181123923, -0.62023707778473836], [0.32759754628457949, -0.84933934885160389, 0.66484183782872863]], [[-0.58918451745632772, 0.012798355441087095, -0.68201578102897575], [0.47613116178732939, -0.68350148659772803, 0.31241634013230812]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[0.70752315727893089, -0.037714940346774695, 0.015781928583600724], [-0.77164717674211314, 0.74726175368450631, 0.13107040659801061]], [[0.879711229109571, 0.50698515798911425, 0.28016527073514763], [-0.99224699696407015, 0.5120734603957362, 0.26301090175416886]], [[0.09868834575868668, -0.60548672798131187, -0.50465106949735095], [-0.2474370565680224, -0.5427171791514307, 0.54729724093325993]], [[0.83104427337056275, -0.53905525975604274, -0.37394870805978297], [-0.5650558221037052, 0.33592072985820387, 0.055673934809381986]], [[0.62554223561945932, 0.12780210489971866, 0.13578569012068864], [-0.026668074977197698, 0.95212023620198827, 0.31174192647346222]]], [[[0.50055009164005448, -0.64991417548074981, 0.87800924004781855], [0.059413329219140332, 0.94598062006623107, -0.84032456934431599]], [[0.43768830221020805, 0.35998666827779569, 0.74800485398087058], [-0.056844049521004969, 0.91832845906278338, 0.85432898817792813]], [[0.19052305969562155, 0.95770858284361671, 0.46707285598995285], [-0.18349437908446165, -0.19706958769988558, 0.045696987457843452]], [[-0.51787972797179394, 0.75107331966063096, -0.069392385043739013], [0.38644902027871919, -0.26235415104144799, 0.24058450630175821]], [[0.56341927937750014, -0.91433219808406041, 0.60939468183792256], [-0.66541286670328814, 0.94976325702785069, 0.13118925910173473]]], [[[0.31644976883300835, -0.19907819878861166, 0.26307581541809366], [-0.012969160281899761, 0.26269373303419696, -0.64285507277694265]], [[-0.48169165200713926, -0.78563734440883404, 0.10577875787351831], [-0.11418794030878421, 0.90774254985575431, -0.71820767123893825]], [[0.17703502223774015, 0.34663235065918241, 0.048874531521727382], [-0.30001069403203084, -0.27817956647654385, 0.033128535454866492]], [[0.30084992245177999, 0.91839488973580941, -0.31575393478176705], [-0.073293394006657575, 0.88372244051473392, 0.8615600660291709]], [[-0.53851270993834177, 0.65855814061389162, 0.4512533819007758], [0.27302413551093418, -0.3777151746960794, -0.053392724130812086]]], [[[0.37387743494464343, 0.60335786794431412, 0.026757786464725486], [-0.85930004082888956, -0.39877761048962101, -0.3765461896015041]], [[0.49310687646395479, -0.51188423139031292, 0.78271106770990007], [0.52642892208528802, 0.24433569567406965, 0.84875600673178253]], [[0.79220412514092664, -0.59992306123534345, 0.047796718987718645], [0.39438882936070252, -0.83702884708066438, -0.89658392127924458]], [[-0.63762815313396026, -0.43211085207907485, 0.24165712113497051], [0.020846268892934283, 0.81909737902434254, -0.27812609423002987]], [[-0.81551820928269358, 0.16623459471545399, 0.0088399670289684984], [0.60299481001499555, -0.59097146941969791, 0.3206757348000342]]]]))
      arg0.expand()
      arg1=Data(numarray.array([[0.95120826896678445, -0.10614432940554308, -0.10207844693670598], [0.057309303253259447, 0.78263580267978705, 0.35561590015364697]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[-0.12297094329920633, 0.49504905657716791, -0.95762033362084797], [0.73803764391653726, 0.21782964670117733, -0.070631125890737501]]))
      res=generalTensorProduct(arg0,arg1,offset=2)
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[0.084126277943838937, 0.10482361296250514, -0.65595807552024332, -0.47843306584444356, -0.38586884361501517], [-0.42344613073061865, 0.47892873369867128, 0.778755294889526, 1.0698538924540208, -0.94226157331300708], [-0.43190511375767859, 0.1924789986738486, 0.037043787088595015, -0.19523813694375261, 0.70987816061386744], [1.481349837922002, -1.1122630883485483, 0.35203944584103308, 0.09171482491713856, -0.88872231753187436]])+(1.-msk_ref)*numarray.array([[-0.5367751822577389, -0.76483596651574237, -0.16811128085788993, -0.35874349585615689, 0.022012942988043654], [-0.91482704952637628, -0.49417264360368818, -0.17817552168637277, 0.71302651373529025, -1.3989714255664891], [-0.29633801906961565, -0.26680478179505307, -0.18132823890654162, 0.79758181902719549, 0.083106302875345539], [-0.46737360018510254, -0.68178633011316025, -0.26810970783496191, -0.15346872411662743, 0.46776606487050054]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_expandedData_rank2_taggedData_rank1_offset0(self):
      arg0=Data(numarray.array([[0.91424989172658622, 0.76478066707743753, -0.18928022387318033, 0.41740514401328821, 0.78811460188171378], [0.63628897155722797, 0.63534640184055391, 0.51316425964138834, 0.15646433353603362, 0.71815254628346614], [-0.83585758656650766, -0.88719878064026769, 0.5897130101124799, 0.89140385559711621, 0.43599059955421837], [-0.81970460518562493, -0.13479549665901791, 0.19848508581965896, -0.18644782659575343, 0.18762734300429407]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[0.1340620751459678, -0.41537855549191161, -0.8198590795455829, 0.77533542157529034, -0.51709010831466617], [0.92449544953309992, 0.16250780461403003, -0.090600715695503542, -0.87618450208643317, -0.85909449499516533], [0.27123380704251532, 0.91744066626237819, -0.86283205502366078, 0.29844507328418057, 0.63378659715716723], [0.6607345552434436, -0.2731903948001837, 0.051907909311179168, 0.17134106118205095, -0.69902900214555364]]))
      arg0.expand()
      arg1=Data(numarray.array([0.40991276316704939, 0.14630322331302303]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([0.59852238238707667, 0.94101856449569965]))
      res=generalTensorProduct(arg0,arg1,offset=0)
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[[0.37476269934282069, 0.13375770607318188], [0.31349335645845167, 0.11188987672091306], [-0.077588379580733058, -0.027692306862056894], [0.17109969594262714, 0.061067717996580645], [0.32305823414963236, 0.11530370659535462]], [[0.26082297050374342, 0.093091127497350878], [0.26043659914670397, 0.092953226509604234], [0.21035257962817466, 0.07507758527457617], [0.064136727296846371, 0.022891236329845646], [0.29437989462250791, 0.10506803235172606]], [[-0.34262869292361836, -0.12228865914532425], [-0.36367410365068903, -0.12980004132705483], [0.24173088945076476, 0.086276914209081151], [0.36539781754557538, 0.13041525734751463], [0.17871811137812818, 0.063786830048959617]], [[-0.3360073796923948, -0.11992542590318586], [-0.055254394497972807, -0.019721015649294148], [0.081361569975785336, 0.029039007834978106], [-0.076427343786356169, -0.02727791801066631], [0.076910842616581931, 0.027450485063186404]]])+(1.-msk_ref)*numarray.array([[[0.080239152604119943, 0.12615490150717323], [-0.24861336262552147, -0.39087893201129598], [-0.49070400951129806, -0.77150261412275001], [0.46405560367033122, 0.72960502541344785], [-0.30949000353728551, -0.48659139144119301]], [[0.55333121896056237, 0.86996738080244418], [0.097264558374082821, 0.15292286101724217], [-0.05422655620404699, -0.085256955426065748], [-0.52441603559940653, -0.82450588238675471], [-0.51418728384012891, -0.80842386844650849]], [[0.16233950437500291, 0.25523604774585135], [0.54910877327014551, 0.86332869877620144], [-0.51642429717269867, -0.81194098181923979], [0.17862605627373346, 0.28084235444269351], [0.37933546405550617, 0.59640495385345182]], [[0.3954644201297714, 0.62176348268788983], [-0.16351056594107199, -0.25707723314888231], [0.031068045545659274, 0.048846306305978783], [0.10255146013941099, 0.16123511943270344], [-0.41838450372181768, -0.65779926813987022]]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_expandedData_rank3_taggedData_rank2_offset1(self):
      arg0=Data(numarray.array([[[0.86619977941267035, -0.0014817073638440093, 0.13820917108860353], [0.69707207312973174, 0.29194889502329424, -0.55383514464671646], [0.36175923010282407, 0.13202461187060144, -0.17635690015632122], [0.50717662564808963, 0.68572858494667877, 0.21863764497065841], [-0.5807231867648317, -0.24044203083703852, -0.81571641420586483]], [[0.75836829017304841, -0.45106836409740936, 0.79091095004607737], [0.8472723912949649, -0.56056807040592194, 0.40672873490202344], [-0.64310486949915924, -0.12912535381258539, 0.91787485578935857], [-0.47738350099993143, -0.93955248773834277, 0.89572631860356622], [-0.21292083820820995, -0.71093216144678562, -0.80968774692104217]], [[-0.3778395533236254, -0.84102541207992942, -0.40912035605649111], [0.83111904387748536, -0.56984758945249325, -0.36114838504451452], [0.12716369069557265, -0.53846747490586022, -0.34814026145102628], [-0.19278353870650489, 0.282530767856642, 0.67102585995391251], [-0.84931620095346871, -0.78771543899765084, -0.134544645908524]], [[0.34955384695033698, -0.8149314994929735, 0.8106207182323637], [0.3482287644923876, 0.048886346965673289, 0.88357622156641868], [-0.67941825422922397, -0.071320362433094031, 0.2173509183554716], [-0.73779310133473541, 0.082349130954677552, -0.86262567119286682], [-0.92519250254411678, 0.41519233712156267, -0.174791431847237]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[-0.64305702149523847, 0.33765484176771676, 0.032841001913818113], [0.26728612183154765, -0.51473024175190374, -0.90157973622846299], [-0.22965247808865086, 0.88831490107714384, -0.3857756757199835], [0.80420938849291046, -0.41081494335260649, -0.63602472811168398], [0.29815489964169162, 0.45232854935889866, 0.27850204846295945]], [[0.59907659628961163, 0.49092834737728319, 0.5733631796794989], [0.394497298925093, 0.52606133486311135, -0.3633288046844112], [0.63905980999194112, -0.1058795000953674, 0.60982480259523508], [0.5794582971959179, -0.59665436457124077, -0.085008414431263279], [0.70832036958183942, -0.6553314106922099, 0.48299575928349925]], [[0.014015225003849885, -0.4428108143895586, -0.41529526142338269], [0.95106050289945476, -0.52833333379579117, -0.56296643574210536], [0.070679123330271487, 0.58038071955812631, -0.23615281163516699], [0.91991638289547728, 0.59255964657272875, -0.84641096803976712], [-0.66962712904520183, -0.577290895349863, -0.97308860499825744]], [[0.890851332161954, -0.55226574228970016, -0.88938157593778211], [-0.11762210428931308, -0.84530520313687196, 0.53952036681313231], [0.39297256954272064, -0.53622548139731241, -0.87768695488209558], [0.30625368142970988, 0.29156486226870548, -0.48330154042291307], [0.89064462239549691, -0.30533663773644859, -0.80442735091406892]]]))
      arg0.expand()
      arg1=Data(numarray.array([[0.48565686527495222, 0.98743594877490204], [0.53843199337203762, 0.61460448637984255], [0.98382851701726737, 0.47594689042124028]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[0.54633118255336033, 0.34027927183358164], [-0.36392866981576533, -0.48354969513227708], [-0.493213393640626, 0.37685755747825622]]))
      res=generalTensorProduct(arg0,arg1,offset=1)
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[[0.55585219475219061, 0.92018636222695849], [-0.049146345612768927, 0.60415100966969637], [0.073272181073119391, 0.35442046913915903], [0.83063396907363674, 1.0263162045432124], [-1.2140189545254954, -1.1094413925722861]], [[0.90355787517788622, 0.84804307916407962], [0.50980719810791508, 0.68568084319793576], [0.52117794156648389, -0.27752620532547179], [0.14351140220486136, -0.62252064838484666], [-1.2827889829763799, -1.0325561511862342]], [[-1.0388396353274099, -1.0847099105176974], [-0.25849358406882722, 0.29855848576322369], [-0.57068051361693151, -0.37107480114311953], [0.71867133211986489, 0.30265595245149657], [-0.96897629726852441, -1.3868148973399959]], [[0.52848981290305419, 0.23011388898441487], [1.0647291471427571, 0.79443472372976287], [-0.15452927279440767, -0.6112683294799498], [-1.1626506129140337, -1.0884752914835962], [-0.3977380480338979, -0.74158070190360004]]])+(1.-msk_ref)*numarray.array([[[-0.49040200242858567, -0.36971549105220808], [0.77802303655790928, 8.2441115608289373e-05], [-0.25847984005115165, -0.65307285650245228], [0.9025679167019196, 0.23261450020009281], [-0.13908494884083719, -0.012311798261989304]], [[-0.13415907478322675, 0.1825413426938742], [0.20327600676340515, -0.25706075037025239], [0.08689712693146745, 0.49847389238973761], [0.57564305455523679, 0.45365362008785487], [0.38725141617173892, 0.73993264555296012]], [[0.37363769036043004, 0.062382967005930351], [0.98953224289461494, 0.36694344196547135], [-0.05612924458028741, -0.34558825116677461], [0.70439078731532367, -0.29247992956675056], [0.32419485954456428, -0.31542719031201449]], [[1.1263401040653052, 0.23501600556215624], [-0.022728496218988314, 0.57204503691843089], [0.84272795636705489, 0.062249125819002382], [0.2995779163500738, -0.21891015859731927], [0.99446202988723353, 0.14755881502722906]]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_expandedData_rank4_taggedData_rank3_offset2(self):
      arg0=Data(numarray.array([[[[-0.28051131596758516, 0.84840675299246837, -0.47548715485534521], [0.43962791803757528, 0.96112827428716163, 0.18381958292172462]], [[-0.3612818588534743, -0.76850803536033352, -0.49089035596042541], [-0.15281442336596474, -0.61997332404210304, 0.42742808434289503]], [[-0.44053771515456552, 0.82252899034681581, -0.32434324962384364], [-0.14594725610736692, 0.51352949011698423, -0.60106935495391745]], [[-0.51730336691553092, -0.19131472474787325, -0.8450913067626018], [0.53780388488349651, 0.67743307658540619, 0.54448605676171247]], [[0.11491508153986563, -0.98571100813414048, -0.2086403955767151], [-0.89153800976473807, 0.63485258287460522, -0.33689448909204378]]], [[[-0.42701582865489618, -0.60156674757563167, 0.62856313904325933], [-0.077937648588841446, 0.96392705903726106, 0.88673697308966415]], [[0.97994840229512481, -0.81465775674729501, -0.18790726865694407], [-0.81752029577894159, -0.6465998388008507, 0.81431164924718957]], [[0.977296560262088, 0.18451075478718493, 0.17777695184273701], [0.75724250813924665, 0.72497744711442658, -0.83849925390508928]], [[-0.31852959667858505, -0.7713540897201121, -0.96565117971826386], [0.25945883976958783, -0.99983221053060545, 0.048919925106586604]], [[0.27861330796487094, -0.079395791742521871, -0.51611278465382937], [-0.91795858696967847, 0.38823694411939735, -0.9547885208477267]]], [[[-0.58280480361260434, 0.42132592145643732, -0.47795610145418177], [-0.6656739403171088, 0.27057913421644009, -0.62902892741358785]], [[0.29795850513773026, 0.69596667388882838, -0.23533686780769192], [0.53364282631387527, -0.66259468710311564, -0.89318496735631725]], [[-0.25370555691594898, 0.32175843883184641, -0.22434691033604759], [0.79711431815870815, -0.58462006773831088, 0.47830088756546663]], [[0.62262801610338947, -0.90934950356622291, 0.58077810441829514], [0.90477511750769879, -0.31446627119170589, 0.27911362216075686]], [[-0.11519806685445011, 0.25943500990192958, -0.37060296702329598], [0.43968017012659311, 0.8003005187044403, -0.51280305512459834]]], [[[-0.50147869980496496, -0.85986912921375502, -0.89644837802903066], [-0.22170816579690755, 0.23391278369675272, -0.40953886683765983]], [[0.70887120836554685, -0.74877072302982128, -0.78251772193968283], [0.47361265430453803, -0.24457705215356507, 0.88559303727074812]], [[-0.37198652488309825, -0.49083272001734324, 0.953998487876482], [0.53113079258984941, 0.22718645053644093, 0.20990882122013632]], [[0.17174321455252373, -0.6830022407193812, -0.3878303093756621], [-0.0051416818004386133, 0.92591495112246847, -0.55309644862426399]], [[0.13018864629874605, -0.82063242797741043, -0.65349868038095682], [0.65963576959435666, 0.30251324562422877, -0.66872849665065703]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[-0.12516245099819301, 0.033744477904666059, 0.063807830408932009], [-0.11657204129497356, 0.38404105565195268, 0.1191038747598252]], [[0.82349571598628213, 0.091846355125238421, 0.78202185763699217], [-0.99979298429531749, -0.59634448696162479, -0.48142570978640831]], [[-0.98162334158799336, 0.92365331229174541, 0.92127433061156383], [-0.29711586984691207, 0.15787191589109395, 0.7596196072138035]], [[-0.37802508340578211, 0.18494251364798808, -0.95238936258596563], [0.59650817005985579, -0.27123633966732874, 0.96274736663168969]], [[0.28842082239525468, 0.90917457299749382, -0.34173585696545095], [-0.44681481654507005, -0.65160083605111674, -0.056454781685214117]]], [[[0.94387073923907772, 0.35848193917305449, -0.12677006572519733], [-0.47873525270822004, -0.70397445360634614, -0.34883062675510401]], [[-0.50771618756870551, -0.80813042101295718, -0.7811478278375461], [0.78107679077244696, -0.6578515891497323, 0.12835603695417808]], [[0.64108450891162105, 0.21242454786603249, -0.25940298029403097], [-0.70199040509750965, 0.77746945617331709, 0.29275307195238254]], [[-0.062545302131931546, 0.55051931157284351, -0.99547284903018562], [0.11744282141741369, 0.60685538912844472, -0.57901082430600304]], [[0.79180591799245925, 0.47727321530155087, 0.20403858201443326], [-0.44026305486648964, 0.72140792603798509, 0.0051091127254387914]]], [[[-0.23111219733903643, -0.70703065899370743, -0.99196083203954077], [-0.035267549313125812, -0.18688307358706724, 0.072448788400585773]], [[-0.22216524335284205, -0.49579943141808713, -0.66013211130643001], [-0.92656057962304361, 0.46824512710159794, 0.72809263758167364]], [[-0.083613928793790038, -0.18765787990373028, -0.22611180317096147], [0.95060445375458946, -0.82128790476429891, 0.4255372231751593]], [[0.20558515693034995, 0.53239536025647061, -0.79624210887621505], [-0.21166810871656949, 0.37673227346550942, 0.17352960292082753]], [[0.19724601982422474, -0.25393410790464266, 0.052518645299695299], [0.74120441891761502, 0.015125524518044609, -0.12067850866941332]]], [[[0.50766708312875308, -0.77145247106367787, -0.6207446942893966], [0.91037574127790188, 0.79892371772422188, 0.54017385197991463]], [[-0.50438986403934138, -0.1070138280506272, 0.19502643852933343], [0.34385553392589929, 0.39262331181402921, -0.81056416785028951]], [[0.19410814059666093, -0.29180664720998495, 0.97467401548125987], [-0.36170323870402998, 0.12414165405784905, 0.36973899356484585]], [[0.27543886851570432, 0.53984189044524689, 0.1734505997988558], [-0.5892689742553221, 0.91553855517771199, 0.4995560749613086]], [[0.36004111072369893, -0.75749739674616245, 0.85853043639243642], [0.6471937231267606, -0.35068074665095539, 0.55245095357708718]]]]))
      arg0.expand()
      arg1=Data(numarray.array([[[-0.50972055840551045, -0.23719916541976849], [-0.80777476539286575, -0.69609377213708945], [0.55858225332962474, -0.69284768362872962]], [[-0.77831286848439896, -0.56927491920983475], [0.001313410274232929, -0.73851530008249799], [0.59038891708032093, 0.85274091228404303]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[-0.0080011874935914662, 0.97328625688733417], [-0.328125829760326, 0.43920493437001373], [0.464655439705985, -0.97961453396394815]], [[0.93584208224798382, -0.60101423577265201], [0.46440211384157792, -0.88350879626882151], [0.19587513727894201, -0.13235480509164477]]]))
      res=generalTensorProduct(arg0,arg1,offset=2)
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[[-1.0403185333345748, -0.99792003771189541], [0.90120350433926733, 1.8701002772380839], [-0.86163699837071372, -1.0520633631644605], [-0.15006504179803576, 0.49924905147241616], [1.1169456315746362, 0.55484371600016913]], [[1.6401389874042962, 0.17318611251935423], [1.169796354307417, 2.1021408965219242], [-1.6313482920411002, -2.164931788324759], [0.071674278723549451, 1.9139429120297542], [-0.21490012158973887, -0.23156773777999995]], [[-0.16316038545200515, -0.18116481250097505], [-1.7890527334479185, -0.96818949888390193], [-0.59469424643308777, 0.37748334901306391], [0.20177007296431523, 0.038098891498181742], [-1.0017693235981473, -1.1751160182063516]], [[0.38053276586572149, 0.94283623858264742], [-0.039684384715913845, 1.561426073152739], [0.82981838941605568, -0.52221741872599226], [-0.07378827060819998, -0.4491197072144405], [-0.67632200488269067, -0.17604537708307072]]])+(1.-msk_ref)*numarray.array([[[0.11216361292901025, -0.45451139489570697], [-0.98024671054632861, 1.2672408799402752], [0.076907884070050489, -1.5136708034148678], [0.12066032683573147, 0.39998105765347025], [-1.1912317971709276, 1.8665085909931252]], [[-1.0273587381187017, 2.1561529879705588], [0.35686482797634, 0.010926565954714852], [-0.43391507962751258, 0.66762942898243727], [-0.36437200825039046, 0.62598396906505294], [-0.14412600041122706, 0.4069533083644119]], [[-0.33267863773754819, 0.61298976185691323], [-0.64931690085097649, 0.25949792664121413], [0.54874030330828927, 0.15566823668104993], [-0.53545834660650349, 0.98533601191030951], [0.78318390457634424, -0.41386586196886549]], [[1.2894355638677135, -0.561129329894555], [0.47513002170668162, -1.1752336158954497], [0.33866099646937964, -0.83527314537168607], [-0.12717919033660718, -0.18557861261561273], [1.1956201906515393, -0.9755650776190079]]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_expandedData_rank2_taggedData_rank2_offset0(self):
      arg0=Data(numarray.array([[0.77282840295739041, 0.68951309362501134, -0.31410665046438391, -0.15036784313226748, -0.72004124414083304], [-0.61367276660702741, -0.91985520364760487, 0.91266720167287585, -0.29269603311941972, -0.096474753362180143], [0.078233409403188681, 0.64098354421923576, -0.6719898153210917, -0.73030286917062548, 0.057536727382764941], [-0.17380241595235679, 0.79075060221049753, 0.74523098785302899, -0.92724190505589732, -0.48127261564222112]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[-0.97265701589003006, -0.28279798809639223, -0.60353527820353037, -0.81213239822699812, 0.49515678774814087], [-0.63672010219624897, 0.44100328656419818, 0.043843038586240723, -0.54581904580803431, -0.4460045759278497], [-0.40751692332246314, 0.38505730997734, -0.3573738562086477, 0.98210884200685822, 0.12690924848210394], [-0.54761075066973364, 0.043290784617671552, 0.18238467327706398, 0.89825761669597304, -0.72842048016940297]]))
      arg0.expand()
      arg1=Data(numarray.array([[0.91451677581771795, -0.66164617378936597, -0.9524197485525876, -0.33840424362079036, -0.4725828828030898], [-0.071016106432168158, -0.89737508451086079, 0.41598414187117028, 0.93102526424354481, 0.89850296423949594], [-0.39199510363986678, -0.1626418867458217, -0.81446262472197151, -0.89641428621568053, -0.66619410250702349], [0.67144978883174478, -0.87018753866790433, 0.46783039788255221, -0.6230383271913893, 0.81973384359452561]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[-0.35624674155901581, -0.14168376376423164, 0.82943918101865011, 0.66953938268942159, 0.078791665738143779], [-0.76238874385557409, -0.035985617244195023, 0.68249017617026597, 0.015591384982807543, -0.19939432329146123], [-0.8692784174149617, -0.43019076196934858, -0.40103323880478814, -0.68971661380197791, 0.40753927517371991], [0.52658173125949759, 0.75626840811211249, -0.82888256287426487, 0.59947800676659879, 0.02328707224257287]]))
      res=generalTensorProduct(arg0,arg1,offset=0)
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[[[0.7067645393329488, -0.51133895581250366, -0.73605703321897564, -0.26152841115145908, -0.36522547458171151], [-0.054883264118224577, -0.69351695341628183, 0.32148436001789704, 0.71952276807832116, 0.69438861090569093], [-0.30294494991311499, -0.12569426958775015, -0.62943984953236565, -0.69277442120425348, -0.51485372430013499], [0.5189154679689143, -0.67250564578213889, 0.36155261925049337, -0.48150171538456549, 0.63351359719528044]], [[0.63057129126604572, -0.45621370017465762, -0.6567058872540501, -0.23333415691480316, -0.3258520855157846], [-0.048966535243247331, -0.61875187066308956, 0.28682651256053621, 0.64195411019161019, 0.61952955850401781], [-0.27028575659658149, -0.11214371048312025, -0.56158264401399327, -0.61808938765823029, -0.45934955657435567], [0.4629734211112369, -0.6000057018208409, 0.32257518493581855, -0.42959308442868688, 0.56521721844598249]], [[-0.28725580124559125, 0.2078274634415534, 0.29916137705398405, 0.10629502346665981, 0.14844142638408103], [0.02230663132043053, 0.2818714820058999, -0.13066338544945436, -0.29244122724925781, -0.2822257565295882], [0.12312826900275758, 0.051086898270937729, 0.25582812697984897, 0.28156968887162898, 0.20925599809760756], [-0.21090684412495725, 0.27333169304682198, -0.14694863926430848, 0.19570048206502016, -0.2574838518837716]], [[-0.13751391508798563, 0.099490308069424369, 0.14321330334642912, 0.050885116220064634, 0.071061268788329746], [0.010678538751856674, 0.1349363559385344, -0.062550638190395025, -0.13999626088595121, -0.13510595278064186], [0.058943458252736419, 0.024456109712931728, 0.12246898819128825, 0.13479188277120296, 0.10017417030141783], [-0.10096445651824593, 0.13084822331006937, -0.070346647881309884, 0.093684929448505164, -0.1232616100038323]], [[-0.65848979704745292, 0.4764125341563169, 0.68578150069210453, 0.24366501259925144, 0.34027916689319826], [0.051134525629456175, 0.64614707231218538, -0.29952573905577423, -0.67037658959246982, -0.64695919223523302], [0.28225264212196449, 0.11710886648187392, 0.58644668161101676, 0.64545525791235536, 0.47968723040844286], [-0.48347154132850911, 0.62657091797828712, -0.33685718173825385, 0.44861329225831137, -0.5902421766061493]]], [[[-0.56121403992459762, 0.40603423798427429, 0.58447406206543584, 0.20766946841432893, 0.29001124514089671], [0.043580650507887751, 0.550694650795995, -0.25527813920673126, -0.57134484968937493, -0.55138679986946648], [0.24055671974708548, 0.099808896605495218, 0.49981353221115338, 0.55010503504804042, 0.40882517798277074], [-0.41205044955008113, 0.53401039432129249, -0.28709477457145222, 0.38234165394975422, -0.5030483356800648]], [[-0.84122301505895791, 0.6086186759336758, 0.87608826176284105, 0.31128290443101581, 0.43470782390120838], [0.065324535044422025, 0.82545514111102447, -0.38264517753507948, -0.85640843404181111, -0.82649262714849814], [0.36057873588751366, 0.14960698585420851, 0.74918768352699183, 0.82457134579954716, 0.61280211183043143], [-0.61763658224496587, 0.80044653559297319, -0.4303362259167951, 0.57310504733889844, -0.75403644163647621]], [[0.83464946666845741, -0.60386276192990596, -0.86924226672947413, -0.30885045405961287, -0.43131089720639659], [-0.064814071131150036, -0.81900480723148783, 0.37965508270185355, 0.84971622260390589, 0.82003418606724476], [-0.35776107430846615, -0.1484379156511059, -0.7433333245721474, -0.81812791814005359, -0.60801350730605819], [0.61281019983691187, -0.79419162584664371, 0.42697346009297704, -0.56862664661271489, 0.74814419314996661]], [[-0.26767543250300774, 0.1936612103967896, 0.27876948226593756, 0.099049579698583037, 0.13832313511660402], [0.020786132640282128, 0.262658127456533, -0.12175690816627745, -0.27250740157804509, -0.26298825337894027], [0.11473541183762481, 0.04760463506955994, 0.23838997938015169, 0.2623769056069058, 0.19499237109135784], [-0.19653068962992373, 0.25470044063804725, -0.13693210163290281, 0.18236084685027873, -0.2399328442338525]], [[-0.088227780392590535, 0.06383215142935926, 0.091884460338880522, 0.032647465940030873, 0.045592317061616171], [0.0068512613527857581, 0.086574039951550857, -0.040131967489599303, -0.089820432741854583, -0.086682851870193131], [0.037817630942838389, 0.015690835910162782, 0.078575080842766085, 0.086481347172992537, 0.064270911730704053], [-0.064777952772630515, 0.083951128171828662, -0.045133822251049831, 0.060107468950974574, -0.079083620383413808]]], [[[0.071545765328631647, -0.051762835994116796, -0.074511044112196612, -0.026474517734961692, -0.036971770147273257], [-0.0055558321287282322, -0.070204712374759212, 0.032543857676241385, 0.072837280662277168, 0.070292950251327091], [-0.030667113427103074, -0.012724029311892916, -0.063718187963469619, -0.070129545848378494, -0.052118635963421818], [0.052529806223358476, -0.068077737970159244, 0.036599967048802362, -0.04874241252504178, 0.064130573387579964]], [[0.58619020421158918, -0.4241043094946042, -0.61048538601163094, -0.21691155145488392, -0.30291785115646824], [-0.045520155597541613, -0.57520266216380778, 0.26663898959558013, 0.59677187363247786, 0.57592561450972135], [-0.25126241084766843, -0.10425077300484034, -0.52205713982839064, -0.57458680626728331, -0.42701945696290478], [0.43038826541062919, -0.55777589267076655, 0.29987158652825358, -0.39935731514756057, 0.52543590438367571]], [[-0.6145459592897885, 0.44461949013262297, 0.64001637093801389, 0.22740420517460863, 0.31757088413875745], [0.047722100246175674, 0.60302691731420244, -0.27953710667251053, -0.62563949537829033, -0.60378484100475238], [0.26341671730172628, 0.10929369143779863, 0.54731058877284922, 0.60238127064526337, 0.44767565191169517], [-0.45120741959443017, 0.5847571634041604, -0.31437726267468913, 0.41867541042730361, -0.55085279416953392]], [[-0.66787422528434914, 0.48320209909414025, 0.6955548750227204, 0.24713759005577854, 0.34512863523202192], [0.051863266284738918, 0.65535559894051409, -0.3037944123379962, -0.67993042174740048, -0.65617929274241582], [0.28627514888903138, 0.11877783653779751, 0.59480439166669419, 0.65465392518884979, 0.48652346448542905], [-0.49036170728783379, 0.63550045620569517, -0.3416578818588632, 0.45500667795113853, -0.59865397793334685]], [[0.052618302417189199, -0.038068955525168265, -0.054799115426431767, -0.019470672710380187, -0.027190872493602532], [-0.0040860343555730793, -0.051632025597587047, 0.023934366166394938, 0.053568146815247526, 0.051696920106054076], [-0.022554115413505705, -0.0093578818987128734, -0.04686151400207926, -0.051576744408007434, -0.038330628459952373], [0.03863302345122719, -0.050067743184214433, 0.02691743006433886, -0.035847586380624873, 0.047164802685324296]]], [[[-0.15894522506607925, 0.11499570351022473, 0.16553285329917589, 0.058815475109823288, 0.082136046768906498], [0.012342770869440531, 0.15596595770343796, -0.072299048855077333, -0.16181444023820948, -0.15616198592517844], [0.068129696054103336, 0.028267552851473407, 0.14155557187957638, 0.15579896863849271, 0.11578614450893271], [-0.11669959548965704, 0.15124069655211667, -0.081310053407939911, 0.10828556649677841, -0.14247172245463993]], [[0.72315469120946307, -0.52319711037421268, -0.7531264897251293, -0.26759335943372792, -0.37369519917091626], [-0.056156028927881761, -0.70959988848565925, 0.32893971069464495, 0.73620878837377068, 0.71049176006029857], [-0.30997036426679103, -0.12860916988891005, -0.6440368109768414, -0.70884013665514267, -0.52679338774651074], [0.53094932487281354, -0.68810132023771597, 0.36993716885800482, -0.49266793242681206, 0.64820503047469691]], [[0.68152624025080499, -0.49307923170222612, -0.70977271006457832, -0.2521893287671787, -0.35218340859377884], [-0.052923403149920521, -0.66875172070472411, 0.31000427297784677, 0.6938288773883442, 0.66959225162907432], [-0.29212689831908839, -0.12120577392586916, -0.60696278639092571, -0.66803570404207946, -0.49646848911317115], [0.50038518942478882, -0.64849071905887823, 0.34864170956168999, -0.46430746804313772, 0.61089106203850874]], [[-0.84797827741479781, 0.61350605865739705, 0.88312350206076007, 0.31378259553394167, 0.43819865254714485], [0.065849109817815971, 0.83208378291154739, -0.38571792818166661, -0.86328563967235472, -0.83312960025980098], [0.36347428667161397, 0.15080837290808122, 0.75520387574402725, 0.83119289046995004, 0.61772308874561621], [-0.62259638134572703, 0.8068743511103299, -0.43379194937567617, 0.57770724542778329, -0.76009157077338085]], [[-0.44013188074648385, 0.31843218468927575, 0.45837354357521037, 0.16286469547180521, 0.22744120011438426], [0.034178107295335936, 0.43188205413470121, -0.20020177602402292, -0.44807696415148091, -0.43242487176183125], [0.18865650884770224, 0.078275086247147505, 0.39197855774277196, 0.4314196482260752, 0.32062097823897717], [-0.32315039614347085, 0.41879743283396875, -0.22515395926587692, 0.29985128537275391, -0.39451545103718871]]]])+(1.-msk_ref)*numarray.array([[[[0.34650589256533909, 0.13780970686298552, -0.80675983867187073, -0.65123217798754562, -0.076637266473867649], [0.7415427605467112, 0.035001663083699536, -0.66382885812803183, -0.015165069990970214, 0.19394228747808459], [0.8455097514604446, 0.41842806280056483, 0.39006779332857905, 0.67085770339040818, -0.39639593524845623], [-0.51218341534906864, -0.73558977304623074, 0.8062184401285627, -0.58308648915330319, -0.022650334196276479]], [[0.10074586177878507, 0.040067883338449226, -0.23456373164039354, -0.18934439037586884, -0.0222821245495105], [0.21560200290969206, 0.010176660157065191, -0.1930068487165035, -0.0044092123047742762, 0.056388313464666835], [0.24583018754056701, 0.12165708198258574, 0.1134113930937741, 0.19505047073985571, -0.11525128708938996], [-0.14891625416850102, -0.21387118427496668, 0.23440632114902343, -0.16953117422162955, -0.0065855371788549489]], [[0.21500747627592179, 0.08551114978036882, -0.5005958068689994, -0.40409063759968006, -0.047553549901390178], [0.46012850262211397, 0.021718589514801004, -0.41190689834609795, -0.0094099508731770969, 0.12034150837991672], [0.52464019149086349, 0.25963530120575951, 0.24203770735091065, 0.41626830839257367, -0.24596432982083616], [-0.31781065167259753, -0.45643466408648486, 0.50025986818237467, -0.36180612559077707, -0.014054569624466927]], [[0.28931952058287713, 0.1150659748556729, -0.67361443126411358, -0.54375462457098378, -0.063989264456218706], [0.61916059892869602, 0.029225085634206924, -0.55427238353952457, -0.012662268877767894, 0.16193458996754378], [0.70596916586218239, 0.34937185521326675, 0.32569208599927302, 0.56014120766400455, -0.33097584891852566], [-0.42765408427030038, -0.61419007598340403, 0.67316238363561731, -0.48685551131969851, -0.018912185828046064]], [[-0.17639799219610439, -0.070155677341563374, 0.41070244050564353, 0.33152697000336717, 0.039014228108224525], [-0.37750196142286624, -0.017818522639769713, 0.33793964330213166, 0.0077201801046315856, -0.098731452616214244], [-0.43042910882598001, -0.21301187581566772, -0.19857433030681196, -0.34151786294671244, 0.20179583837622481], [0.26074051853730762, 0.37447143563619367, -0.4104268272532674, 0.2968356041562073, 0.011530751887691277]]], [[[0.22682946169253723, 0.090212900543510763, -0.52812060010376793, -0.42630918417042196, -0.050168237461003594], [0.48542823890099102, 0.022912765889318953, -0.43455521471906772, -0.0099273482396342802, 0.1269583739034911], [0.55348704277344796, 0.27391110592500584, 0.25534592479587742, 0.43915643282644617, -0.25948844893759615], [-0.335285173742225, -0.48153129810093881, 0.52776619014199067, -0.38169969773283241, -0.014827347018142431]], [[-0.15710598385531249, -0.062483005472811604, 0.36578540483434158, 0.29526906825019933, 0.034747383544389138], [-0.33621594167985885, -0.015869775473731289, 0.30098041073886589, 0.006875852019505811, -0.087933551893778647], [-0.38335463901932304, -0.18971553987803941, -0.17685697633439651, -0.30416729348460209, 0.17972615975560161], [0.2322242741301038, 0.33351685350211591, -0.36553993440330645, 0.26437177120702471, 0.010269675393432549]], [[-0.015618939636394456, -0.0062118467217590232, 0.036365134018340579, 0.029354640990260104, 0.003454466041231619], [-0.033425439114575531, -0.0015777188053869319, 0.029922443128563202, 0.00068357369341416532, -0.0087420530099448918], [-0.038111807196910437, -0.018860870176466447, -0.017582515763283416, -0.03023927211249141, 0.017867760166849978], [0.023086943162419597, 0.033157104998414198, -0.036340730187558498, 0.026282937382270669, 0.0010209760068916978]], [[0.19444625654996342, 0.077333696744283864, -0.45272370233939702, -0.3654473469904404, -0.043005991810819225], [0.41612629670603535, 0.019641635267039673, -0.37251613673061179, -0.0085100748741417289, 0.10883321927848408], [0.47446871633495252, 0.23480631121354106, 0.21889157974173501, 0.3764604640233441, -0.22244269830461771], [-0.2874183380960017, -0.41278570089051431, 0.45241988955494927, -0.32720651363624731, -0.012710527551103886]], [[0.15888767689470712, 0.06319160697352777, -0.36993367018816603, -0.29861762844338974, -0.035141443464189702], [0.34002886839547136, 0.016049749958499115, -0.30439374159774291, -0.0069538290473849223, 0.088930780602028733], [0.38770215192239232, 0.19186704836021784, 0.17886265960610162, 0.30761676584914366, -0.1817643815977982], [-0.23485786174174514, -0.33729917064767267, 0.36968541594872573, -0.26736993418600952, -0.010386140780149914]]], [[[0.14517657606378279, 0.057738531493946366, -0.33801050313182385, -0.2728486292768143, -0.032108937205060285], [0.31068631527170099, 0.01466474802321413, -0.27812629679071266, -0.0063537532385297846, 0.081256561155700832], [0.35424566617556508, 0.17531001575949501, 0.16342783162776989, 0.28107119242096956, -0.16607915155186101], [-0.21459096700068658, -0.30819217487982503, 0.33778367181815855, -0.24429743291700709, -0.0094898760334812277]], [[-0.13717541199290728, -0.054556368942519959, 0.31938161983284941, 0.25781103362227747, 0.030339306857763388], [-0.29356335886603063, -0.013856524973923914, 0.26279783132208351, 0.0060035767603009681, -0.076778241751362136], [-0.33472200903116445, -0.16564809758101953, -0.15442078014567193, -0.2655804239572695, 0.15692597700850752], [0.20276414492199271, 0.29120667884849516, -0.31916728994748783, 0.23083338867612416, 0.0089668573949730924]], [[0.12731327179271099, 0.050634073018578529, -0.29641987861117758, -0.23927587107527609, -0.028158081421943228], [0.27245780532173347, 0.012860318802606385, -0.24390414608248726, -0.0055719533749395318, 0.071258318220783282], [0.31065738015053534, 0.15373893151032256, 0.14331879501951064, 0.24648668596558346, -0.14564388232530948], [-0.18818654390923245, -0.27027055733580096, 0.2962209578384829, -0.21423776699045322, -0.0083221908071376277]], [[-0.34987307482124153, -0.1391488771616628, 0.81459955358534331, 0.65756054781109452, 0.077381991597879826], [-0.74874872638706114, -0.035341792880598404, 0.67027963659963663, 0.015312437050748235, -0.19582692795051809], [-0.85372601990896235, -0.4224941510797649, -0.39385828976883031, -0.67737678489395192, 0.4002479256131764], [0.51716057430923179, 0.74273789053735684, -0.81405289398412117, 0.58875265103412389, 0.022870439553883293]], [[-0.045211006245453003, -0.017980979981434587, 0.10526350312468866, 0.084970739886286284, 0.0099993910854809642], [-0.096754182533926147, -0.0045669076406254306, 0.086614315354187177, 0.0019786909509632664, -0.025304983720517017], [-0.11031947067584545, -0.054595186305473692, -0.050894826953059788, -0.087531417123230537, 0.051720503139238157], [0.066828091778548065, 0.095977455324265271, -0.10519286313429323, 0.076079303320298677, 0.0029553448376533858]]], [[[0.19508454556877924, 0.077587552232644089, -0.45420981255251208, -0.36664696395750423, -0.04314716322138365], [0.41749227232490621, 0.019706110872407347, -0.37373895769731813, -0.0085380100344160503, 0.10919047505692064], [0.47602620670160523, 0.23557708609321967, 0.21961011294540458, 0.37769623263348789, -0.22317288840527991], [-0.2883618171439814, -0.41414071067407837, 0.45390500247262888, -0.32828060129545283, -0.012752251111655647]], [[-0.015422200959578655, -0.0061336013009384094, 0.035907072938936267, 0.028984885209056517, 0.0034109530311375535], [-0.033004406905188827, -0.0015578456054524141, 0.029545535220263697, 0.00067496328918192005, -0.008631936703597019], [-0.037631744741101494, -0.018623295620927079, -0.017361043565625324, -0.029858373375331176, 0.017642694984787488], [0.022796136311555512, 0.03273945276873079, -0.035882976502733401, 0.025951873273963876, 0.0010081156288293798]], [[-0.064973945565259747, -0.025840946962804104, 0.15127699403328201, 0.12211372155793726, 0.014370392212606988], [-0.13904802195821009, -0.0065632250437559891, 0.12447574779561979, 0.0028436296560262757, -0.036366468506814423], [-0.15854306014703104, -0.078460201568590834, -0.073142316232654062, -0.12579373926203666, 0.07432891755013038], [0.096040437009434182, 0.13793176652329292, -0.15117547541487825, 0.10933560040091167, 0.0042472050625410387]], [[-0.3200013490285078, -0.12726851996337399, 0.74505006193607237, 0.6014188501786929, 0.070775213881450791], [-0.68482149605154463, -0.032324354781104132, 0.61305199906511787, 0.014005080315646089, -0.1791074696224943], [-0.78083595947241069, -0.38642212857121166, -0.36023116130465599, -0.61954320170938149, 0.36607525802754998], [0.47300605091679565, 0.67932385785324367, -0.74455007544828722, 0.53848568561981747, 0.020917790012440454]], [[0.25949742254520353, 0.10320535523334987, -0.60418048650892142, -0.4877061986309541, -0.057393462990325786], [0.55533957487502528, 0.026212660592208885, -0.49713982183684557, -0.011357084135682689, 0.14524290871501935], [0.63320020221430506, 0.31335976139815425, 0.29212082437407461, 0.50240370700645143, -0.29685995450993152], [-0.38357291753247874, -0.55088139697397498, 0.60377503445291736, -0.4366720575399225, -0.016962780344674504]]]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5, 4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_expandedData_rank3_taggedData_rank3_offset1(self):
      arg0=Data(numarray.array([[[0.36256808401960772, -0.44834982364653797, -0.41319427819964605], [0.20537505494538011, 0.9077540350228499, 0.10445965765050125], [-0.80952714407412296, 0.19471030738279205, 0.63139650538426295], [0.23188425495271292, 0.76508368654097336, -0.27058869193768587], [-0.81042647046520333, 0.14869180136873283, -0.71014584607486042]], [[-0.89884563802493611, -0.54123917135354493, -0.4264791670826964], [0.57473669415087292, -0.71763339107751034, 0.70494595954357031], [0.18025691398713728, -0.041713909648626091, 0.56236080359680396], [0.0040650130714330324, 0.47851683025593017, 0.068041790985334583], [-0.3388147395309391, 0.055845947572862098, 0.88962436869477113]], [[0.73726944076166645, -0.020407322174725184, -0.1032416250486099], [-0.69744344192986651, -0.84924005873314368, 0.097295169454582719], [0.60153218508617656, -0.24193457794573159, 0.34870844797064726], [0.078250417013722373, 0.14948552743782617, 0.69114053342895043], [-0.98419033882770135, -0.43223229643943184, 0.60073517098991358]], [[0.30697275506816246, -0.55972114869608225, 0.59812159783985841], [-0.71189046059877792, -0.97869437146854943, -0.044403119156775972], [-0.85762663612909917, 0.90658367139058749, 0.45959633886193307], [0.17408748987216538, 0.13029874024449195, -0.84914827370008061], [0.50004136626023366, -0.94829037469047073, -0.32865898599272114]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[0.60376867577354054, 0.23777024046339745, -0.54919765987476743], [-0.2134393899467566, 0.73822516268136962, -0.99868695099512816], [-0.11183794223607579, 0.81240123212013504, -0.44905842897774395], [-0.7532275119449352, -0.67971962630859628, 0.55258042401418361], [0.22239909713224892, -0.64592194946647385, 0.44463637625130858]], [[-0.43676030406514887, 0.81177432628788537, 0.018765286229016853], [0.081072768868913903, -0.19923235632088265, -0.14412381866166823], [-0.54034263644544533, -0.074747772718307015, 0.14992051064175782], [-0.24769377547868165, -0.34211227956125057, -0.30824939182477729], [0.97144269319403342, 0.70193029222486447, 0.42011965941036555]], [[0.58044175253785268, 0.42284193240465728, -0.58720747712604315], [0.38608471280612422, 0.35937663462756042, -0.11468634732202854], [0.37036912380085263, -0.54354583733989714, 0.59961078720645355], [0.4240619667716834, -0.42206469835897287, 0.44684932391673859], [0.425042837715494, -0.69865864229745944, -0.84710004077958856]], [[0.084318146270643712, -0.98812410123058303, 0.69588900582760549], [0.85846333003745579, 0.35570550079132746, 0.56990226962436141], [-0.33281046731737685, 0.69758118604204333, -0.84417744235125802], [-0.3875478409392914, 0.95445012043885358, 0.041513097779735109], [0.17534429860970424, -0.039675967063917295, 0.82100082325188417]]]))
      arg0.expand()
      arg1=Data(numarray.array([[[0.63923744181154052, 0.32499730949322592, -0.26245789090255633, 0.63925576292653918, 0.91025349797087762], [0.59940509169366774, 0.72114604443940089, -0.90343377178350925, -0.45982649090036287, 0.13084570489540837], [-0.1532070013832596, -0.30885413837893205, -0.97013510807318482, -0.8990155839809193, 0.55224521370194335], [0.21255083502849037, 0.73053539552040925, 0.059322791102212058, -0.58565990808483015, -0.58838121703501645]], [[-0.088248520510906703, 0.94787048104518479, 0.37261553623269195, 0.030924348536099711, 0.36568060534362301], [-0.080688106774029711, -0.51660490758390032, 0.087301191711632642, -0.16343399628786059, -0.046999278700202263], [0.42378179047214859, -0.35427581814365472, 0.39977249396834003, -0.33272608526902592, 0.95610274278227192], [0.80317243813366379, -0.47229799415948182, -0.87046572811840051, -0.57181222090816486, -0.69846262431705552]], [[0.30421644382574442, -0.33428708155332454, 0.84621836463192612, -0.70903030962586011, -0.30765036143971414], [-0.58918373115628575, -0.15896129529235403, -0.60918171927468734, 0.41994611857912512, -0.84373585882960089], [0.9115013743763174, -0.89923232184452706, -0.089543560103358066, 0.12417853066731821, -0.68101428240640027], [0.91531168817681885, -0.3028169937291898, -0.24802977835896156, -0.35245805205301561, -0.62531623300265182]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[0.45541830165380737, -0.056781348936327802, -0.56147726004346055, 0.77553381101075169, -0.8096531225261423], [-0.48257549795723453, 0.80128672937870249, -0.79573887335509963, 0.98747340941542627, 0.22665527963046284], [-0.94134641887720782, 0.53570723969228928, -0.20812314154976241, 0.32721365377085276, 0.55196216477911686], [0.68756602379555964, -0.42782694611814898, 0.540829110459359, -0.77862587484015067, 0.35250541674286762]], [[-0.23466379357794032, 0.42162069935847724, -0.77593232359698461, -0.59382189371353222, -0.44047054770160998], [0.61357840234454031, -0.67505890639104971, 0.59616005106471692, 0.67439055392039626, -0.016237520462455635], [0.84438789124751157, 0.55429446310627473, -0.36057776712017597, 0.55413844352177088, 0.14161157637692923], [-0.94270552242140981, 0.35425090154301575, 0.30041690785363429, -0.74292193364869075, 0.46244604029467418]], [[0.17612606090889571, 0.050585012978389132, 0.10332397864199661, 0.82433617806842818, 0.60911270507627346], [-0.55127105882453797, -0.9990539336899027, 0.20622926908672667, -0.040670466582747755, -0.73741768107192107], [0.41946546465196755, -0.60390470670194918, -0.60360329808785473, -0.58387852896529435, -0.83204034676305882], [-0.86211529328692982, 0.56898008536426481, 0.22155364850358317, -0.39855340783707915, -0.033888884550317133]]]))
      res=generalTensorProduct(arg0,arg1,offset=1)
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[[[0.14563280919629698, -0.16901840182798913, -0.61187355097162832, 0.51087607795775236, 0.2931954008476173], [0.49694900061157543, 0.55876615651089523, -0.11498732479407375, -0.26696213972273747, 0.41713942402312876], [-0.62217761243612757, 0.41841649755170557, -0.49397906785935802, -0.22808653448173508, 0.052949197789072006], [-0.6612396243058607, 0.60174579020287766, 0.51426619164191389, 0.18966396805539354, 0.35820443344479147]], [[0.082953819730307285, 0.89226008004604274, 0.37273663342948599, 0.085293826191940078, 0.48675435575822013], [-0.011688031711182982, -0.33744982335742602, -0.16992966532338988, -0.19892733264578605, -0.10392770001180238], [0.4484398554585084, -0.47895973955874982, 0.15429985373273208, -0.47369717461609906, 0.91018499496910676], [0.8683488065480891, -0.31032882243262411, -0.80389446130095776, -0.67616243406061272, -0.82019140993661033]], [[-0.34258175769769705, -0.28960168615031534, 0.81931819067811973, -0.95915286239505937, -0.85992249461870374], [-0.87295404697570933, -0.7847432045054471, 0.36371739431105865, 0.60557225401473391, -0.64780626653323115], [0.78205869140217188, -0.38672749041288157, 0.80665303765936081, 0.74139821014829554, -0.69088446976824391], [0.56224488311142196, -0.87454711161134424, -0.37411719443468078, 0.14022907713154148, -0.05450979030087777]], [[-0.0016059350726666255, 0.89101630510406937, -0.0047549047444506998, 0.36374864491815961, 0.5740964287040401], [0.2366859040361069, -0.18501044499064456, 0.02213833509590607, -0.34529987854662497, 0.2226880597623386], [0.042060278582178784, -0.099346963048728809, 0.10512983152376776, -0.49663216498827967, 1.0438303449575033], [0.41610832949652343, -0.11000898038092402, -0.58510905377220102, -0.47791835015559514, -0.50161519812832223]], [[-0.74721481912994336, 0.11494672920915497, -0.33283075904530851, -0.0099566654611320526, -0.46484319543514907], [-0.079365033529910201, -0.54836505425099979, 1.1777554818704761, 0.050131273049621783, 0.48614628512536429], [-0.46012302751070472, 0.83621175768799072, 0.90925505102610749, 0.59092751791277631, 0.17822996351467141], [-0.70283645961329533, -0.44722783145825806, -0.0013705605502960516, 0.63990712461175936, 0.81704977256128641]]], [[[-0.65655420569568601, -0.66258057161184092, -0.32665949697935692, -0.28894306697952615, -0.88489158406480872], [-0.24382650110811988, -0.30079848351073774, 1.0245999925901155, 0.32267164544470761, 0.26766352586982767], [-0.48039420714038894, 0.85286399694461701, 0.69381763975156729, 0.9352010705278555, -0.72342505375636712], [-1.0161201421880932, -0.27186723943141095, 0.52358765064701107, 0.98622104283345957, 1.1735835686487734]], [[0.64517945201771298, -0.7290899558172903, 0.17829268563286671, -0.15461665317020756, 0.043854594149984133], [-0.012938110166338168, 0.67314290241764074, -1.0113269812627315, 0.14904585522869496, -0.48585810497670046], [0.25038556211578633, -0.55717984169081602, -0.90758570629770452, -0.19038274239977082, -0.84881393181150888], [0.1910226801686819, 0.54533269311885246, 0.4839226670316128, -0.17471257602286133, -0.2777383258418521]], [[0.289987563194405, -0.16894632335590506, 0.41302693927503081, -0.28479055910283591, -0.024184985727416286], [-0.219921108066644, 0.062147569182271947, -0.50907177890452726, 0.16009180344694737, -0.44893760895668511], [0.46729842878479944, -0.54658787552031307, -0.24190542284189462, -0.078341330640547907, -0.32331250455610788], [0.51954571157571361, -0.018906956125837843, -0.092478353485737977, -0.27992531774511653, -0.42857751492052176]], [[-0.018930462067848108, 0.43214760466202728, 0.23481412363919899, -0.030847287858320513, 0.15775143493302585], [-0.076263143847338039, -0.25508868600368773, -0.0033471957710333247, -0.051501232530364302, -0.079367355320510619], [0.2641841166318159, -0.23196781533430699, 0.181261550541229, -0.15442021213817142, 0.41341870642598449], [0.44747499774074367, -0.24363711376362299, -0.43316774348161224, -0.29998436374124737, -0.37916553480437221]], [[0.049126972189410506, -0.35456908746358418, 0.86255014805887298, -0.84563291684889907, -0.56167878048222053], [-0.73174558867150519, -0.41460104176668, -0.23097080658447922, 0.52026316698229069, -0.79756515343355794], [0.88646912066497419, -0.7151195209493435, 0.2713616145632316, 0.39649057435704982, -0.73956125564785968], [0.78712215281796649, -0.54328546564835634, -0.2893647544221129, -0.14705845814793655, -0.39595063732417446]]], [[[0.4416833472007427, 0.25477942786483848, -0.28847122685499987, 0.54387409706739509, 0.69540184873587207], [0.50439797079007032, 0.55863288612324835, -0.60496278458570285, -0.37903668929192591, 0.18453633027407101], [-0.21570797488520704, -0.12764069091652611, -0.7141646320156726, -0.66884706172185782, 0.45795104436219219], [0.045818370454665844, 0.57950307836616022, 0.087107752954343712, -0.38373165463929276, -0.35498307497216414]], [[-0.34128899243279176, -1.0641613433913359, -0.051057545899957729, -0.54109215925955312, -0.9753338454621403], [-0.40685230868800981, -0.079703163471732008, 0.49668385156624706, 0.50035639587952696, -0.13343523193995194], [-0.16435457358008101, 0.42878254880043443, 0.32839939680017377, 0.92165881462005583, -1.2633799520766362], [-0.74127298869588865, -0.1378753751224151, 0.67372797514602811, 0.85977804026326221, 0.94268481242101332]], [[0.51195510769955999, -0.15039503243739277, 0.047058041472855416, 0.12980638785702281, 0.35179571264475712], [0.17462935315482347, 0.50334599959008985, -0.77699247965286045, -0.090621339676892232, -0.20413916839868801], [0.12316181865033879, -0.41364404150847012, -0.71151087686002823, -0.41698676094719417, -0.13659647691005275], [0.25271790159259866, 0.44811092472933289, 0.15979024764361643, -0.33685723620417363, -0.40300103202292875]], [[0.24708503502194074, -0.063915258065203595, 0.62001900248268882, -0.43539481383309392, -0.086737960947057713], [-0.37236676405291214, -0.13065957280488377, -0.47867398311204806, 0.22982915260292122, -0.57992703253780098], [0.68133627882728298, -0.69862297925441696, -0.078040458545349023, -0.034261262771271964, -0.28453963335952392], [0.76930385543580948, -0.22272611399934422, -0.29690342866344155, -0.37490382958095808, -0.58263252422690948]], [[-0.40823393637043959, -0.93037745399419403, 0.60560518563248911, -1.0684552923860056, -1.2387380588826895], [-0.90899608408339794, -0.58194528517243127, 0.48545951109217328, 0.77547464476413785, -0.61532427789589805], [0.51518360811067365, -0.083099773074239658, 0.72821105171220546, 1.1032158229844058, -1.3658821195220949], [-0.0064876222102040471, -0.69675625033012667, 0.16885827144828616, 0.61182258458423699, 0.50532775928360452]]], [[[0.42758146739692104, -0.63072215833674061, 0.2170132625531736, -0.24516125085685289, -0.10926847015659083], [-0.1232396424916854, 0.41544869642800819, -0.69055862056078543, 0.2015021028244158, -0.43818408325540231], [0.2609586526052855, -0.43436441105666779, -0.57512410369992184, -0.015465602835763786, -0.77295604148295705], [0.1631624052013439, 0.30748825471314506, 0.35707659052205382, -0.070539015658064835, -0.16368784525832233]], [[-0.38220686557339606, -1.1441945999138217, -0.21541019406766981, -0.45386240803972677, -0.99222969647951975], [-0.32158017544709522, -0.00072029707337663632, 0.58475426743386549, 0.46865110713342556, -0.0096853757219389214], [-0.34615975442226637, 0.60652678392951376, 0.30335085258349709, 0.96012385096528197, -1.2986313141232411], [-0.97801595032488042, -0.044379771605709988, 0.82070187538689399, 0.99220534074357458, 1.1302104059076648]], [[-0.48841496082425861, 0.42696043260627436, 0.95181690121786933, -0.8460749945997974, -0.59053255950799832], [-0.85800297830109251, -1.1598776593632933, 0.57397701367855647, 0.43919855282748688, -0.54260345206274208], [0.93451075123344407, -0.4695830190511639, 1.1532870322381679, 0.52644767322653607, 0.080175258925901272], [0.96652766087463238, -1.1938778450320353, -0.95402039945855532, -0.17810651601643407, -0.41599645767412857]], [[-0.15854029747954429, 0.46394359364125476, -0.71570416395822845, 0.71738769823116544, 0.46735224213696469], [0.59413971736770899, 0.1932112455280231, 0.37138432299808261, -0.45794180504551496, 0.73311150150277016], [-0.74545300739147768, 0.66365223925937178, -0.040762773970123248, -0.3053071410749984, 0.79900006824661629], [-0.6355805416845961, 0.32277376708212635, 0.10752082611508873, 0.12282667109452117, 0.33754759055290923]], [[0.30334691839922595, -0.62647790170470052, -0.76270479847063133, 0.52335824562289823, 0.20950506034124264], [0.56988362364488443, 0.90273837283718861, -0.33432809122528961, -0.2129684466792843, 0.38729860046261433], [-0.77805114859964319, 0.47705728607039349, -0.83477879732836791, -0.17483642680518943, -0.40669611352314483], [-0.95618189365491013, 0.91269708522493809, 0.93663533643718755, 0.36522835060772635, 0.5736462351363012]]]])+(1.-msk_ref)*numarray.array([[[[0.12244321779134791, 0.038184884462422908, -0.58024128421750876, -0.12567365231441813, -0.92809725389545594], [0.1572834903693337, 0.87196099148350825, -0.45195371911092252, 0.77889164200949168, 0.53797462368965532], [-0.59795462040849701, 0.78690103019968927, 0.12010462283729317, 0.64998370715729514, 0.82388309523698933], [0.66445521055704304, -0.48656071807113416, 0.27628913096657337, -0.42787004126519607, 0.34139933096285224]], [[-0.44633372042496627, 0.27285179347363192, -0.55615971115912577, -1.4271575118657851, -0.76066748343792501], [1.1065068486851513, 0.32837050523539568, 0.40398389041703919, 0.32770341855146473, 0.6760853047221389], [0.40535410781505993, 0.89796484399780574, 0.38104483295256997, 0.92235052781763072, 0.81767859829800627], [0.018300683341782364, -0.21540093482552913, -0.11492165243529923, 0.015775854076809426, 0.29999514900954832]], [[-0.32066509296410117, 0.32615985841071327, -0.613972417881124, -0.9393308527436558, -0.54081607092901685], [0.79999501634873971, -0.18939935633372629, 0.48070596659375242, 0.45570213864268755, 0.29260358366147976], [0.60289550708829498, 0.6615856083005951, 0.0013953903641918397, 0.67578342750393183, 0.4269498373935422], [-0.45561095799322937, 0.080135850926913499, 0.084083317943565175, -0.33749701146433797, 0.35148634174485183]], [[-0.086204194752944593, -0.21586230210736454, 1.0074313565611253, 0.27499102759930666, 1.2458332399459686], [-0.35819373613275174, -0.69675806822740527, 0.30810898156138311, -1.2246623382517323, -0.56716860588659679], [0.36688940338758258, -1.1139801755053576, 0.068316494816058781, -0.94576494716649628, -0.97177846345145147], [-0.35350623429567468, 0.39586699257748303, -0.48914042456975237, 0.87122823846303188, -0.59857676189151054]], [[0.33117116760831905, -0.26247024793909984, 0.42226128286110559, 0.92257046561684064, 0.37527713732761558], [-0.74876327876470883, 0.17002508922319542, -0.47034743448128347, -0.23407403547574604, -0.26698662507377868], [-0.56825366230202223, -0.50740815414236706, -0.081765287655584246, -0.544771795835991, -0.33866954306197805], [0.37850043180825593, -0.070977516154917375, 0.024744842511378665, 0.12949254911221891, -0.23537539227399851]]], [[[-0.38609762289769778, 0.36800994064485282, -0.38271205637714928, -0.80530284648377071, 0.0074918361281718204], [0.69851225620161295, -0.91671325753095811, 0.83536452735905753, 0.11540055806461978, -0.12601308493902041], [1.1044665491899268, 0.2046539127789829, -0.21313463604949981, 0.29596477902586593, -0.14173199617453699], [-1.081743526210265, 0.4851066881712553, 0.011815563876112819, -0.27049104709959509, 0.2208055151849137]], [[0.058290682782355066, -0.095894411822723416, 0.094178862685909123, 0.062376730685391568, -0.065672484408945908], [-0.08191711257893973, 0.34344357835668432, -0.21300967525811301, -0.0484416327017132, 0.12789006270566061], [-0.30500191442760721, 0.020034929682334821, 0.14195925110633786, 0.00027661232112409506, 0.1364523250217031], [0.36781167207315812, -0.18726693960688179, -0.047937412821222519, 0.1423297708951248, -0.058671428650958979]], [[-0.20213642090476283, 0.0067499065527430856, 0.37687969960460982, -0.2510822193911858, 0.56173278300418839], [0.13224565924587683, -0.53228891009229617, 0.41632800208086168, -0.59008051442924314, -0.23181182817333074], [0.50841996826073454, -0.42143544081324474, 0.048917677319900446, -0.30576347000556681, -0.43357375492145028], [-0.43030486489940145, 0.28999545907689295, -0.28147308604283333, 0.41650518743863824, -0.23012115663543198]], [[-0.086813664366941545, -0.1457700313589628, 0.37268084481930086, -0.24304226149766261, 0.16347780100788795], [0.079547209740156249, 0.34042997352285526, -0.070424154989076559, -0.46277166008983217, 0.17672250490724473], [-0.18500979215403798, -0.13616903251111701, 0.36096923810254489, -0.090646149943335447, 0.071311279141290596], [0.4179518257443165, -0.19061127720193491, -0.30503009483079457, 0.56987734445662619, -0.23507563851675653]], [[0.35168917701000296, 0.26204027259860097, -1.0466849495969761, 0.68288491301720544, -0.83981100796522123], [-0.26970498362061551, -0.11516235537816943, -0.26791094506545277, 1.4155625243182435, -0.10101865722747216], [-0.14553697298413523, 0.6557727184610912, -0.7088657745992013, 0.46153702393736068, 0.286044559985137], [-0.35597415631875473, 0.072089797757533131, 0.82933525889181403, -1.4453099487889174, 0.652806308973372]]], [[[0.061695565325384075, 0.11561674771904808, -0.71467418077975475, -0.28499696005386876, -1.0138814297775633], [0.30305019722796306, 0.76630900093542897, -0.33089796700803098, 0.88221340343636045, 0.55771145929123789], [-0.43566741472391191, 0.89994315020226168, 0.081169608999048792, 0.76709927486929841, 0.868841511754882], [0.50671714941096346, -0.43264584708490572, 0.31085070355652167, -0.53205197229735468, 0.42005024558380571]], [[0.071298105201827985, 0.12379680686021269, -0.50747958354530642, -0.0085240702634783311, -0.54074642762128811], [0.097413982899578241, 0.1813420052659572, -0.11662830311938836, 0.62827294262662547, 0.16624449337644476], [-0.10809314507515876, 0.47528847947081004, -0.14071133031349181, 0.39243949425975955, 0.35941971380604576], [0.025545246697272275, -0.10312219450184198, 0.29135949043580572, -0.52189569701916161, 0.30617584662760816]], [[0.40183049154922612, -0.21986891507359418, 0.27575511588304547, 1.1042840611656428, 0.30477596368963972], [-0.84278712436813685, 0.064653806759812693, -0.49510012906126954, -0.025218967386681924, -0.34939164226983116], [-0.55609315427453354, -0.46498280368660044, -0.24301888994985005, -0.53010967442930823, -0.37144300682848574], [0.25012325866738927, -0.0098388971897234168, 0.16986200162415638, -0.12354378114697162, -0.14112363860514246]], [[0.37087069519663735, -0.17942614495281065, 0.13556274091489615, 0.94785971549429981, 0.11474557376284947], [-0.70994679801530769, 0.1782871852831675, -0.49690729433469966, 0.1159398999190136, -0.22654542439587316], [-0.56813767513374747, -0.27662946959515911, -0.20578968788623619, -0.35602913535915215, -0.19749975251040056], [0.30421768635471591, -0.07669356964482249, 0.20155078271870913, -0.19471781887104836, -0.060841233332222355]], [[0.20832578132176635, -0.36155401761633887, 0.21593418927624475, 0.046218679746868552, -0.55237810324397363], [-0.16681537617791825, 1.6585155522585944, -0.92943230293355183, -0.016998334772958514, 0.73234923494552118], [-1.3453806630365985, 0.35200360999092245, 0.67477190096517314, 0.24652973303909756, 0.84049082481744475], [1.6811722743521482, -0.91132828664874865, -0.16769143381768073, 0.52571408616686455, -0.1445547445210936]]], [[[0.39284116651995893, -0.38619971830755517, 0.79127672890537526, 1.2258077817551276, 0.79084594842504474], [-1.030604947841522, 0.039374338124210539, -0.51266266032737851, -0.6114217631543386, -0.47800501862676525], [-0.62183120599149744, -0.92279252274079004, -0.081293874452765424, -0.92628215178760498, -0.67239711480299369], [0.38954778527866563, 0.0098295572212152571, -0.097070730829571655, 0.39109784281727039, -0.4508143768220243]], [[0.40786335143747432, 0.13005660982275988, -0.69912646420776647, 0.92433268268737134, -0.50460059941304525], [-0.51019078369247273, -0.12160999663123351, -0.35352470502941497, 1.0644159498692123, -0.23145653932959068], [-0.26870364341563874, 0.31288394751021847, -0.65092046991338504, 0.14525731656823293, 0.050029612684660496], [-0.23639678386560209, 0.082998291514953748, 0.69740583292614544, -1.1598196715188469, 0.44779422204504299]], [[-0.46394667287298808, 0.27030936791537091, -0.44163405330355537, -1.3682307574167494, -0.55200213848432345], [1.0539975191091178, 0.10579379108505382, 0.50660616488092181, 0.17613376606736553, 0.53575113363554316], [0.54821576512546177, 0.71817914293045804, 0.32728158192524215, 0.77055350686504198, 0.6174764772681457], [-0.15866452281119692, -0.090816103288218153, -0.15745899844054351, 0.077336274127933369, 0.23388439667492869]], [[-0.39315972718520481, 0.42652135705806765, -0.5187001014148328, -0.83310908364321834, -0.081341692474097171], [0.74976610297183444, -0.99632082008877842, 0.88595313067242587, 0.2592906005522409, -0.13395015991814052], [1.1881562075594119, 0.29636427781311914, -0.28855326183200364, 0.37784795264997806, -0.1132911313836877], [-1.2020192039062949, 0.52753835082549183, 0.086333178080913398, -0.42387233894387888, 0.30336213309963578]], [[0.23376515662491668, 0.014845842514898729, 0.017163100493982994, 0.83632657086709361, 0.37559006837753395], [-0.56155517182797654, -0.65293942754809564, 0.0061328985230437727, 0.11300024841764449, -0.5650335728804845], [0.1458198580759118, -0.42386522002591903, -0.51774573931493151, -0.4439756829776571, -0.59194096726916667], [-0.54983383007774855, 0.37806085560258645, 0.26480769751566224, -0.43426413767679228, 0.015639019076430734]]]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5, 4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_expandedData_rank4_taggedData_rank4_offset2(self):
      arg0=Data(numarray.array([[[[-0.76952432843437801, 0.31813576746023875, -0.76854634115966047], [0.39488444038592863, -0.61175480019858841, 0.58699384443802916]], [[-0.15222342678338374, 0.1919132040707392, 0.24231731808155788], [0.57377646387302672, -0.22064951398059818, 0.79899204628636533]], [[0.78738620402956871, 0.95943544508816148, 0.3444958815461141], [0.90780217237809735, -0.99849484099943964, -0.39169624897625432]], [[-0.094278676214802459, 0.19354005981196232, -0.19663730134553847], [0.70314454547938121, -0.74343457175948502, -0.80398632250367652]], [[-0.56676596030011739, 0.032916053511477417, 0.19273762718858811], [0.83407773737320845, 0.44638379074638723, -0.93383023634395457]]], [[[-0.68260743099201804, 0.52155784363455093, -0.15504573686258438], [-0.26502148191145269, -0.37821105853242987, -0.44874591181711754]], [[-0.10296023743400973, 0.11796782679108375, 0.81594185022021537], [0.94776121080896902, -0.62444179815251788, -0.26795766917002339]], [[-0.95227425744978444, -0.010450277682961584, -0.31689508816907352], [0.25346885420825283, 0.84728570583799168, 0.44266325854230137]], [[-0.18109698265044805, 0.7228300564552308, -0.49433257736186653], [0.8118118613150811, -0.10068526898263697, 0.26007350414496733]], [[-0.59077124274611736, 0.058006126761633192, -0.1392088755966121], [0.56235734592246578, 0.96376830043716688, -0.66238691564623586]]], [[[-0.95689899621968189, 0.91585090118996737, -0.38196474911750222], [-0.28062614713339418, 0.91319057402541337, -0.90375620135339241]], [[0.024090461172350031, 0.84106723469852018, -0.59545476748090476], [0.72336320528202713, 0.77860691709673269, -0.069879362649162946]], [[0.40237640932560947, -0.34717909427084215, -0.40581045146983685], [0.76134987520553299, 0.91448007853906121, -0.73039430748389589]], [[0.40316448395598936, 0.19220788228108465, -0.22781813532910666], [-0.21340214123644508, 0.25676338422414879, 0.50931139178674711]], [[0.34654683372665751, -0.086090381034187757, -0.35030222219101148], [-0.27479472070562783, 0.88094473090299674, -0.17296360512756537]]], [[[-0.5609232640863826, -0.36948473676519122, 0.26250369663506445], [-0.048765565373043218, 0.42640573397138137, -0.39094441826039805]], [[-0.016328889805957703, -0.21713091763965187, 0.92483769730896648], [0.88693775341333381, -0.87938968421010877, 0.13168072868973391]], [[-0.99609343945888695, -0.090624103565358549, -0.60025851293107135], [0.36786586486864947, 0.50141261667648629, -0.74600422712801318]], [[0.95570530818608845, 0.56521346259001404, -0.48345642543423373], [-0.72641337023460006, -0.14215904802958002, -0.89461275830702092]], [[0.53379384615874126, -0.34676400351799219, 0.6390585206085222], [-0.13059525313028253, -0.84063734851274186, -0.26322469267196791]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[-0.64597688354493643, -0.3719789763830279, -0.87753757764536799], [-0.54325738636578413, 0.76098579955265278, 0.54427933071493828]], [[0.79089379191184905, -0.33192435142958487, 0.45457572967164639], [0.35200213531668156, 0.52115499178698355, 0.56881982655358687]], [[-0.057211320871668025, -0.82292605285275378, 0.88572485552362679], [0.8867850653130549, -0.10258744938476894, -0.010388665223272087]], [[0.82155359263291938, -0.28499952347404545, 0.37047054397817125], [-0.0038144433463693783, -0.037529697519929073, -0.68552393479123563]], [[-0.43031723367895869, -0.30204471113722975, -0.7614198874796978], [0.078130580236866143, -0.082523394457212795, 0.49684470071609677]]], [[[-0.29904874639289991, 0.16397268492675532, 0.63576605834844657], [0.27633031243626371, 0.45588227308851259, 0.69647237487154046]], [[-0.41928023876695586, 0.8952077775905698, -0.6624638374970937], [-0.60742230294963329, 0.33610300992018982, 0.8192477623028771]], [[-0.30051364849858886, -0.57056367943505815, -0.12736568899487932], [-0.82065583489823091, 0.05376156033107593, -0.52742731552726707]], [[-0.54430227314979285, -0.75686718944515929, -0.23318022429054408], [-0.34860088312578474, 0.021845681192332433, -0.0498999235936195]], [[0.5192279528070638, 0.11255893581420939, -0.57573301285230882], [0.56904526039692005, -0.82145212600131612, 0.4305668105032836]]], [[[0.092184149589346509, -0.54329509447015978, 0.90536230427851083], [0.57051482901509276, 0.027368044750294196, -0.29706309396976338]], [[-0.66031953786738429, -0.57207417572621932, 0.0033697055854058355], [0.62455399841060655, -0.28913699366057011, 0.91526501640731617]], [[-0.3942975858733595, 0.40310136317751666, -0.52309631653395838], [-0.73422762744664105, -0.79835659525204972, 0.57976474749757534]], [[-0.2738070871399978, 0.84667358917324598, 0.2411006958538966], [-0.030579986533748604, -0.99066843872093679, 0.83466752503453989]], [[-0.62818470532338067, -0.25147461462347942, -0.83151343427037383], [0.21428643052346286, 0.40404869719405134, 0.99497830297606304]]], [[[-0.86467185127646085, 0.48398527910925671, 0.22547607551570881], [0.030680521398388949, 0.74803641473437632, -0.76138626516382546]], [[0.96301148815121773, -0.53124306773695418, 0.94740091491843903], [0.76186066268745289, 0.87592384881972607, 0.50677578270403734]], [[-0.59975516658367201, -0.7869901779556272, -0.60419780863012651], [-0.22782199842932616, -0.055237176778246022, 0.96757260850016591]], [[-0.085493935128030829, -0.63901157440586132, 0.62799858686857668], [0.072914088063303906, 0.023518864849618959, 0.76313018771263419]], [[-0.84706378128596271, -0.026010598150187692, -0.54258841869112451], [0.22223745244776816, -0.57874832749017369, -0.90140175522892174]]]]))
      arg0.expand()
      arg1=Data(numarray.array([[[[-0.74467054057485482, -0.30359266923764228, -0.31295192730817289, 0.94664586657412664, 0.93284665743849882], [-0.92419394842570513, -0.1794614450667662, -0.12113197720123892, -0.1554219572524651, 0.62421439383445487], [0.24183965943337649, -0.57882735117019934, -0.89851500760511205, 0.35801436574727119, 0.55327714397158712], [-0.37458202798460571, -0.98345097285324279, -0.45417294216410209, -0.14706933345082285, -0.62301871387358876]], [[0.096241662748937973, 0.39088631167348109, 0.095529121320627297, -0.54591369936417422, 0.17915066349397679], [-0.48229133755466447, -0.79276608243995783, 0.53920007667230085, -0.16919184215408012, 0.80234335430743453], [0.058900428476948319, 0.71897903349379066, -0.57323954921949727, -0.8399427750010231, 0.59876821797224777], [0.1235173333881221, -0.74610879727574697, -0.48063547633818393, -0.14088592371004904, 0.7784444966574704]], [[0.76732770211298051, 0.16052324868911505, -0.091214518418344825, -0.036747353140392791, -0.40047907278438788], [0.76485556404436372, -0.85178984229330945, -0.055801121445521407, -0.012940861165947837, 0.048876292079309103], [-0.15190843787447439, 0.18342815343649232, 0.14340595000795653, 0.6956647512359253, -0.57689583317441295], [0.6137228377325834, -0.86001000858940713, -0.33234757967658513, 0.83631107805194405, -0.99348447966815634]]], [[[0.033389601761300236, 0.33706984789749939, 0.26986235508475653, -0.13856386313363922, -0.18803801336907355], [0.18798642567224166, -0.66871618302497549, 0.34638301709698394, -0.7935664254214998, -0.094979032347574766], [0.77454570658978983, -0.16821447312228544, 0.8811472247846992, 0.48434015602471647, 0.10058035181350888], [0.43705823572786651, 0.46719239581314476, -0.49391962521136046, -0.50788667877667359, -0.030319118637052611]], [[-0.80329225103173196, 0.08115969088348618, -0.45591779189565362, -0.651334514785185, -0.83737846240226332], [0.12590332932973847, -0.66622608634162606, 0.3314528844764737, -0.6289606529818812, -0.89630480282793124], [-0.47425553610212234, -0.72019779242426485, -0.24854124514113551, 0.95892540223574718, -0.27801985483693925], [0.10623156057009053, 0.0056337425395811547, -0.17561681860576739, 0.53863469898569982, -0.89353057452071338]], [[0.9400697612099056, -0.24877271751986707, -0.65628053350424831, 0.042886102600617981, -0.27388080840007234], [0.12913788154813233, 0.015299318099098791, 0.87171460331470918, -0.28200407384262438, -0.67823803716669029], [0.60486624154306434, -0.062662648877114702, -0.20538242968140019, 0.59021369947478042, 0.0077246315807437682], [-0.78179916931046978, -0.33818733092303188, 0.70669176243621989, -0.77225499957700872, -0.72672477831239335]]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[[-0.51230231658239211, -0.18594836434808992, 0.60975523177464996, 0.62650150248895686, 0.37729312304208951], [0.21672497191123252, 0.55345168206566697, -0.17474858032663176, -0.37648457422142156, -0.69369372555757414], [0.59385189886399847, 0.030907377176584871, 0.73261731971959376, -0.099876300661579265, 0.91568934468461416], [0.3079081017010068, 0.53571531066146627, -0.87552618149074135, -0.77018320481006874, 0.74730120106001752]], [[-0.2643844897905343, 0.96545234969460547, -0.88443336631120539, -0.44841175079044104, 0.30738565642524374], [-0.55400334611701929, 0.18137319929070617, 0.57414846854981105, -0.9154279730913466, -0.35377132263582345], [0.64341547362334994, -0.15569834523377057, -0.58632990869558022, 0.070319540879720366, 0.9005574104039491], [0.2904230892434263, 0.95197507199015385, -0.25153028479420447, 0.91224745432956267, 0.38559689912633655]], [[0.31989553551225591, 0.23963005448128438, 0.33391198799095467, -0.086857421569108473, -0.91310265177675176], [-0.6219872911398463, 0.70530219113859749, 0.47786480556508004, -0.57176740295969175, 0.12283360772271235], [-0.16386519731932569, 0.67879229952502218, -0.23941539671495504, 0.21871686471675766, -0.55337385415756524], [-0.94842059164048198, 0.65579172471258751, -0.79246517048905329, -0.55016939766564477, 0.39409158034376657]]], [[[0.81408007513097291, -0.60712509061153419, -0.39886170214228445, 0.46620397592446139, 0.22751596490341375], [-0.25792922586216305, 0.10235508051952968, 0.67716447749053255, -0.33627908912900306, 0.67812781020682933], [0.46655944586115083, -0.30336413187820077, 0.9340974822605792, 0.70381019824417335, -0.91788896167938727], [-0.79018101791010165, 0.28565152665750793, -0.55719996655785331, -0.56517927374376842, 0.78144068418229051]], [[0.23311688337916014, -0.92199352397178913, 0.2397226966189947, 0.5565246158464312, 0.74053203605664919], [0.58272742870860239, -0.91193236034013547, 0.39509638759113108, -0.34766514896501399, 0.66043882620799521], [0.50784172842420405, -0.48112597268172519, -0.42543955056357996, -0.58865258204269622, -0.029491159673495471], [-0.83690962742089514, -0.2781356557276391, 0.17838158319893971, 0.92710839398716538, 0.10302447716902496]], [[-0.02457573154995063, -0.69477031026130165, -0.70773868942648277, -0.97846237759927912, 0.11725001978466554], [0.57357337454309509, -0.8173317810147398, -0.23943860941296524, 0.9217209285012995, 0.22989904757755419], [-0.007106993187560473, -0.870870429521996, -0.30249001418900767, 0.1646096510501851, -0.79708002362179853], [0.98061475893348105, 0.036453262517462504, -0.32825084417019323, 0.97569681669549935, -0.048477351419246917]]]]))
      res=generalTensorProduct(arg0,arg1,offset=2)
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[[[1.0703512028613864, 0.17203306014464545, 0.34155964577674602, -0.50498547400944704, -0.075816578040077465], [0.042942747406928342, 0.69301466484731822, 0.75334305833388893, -0.018411338438489938, -0.14996626821882847], [0.90042241474809592, 0.87055822846499153, 0.77828644224732324, -1.1262842208424115, 0.42243245359418108], [-0.49544064649687786, 1.1629097572777658, 0.77923127997772934, -1.557769081189333, 1.598684055034113]], [[1.2652756128041824, 0.13685520049557579, -0.22505516229782041, -0.15929662942005524, -0.34661597506096126], [0.41672546133956695, -0.55569458417320428, 0.93050170042586977, -0.55381596742541184, -0.32783050955763637], [0.97002372923807567, 0.28286730034583141, 0.45783565605664694, 0.49076994360332521, 0.016125436922146658], [-0.16787709207418783, -0.20526724081159792, 0.21635330021980714, -0.82928632310747175, -0.39739330094339564]], [[0.23450810775567144, 0.51368364890328322, 0.77109278758031208, 0.71671488178849441, 1.5411255368532149], [-0.93257754015671168, -1.143182816784633, 0.04477268123012762, -0.27109124851131228, 2.3525289814043999], [1.134352682233803, 0.88819658222630604, -0.079539860777068372, -1.0333031694155079, 1.1772667466833113], [0.63190972937311185, -1.2355091424597868, -1.483077927414763, -0.65926080288451971, 1.0633768672189734]], [[-0.19718236185916482, 0.44939138393639833, 1.1222674460713535, 0.16463554277332315, 0.73598902537426536], [-0.2218543946961615, 0.043771974493536925, -0.57695326282183379, 0.12077884160327856, 1.2316786658932068], [0.42936149983291588, 0.62517426526412234, 0.91503971319130506, -1.1799702333321378, 0.44836423914330764], [0.79543458607761253, 0.71364001615024086, -0.76975925116548927, -0.31452646903917381, 1.6319932601721612]], [[-0.63547795355581571, 0.76555360767439895, 0.79736094745918518, -1.0079451183490544, -0.87486849804607036], [0.74774662931221003, -0.95799481824252719, -0.30152105162988274, -0.59928544190390243, -0.16390983841269313], [-0.29491722786748598, -0.016193192666934024, 1.3338114832100876, 0.18438951541455473, -0.45248431810721274], [1.4766818235643941, 1.0750704324598703, -0.97275674344614926, 0.77788099183289472, 0.44173878371544567]]], [[[0.31265493840775571, 0.37782548522442405, 0.67300673169999525, -0.66139620102004715, 0.0082047470428085051], [0.10534266335900035, 0.26342745195564954, -0.23577510826284259, 0.59459547561308379, 0.65331744380891488], [-0.40814262821948732, 1.0867480781653347, 0.24476358648046051, -1.5462145850015134, 0.099094243136911453], [0.41978020906922786, 0.44132634952748562, -0.0089338073794699158, 0.17467354850030786, 1.6574097054706434]], [[0.99547538545517456, 0.54379039995465028, 0.68537982492072047, 0.072052541590768071, 0.016387706096164023], [0.72728148678061277, -0.99191789242213513, -0.081717692676021747, -0.29831290328802862, 0.72167347549313743], [0.72625084313321886, 0.60116469163889097, 1.1872489106908086, 0.13376793938625334, -0.19018011436776228], [1.1112807728245926, -0.15858986995916374, -0.82893292525920415, 0.07013383170965154, 0.069306027541457288]], [[0.20894198010014398, 0.27822919645626332, -0.2824790144452638, -1.4521204299932857, -1.641685733592346], [0.85423660360145537, -0.27810096129627121, 0.88190779887390225, -0.70501325963883166, -1.7020281997281501], [-0.1205288325371377, -0.19502750237850086, 0.73802126053669925, 0.64391187837893393, -0.55696227149273425], [0.015643644545355329, 1.19033404140516, 0.58167490777182596, -0.13770512344270397, -0.18647492045384795]], [[0.17758188187806734, 0.45893874276391255, 0.26511676613065471, -0.58362658425730862, 0.018960666036109949], [-0.38582062067276451, -0.59128138706808142, 0.9138062601264263, -0.74199476410751974, 0.27950124756149153], [0.9077174779864472, 0.45350693954685251, 0.3644090307306202, -0.56571858778331108, 0.72944304602784882], [-0.0054776189742715142, 0.35467263315855796, -0.3003741640835309, -1.1560026517694699, 1.042971718547796]], [[-1.0394069091677132, 0.61223799393715239, 0.3501937446055528, -1.3198670944397697, -1.216325213320214], [0.55305461400947242, -0.84966703168181479, 0.047428677979018619, -0.78183829758190959, -0.79701740806458687], [-0.54046479586088814, -0.38906861276879018, 0.86962811606088286, 0.44853519119279528, -0.42832029867546528], [1.0090404465671357, 1.1496062594950567, -0.62841838519010318, 0.70732701227223604, 0.15468430948461209]]], [[[-1.0848974104020928, 0.79154041701048672, 0.52284188652973174, -1.9864503170852394, -1.0399921014851616], [0.096016107747767157, -0.66353435083605683, 0.048710044650512985, -0.098090954170082845, -0.060033928828555516], [-1.3165435279459596, 0.58845311999733796, -0.0086126951959468179, -1.1712115112202497, -0.049785830608533574], [0.91805567642294184, 0.7659095176705869, -0.53908966651182577, 1.0245913029427758, 1.537907790019172]], [[-1.0608902555456823, 0.55026314934194664, 0.013209594666338968, -1.0248260156402806, -0.35725219430105276], [-0.65835299840195538, -1.1674125905600259, 0.93152981319400274, -1.1823838071099069, -0.058419917052183697], [0.29457140960877892, -0.1965099961224531, -0.13094485852234666, -0.056324466866529775, 0.71619655635162971], [0.18291444042521426, 0.22684618428064302, -0.76069295874935283, -0.51406006714130781, 0.56443266540240555]], [[-2.0402357466757972, 0.18954108804243183, 0.14580111629193082, -0.14710153499186157, -0.23321093997998529], [-0.35088079983875275, -0.58086602205414728, -0.28316462334777126, -0.97192623793726329, -0.44380616220148172], [-0.14728021432091193, -1.2978661824572695, 0.37286538144392056, 0.96794084827056559, 0.065547414151675976], [0.55826179273403309, 0.82017587405421322, -0.93381913449464293, 0.32029353886398654, -0.42718502906691358]], [[-0.19113068525403637, -0.2616318282322706, -0.5959326821809352, 0.16927014111043626, 0.18739017758982723], [-0.58156828797725013, -0.05124007943291279, 0.52267516586871232, -0.2280056347538903, -0.16056099902840487], [0.16443388379261384, -0.31789534743957271, -0.86155958213388706, 0.26787027439952038, 0.38066185998921093], [-0.7312663688023876, -0.61447059835349815, 0.22046418101010692, -0.42353184304315161, -0.46830704613380292]], [[-1.414574515804409, -0.173191467095206, -0.44700646941357419, -0.15520310012478739, -0.19050026312055229], [-0.50976640161057352, -0.10135329568209688, -0.022818039123250866, -0.32199725227717541, -0.51606075769495763], [-0.60330196123156821, -0.90413489815990522, -0.73782456307531297, 0.56226750343767418, 0.068380994697448752], [-0.24672670340121808, -0.040240501154725099, -0.14080616856691092, 0.41584486872646725, -0.58802450523091676]]], [[[-0.12810214742584725, 0.18342947237144452, 0.16530457643561522, -0.62667693509200473, -0.93539708928198384], [0.8914114902985969, -0.087472399139081572, -0.36227856667610669, 0.027050776058515719, -0.74616421721097281], [-0.67375834713431593, -0.16721926501083995, 0.68478988668239638, 0.44667343434468199, -0.8094930473049986], [0.65520289403868259, 0.71339234407704188, 0.018026224782328959, 0.91043764528541438, -0.29437005362304958]], [[1.5607266762665566, 0.26337218535745371, 0.45387022170061897, 0.52461833403506331, 0.10902950232843316], [0.90019781984218294, -0.61792557923008573, -0.036174095628265859, -0.16057056276279474, 0.475446189568487], [1.0264497553728464, 0.49886758087393401, 1.2448094495375868, 0.48393878825436198, -0.33786701933839747], [0.73816771965037287, -0.25242416091779007, -0.38617326620075137, -0.21938058829000828, -0.41448831202801029]], [[-0.81934935026253686, 0.52090398091150125, 0.71808267965811279, -1.2809703585726815, -0.9897754826905073], [0.54112558681108092, 0.17043280944479539, -0.2513962902646677, -0.21900306199033645, -0.70221555783037681], [-0.55914991980616535, 0.025054964758589683, 1.2136120128737191, -0.47938779819548594, -0.36725712397778415], [0.79080283078624425, 1.9904309746296671, -0.1014973895002923, 0.31660917029083041, 1.2293454195796962]], [[-1.7793158065566752, -0.18065129742519678, 0.25490092704707246, 0.76880373419951376, 1.6870505675952807], [-1.7956115030326196, 0.35899643151498656, -0.86260920762144033, 0.68024339760617725, 1.8296029953728139], [-0.69848182659725766, 0.04514341769140115, -1.6730557972360995, -1.485078121486173, 1.1056553301063907], [-0.21806383436559251, -0.98345167660874488, -0.79350168815341282, 0.35872752550515585, 1.1240564001733881]], [[0.48296098038917024, -0.24177991844852789, 0.26229873418380589, 1.2254764700090905, 0.98047591396550648], [-0.0016817569821172482, 0.27812230073741345, -0.84061932372262449, 0.67403064813112268, 1.0306129218575231], [0.14989878523454567, 0.20281832904879318, -0.041277011041332606, -0.097781581067204498, -0.062420284139576024], [0.2088327600350543, -0.79256291483689478, -0.26204229896074122, 0.32160891123079305, -0.29100819512757137]]]])+(1.-msk_ref)*numarray.array([[[[-0.12967186629085367, -1.199241917993624, -0.3440148895732672, -0.52400336445552231, 0.94696964894189628], [1.5076488842313944, -2.2383427107471157, -0.71756529006575842, 1.5052591818696306, 0.73123042503377633], [-0.35002347075406637, -1.233036692477143, -1.0409033223213588, -0.89428459094592649, -0.3985227985722149], [0.8514655864183549, -1.6226551300295924, 1.6143403175876232, 2.1845837405786197, -1.3445118914910237]], [[0.22206446385894796, -1.4480025282107103, 0.50956159505163134, 0.50242322941331441, 0.31400790845183973], [0.6117128869521693, -0.20601084067003217, 0.19651668569159836, -0.02908330726463737, 0.33828899727390882], [0.60647094907422006, -0.46820736136671698, 0.60022928148920185, 0.031687758457593945, -0.61811750023549861], [-0.44051679040681757, 0.38215070728667205, -1.2590813418132394, -0.32280536502644852, 0.94337697902539097]], [[1.2284722989787249, -1.0081980074259931, 0.61774782397151706, 0.62273015692914047, -0.95872842136690695], [-0.40187190637318737, 0.63659400646319531, 0.52322746228447192, -0.0036765353333830103, 0.97082408749145954], [-0.34688429257723497, 0.51696907044741847, 1.1036669078779855, 0.82437590129808147, -2.0862811315139203], [-1.7217038271776353, 0.048262996170675393, -0.95383149714417959, -1.8003861208278324, 0.6718894098698418]], [[-0.22202929829429516, 0.17405552946169883, 1.3544107713189835, 1.2584184492258319, -0.22495336599734836], [-0.30857010548761465, 1.2584272453385772, 0.016567514763466962, -0.87775997149281471, -0.6085497297686695], [0.2278340317398978, 0.93745477446618364, 0.90005948384131607, -0.11450315989216965, 0.84164618914348066], [-0.81898114955576218, 0.39611707472345725, -0.72073606019854741, -1.7980601989235878, 0.67643752216236586]], [[0.088890259992708928, -0.71059402665508875, -0.65207923644451904, -0.56366438796199969, 0.45497436159722748], [0.76440286957505776, -1.1528078758073907, -0.5607381948747362, 1.3342320365640883, 0.42454015919038579], [-0.3341020620609475, -0.89980329680047655, 0.0019353675299813855, 0.040555618678532711, -0.71000212318451461], [0.99646794782820747, -0.9540169991340518, 0.83478143470998156, 0.83889738474024256, -0.70964648698889921]]], [[[0.62734279268257154, -0.70571180303588787, -0.60893223968087129, -0.61503878683271496, -0.16081947257246931], [0.042768295838767179, -0.64406057978137277, 0.65068936763888918, -0.010493570826000997, 0.87612080264134262], [0.17922270077951158, -0.51292268706579169, -0.61394940231777206, 0.22122501481266615, -1.3002145056346617], [-0.56434384020382367, 0.39034878734526124, -0.58450943116473297, 0.97614895275021674, 0.31943756733336215]], [[-0.67007275890467755, 0.273206181658459, -1.5255788884553587, -1.5042976931796701, 0.92863355760232469], [0.64765459627223121, -1.5751950534247869, -0.20400861816389892, 0.55965945264018502, -0.10880979030465965], [0.31702106986316536, -1.2929129722933095, -1.6316524413524098, -0.53056708222735882, 0.68347385157505269], [1.7612357463586563, -0.043966742872760312, 0.79638998145684436, 2.9582847962031642, -0.7089633283435689]], [[-0.37852661393813553, 0.28962110675749048, 0.99235362234834767, 0.24203226524958255, -0.38120788530523431], [0.27066641024862481, -0.061578137219806151, -0.744129027885164, 0.47940983559241018, -0.24758964710867545], [-0.87653324258570409, 0.67550519787661978, -0.48503299376366515, -0.73401706215638651, 0.45356556527159358], [-0.051169125648050873, -1.0562785725502397, 1.1475424219492809, -0.21992068499019946, -1.1049623627929965]], [[0.12688783957175218, -0.45921232733805684, 0.43924231898191879, -0.082900877867890133, -0.29407974777507778], [0.52040136269711157, -0.61780101698827117, -0.66634772759225835, 1.0947420594861166, 0.38325444778696688], [-0.92319912411400762, 0.081437920216056225, -0.21899146191958677, -0.31628248566697348, -0.69187142807099089], [0.041988477517455859, -1.2725008723062301, 1.0662300763576869, 0.025639037582067155, -1.0582390034619127]], [[-0.21876238580348129, -0.013095384099858665, -0.70381294279884754, -0.28832956300058521, 0.32784271216019945], [0.029775823274938079, 0.35715451422190425, -0.34354120074699146, 0.52175915062792699, -0.52837122153517657], [0.32037500895489407, -0.54465427306277303, 1.2030178759302395, 0.78505923103265796, 0.05412189300134379], [1.398653850541324, 0.41447005765305184, -0.63159913768041176, -0.64355344305427642, 0.54370321971688529]]], [[[0.86415925314528708, -0.48993140838916505, 0.82827667416860984, 0.79460831081959538, -0.84367190233654876], [-0.5437497587475536, 0.86727071347139184, 0.57287345160489278, -0.53019142982980094, 0.57612594478388079], [-0.16098916786749179, 0.77445452915006763, 0.78045982870551522, 0.48713116364295284, -1.1935535290074681], [-1.7530844682130151, 0.27043766454533164, -0.87702023658795847, -1.6516344121094451, 0.67923599206865892]], [[0.90914966555595134, -1.1772164630096835, -0.86173845263790882, -0.92275376498867501, -0.39276266353308603], [0.36712021811616868, -0.88731275175773749, -0.12191632887027214, 1.504483462418349, 1.1038455653128685], [-0.62271461105234027, -0.77648361449012726, 0.28040201211585869, 0.78688945703837199, -2.4159816068947948], [0.27333601988206491, -0.60394530957842341, 0.019335953591685995, 0.25681475235821649, -0.29882554697998598]], [[-0.86998898409588732, 1.1161888425625268, -1.0804602996304538, -1.7362315506144772, -0.23749727067805515], [0.073277723951894858, -0.33501872375342423, -0.90106508531614549, 1.1373735810549128, -0.82521625141978105], [-0.64119544679542462, -0.32807422542384668, -0.92154306768566707, 0.0019495526594026785, 0.52679464430019685], [2.308628762833167, -0.13707853112001284, 0.73475249896857298, 1.1996829110762564, -1.0294833476409073]], [[-0.28279698530196357, 1.2781655056410863, -1.6512902882412628, -1.9544189773812275, -0.70591426606370378], [-0.76902153423599195, 0.39016604961662549, 0.037208447933890887, 0.3141967647984289, -0.56309907990932895], [-0.18064811353942167, -0.21760511873005683, -0.6143228258743354, 0.83864868335782761, -0.22967469594812923], [1.6046722469941146, 1.1146726937989573, -0.59796083633293229, 0.7638198181890643, 0.05045208525431915]], [[0.36649359893114963, -1.5191427836620197, -1.1310743218407957, -0.85735598070600072, 0.90957347712587344], [1.2712378419632502, -2.1395080500723882, -0.36545126684908047, 1.6466996539931664, 1.0635021000055633], [-0.100496382375297, -1.6705885978882822, -0.38639967042220891, -0.060053128727940136, -1.343235918079444], [0.99038036300172994, -1.1361242561482194, 0.89826305970098241, 1.9361673302898992, -0.73325833196160206]]], [[[0.60521192461192808, 0.50275681289876784, -0.17405521113578781, 0.3972647038005781, 0.088305270102090702], [-0.60449165624063972, -0.28845647585604761, 1.035354179293094, -1.2186069840438027, 0.79608899468084338], [0.16057847504980299, 0.34483264406634123, -1.0305049988429866, -0.37436256185410499, 0.075977172780665181], [-1.7364337730050496, -0.081657358406119776, 0.82289037120853037, 0.91670872878133425, -0.23273780949850584]], [[0.76212257180821963, -2.0871681539721409, 0.92083586888539948, 1.1060495939441799, 0.21637143062332789], [0.51833956320170316, -0.03017593216290293, 0.72006990718625274, -0.51155732615196725, 0.84791649929536628], [0.87151247088989192, -0.33832068439882501, 0.97588509339573215, 0.17768441770238746, -1.2499387741427284], [-1.5944258738092818, 0.62394215886340232, -1.8949099097268869, -0.87160338642966928, 1.5492000522652871]], [[0.099922903568339841, -1.2760579287540599, -0.4785730744413787, -1.0540585707336749, 0.10421149565103599], [1.2633642484887093, -1.6645904838294099, -1.0435389232952066, 2.2793397423990296, 0.65171596752442673], [-0.90474119009195686, -1.0530699205886704, -0.31528981294555825, -0.096143860714694274, -1.4840604737508887], [1.3348691735081029, -1.4811640746625381, 1.0013415231696374, 1.0980096497226062, -1.2203935147839509]], [[0.45972350246878846, -1.0467028436996415, 0.15918764974563759, -0.521180630866656, -0.67862381944825045], [0.37748831018650242, -0.3580025985358401, -0.17590493249102485, 0.92878398944508544, 0.60293065399797285], [-0.52428872641496682, -0.17489131380876893, -0.011051520859926528, 0.26404953156641542, -1.6771669557492959], [-0.1364765497665773, -0.20018205242384074, -0.54901458876131248, -0.1374175928052227, -0.040395123119497826]], [[0.33541360658232261, 1.0273210928470005, -0.26409793035052798, 0.19161255509246422, -0.31585618283728223], [-0.7432809204318751, 0.43105546212097179, 0.01146565657639978, -0.051412400161281457, 0.091402666843927866], [-0.61467401016955081, 0.60560056080778502, 0.25106011893662783, 0.31281456022184601, 0.032750915981187734], [-0.3289454842796582, -0.6427774943678729, 1.2469685378793924, -0.61447951824295177, -0.69913320182103522]]]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5, 4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_expandedData_rank3_taggedData_rank0_offset0(self):
      arg0=Data(numarray.array([[[0.4036925873933126, -0.67553666629996201], [0.95034620498932032, 0.60948748064689218]], [[-0.26441460574793463, 0.71659114823449821], [0.32927435486729406, 0.53301425628771093]], [[0.49465487544424325, 0.026547205631550774], [0.76393171541569971, -0.23468469547502124]], [[-0.34756518126164937, 0.86419861615468618], [-0.27754727820129932, 0.34889530971897242]], [[0.21764426844612861, -0.4944882548079772], [-0.58812516353448507, -0.84527064617741665]], [[-0.68971310296685373, 0.4001989663063108], [-0.14513686362126621, 0.51656844122004864]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[-0.93928520124928339, 0.67719660418328798], [-0.30688545573814596, -0.58613151032723043]], [[-0.93533738262433896, -0.61394598473373718], [-0.025544076651267345, -0.12740109341702843]], [[0.67810125868322157, -0.25526840614461288], [0.62745421429439374, -0.16065045139203749]], [[0.63350242226645226, 0.72247031279712814], [-0.15597250104616123, -0.13793414328898712]], [[-0.96169896281245681, -0.45585125986687691], [0.86040258210872333, 0.05135375405084952]], [[0.7527797059990069, 0.96696395209165931], [0.47528742084345788, -0.92004406054684273]]]))
      arg0.expand()
      arg1=Data(0.180033723078,self.functionspace)
      arg1.setTaggedValue(1,-0.0934139391104)
      res=generalTensorProduct(arg0,arg1,offset=0)
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[[0.072678279487462832, -0.12161938110977283], [0.17109436549740237, 0.10972830031037183]], [[-0.047603545909037502, 0.12901057234149135], [0.059280488020909475, 0.095960541013199022]], [[0.089054558864977498, 0.0047793922671688777], [0.13753347090375356, -0.042251159475826063]], [[-0.06257345359486105, 0.15558489434529893], [-0.049967869824782393, 0.062812921573205088]], [[0.039183307954973261, -0.089024561531488869], [-0.10588236282704945, -0.15217722143997997]], [[-0.12417161778289471, 0.072049309876145634], [-0.026129529913619866, 0.092999739697513309]]])+(1.-msk_ref)*numarray.array([[[0.087742330596842777, -0.063259602348977886], [0.028667379276204379, 0.054752853216421156]], [[0.087373549308193146, 0.057351112835019619], [0.0023861728209340315, 0.01190103798306243]], [[-0.063344109689350683, 0.023845627348413251], [-0.058612969768688704, 0.015006991484401318]], [[-0.059177956699917884, -0.067488797808735193], [0.014570005715629948, 0.01288497166244886]], [[0.089836088354741106, 0.04258286183262415], [-0.080373594415574068, -0.0047971564539988337]], [[-0.070320117619770028, -0.090327911742685674], [-0.044398470190631298, 0.085944939850849486]]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_expandedData_rank4_taggedData_rank1_offset1(self):
      arg0=Data(numarray.array([[[[0.29270541555662644, -0.25533260320514839, 0.14357778733409865], [-0.85440362965239758, 0.84292219732203755, 0.34884599426080354]], [[-0.63792539839516538, 0.14089340918594528, 0.22355863355597672], [-0.76743091069082126, -0.0059334011964742306, -0.61799518912158113]]], [[[0.56186273268652243, -0.12877716656162175, -0.34364629115821543], [0.31586060037548336, 0.43379568676450653, -0.60640269227418209]], [[0.31512167587690398, -0.47161454764054023, -0.85140754609539204], [-0.63966784012547828, -0.82110088485719812, 0.50580371486266507]]], [[[-0.96495370761646715, 0.26449774738606857, 0.2635305893613662], [0.11959544173447223, -0.1367322653912777, 0.10692941928799748]], [[0.0005346566935822139, -0.89856044135709978, -0.66372879941856322], [0.49565645130780744, -0.95172227256373354, -0.070115368091487662]]], [[[0.5924719604426425, 0.80870940074421593, 0.60074920383960206], [0.73151239871422424, 0.54824045179124892, -0.58148536795358119]], [[0.7443586947453793, -0.63696805123649947, -0.69161760781404724], [0.66291876787136839, 0.3485352835908635, 0.41035754803895408]]], [[[-0.85986594175259401, -0.95499258529985531, -0.47180210570327485], [0.26108236443008792, -0.84713523881222019, 0.94840811521415525]], [[0.15635117355129435, -0.21507327764385908, 0.62148691173271242], [0.3981131836490297, 0.43717979763266457, 0.08365187294780374]]], [[[0.12983875258424638, 0.10306872635671027, -0.54564646670386741], [-0.62785859437505342, 0.11609808948598088, 0.10704035351280439]], [[-0.28060665875423374, 0.060395682905941106, 0.62674368372839462], [0.0097592568677034031, -0.4663455490896935, 0.14362354370936847]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[-0.49699407421796815, 0.51581967333074852, 0.11955917761657542], [0.86553898302206478, -0.070986787768925863, -0.56858837686974284]], [[-0.23827208380535825, -0.096634735924162163, 0.69051603693136943], [0.89124747844169083, -0.8751345520559668, -0.17681465954675235]]], [[[-0.17149959782729396, 0.67402258209321197, 0.14027112755102689], [0.031666389739489098, -0.28665856689765623, -0.61304961394918789]], [[0.83304856810632244, 0.15172336435285527, 0.27738909433058945], [-0.14591591965093853, -0.28352493858541883, -0.73454557619091854]]], [[[0.75337254701477185, -0.019299154303141552, 0.051217480246253277], [0.054094953598863071, -0.031025644788411411, 0.85225425192379012]], [[-0.39391412990524288, -0.72911138892248584, -0.27335928849537372], [0.79819453632277781, 0.90608441542816265, 0.5558730524783575]]], [[[0.76382867603890503, 0.11542739325876505, 0.039005697751735902], [0.94319767156623935, -0.25138191081661221, -0.69174717331236124]], [[0.59615540876032092, 0.85210254224529813, -0.14258663373029101], [-0.37261284038574716, -0.54194026783587113, 0.9685669016493399]]], [[[-0.71151123100963276, -0.97758370387196458, 0.61680750721692745], [-0.22345114165873059, -0.8710479967091922, -0.25800787345691978]], [[-0.81113667329563932, 0.24093734749711304, -0.9413510132440237], [-0.47263335437903353, 0.060437014561900648, -0.16808929009672946]]], [[[0.28425007765108323, 0.87341545304562862, -0.40002817523894962], [-0.59027094044939155, -0.26817055273536416, 0.89140201151903398]], [[0.60386547972922822, 0.48616851704373598, 0.40173106893681587], [-0.81810044198489296, -0.37652717551381509, -0.2951409797836364]]]]))
      arg0.expand()
      arg1=Data(numarray.array([-0.3105346491997738, -0.34220378662949313, -0.25648603355245081]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([0.51570586384286443, -0.022583422814513865, 0.045940833004646908]))
      res=generalTensorProduct(arg0,arg1,offset=1)
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[[-0.040345087051543632, -0.11260336173714783], [0.09254401448452125, 0.3988514558057536]], [[-0.042269338400250309, -0.090998366091053884], [0.28190622939310173, 0.3498912717594832]], [[0.14154751479318045, -0.017774132196827701], [0.47756192323648178, 0.18974807591331716]], [[-0.61481027206690952, -0.2656270291112347], [0.16421396990684076, -0.43038032068248006]], [[0.7148308981872018, -0.034435669601957597], [-0.13435627971326475, -0.29468805710568563]], [[0.064360758038153887, 0.12778828680621654], [-0.094280542540668241, 0.11971719231767756]]])+(1.-msk_ref)*numarray.array([[[-0.26245908393517864, 0.42184522990134199], [-0.088973085768842775, 0.47126207162920614]], [[-0.09722091275797462, -0.0053597354429624766], [0.43892508461026308, -0.10259236747556878]], [[0.39130745482225421, 0.067751020294722075], [-0.19923634929081471, 0.41670838648542846]], [[0.39309613582489739, 0.460310192598958], [0.28164689933759146, -0.13542299023882615]], [[-0.31651667721553806, -0.10741691546273938], [-0.4669955784850886, -0.25282682896069197]], [[0.10848709377778734, -0.2573982253157665], [0.31889347963994807, -0.42695494520333321]]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_expandedData_rank3_taggedData_rank1_offset0(self):
      arg0=Data(numarray.array([[[-0.39314484273128869, 0.11441299132821392], [0.45195201682064723, -0.81084328250974624]], [[0.31237011876829501, -0.17954433553899229], [-0.68377210466495875, -0.72227285455254209]], [[0.39684832540503434, 0.91868936900937337], [0.824231829183109, 0.29835593251092307]], [[0.83519913960549697, 0.99324425503383629], [-0.99711563602314124, 0.99251275470372757]], [[-0.91824702317480256, -0.56917128310265341], [0.54188331380433308, 0.091252592410872913]], [[0.52230599255938404, 0.71338978545573228], [-0.81961367676235919, 0.46668873983198544]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[-0.84374329266988468, 0.94141539630034732], [-0.45917806094994251, -0.86740394545659116]], [[-0.35759757634066536, 0.58223753818279933], [0.91852479318010438, -0.3770443081404744]], [[-0.91208041745302593, 0.95299756559628146], [0.81810854944443689, 0.7159504823713887]], [[-0.53722155604646327, 0.21212449682416357], [0.59100163132453432, 0.79962340489953898]], [[0.53322004233003284, -0.73253165072842852], [-0.92869604216351709, -0.84140853396355086]], [[-0.87083649752956327, -0.98495130096029126], [-0.46254197364055449, 0.56283242515380327]]]))
      arg0.expand()
      arg1=Data(numarray.array([0.46192781472390343, -0.49873749124102962]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([-0.19182758116815446, 0.4129360625104066]))
      res=generalTensorProduct(arg0,arg1,offset=0)
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[[[-0.18160453807283689, 0.19607607255815207], [0.052850543060266771, -0.057062048260415089]], [[0.20876920749002242, -0.22540541503045322], [-0.37455106557328377, 0.40439794450855227]]], [[[0.14429244634768468, -0.15579068937316193], [-0.082936522561581988, 0.089545491473254649]], [[-0.31585335407704856, 0.34102278406120023], [-0.33363792133785153, 0.36022455147103194]]], [[[0.18331527973118805, -0.19792313821571059], [0.42436817263658155, -0.45818483112953939]], [[0.38073560768043918, -0.41107531468778863], [0.1378189039146831, -0.14880128927737571]]], [[[0.38580171341725156, -0.41654512357351203], [0.45880714821485141, -0.49536814794514089]], [[-0.4605954467752047, 0.49729895078738506], [0.45846924786589449, -0.49500332130566049]]], [[[-0.42416384079186603, 0.45796421667774462], [-0.26291604700720889, 0.2838670578210552]], [[0.25031097498098281, -0.27025752447214868], [0.042152110600245582, -0.045511089008238977]]], [[[0.24126766576015563, -0.2604935803892231], [0.3295345846419207, -0.35579423187516829]], [[-0.37860235462466035, 0.40877206893529522], [0.21557650974684134, -0.232755171294242]]]])+(1.-msk_ref)*numarray.array([[[[0.16185323495971821, -0.34841203304466778], [-0.18058943834675517, 0.38874436693493941]], [[0.088083016757510874, -0.18961118047983275], [0.16639200075265168, -0.35818236984283625]]], [[[0.068597078101024292, -0.14766493513737888], [-0.11168921861490737, 0.24042687646295768]], [[-0.17619838931871876, 0.37929201141397789], [0.072327497623807496, -0.15569519199548795]]], [[[0.17496218031085453, -0.37663089627590046], [-0.18281121786747428, 0.39352706231933138]], [[-0.15693578417291382, 0.33782652311368605], [-0.1373390492694769, 0.29564177314286755]]], [[[0.10305391164778517, -0.22183815404954027], [-0.040691329132291162, 0.087593854480571359]], [[-0.1133704134034188, 0.24404588657638018], [-0.15338982360732234, 0.33019334031038017]]], [[[-0.10228631095055113, 0.22018578473139611], [0.14051977468834981, -0.30248873551604571]], [[0.17814951540866586, -0.38349208692000131], [0.16140536384447091, -0.34744792697756244]]], [[[0.16705045891404363, -0.35959979438021128], [0.18894082563163961, -0.40672191198304514]], [[0.088728307992211833, -0.19100026134092285], [-0.10796678272026042, 0.23241380549619464]]]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_expandedData_rank4_taggedData_rank2_offset1(self):
      arg0=Data(numarray.array([[[[-0.3739569319318885, -0.42504065622440756, -0.58483831749541948], [-0.42714921309379283, -0.16985611208836704, 0.48644482370509423]], [[0.050785295064126768, 0.29437388784730456, -0.45817330833526881], [-0.57467237636081103, -0.43533265302162438, 0.62414186884341971]]], [[[-0.02090769040796836, -0.74271609998208254, -0.24541174274766986], [0.41003849767725309, -0.38148724569805892, -0.46297124537512535]], [[-0.35867751250614277, 0.090768464264180615, -0.095261729550729202], [-0.22402740350445427, 0.60489407196054046, 0.27114631288670976]]], [[[0.25645617417291122, -0.087588426531703067, -0.62871525697597663], [-0.16981735138796328, -0.61992655636285332, 0.1144320939498944]], [[0.41957524183405792, 0.16968403050943004, 0.64460526499406701], [0.64204676104963543, 0.3834303516339499, 0.71447897761534818]]], [[[-0.84789915580919084, 0.33314457617075099, -0.33587555732179508], [0.056481635403754726, -0.83538328511363402, 0.56173808416113657]], [[0.12012133635691802, -0.54152366090422754, -0.36411557460179922], [0.44313689056124383, -0.58635044866673947, -0.22889124872951649]]], [[[-0.93086168535837199, -0.95587683198464912, 0.7068991933198312], [-0.088845071808836495, -0.6997305831553422, 0.088524257346779489]], [[0.77088685798219014, 0.38846896588016566, -0.27593030930764817], [-0.29705991757453032, 0.36389800414180562, 0.21228540475320501]]], [[[-0.36605504275415846, -0.40798783196340382, -0.93160156772769898], [-0.29110040357104872, -0.25234652748192543, -0.050773170649344834]], [[0.97717977334795014, -0.028588842455844699, -0.68613751948723323], [0.45670592183412673, -0.22036502216186737, 0.16872316557657907]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[0.64889563219014512, 0.91668838310233869, -0.29677627947304464], [0.72290058305875715, -0.95845263652124713, -0.029895526282945895]], [[-0.95089476965682662, 0.10734980080088286, -0.95440996429740643], [0.60437161407270734, 0.16594077261766627, 0.41493220365431971]]], [[[-0.95438941814295819, 0.053998665621998176, -0.68084138208451472], [0.69752359277611453, -0.99859973953344872, -0.5814433438224913]], [[-0.41584620363028257, -0.63131479152682246, 0.80636811699704469], [-0.98210590260018149, 0.23054539600343382, -0.21247995768138761]]], [[[0.90996820365677156, 0.40902696059679045, 0.95181740582268892], [-0.85907953151973437, 0.4374507974111983, 0.40671517322707329]], [[0.43227523786656175, 0.66159694437639471, 0.32825992216579625], [0.48384409799775341, 0.66098035264902166, 0.5104203612660192]]], [[[-0.75982934312986061, 0.72006078572090226, 0.31563095283089138], [0.40316415901951674, 0.69690767579397006, -0.74391192662097572]], [[-0.94790859724238241, -0.80105683742589773, 0.88278633718190314], [0.22983587488442359, 0.44405216362199273, -0.94997009448480174]]], [[[0.39286665227015938, 0.67911335068098877, 0.26059956227019287], [0.86760198173480352, 0.2229394443813375, 0.46164165335281093]], [[0.090270345202331015, -0.7571501946442023, -0.79980092549181236], [0.22058033741687977, -0.82684831971464501, -0.062856057766915052]]], [[[-0.19270386125680705, -0.35296672114973315, 0.53577010135899905], [0.31049819786988642, -0.010456933750570441, 0.72453576121638585]], [[0.65548018910916239, -0.60925055663851579, 0.71363056721249474], [-0.55262390089337732, 0.7653901175609672, 0.098125960230607712]]]]))
      arg0.expand()
      arg1=Data(numarray.array([[-0.11165022836964744, -0.40732272232568145], [0.77108699443873419, -0.47627504602895754], [-0.61832200328052367, 0.30784799923663231]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[-0.18387673273981853, 0.98975843962817178], [0.58417380896535098, -0.91234102387951688], [-0.21185941807328046, -0.74532299330274143]]))
      res=generalTensorProduct(arg0,arg1,offset=1)
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[[[0.075627454797241089, 0.17471610773663118], [-0.38406206964620559, 0.40463687363645262]], [[0.50461632448922189, -0.30193667789847239], [-0.6574376956155854, 0.63355602170369585]]], [[[-0.41862089644340705, 0.28670380808588514], [-0.053675437706413254, -0.12784991322075237]], [[0.16893923193342894, 0.073540613489592163], [0.32378293129795399, -0.11337265017209826]]], [[[0.29257679021125466, -0.25629297909294801], [-0.52981304062567613, 0.39965370620270646]], [[-0.31457814125556005, -0.053278358039739737], [-0.21780458281811732, -0.2241876191889631]]], [[[0.55923083178977251, 0.083301525737821361], [-0.99779439153162586, 0.54779590437927872]], [[-0.20583275522699476, 0.096893805656571241], [-0.36007504473260249, 0.028300649337351838]]], [[[-1.0702245990087491, 1.0520389002658463], [-0.58437007586672252, 0.3967048477226906]], [[0.3840874552093082, -0.58396240185289872], [0.18250308919840538, 0.013035352768228814]]], [[[0.30230576561979372, 0.056625281272610184], [-0.13068553030707841, 0.22312774384506481]], [[0.2931070961190167, -0.59563743580043793], [-0.32523716882791182, -0.029131249362799837]]]])+(1.-msk_ref)*numarray.array([[[[0.47906338552203165, 0.027111695338108144], [-0.6864938758967547, 1.6122144359739141]], [[0.4397591050887919, -0.32775205921396466], [-0.1020989197597327, 0.13752881926146249]]], [[[0.35127727315366597, -0.48643344232090857], [-0.58842992425885843, 2.0348064650554232]], [[-0.46316980519643758, -0.4366176050026751], [0.36028088688397697, -1.0240174302717227]]], [[[-0.13003062435379564, -0.18193476464804259], [0.32734559605667124, -1.5525196953717622]], [[0.23745729252613873, -0.42041363647715102], [0.18902237765239599, -0.50457874374395195]]], [[[0.49348619894305645, -1.6442355060829235], [0.49058745101914086, 0.317672330364551]], [[-0.48068468779831147, -0.86532447414909763], [0.41840228546678859, 0.53038954565087981]]], [[[0.26927072475195335, -0.42497073076229053], [-0.12709956536483602, 0.31124744380000496]], [[-0.28946057065409425, 1.376235039658283], [-0.51026607629428788, 1.019536958297951]]], [[[-0.28426809943278158, -0.26802602892571992], [-0.21670178570967025, -0.22315466082898316]], [[-0.62762513052379743, 0.6727260553554627], [0.527946628817897, -1.3183965077720816]]]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(6, 2, 2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_generalTensorProduct_expandedData_rank4_taggedData_rank0_offset0(self):
      arg0=Data(numarray.array([[[[0.048251610022333802, 0.038279930811000673, 0.70002030019969008, -0.58560627659154885], [0.56741293100792056, -0.62439210188064709, -0.87033518616081817, 0.76718326234643608], [-0.031222542659898878, -0.030798334240593972, -0.12971807120431267, 0.59585758509892051]], [[0.43680351269864803, -0.42928139567749546, 0.96962142551560238, -0.18995130724925002], [0.99101794535614429, -0.035449623708841749, -0.7599100759396038, 0.89210556389598117], [-0.20904697537549133, -0.86950931296007505, -0.5630641562140497, 0.51156498007649165]]], [[[-0.39819362543413095, -0.69484394454169829, 0.83946679696726401, -0.59285308704613326], [-0.6605959349463717, -0.62327650335554297, 0.017179676125197219, -0.00307694975797701], [-0.83115633305325876, 0.25847271531788474, 0.054336266400994759, 0.40597863657373878]], [[0.099616043938703935, 0.67348544423848944, 0.60382768551739563, -0.033882135391738455], [0.87665533971787957, 0.85234977153473923, -0.7339032417037834, -0.19210179634488611], [-0.025585103317953939, -0.94029969678230008, 0.26210631482835689, 0.30160206559140246]]], [[[0.14947558544581785, -0.5454856432671169, 0.5878696596966273, 0.22777418809216843], [-0.34703884834198107, 0.32322245220747159, -0.18674564453835218, 0.022954040520031471], [-0.45010798086332438, -0.93118864867623796, 0.85153662217974668, -0.15577989038217721]], [[-0.85452607277055681, 0.066296556064155077, -0.30963941258464955, 0.2530034750843011], [-0.71940248999566725, -0.50189077081937561, -0.50101495208998426, -0.30064326854878787], [-0.71113045214819559, 0.97775680767131279, -0.60353816157483009, -0.81649365799381335]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[0.99115680765825442, 0.062665111573934285, 0.26555544715119139, -0.47225675431545855], [0.53800793090067511, 0.74353808989960557, 0.78021503969685546, -0.025783158499675496], [0.30952700523609855, -0.42396932257689635, -0.46052720620621113, 0.82078881218238142]], [[-0.81540257122539206, 0.8695578141981859, -0.53286640873528102, 0.62983175661456836], [0.58456401303779604, 0.029026214249927573, 0.37130657929922695, -0.75437306971259055], [0.91128883684977846, 0.97212022847959156, 0.53268921492114973, -0.37624628788052927]]], [[[0.99503810444313801, 0.097650109423797149, 0.10022438688081792, -0.27999322987531494], [-0.027420069739801933, -0.39248996972373562, 0.56344336685867513, -0.79087159684306574], [-0.83378796283913603, 0.73253646900513547, -0.65498491083106303, 0.90698403643714443]], [[-0.2548378978817758, -0.78411187015092687, 0.95274921233037513, 0.30941944858880865], [-0.737663158742762, -0.80588034372061057, -0.62166253697415064, 0.87265155574520348], [0.25605183943217824, 0.53279371422988731, 0.75348705488686729, 0.16142482767221589]]], [[[-0.14719414756279559, 0.82394751098291863, -0.4612202985296423, 0.90543289989476161], [0.70616202050980248, 0.52474093238725961, 0.47433684223948824, -0.87860496112352604], [0.20185291924581672, -0.89217844838962312, -0.67824810186420037, -0.032505787502140171]], [[-0.2799169823538985, 0.33914114916732729, 0.72337566110142348, 0.60687651814219312], [-0.98313546101527116, 0.60132801750698239, -0.82722028200154996, -0.050018624672645062], [0.21169394191512381, -0.48723140910862184, 0.58780245294977185, -0.031496008311584056]]]]))
      arg0.expand()
      arg1=Data(-0.0315726268635,self.functionspace)
      arg1.setTaggedValue(1,0.892081327364)
      res=generalTensorProduct(arg0,arg1,offset=0)
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[[[-0.001523430078800048, -0.001208597971857738, -0.02210147973510598, 0.018489128459770222], [-0.017914716748258945, 0.019713698849217257, 0.027478768078862535, -0.024221990878015052], [0.00098577768913185376, 0.00097238431499676898, 0.0040955402595914889, -0.018812789198136469]], [[-0.013791034319116666, 0.013553541325183955, -0.030613495466694961, 0.005997261746021644], [-0.031289039803798657, 0.0011192377418120555, 0.023992357277483185, -0.028166116091773091], [0.0066001621504813979, 0.027452693092458878, 0.017777414504378506, -0.016151450232407816]]], [[[0.012572018755270838, 0.021938048589403247, -0.026504171944976011, 0.018717929302203593], [0.020856748961631165, 0.019678476473254634, -0.0005424075039372672, 9.7147386586458656e-05], [0.026241788768756234, -0.0081606625951368018, -0.0017155386642363508, -0.012817812007110154]], [[-0.0031451401848984072, -0.021263704628965291, -0.019064426204713904, 0.0010697480180631997], [-0.027678311928839891, -0.026910921293887342, 0.023171253204253769, 0.0060651583358122671], [0.00080778892032280249, 0.029687731466404556, -0.0082753848766524696, -0.0095223694781893659]]], [[[-0.0047193368844895504, 0.017222414674289144, -0.018560589409996098, -0.0071914294497791289], [0.010956928065852979, -0.010204981877463926, 0.0058960505534001121, -0.00072471935634946271], [0.014211091328097799, 0.029400071744216119, -0.026885248032717836, 0.0049183803518791794]], [[0.026979632840748467, -0.0020931564269511304, 0.0097761296357799267, -0.0079879843140148229], [0.02271342638133262, 0.015846010033333115, 0.015818358135389947, 0.0094920977369250311], [0.022452256416973342, -0.03087035085188948, 0.019055285173307221, 0.025778849600283073]]]])+(1.-msk_ref)*numarray.array([[[[0.88419248060197941, 0.055902375912309885, 0.23689705578346618, -0.42129143224651022], [0.47994682913041742, 0.66329644618358763, 0.69601526824239357, -0.023000674258035734], [0.27612326168612844, -0.37821511604615859, -0.41082772139982887, 0.7322103730574604]], [[-0.72740540807504517, 0.77571628910995349, -0.47536017321243951, 0.56186114945693932], [0.52147864068018357, 0.025893743736437169, 0.3312356661203677, -0.67296212935712107], [0.81294375518925766, 0.86721030377980146, 0.4752021019195285, -0.33564228790836886]]], [[[0.88765491298973331, 0.087111839232054206, 0.089408304082917389, -0.2497767321602003], [-0.024460932209905337, -0.35013297316834047, 0.50263730660192085, -0.70552178388651887], [-0.74380667262994715, 0.65348210561288944, -0.58429980865778985, 0.80910352312311651]], [[-0.2273361302051132, -0.69949155792637541, 0.84992978198101232, 0.27602731240944722], [-0.65805552979901638, -0.71891080672311447, -0.55457354115658464, 0.77847615817573923], [0.22841906479473892, 0.47529532380157574, 0.67217173207532532, 0.14400407453939051]]], [[[-0.13130915053808151, 0.73502818927618774, -0.41144601611970139, 0.80771978317746429], [0.62995395259067033, 0.468111587486429, 0.42314703984281316, -0.78378707994797114], [0.1800692201331755, -0.79589573448527406, -0.60505246699336135, -0.028997806061932443]], [[-0.24970871317008686, 0.30254148651305762, 0.64530991993841624, 0.54138320985053778], [-0.87703678704145738, 0.53643349603899715, -0.73794776719064803, -0.04462068109091203], [0.18884821269863356, -0.43465004217121811, 0.52436759245544862, -0.028097000901276252]]]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(3, 2, 3, 4),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_matrixmult_array_rank2_taggedData_rank1(self):
      arg0=numarray.array([[0.93482685701411605, -0.47412625712858869, 0.89788125556603937], [0.68490363236930274, 0.018397572658105599, -0.67208800905128308]])
      arg1=Data(numarray.array([-0.60186327937885697, -0.19764918372416451, -0.70549819496877753]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([0.50697353205756546, 0.12674145712284157, -0.25414453219522382]))
      res=matrixmult(arg0,arg1)
      ref=Data(numarray.array([-1.1023808952084273, 0.05830226579117944]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([0.18564940921135148, 0.52036724144189106]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_matrixmult_array_rank2_taggedData_rank2(self):
      arg0=numarray.array([[-0.58702756918793431, -0.26864402875734439, -0.14893405074973498], [0.76548031660572446, 0.67319136295712778, 0.65449316474682684]])
      arg1=Data(numarray.array([[0.35120231661778467, 0.74091821691688464], [0.46967888860707974, 0.064496157716023683], [0.75084806306108476, -0.46693636993330134]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[-0.60260010007866249, 0.48171064679077502], [0.91401412439116148, 0.67249679815697228], [0.12204446947017833, -0.52800723828167984]]))
      res=matrixmult(arg0,arg1)
      ref=Data(numarray.array([[-0.4441687146042671, -0.38272320247543579], [1.076447156727709, 0.30496990508979205]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[0.090021858014229031, -0.38480142239836884], [0.23390516982948042, 0.47588192616113884]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_matrixmult_Symbol_rank2_taggedData_rank1(self):
      arg0=Symbol(shape=(2, 3))
      arg1=Data(numarray.array([-0.96183037407218364, -0.23180535992649132, 0.99347815139686024]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([-0.48314244854457011, 0.10394832620027006, -0.020093643234199154]))
      res=matrixmult(arg0,arg1)
      s0=numarray.array([[0.52568324157408974, 0.69607848789066629, 0.61856031410121837], [0.076043955532319352, -0.50233934809183256, 0.78114724450218076]])
      sub=res.substitute({arg0:s0})
      ref=Data(numarray.array([-0.052446675928528891, 0.81935628763086477]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([-0.19405282504308682, -0.10465349133598456]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_matrixmult_Symbol_rank2_taggedData_rank2(self):
      arg0=Symbol(shape=(2, 3))
      arg1=Data(numarray.array([[0.75349140281919835, 0.32514668437688665], [-0.92537600823590926, 0.60297581977736803], [-0.1691822830534373, 0.059605630330352932]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[0.8866991230050314, 0.77183369898895227], [-0.77525958123946004, 0.87342428337847422], [-0.99737993957133009, -0.27959827538601489]]))
      res=matrixmult(arg0,arg1)
      s0=numarray.array([[0.7846723361112018, -0.92610688335044111, 0.84171620110340806], [0.084552891237936523, 0.034967566963596708, -0.80190934437883832]])
      sub=res.substitute({arg0:s0})
      ref=Data(numarray.array([[1.3058374816187364, -0.25311542405483356], [0.16702058278069387, 0.00077837765648858823]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[0.57423065305262966, -0.43859008744020089], [0.847672326625308, 0.32001476262530848]]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2, 2),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_matrixmult_constData_rank2_taggedData_rank1(self):
      arg0=Data(numarray.array([[-0.72835364669767477, 0.5422507903200966, -0.80286727103453837], [0.38661144366206979, 0.21451469889314323, -0.72521424594133155]]),self.functionspace)
      arg1=Data(numarray.array([0.55078966534049423, 0.47561910806633056, -0.0052735482059997896]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([0.60962547237438081, 0.34745392673593267, -0.52502961973473816]))
      res=matrixmult(arg0,arg1)
      ref=Data(numarray.array([-0.13903086481701354, 0.31879332971176039]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([0.16591332845743822, 0.69098111821362163]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_matrixmult_constData_rank2_taggedData_rank2(self):
      arg0=Data(numarray.array([[0.35446480210037579, -0.60584980261401311, 0.37761355660582341], [-0.22881219447277967, 0.34794505288469035, -0.084011364444285475]]),self.functionspace)
      arg1=Data(numarray.array([[-0.14722370362188397, -0.91357793032024026], [-0.75739878521916326, 0.90505424793197586], [-0.44549217792114293, 0.23068949353779433]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[-0.63579441129451753, 0.60335644952004142], [-0.88927788367158334, -0.52548691894466781], [-0.32506133905097157, -0.10374784667252257]]))
      res=matrixmult(arg0,arg1)
      ref=Data(numarray.array([[0.23846039781143083, -0.78504667761239388], [-0.19242017595733699, 0.5045663801036081]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[0.1906545217613112, 0.49305817722177286], [-0.13663347915970836, -0.31217988890928589]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_matrixmult_taggedData_rank2_array_rank1(self):
      arg0=Data(numarray.array([[0.61782510626775933, -0.54884634253225051, -0.21442734484461945], [0.19832886299340768, -0.16394868320584943, -0.29384471091493003]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[-0.37891772528129697, -0.072638654030509953, -0.87013541728038413], [-0.36935721863498006, -0.71231880843395579, 0.94526606927273416]]))
      arg1=numarray.array([0.11097575859369502, -0.35036361058777343, -0.67731098374108778])
      res=matrixmult(arg0,arg1)
      ref=Data(numarray.array([0.40609339195148664, 0.2784755988377377]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([0.57275153455281524, -0.4316581991937597]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_matrixmult_taggedData_rank2_array_rank2(self):
      arg0=Data(numarray.array([[-0.72360868803564271, -0.67770595332840222, -0.19672652574145477], [-0.54298156542788112, -0.44647393070389452, -0.37689447241963858]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[0.9567041180453264, -0.033932659403752785, 0.77174429899062824], [-0.31403015665616074, -0.86675703567280671, 0.94287958692104623]]))
      arg1=numarray.array([[-0.60458530603872851, -0.38446672665525394], [0.8006309415548154, 0.07562184860355603], [0.70173144611265714, 0.47771337244271384]])
      res=matrixmult(arg0,arg1)
      ref=Data(numarray.array([[-0.2431583647995805, 0.13297519460714863], [-0.29366087077443503, -0.0050523683735243657]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[-0.064019546084938553, -0.0017143793403838401], [0.15755377283758543, 0.50561456434836061]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_matrixmult_taggedData_rank2_Symbol_rank1(self):
      arg0=Data(numarray.array([[-0.22829795533264763, 0.28870408181354734, -0.73358272825788462], [0.14642410342385692, -0.14883087608906309, 0.32228478611848654]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[0.26031230504537284, 0.1528360975648384, -0.43290835424911545], [0.55215294465333153, 0.4063769321510724, 0.30548200808617421]]))
      arg1=Symbol(shape=(3,))
      res=matrixmult(arg0,arg1)
      s1=numarray.array([0.24660800232804569, -0.040366156055186675, 0.89800645973405047])
      sub=res.substitute({arg1:s1})
      ref=Data(numarray.array([-0.72671600544532566, 0.33153090581648154]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([-0.33072880682506212, 0.39408627659398177]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_matrixmult_taggedData_rank2_Symbol_rank2(self):
      arg0=Data(numarray.array([[0.7637644721040957, 0.20083098329091986, 0.99974705934041608], [-0.098455737093203544, -0.14121449162444377, 0.36567546950499175]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[-0.22983301653941002, 0.95014922752519748, -0.48933866731820808], [0.041205711777942078, -0.62490886044552041, -0.66355909556718418]]))
      arg1=Symbol(shape=(3, 2))
      res=matrixmult(arg0,arg1)
      s1=numarray.array([[-0.20535822907835133, -0.54446935202607527], [0.80454754221315161, -0.75162967993436536], [0.70053350718154817, -0.69927536233720544]])
      sub=res.substitute({arg1:s1})
      ref=Data(numarray.array([[0.70508906835688212, -1.2658953620847375], [0.16277284279332924, -0.095960711915769881]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[0.46884019418542178, -0.24684085229069266], [-0.97607620021719155, 0.91127532655819721]]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2, 2),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_matrixmult_taggedData_rank2_constData_rank1(self):
      arg0=Data(numarray.array([[0.085494261798344517, 0.031263721669905653, -0.67554716619452182], [0.51117015674810395, -0.010880516380578076, -0.032958670724559269]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[0.1081583134954307, -0.61882077292326132, -0.83841050503579706], [-0.11946610754986442, 0.41116030790686953, 0.31838154022025567]]))
      arg1=Data(numarray.array([-0.59831722485973415, 0.63404487966670864, 0.68790963382965953]),self.functionspace)
      res=matrixmult(arg0,arg1)
      ref=Data(numarray.array([-0.49604549054802594, -0.33541323242552001]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([-1.0338237879975991, 0.55119044663560646]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_matrixmult_taggedData_rank2_constData_rank2(self):
      arg0=Data(numarray.array([[0.047022787787555309, -0.95335714374573843, 0.72066070193149523], [0.83113325914567704, -0.39460368585422079, -0.35851633901384128]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[-0.52096375068314438, -0.12455502590330969, 0.48295366572208209], [0.046738419218105509, 0.46961817037910736, -0.61547065239415044]]))
      arg1=Data(numarray.array([[-0.64333342384776881, 0.62592463640804019], [-0.14565309645936919, 0.64937281560051829], [0.71968488303825673, -0.78366910974641346]]),self.functionspace)
      res=matrixmult(arg0,arg1)
      ref=Data(numarray.array([[0.62725670193182792, -1.1544110220701005], [-0.73523934607147623, 0.54494005673240997]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[0.70086967105805065, -0.78544256336133478], [-0.54141465241188047, 0.81653733984839227]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_matrixmult_taggedData_rank2_taggedData_rank1(self):
      arg0=Data(numarray.array([[0.63388979839063686, 0.3158983296046356, 0.53019657035900147], [-0.88093510838981004, 0.31791726135540732, -0.3669858626610627]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[-0.68442670498547087, -0.84552202703711798, -0.68852834166077814], [-0.055939627711792284, -0.52332732336201548, -0.79502340855909392]]))
      arg1=Data(numarray.array([-0.35337824826925379, 0.56879000037032479, -0.69184850784037089]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([0.10479972256919945, -0.39637422736254302, 0.50058085485995019]))
      res=matrixmult(arg0,arg1)
      ref=Data(numarray.array([-0.41113876160318541, 0.7460300861263186]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([-0.081248694480435993, -0.1964024914996762]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_matrixmult_taggedData_rank2_taggedData_rank2(self):
      arg0=Data(numarray.array([[0.63635873392222231, 0.7604358178753321, 0.57437625389117364], [0.83012812447650863, 0.97544819599190991, -0.5502096674221475]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[0.76574004769117643, -0.39513403555804616, -0.74068698793971843], [-0.94575088754984415, -0.39856233933965091, 0.80396127959530506]]))
      arg1=Data(numarray.array([[-0.49951381674622009, -0.67257859278944898], [0.037361673511517202, 0.62970174387469324], [0.80326509018721559, 0.62226179196582687]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[0.29674527840928389, 0.25687214877852727], [0.94759083809355338, -0.33012012665789059], [-0.66937779554082755, -0.85607969206254131]]))
      res=matrixmult(arg0,arg1)
      ref=Data(numarray.array([[0.17191756813592876, 0.40825889585913205], [-0.82018030894332317, -0.28645942932685264]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[0.34860377490038386, 0.9612260778716355], [-1.196474960634881, -0.79961853741641253]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_matrixmult_taggedData_rank2_expandedData_rank1(self):
      arg0=Data(numarray.array([[0.32415047571444866, -0.70267055958790348, 0.14891191670042891], [-0.38696268807630774, 0.40846510523512669, 0.96302059180674826]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[-0.28493047640147418, 0.46919116239901903, 0.83224197433677061], [0.1978974479354636, 0.98228424583142315, 0.22271033084733816]]))
      arg1=Data(numarray.array([-0.11779543774821377, -0.059825404916556968, -0.60674702036999517]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([-0.055637972618989062, 0.91115311701791746, 0.1083466820489698]))
      arg1.expand()
      res=matrixmult(arg0,arg1)
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([-0.086497758188355381, -0.5631640257144952])+(1.-msk_ref)*numarray.array([0.53352860072273978, 0.90813066500263173])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_matrixmult_taggedData_rank2_expandedData_rank2(self):
      arg0=Data(numarray.array([[0.30811379645537817, -0.70496793600127572, 0.25341624459930601], [0.86066395791056283, -0.51163027624141644, 0.26966283074321362]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[0.945043705732727, -0.88119148083276189, 0.80816809466411166], [0.42328732646357214, 0.15365618987336926, 0.82772183858825543]]))
      arg1=Data(numarray.array([[0.0002718270278756485, 0.31000865967549562], [-0.71854047108168628, -0.34899286125835616], [0.07653950130219056, 0.37517361051818265]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[0.83422254150572783, -0.71265381706769926], [0.89970387020357934, -0.13870736224922919], [0.82410604994053638, -0.78984451206009054]]))
      arg1.expand()
      res=matrixmult(arg0,arg1)
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[0.52602809947288354, 0.43662180959742375], [0.38850087002066175, 0.54653897186724087]])+(1.-msk_ref)*numarray.array([[0.66158159251629811, -1.1895883926359352], [1.1734914728278976, -0.97674212543246941]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_matrixmult_expandedData_rank2_taggedData_rank1(self):
      arg0=Data(numarray.array([[-0.79523232660942811, 0.072128964773923832, -0.88528337071481622], [0.61827109432687655, 0.49857067448369419, -0.12767676814376316]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[0.16791965988236446, -0.95515752344763571, 0.84285299459726204], [-0.19079990247255085, -0.28642606399438675, -0.67142661876989007]]))
      arg0.expand()
      arg1=Data(numarray.array([-0.18116482391392252, -0.74689596048285201, 0.59856769361491735]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([-0.11543146034846741, 0.10052597916445016, 0.25770444067000531]))
      res=matrixmult(arg0,arg1)
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([-0.43970673340700506, -0.5608125853578978])+(1.-msk_ref)*numarray.array([0.10180560267742229, -0.17979857040555089])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_matrixmult_expandedData_rank2_taggedData_rank2(self):
      arg0=Data(numarray.array([[-0.3611103678052745, -0.50329436957117601, 0.30985371694860442], [-0.17410217887018953, -0.55302399820127324, -0.33303614223939526]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[-0.22076707508300575, 0.025190013460639982, -0.76492230457339883], [0.041843629751142863, 0.11267609034860171, 0.381919177538528]]))
      arg0.expand()
      arg1=Data(numarray.array([[-0.98871658628429415, 0.46100465876334407], [0.79656021642667363, 0.092520156287436484], [0.2845941523569977, 0.15860160473182661]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[-0.65840337378329128, -0.63027412118789772], [0.76366500920086411, 0.27012423872529934], [-0.34498623055376987, -0.53910019189079961]]))
      res=matrixmult(arg0,arg1)
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[0.044314094106007819, -0.16389513887711843], [-0.36315934234402442, -0.18424784889715615]])+(1.-msk_ref)*numarray.array([[0.42847818143738925, 0.55831796862177152], [-0.07326005686192183, -0.20182911573855106]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")

   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_tensormult_array_rank2_taggedData_rank1(self):
      arg0=numarray.array([[0.0079574792026420038, 0.8364728418446199, -0.74272943049311335], [0.56587974693478449, -0.58537608106077554, 0.43101004906300644]])
      arg1=Data(numarray.array([-0.58308996857509054, 0.20744311730725218, -0.57786715826126911]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([-0.66956825811732101, -0.97732282928989078, -0.45684717091605598]))
      res=tensormult(arg0,arg1)
      ref=Data(numarray.array([0.59807955291296477, -0.70045759514392336]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([-0.48351824082758482, -0.0036994302688734453]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_tensormult_array_rank2_taggedData_rank2(self):
      arg0=numarray.array([[0.67600602239709917, -0.96504100013284888, -0.4038570170201301], [0.012620067639656618, -0.27340817602793188, 0.82342048499763076]])
      arg1=Data(numarray.array([[0.13008716997732828, 0.54797898009250501], [-0.88430140619485198, -0.94843619216815722], [0.33248401997882926, -0.26281655350688204]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[0.067271209514107033, -0.12693374377365552], [-0.11179435410915373, -0.11616132583494609], [-0.56926639733018169, -0.49970108172604966]]))
      res=tensormult(arg0,arg1)
      ref=Data(numarray.array([[0.8070508192789223, 1.3918572114645036], [0.51719109639576477, 0.049817207219407827]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[0.3832641071797403, 0.22810025509172735], [-0.4373311553209982, -0.38130656327936402]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_tensormult_array_rank4_taggedData_rank2(self):
      arg0=numarray.array([[[[0.61407038173291584, 0.086442000466696367, -0.3522694912269666], [-0.67372392398962022, 0.88337692003894852, 0.11964908127064278]], [[0.34479570458106323, 0.71512987206717971, -0.55812582357696128], [-0.8792095972134728, -0.00070279394093475389, 0.71539231878450971]], [[-0.95209775628054816, 0.43530299696530905, -0.53111243207608538], [0.1784955410817477, -0.74788347796981514, 0.79640792645061875]], [[0.16954217309720732, 0.12018998339511389, 0.54127540765685556], [0.30646608329903269, 0.52750439863931864, -0.38646878652558581]], [[-0.51665764327054164, 0.8395343675466822, -0.53054394939996641], [0.10470513103860069, 0.71094745601168419, -0.92797789412856413]]], [[[-0.84312159037671752, -0.86612716082161811, -0.25430183349098234], [-0.89723122217895335, 0.48302267271391863, 0.80942239754343759]], [[-0.49555889990983926, 0.61569485540993618, -0.64160957585522271], [-0.64803422897415053, -0.23830333508537938, 0.84442356629133575]], [[-0.44468269504585756, 0.95199394805417392, -0.23176976217464884], [-0.6199119845930352, 0.64015964642054457, -0.70813073929711612]], [[0.96157230690677986, -0.12637009696744794, -0.20043201320894299], [0.17906090123465046, -0.66949548873571674, 0.79757349215598672]], [[0.22657866462004295, 0.64975236003576375, -0.15017530780106281], [-0.72420136475101105, 0.54599844879363846, 0.15172496472402841]]], [[[0.89403292530809231, -0.3653520172662823, -0.29012041778052766], [-0.012907728191134948, 0.23251801585916687, 0.72711486946069104]], [[-0.22712512357926018, -0.43778983917074243, -0.64648546149947173], [-0.54418300904291961, 0.73521485659891539, -0.9731881357211416]], [[-0.28273240627773166, -0.78827997648205672, 0.11056246451033513], [0.244135129826764, -0.45083114003172953, -0.30032268409120433]], [[-0.94414450931110161, 0.72536754295191597, -0.3292678450859281], [-0.092721048289014396, -0.99776572372341832, -0.94345738106163601]], [[0.77406981743152836, -0.17703442502589173, -0.60096180922316389], [0.56673948219812753, -0.85309510946530853, -0.38122659488656852]]], [[[-0.1225988840168073, -0.26852956009608597, 0.8523799265297618], [0.3182453655452453, -0.29600358145886307, -0.87730189558202065]], [[0.92704844336703451, -0.45303124292317531, 0.27974972535793841], [-0.56866319957280553, 0.73876829742200911, 0.4010616236505562]], [[0.9404565141246366, 0.93037955702286879, 0.37605818369644028], [-0.25158489005018803, 0.044439068723130637, 0.30813501757572137]], [[0.51304544126791152, -0.026749855216867235, -0.85189191903933636], [0.50401643976817434, -0.23339077662533247, 0.16197639182748302]], [[-0.98671371299819932, -0.38733995031643875, -0.42941825724647353], [0.56129797347200761, 0.71431414049924102, -0.9266752713265205]]]])
      arg1=Data(numarray.array([[-0.062027752350594989, 0.70007275300665106, -0.31301057788490505], [0.24063520147726791, 0.75022584991193031, 0.070023802020199977]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[0.60960993596827362, 0.0092023001788381631, -0.67439293093323593], [0.19685088570632936, 0.59323874109656116, 0.57700343651495478]]))
      res=tensormult(arg0,arg1)
      ref=Data(numarray.array([[0.64167915271663201, 0.49195377963985076, 0.067682364168771117, 0.3466324341952477, 1.2794344758686411], [-0.27130641190359323, 0.3870087605450776, 1.0480997421488865, -0.48871042801292125, 0.73380438591586772], [0.0018332341562155574, 0.2624413801636169, -0.86943070372299203, -0.16748852608355574, -0.51417485472646363], [-0.65411014363239717, -0.016735633938945907, 0.46966472753676608, 0.17363178808361246, 0.53052560367733559]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[1.0731751178592648, 0.83246155100232366, -0.16723033084343081, -0.11030134364336222, -0.042512458895292871], [0.22652020446707349, 0.35456355918890958, -0.25687515652008769, 0.8184713516604607, 0.51427456584443754], [1.2922500099909735, 0.061000949590235165, -0.64685251975314861, -1.501372570294393, 0.26104096873945137], [-1.2712077029323487, 0.93004583082160552, 0.48289551941586473, 0.94124189331088248, -0.31592225620168252]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_tensormult_array_rank4_taggedData_rank3(self):
      arg0=numarray.array([[[[0.73956409145864321, -0.66782715934680525, 0.61934599869102502], [-0.91873756263784934, -0.92493545361622975, 0.87461321745528786]], [[-0.54673367506154746, -0.75055242853554005, -0.93743264620627187], [-0.28580836159341461, 0.51260913993093271, -0.79478017412786106]], [[0.67946367686260545, -0.047686398937181851, 0.28865288042453741], [0.11012978065597734, 0.4439665752437898, -0.19591396141818973]], [[-0.95842882272012386, -0.1986417844270878, -0.90085402392405856], [-0.62395548811524715, 0.36787837411109026, -0.68790404161430563]], [[-0.55684652598842543, -0.28803398843708305, -0.78078470345130602], [-0.099126814891263626, 0.72866602996779339, 0.3408396209005855]]], [[[-0.104334796594582, -0.44129794594034388, -0.83368619974720382], [-0.90600529076350789, 0.7861365691436395, -0.092777637925255396]], [[0.15045329363719406, -0.089277277459977933, 0.99272283444613807], [-0.15434763997454937, -0.960325067973822, 0.77992846883702804]], [[-0.78231536228727094, 0.61794320752852783, -0.52730282423347075], [0.58652868495446042, 0.56957746175041035, 0.77790649475404483]], [[0.20067791316585537, 0.36260841298061863, -0.35361458635643817], [0.64918650757568197, 0.29034595529724383, 0.42556886337178335]], [[-0.85479206670048957, -0.037478969104683735, 0.13211462995694712], [-0.56161516967393976, 0.50843375155449433, 0.023105649859936461]]], [[[-0.049538849137258367, -0.69651682868855902, -0.31207420740350433], [0.2054956294234942, -0.24347560906675847, 0.32461167362661381]], [[0.2303212554136409, 0.68146548022807307, -0.69503092686820844], [0.42490769070955658, -0.38210471214055608, 0.63553807365318704]], [[0.59863530773964158, -0.57981285744597932, -0.35380620126292195], [-0.55364248008551886, -0.32394947872830793, 0.014879069149065449]], [[0.48742502496677487, 0.46859986761238903, 0.33756106065468261], [0.38165215588534451, 0.062264448887902946, 0.13750241814114816]], [[-0.43832929994055392, -0.17772096242036106, 0.957495739579586], [0.75896073036961353, -0.46799613773149651, 0.9230883387674973]]], [[[0.5502726868732799, 0.72067091441535713, 0.73214460411813143], [0.40460320461910082, 0.88966362281093114, -0.22885440355456366]], [[0.66119263770568004, -0.9677253919772526, 0.88219018904433466], [-0.30196777710927303, 0.99937285903338569, 0.60491728272919865]], [[0.071955958761564354, 0.44974634393102209, 0.90430097711218638], [0.43500490117750124, 0.77897123396393497, 0.21576276375145764]], [[-0.31982595728510677, -0.17193415406147783, 0.60802314808642044], [-0.94721686091556934, -0.36079323678105757, 0.43938793402075094]], [[0.86753417702753532, 0.11527706393899284, 0.62023996512514601], [-0.52779855629855255, -0.54835144728497842, -0.98895852930068573]]]])
      arg1=Data(numarray.array([[[0.069408775992768179, 0.83961219180819735], [0.67159136996744651, 0.35378251945371453], [0.024485785297518659, -0.49334409953891867]], [[-0.55904370719257801, 0.47386862049567369], [0.18829472063023256, 0.74484981421944751], [0.76254510032058609, 0.5882719682718982]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[-0.29439202439420464, -0.80757043739824819], [0.89338390193112716, 0.0079803523290369327], [0.50984518691004466, 0.83678149420931325]], [[0.97248404933285704, -0.55594843513537695], [0.89249405266370152, -0.86692117172214744], [0.40814860761747074, -0.53074481832857701]]]))
      res=tensormult(arg0,arg1)
      ref=Data(numarray.array([[[0.62437646841860883, -0.53065770449510097], [-0.9147211902040433, -0.48326541244949806], [-0.10516116935224083, 0.67883495388213633], [-0.328457509357033, -0.8568869505852843], [0.20131646824877281, 0.51203906882956585]], [[0.25974768503391676, 0.26921761762510499], [0.47498609703499028, -0.72464466959386142], [0.72033639453660747, 0.98172551601864733], [0.26505738861486067, 1.2454732886726856], [0.34605622494825528, -0.66996383212433286]], [[-0.39204967314985739, -0.027063814937512559], [0.63177044730335585, 1.0679695462451444], [-0.096651660753880653, -0.022852516959319995], [0.26002027524367538, 0.7166161397932781], [0.065148337848799476, -0.34918823555539136]], [[0.30693353969168441, 1.0755431242285702], [0.23584419839820214, 0.73470326296917099], [0.39720091445873462, 0.68667488069691984], [0.6738729819078475, -1.0884352214878268], [-0.40949407267318333, -0.7771396731155229]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[-1.8605620767523172, 0.7640980816263151], [-1.1323548320421246, -0.21256155584369218], [0.32791230575207631, -0.64968612736789055], [-0.91383023475327341, 0.41166260761879125], [0.20157099298911335, -0.96343748451317224]], [[-1.0059045902823518, -0.74546216114078401], [-0.30677448422441339, 1.2128704690343526], [1.9097608505809676, -1.0372593876662521], [1.1487327478863105, -1.2935556970093378], [0.20256171137995327, 0.6597506724242983]], [[-0.65175212132595761, -0.30214703825887379], [0.51823112472102428, -1.0044319602501492], [-1.6960739145960106, -0.20338742670045296], [0.93009212521981677, -0.44656158359797604], [1.1555928523456618, 0.64762660129060423]], [[1.9492033546761016, -0.70073115075129311], [0.23575192911154519, -0.82303768277814804], [2.0479921768385183, -0.32947996578539551], [-0.81327485192336324, 1.3718725693807501], [-1.2425002379311305, 1.1130211971762956]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_tensormult_array_rank4_taggedData_rank4(self):
      arg0=numarray.array([[[[-0.72958354311128226, -0.64882124127436303, -0.4305923652523429], [0.2853038762646749, 0.69891931422990794, 0.26703748556134688]], [[0.021228190978769268, 0.70259798304384868, 0.058070027529654622], [-0.11837985873655321, 0.008660287842726877, 0.97820504257594032]], [[-0.3609329673541346, 0.6709301807905359, -0.28689116749852506], [-0.56085463815991154, 0.70868923235513837, 0.18556831030706689]], [[-0.7520766487265611, -0.19991351758312459, -0.73497239073524745], [-0.82010324687052227, 0.54464440896561794, -0.74231507697666621]], [[0.53981853711427807, 0.96237319087999063, 0.51731651596045403], [0.071493661041734713, 0.11266527450367159, -0.58951722204039836]]], [[[0.83794612375779232, -0.28759381560398256, 0.60801470130830193], [-0.014150849483709704, -0.69432159194757936, 0.30021326081370736]], [[-0.86894706290972845, 0.90898759347053981, 0.70424022713357837], [-0.51963478672113217, 0.94729805551451318, -0.55182396413980661]], [[-0.69970338519582342, 0.0044454293237254916, -0.83161546335235315], [-0.58116021428709019, -0.54387067506899034, -0.72682994792310329]], [[-0.59123486167747008, -0.15765200083543096, -0.50697458051142097], [0.53164823715476084, 0.078390973120524565, -0.66739969392544052]], [[-0.61605605884712711, 0.48570432808304087, 0.71876610712199485], [0.65481232592886052, 0.67905456281035481, 0.581272849972851]]], [[[-0.81256050109214306, -0.3952568517263273, 0.15760558343227404], [-0.4988027203944938, -0.74998048987488297, 0.62780459346107986]], [[0.73947912704376884, 0.4439963026295215, 0.0459558394519608], [0.5793746090542764, -0.59075733490669102, -0.32490657668765555]], [[-0.55891310539241812, 0.41337167026274813, 0.28097325411298812], [0.10127184838302417, -0.9381209866834781, 0.98856847513577017]], [[-0.83397096195049292, 0.93073785908110507, -0.025268443250180184], [0.6059579356392355, -0.34424161809956377, -0.94879210054284746]], [[0.5335285670557095, -0.4471017548495122, 0.29476832153445032], [-0.6356530835297538, 0.98029621676789724, -0.41037567053699786]]], [[[-0.23291946843199574, 0.15480629076875951, 0.5166452162322499], [0.35948021197543345, 0.38675884641344926, -0.43604338825474565]], [[0.724351604162214, -0.59570992128301836, 0.60953696101544774], [0.87948661876203227, 0.43586842051939101, -0.73733485323208026]], [[-0.71129367168000268, 0.97206780368532919, 0.86732972690069454], [-0.79220849726622866, -0.87541799848299262, -0.3660328323894293]], [[-0.23676859685942397, 0.24783607488855908, 0.69567973153167184], [0.19888589466900308, 0.69271378141862061, 0.081003010931876895]], [[-0.71421596890536621, -0.098954185774589476, -0.64206667083384006], [-0.57764745551678875, 0.8655760206061629, 0.81334965464864384]]]])
      arg1=Data(numarray.array([[[[0.34046100602440243, 0.12618326277896719, -0.4092698032493447, 0.16440444342730265, -0.092976812865381397], [0.59348445848930753, -0.15961891620096669, -0.077843685038157862, -0.26332763985209162, 0.76129941480976959], [-0.17506145830735842, -0.029693862199291043, -0.92985183000426797, -0.1358020568750109, -0.85943323976471664], [0.43524138644324939, 0.43429000378723481, -0.91731769823700415, -0.22144201130514385, 0.83288277220840068]], [[-0.51787145545807967, -0.17427371960046956, -0.91476427542375172, 0.20090502196898252, -0.30800306570955716], [-0.97464082978106448, 0.99515842093416662, 0.9027344787071987, -0.77160120772209861, -0.82683739592523775], [-0.43413284229697324, 0.36995050991795697, -0.8998750509805955, -0.78676964794199566, -0.61319752604607025], [0.19194656900433738, -0.66518853169165526, -0.057407406902560965, -0.52832259473342003, 0.34365587748626014]], [[-0.78799024990360578, -0.13594788269551228, -0.34964221560309872, -0.44343477858112745, -0.012210563701733568], [0.3866864442721949, -0.6618800293314413, -0.80846222191647077, -0.034286684975384674, 0.27161507598391421], [-0.43761797875945074, 0.7891326613471219, 0.63734060327588016, 0.035806527186840409, 0.025222088339464488], [0.16095630460309085, -0.6047955096041977, 0.3103127601977087, -0.60777739055524327, -0.33086317195136417]]], [[[-0.56904788585008759, -0.40202913930431872, -0.53232508472166384, 0.083809064619506879, 0.33168333727051258], [-0.59457097538486159, 0.60975778338815134, -0.48747861411626903, -0.056699937300572989, -0.85739054862941555], [0.56490741674756095, -0.86539934617845971, -0.025950989782338452, -0.9031922253872311, -0.87208502644305663], [-0.43708004963454816, 0.31554700525434209, 0.65297607217349007, 0.69809812371113256, -0.55362063921419247]], [[-0.90373615422603581, -0.83684443577490941, -0.49284723935814112, -0.82038290628295663, -0.30419133528647979], [0.61046084550751645, -0.65169915658176314, -0.057616670498802147, 0.095774191711585521, -0.29569828921276464], [-0.85162266546589271, 0.18723697876092649, -0.29643761678151348, 0.64860626588065418, -0.70970761695295659], [-0.92904895101189933, -0.15603812237220316, -0.35658858382255776, -0.37826409159972418, 0.59761316269010223]], [[0.67299307006060904, 0.090920858131422477, 0.76333427164708123, -0.20571771247746495, -0.18254496405657439], [-0.97139627529092065, -0.58618202516795392, -0.33939754743549733, 0.54566652092921353, 0.77460937775673466], [0.37552603637671322, -0.85602897839838232, -0.56758302223471757, 0.8153181666450604, -0.51432238915543405], [0.56017786029931083, -0.34051714483644346, -0.30764866536174318, 0.32764736348339718, 0.58638965364004303]]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[[-0.64083755775789575, 0.51840163719189514, -0.41636301656345198, -0.90217447652584126, 0.53088685107905498], [-0.023220385638411667, -0.02636469295668098, 0.30343269838132492, 0.41684382634143424, 0.44271225145269422], [0.6015823700590619, -0.51697911577828948, -0.99378493346717356, 0.47041113889054298, -0.54627692937522032], [-0.32734462216202398, -0.20042802085662603, 0.39742565495038584, 0.057982859972591339, -0.44464388724948289]], [[0.03882376639845142, -0.3280547785519663, -0.5695261756198966, 0.3875707586349455, -0.25893710047931551], [0.95434330550445723, 0.81358838477248563, -0.63589570396019135, -0.84137536310448069, 0.9259096267305198], [0.80065159411445763, -0.49958713349362616, -0.61638350014140553, 0.94623235027149444, 0.31246723717325176], [-0.57469972900276867, -0.42712036773744333, 0.76969162177352057, 0.83637718533915928, -0.36607862608992892]], [[0.96643860308568508, 0.52394576618928967, -0.30221038959242152, 0.24227465698389494, 0.46310017128425751], [-0.10711081675649448, -0.10780903903863304, -0.68379589318486556, -0.71641646034988393, 0.67067648548953818], [0.018449800834485774, 0.60544442421409994, 0.37391301716824143, -0.1255395451131871, 0.49996584935930466], [-0.48702797179133728, 0.58420886732049548, -0.75357572923428084, 0.23888633269958337, -0.51355286514495568]]], [[[-0.64353074798587073, -0.29994626732326113, -0.19126426306891431, -0.023780298503149444, -0.067379165265028851], [0.9030151812238465, -0.28599126052889767, -0.73315311045649301, -0.49951751940684974, 0.37313122273382993], [-0.75924581902814126, 0.53234405923589767, 0.47289749007885962, 0.55109978873067456, -0.46393120379014019], [-0.064005111241297374, 0.28079244738556364, -0.38590642249634266, 0.83337590661206562, -0.8004485114341171]], [[0.96441500686428339, 0.99593226022740744, 0.7272114603667541, -0.81435483894197014, -0.10729940578934505], [-0.55437343190119193, 0.26892285275554451, 0.5377861187322035, 0.44601757559888044, -0.45977690806446114], [0.50440410102577626, 0.42209833204452396, 0.49213746214807519, 0.31570727377208163, 0.75700212430343883], [-0.93575031374055118, -0.88395265257965838, 0.1229660823938501, 0.37784277664267263, 0.6839491920796732]], [[-0.65688465870407797, -0.73829181771639463, 0.79752881662365427, -0.11851441325845546, -0.65747648932959635], [0.1419906644275637, -0.67244456156226851, 0.53360896231174371, -0.15569966480773134, 0.66139473050902797], [0.73275508630272856, 0.54797175155994626, -0.95587799655355465, 0.41395464842834939, -0.44002131165805647], [0.87292986227260316, 0.015407020155483009, 0.16794959091726636, 0.048832646543290892, 0.8730014468531655]]]]))
      res=tensormult(arg0,arg1)
      ref=Data(numarray.array([[[[-0.18736200455435167, -0.59575855414932721, 0.75017227429273536, -0.66376333986527691, 0.10621005363191777], [0.030497200996141227, -0.68227554266378987, -0.45078298283441387, 0.90398948682579605, -0.38035358885910431], [0.26406580409771296, -0.90279216815708463, 0.621672805520609, 1.0074935049513529, 0.13184253246697672], [-1.1358329207354851, 0.2651958222002333, 0.42780496605898577, 0.78833982236061984, -0.27184035499916437]], [[0.31547572353462094, 0.0016238621459477298, 0.13374247756802948, -0.099364958690998886, -0.43955054552045375], [-1.5242799274197267, 0.0061393315653703873, 0.31086780005376674, -0.0083911454549675524, 0.30766315670503286], [-0.041057080722825767, -0.42818339429253138, -1.1696868166764642, 0.35649891318504884, -0.8536326351823933], [0.74511184742803249, -0.86506275458592174, -0.42311830381860893, -0.17660318260117341, 0.88424163860697669]], [[-0.44070049605361694, -0.47417765419896185, -0.27478262067944115, -0.46390414257177404, -0.60506487525854269], [-0.39322642846392009, 0.0025666187871418722, 1.0352997283037941, -0.21187738877287504, -0.49239596092329496], [-0.95321966772088418, 0.49173748258955463, -0.75183937669710976, 0.6283924008108368, -0.21774208292305816], [-0.38380451684501293, -0.78028188155297173, -0.47247714454467543, -0.69897817826664776, 0.86771402526770192]], [[-0.098481917644311356, -0.15371103716981777, 0.34915387957954569, -0.20073774269801195, -0.16171071948506135], [1.0054699883117022, -0.012313298160156916, 1.0926151180637587, 0.071102042560205025, -0.63979498910425847], [-0.66578677798554065, 0.81552083815204601, 0.69194412328004473, 0.72185032006865801, 1.4608593466615216], [-1.047385057564143, 0.15987340629869304, -0.028051106969690209, -0.30288974248468636, -0.10769097225824559]], [[-1.2614828172060697, -0.34655363112396192, -1.8257350719175602, 0.08753532439869692, -0.25586637062194223], [0.18136950764678328, 0.84488141538863348, 0.56725280721351312, -1.2173975981819225, -0.79551012858668724], [-1.0156263049031962, 1.2121008778618343, -0.73891364863461118, -1.28409239287069, -0.8801210998261797], [0.036786451269731291, -0.51287226712267076, -0.20202984546916763, -1.1282566866816415, 0.29123286473752447]]], [[[0.79269243207982365, 0.68722037061122065, 0.28643729860917566, 0.31703257057585338, 0.15495660698957395], [0.30565121445413629, -0.5545056598033532, -0.8713954932724628, 0.078527140423756733, 1.4908576931903321], [0.40812766644397425, -0.026220868309316941, -0.097060463950724402, -0.058544899599267619, -0.17777187033839981], [1.226786608698597, 0.18913878900015332, -0.41749129603032925, -0.052029424530485285, 0.1668483426632128]], [[-2.2532998803734126, -0.9978042814294632, -1.3335924405589883, -0.97970046872159022, -0.56755958212084057], [0.29396502717943485, -0.033570906304123627, 0.70488324982541228, -0.67762610578296056, -1.4838640394136078], [-1.8582007183783098, 2.0172599175826984, 0.48473382321114905, 0.06189879751638222, 0.27185194598346829], [-1.0524566039533587, -1.5318227628855414, 0.45611577972507722, -1.617727161231497, -0.11414479841904551]], [[0.74785306289291786, 0.64668527021423072, 0.59566593216771235, 0.80162348767347269, 0.17920021266480568], [-0.021601060619795498, 1.0926672167106328, 1.2921337125898056, -0.20640931578133659, -0.66614511271922749], [0.34641837544295084, 0.38945702615519801, 0.70543958916922778, -0.35870983268290119, 1.8442825391720756], [-0.085398367961025179, 0.34510531594989513, 0.42159683153073357, 0.2199081559869924, -0.73557981354263213]], [[-0.54269134919813156, -0.31822690828134248, -0.26764481742795704, 0.21347770924522996, 0.38404233798125387], [-0.01321323707207589, 0.93734692559700428, 0.27640584594368428, -0.092098825977296572, -1.4534404355846102], [0.3767520805629983, -0.31493446122996127, 0.71028233949090036, -0.78730505254878036, 0.41599321928612271], [-1.0482558183116517, 0.53750592948018316, 0.91860479024859187, 0.64516143518165758, -1.0177083843762409]], [[-1.6227692861986369, -1.0387630358041098, -0.68302050591793495, -0.94421147258139859, -0.19657664066668779], [-1.1005123177626537, -0.27804404929124354, -0.65029157459131259, 0.10789965257490641, -0.98733967936976619], [-0.40766432728399221, -0.17193497934556057, 0.045655525862162261, 0.050200731694980294, -1.1021887166647795], [-0.65067802920621576, -1.1226061527692006, 0.76688425372745672, -0.1663238516205747, -0.19985385351552859]]], [[[1.1879906702631358, 0.83015596177690854, 1.753393535090201, 0.16143101925851347, 0.14345560347590042], [-0.80717176805461088, -0.5513541025165396, -0.34768574611369396, 0.81257178624437532, 0.88675937593300991], [0.83755096809010399, -0.24390515852630856, 1.0906267109737695, 0.90289997426430357, 1.5890584609416822], [0.86230699570201241, -0.43943411226206197, 0.56555881741578062, 0.43414501226469426, -0.66865847969093917]], [[-0.028844966343738343, 0.24159113122026141, -0.99014137570408445, 0.79043942484270435, 0.22511444426796229], [-0.36559756554923917, 1.2221231796336749, 0.16797066497851795, -0.80560950155094846, -0.36540548300381204], [0.3660656982193039, -0.15530866036695157, -0.71335888391864177, -1.6194578681172538, -0.82552348812638288], [0.52807629802298406, 0.38365010687731943, -0.00063313107515572398, 0.095211886869982068, -0.11104368618180907]], [[0.82971936314137185, 0.65346557103635106, 0.91541749929705252, 0.4413072088078448, 0.059715639153473665], [-2.219137767848903, 0.40825569990784094, -0.14131771476658164, 0.26242438130898815, 0.26535085289717308], [1.0227944922333745, -0.71828627176532189, 0.041170746330662089, -0.13320731716934353, 0.30298779493004713], [1.2623781628561672, -0.84591768028369296, 0.67267942958220295, 0.48406108226023853, -0.45342850419981306]], [[-1.4182718702390158, -0.30580219097855804, -1.3784053025625518, 0.58946433217490668, 0.27007707773146555], [-1.0606328060915426, 2.2260682519932344, 0.97201734385235361, -1.0827358041433615, -2.5640279710844931], [0.032168185237801905, 0.57249378120882755, 0.54665628645367503, -2.1640673037080624, 0.34922796628015151], [-0.66492099343489186, -0.39801615633160964, 1.5140672430909221, -0.049332934397833261, -1.4639421267756791]], [[-0.61947972616560631, -0.49694874843120823, -0.37044388409687173, -0.90589125163750295, -0.34961750114553347], [2.2413981812352568, -1.5110973845416678, -0.29078867529168895, 0.10038511044293702, 0.79316914563278751], [-1.3763290178574634, 1.1362981949226725, 0.052922435647968613, 1.1652228957325887, -0.10725058271155571], [-0.66895637046845469, 0.13703646971479022, -1.0106550393079983, -1.0101027903930155, 0.89029816582914045]]], [[[-1.4141247343512053, -0.63442997772074472, -0.94174556369995777, -0.43375088915179427, 0.048849199459629747], [0.3566006406700834, 0.072024225717709917, -0.3093384695232162, -0.2971039070157504, -0.92533461872386058], [-0.54256971550411459, 0.60647595295413681, 0.53006533508371523, -0.50100629436486088, -0.24543336204031843], [-0.74920573287906023, -0.31503064319114427, 0.59606207997613714, -0.38242777576423254, -0.5353082146364242]], [[-1.3157958400900289, -0.67302005507572871, -1.210463237327398, -0.40307159122147163, 0.40241021281845646], [1.7056020294845475, -0.42745513760187015, -1.2905362536123195, -0.16245113999194061, -0.24453243231561173], [-0.28618848682244147, 0.19079708087164987, 0.51747488587014123, -0.72065753942683908, -0.93896862673452741], [-0.90335567653195747, 0.80277528959079758, 0.20458281098178693, -0.0086288828339042556, -0.46187934390024965]], [[-0.43340738938837609, 0.6407286939783462, -0.32760257266164228, 0.42083244348296833, -0.17350696795215081], [-0.74199536482579098, 0.80884490141108656, 0.79253954073110833, -0.83113940990848689, -0.45511041973283217], [-0.51649903825663346, 1.9001770575258381, 0.82726205028687205, -0.78786049587856666, 1.537538589990324], [0.97112403728739882, -1.4688131936553339, 0.77330224709673412, -1.2250282452252144, -0.84455110554912061]], [[-1.4418381706760584, -0.81993047058640589, -0.75849000431614433, -0.86590874356960434, -0.22235200759463844], [0.11287711877406675, -0.55367889116901481, -0.48462637678580167, -0.053467534792688023, -0.50882630040129073], [-0.81774658206616757, 0.53594624203118857, 0.18403951028262422, 0.19778316794142448, -0.63767048993244102], [-0.62862414468872374, -0.7613427506845839, 0.27677613139259161, -0.59797175214355092, 0.0091619009669715382]], [[0.40786053771402386, -0.40376030147129055, 1.1090775411894311, -0.77842227442529532, -0.49864593173031407], [-0.49394191033636436, -0.95259274781968184, 0.44102478963933567, 0.84591040696465514, 0.23304022473017494], [-0.30905664801060168, -0.55636340627948366, -0.35929595525384567, 1.8981394404978171, 0.12943300771078176], [-0.52925878984095531, -0.45033191077541579, -0.47446825871771703, 0.13649169653858939, 0.89758885070010686]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[0.34124739843894397, 0.022373427667156137, 1.4700855608963308, -0.30517483503640241, -0.68851784962596185], [-0.64804763424223732, -0.53542337475593449, 0.79483170434659411, 0.67790163641880241, -1.2508075718060423], [-0.63473363256658821, 1.0338439515027407, 1.1875963578948958, -0.41465727813647446, 0.25975764952089136], [0.38224328868952084, -0.36178828138201835, -0.44417192702563763, -0.17293811698135422, 1.2658347426438856]], [[-0.48823990074644719, -0.86712847389685688, 0.38255046547693483, 0.14705496161942866, -0.77986640228466708], [0.69100296757900947, -0.05679869707237728, 0.13338116383106396, -0.71321285959220115, 1.2977130571324751], [1.3874104989304121, 0.14984013971969362, -1.4192170834477571, 1.0099443586613073, -0.13197968898529111], [0.41436390971347348, -0.29624783804445959, 0.71649785156756451, 0.55512557682131425, 0.65818747737130168]], [[0.90258549827778767, 0.17950365343418184, 0.62550278617717781, -0.069628763531273785, -0.65846144829402209], [-0.19358189047223218, 0.81250420398203282, 0.55135098592288523, 0.057928398235669934, -0.14335731163555804], [1.234025741446874, -0.22003483696711174, -0.25596778537846243, 0.49255347781859038, 0.97840047730532931], [-0.59298039228082766, -1.1629036478195853, 0.9239078060576098, 0.28112054805806264, 1.1578513114474638]], [[1.3045321597875206, 0.62708013881411684, 0.6100196100928249, 0.086902065214044422, -0.20299585571780748], [-1.2425030075607324, 0.81659304723538861, 0.89954807366254552, 1.1494052461657998, -2.0583684267280282], [-0.27261153702585805, -0.56975408165991526, 1.1855878905980728, -1.0379770721213937, 1.1003175171834114], [-0.38611877135372796, -0.91640854968889474, 0.35987542689503171, -0.9002990601048817, 1.165954917958494]], [[0.6412741415496499, 0.76117595387953041, -1.3310952993237242, -0.012273481401878769, 0.64764542018305793], [0.76888470731083736, 1.1192414581617662, -1.1083069438219848, -0.84898514538133774, 1.0619789460978117], [0.67539115141470285, -0.68408150819909697, -0.28346058924615403, 0.93055761275542082, 0.57598012369031371], [-1.6063396337439237, -0.30562164828606436, 0.45268611513033619, 1.0331502172271627, -1.3528197060849847]]], [[[-0.81825708548764031, -0.061591875482818526, -0.63162927004746128, -0.18994894449830904, 0.67896560596187783], [0.05571687621187834, -0.70617335934229064, -0.18144331868839184, -0.19367886060075296, 1.024976675296996], [0.16555702706867639, -0.05750008558450348, -1.063486356382314, -0.057007502923086192, -0.89476582611443833], [0.50754525843102449, 0.92449622612264259, -0.37601879326236548, -0.30618115818373853, -0.78102041918855014]], [[2.8832232969900673, 1.1270367073890317, -0.020545467061366118, 0.61317784050770019, -0.074370089616234036], [-0.26051706189107876, 1.4609599351128599, -0.72728744095946007, -0.86354720786421624, -0.065146983141587289], [0.68603197097929014, 0.24233179017923961, 1.314529392623351, 0.14720926198066817, 2.3118063755971914], [-1.9158132524620191, -0.79444050513198838, 0.047937259936443571, 0.7760374057802395, 0.27404799626674436]], [[-0.028215621026046356, -0.63063603616540498, -0.32389997904186613, 0.974361806743411, -0.18234698407139144], [-0.21692725114864397, 0.6204202129732832, 0.099265867955816878, 0.46126670347552612, -1.310907472966774], [-0.79838859766690318, -1.0812121592684745, 0.53393515981214468, -1.0133970652828395, 0.14556930475481927], [0.54316215831001646, -0.041123453279834438, 0.38735178334196285, -0.96082987241222984, 0.1952552838278262]], [[0.054679118298599949, -0.10906388511136628, -0.087780725250145186, 0.35208426474680005, -0.11327058858207417], [0.25944106173122639, 0.25980400040799717, -0.43623506298442194, 0.12270689369278909, -1.0268167950406437], [-1.3444058684210689, 0.027864354588502838, 1.4231169285803231, -0.32218690376050035, 0.12661091813549397], [-0.15892478889346456, -0.040636371187386243, -0.28188813105868982, 0.1528440780009071, -0.37362225231410234]], [[0.95996137136831783, -0.051372792990243166, 0.59481895681655672, 0.28072144690106227, -0.61911831600927869], [0.69823708934544526, -0.061615033747335901, -0.79199733360833635, -1.2951186373203409, 0.97561039139607553], [0.30281759503997618, 1.4647437671372865, 0.66982446675103668, 0.89542594300192757, 0.80214784293144925], [-0.59745713434522474, -0.071499825252299309, -0.48420968943316561, 1.3728804949466666, 0.17474250107367589]]], [[[-0.15700271038404001, -1.2698087617238896, 0.56650020169372672, 1.1662732110957887, -0.5547292381670893], [-0.32073880454159265, -0.79834224062721959, 0.19438648467314423, -0.30215543252457183, -0.046068762450644229], [-0.34192965459801405, 0.4748824725741429, -0.095009682029776776, -1.0278098036579824, -0.21339842975473428], [1.6981327677555029, 0.95631652911152143, -0.54021748372714484, -1.0084560952885975, 0.85944800947531919]], [[-1.1413893607587229, -0.26048922317227041, -1.3741891278928626, 0.021889230211587493, 0.53686335595829726], [1.206182079147174, 0.2306970776375834, -1.0052220610201461, -0.600551838078342, 1.0422062603928275], [-0.17475328923208489, -0.69525707901767053, -0.69754969306608228, 0.7605038573640156, -0.8152784378118979], [-0.28751307757737216, 0.36887529243702599, 0.25020158096700612, 0.66896111484958576, -1.6663946399101388]], [[-0.97352041771691245, -1.9726683577131801, -0.00079844855777178037, 1.376916086322308, -0.82976243683412654], [1.1292682513746457, -0.62524402496944198, -0.67582935502821073, -1.4049993715803486, 1.4466973197098434], [0.17421459463949729, 0.45218468724120703, -0.95304062865760841, 0.26181523277577001, -0.61717047702258609], [1.5428668128919987, 0.97253125346219749, -0.10410116881494313, 0.15865761896358788, 0.093227860926683004]], [[0.44745689381352194, -0.57501491733894583, -1.2981321108598554, 1.485362696723646, -0.075532120265780711], [1.513623097470687, 1.1540860425936201, -1.9633000849812472, -1.4211306270783606, 0.23247310736128313], [-1.0859118255908158, -0.39177470146922372, 1.2697194005588073, 0.32406403787309146, 0.6095451388198152], [-0.79448160787740074, 0.21467564829945282, -0.031540985463892973, 1.0526451094923466, -1.5057052455888247]], [[1.5496563361128237, 2.0476459602250201, 0.4505864787419433, -1.3177620438610516, 0.74297872091723205], [-1.6463742578825127, 0.31176836873185892, 1.0188793274721866, 1.2060461609556643, -0.9394018857344324], [0.64480458203579594, -0.023470025772202696, 0.42970202382840805, -0.41978799481672208, 0.93377475641893426], [-1.2961154912710087, -0.79510623393803237, -0.05729942066043095, -0.45197392212966214, 0.59608687987034648]]], [[[1.0826692657343091, 0.69845142649192526, -0.28258015408196963, 0.12347237509214384, 0.29648731800083356], [0.14610170538233039, 0.37080552442709924, -0.81063307173977683, -0.53664798997701713, 0.054635835699638147], [-0.40400645134678448, 0.47155319526475847, 1.1063722741866842, 0.11176526490180516, 0.75178695481857827], [-1.0298964474459142, 0.034736075857115335, -0.52714717393395538, 0.66381362516340914, -0.622318196303288]], [[0.44048595090601833, 1.6049598356774704, -0.58582087053025811, -1.0251771214845355, 1.1998296470072274], [-0.20275827015448589, -0.20796726985131359, -0.62204037901927034, 0.23636362510079881, -0.18199981836396067], [-1.01813169116781, 0.54030525349011171, 1.2104662149410497, 0.017610601972984807, -0.030713655199017309], [-1.2994170837069183, 0.31566240048763999, -1.0396068741516022, 0.55099851990754589, -1.4665975906537763]], [[1.2377695863914138, -0.59719155270637547, -1.2965922928872526, 2.003708068166985, 0.16030782891636328], [0.56926145422444197, 0.95339171788153654, -1.5123359273878236, -1.6734801705457818, 1.0316532362576394], [0.25809210562408108, -0.58460426354379957, -0.023564417530334725, -0.38816540068560612, 0.99183711169880295], [-0.19786571315126933, 0.77981736629470866, -0.051495979614263054, -0.029886483890742735, -0.76916704184683971]], [[1.3205486296898841, 0.73089047315572309, 0.27750278458061617, -0.10023824133753961, -0.008688004562331729], [-0.02541972995680275, 0.20781522423289547, -0.43520219673190152, -0.60861171520152002, 0.40052118742523013], [0.32658944373537385, 0.86244053810906207, 0.70019275135478898, 0.39762893616231965, 0.95107136393341984], [-0.99396879179205921, -0.20721101862634309, -0.40555454689241638, 0.79118350091599099, 0.042580758697757945]], [[0.50556811925816136, -0.23936756214027521, 1.9363792374837077, -0.33710386243986634, -1.2395988068590347], [-0.89506832195970509, -0.14141455589881746, 1.6082600781805556, 0.79349710197998391, -0.91399880326549887], [0.95042904231085945, 0.53347893043469274, -0.093954973763506033, -0.057386915981115505, 0.60356874081398892], [0.54037468749477813, -1.1044827688451155, 0.58978999980381341, -0.3921840689557784, 2.4479744467297797]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5, 4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_tensormult_Symbol_rank2_taggedData_rank1(self):
      arg0=Symbol(shape=(2, 3))
      arg1=Data(numarray.array([0.98808063699689863, -0.25837084062158633, 0.58069221741649391]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([-0.65282976720127439, 0.86176416573399184, -0.038235031999165336]))
      res=tensormult(arg0,arg1)
      s0=numarray.array([[0.51723353239561676, 0.75353677631783711, 0.95579823700919331], [0.10284444363364131, 0.076133102299025479, 0.48565674664746106]])
      sub=res.substitute({arg0:s0})
      ref=Data(numarray.array([0.87140110548074123, 0.36396512285098603]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([0.27516056867410688, -0.020100236056510502]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_tensormult_Symbol_rank2_taggedData_rank2(self):
      arg0=Symbol(shape=(2, 3))
      arg1=Data(numarray.array([[-0.25580810746204174, 0.41554876880669633], [0.17422903871438788, -0.11933206577083388], [0.81375166186507264, -0.47386511659191322]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[-0.76658154165035031, 0.52563154331024742], [-0.98246640969143129, 0.94895215603833738], [0.27384912025667418, 0.4624385586405928]]))
      res=tensormult(arg0,arg1)
      s0=numarray.array([[0.36748171101394678, 0.59363281270527302, -0.90968563445568185], [0.035697001101574699, -0.31212977797699604, -0.13178247490205841]])
      sub=res.substitute({arg0:s0})
      ref=Data(numarray.array([[-0.73083492352752677, 0.51293543195468327], [-0.17075186142117385, 0.1145280538866721]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[-1.1140456054367782, 0.33581540279658384], [0.24320384537292755, -0.33837405374226764]]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2, 2),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_tensormult_Symbol_rank4_taggedData_rank2(self):
      arg0=Symbol(shape=(4, 5, 2, 3))
      arg1=Data(numarray.array([[0.30698590377432944, 0.83954191541949452, 0.93415956593175986], [0.83153213802003445, -0.55385255001851141, 0.17467866051503611]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[0.7939617507948491, -0.82208629301372582, -0.1956861219189423], [0.36007381474206679, 0.59514744845057321, -0.3911244277367496]]))
      res=tensormult(arg0,arg1)
      s0=numarray.array([[[[0.46221285422226055, 0.55080494748549325, -0.94529987881968958], [0.12957510037826681, 0.55926983342454539, 0.32280494681212901]], [[0.01274998306617392, 0.7624799293240565, -0.06270970144576693], [-0.84146248796327217, 0.96763361825048255, 0.50335203597183975]], [[0.79794298605344749, -0.056351315522030987, 0.94689851170087658], [-0.0266958001801616, -0.82191370799602526, -0.69624463253135072]], [[0.32760876972298592, 0.14389533958214984, -0.15639307389825374], [-0.64889107983149308, 0.49519827102736724, -0.90917268752677183]], [[0.51138091301936983, -0.77282301238497575, -0.30416889907242983], [-0.3373461055815925, -0.35197483172771959, 0.49693519260093932]]], [[[0.37346491124722725, -0.23185380139224954, 0.78392395991201025], [0.67467021952371176, 0.022956958929035043, -0.91669134934943952]], [[0.3973788707726098, -0.76360703055183654, -0.80278372192492209], [0.21811006102939112, -0.14029046487279317, 0.15252561433266942]], [[-0.97908365470093006, -0.024884994667860871, -0.39306524586815739], [-0.73377157199990539, 0.47273133967954339, -0.75741201391602608]], [[0.34406577478621281, 0.78783877937966751, 0.076115676559894707], [-0.12582065980736057, -0.2065983620705456, -0.14969259426605208]], [[0.6815446515133794, -0.035386504444521849, -0.078640250506098797], [0.40945655738858977, -0.23598556144802063, -0.1557956149505777]]], [[[0.087009781420532839, -0.17793809043526299, 0.12474423153707326], [-0.21464399057688888, -0.38899686071600037, -0.59903740659915083]], [[0.52041692443785514, 0.74362942748350602, 0.15494940280484193], [-0.85317954195789381, 0.95961916758518884, -0.2325559403574724]], [[-0.36331043488082293, 0.85848949075936432, 0.56992591734360998], [0.28378707128265956, 0.77287430637260224, 0.39978938102474748]], [[-0.25691489452909555, -0.87327197730002881, 0.11084601669909078], [-0.66526250793158881, -0.15752892117251993, -0.28852484880049079]], [[-0.16888434750793935, 0.17965994513169781, -0.97829621308481962], [0.56694558142088236, -0.98064689874385746, 0.75798355104498993]]], [[[0.30045345253333267, -0.93084859531944364, 0.84567701668088202], [0.37927342610602399, -0.99389034092627004, -0.86433696740899224]], [[0.071217504168930024, -0.067266334389090909, 0.21737453565822396], [0.71727873954375765, -0.96363215211058217, -0.79745788618986357]], [[0.76598784881618132, -0.17235667343066896, 0.62791332707200231], [-0.69646796405856937, -0.035426751353960562, 0.1283903137787259]], [[0.53118287860432734, 0.015198118780957115, 0.64520713694299481], [0.75026781263280573, 0.92823175530485935, -0.79429383411012466]], [[0.22274105201463823, 0.94827380548790585, -0.71378482586544134], [-0.1604949131346729, -0.077480250702469, -0.25415691256017681]]]])
      sub=res.substitute({arg0:s0})
      ref=Data(numarray.array([[-0.42436428047164992, -0.56223753129432041, 1.3936037675035944, -0.89737232211869022, -0.77474086359514205], [1.0404763277494, -0.98330976339240461, -1.6929243542481891, 0.82180421363881528, 0.55001692704200877], [-0.07382021662229625, -0.35274009114398386, 1.0193628150594538, -1.2248083077354812, 0.3320729830248822], [0.81561135577338639, 1.1593039377393006, 0.13993081075617575, 0.74957362343738609, 0.062765214183443691]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[0.3523999118171906, -0.52840708752106913, 0.26811293541461695, 0.58908534834693904, 0.57555580772402082], [0.94885188190056358, 1.0357338461926509, -0.36660468398028928, -0.4991039609798979, 0.65352380123474907], [0.11645218188364956, 0.12640772115459797, -0.69994255268233674, 0.27178586785387082, -0.76629782250039968], [0.72141759517456383, 0.065980860680386832, 0.30490258305147266, 1.4162409161312373, -0.46753244957549206]]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_tensormult_Symbol_rank4_taggedData_rank3(self):
      arg0=Symbol(shape=(4, 5, 2, 3))
      arg1=Data(numarray.array([[[-0.61108746957766091, 0.54470863750092491], [-0.14648443350766582, 0.99983354952388392], [-0.34586964261218678, -0.65994191498005828]], [[0.52107246269232665, 0.23329605325240577], [-0.84304374213992084, 0.20916234090260222], [-0.64495521486187113, -0.19165580002821159]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[-0.4194718184209123, -0.33333308830045638], [-0.91415170411555446, -0.64080572595029195], [0.34935527237744424, -0.5642032063827207]], [[0.41418244591593134, 0.74292596464393612], [0.93701702859923564, 0.71849195574265301], [0.18257348401143503, 0.21993776551317734]]]))
      res=tensormult(arg0,arg1)
      s0=numarray.array([[[[-0.89301433526090701, -0.44246702961710471, 0.85441717415312302], [0.29360255749610342, 0.2621501089203413, 0.55575329299959786]], [[-0.60011197272319117, -0.2513206810865094, 0.53972565252589977], [-0.57645444611161278, -0.78758925538110547, 0.50229288033320785]], [[-0.25343151180913193, -0.88737218623723613, -0.49916674137686434], [-0.54461351223355137, 0.86281129179658889, -0.16632780894916932]], [[-0.9237253732579942, -0.79678706235001551, -0.14644523885513072], [0.99580921082638962, -0.18596969258835938, 0.96893627895972134]], [[0.025089506230620007, 0.86418253935577583, 0.49713354509375196], [0.57690427966624425, 0.66657816004624437, 0.083408854866002358]]], [[[0.25455445650905961, -0.39992934379782863, -0.20795565267411575], [0.5006475174484053, 0.7886951452964488, 0.020116784415475486]], [[0.26228383333102823, -0.94556744114128533, -0.068802628268439081], [0.44464638344480178, -0.51687061915537447, 0.12465654081528577]], [[0.3508885328597553, -0.30554054981992018, -0.64741698998879937], [-0.0087729318145723933, 0.67709288386574729, -0.36354651945131788]], [[-0.14907967921610621, 0.76733066214755463, 0.16381581072733931], [-0.36050170359226463, -0.34807644951700412, -0.8093792220060374]], [[-0.061541844945119495, -0.010538438234902303, -0.90311852526717251], [0.30957561287120439, -0.65336675565535463, 0.63795984627250935]]], [[[-0.53121382921709448, -0.33913242628541651, 0.89740917894696226], [0.025251042274814894, 0.63582635528895204, 0.48735566041851008]], [[-0.19618886961881854, 0.59850530195282614, 0.49845607426049066], [0.73123163029938354, 0.43190876239154119, -0.7684383405369497]], [[-0.44799941629831852, 0.11766301853719585, 0.025789287675777262], [0.079009519914100323, 0.20863127137589488, -0.39080374688431396]], [[-0.34963841157926234, 0.61622433148669331, 0.24497741168561937], [-0.33219799716362441, -0.56178756204330837, -0.94676162689093823]], [[0.79975813742392354, 0.61959748168267548, -0.22867690948291153], [-0.043038612757258177, 0.16848776995814263, 0.5974093271730867]]], [[[0.48814516016349407, -0.96904910501633812, 0.65573047143905994], [-0.50216872201809326, 0.1771657697426281, 0.17050940399836501]], [[0.61223153440497624, 0.49770099229942844, -0.29198577664791348], [0.81718346324173807, -0.77320907838336184, 0.51308903872683431]], [[0.85234264913475766, 0.40983042354243238, 0.92197378614081571], [0.29984427105588995, -0.51973573552647001, -0.43222715449723159]], [[-0.86204827593215771, -0.31067270874836761, 0.3870184118970228], [-0.069547033213261722, 0.55546617746472893, -0.22179492208917662]], [[0.31738188911672682, 0.35953009010246628, -0.089889184772192321], [-0.039034190417843506, -0.23763559376703425, 0.36354868579992017]]]])
      sub=res.substitute({arg0:s0})
      ref=Data(numarray.array([[[-0.11144434569168987, -1.4758768023504309], [0.25650199862609846, -1.3298385076529562], [-0.44639512075550392, -0.61056062512464626], [0.78259370224594893, -1.1954520301676652], [-0.6290051628144564, 0.80765265185670321]], [[-0.44205136491461966, 0.15394280179228953], [0.58906892834575542, -0.78540281459749917], [-0.28666379655774166, 0.52215137162561476], [0.54964932275901246, 0.57610314350010206], [0.65218500096601284, 0.36524105426459558]], [[-0.77328523775951674, -1.1751933123537837], [0.3723310276425677, 0.57079601850482398], [0.36494660926137346, -0.0064349310411206395], [0.94979323886345712, 0.25044690950355186], [-1.0501622186210902, 1.1167465876496898]], [[-0.90414176079169728, -1.2485116342904568], [0.40069797249303435, 0.95438257297382034], [-0.026604724566772986, 0.30967364720356083], [0.076964158413199923, -0.89312997000909844], [-0.26999877913394194, 0.4631853894039224]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[1.5462814372796667, 0.6278505682912664], [-0.21500520343058488, -0.82709638117601836], [1.2956461091792879, 1.1134754494008425], [1.4797915946797278, 1.720419287185025], [0.251924900930863, 0.083252349284931859]], [[1.1362202529698839, 1.2317944342659095], [0.45294198411979708, 0.54370445622342123], [0.47038403758553238, 0.84411465951439868], [-1.2049302133661426, -1.230371360193284], [-0.64758085714598201, 0.43767385830897149]], [[1.5415792259312675, 0.47085170208800436], [0.27658202303283541, 0.085205426117588634], [0.24623591307219189, 0.18202910533755673], [-1.1679235718985717, -1.2752180680827248], [-0.73265040404311532, -0.31413174136012623]], [[0.89932601972147008, -0.11998849757540089], [-1.1061654299499575, -0.19385739591066309], [-0.8518087163088317, -1.3126431812672148], [1.2319961018108054, 0.56672163971252232], [-0.6656625875878639, -0.4052477498713245]]]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5, 2),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_tensormult_Symbol_rank4_taggedData_rank4(self):
      arg0=Symbol(shape=(4, 5, 2, 3))
      arg1=Data(numarray.array([[[[-0.14226474777222609, -0.25835542646427201, -0.28309470809386017, -0.66993118738413204, 0.30015343024851338], [-0.071300673987174212, 0.83275145730572087, -0.77671145928238272, -0.54484338265191012, 0.70752915179942644], [-0.27250534129414805, -0.39798504863777651, -0.41602611214394458, 0.17121187044292618, -0.25389102619778825], [-0.69132556342307683, -0.84096622159200729, -0.47872666501566385, -0.4544070663047215, -0.34039219148071265]], [[0.50737610373128605, -0.075925253435636053, 0.55852407714557661, -0.8015205372082701, -0.76414135288934282], [-0.048453353772740959, -0.03673394430781185, 0.58299122263504199, 0.33026013022542577, -0.11971247565107523], [0.015085127784803865, -0.8935716490052763, -0.48616753976276739, 0.35153600280675179, -0.27872968879489557], [0.6381244345313728, 0.29780259199792813, -0.10661127496836587, 0.25365643079778244, 0.20536618430276898]], [[0.11412807528008528, 0.73679438711666134, 0.71604987672005094, 0.53761268354352221, -0.6654565169283484], [-0.66749000610553311, 0.22694648835615783, -0.52446734429713726, 0.60519166474412778, 0.43615030938540422], [-0.10489405035603738, -0.90859749893601749, -0.19426144591803274, -0.37196553280032219, 0.86013306334123207], [0.27131740803748361, -0.5258182898123005, -0.31909429007597656, -0.43374761746329704, 0.57919843640698554]]], [[[0.56837369941596716, -0.76181335193220656, -0.71017677626733322, 0.64824365235277859, -0.44828683644595935], [0.77696007836187087, -0.53394015567724584, -0.6981013286086164, -0.071466467930672462, 0.092266550187433793], [0.047207038886373898, -0.41017328498666128, -0.3768628401392109, -0.57390346739771192, 0.36642521310259468], [-0.15110029776054312, -0.16577412974799088, 0.062977692238065153, -0.59242163818442206, 0.34577250426887551]], [[-0.44431755017968455, 0.014230758636838869, 0.27565038272764308, -0.17625880794378279, -0.060455444888962262], [-0.29990077802924642, 0.68651357855368955, 0.29425678005368572, -0.76766052381169581, 0.014084562747755491], [-0.84827998652442127, -0.44656900511091302, 0.7953777460761744, -0.19369269798349364, -0.79867505274516848], [0.63087378311240627, 0.21596089548566932, -0.14896034705728334, 0.055115164954640639, -0.90185385416359831]], [[-0.75454217439622773, -0.28933199432342849, -0.68595942391051001, 0.25004416074900115, 0.97770217339781795], [0.44912229766867373, 0.014630910158462074, 0.43268319472922134, 0.89932366004682351, -0.13565731348500587], [0.82127862613322877, 0.034362070885722407, -0.30609721514742527, -0.33013422241097556, 0.10004027117185177], [0.37432484799856947, -0.41410069099450086, 0.90898782215984353, -0.092403985646941189, 0.66563332528744334]]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[[-0.6105907342438992, -0.97353447210595978, -0.50154062141033284, 0.12868546076179865, 0.89436867152256072], [-0.5409596442264395, -0.6666101472832977, -0.86019841199778035, -0.011295945610480196, -0.283416700592513], [-0.93473794844282998, 0.69353855345956594, 0.16087219906924499, 0.55548971833137273, -0.30121708656353907], [0.44642907502227813, -0.77044792777125148, 0.32346281200442895, 0.71074163724111949, -0.68505968599916645]], [[0.3485204524961123, -0.0668585306860221, -0.24310549398740222, -0.63494303033444099, -0.12144947758253344], [0.35631115041024608, -0.91656880451090772, 0.95241182142452918, -0.89793487203596478, -0.81245031915499655], [-0.91274958279482954, 0.69326375095828485, -0.88526607253258227, -0.58209645993758841, -0.068943164003849144], [-0.35935001629665009, -0.87453012190562918, 0.27678298098071963, -0.84853156349077707, -0.14111301973477519]], [[-0.78779507738546695, -0.35536768655464601, 0.56642806116947586, 0.40422832021003829, 0.9283627965437462], [0.48343013714041772, -0.30896862638864642, 0.4045154056309348, -0.8842802977064661, -0.27490530459953999], [-0.55941732634374963, -0.45109998976246368, -0.33881150586334163, -0.87508687192464696, -0.2051434300291306], [-0.99775626234215076, 0.57723963826394731, 0.65486982236770253, 0.34957126867056831, 0.63940710180301563]]], [[[-0.64217699231647929, -0.65743640047961494, -0.080956859495311395, -0.58085714672199917, -0.17380132159539907], [0.69581149045449209, 0.42354530553186387, -0.36490177267011337, -0.38560900228525541, 0.37316956264604051], [-0.99419579236860223, 0.0053339431502719137, 0.40373122162327602, 0.11932168862692727, -0.27841819404752188], [-0.41999634518580065, 0.11312853903973408, 0.8535196199831403, 0.69048986692231518, 0.78933897707063072]], [[-0.98118704159282966, 0.60671946898795248, 0.55312377834580384, -0.99346553309358843, 0.47219343898924637], [0.082787140553520988, 0.074201755562811389, -0.7025532271692787, -0.54434164260032247, -0.10200062779581298], [-0.4581218518067427, 0.090768158236203877, -0.53653456133375066, -0.20870319122571801, 0.67840587838187671], [0.39338136696817338, 0.66066078804988559, 0.14795260447454894, -0.11549053260601316, -0.99653559671654657]], [[-0.28709302591316788, 0.99283990722302318, 0.2704575327946821, -0.25923120851261938, -0.57613823238335748], [0.19146807930651222, -0.35948709014148816, -0.24022060633056763, 0.73537187661359193, -0.73756807881070929], [0.48600614447185797, 0.6489144522409247, -0.051851003210130919, -0.55474540764166114, 0.074332407871803952], [0.40347803194574205, 0.55791320434535074, 0.74642799435547724, 0.073337051183790081, 0.098637434515451039]]]]))
      res=tensormult(arg0,arg1)
      s0=numarray.array([[[[0.93059967875966976, 0.239458294772394, -0.054832010801046049], [0.52482967094788746, 0.4347259307155058, -0.32382928980139769]], [[0.036011253537191923, -0.72700856165041272, 0.1222423165824551], [0.69715024725397567, -0.61297052457435441, -0.66792775842034824]], [[-0.62965064950867711, -0.49969839202704125, 0.54871498415683773], [-0.26319869800213702, -0.60453694369799327, 0.65870688079097595]], [[0.02300156390495367, -0.30969971611057723, -0.56894655368091107], [-0.75891248736080286, 0.34222710681758617, 0.56797598268324023]], [[0.18389166167176496, -0.60010077742479351, 0.96970459715629387], [0.81225254127276125, 0.26409716567889241, -0.5210309764111587]]], [[[-0.84024322523629924, -0.33090124931547082, -0.95577273367658866], [-0.45753232886350004, 0.26022473374861854, -0.66766788346912742]], [[0.28630567143746122, -0.44472418521505186, 0.80878244834095847], [0.92768565585238494, -0.76567397377474111, 0.93864989990647096]], [[0.90276898465086797, 0.33309588958124281, 0.086267801939240663], [-0.96099712854005692, -0.83425512184888184, 0.31704524375206167]], [[-0.99030194638586444, -0.56888900994263336, -0.56339168416254393], [-0.35518716406884598, -0.0067303073030096083, 0.29856804249004343]], [[-0.14708233947841709, -0.13153933065692969, -0.79312160302578327], [-0.59607175206659546, -0.9130060031343703, 0.31347459653531362]]], [[[0.71610023464645933, -0.27042935260044598, 0.80842333590223459], [0.88107475285737613, 0.74432055408647413, -0.65290779437807434]], [[0.53406477936564589, -0.47004814753956548, 0.33636515823307933], [-0.53098854214828761, 0.92026394162428415, 0.44453246373283961]], [[-0.91853678080551759, -0.49351903916974282, 0.58758463095309676], [0.57852298879710928, 0.52188537653197375, 0.54915131980842125]], [[-0.84123232402854287, -0.39280090900587772, 0.72255424193088436], [-0.74902186295697692, 0.91861011275650051, -0.13574092279679784]], [[0.51794190209801116, -0.55478548901366076, -0.53126779720321138], [0.32562909846408972, -0.82804391478213835, -0.79016814936767577]]], [[[0.46496673828934543, -0.54510668902700066, 0.83790239021738855], [-0.81270239841650516, -0.37679586437150725, 0.47584636482814546]], [[-0.50117034720840969, 0.43881039648287912, -0.82309338491097606], [-0.39641074227133366, -0.95075990281302225, 0.52008095769370333]], [[-0.18566388285540092, 0.36597757252998719, 0.313210912640846], [-0.48120280593241938, -0.84191049601501677, 0.45392384531095864]], [[0.74328188236871306, 0.32181141125619361, -0.12243116205362647], [0.6040775760674939, -0.50048638813019664, 0.49198707644914741]], [[-0.12019102795494696, 0.40348472907078525, -0.16927722962451419], [0.87615195641421328, 0.69064115576275009, 0.34277877580810112]]]])
      sub=res.substitute({arg0:s0})
      ref=Data(numarray.array([[[[0.3323318937403873, -0.59894792317038092, -0.19972279742484503, -0.66222526787267744, -0.44533336349330577], [0.090602980173351083, 0.7671977596202032, -0.93302648103230323, -1.1235884258230744, 0.70432221692598118], [-0.85417729858456481, -0.95505135544349429, -0.24581309631927292, -0.014594134042019896, -0.53746777040972837], [-0.4316821140510389, -0.54148136866438834, -0.77959649813266507, -0.59538502450915987, -0.72548999614656462]], [[0.81253646708825078, -0.21060647258573398, -0.53460892005072191, 1.0172594915976922, -0.4435010332581415], [0.37656985017001388, -0.71838471059410069, -1.4719754296854455, -0.36569523252350516, 0.31212654237244325], [-0.029276532334110539, 0.48906308496811907, -0.23110293682897193, -0.35573727646637071, 0.97683861414145545], [-1.197719559319411, -0.28242432037347126, -0.45066404556043205, -0.63886815466315405, 0.25851187688785643]], [[-0.47934511330105029, 0.60622379710948315, -0.13950494918601619, 1.2179811509690164, 0.6262576514171192], [-0.024509022941082037, -0.64631064991271781, 0.20081567164263489, 1.5853879795787726, -0.26851132850152559], [1.1478618552263313, 0.59910586689919365, -0.18497968127682171, -0.43688534904068843, 1.2233944784426583], [0.17025300939960195, -0.26751670238777148, 0.85184513926816119, -0.016899513894116092, 1.3221762244178423]], [[-1.2373045627421653, 0.017061016639262377, -0.34319189993523797, -0.48331333230656831, 1.4969998891059748], [-0.044056101394589764, 0.54987806856674337, 0.97623021858494285, -0.15681863600690926, -0.3370492325657295], [0.18907531751008755, 0.96250246351769109, 0.63587095171091879, 0.28844335539617083, -0.90347957843664684], [0.17528790616042128, 0.15210607006199603, 0.62106404212125499, 0.57374465223431559, -0.59395052053501285]], [[0.51749224605108302, 0.24825070273276595, 0.16048907000040458, 1.2288311781311263, -1.0210400625089928], [-0.31342460825421348, 0.13524005540201237, -1.7160261857060752, -0.44088564986293843, 0.77423031664156405], [-0.77447620710243925, -0.88702986731220934, 0.090304908005835349, -0.88546736650326807, 0.98923035856569497], [-0.39812470187721283, -0.70510316618374846, -0.79528056035685291, -1.0748830338823787, 0.071677661028380579]]], [[[-0.029323080578203875, 0.083432285190016039, 0.22332410606576841, -0.19511204040241598, 0.17327201380685608], [-0.019478556697055394, -0.49129362054154657, 1.0680737511651885, -0.99742378098079398, -0.91971988882105749], [-0.4664495896385995, 1.5470177179640308, 1.2798815366340504, 0.52792697414757694, -0.9588095724931387], [0.093785222092367559, 1.5191628269509951, 0.068026790855144292, 1.059530929617243, -1.1728345387200174]], [[-0.014845268409168777, -0.43349734708692234, -1.2640670901566726, 1.570489218013047, 0.43569815895293412], [0.83324992962703015, -0.56893262581956916, -1.3726124846842034, 1.5522313085950172, 0.55603480540253858], [1.2946272884653385, -0.45774181657372126, -1.3059438310925846, -1.1021338388278517, 1.792282823935331], [-0.53414027546752507, -1.5063235090854574, 0.6779724828341418, -1.2722302249542154, 1.915748876389141]], [[-0.36433703779368465, 0.43353300413891388, 0.22727992744779305, -1.2220377929896042, 0.7502428437678581], [-0.4921611015213857, 0.70415058419804133, 0.010324614741878624, 0.6645792225005922, 0.49305785449334733], [0.67266502154013286, 0.042305849312907914, -0.95270490536180596, 0.84801253967349977, 0.098035599163343562], [-0.65056951420775555, -0.85750926579089448, -0.14327910906629343, 0.13088799541573073, 0.44220298788948054]], [[-0.63622527000129847, 0.068044352773310821, -0.39522061388783236, 0.66211751551187448, 0.96392499721967395], [0.33437783820781414, -0.74224105157472897, 1.1081636779033499, 0.30977802061196552, -0.95165746802513518], [0.55452664462817625, 1.5733179829131838, 0.83512498258967904, -0.053394901295295505, -0.16950215685704198], [0.32992545075065061, 0.89342564335321595, 0.96453739602542865, 0.73252838962472022, -0.024062460733552588]], [[-0.30598944308005183, -0.18597644666810365, -0.64312926991361752, -0.36951759953604479, 1.2130474112851839], [0.49773702185299257, -0.60158519244471886, 0.73661610947739464, 0.58209699046818963, -0.54462027269672086], [1.1250860964993212, 1.559689220916527, -0.31828786851700253, 0.63903239586098781, -0.066043828631194818], [-0.56602797865438936, 0.27338600550199266, 0.72092344701835287, 0.65132308818325424, 0.3896290555374507]]], [[[0.51589008727317465, -0.040549338440489885, 0.25242761099244831, 0.44833771924904509, -1.1947061975850573], [-0.40946757072564854, 0.82072862913631972, -1.8164131535372188, -1.2117516772131598, 1.0719785217700579], [-1.4100379141179022, -1.4940996841875478, 0.13633701889967753, -0.70744051490736592, 0.25197757972354179], [-0.35624459638803962, -0.82278014489828222, -1.220820157047529, -1.1652619628913379, -0.63226856331915315]], [[-1.3221889145789985, 0.43453470239776859, 0.15296571553471078, -0.19546106312684253, 0.91266877995171514], [-0.72871948096347638, 1.4601405484277656, -0.031441282036108437, -0.51137829484993191, 0.48450775006787339], [-0.62853181486182685, -0.2760376225801186, 0.73699163624048369, -0.21918448187117803, -0.60034738066609172], [0.24930234809305082, -0.66329496054828285, -0.079339492825155455, -0.18359810145477218, -0.80115049995496146]], [[-0.37008787233180451, 0.1155218189133046, -0.23856067188883448, 1.7471640736372733, -0.043584295392491534], [0.23680961401558093, -0.55601434693801122, 0.1048610152289623, 0.7449593242893453, -0.34830348990827442], [0.21683892783537936, -0.17880193062313388, 0.53690169103513308, -1.1637107207783184, 0.72627344844931785], [0.92689312907809818, 0.10592315837094041, 0.76271352124041214, -0.32736761669081926, 0.64654514877035718]], [[-0.72861303646161479, 1.4024959210278116, 1.4144104562138116, 0.58545707361996269, -0.28564431570611704], [-1.3217010302618564, 0.50645798347180804, 0.77990679488254155, -0.0078286066957629769, -0.27078815988477167], [-0.77855558824358639, -0.078375718972527542, 1.4550476989886907, -0.25412699753187157, -0.077151628050134216], [1.1688443597919946, 0.58930132436291571, -0.093360577529364538, 0.47612836418875115, -0.55361374019580345]], [[0.73340630751310421, -0.51435736475178739, -0.75438346244019294, -0.028469678727533365, 0.064467598469504672], [0.49101724541671599, -0.42276374979108061, -1.2599659920524648, -0.88517143672312748, 0.32673525032613965], [-0.024947259464480176, 0.98137861921613367, -0.38201074855305217, 0.32563197663651378, 0.26778148098020399], [-1.7236042787069419, -0.22703468558622408, -0.59368183771911764, -0.31117804055106069, -0.26454110355169652]]], [[[-0.90064210080629925, 1.014710331147707, 0.31078221659507349, 0.2344524635065442, 0.85085149201813937], [-0.87075439970282942, 0.77960568601963809, -0.45602523864982047, 0.8490026607580945, 0.61484068881230136], [0.44924566650177766, 0.058691290216864506, -0.23027021474744988, -0.041385448286204232, 0.805340691834879], [-0.37874172515405469, -1.1376363557524689, 0.0056367468328332726, -0.29626693469999282, 0.59063808363729908]], [[0.004709572558817432, -0.37230239694015493, -0.53972113410375488, -0.41781907610661118, 0.8056603013189545], [0.77459682456518886, -1.0537084389749316, 1.2987705715137998, 1.1457637010966844, -0.88663541872505991], [1.4444573010149022, 1.1602584253391572, -0.61095623189729142, 0.61457393733101795, -0.036914301225129287], [0.05793545491915994, 0.62996556460913056, 1.0451936208551658, 0.83044067992214743, 0.85053865294235109]], [[0.0059157637161282861, 0.47422338015465321, 0.27953515162783715, -0.050611872857118961, 0.16660279556880192], [-0.13107847144963158, -0.41138171937520035, 0.47789574835104109, 1.5004939435910554, -0.15640260778029882], [1.0875188736574855, 0.051227046200231829, -0.78876443899263382, 0.26974284688177319, 0.75603137428893208], [0.15835859492646986, -0.18958484892640978, 0.45763858705988714, 0.23807360424318269, 1.2148095894470883]], [[0.23805547165831581, -0.91633537972187329, -1.0227908660865714, -0.21888363081879736, 0.29913574976571167], [0.85353502000311354, -0.079571411645283571, -0.68159551244889904, 0.41070291519902569, 0.41591574682875165], [0.67227635413036979, -0.47950506244496971, -1.2182212795645484, -0.12623627663924833, 0.28657568267565936], [-0.56456880190966008, -0.8768202508858417, 0.20873580207146214, -0.63393336458576655, 0.72989188317488685]], [[0.13497487112250373, -0.88111796662347563, -0.52880916407831924, 0.19805102431920979, -0.33113333346180862], [0.72957123615964492, -0.14199072726574694, 0.15725979693575062, -0.18822933684557086, -0.16310467863294081], [-0.20638415872453941, -0.81491788646919461, 0.00093332984207757097, -0.56553522610919549, -0.42381070409466215], [0.72626792588120626, 0.17220768261855041, 0.33241964090903009, -0.28227495746583248, -0.066014055782332881]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[-1.1121748984425734, -1.3052912578612184, -0.44561894113144707, -0.70724201403809972, 1.0529421911605898], [-0.10543339699074741, -0.45192680115533285, -1.0137567627794843, -0.85419651533005303, -0.05286755984695285], [-1.9360822398930839, 0.66827040768584611, -0.048263460020179269, 0.57707118546430469, -0.16084562284619588], [0.20403492653217953, -0.79213234272638844, 0.60194054810162223, 0.727494477636908, -0.75726002344860721]], [[-0.026165097992355862, -1.5232708757419735, -0.34821361339773649, 0.89282505578301818, 0.20819978964983682], [0.08702595862759005, 1.0944814922981654, -0.337236400950094, 0.11796576828741068, 1.362167910760226], [-0.17537443912943285, -1.0195246187754803, 1.2529460370938916, 0.91786425068526611, -0.64539294102843969], [-0.6480669440191531, -0.020134515838116707, -0.10374163997458402, 1.1884004320792816, 1.2513352508066846]], [[0.35110259128253085, 0.91164268803309545, 0.61315858645430088, 1.040769344680843, -0.61226544391008964], [0.32076962048655883, 0.31507285975084987, 0.65019558340512562, 0.88555219699569721, -0.088806795968579377], [1.5964553995550326, -0.65946728310704916, 0.3391006176893907, -0.80971621679845163, -0.17633179316588957], [-0.51050886559792485, 1.1771865015694356, 0.19494949187519395, 0.10469579737081061, 1.3123772327295893]], [[0.3147374598540098, 1.4709802375973351, 0.14583269545493288, -0.076790860084045537, -0.50373935771466116], [-0.78881704529241758, -0.055905344659424344, -0.64483900672602379, 1.3049671642713265, -0.33552834361114042], [1.4532221152016394, 0.45348382084688132, -0.048830858640138031, 0.2138692237263089, 0.6168218093632365], [1.3717612215890218, 0.38182439001797025, -0.62402552107937548, -0.44164090459193051, -1.2199002557310541]], [[-1.7165126983997476, -1.3745765360342244, 0.54233080742784201, 0.19756941440157583, 1.4213067882192112], [0.64276156037913534, 0.67876744077155471, -0.69423827248395265, -1.160838989196423, 0.82932282763261922], [-1.3483693308896969, -1.0357263011867153, 0.44553527220122519, -0.066268332177679523, -0.29865729447447853], [-1.1172647734633954, 0.91855671056485066, 0.87184994634726987, 1.4710253292968212, 0.90530847956166216]]], [[[1.3808423205384246, 0.97557456148037758, -0.039115415535233872, -0.10405707969055902, -1.0115381515769493], [-0.55006554967637911, 1.2242536579636456, 0.16551704658000413, 0.69558335161876061, 1.0648970755112854], [1.6332844185603119, -0.7930735124069852, 0.19187027327576947, 0.82373657481674278, 0.7262734446848218], [0.72256873769228824, 0.13269643999562519, -1.8396598824332642, -1.0454661019258098, -0.67514499695646957]], [[-1.0809147390620815, -0.67892452832135186, 0.17788797992516547, 0.62464118107499667, -0.0026534354795326731], [0.83947768317135751, -0.034452322812764447, -0.36874576218470734, 0.43022990362179897, -0.21020101473224972], [-0.42948545435863827, 0.069964002049803131, 0.90240933032781667, -0.5400627727603361, -0.92944605584960416], [-0.83144277852103143, 0.7579844980035686, 1.8783133821948366, 1.6614024322587679, 1.9716269756474141]], [[0.84157608545729823, -0.49139297893768835, -0.78278801572110246, 1.2443659556591518, 0.43747268326799782], [-1.0050057503069612, -1.516657000559444, 0.43619805398615574, 0.67225414126204863, -1.0575619285169566], [0.29555047352585972, 0.94299853271559098, -0.13569353480845153, 0.11565764300732836, -0.58742915807885554], [0.40060572227835145, -1.4200338071612195, -0.2663070288481012, -0.1548091725862476, -0.50620959405295585]], [[0.99921684510815967, 1.7281991951279776, 0.42163795849552671, 0.14163695205167057, -1.4530981152623326], [-0.1298828714130642, 1.0973729875043363, 0.14475355659953781, 1.3803933396628265, 0.54566872987369142], [2.2614118738824414, -0.63581705332847493, 0.37991951487565795, 0.067456250063123391, 0.56961094820309399], [0.59145365356536284, 1.0572214439271672, -0.92802829512033014, -0.6406538425306112, 0.15425084636119032]], [[1.8573971148992452, 0.5830048823617977, -0.71546829702706005, 0.91600054354703053, -1.3599971290661044], [-0.78104055713508136, 0.030761008113231791, 0.46405036963540536, 1.7784752167690105, 0.0060705929625241573], [1.8644624888375831, 0.28194533417429135, 0.59445709833055604, 0.6344405396599635, -0.21405395972007607], [0.79061739511595008, -0.72519521205753668, -1.0132292554667415, -0.55332344650225807, 0.082455152984282978]]], [[[-2.2770445957953509, -1.7422450421139946, 0.32829168843011747, -0.49133477809864745, 1.9983077362792998], [0.45674898820987431, 0.18384686823788918, -1.2341173435579256, -1.7051789707527707, 0.52894884855458901], [-2.4090453290458891, -0.40693660031149664, 0.070917031039872652, 0.15974849117658607, -0.15178811789555086], [-0.73042297930370448, 0.37858689051351674, 1.0609836969184552, 1.4955605450249181, -0.046175110265639988]], [[-1.4444878142474129, 0.74074576321425378, 0.70917695686724891, -0.21791021531388421, 1.1177237660014008], [-0.50194996628821587, -0.34552399961230917, -1.3305777987566452, 0.14931142267503977, -0.48182989353596539], [0.064016198969712779, 0.26195479378695358, -0.34311005002952438, -0.22609069128014869, 0.60772657437867217], [0.83611042984038753, 0.98968833761851838, 0.27768194285597292, 0.45569307981105001, -1.376820252679464]], [[-1.1152865469066673, 1.1999298794615765, 1.3038390390250008, -0.56419901294112795, -0.38658545974053837], [1.155994401850017, 0.96944757534364012, -0.15189623410946365, -0.16940299461283859, 0.25737628346004288], [0.43298415920790057, -0.83743034046848586, 0.015132400630198471, -1.0816776250934683, 0.42396313185837581], [-0.63508876017324345, 2.1950746018216094, 0.93197822250422457, 0.35079143125635348, 1.065340532908575]], [[-0.57382862260029177, 1.5034622008402569, 1.4587106389469691, -0.0091157820306379811, 0.60827429904376107], [0.19329892311659197, 0.49727136997524501, 0.30235747542445507, -0.58775655317470421, 0.085823722056943871], [0.99851937644745425, -1.190384830351896, -0.82063854928332547, -1.076735381480902, 0.95388909686902001], [-0.33414850862214884, 1.855151155638606, -0.51236393344786335, -0.64524828344323182, -0.42631897645485933]], [[0.73913174841689577, -1.779328004335845, -1.1239021075239819, 1.0424806271432854, 0.045054570235384783], [-0.72795968447902604, 0.68791043890767312, -0.53608610701776516, 0.70620607750524722, 1.2387692695100361], [-0.0089799603650025372, -0.37191975946353034, 1.3711666896760424, 1.7255677188081877, -0.71992421165717446], [0.17934670226650318, -1.1716029202047553, -0.76831554170153937, 0.91568613960541434, 0.3880367534732499]]], [[[-0.37898676182990643, 0.064150463654106649, 0.3600054659296823, 1.4676934999625022, 0.94910694524389538], [-0.54626069517579456, -0.6124451354691931, -0.13321768516280383, 0.61169256602926403, -0.53506252016218325], [0.80605471429651421, -0.16316050032428464, 0.12285126907662962, -0.43995657400341398, -0.26834330595376354], [-0.047462468941307817, 0.52675691431914751, 0.15401985973248208, 0.6031688068571599, 0.075081498519395634]], [[2.1455008237227124, 0.95119662098599111, -0.67467904931678657, 0.36415339489616499, -1.9453380286054134], [-0.22540111910670749, -0.23921300199731177, 1.2037564488604862, 1.3923339671074302, -0.42274429188136586], [1.610827956950436, 0.5770026934084993, 0.13289061180407022, 0.049066965886689295, -0.20641397921850055], [0.44214411560916661, -0.85556450297157538, -0.67048250274411947, -1.1420495330200073, 0.44098107347973486]], [[0.99893996976935817, 0.30120689001267259, -0.12239865274990204, 0.86858949143607367, -0.49516019716463766], [0.064640274998821037, -0.73791273187394302, 1.2930046145394269, 0.37415289147156644, -0.75931627185572392], [0.74900276735727755, 0.19923685437319621, -0.2260740711423096, -0.72377607790986376, -0.43699983982987772], [-0.47284813390550784, -0.35362121851385114, 0.049895955357049604, -0.53475657136773458, 0.77975145427705539]], [[-0.28333252573771267, -0.91395131379675665, -0.713042159619106, -0.13937768937295458, -0.1127447684905212], [0.12648268021760206, -0.71075990721901583, -0.36939427872411323, 0.21219299520844986, -0.52485797871548878], [-1.0521957911667854, 1.0708749355281886, 0.36306895215562995, 0.23630315437229515, -0.69210846299766027], [0.086249749671929554, -0.91259311005837385, 1.0580962214179941, 0.72340759146423994, 0.39121523297302163]], [[-0.99133620000174005, 0.33352506504891988, 0.27009459221906862, -1.6239895703516982, -0.33729688533324031], [0.85939488830015176, 0.061712685816130153, -0.46806759027397238, -0.67298376955383032, -0.24352721616494957], [-1.1821085905414108, 0.56252085359449389, -0.35377003658967487, -0.38324966531839522, 0.29319013521231185], [0.012256850799744062, 0.38866597855299545, 1.06780054568992, 0.063381165585300603, -0.04569277164931998]]]]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5, 4, 5),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_tensormult_constData_rank2_taggedData_rank1(self):
      arg0=Data(numarray.array([[0.24797067932055228, 0.87473356722829942, -0.35275635700048813], [-0.43581560707758249, -0.84881043843206738, 0.8121228712541626]]),self.functionspace)
      arg1=Data(numarray.array([0.050338573189045333, -0.72897095469388362, -0.71174913834028741]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([0.1737356572548534, 0.0094835070057857074, -0.78333250767998419]))
      res=tensormult(arg0,arg1)
      ref=Data(numarray.array([-0.37409884027632873, 0.018792065982564572]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([0.32770241259394223, -0.71992865596079347]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_tensormult_constData_rank2_taggedData_rank2(self):
      arg0=Data(numarray.array([[-0.89915578648104777, -0.21494755408748567, -0.92244265054977825], [0.76304757920885358, 0.56268050157633986, -0.0015063709082250298]]),self.functionspace)
      arg1=Data(numarray.array([[0.16619579311481392, 0.12833539400184168], [0.47601564272133023, -0.20494957078443643], [0.6859872710475261, 0.49980438568068175]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[-0.36073504769553755, 0.31336277170396354], [-0.85416898162277421, -0.048565873805535453], [0.52619075791522785, 0.67566381872145964]]))
      res=tensormult(arg0,arg1)
      ref=Data(numarray.array([[-0.88453822372681357, -0.53238098545937818], [0.39362666694705745, -0.018148006353315198]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[0.022577741473053671, -0.89458395748074515], [-0.75667487434022462, 0.21076583381023187]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_tensormult_constData_rank4_taggedData_rank2(self):
      arg0=Data(numarray.array([[[[-0.44295390544049762, 0.21159471196733648, 0.0029824702014922266], [0.87286555979875313, -0.33810074318299987, -0.60496297339774374]], [[-0.98402926203867058, 0.77333658230311353, -0.83613871373733373], [-0.14891236356955262, 0.86491611619069975, 0.065332330966370478]], [[0.55421474906222667, 0.53526644768582154, 0.74852074774207988], [-0.24214852816846055, -0.89788431701165727, 0.52330910119846075]], [[0.49553142580244725, -0.429061090570519, -0.89860276673052208], [0.68960340250565633, 0.23210886509805229, -0.065586090041763079]], [[0.13417431435032223, -0.67436742710301445, -0.33306130828697955], [0.73346217570742933, 0.98003322956202865, 0.25284427326739856]]], [[[-0.6447005257994094, -0.99671251731696398, 0.20046122945442146], [0.019831495899254481, 0.82532494794916045, 0.62057367652079454]], [[0.31500425843744173, 0.60809496267177265, -0.28679211879320765], [0.46745630702967311, -0.82138917232049069, -0.67530581221071273]], [[0.76442184563863447, -0.22058066052840664, -0.33121715610668523], [0.29524149325703108, -0.60064647522442161, -0.83723966672881756]], [[-0.96502299129954872, -0.30146559868730849, -0.53770525310775907], [0.92904030739446619, 0.32075453602080972, -0.096788823898501519]], [[-0.30960814289469218, 0.96895421352627231, 0.53492761971772507], [-0.99646074584581146, 0.59737586450557378, -0.80321055317785328]]], [[[0.13134113372340206, -0.89972572599699507, -0.59309779380155914], [-0.048155840526940885, -0.66987002065448564, 0.93669966834504348]], [[0.63304074659446741, -0.037997289801256828, 0.5125814394627537], [-0.54048312640545948, 0.59104472117308715, -0.32401365073516741]], [[0.64311729828138819, -0.98363150288345302, 0.99369342910305036], [-0.69829032213899578, -0.1158094503085183, -0.85997906031795468]], [[0.80388620970855285, 0.73454659811476564, 0.84526380945513435], [0.59469092316499572, -0.58960296803149892, -0.1672981769798576]], [[-0.29199535276439459, -0.56775171012699643, -0.44811622173939392], [-0.68805800780319615, -0.12654153214052211, -0.2178352991572019]]], [[[0.86034894485883218, -0.97831018571279693, -0.64332990231706222], [-0.11829608383434609, -0.54792818251159425, 0.52792428746935038]], [[0.18075852949097393, -0.91567345449646598, 0.058687966907538414], [-0.2978655135456143, 0.64350148027522192, -0.29333872948582274]], [[0.4341539258630025, 0.3151718031636892, 0.8949841395345457], [-0.19224270728077242, 0.03007547882917283, -0.86785869576343955]], [[0.66635711542676512, 0.78894033650609341, -0.69194640265937601], [0.62001622851027216, 0.44713989466912762, 0.62285466572529891]], [[0.41507609082304331, 0.21556773095100557, -0.047494742496004383], [-0.46272947448734425, 0.6601564245016398, 0.21246069847541027]]]]),self.functionspace)
      arg1=Data(numarray.array([[0.29018630485904073, -0.30389006982159206, -0.54294234783234918], [0.43655438400863877, 0.76917366953625232, -0.87679102877604165]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[0.69155559996299898, -0.19879768527377562, -0.55070895331669023], [0.19525857273664027, 0.81479647861857729, -0.3370151882486494]]))
      res=tensormult(arg0,arg1)
      ref=Data(numarray.array([[0.45696120708028842, 0.47639354903594022, -1.6634129419077153, 1.2991600455552594, 1.277022494970534], [0.10633119556989612, 0.22670874162560462, 0.86966058695109116, 0.84067503353407647, 0.053989821634002677], [-0.72400987043371479, 0.41970260482830379, 0.30612407876705788, -0.49608077365503489, 0.12439120957783702], [-0.039722604483642898, 0.92098020278087478, 0.24442274067306291, 0.39778923268246991, 0.20021213563542795]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[-0.25120136703455243, 0.27985680906001253, -1.0905941659944811, 1.268728443778991, 1.2668015680777529], [0.10910346503166315, -0.09550776293831198, 0.60530166974503197, 0.16405476120818574, -0.1384601257817355], [-0.27457523623113206, 0.64829817372064058, 0.15217686768029959, -0.36349439580544984, -0.0063226951436822776], [0.49628568702253262, 0.83973989991315812, 0.024160294351917522, 0.96052457424963489, 0.6462883599923287]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_tensormult_constData_rank4_taggedData_rank3(self):
      arg0=Data(numarray.array([[[[0.35377636485612718, 0.2623255172112644, -0.30962972274786837], [0.45544630480189463, -0.50093955146282232, 0.64147692638417531]], [[-0.75410263523369325, 0.5924559514328358, 0.48081468142783557], [0.75206044311797493, -0.78618267570126088, 0.048963680603284043]], [[0.86852783813245282, 0.83655369651491518, -0.093485298165862929], [0.1471204910259003, -0.64266406584979174, 0.44939213096070896]], [[-0.10948227788846876, 0.60231481802187026, 0.20036471747273477], [0.99454710060592322, 0.76897292354253532, 0.71430406639540123]], [[0.94385719558621628, -0.9824132217897561, -0.06813816163448827], [-0.7405553039427466, -0.40092697304881364, 0.98738155536790129]]], [[[-0.70881017903496479, -0.78908478623899247, 0.81953478397021873], [-0.015819381466716687, 0.098017614305795586, 0.55092973790567812]], [[-0.034961958855179054, -0.09979293261215183, 0.39415449625299903], [-0.87223144293361266, 0.8647820479952919, 0.52881681154705928]], [[0.83450918368811466, 0.34877764142948009, -0.52093103521614603], [-0.46395838920960641, 0.53419571412777067, -0.47373849890945974]], [[-0.60667734666543716, 0.46344572299934517, 0.44695088758551549], [0.76417685970312288, 0.52481156776604676, -0.50044981499995878]], [[-0.36611825847325674, 0.94373790818051817, 0.54245709879044135], [0.34882349234816545, -0.87457910437860442, -0.084538939648542089]]], [[[0.8712031605221584, -0.61453223400130752, -0.66301270138362334], [0.074937033201972092, 0.50205447701464445, -0.6043807071680467]], [[-0.66112650621460167, 0.54625083619934234, -0.27283751877991569], [-0.3686504755421729, 0.6282188464928169, 0.91457442887836149]], [[-0.70760545467287073, -0.3135429970485637, 0.77421046487459244], [0.17039074410579236, -0.3439133938078589, 0.92232073934061143]], [[-0.22643246009765661, 0.57791974085178932, 0.38213653566165795], [0.2603978722859841, 0.062942703424009094, -0.61066407569288783]], [[0.34089461073664595, 0.39871283136003544, 0.72247208110340355], [-0.79025047031714868, 0.82600176759608335, 0.38045998998878439]]], [[[-0.86245726360333785, 0.042244797284674895, 0.19862218968691492], [-0.0038931531110042439, 0.91579793357861194, 0.9959787359254888]], [[0.85252883455949058, -0.65773106461741637, -0.81251517197686618], [0.94416196392709728, 0.29862720481549543, -0.25262829151124366]], [[0.93847720142610069, -0.72538907029915056, 0.42392799644196799], [-0.021913408266252876, -0.48662607221814547, 0.52368108779573475]], [[0.78190204508121375, -0.4018106045246006, -0.36521015227063769], [-0.67484235068860676, 0.89857302809674411, 0.37435489130036292]], [[0.67666393204683417, -0.0870916768770158, 0.87422181733196558], [-0.87314859144319268, 0.14689893189930214, 0.94740933822634643]]]]),self.functionspace)
      arg1=Data(numarray.array([[[0.4980589432758189, -0.90693614914841425], [-0.49413557713901413, -0.10021356510362223], [0.53373773352459963, -0.47754836988365534]], [[0.87524674062234786, 0.78896708808509519], [0.61536433486859821, 0.11754623243953466], [0.21978298006728036, 0.98845308745505922]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[0.48199263124192671, -0.80033770196104315], [0.57907980742012044, -0.60538669430007119], [-0.064404861008126923, -0.26955033233070025]], [[-0.34396448062390794, 0.6516208161420749], [-0.49912470032551814, -0.77782307425393626], [-0.14045105476092568, 0.43762235341629618]]]))
      res=tensormult(arg0,arg1)
      ref=Data(numarray.array([[[0.11266931557559787, 0.73524045640592217], [-0.22650113089612908, 0.94427497726792109], [-0.19862659094530877, -0.34215604446166298], [1.2554528985420288, 1.5243603358173565], [0.24129881839238265, -0.38044868091845452]], [[0.6418579172172415, 0.87416390404820565], [0.12723648658348841, -0.21031838726049323], [-0.21622196570729321, -1.3145525173095596], [0.58919173106931588, 0.46026225020257], [-0.61061151062654218, 0.067265040329042153]], [[0.62540008955375592, -0.89118504960258105], [-0.4798943812099552, 1.3621564805216062], [0.35594117083507726, 1.3091290301884606], [-0.061955214609581005, -0.42581305617800702], [0.25862453595081641, -0.84446280932461948]], [[0.43462403809780659, 1.7721637484665598], [1.2705637373786638, 0.21104365596212435], [0.84858809979131522, -0.53774702918441364], [0.43762884185683182, -0.55123512592455692], [0.38105914282668479, -0.75759481735988543]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[0.34564451112021721, 0.60865713107858044], [0.075484674259782794, 1.2382649296103985], [1.1161239663151523, -0.38394530200601784], [-0.54311278062998525, 0.031519178469845754], [0.20658347763210091, 0.1190912971486775]], [[-0.97222674297549849, 0.97863363482013099], [-0.30591526854494655, -1.0274393263050119], [0.59723986008980812, -1.6637706257107392], [-0.5073351691719421, -0.044757904910427748], [0.66351111457751932, 0.44604470855443401]], [[-0.08472602344626648, -0.75268133720361585], [-0.29997303014622712, -0.056650299723777608], [-0.58898356555446818, 1.3296114954322009], [0.16569596118533786, -0.41816537987434943], [0.15476872701676936, -1.6998779363168777]], [[-0.99967169801021472, 0.33214088364322331], [-0.35596471899018717, 0.20728507279877789], [0.18185087427434216, 0.16717657689908905], [-0.10124480835938746, -1.2589384643310391], [0.31335643852102257, -0.99309796774210179]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_tensormult_constData_rank4_taggedData_rank4(self):
      arg0=Data(numarray.array([[[[-0.56090577914719209, 0.42526907682425108, 0.20206275968203125], [0.75834416614213795, -0.69271430595563221, 0.7339748418249783]], [[0.78963568973190945, -0.84498239014350363, 0.53316611220070498], [-0.89630438675717183, 0.15888443386953877, -0.12394190606862776]], [[-0.63347168485960959, -0.3106281508795985, 0.73374756330895941], [-0.14484895911139373, 0.98830841378507928, -0.60767549238833785]], [[0.23679459446907769, 0.24933281664977458, 0.39354171707601471], [0.15509610252506545, -0.8399553125326169, -0.58563664645392]], [[0.48896751345007838, -0.34844825698335291, -0.50968379064421687], [0.88772318035863029, -0.091324344742712116, -0.19729420780048401]]], [[[-0.14267091539150512, -0.2803921644428613, 0.21380311607064684], [-0.6055415322757236, 0.89472861573703599, -0.70022691929207803]], [[-0.05370593471179963, -0.54369348026020536, -0.80255912190866252], [-0.53937329785916788, 0.64663348553190803, -0.4970413681827468]], [[-0.29143694502202822, 0.27323522449266813, -0.65694607622299062], [0.35983503347848278, 0.56527555868334001, 0.8201694063112539]], [[-0.22362216634582022, 0.0083364897070714594, -0.13919453573381046], [-0.54532243466956953, 0.45961749435035126, 0.79674062433814075]], [[-0.86298526136634135, 0.79298932628093999, -0.17109681823597978], [0.63962682709615759, -0.58417265617824654, 0.31106694901722087]]], [[[0.67229496026912994, -0.56540602240390569, 0.17593091672578542], [-0.21651339678796444, -0.15186748788364013, 0.73497720244312603]], [[-0.3559227526504698, -0.62420042574218026, -0.61247843686426373], [0.4815831452826338, 0.71993091068461013, 0.028947512348988402]], [[0.012081097858054335, 0.65920109138896255, -0.56924410397677128], [0.041077492429840268, -0.38335825366103293, 0.91871851169418806]], [[-0.53335211250736081, -0.99166833947029809, -0.18799241949723355], [-0.20781343354800463, 0.11330275123667444, 0.63256877845543857]], [[0.84167983147869085, -0.77582493259755991, -0.8268720590180505], [-0.86335230444850342, -0.33041601191700498, 0.909357156583116]]], [[[-0.64969839578457456, -0.48984371305873409, 0.37263980398012508], [-0.49635852422233939, -0.081135792107532634, 0.86053091816406346]], [[0.7041026660617693, -0.9825876724291922, -0.060011768434297785], [0.52637725543920277, 0.45301641869653642, -0.92214611365661625]], [[0.61779185522588387, -0.71338336689668846, -0.69908180726841107], [0.75006944098097539, -0.78143702431783901, 0.36218030225224829]], [[0.86301075608514677, 0.44813011283108239, -0.29921392939268077], [-0.20253376929608469, -0.46279082073014166, -0.32739592150764341]], [[0.15079679044444694, 0.0389432071393645, -0.099252322607347621], [-0.66390686116442454, 0.36287482438697305, 0.86973719552050688]]]]),self.functionspace)
      arg1=Data(numarray.array([[[[0.37636189668940978, -0.50316575612590086, -0.53972031732269699, -0.54457319164102214, 0.17548800113278662], [0.253048330280079, 0.88067815849342868, 0.10532934617385847, 0.63562045089374086, -0.46077267542433731], [0.98664909206815654, -0.77391203251916085, -0.51703715861720401, 0.50374890166842956, 0.77186833663991639], [0.045304049961965021, -0.816760215285254, 0.88913152903221859, -0.87729261363757849, -0.61184763634634742]], [[0.22856668339942976, 0.74831314942156424, 0.38337448688763631, 0.34277949216719605, -0.62178114926477135], [-0.019895435751154711, -0.50621985862131469, -0.65782391050218658, -0.97894923475248508, -0.45298937514392579], [-0.83531393572339341, -0.27175439030563164, 0.37863416229070612, -0.82034825936424993, -0.27130138809377224], [-0.2561502477448514, 0.62965735634317488, -0.4082074483173519, -0.74800030683656082, -0.91646003820324085]], [[-0.98999778050050757, 0.48827987184337629, -0.83874165166264358, -0.27488695679011754, 0.28146928674951077], [-0.97880678334766058, 0.98101784293680172, 0.89776237936876102, -0.76932435213420591, -0.24090978328153567], [-0.54417234419438465, 0.77757323151422475, -0.53879092260492767, -0.76145124625882965, 0.47507771146233235], [0.044162776418131822, 0.64872682528370329, -0.66006274079088478, -0.23587099786582866, 0.55223502197391117]]], [[[-0.047463289975752998, 0.7524550160871144, 0.26141327129812408, 0.74055252293900931, 0.58973515191596948], [0.84586403179630243, 0.80888197598270439, 0.044537922224596738, -0.81936730141851544, 0.54230704981367861], [-0.48967993510210328, 0.3349534839947208, 0.18195313952419467, -0.063715656091588357, 0.24361974913372486], [0.13238313120245193, -0.73488796337116735, 0.95044676786118676, 0.87407682997058367, 0.86927394960065074]], [[-0.53928106595854142, -0.1081953574439567, -0.5238264121995635, -0.14968999256942084, -0.10470297596447686], [0.36956565117907991, -0.23695294714985593, -0.76710643243655219, 0.25431899078416143, 0.54716861103488013], [-0.74541984384006965, -0.81762021888613434, -0.91900645387009816, 0.53976751249857813, -0.080485929395363698], [0.85529481981225808, -0.83836900462352082, 0.82229971950413638, 0.26179324105717039, -0.70988481880809839]], [[-0.36542191884955444, 0.32901438488583179, -0.44662476936810225, 0.34387851881183829, -0.9759349762524947], [0.45936491797594337, 0.10446290548293913, 0.25681770477843768, 0.67441490307056395, 0.51594868028552687], [0.87884660775018886, 0.70729431855349967, -0.34741855343960992, -0.63856445955382135, -0.64004028493852894], [-0.89958998304258886, 0.99504313177229364, 0.23689516326356608, 0.17923636221120898, -0.47956999075047291]]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[[0.15014990859933941, -0.69004140592102758, -0.13755657601104443, 0.1851680465561949, -0.17243817060334421], [-0.16513755758370863, 0.0066078961705207107, -0.1240721676319847, -0.4741839618414958, 0.047082072703778177], [-0.71997889011527105, -0.24937491137331746, -0.8875749155434367, -0.70725874162902258, 0.83795482308624392], [0.75184981941784712, 0.12395574018045252, 0.099385570002090473, 0.70562596582753878, -0.43273843880600893]], [[-0.49461626214441456, -0.93340237345744614, -0.4116159797107859, -0.53523608614639007, 0.44646628727904769], [-0.078055184407630707, -0.15933738586404256, -0.27985800091026447, -0.56638274858774662, 0.18343816263134416], [-0.49350079227258448, -0.4077470901113236, 0.24453358524086988, -0.23728972244588964, 0.38915249739913294], [0.64157894485645017, -0.23343743808129336, 0.30243819437421648, 0.92641607013210048, 0.051642869838558703]], [[0.8866134301990245, -0.30276381784373041, 0.9758374079748493, 0.057820531430826883, -0.3647129602440875], [-0.92391763196171528, -0.054045501259249784, 0.41431958572421235, -0.67776265657199941, 0.89157236157204256], [-0.57435399947174748, -0.4376855555172936, 0.70899616069504545, -0.27776665293757397, -0.88362135069250747], [0.96736441597419542, -0.41213283454420524, -0.56074769908235389, -0.51624004488519204, 0.85920615300153269]]], [[[0.81589055955874179, 0.93204607350840996, 0.0072082533285664496, -0.17586915660230851, 0.36412408082757342], [0.068783373341730902, -0.062375567957300149, 0.74781454584345242, 0.694433702526148, -0.17098642604918868], [-0.63586586938165857, -0.72042987231154965, -0.74192100164033192, -0.20766143903691003, -0.97358120037382201], [0.76260935378078232, 0.65894468179970156, 0.80077123655877602, 0.74716426326233587, -0.11575972972792536]], [[-0.1816633233894478, 0.39847631194483402, -0.70492268788272483, 0.21115159981757969, -0.97979701545490561], [0.10767484229387136, 0.66218179348843242, 0.38994348678489343, 0.63752686995427998, 0.45334309737630596], [-0.21922983397843887, -0.71524993802149694, -0.87500797825088084, -0.64571413382819509, 0.88864366708930054], [-0.55528265460171866, 0.52092307374364988, -0.84343367478010278, -0.39778103089854899, 0.11921890288741777]], [[-0.23113092246119749, 0.42146158407906187, 0.6214864186519915, 0.72069065201363935, -0.04097836743199279], [0.7849245012211441, -0.5293210203343528, 0.0072824384338856518, -0.10340975866865287, 0.67144430208067085], [0.49268632705584436, 0.91764055654872134, -0.3645191759639681, -0.51937358940460432, -0.77115198527815765], [0.73952048056933473, -0.73180557257476031, -0.25207442652520839, -0.15935473728795357, 0.75012089684809458]]]]))
      res=tensormult(arg0,arg1)
      ref=Data(numarray.array([[[[-0.24457919889437246, 1.5861828258899868, 0.52958304078795804, 1.3133676177144999, -0.50254232696982504], [0.37443734902069953, 0.34319482046894412, 0.5962307454721727, -1.230821067599388, 0.4280460013483039], [-0.22853896202388335, 1.8151650644793649, 0.86175649216343675, -1.676198679384364, -0.68159808484282913], [-1.2777798281126336, 1.6107716888087471, -0.48066904458450432, 0.73937447437076675, 0.86399678324731655]], [[-0.42163002698637442, -1.5016927513832696, -1.4594939403959033, -1.5963823161582984, 0.38977696019423808], [-1.0616072981518903, 0.87060731058511465, 0.92404662644805757, 1.6101473504429353, -0.57260271258298057], [1.4063253894938936, -0.48469599919498052, -1.2815167538668746, 0.90699211773939847, 0.94021741985949159], [0.40449658830805946, -0.4289612562609425, -0.055505211854684725, -0.9505118164190729, -0.24679602022107733]], [[-1.3398653724198002, 0.028711609299856999, -0.67677857648867401, -0.42737758677486726, 0.69265386442921872], [-0.90873844671290871, -0.095646937570427387, -0.1243044134961494, -0.70284354531517534, 0.40452009056823579], [-1.9646559907032985, -0.14117564155888207, -0.90892234930577231, 0.30772549381176473, 0.21800803298609181], [1.4560512683514144, -0.52897581289609974, -0.38969922915512323, 0.63822601145024638, 0.54139190607835597]], [[0.41611930333252822, 0.27448981788500737, 0.37979994665629835, -0.11246344480843272, 0.74824880232120006], [-0.77849075799056155, 0.73170107360629122, 0.71507220162907048, -1.1319932542060038, -0.99450757216623475], [-0.15330539508928509, 0.37948898482417431, 0.76354322555124865, -0.47421344712614971, 0.78231291245253376], [-0.20680347289554357, 0.22637142457639192, -0.83301911492186576, -0.67636034560720704, 0.85588803075624442]], [[0.68818175508705026, -0.14270845953676542, 0.3980183556372856, 0.35761665157524142, 0.88463596952543644], [1.2560596243345126, 0.82609847052330154, -0.11793051646545588, 0.16036804201063767, 0.38498333836143706], [0.5108422654818543, -0.44757244012069219, 0.20385956228780178, 0.94039441645140132, 0.57970709248695074], [0.30579249304682354, -1.7215475937323066, 1.6353184874176934, 0.66855931066717345, 0.66982082869892534]]], [[[-0.52733975759277751, -0.8164712414488704, -0.52405877634521492, -0.90034984106599336, 0.44207060464988113], [-0.74300057268995978, -0.54893035750558172, -0.53178667827005821, 0.27078513936181497, -0.058856914492343759], [-1.0087153690477684, -1.0767828546178466, -0.83676479760339983, 0.96401619750567302, 0.29615921292823272], [1.3898114798350789, -0.92318678702458046, -0.15919878272982207, -0.13609443354567408, -0.3633972788691]], [[0.50856171277771389, -1.411054103113464, 0.23595568802497269, -0.60365779577536149, 0.20202607806253658], [0.33719081962008346, -1.2008274601283799, -1.0162179220854606, 1.3867239153420019, 0.26924170750150966], [0.18318003717046638, -1.4956538436443965, -0.26540101009844252, 1.7308645622934797, -0.14054745120830531], [1.0301826646632688, -1.4594334867806946, 0.60526169213874625, 0.25184181771016906, -0.60160038473051891]], [[-0.018487373594835987, 0.50978007377023515, 0.24470530494446058, 0.89685337479713567, -1.0533570175226088], [1.4538745037237357, -0.79665742889649627, -1.0071851872117659, 0.45473563807188477, 1.096385704634494], [-0.03505981564718752, -0.12108156334748854, -0.13086433849465628, -0.11226745004495936, -1.0939557527496011], [-0.31890794380649201, 0.061656120927247704, 1.0640873405916662, 0.81576294075011313, -0.91669674055452643]], [[-0.45758184064037921, -0.14712852279619787, -0.49852072335190856, -0.03575908146270329, -1.2308916364340374], [0.15407637879989972, -0.80449094530734777, -0.32624750253857515, 1.0578285035457045, 0.49962930695093316], [0.47278387190082294, 0.067644373863184448, -0.60464284621727749, -0.23943647065120338, -0.92078694444083542], [-0.4142365150020072, 0.90580870973437166, -0.061968017629328326, 0.0092542715799891762, -1.1300884253950521]], [[0.19684541855701138, 1.590926523992598, 1.2475703866105798, 1.4569027031468511, -0.5578739484439259], [0.401357300912563, -0.64098924537150515, -0.2096515476150855, -1.656065747558038, 0.26737096424959833], [-1.025130903165, 1.2312285358519521, 1.3838038303452205, -1.5096813682230978, -0.95878636041291165], [-0.94457400623752952, 1.4223917180927419, -0.77682042480269708, 0.66619615808797361, 0.52831467351350891]]], [[[-0.22677907075497722, -0.58014020003882405, -1.0324803782446266, -0.49314814314183841, -0.31001688681658995], [0.10752658216894331, 0.98851613137202798, 0.89630477588733592, 1.4799410703465345, 0.082660948029533499], [1.9050335289678506, 0.34164679283478128, -0.81164629987505243, 0.13102671525172382, 0.24496072714530465], [-0.63667615125654986, 0.22678336842482116, 0.55588364607311402, -0.30564511076885575, -0.22888888543731462]], [[-0.091955575161780725, -0.29306951907261053, 0.20235212222045565, 0.40705080629419765, 0.3336387276246337], [1.208564198217039, -0.37634490170577789, -0.70011593076382617, 0.66404457944195738, 1.264332649286859], [-0.24350568700084077, -0.43801243574629939, -0.30637298541064228, 1.1385645842706715, -0.35550263267176646], [0.77018137435441802, -1.4283334321973089, 1.3991909729338983, 1.5382185742327203, 0.34527049835874174]], [[0.58783696487376647, 0.58391776644280291, 0.52487814304169111, 0.77959184853945995, -1.4002293940542283], [0.86221898351428905, -0.66146303094270742, -0.41156241884936273, 0.28873255811498455, 0.11948535767014246], [0.84410751786278393, 0.34588541701726622, 0.59065626409799821, -0.89743959597367184, -0.98710696466394254], [-1.3423629320779034, 1.2412924039079829, 0.058834270294753105, -0.26920105312076392, -1.0586218084675383]], [[-0.52367669403144657, -0.52601171843061412, -0.33083934491401851, 0.048872120546469694, -0.28167432637177003], [0.2254448689430163, -0.28099725660384933, 0.493677007840015, 1.4021149831513231, 1.0159285597049974], [0.97765815625966268, 0.82124581852998579, -0.36013243730776934, 0.35844709069876046, -0.69656385431427092], [-0.27810546062668284, 0.37641709029795967, 0.10017871316205952, 1.2154123644973578, 0.56689892531650554]], [[0.84491559203935662, -1.7225021586453075, -0.51692370114957897, -0.77418616941554452, -0.96466817692805484], [0.60310673735335241, -0.20225219148437312, 0.30522649833733984, 3.1672705489561634, -0.016994734455461957], [3.3967113308400791, -0.45935079646321586, -0.45278517521306805, 0.98604275196663493, -0.29844113846001052], [-1.0146026858796753, 0.10395879052963719, 0.73399994001974989, -0.64119412928198538, -1.2126277377699064]]], [[[-0.97253930658055265, 0.060720114071417974, -0.6212747400098213, 0.023949884350531858, -0.82859915808800388], [-0.57394091771987754, -0.25101681375187446, 0.84947318266268856, 0.74631011252291912, 0.56190079710034857], [0.62518038955731359, 1.434411198625833, -0.36504237722230565, -0.7708625754100733, -0.8567203790719391], [-0.79673308418426114, 1.7530105592690375, -0.95829980800203352, 0.54762607295385279, 0.265664093967517]], [[0.16750775580975613, -1.0752045681967677, -0.39422985897492824, -0.69885814657636636, 1.8805702410541394], [0.44552226136392403, 1.2807240529997339, 0.10576452262688307, 0.51761930418622426, 0.19268231937985852], [0.14225938454928333, -1.1708667511357884, -0.70393305540431261, 2.0062858752606187, 1.4635268082915085], [1.5676379639905569, -2.9169062354486104, 1.7211078999192351, 0.54483553246320904, 1.0147683442864182]], [[1.0150118888680346, -0.41792953444253955, 0.42307799640835764, 0.40818754509463806, 0.52591000287537804], [1.3668276890013484, 1.0491087580740102, 0.63260911787910423, 1.059811041469952, 0.37296570976492949], [2.1193694662572407, 0.31848636504107436, 0.51592127455056258, 0.72789053089882216, 0.35209411460111906], [-0.71502786396316564, -0.94298741637479466, 1.4580688662542154, 0.67247913723841468, 0.92279070576026057]], [[1.1022779966403722, -0.45503964273686814, 0.29268056625496641, -0.42740886675014322, 0.03712106853081254], [0.0095984884112294, 0.15128116164884492, -0.21060504067421748, 0.16749558211572488, -1.0605459870369951], [0.79640278536052334, -0.94335401061807256, 0.38688200307237725, 0.26712330346668067, 0.59985598847513388], [-0.21701742958070547, -0.40575648539630715, 0.13129115081096721, -1.3786053734950094, -0.79448073504471861]], [[-0.31808648826459651, -0.3478623492984545, -0.73529485865071098, -0.28838048002587169, -1.3040178421103334], [0.10659082251926177, -0.51642996288922161, -0.18340818055656849, 1.3569165886538859, 0.2240390565171213], [0.98923743949167586, -0.10837391984027855, -0.76619314661905435, -0.19762142954677198, -0.6889366275269424], [-0.56745884549969539, 0.88606859227467016, 0.057114304618589462, -0.46743059415584398, -1.4345812886032281]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[0.4595089505977703, 0.66904741426267034, 1.0492208935782585, -0.070466083034375626, 1.1376686562541343], [0.42643121063663936, -0.97690151501044231, 0.3366228940329703, -0.10274753426888943, 0.28087496090950648], [0.10919197858497109, 0.50068880511782199, 0.52105136894340709, 0.14827666699033887, -2.4029581093317822], [1.5523571212656007, -0.65034880232692693, 0.96606792454469559, 0.6190674394644643, 0.8185006845073729]], [[0.27771503877818654, -0.74191821387019008, 0.56398186694281793, 0.73116553932927897, -1.1848336435167683], [-0.69887284642972425, 0.33776281675472403, -0.24981167350719222, -0.76552328721152907, 0.49959679611497537], [0.016285040166050577, 0.33261292839211815, 0.041666425221253411, -0.35816078707531951, 0.97112986074357888], [-0.29608299214174655, -0.34175192406114407, -1.2965488950260873, -1.2139966074904012, 0.10248314070412116]], [[0.55180877115842231, 0.50761024429400714, -0.14437117005459027, -0.11240232452835391, -1.2932406233320108], [-0.92959283692276617, 0.99078329327531744, 0.74217287581727009, 0.57133458798737191, 0.63217258706140877], [-0.23600495498909224, -1.1966827315842261, 0.47071687461745626, 0.025452083240755763, 0.18782901163355242], [-1.0744089329359816, 0.55567384214256266, -1.3647350454860794, -1.5180751923348044, 0.56728887573585196]], [[0.67563925038810879, -0.95224504093712437, 0.47808701046212404, -0.69354772255292252, 0.83041487343996723], [-0.96162010658282593, -0.3153200200266727, -0.15192220572713719, -0.88745946089178041, -0.39277280850408974], [-0.72257753371360722, -0.38132470482093028, 0.96319120375079847, 0.47837581709092425, -0.49809495902281786], [0.87029897180153815, -0.097823217996175493, 0.85853123577914081, 0.73823687814091765, -0.30885111636690277]], [[0.58035014650607797, 0.85000479719566768, -0.47304246989503462, -0.070021446828387068, 0.36680672300042227], [0.31372333581704154, 0.074884412309721274, 0.4524809869502025, 0.88958448646566435, -0.8209790317979524], [-0.52900388262996856, -0.51204396665201324, -1.3873598705829684, -0.14447724955271396, -0.068780923787034237], [0.23281682728998088, 1.0337771347691778, 1.0666383070541221, 1.0163811867009542, -0.9291580471016645]]], [[[-0.1879256861506598, -0.20754749199089795, -0.7265846211197845, -0.073207418065810492, -1.2470110295636028], [-0.64702677215809878, 1.0330679271616667, 0.075715769588589263, 0.30386915904315753, 0.17146413250921688], [-0.03780511418804311, -0.78993189771062444, 0.13126685550287481, 0.019740136362445149, 1.5070320580496492], [-1.5567863498446639, 0.53915023532446105, -1.2819055223450007, -1.1675664269986286, -0.11752907063486262]], [[-0.89336154011111946, 0.33299348708017018, -1.3206056981393632, 0.1078391067259093, -0.75037656500412875], [0.43519178082437782, 0.85457760577844233, -0.32851593560176723, 0.9664358568507786, -0.7661655062567001], [0.72425557721067235, 0.056321640234301917, -0.63875058318702982, 0.34253784157857392, 1.9356204450931562], [-2.3035359749441975, 0.79618899982178959, -0.57175375019646424, -0.70828261283235971, -0.92771347995660713]], [[-0.7600333714409544, 1.0512663014996309, -0.59960910966873937, 0.40896824568860635, -0.044597989721981791], [1.3631515087753421, -0.092220029795565095, 0.18299475134163848, 0.95413893741589628, 0.19612028842081419], [0.50366042384765464, 0.33787349788578686, -1.2008422032635451, -0.54194147792210456, -0.037864588901243335], [-0.11226318176575056, 0.10221235668464357, 0.026682511940174819, 0.29992800189944091, 0.2167378451947608]], [[-0.87368241934753366, 0.19934693950117405, 0.058735887634075279, 0.71323991407755871, -0.58849699948940559], [0.80224335973313909, -0.078649574984111792, -0.25503175475708995, 0.027594728645754754, 0.70347273941223032], [0.875369382014765, 0.90853671376398548, -0.18617845769457697, -0.40250093968177703, 0.26379788858885134], [-0.37931321235192317, -0.6752698504605058, -0.96682385649149172, -0.79544970444014573, 0.69317688859315241]], [[-0.11740826636526261, 0.40160484589547496, 0.23507057893601341, -0.60578328660121283, 1.3577829669414936], [0.46395277936228718, -0.71418820860801624, 0.067052530250451464, 0.11562663272597713, -0.21304584015232397], [0.20287009024888708, 0.20922521969966745, 0.76178289692061618, 0.5525333988649096, -1.6450939644564775], [0.73662369283881246, -0.33204160324579596, 1.1764977576322408, 0.87472939237703873, 0.35704206726823773]]], [[[0.21764831110569746, 0.058023045865848499, 0.87420403448748385, 0.97298783482106133, -0.39268492219516105], [0.31622283208349228, -0.39107312385043869, -0.068067248357682839, -0.44097229535037452, 0.54646017050629325], [0.22702409681346541, 0.92493756241145553, -0.5846307442885057, -0.62889247218541589, -0.30307451283562831], [0.77564648788335422, -0.616827197033886, -0.43339331932676906, -0.35871819470590693, 0.38931368027347713]], [[-0.032290260399735121, 1.7616012636140475, -0.77782275887435992, 0.3209563868059539, -0.52514731376322288], [0.80674289265467169, 0.56157186027607253, 0.60616383762828463, 1.7278336376838515, -0.41386043618065216], [0.46628913702049973, -0.22396693474578255, -1.2687685846444596, -0.009938477431296942, 0.14862149810812941], [-1.2716622109630271, 1.0251968787208174, -0.10958273153613947, -0.44439781286052965, -0.35266371404494951]], [[-0.93812445612994178, -0.17855831111646303, 0.013015876702454521, 0.19043569524348153, 0.85276151591408866], [1.1551576373580319, -0.81690257297052704, -0.53390980574326685, -0.3041564446572394, 0.050020928195122605], [0.50349707149342349, 1.0650067532819567, -0.28304319602911943, -0.24499757616667439, -0.31948335368496539], [0.80495564570351774, -0.76273619755671063, 0.64441608920421456, 0.94986795128345214, 0.17840832814429997]], [[-0.092606265695029194, 1.4686381330544334, 0.60986784299588204, 0.93750552623806316, -0.49481815615736585], [0.83359531115169228, -0.082196801257675811, 0.15919393502964002, 0.80449221075405986, 0.13700301196362602], [1.4003256855292068, 1.2687820676356343, -0.077935272250931859, 0.30620280588475512, -0.85151871523235312], [-0.97268934716307076, -0.29797458708583469, -0.66893835710375038, -1.499138658032142, 0.53013243398337828]], [[-1.077559176970079, -0.15937813086301433, 0.18851826083859458, 1.2607259030047884, -0.21783716486392929], [1.3043408179533682, -0.47241687051182579, -0.99774616111317771, -0.30350064330865889, -0.23149175547914713], [1.3212369306958109, 2.161134311582964, -0.92484054117693004, -0.26116947089220027, 0.97968616964611577], [-0.4672607401166734, -0.78027661206646726, -0.32921104245870525, -0.35650420973262764, -0.37206920227647389]]], [[[-0.11401017487169558, 0.66043924826933553, 1.2430585081846972, 0.85376367171219081, -0.37907510370864173], [0.43381026675443946, -0.42464533092295226, -0.024467594835844712, -0.15244738550818204, 0.83767697280366327], [1.2528568767638513, 1.4039337180382336, 0.84664620744818053, 0.18076085883260928, -1.3167699014237821], [-0.13936466500015132, -1.1188427200880737, -0.96762981379387214, -1.5803314852150461, 1.2693145793957752]], [[1.0988238000583406, 0.73193406817497708, -0.63961546959120386, -0.0086766833269726895, -0.75262883438728678], [-0.62296240520762347, 0.91971642064674253, 0.72632932447125653, 1.0130234034423309, -0.70439955139274779], [-0.8759120891608918, -1.2981085288041525, -1.3585510438984802, -0.17104456719619737, 0.86187143584129378], [-0.69115922716200295, 1.5990549993854817, 0.078324980160051988, -0.0224341203422945, -1.1056446546328706]], [[0.49601904128422364, 0.99158866222059738, 0.30781799950585853, 0.41990675097711982, 0.85385812727216792], [0.85129203124096509, -0.60041585285324073, 0.092186099690347315, 0.57014600671265636, -0.96438370460778766], [0.18159062924082103, 0.79369789775819433, -1.2231793689500869, 0.08723901296176928, -0.84617827201144724], [0.60429623089010809, 0.35336392804310834, 1.4060816759894816, 0.94948494229408897, -0.81314972488935022]], [[-0.36286049400306708, -1.4343745023446757, -0.47385474956635543, -0.39540485935018904, 0.55349598235548692], [-0.22178830682576162, -0.17005098200239394, -0.69076280962424219, -0.86207492224426474, -0.53893499472590312], [-0.60170900297537422, -0.090484657633487037, -0.19399355406204033, -0.12266709692787015, 1.2003457474820065], [0.50732599733744554, -0.0092661307564795015, 0.69976428538065838, 1.2635194549584807, -0.8847163331564073]], [[-0.89323780877330106, -0.21798964438582547, 0.14631868364340306, 0.82153392126187397, -0.60534624104362333], [0.73984380837001973, -0.17851402795759275, -0.41937515994236324, -0.34592882463126307, 0.78775881066465558], [0.70032730937464338, 1.0068156560253014, -0.33667785097939806, -0.63648826343515441, 0.52735130400614483], [-0.022262693019500901, -0.8344200865058744, -0.97451641982702852, -0.58526717753501611, 0.62400062740735873]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5, 4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_tensormult_taggedData_rank2_array_rank1(self):
      arg0=Data(numarray.array([[-0.44473302087739897, -0.97773491339405494, 0.11094188646576653], [0.56799937574376003, 0.93771506389299031, 0.95380401889387945]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[-0.69347151246961025, -0.6296429136537649, -0.49857397123253477], [0.71140203792288959, 0.46964578666917656, -0.74893104877026606]]))
      arg1=numarray.array([-0.055726069115686894, -0.42156279705449462, 0.59709762725635551])
      res=tensormult(arg0,arg1)
      ref=Data(numarray.array([0.50320302509972714, 0.14255595890388459]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([0.0063811340243392347, -0.68481378278678773]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_tensormult_taggedData_rank2_array_rank2(self):
      arg0=Data(numarray.array([[0.31807894348843901, 0.96593800057720669, 0.98294831138561856], [0.7258778541269808, -0.28929295617221396, 0.98684510410874826]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[-0.64354632829274805, -0.84572288541949603, 0.27353933737925207], [0.81782102839696957, -0.094066028897508147, 0.65368101182427241]]))
      arg1=numarray.array([[-0.25660292043423216, 0.045292141571782407], [-0.30350079674438257, -0.34555987226230278], [0.042789353190428869, 0.4555596129396986]])
      res=tensormult(arg0,arg1)
      ref=Data(numarray.array([[-0.33272321614481176, 0.12840861672128037], [-0.056235270852757376, 0.58241137317341296]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[0.43351800814301822, 0.38771377550610497], [-0.15333556187338995, 0.3673369794612773]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_tensormult_taggedData_rank2_Symbol_rank1(self):
      arg0=Data(numarray.array([[-0.55022498037737844, -0.27082990815048413, 0.030753668237995191], [-0.04365795175671594, 0.96562988685117812, -0.89460798199413705]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[0.96163278157032539, 0.18092092301266138, -0.32220329618292864], [-0.07735898245990569, 0.75496348267220204, 0.54093113065084397]]))
      arg1=Symbol(shape=(3,))
      res=tensormult(arg0,arg1)
      s1=numarray.array([-0.64195185924264275, 0.08841632319200543, -0.89246164500626857])
      sub=res.substitute({arg1:s1})
      ref=Data(numarray.array([0.30182569512025215, 0.91180705870686862]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([-0.31377150549860267, -0.36634844879439016]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_tensormult_taggedData_rank2_Symbol_rank2(self):
      arg0=Data(numarray.array([[0.02805103336515602, -0.34887080722446595, 0.75031931952160069], [0.1717761576520247, 0.31703694108227687, 0.16105324545200594]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[0.029055752904800558, -0.36798034783313294, 0.83351603493153337], [-0.68873796606587434, -0.90212941946756842, 0.45265912942304753]]))
      arg1=Symbol(shape=(3, 2))
      res=tensormult(arg0,arg1)
      s1=numarray.array([[-0.90385296827827633, 0.64669539253871799], [-0.67732651686417644, -0.12120653882050347], [-0.30183673379216192, 0.28380922056784619]])
      sub=res.substitute({arg1:s1})
      ref=Data(numarray.array([[-0.015528493782985615, 0.27337343832281108], [-0.41860970256761221, 0.11836829545640198]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[-0.028605038783407675, 0.29995138204981714], [1.0969248792969968, -0.20759085011499981]]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2, 2),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_tensormult_taggedData_rank2_constData_rank1(self):
      arg0=Data(numarray.array([[0.66076820348694798, -0.40486985717532686, -0.024890793436392222], [-0.010421471302704433, -0.41244462633683909, 0.99765679063936075]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[-0.42770891328740412, 0.21397398884302254, 0.5439729316134323], [-0.11138772436016731, 0.2496254997602454, -0.026147867821144644]]))
      arg1=Data(numarray.array([-0.63654275589004206, 0.52957342315457856, -0.46729454002958182]),self.functionspace)
      res=tensormult(arg0,arg1)
      ref=Data(numarray.array([-0.62338419757870689, -0.6779855716566674]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([0.1313743672534963, 0.21531683531748294]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_tensormult_taggedData_rank2_constData_rank2(self):
      arg0=Data(numarray.array([[-0.25650703795842955, -0.70404245057520476, 0.41833572192596802], [0.49081139425879394, -0.29643978213446709, 0.73530759400581913]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[0.39539159662080436, -0.55358242445958861, 0.14865413834224328], [-0.40517417660741217, -0.64758504995760902, -0.87101445863229121]]))
      arg1=Data(numarray.array([[0.50754282042664833, 0.40218104236727847], [-0.70540618820261147, -0.90838480752011108], [0.91001043427384665, 0.64401137674787479]]),self.functionspace)
      res=tensormult(arg0,arg1)
      ref=Data(numarray.array([[0.74713746787048729, 0.80579216227143924], [1.1273558390328238, 0.94022288853311553]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[0.72645545100534648, 0.75761982485451451], [-0.54146498849054692, -0.13564017240071533]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_tensormult_taggedData_rank2_taggedData_rank1(self):
      arg0=Data(numarray.array([[-0.67481097274740343, 0.82608707124971348, -0.23752666450640403], [0.82625096522464148, 0.36127580184979324, -0.89099276736584021]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[-0.52970128485335843, 0.86122250465057681, 0.14455927059245322], [-0.5181778205632821, 0.95760168567481618, 0.30084925196295798]]))
      arg1=Data(numarray.array([-0.44674074950913645, 0.16224242795518129, 0.64718017909976422]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([-0.54142256955714596, 0.39995274009553095, -0.93042757621021321]))
      res=tensormult(arg0,arg1)
      ref=Data(numarray.array([0.28176938260787865, -0.88713857099395732]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([0.49673859955390881, 0.38363014489408526]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_tensormult_taggedData_rank2_taggedData_rank2(self):
      arg0=Data(numarray.array([[-0.52501145319780496, -0.1776845110912475, -0.90293324705914979], [-0.84196930099691536, -0.32921209388647577, 0.14688350794760963]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[-0.34849040124286734, 0.89869366850430543, -0.32165043137622784], [-0.80741234450800814, -0.93275481412714378, 0.92842756642096846]]))
      arg1=Data(numarray.array([[-0.8353467227709197, 0.40064186642308575], [0.68285406438150753, -0.95710363316803049], [-0.97718179800563076, 0.70547261022427565]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[0.66161391315626239, 0.90904109128077293], [0.20153367317648607, -0.62941461113633035], [-0.5505980722623165, 0.1602802980686544]]))
      res=tensormult(arg0,arg1)
      ref=Data(numarray.array([[1.1995639401100076, -0.6772737520406461], [0.33500058951394934, 0.081384230669953969]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[0.1276510454685281, -0.93399724755390323], [-1.2333671729512883, 0.0019271569353574514]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_tensormult_taggedData_rank2_expandedData_rank1(self):
      arg0=Data(numarray.array([[-0.87446555651952651, -0.32768415218333424, -0.074785183485899465], [-0.38765507771421226, 0.64793645644162412, 0.4454197619849829]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[-0.48096518743899463, 0.79060584894468144, 0.47860968820113192], [-0.34163024955800569, 0.86619624178771715, 0.21932761072004503]]))
      arg1=Data(numarray.array([-0.86113461797630197, -0.29070909392031674, 0.90568675374935381]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([0.16884761412674631, -0.23171127136781711, -0.47077179372087907]))
      arg1.expand()
      res=tensormult(arg0,arg1)
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([0.78056137586024699, 0.54887296537190544])+(1.-msk_ref)*numarray.array([-0.48971805219353959, -0.36164413770124154])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_tensormult_taggedData_rank2_expandedData_rank2(self):
      arg0=Data(numarray.array([[-0.65811855504867944, 0.83674459344475483, 0.24072451871103984], [0.72507593124720371, 0.71182390849292476, 0.86962512016190052]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[-0.64290138927485008, 0.32061256616084921, -0.72908538683465229], [0.6653716258029847, 0.36112574757590887, -0.28257317575359941]]))
      arg1=Data(numarray.array([[-0.65446965907351351, 0.548688279660835], [-0.95405404392766746, 0.54420062827065374], [0.10408799188972706, 0.3205703604443102]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[0.6458113815681692, -0.1218414626240274], [-0.92800683990269861, 0.24381929948510117], [0.61423538261213828, 0.37250576243984623]]))
      arg1.expand()
      res=tensormult(arg0,arg1)
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[-0.34252440500666465, 0.17142414140315498], [-1.0631411435333258, 1.0639917217811552]])+(1.-msk_ref)*numarray.array([[-1.1605537303150124, -0.11508493102686654], [-0.078989037624273506, -0.098280561555514345]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_tensormult_taggedData_rank4_array_rank2(self):
      arg0=Data(numarray.array([[[[0.75282017947703972, -0.78201127073873189, -0.46620590489929681], [0.13179608926793973, 0.94633372189175247, -0.89262116704044248]], [[-0.28179578942687122, 0.59598909218004348, -0.66934160061328996], [0.61885778614109399, -0.61534404450735813, -0.027187381938714505]], [[0.94940243294721305, -0.79018064651191633, 0.84607628912785127], [-0.66794428216427448, -0.48180635992819365, 0.7686016339424111]], [[-0.94736174072692836, 0.22204744429959966, 0.073733078369296878], [-0.00025638613432810153, 0.089792172491896416, -0.052237059954543197]], [[-0.84619672631317622, 0.86817186588085637, -0.79335969334590795], [0.57576474070494599, 0.8632652404251655, -0.68623850026778976]]], [[[0.09249686700115678, -0.70529808097646285, 0.29150734069927764], [-0.25095787079873055, -0.041603633935389128, 0.3240014957795363]], [[-0.47457503011736879, 0.94602332932687694, -0.14573476285892095], [0.89085389076140942, 0.74581782519517836, -0.73088465478863429]], [[0.092964275010075204, -0.24347052379962464, 0.23672754552139508], [0.36621086686497129, 0.42722606048610778, 0.78465818815672361]], [[0.32710781268588862, -0.11330814523500909, -0.30488194991989848], [0.54527439024389879, 0.95660368755158665, -0.43508009668129821]], [[0.87251340567456381, 0.85625540893469965, 0.43712104818449982], [-0.070149469918314722, 0.46250142486395251, -0.79995834970590285]]], [[[0.69892771061341685, 0.55344519041902229, 0.94479958444100443], [-0.80336878996438954, 0.14411795615959488, 0.84834132248938698]], [[0.43574507589930445, 0.76774602539408887, -0.3373414769732388], [0.2595069361675415, 0.083090203348345604, -0.46505528708578736]], [[0.4914637159482782, -0.53782854530635582, -0.61482107805345776], [0.31595337324039674, -0.48774877350166457, -0.38407592711354299]], [[-0.55733293300275877, -0.85412614136479759, -0.22404130045506565], [-0.32708735968474789, -0.038147283666597476, 0.080062462586112382]], [[-0.25642732219242181, 0.57304319438835472, -0.13499984049736935], [-0.30277727573573454, -0.054860221782921492, -0.085028327571522899]]], [[[-0.48115950555860665, 0.59158299590813912, 0.75200618230818783], [0.029881374154237195, -0.70957503060230875, 0.5958504866710137]], [[-0.37919797122044274, 0.044807112537475824, -0.37773007192956043], [0.81229632212683778, -0.76291129200375662, 0.31249849636958671]], [[-0.14313154769953629, 0.10555236193626505, 0.016150882413077827], [0.91548313972676754, 0.27741442491395829, 0.80857463826823794]], [[-0.041455462916053065, -0.55407948001574892, -0.16193012305962551], [0.72506990208635114, 0.67851860999671465, 0.81594978606896418]], [[0.88988626278749638, 0.38432820006950408, 0.42793958489230599], [0.52888365681685556, 0.43946500392231358, -0.84487499095686669]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[0.43077219682099543, -0.57999990495501663, 0.9271506788758217], [0.71794784260731981, 0.18811130863392589, 0.82169998263515609]], [[-0.3314530011743535, -0.87685676585251437, 0.97781084776499294], [0.6222237288410053, -0.41291912207456605, -0.52677117106733706]], [[0.71023503945039002, -0.59393570213705793, 0.01505323985777407], [-0.11418371165878249, -0.37714489399761142, 0.12737682115054949]], [[-0.14024258051511929, -0.92335029596893015, 0.90241739158391643], [0.5467108308749542, -0.53251070876929352, 0.41431075992771116]], [[0.85794164203647916, -0.46192137561255442, -0.96800598979393793], [0.52208234117043073, -0.11469853749986458, 0.72785113491992548]]], [[[-0.23143920641969817, -0.33778686500179567, 0.56656426779577918], [0.063794966911213002, -0.31891565328324201, -0.066211834761320087]], [[-0.83077928259999845, 0.084732406177091102, 0.87942371602165315], [-0.74838253679092115, 0.15083404590354688, 0.70131443447198372]], [[-0.99934398798705071, -0.48352862690728227, -0.13162346977463968], [-0.93603218215249839, -0.28305329931582901, -0.96068774709463378]], [[-0.60102518490395651, 0.69924486967355759, 0.74474750459327432], [0.50640983700457487, 0.63838960529352695, -0.54392051468562563]], [[0.5739514562005068, 0.65070307183120568, -0.26401796004964062], [-0.97514451245522982, 0.92340666953291262, -0.67578994085636834]]], [[[-0.78055170408215102, -0.35428418254509286, 0.17348465489836928], [0.019858836010427483, 0.26116031691749209, 0.33862876159678112]], [[-0.41063046296471839, 0.92834839676668857, 0.62623416784197672], [0.10404717142980036, 0.18753631079437194, -0.7721303365401806]], [[0.86157637098203321, 0.64483839754100392, 0.4293248993182821], [0.37404476338081194, 0.10372616721174555, -0.34663748162491426]], [[0.81753291546224371, -0.54999787559883795, -0.78571136634157646], [0.82027725255842054, 0.93474234489699071, -0.50289778725968426]], [[-0.27065758622472313, -0.13056960390599959, -0.12996732444423187], [-0.61991855484472014, -0.73260384686049274, 0.14676360173070702]]], [[[-0.40758103577283755, -0.73473796616663933, 0.76177662982593297], [0.27573598281128886, 0.095360056520732206, -0.76180872726524784]], [[-0.40341397841773841, 0.39600276896950715, 0.13117380150756097], [0.49219678113058096, 0.35518804130118053, -0.87859359692569794]], [[0.017304035948008334, -0.082803115532706917, -0.9142698500789963], [-0.16686932772637841, 0.23741011636811171, -0.57289207462701608]], [[0.9909865580432069, 0.066601186890408615, -0.71317790770504064], [0.93904320670975028, -0.60212543132789254, 0.86430029259491703]], [[-0.93819823081389853, -0.43799481745191238, -0.8606654641395679], [0.69349897418830864, 0.66026471510277918, 0.85445266593483149]]]]))
      arg1=numarray.array([[-0.0069667834055393563, -0.12098514540760874, -0.37212856846023179], [0.0073582802732958807, 0.99240084146169494, 0.08844223583097377]])
      res=tensormult(arg0,arg1)
      ref=Data(numarray.array([[1.1240223108744616, -0.4295802164649753, -0.64094643026004461, 0.036785415417612412, 0.99634049889634857], [-0.038270707121663652, 0.62514787697203289, 0.4367866807678939, 1.0397521264637073, 0.11538249175537699], [-0.21127427010190156, 0.072850577940497513, -0.22524812236137265, 0.15740826797340374, -0.081497288913081889], [-0.99932823747926458, -0.58571369239003768, 0.33577153297307316, 0.8784451530441435, 0.15334828753489754]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[-0.013211312561182909, -0.70726715417047481, -0.3025460120536605, -0.71092523659224638, 0.36451869923086361], [-0.49023383424566352, -0.12551534945186227, -0.25831244411905313, 0.23160628785729367, 0.86497042018251746], [0.27301339166173272, -0.22390734910702106, -0.1687494755139938, 1.2424291590359899, -0.65257095779320795], [-0.16245866241290746, 0.18449237708102617, 0.53383359600163127, -0.2637672604413257, 1.1157252204999555]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_tensormult_taggedData_rank4_array_rank3(self):
      arg0=Data(numarray.array([[[[-0.15138238448849695, 0.98202789026740422, 0.81602399425619465], [0.87927739853304931, -0.90733538811802927, 0.73571968559299683]], [[-0.53274349341284366, -0.90730794343544074, 0.42226495659560537], [-0.97532415502368219, 0.58238003486162326, 0.26356030415546061]], [[0.34594916352246186, -0.41106655031457384, -0.53122518697817056], [0.15447426378514595, 0.79467133463801054, -0.98123383429269873]], [[-0.50095469708523299, 0.12328584710146528, 0.79417241262970006], [0.55376500027180842, -0.20899410878334024, -0.7890873441034183]], [[0.49737370841806849, -0.28146831283270868, -0.96527960506214261], [-0.55705777433386472, 0.24192007985380237, -0.10046636147176669]]], [[[-0.61221499033413651, -0.88513287006851527, -0.63230744078563172], [-0.12708857751211311, 0.6537161083644103, -0.15278630549552408]], [[0.053748445847594306, -0.22069449017122134, 0.57142124273996364], [-0.0075005655745172817, 0.34047228795144235, -0.95537005479739667]], [[-0.5228294489270775, 0.27056966786759062, -0.76037918751807831], [-0.73305460413824997, -0.22237485836062865, -0.91408982422604246]], [[0.066188260390044329, 0.25658807216882984, -0.7624261178987044], [-0.82160767063002527, -0.86121636537825852, -0.12564124166650492]], [[0.4630525994743464, -0.60625557254597506, 0.74557024517963555], [-0.31880960336738706, 0.75193813354001171, 0.22186164049393819]]], [[[-0.86867832629151875, -0.26676692393619894, -0.097316386571844049], [0.66816644762513988, -0.17199723047274773, -0.025941847881438385]], [[-0.25111893890869896, -0.71801004251315748, -0.65139815932845702], [0.30650596655800455, 0.90715830852949964, 0.26020954461581947]], [[-0.35107388735320044, -0.43848361751684184, 0.71499792475720758], [0.40606001138799952, 0.52019413921054269, 0.77361231184485368]], [[0.26671933321080088, -0.72680118560757601, -0.4584747717686819], [-0.54473194154017635, -0.9080011380027313, 0.28017536404771537]], [[0.46305129516616561, -0.1842664967809482, 0.29395984528937236], [-0.051894168241342742, -0.18538968681044432, -0.67492357023053917]]], [[[-0.14837332139303383, 0.47821122976060737, -0.96590696745949067], [0.7572682114454794, 0.70495284043001427, -0.8156392746303569]], [[0.24590284032672161, 0.13163209876228388, 0.91598996666524002], [-0.95167309831694769, -0.45833670702757034, 0.74816966219583891]], [[0.43493310043925293, -0.31560970702419633, 0.62647681654863607], [-0.9934852594028063, 0.086324836419422013, -0.63077004931087588]], [[-0.40016515807249631, 0.21747151195701298, -0.60298298016456919], [0.7777397079691255, -0.14301170320000112, -0.40523754816893631]], [[-0.699478516831604, -0.28058382882945465, 0.81240754600820497], [0.35690662923368222, -0.60646491423792082, 0.13808186865250027]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[0.97682099139337875, 0.28893432274210906, 0.35675643153871373], [-0.87489960213489382, -0.58839776563947477, 0.10417365142117174]], [[0.28447146271901191, 0.4333174450269146, 0.73015439294187634], [0.89629840649525505, -0.36331861684115041, -0.48291700986649566]], [[0.51383404831945811, -0.61698908435552702, 0.63933943323712183], [0.86427078666324508, 0.22407650383599087, -0.51064711928498974]], [[0.0064101047233615649, 0.91473171308749524, 0.82569541640691035], [0.36429171603565624, -0.36053746198551062, 0.35914102522324809]], [[0.65559885135982365, -0.87046142305699981, 0.45685886223808869], [-0.54019751391039916, 0.93513887399927342, 0.8577851463577626]]], [[[0.71514879685741861, 0.8747326218639635, -0.86088240305875985], [-0.71697197549114144, -0.74761642753471236, 0.4968619907719507]], [[-0.85564370160200909, 0.28218490858525902, -0.70566278016728079], [-0.52833716141170139, 0.63885784488206498, 0.92226871472700345]], [[-0.81940445843275378, 0.31532396058464807, 0.87877332080753501], [-0.32068215108561193, -0.59181739260157418, 0.71362329229520127]], [[0.96443561383723231, -0.76834844282078674, -0.81332646820868226], [0.9479947489563767, 0.46733302112768982, -0.29323206169538851]], [[-0.7355644645630095, -0.8703353005538379, -0.27978543004591327], [-0.18396960641929794, -0.090314169099980024, 0.44474525009124832]]], [[[-0.062186664200863717, -0.72049334317023095, -0.55748922025852554], [0.92639840947564345, 0.27768291602521566, 0.30915902335571044]], [[-0.87771465397284154, 0.26154244684934103, -0.71555449159622264], [0.5739462751372697, -0.56245454890509983, -0.20553839333503388]], [[-0.36888473926387233, 0.73295582065633647, -0.89268943342247553], [0.25298700446240141, -0.54326582212856867, 0.57495361439291859]], [[0.84861527601995634, -0.45448631521406013, -0.69233084149642488], [0.52801426366910031, 0.59200728110253675, -0.87326107427580024]], [[-0.17533998002454898, 0.32256519841332354, 0.72528898982909884], [0.89624609123587984, 0.40629528526474767, 0.6316227038211093]]], [[[0.15760147942364711, -0.84165872511656215, -0.045020586635559301], [-0.71089085539661978, 0.78338663445285706, 0.89128832418570658]], [[0.69591915022371875, 0.88411919046611076, 0.15059693210841818], [0.22771431512242257, 0.43581652796171388, -0.14884113687284506]], [[-0.47820792421300462, 0.74148001187840973, -0.60844159869642889], [0.12446219582758444, 0.21034652362932449, 0.12764482390510334]], [[0.88807862414416894, -0.81604217364336162, -0.96900801679117787], [-0.93350890771830985, 0.4718247701663898, -0.20563778751009232]], [[0.70484003825528285, 0.91547735200888858, -0.51926048250997114], [-0.54038438257525967, 0.6784753166839359, -0.1752617530304057]]]]))
      arg1=numarray.array([[[-0.17437912463701344, 0.57233590142876301], [0.22244483326815279, 0.62318517721556277], [-0.64722058766493351, 0.92550393542313869]], [[-0.11501222080964024, 0.092436883014182847], [-0.10051908675302923, -0.94862409494405564], [-0.46629109796060741, -0.73596693118138079]]])
      res=tensormult(arg0,arg1)
      ref=Data(numarray.array([[[-0.636285232810475, 1.6811095835978602], [-0.45148712929349588, -1.3161085364645888], [0.55194847213358345, -0.56723205814923361], [-0.073961835813585508, 1.3553125965506927], [0.56200350568961321, -0.9911561053065131]], [[0.33925536128528266, -2.0066301829358757], [-0.016181303472602659, 0.80152846163475089], [1.1763855343371132, -0.018424239163095435], [0.77864171800541182, 0.32564697039912527], [-0.84052278086151588, -0.32881889153253252]], [[0.10766176137095032, -0.50947140143381919], [0.057898525161606373, -2.2177745530790514], [-0.95879967285577772, -0.83774213929955854], [0.11182985619493868, -0.11980024909484405], [0.027322044665876732, 1.0900393421152761]], [[0.9797727207201602, -0.67930813157772063], [-0.7997862358083645, 0.86671393427102417], [-0.15180958419372387, 0.92255269301855669], [0.6223033590126773, -0.1457693682421245], [-0.51072053177039878, 0.6833689080380343]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[-0.22577124345528887, 1.4699357343207167], [-0.26717252504734512, 1.8915257787409328], [-0.52445707141109188, 0.7444439031342035], [-0.50516888352559786, 1.4492729312484336], [-1.0354884287895425, -1.3127421658544587]], [[0.55298148234654088, 0.43493399105360142], [0.23519858543360239, -2.3005888981032654], [-0.59211584538979745, 0.54740503115176276], [0.16803368547121167, -0.81946366512541802], [-0.061395313103358495, -1.4809617029095914]], [[-0.067225136771333321, -1.4058650407244215], [0.76072278254832115, -0.26372552689529605], [0.56255124789918354, -0.46495282871620636], [0.4859695932944692, -0.30838416990204442], [-0.80553310064784722, 0.0044935740463059592]], [[-0.59815077658267002, -1.9407856917646291], [-0.022749972562304183, 0.80581283873026677], [0.5471456468072341, -0.6567085573369944], [0.44659980707458791, -1.2796192275629508], [0.49248397665392651, -0.071243072221005954]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_tensormult_taggedData_rank4_array_rank4(self):
      arg0=Data(numarray.array([[[[-0.73794216284739611, -0.68815456416094056, -0.38978745273381876], [-0.087802299053095778, 0.51033159782464943, 0.76359147150246898]], [[0.36293813304459466, -0.35654510594125655, 0.31805151840804036], [0.99781681454517379, -0.13059460395457356, 0.74440839327502606]], [[-0.47142446967484664, 0.50111647821288918, -0.39519431706137964], [-0.57969184926701711, -0.047779290716238654, -0.42947481491682393]], [[0.35509298406864453, -0.44681733343362984, -0.36448162928099026], [-0.2509955780061961, -0.1390474803266204, -0.057979942540468121]], [[-0.68400935872521962, 0.67420018205301191, 0.111175931212534], [0.44679584057972921, 0.55843293045782394, 0.028474141007863052]]], [[[-0.70024287576159527, -0.56124192620616897, -0.19851933422277557], [0.48601468533250558, 0.42644774924970941, 0.47318349556014461]], [[-0.65218640857746468, -0.81247106922035739, 0.36389750761452877], [0.29749548096979805, 0.36720225349760294, -0.55426207044978715]], [[0.7440584811170905, -0.083218890415041491, -0.29126489065110461], [0.089646428418354018, 0.11792608364491675, 0.94292554230581582]], [[0.36207797952127918, 0.95121424069491911, -0.89685360934956626], [-0.93934904757072735, -0.44940004638967879, 0.29718080413776704]], [[-0.34083167462406228, 0.99905043258491921, -0.98921086579816575], [0.41151619177339516, -0.6193236323125364, 0.34264472969542847]]], [[[-0.33871159287125252, 0.80866244025316991, -0.096396506803934301], [0.26062368255710777, 0.47142623756615687, -0.45814527628264745]], [[-0.23773975854920693, 0.48774170948812734, 0.30689486971824631], [-0.40472186262165621, -0.41823268953475567, 0.16712765794098394]], [[-0.24595795253182273, -0.11136060817356008, 0.48598520078812757], [-0.81251370040209703, -0.15107357407713828, -0.13328831339405589]], [[0.70381594313301954, 0.34594082450128738, -0.69329849178130876], [0.188978711723232, -0.22369562255316899, 0.37339691308876666]], [[-0.85628879830265769, 0.29425885471378743, -0.80907919386671812], [0.42038870776641546, 0.16147292849611339, -0.98480873490251586]]], [[[-0.87690127748603874, -0.75430985517863203, 0.974931911358206], [-0.32392230846913717, 0.24267830277650959, -0.86640649777683065]], [[-0.81963387618413508, 0.25526496153514877, -0.69876873658408001], [-0.024378370408578043, -0.092337000982335438, 0.50581183891120673]], [[-0.98205284919491098, 0.48903517263397722, 0.10980723556488403], [-0.079464789812728087, -0.48180403839600228, 0.59421004110578868]], [[-0.24351540231625068, -0.25684366061933339, 0.97297141661426689], [0.40371825294230868, -0.88078311451953262, 0.88326551015271404]], [[-0.17725998866923387, 0.95194327818547997, 0.19344670626345528], [-0.60759684088696497, 0.93632765521372874, -0.024437304903729862]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[0.5254749150130118, -0.0060663951075001776, 0.62500641299787363], [-0.42940935053198115, -0.69779697964292442, -0.8017803486125239]], [[0.78725410406641094, 0.66724963261064718, 0.81558240761094813], [0.92437418646628422, -0.4821330002318609, 0.89504851396151319]], [[0.2210046690761831, -0.41656192023070515, 0.66332071844755647], [0.99919358728480523, 0.41472511542630541, 0.8319443010877936]], [[-0.018763427193275284, -0.39664383632457567, 0.45566229128690239], [0.67335480070963127, -0.37053360143863046, 0.19317905099372168]], [[0.86276780713800805, 0.94011048279595633, -0.71202247814620856], [0.62094402251356251, -0.15103776063496954, 0.30271974558340831]]], [[[0.30004722532897543, 0.083100334595535896, -0.079007614230614198], [-0.0013709269983721573, 0.430958699683885, -0.9583383342157803]], [[-0.63333489091163764, 0.30685745447748625, -0.46920847388186426], [-0.5346747375892098, 0.65725667836554558, 0.48571590011251398]], [[0.41716681281597823, -0.16760016577763825, 0.60577348205506243], [0.27524276824234972, 0.26316101229910394, 0.87158383517812066]], [[-0.70435430277524103, 0.14662661385702247, 0.17628763287876992], [0.79936034077826168, -0.24550595161697419, 0.7258407302342782]], [[-0.075014688191506362, 0.92227766215144946, -0.51540639739444627], [-0.90064493971324611, 0.68136199804434305, 0.55380740859487432]]], [[[-0.40245542447583693, -0.40601808783646187, -0.12508058296328861], [0.50567570816356988, 0.45166001252268861, -0.75715774670864011]], [[-0.33000876490561781, 0.34571715520395707, -0.696028624936887], [-0.92417976415252268, 0.23096090746193898, -0.058346226041077642]], [[-0.19756828191896569, -0.15830027617911879, 0.20598784941467341], [0.82800257609742833, -0.1856754324110419, 0.43725550223589438]], [[-0.92383880681893915, -0.66729226835524846, -0.048140300919234491], [0.66383093859301678, -0.17565353374329384, -0.63749931494628509]], [[-0.92999721820221026, 0.77968688688724219, 0.75451305121785728], [0.40151755212459683, -0.28153257215961158, -0.8916213335619545]]], [[[-0.21251942778094302, 0.97123393901918265, 0.032384835223849162], [-0.55394821857259147, 0.54573981353763146, 0.21315997948682841]], [[-0.067504322112111215, 0.096105364202099253, 0.84382949891777681], [-0.6398460457894446, -0.67867299149338534, 0.29898526698554662]], [[0.4800168677049228, 0.48396003336477689, 0.17703394589607391], [0.49742921236337923, 0.37427069829235471, 0.39414427168908195]], [[0.25208406100785941, 0.8396931815911306, -0.70054494163660097], [0.94510197481347036, -0.17513448150749289, 0.95454305856594224]], [[0.5789410534385695, 0.5096002564158042, -0.61989428069212238], [-0.53410153326285958, 0.55493423994825464, -0.77914790797249878]]]]))
      arg1=numarray.array([[[[0.59674771653266112, 0.28726513204368098, -0.48404228867977439, 0.058767618374838904, -0.39721726148116976], [0.80721325597739924, 0.64932103606600267, 0.82382202125654724, 0.20269591020997613, -0.87548423034303013], [-0.81395455141658957, -0.30470810400943238, -0.91149901710731562, -0.062870229797603372, 0.83077284130981921], [0.81264336964360107, -0.12588958723293331, -0.54060158194060515, -0.92593814712321021, 0.51844812430647735]], [[0.84768380914918651, -0.3400562710280628, 0.70602825522729629, -0.30014695922720702, -0.60457377145991797], [-0.85298790664723478, -0.99721281163610653, 0.73231084812773761, -0.32809764323269031, 0.61428435155290484], [0.17668933380511631, -0.23222187496099167, -0.05612878776630259, 0.79151395762303456, 0.97528904901536451], [0.52502449809859786, -0.7955300646604162, -0.072136316067438644, -0.39358799113898635, 0.52508577261109801]], [[-0.28388366831546219, -0.5802391711747017, 0.35080910693726564, -0.10273312922058664, -0.75272712920969176], [-0.79857999813364189, 0.8591736883342489, 0.54927762774246336, 0.35998331528471383, -0.54371214250123523], [0.32339484887318326, -0.80597939323440082, 0.035675529892205793, 0.80773590642698712, 0.77822692052922648], [-0.48534874763387936, -0.0050721495635479563, 0.77073697395346885, -0.38363038922114145, 0.78627111815782946]]], [[[-0.59773523387544114, 0.90942200651177152, -0.6463981001087955, -0.52669916319937693, 0.62960502853473987], [-0.44973357224507438, 0.94276212052058894, -0.74674695081949571, -0.9360208890377848, 0.58648655718029885], [-0.48692037068815419, -0.97059172948093764, -0.60688174207746992, -0.79607250241566896, 0.96572442144731108], [0.76075595346036473, 0.097757797764254084, -0.24759023520493351, 0.45499382310859349, -0.64280253031333912]], [[0.23863860793781622, -0.87463780378742118, 0.29836765552788913, -0.9530683802691049, -0.5553413459976384], [0.2186714998934407, 0.90444640610127003, -0.25279377442193174, -0.48805655033189632, 0.56725068197970918], [-0.72695104154402834, -0.65047084695786328, 0.7687921527462207, 0.73207419741901725, -0.020488120242760477], [-0.45930720241528378, 0.27298858635973433, -0.020618673349932504, -0.33046809181567882, 0.86247248956278799]], [[0.36709131926814353, 0.91304916385441137, 0.89628888565497489, 0.051317816776900615, 0.52832661944710035], [0.047353916123749729, -0.48712328828346041, -0.75336638914342147, 0.26430943651549277, -0.64957341319167816], [-0.052894218305765683, -0.38503848056466761, -0.63963995438526111, 0.66598759741438185, 0.68580336945403997], [0.81597718314433498, 0.088578685047778549, 0.35572472259422794, 0.48902814728010391, -0.37958433214407972]]]])
      res=tensormult(arg0,arg1)
      ref=Data(numarray.array([[[[-0.45847334039168097, 0.41918807431292276, 0.62801788973424255, -0.1977251834210903, 1.0673038508938859], [0.48982895245317004, -0.1209922359743793, -1.9646842854470061, -0.029174408770720778, 0.177248677700099], [-0.015616376293546924, 0.15807441377159148, 0.65455388959100491, 0.13890536970449163, -1.1591299623610665], [-0.44992084069698235, 0.84069320999438413, 0.43099502968837222, 1.2684923931955239, -0.8436643725422508]], [[-0.53027396549708161, 1.742299928710636, -0.33258008419728746, -0.26721176871843066, 0.92603235874871226], [-0.098950831100637626, 1.3244456197089314, -1.0603222632155824, -0.36844474276474581, -0.6821167944976585], [-0.68585298970000375, -1.4542862289649934, -1.4815689146232809, -0.44229951124208877, 1.6781103486887374], [1.379876834145362, 0.36417126921059051, 0.095096443313217843, 0.54345387593221983, -0.78557663427586943]], [[0.43309984497991938, -0.95405096195360284, 0.4188764183666579, 0.191306901634825, -0.38357652335744857], [-0.26247049722498617, -1.5258842970309869, 0.53004509535710764, 0.050174121694734994, 0.84731575796338821], [0.68416993289103012, 1.1048826044903235, 0.97725842023346754, 0.24754046676988328, -1.0638430320933097], [-0.69769477810592306, -0.44505622169602793, -0.094150377145650582, -0.067106931088773608, 0.20243109800018025]], [[0.032174359935272595, 0.30585213025898528, -0.54642014193841537, 0.45416868494486862, 0.29199857797439882], [1.0385631240740898, 0.028841550960431537, 0.031383294652708775, 0.3748437961095078, -0.5755961975122138], [-0.25948651468465056, 0.64571080484892185, -0.22907835624049894, -0.61098814994713913, -0.70373043866348295], [0.05648343392791759, 0.24497188118593763, -0.39626541075350064, -0.10971047975277526, -0.27367726751791666]], [[0.0084171752397211134, -0.5463689601484103, 0.74942676068308223, -1.0200687199430516, -0.23336090265336054], [-1.2934862593364704, -0.10851885585598636, -0.50497467421654318, -1.0030590154435899, 1.512857494850159], [0.086816721060637606, -0.84561067400075329, 0.72955149792868179, 0.73853935272084548, 0.6153718340219978], [-0.14919857887363305, -0.25215496388424252, 0.29482214723539379, 0.35801253633151547, 0.27042718332523058]]], [[[-0.85230728488283647, 0.60593209081986976, 0.11024046981793162, -0.49043668592241801, 1.0860602534002726], [-0.030897246491756746, 0.54782929029129535, -1.9241351431327243, -0.56724151404658996, 0.59580327282701917], [-0.16508547364707254, -0.4276026928145864, 0.39291941426611671, -0.32013477569991433, -0.49847898444935185], [-0.20738740203072903, 0.74148609755798367, 0.30522993102552304, 1.2570440766232016, -0.93805483351769958]], [[-1.4748735711547072, -0.67890067616422556, -0.70980134160112796, -0.36695404798702441, 0.1668935225834916], [-0.20377030621935244, 1.5819555598782298, -0.82980401568720308, -0.33880278871302477, 0.61684189256257915], [0.12250029160123517, -0.22008264210644393, 1.109338323678783, -0.6452863405251843, -1.1513574835862106], [-1.5277817600956076, 0.80683161920445456, 0.41325801721090383, 0.52702121304789273, -0.14275952745652695]], [[0.77685390804324062, 1.2503656641033249, 0.30128269737575808, -0.012592444724521895, 0.46312734742267531], [0.93431817427819674, 0.04772472587823795, -0.41507821045333093, 0.18102962349228835, -1.0371965574390929], [-0.89377971379500409, -0.49942208205384969, -1.2508056118917477, 0.29502915144387581, 1.0411301025508872], [1.485767767522173, 0.098490470220032461, -0.30992984093752807, -0.081525217753094514, -0.20079121302529826]], [[1.8403305255342601, 0.11107386458292839, 0.92116551629977828, 0.7662249780149607, -0.22865668937606343], [0.53536774992972547, -2.9208158494549687, 1.0934262389652578, 0.61557889729472404, -0.24392616171818471], [0.35167742554955372, 1.4812446789641298, -0.38093011113787556, 0.62242905774837998, -0.16357959502985134], [0.96322787796643572, -0.9859382908951938, -0.60804101307925329, -0.49914387692144163, 0.08543321432416344]], [[0.65631881124502689, 1.3651136985800469, 0.37962983548013185, 0.17282922918162469, 1.0600474066609087], [-0.64161327634619791, -2.4065723983594576, -0.50139489277940397, -0.74532924662461097, 1.1174038178737618], [0.36575576753594768, 0.54064273139566787, -0.72574044625341771, -0.5396210432075802, 0.56646564514952058], [1.6047770853964982, -0.84533841757485295, -0.6174656222221796, 0.86133308763359662, -1.3586401229134124]]], [[[0.29926547136925363, -0.90997719336255933, 0.26263366277301697, -0.86280246283411122, -0.6215565894066919], [-0.92203015788705756, -0.21390331498506457, 0.29156345810812545, -0.96380082364510666, 1.5635654240909242], [-0.057969801544359309, -0.39009199651941773, 0.7572161062073508, 0.41602412987340315, 0.36010331673292373], [-0.19599275470515631, -0.48659600998147162, -0.18674392218665206, -0.22892831031835356, 0.58618632990003916]], [[0.3879188135575023, -0.26189147392596096, 0.85371603848687616, 0.42845378418838143, -0.36570462780165808], [-0.75454898020784777, -1.2183129793487628, 0.61193685935448217, 0.52938398895452532, -0.24228135126036265], [0.87119825806904749, 0.31234328083282359, 0.017454614253213915, 0.77620666260405491, 0.24935098864677102], [-0.065497257276911025, -0.49857437080048689, 0.49815384678319058, -0.05377442622576345, 0.21015608082300122]], [[0.021550403907131525, -1.0432558844576461, 0.5715853589057549, 0.53413707179019854, -0.69887487138902205], [-0.16558184805672943, -0.46882699871116135, 0.72811216184575789, 0.96066193039676795, -0.59295523102084857], [0.85019021917396387, 0.64732085640617054, 0.70999082990554041, 0.7673220395978072, -0.80771588660097227], [-1.1517111320115956, -0.015388147643150371, 0.67243661185819259, -0.2998120989116812, 0.63870903351575581]], [[0.88079423088099817, 1.1952651618217622, -0.19387562346424597, 0.14157743345402621, 0.47363489702876321], [0.71047640532122447, -0.68968701018610767, 0.08646684044068409, -0.18943722575016636, -0.28532564360376528], [-0.68511165382537398, 0.082304975594470392, -1.2111813240405074, -0.39595900092066549, 0.82572123931013375], [1.6412653740597472, -0.36981011294162208, -0.84914015389861852, -0.17936780154662962, -0.4547228521029778]], [[-0.60612775412889985, -0.53468542007737885, -0.76783058045173247, -0.48137507364828297, 0.42595294600430189], [-0.49648039034089597, -0.52249115597879825, -0.54717125352998508, -1.2939616588789202, 2.3481856572180519], [0.21733247132736905, 0.71081597444986622, 1.2340615795033747, -1.239097381162249, -1.3267550327248649], [-0.70661265774796078, -0.12424667366631184, -0.63963723099085923, 0.6437545015785634, -0.68272878621217647]]], [[[-1.5059904487649516, -1.8589984707551861, -0.26085216989615556, -0.030428894360149027, -0.72595944639702026], [-0.68527245023827599, 1.3566074702149491, 0.093970381606375941, 0.37646010341276237, 0.28474816066695685], [0.92290425827934341, 0.14673213808054508, 1.8137542852414739, 0.10407990179318627, -1.6174338497434562], [-2.6466787947886052, 0.66336123426487104, 1.0468775079239692, 0.083552886499634771, 0.66225137975347537]], [[0.10385413598584531, 0.60361858974565596, 0.77338858354732165, 0.073802468598430468, 1.0003920770110717], [-0.30661004622396881, -1.7400123194799328, -1.211632115961605, -0.29985816902844031, 0.85907311556185373], [0.53850939241208706, 0.64263112876296369, 0.32810817930031322, -0.022170422944832624, -0.65053659724726298], [0.24369283317506779, -0.079129297057095233, 0.073984083609214407, 1.1933086226262271, -1.0962892160213107]], [[-0.052011870551061018, 0.37955650062712015, 1.2993441400402235, 0.31576362678853831, 0.54324687368922742], [-1.3390376835890723, -1.8311320992934323, -0.65711706548119331, 0.14660303021969251, 0.39458316452160341], [1.2787754763551176, 0.25890604524767569, 0.16934676929525827, 0.64379524715560588, 0.087184178655233091], [0.051106493849433943, -0.35262987551528735, 0.82123869262197369, 1.0883667400238359, -0.75603517040981116]], [[-0.76651654707724337, 1.396812992972428, 0.54576126007396475, 0.63495935317484287, 0.7295984841478127], [-1.0868215723672721, 0.087689510305302476, -0.59851275275556115, 0.67060235954106628, -1.3101928067931354], [0.86447080138450794, -0.80936214784240723, -1.2160286499567881, 0.21997475955497642, 1.3180623867124222], [0.62743474601185834, 0.10730921831648976, 1.132480873289949, 0.86001110008992387, -0.85053180071699763]], [[1.2239062955846121, -1.880702214950301, 1.4759794947366038, -0.88963101637679221, -1.5661601598735444], [-0.63271771863386772, -0.6122414754601343, 0.8927771855335942, -0.17333915464881219, 0.82543180615025136], [-0.008481026508770825, -0.33287962833410573, 1.2192540565692327, 2.0737521307162616, 0.3089886172939576], [-0.65037996235408757, -0.54192069192999426, 0.2986901352684494, -0.88258344530739363, 1.767450969738017]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[-0.073170349737954415, -0.72189923881795637, -0.6886346609817815, 0.81856502044053769, -0.98196407995110413], [-0.067208691746928201, 0.23885550784445975, 1.872850581062345, 0.8640762633655964, -0.93044849552980502], [0.532101234504465, 0.51694403878981943, -0.21934133600646655, -0.2359721991556164, -0.033227597257704189], [-0.53991439193534263, -0.36798531892847158, 0.033572706517762896, -1.0808131865345032, 0.73920857447473831]], [[0.46485624471829712, 1.6055766451910842, 0.4370019759885192, -0.21922468963660788, -0.0074065695466924431], [-1.0637485152770785, 0.54592024715917908, 0.34247973037621748, -0.15910939628369772, -1.0355465609249079], [-0.40609044494474827, -1.9803798793646172, -2.2300915949391857, 0.64468295467585657, 3.4558947860330096], [2.249246821543692, -0.59603079450746765, 0.25434157734610979, -0.28683421121595942, 0.050019686615911829]], [[-0.60241893981234385, 1.1258171861873114, 0.055145011753879203, -0.80896955644609292, 0.50307766496943296], [-0.3152809969489932, 2.0406506343227613, -1.2363806351935582, -0.49753053145832726, -0.52917128837148941], [-0.87099291095976017, -2.065136152372625, -0.97409985034421975, 0.25442237622078262, 1.8205493537200446], [0.88745469089392004, 0.58478760272166452, 0.46182107065969735, 0.42926480316467946, -0.18298954389124472]], [[-0.89677783258720078, 0.97792637561607521, -0.48377525147978917, 0.079539122820989877, 0.63604608124387796], [-0.41540409697380992, 0.98043147976513878, -0.61033086698684469, -0.10800830156819473, -0.41573001262638409], [0.023820243025309478, -0.75634033665588563, -0.76145312212584948, -0.62335715586177687, 0.74252768250439283], [0.39542629497025905, 0.29737881426265622, 0.29959414123272055, 0.52197392229108575, -0.68546274805922858]], [[1.2178249362143208, 1.3144974802075311, -0.17877298528352936, -0.32588666298259389, 0.25964812221392608], [0.16518958565773253, -0.68769280440739255, 0.35455667454310485, -0.81737466224952715, 0.29115116667901308], [-0.97497605076285421, -0.52832734030902218, -1.5511689286835246, -0.28853767644607631, 1.8898899689623501], [2.3290547889277184, -0.80660309936840413, -1.1259523793165136, -0.41525502906906919, -0.26322169426570341]]], [[[0.02378942821992841, -1.1494119080441962, -0.84375864819999091, -0.45838342727820253, -0.85646102449724482], [0.28388628173292213, 0.8993925032988046, 0.87870362290074477, -0.45723496649526435, 0.69748670901870991], [-0.51702030365634455, 0.042955648417968562, 0.66416543490299196, -0.33856259342267553, -0.39855305013012338], [-0.65516024370996406, -0.070856459538939487, -0.57854565279125436, -0.89191902632941789, 0.87341379390631801]], [[0.67012040736057998, -0.63165471069028667, 1.3356669292105172, -0.40099060170270212, -0.025779542367659503], [0.0089035184384112578, -1.2665926027962369, -0.68757160500128844, -0.089893229827229165, 0.74182840447712772], [0.17484368440197012, 0.40430087932383807, 1.0624161493614706, 1.1339846133815956, -0.78874218216096292], [-0.43814459767313951, 0.0081748553254563788, 0.25021959539483851, 0.42270883921518171, 0.19003605823927383]], [[0.15313113486572205, 0.64127761649006343, 0.57404725898170572, -0.33846522112444777, -0.032730347371447088], [-0.029022282647137319, 1.0314075603674837, -0.37501052168305893, 0.20191296848789286, -1.0529967624632959], [-0.54469219232391819, -1.350354863946047, -0.87145218984716832, 0.88442396063839701, 1.512693603147218], [0.75671559963255541, 0.25369226877830048, 0.48993150535816454, -0.08820189989051419, 0.32377989974923044]], [[-0.61601720269430293, 1.2499262218835119, 0.56691004664360722, -0.25330323865095417, 1.0815404735612435], [-1.2132275712362619, -0.27412255671850244, -1.457737003613045, -0.56396761102209458, 0.46893562765144248], [0.40708345741513285, -0.85714632567619997, -0.49805954149153164, -0.02994265603610613, 0.96981246361090978], [0.73218299296554346, 0.046548236897354829, 0.57141702792153148, 1.3266411987975637, -1.1506604918844916]], [[1.7875948412614735, -0.94547432453843638, 1.7884980969635158, -0.37487341104380145, -0.79267525370453695], [0.1446183625018071, -1.9138503398458415, 0.41358388522000855, 0.15351581347567653, 0.41099596826799339], [-0.028732257621035116, 0.44180672151424949, 0.71439547276835413, 1.9030146537999872, -0.067867648102197697], [0.12717876346685802, -0.57462730694523512, -0.017274322135798298, -0.45994176682580717, 0.99651069959983007]]], [[[-1.0212536872842239, -0.53145431173275104, -1.0064733560540984, -0.62459386407469886, 0.16700557302982805], [-0.043160537742813809, 1.2901610693077599, -0.61895849224863153, -0.88727200472761625, 1.2155466485985795], [-0.31911830983048028, -0.17533137935718757, 0.90982037605154309, -0.97326215043510722, -0.86784672599912305], [-0.92009280741228749, 0.47996270473059127, -0.25340026896105067, 0.29098603747366591, -0.16829390278554579]], [[0.8798306212396636, -0.90424975486531478, 0.77365533168787981, 0.21199438613049384, -0.2949629501879516], [0.45793084835934639, -1.7910127963871443, 0.27469001043808505, 0.30602901982246944, 0.50661920433292973], [0.38979545719316899, 1.3504914286443459, 1.0323161258748703, 0.5981171239528692, -1.4159053384423079], [-0.60561929249170943, -0.26241768117987152, -0.17968991518661739, -0.088838925340263414, 0.2785813621331189]], [[-0.68928652953441616, 1.192192591290596, -0.14258223963572536, -0.22196692979183841, 0.87457063578559746], [-0.58122601262466578, 0.60623181113906399, -1.0663259980313673, -0.48279298722517711, 0.059986753303757745], [-0.091865618919010295, -0.92029670911665695, -0.7286143276619349, -0.45036346707942415, 0.94508014706992927], [0.72834044354906324, 0.21874756920988228, 0.2313529969911492, 0.81814400937738407, -0.88194527257532673]], [[-1.7760186257115538, 0.16473060061142386, -1.0937301426500132, -0.064004901430641414, 0.98531974367838149], [-0.5052443848805096, 0.801709766606723, -1.2472255629108291, -0.68977888465714854, 1.128864515373653], [0.45666979044221223, 0.19067157514669622, 0.74767713767583799, -1.5905894490551422, -1.2482897287933048], [-1.0122240579597899, 0.60787131200070088, 0.12295063419735161, 1.1848556546943469, -1.2034232969455176]], [[-0.74273187955375741, -1.1727974010629589, 0.12263831615915133, -0.35510308304972515, -0.73183287411813869], [-2.3026694337772748, -0.17488881713361754, 0.66231333456003727, -0.64679688546899772, 1.5378680610542772], [1.1950583940577852, -0.36907699403195626, 0.94104924882004026, 0.16550091166582293, 0.35703248349754768], [-1.0053791790652407, -0.62359674917260199, 0.61726658499125708, 0.10448797917809988, 0.35803389000559593]]], [[[1.226883411401732, -1.1965863943831621, 1.5119029939363526, -0.52475356177301025, -1.0663654996279486], [-0.64730037087400216, -1.2111802381089043, 0.66906718228798356, -0.041582977601244325, 0.6112882323709784], [0.21678853763112077, -0.086291958126195056, 0.75974831850222757, 1.7907316415122323, 0.39592453284547247], [-0.17664678432469358, -0.63234666301131581, 0.27151330370288973, -0.52606135947663635, 1.1711167888901124]], [[0.1318903415331584, -0.25700457087113354, 0.87562949289135328, 0.87966937075519347, -0.53445549674646831], [-0.6568205266160374, -0.77736202332329785, 0.90238605887621248, 1.2677144381473313, -1.2951170560996743], [1.133917876127583, 0.2655076014604737, -0.23845059956959036, 0.97354947148699922, 0.29537546915634327], [-0.3450329992964013, -0.29357284387003563, 0.95870027177550932, -0.21967374833180478, 0.39141258366365389]], [[0.58310842080158376, 0.35549130310766808, 0.31484621819634401, -0.73371143013553175, -0.30294593140590648], [-0.28991585211112203, 0.59664516588486394, 0.084096337693156498, -0.54185277282126443, 0.028801586480326657], [-0.78308231573196896, -1.2793504174265591, -0.72463796835304017, 0.63637842506322084, 1.7515753851315161], [1.0863799344624716, -0.26061983013508117, -0.14863108347397538, -0.40747204944655613, 0.49561948575106696]], [[0.80478804216721922, 2.0775761592907434, 0.41744996944393098, -0.44713201809629438, 1.1161414505206515], [-0.37146101043172697, -1.0079326602039413, -0.94280460563247903, -1.0234543581876931, 0.51090820928779379], [-0.66673778456450694, -0.87810648896419097, -1.620668672635396, -0.16194230383412067, 2.0541103035336552], [2.5640403809099102, -0.56704911857432305, -0.62761771820278089, 0.65953326983484062, -1.1001070054480957]], [[1.1191011064928351, -1.3297867399343402, -0.32542929730683079, -0.34281191742689265, -1.12754060555709], [0.85233719874175651, -0.28693947952827681, 1.3551747412219024, -0.24984650095321825, 0.65088697055864042], [-0.68379408047757972, 0.66230157091357256, 0.67071718747893394, 0.17878042918669501, -0.56594907797278204], [-0.25808298951102943, -0.44487855181588454, -0.9838784335795272, -1.3062520791424728, 1.198019449169313]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5, 4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_tensormult_taggedData_rank4_Symbol_rank2(self):
      arg0=Data(numarray.array([[[[-0.46031556596999423, 0.39098700471739045, -0.6610915234971968], [0.85764473371218375, 0.21331322734692071, 0.56349828009236824]], [[0.76268108607179053, -0.65865808651654323, -0.91976721382928672], [0.95507373551706443, 0.68072597606294116, -0.082889402301225878]], [[0.90979297582702934, -0.014735989900589885, -0.60074752703546541], [-0.92537454972688371, 0.81689024689279965, 0.0053904659108667818]], [[0.089058690448587274, 0.79651757310266325, -0.99472813700801299], [-0.76018266937652945, -0.043062841704915256, 0.53823284997322318]], [[0.35405909981945038, 0.82505482209839309, 0.28218218478547108], [0.95653726216885704, 0.63570005966297205, 0.99164175084462514]]], [[[-0.62877800377215465, -0.25899899718531905, 0.7585073197529224], [-0.79553977614885474, 0.019753092198318223, 0.53073540270313657]], [[0.085635860480336889, -0.28608366515645178, -0.0780377481614698], [0.8934763874672631, 0.85696932691911543, 0.23773858184120211]], [[0.040118754279923508, 0.07098881714244043, -0.88470439033908121], [0.63934999161278716, 0.74325357142867321, -0.99385824518360177]], [[0.49700905494131997, -0.17011026750216551, 0.37905810710818666], [0.16154790130872709, -0.59549207301829843, 0.58127861115170099]], [[-0.61480670172064644, -0.85541681381620061, -0.6832158213714512], [0.95043674344102635, -0.49846488120071775, 0.38531610999340593]]], [[[0.2819073476417302, -0.20268109528973111, 0.59052441968504121], [0.97809938686930287, -0.88383028532574293, 0.13937533217792542]], [[-0.54165251545554849, 0.44790048249166303, -0.087928091140504927], [0.30010045507802174, 0.96201244000902153, -0.12386149424972737]], [[0.30710476558962618, 0.39101188313516899, -0.76863532266727264], [0.054640046167836909, -0.2276873827939343, -0.43663212632525839]], [[-0.68316517630671014, -0.19855828935515896, -0.53486385607056475], [-0.61773348119215155, -0.097454839423679385, -0.75653556318927562]], [[-0.29940862282360481, -0.59494111045869391, 0.042596438420023253], [0.21598634901357205, 0.27327818995690611, 0.34191199219495605]]], [[[0.74519238482513583, 0.73818874757504571, 0.75105326911227754], [0.64254544249370293, -0.67973148610206113, -0.17259442850731266]], [[-0.49046037097140371, -0.40372347706681766, -0.72968690490710841], [0.57239089660614484, 0.3407179020762876, 0.2415542277779692]], [[-0.1573749340331525, 0.2108066862001714, -0.78813146624673402], [-0.012831181229262523, 0.38234854190311163, 0.24257716151257158]], [[0.24463019109993001, 0.70808541793353252, -0.49865107046159007], [0.10058723685764104, -0.34207964656602519, -0.18201024827677248]], [[0.083801030071010585, -0.36479637051436509, 0.92775246378898268], [-0.69452820291999307, 0.9767396906544219, 0.50709414857408563]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[-0.14428388322534258, -0.61159698682976926, 0.21279342603610063], [-0.089767536829079342, -0.17349773047175621, 0.78999938922398116]], [[-0.65613948607565464, 0.69997588267571409, -0.049023321901083161], [-0.34576102045258228, -0.66521547103774692, 0.19212949912263388]], [[0.067132823941548514, 0.17809837382793847, 0.19917380459400924], [-0.52926796605862325, -0.96220953233820139, 0.38022517163266345]], [[0.64355003739189187, 0.89782069647356244, 0.4202875023586643], [-0.21163622853418707, 0.76752181437932632, 0.85172180135242237]], [[0.41564582617205259, -0.91138899156650144, 0.47031518403526351], [0.6242659193669835, 0.48406324506940046, 0.65892892668653458]]], [[[0.16236714262969532, 0.5588715798217383, -0.74102153952858618], [0.53246372112865892, -0.34714977490046617, -0.44613906713176354]], [[0.30627108551584215, -0.3076816659208923, 0.70149808001043024], [0.67383340354539634, 0.087039199976627568, -0.84297211549500384]], [[0.90001449122286337, -0.45463013418328369, 0.14330318903602746], [0.029613403288897722, -0.2537322733027283, -0.90896186893666031]], [[-0.93440594742910354, -0.063426264953595712, 0.54553201159916553], [0.31214586812322809, 0.98839516917909043, -0.22117200388268854]], [[0.0043975481759610524, -0.2753808730084164, 0.94323220959856746], [0.95138455922255227, 0.4369543259665214, 0.48909644528042229]]], [[[-0.60447715092266363, -0.7079389147837496, 0.71301640910165642], [0.47900912012660468, -0.0089655891679201183, 0.073675343677658267]], [[0.16259505900030558, -0.38822297475516399, -0.25155739771399599], [-0.65261317866022783, -0.35193497919154204, 0.72435484326556132]], [[0.37322394369505729, 0.72376175668385212, -0.29931089117382759], [-0.53705566565943585, -0.18854668845608291, -0.87566082605256712]], [[-0.49256730740895405, 0.28575803442873315, -0.54230537981370608], [-0.18824025796849653, -0.47335568615016976, 0.22674741480992089]], [[-0.59353276964787405, 0.16991768032280197, -0.14978119415815394], [0.25366262450892796, 0.86180975183426378, -0.020508352152910581]]], [[[-0.70242514287054636, -0.60689854233651519, 0.36194182251289764], [-0.26782726820621616, -0.054090709183946428, 0.85915007090714335]], [[0.32857813114245871, -0.083828139534896984, -0.05043466092687332], [0.61902466223766917, -0.62323953571040969, 0.10336741362154034]], [[-0.10818560935279509, 0.92756293039545712, -0.41516248232239761], [0.61444666550316862, 0.43695312454060664, 0.84813357751524854]], [[0.5821877965197193, -0.92453777714232954, 0.092222276946870352], [0.95272647070316463, -0.85724729472081407, -0.58442244199028326]], [[0.8089154327667174, 0.49604952727796148, 0.59253813736518257], [-0.80488416406173924, -0.87995844051336314, 0.3028006929075806]]]]))
      arg1=Symbol(shape=(2, 3))
      res=tensormult(arg0,arg1)
      s1=numarray.array([[-0.72347102262969543, 0.59716539698481608, -0.8546402177974084], [0.20951760197021696, -0.44523000955116232, 0.96292158390506333]])
      sub=res.substitute({arg1:s1})
      ref=Data(numarray.array([[1.7588271608533339, -0.3418262996494143, -0.70598139355150058, 1.639533270438515, 0.86763034261034577], [-0.012431115524664804, -0.13152595065259282, -0.3845000114424969, 0.073589873307882303, 1.3099671804499693], [-0.097027532448863862, 0.24977806528299765, 0.36060283556944922, 0.018273590148913055, 0.077746316579497265], [-0.4691181138553302, 0.93818986388680359, 0.97397289217700833, 0.67014583904792646, -1.1634637586960257]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[0.37644481143718755, 1.3433330956171807, 0.57120421831653589, 0.14543909257760235, -0.69713585022843749], [0.68610273846048242, -1.7141321211381397, -1.8011817084327013, -0.41572837471505841, -0.49800545162480714], [-0.41951124957080388, 0.58297990764942331, -0.45377678711796998, 1.3801314606301087, 0.30857703706113321], [0.63169781652691004, 0.26204368970192843, 1.7378710692098589, -1.0335826329003726, -0.28069035747616528]]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_tensormult_taggedData_rank4_Symbol_rank3(self):
      arg0=Data(numarray.array([[[[-0.96640293868982408, 0.13371976364565508, -0.71982092982190782], [0.27742244954287387, -0.59019620586537891, 0.58145711264179067]], [[-0.37511215315304502, -0.83523815471783602, -0.97859685520810991], [-0.24795956726669721, 0.94797336022286927, 0.94717743794069365]], [[0.39176408368776272, -0.27275447413033249, 0.66383262154801104], [0.41646399588689609, -0.49927093979911508, -0.9370817485020122]], [[-0.32604227271567821, -0.48038225899769094, -0.75136815659022349], [-0.74086061746469656, -0.31921918816335615, 0.086950630862623335]], [[-0.55384116424345953, 0.78131953870833271, -0.036282673263538401], [0.086787334450179054, -0.18484008072144076, -0.53825879325980353]]], [[[-0.32803465070553228, -0.2222871031596132, -0.29366021685223265], [0.83326272324027251, 0.57275292809881395, -0.59668962802787906]], [[-0.75621015488882537, -0.44188536197817685, 0.34713651227319886], [-0.78430490674074815, 0.17096728021258278, -0.4705229355284366]], [[-0.18603426163143033, 0.55609953200446527, -0.41762404058106561], [0.83658409864159022, 0.90322237266556371, -0.842484613213071]], [[0.6924923247521706, -0.20003052099126095, 0.11456637309194018], [-0.52269212494901951, -0.33219854735844523, -0.078611358863866165]], [[-0.59749134120172376, 0.99139984881704346, 0.7292013705934155], [-0.40259841826515341, -0.98665490679553125, 0.072402625791759156]]], [[[0.33782202004269091, 0.42742208194972786, 0.078018892237148751], [0.40257055602722547, 0.63297513031004349, -0.36507939975815851]], [[-0.29595237052656187, -0.10196337810795386, 0.58149703030454258], [-0.11265801969436984, 0.87714530854882633, -0.64819371937371306]], [[0.37113555647371266, -0.20593222613049278, 0.36424342988091918], [-0.45606216989407344, -0.53726712182988745, 0.50663420133712145]], [[-0.22957497816024297, 0.64775722949924086, 0.31420441666276133], [-0.18702709566232012, -0.48189952939557035, 0.11539147489251711]], [[-0.49449853100870311, -0.36345379767514263, 0.076736147369951713], [-0.19637587665512024, -0.058146871034945313, -0.95120457738594877]]], [[[0.028494819239695879, -0.38475744412750634, 0.40907017616251351], [-0.66632767984823849, -0.51616146005550356, 0.018741050113934232]], [[-0.60959077799600059, -0.32439879340983935, -0.19058340217015379], [0.44225156333848292, -0.88668603103827137, -0.014297413160680339]], [[0.72838822889145005, -0.5855661494351303, -0.61037639287278744], [0.52101764590313548, 0.89533595275976641, 0.064829460223453816]], [[-0.69407381723035022, 0.80050828678346297, 0.93724075937289864], [-0.29732835518629708, -0.90343001714713811, 0.26016323717106293]], [[0.94285774734067029, 0.24039164825926962, 0.25536609446207414], [0.79928333025982123, 0.78047769474290751, 0.87845621227212445]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[-0.94839372800366384, -0.60934158759543799, -0.72363907604442401], [0.77732791378487187, -0.50755703017574039, 0.54411035330968582]], [[-0.025711943689180616, 0.9573059261428869, -0.45692950063652327], [0.17800972000604642, 0.43923803333777589, 0.69969405576893551]], [[0.38271603096704632, -0.029554056321869027, -0.79770773936627637], [0.20778913253726916, 0.80037043490564042, 0.892161304775553]], [[0.8222919215795037, 0.83333333619277927, 0.615131974550851], [-0.82612587635371693, -0.41011941384829909, -0.075913698963264276]], [[0.67130366480665771, 0.12076619668157629, -0.67061441184210646], [-0.7354545237798864, 0.073025910066820909, 0.76528615770825636]]], [[[-0.3541039185010908, 0.7314532744350013, 0.30882272155333101], [0.12906704941626312, 0.1430086708031213, -0.86797493140062931]], [[0.42920021560089983, 0.36146809714441908, -0.29942170544267177], [-0.30665049589425264, -0.73521205001731227, 0.90786843798174588]], [[0.0047233942451647692, -0.41253156041446859, 0.53238652530575137], [0.7070967740737697, 0.5935068230043421, 0.33204700898418538]], [[-0.58691767391251415, -0.41638367683482191, 0.57231250603239414], [0.41325745096698641, -0.6749406637851072, 0.3442820294343294]], [[-0.82224163184609167, 0.65930082918478794, -0.90168299262043883], [-0.74424691765970907, 0.89103288342963949, -0.42720196936517629]]], [[[0.54143386059420928, -0.027477552581968601, 0.44145402002421275], [0.17552868932965993, -0.23402579039998761, -0.012413908869413515]], [[-0.24618519215399948, -0.86120521958259322, 0.018005884037822328], [-0.92218045226468726, -0.57412208963525768, -0.62695871945668702]], [[0.84274417169549021, 0.51443763501702788, 0.45668137185186719], [0.34165220512753391, 0.1552867831151894, 0.85171670798224564]], [[-0.14853870835083338, -0.74106994695034789, -0.81414381448554729], [-0.48980614863481198, -0.59132969525827384, -0.18299143508344939]], [[-0.93832036615046177, -0.70827920168254477, 0.29677526283169442], [-0.0071032855244443915, -0.96938737597177682, -0.59465681650067514]]], [[[0.34455863041908819, 0.1275437427808559, -0.061096711234324363], [0.55434052135379774, 0.74474922646048047, 0.80210029666309168]], [[-0.22084284250129227, -0.4512912664672819, 0.23699139504254085], [-0.13631344101027643, 0.73340350236222118, -0.57709057445980649]], [[-0.35543066188723449, 0.1002415463835411, 0.10649441765793322], [-0.32891653579639679, -0.67344858891586656, 0.15104066601413169]], [[0.22067153401685369, 0.92157078860624808, 0.85852410886363706], [0.66848389531615715, -0.20828313777445207, -0.89352044956232901]], [[0.62417670810099746, -0.62836052599566394, 0.50252008580369378], [0.84877583736087625, 0.28193097222670094, 0.64416778244117423]]]]))
      arg1=Symbol(shape=(2, 3, 2))
      res=tensormult(arg0,arg1)
      s1=numarray.array([[[0.81970593401846426, 0.81136754604582584], [-0.082132695343367423, -0.87273634463356942], [0.49103623239187599, 0.40001739413809934]], [[-0.67629007956126497, -0.037032506404816257], [-0.72959459152343809, -0.83721565729121949], [-0.99015769917177554, 0.84835705493577329]]])
      sub=res.substitute({arg1:s1})
      ref=Data(numarray.array([[[-1.4893554730392498, -0.21161987174195573], [-2.1812064834842344, 0.052202189061454685], [1.6799728901873336, 0.42904683140311983], [0.051089757816441095, 0.22260301510928299], [0.07315112251095679, -1.450866992432811]], [[-0.78542064011889257, -1.2062092122409633], [0.45845262165674794, -0.60231747831835425], [-0.79380293553903258, -2.3052277992936099], [1.3140247583573101, 1.0130561696674525], [0.70731213666702641, -0.15594708815290859]], [[-0.092464036797364313, -0.92228261891048646], [0.12935975346828443, -1.1986175679591664], [0.69876226057442714, 1.5230598623821625], [0.27671983629860264, -0.11763064619267474], [0.77926152415164729, -0.80433227924411765]], [[1.0644896306127998, 0.99526010500957918], [-0.20463710514750855, 0.42611620073976636], [-0.7243413677547994, 0.1439889189761929], [0.42815008044663577, 0.10121884785646057], [-1.1012737925428875, 0.71957344188658912]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[-1.7768334532503736, 0.33057858909923016], [-1.4577306468652613, -0.81985597585883208], [-1.6834135012811939, 0.0963130197060037], [1.8407339161708376, 0.49551416272433113], [-0.10259592159756115, 0.78635272862497319]], [[0.4691127766039912, -1.663001255293755], [0.019961208252669449, 1.3100825600036539], [-0.94082560729988685, 0.33544321730579635], [-0.29381736832585709, 0.9579631933901771], [-0.89467416486671647, -2.6840700088280047]], [[0.72717063975418761, 0.81877016979047568], [1.5411010505476663, 0.54199089023871494], [-0.31488890091980914, 0.99738645608027166], [0.48320626525209143, 0.55853465608969022], [0.73562120802960851, 0.2829016119173754]], [[-1.4705052434991575, 0.18023499674272392], [0.10092181590617555, -0.78907347173478737], [0.31694424650951747, 0.37086899608056167], [1.1113604934971708, -0.89022013065538652], [-0.60753581565236348, 1.5348615296850507]]]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5, 2),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_tensormult_taggedData_rank4_Symbol_rank4(self):
      arg0=Data(numarray.array([[[[0.66923292453930028, -0.7897608522479822, 0.90778322886168783], [0.30793372346114256, 0.17428819265070428, 0.16352129535578852]], [[0.83009897848327596, 0.46006228114935088, -0.99559554166573072], [0.042841045802832101, 0.37357738687448205, 0.81797296388546603]], [[-0.4636321116102311, 0.063561041048054268, -0.69620854836099744], [-0.60930184759864781, 0.7513362600143012, 0.10837240487676403]], [[-0.81769284516641072, 0.99393017541566508, -0.32171129280832078], [-0.75814571467028236, -0.66265820698872391, -0.28004920308394188]], [[0.28736537897096426, 0.87363139519548261, -0.30177341103914324], [-0.74925613813212433, -0.075517631946504071, 0.69263570316573864]]], [[[-0.26455314981949574, -0.73905872195007061, -0.12737644397872572], [-0.89902632674553673, -0.82941542458738549, -0.67871818024806685]], [[-0.70200004002456495, 0.74731290179540677, -0.16586899080452189], [0.8082677576078916, -0.4527856317768324, 0.37635383648231246]], [[0.47529319468974651, 0.52608820858895666, -0.47891347119985572], [-0.0081550167721269329, -0.80377729041725177, -0.90268211948838961]], [[-0.20530032824135147, -0.54138612080349069, 0.12150505751965124], [-0.49806104125600448, 0.71995595735854923, -0.86519045359141433]], [[-0.82919441087402346, 0.47460977104944702, 0.35553436456498733], [-0.045675661006738144, 0.9200135603704902, 0.53241291130037904]]], [[[0.0035075201859140481, -0.062709746842402936, 0.14067700836188868], [0.50249730525695657, 0.36216548020599193, 0.059559255387105159]], [[0.40365045441034764, -0.62178208222372966, 0.9292134452902332], [0.3558795486257158, 0.57708189192594306, 0.22162208576024933]], [[0.5917236770998433, -0.96331342309916668, 0.89076304825376629], [0.024095995659912051, 0.78999346114436686, -0.63740983199602907]], [[-0.71567544575347908, -0.72163022403470389, -0.51675229494090336], [-0.56395252115071903, 0.50990286007829577, -0.91294079689926777]], [[0.77091199051201897, -0.085041204086529376, -0.42490883637082399], [0.51534763164554898, -0.75305075555893741, 0.84351176543267847]]], [[[-0.5008279340554056, 0.77320058430521699, -0.4478428419120446], [-0.12066543009414765, 0.95121476937764671, -0.082867036386595316]], [[-0.61176285249741857, -0.87632302491436143, 0.59671286240703991], [-0.054795178022308599, 0.73992655530730689, -0.22474983091290812]], [[0.79204594741586742, -0.75702446496883624, 0.0056632159218299449], [-0.37954732705632499, -0.3070570698848325, 0.93844228065822644]], [[-0.42797379541714431, 0.80155562498661359, -0.27932471914791157], [0.84108450661814382, -0.77039170763471465, -0.36190546504635557]], [[-0.41717675462982995, 0.18251884762179205, 0.78914445339108075], [-0.39584666013463887, -0.30182765086235319, 0.56190036668673837]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[-0.69243278687920751, -0.19339975221521399, 0.46666228441619628], [-0.44767432388897666, -0.86460174791521616, 0.26076042611296524]], [[-0.043270986202750716, -0.18543281448354798, 0.68041345253674979], [-0.08867597304603847, 0.32766480682779475, -0.95374171862111368]], [[-0.23435276076113243, -0.66558666765834573, 0.42248944046513448], [0.78050912806620132, 0.65857666423259831, -0.3771366944380572]], [[0.10167730116328477, 0.56253390244497448, -0.62586654604607905], [0.36048884941367132, -0.033001005876930112, -0.068513425035310549]], [[-0.45819302886191604, -0.13457964653198329, -0.70992375288638376], [-0.15580307011238204, -0.78443357803035973, -0.50854087624867983]]], [[[0.64308859208807467, -0.99535047609671534, -0.65845778171880665], [0.61814666197915735, -0.3340021547071419, -0.74638101283123515]], [[0.73613664878528895, -0.96655012644784577, 0.29348828617675804], [-0.14771307830438141, -0.33515526119373873, -0.68020283303747719]], [[0.32806764381210174, 0.59192368310130061, -0.70053942003661729], [-0.35582956902536345, -0.24687875837714146, -0.52059569041260767]], [[-0.12013592744102031, -0.25817118758457802, 0.78939293168790292], [0.75784387716067791, -0.97885408761544612, -0.55922440746125179]], [[-0.72884434892701511, 0.95035957317789199, -0.33069206132017159], [0.3091693185662292, -0.043445457887168137, 0.95510506453678934]]], [[[0.881693850505328, 0.25211994103027524, 0.63654745565569892], [-0.9272068053603626, -0.073523587747597929, -0.022096836877213866]], [[-0.97825478922356757, -0.35856219228363662, -0.41448959567762445], [-0.40652765860082019, 0.68572720673024889, -0.51117323808785531]], [[0.081696076923676975, -0.82334501943125105, 0.14881221170882997], [0.25983346099661708, -0.088891496223295841, -0.26046841591406134]], [[-0.89797437580004225, 0.61145981781215242, 0.6621304926897702], [0.96457167052375592, -0.76715439415097664, 0.32365961555166844]], [[-0.10244387962053692, -0.72339496399615943, -0.1881249285194071], [-0.67233064427622979, -0.53572877132669161, -0.72580517674327805]]], [[[-0.70734044091728587, -0.98371531374360255, 0.29664602957204611], [-0.18407961972950426, -0.99174940053793348, 0.31206568906403942]], [[0.82644969741230567, 0.18562103516684325, -0.22334989247594361], [-0.088958518918109686, -0.30502408178290308, 0.38750782240286985]], [[0.020151631717297391, -0.60530660140707782, -0.52815786960531597], [-0.92563683497448479, -0.57007524586645864, -0.34799780406233238]], [[-0.92855318539663823, -0.67947563927551857, -0.042645805370217893], [0.63269755733194577, -0.60252194510445856, -0.81549798380614735]], [[0.57922997089917705, 0.65312585546048374, 0.9747705553937005], [-0.98712234098290774, 0.50249145907740722, 0.66063321128132979]]]]))
      arg1=Symbol(shape=(2, 3, 4, 5))
      res=tensormult(arg0,arg1)
      s1=numarray.array([[[[0.091056889630107385, 0.85186569263323286, -0.96218520464760116, -0.50874308107591171, -0.013843584425092814], [-0.77671653257379902, 0.17749316092308143, 0.062468652556569859, 0.65119148897319534, -0.73890818928747981], [0.67773482437104704, -0.4894424091206746, 0.63485763296760522, -0.67922971919975761, -0.58222790498349974], [0.0797274721803376, 0.096950744428213609, -0.35490422065056149, -0.99482770084622452, -0.74771623130951115]], [[-0.18997087212311659, -0.092965137600573344, -0.84812557566739222, -0.90558096718365766, -0.21367075693705839], [0.086777074928469755, 0.75925058619740393, -0.65021964814984679, -0.70610928554900498, -0.62448229767793273], [-0.55128293168754205, -0.30796815508195352, 0.7283791902265937, -0.73468307300967073, 0.8268856100185058], [0.92559388483613247, 0.11984199785987437, -0.082869611105773178, 0.74747077353475144, 0.5880014596960299]], [[-0.90840821886314393, 0.898803461984784, 0.22470663418892634, 0.073604073349142762, -0.2818342291489675], [0.30176832429143796, 0.69404095385558562, 0.12731485832640255, -0.4659329383255244, -0.99508937571715905], [0.26362712533895283, -0.41314825598980121, -0.93552168158673799, 0.66705419904381347, -0.46301257740407809], [0.18793060724463961, 0.9337436388454694, 0.60459881909385649, -0.73382506558104499, -0.68592304491625389]]], [[[0.024088396687001801, -0.041721371791830997, 0.15835528089905315, -0.53267140360010257, 0.29031505769073407], [-0.34279648443175437, -0.65781912579674118, -0.5138236060028829, -0.032692982062294318, 0.82730830398440247], [-0.44554608695510578, -0.73687923762392904, -0.21208486310446184, -0.81824087012577085, 0.15562372728388363], [0.26695329802769585, 0.98415714208929583, 0.88589749685903829, 0.68636014880855134, 0.54898774479446377]], [[-0.80127833182371733, 0.88886547671795579, 0.73628639624089853, 0.10102924434662541, -0.36735270234247652], [-0.4627607792759072, -0.83640854345995286, -0.22258703364446619, 0.45334866005044283, 0.77237072650612415], [0.45476745490023363, 0.21080441204795708, -0.64084089879384232, 0.47110948464723723, 0.27495906934206182], [0.22962639863781376, -0.57216859215738336, -0.53688537753857424, -0.11956939424316104, 0.33294908013178492]], [[0.71705707221615644, -0.81779199466098507, 0.50304027044998123, -0.21823669751438901, -0.41504095115832107], [-0.2142783601158802, 0.25121552144713211, 0.8563645762783425, -0.43207832108829969, -0.80878234108081193], [-0.77803612764486352, 0.79721404169816212, -0.91983535828131857, 0.51093773926626507, 0.29164775666613507], [-0.020338143865611835, 0.84395035457678902, 0.81161828329144603, -0.034706455118334922, -0.48341783168055619]]]])
      sub=res.substitute({arg1:s1})
      ref=Data(numarray.array([[[[-0.62864954091409997, 1.4677804377134809, 0.48922202611951082, 0.25943568803567296, -0.13885564575660886], [-0.53564860219297294, -0.15806512344876678, 0.61391433249704996, 0.56878218869367725, -0.64751737494859851], [0.94309687642620843, -0.51918661467742888, -1.3270403853501189, 0.64489571685679836, -1.3194684881921197], [-0.38814193907851702, 1.1592097258774414, 0.68872005905720135, -1.7374100360992679, -1.4394144668265925]], [[1.1808207763771976, -0.56914071843717251, -0.71929907099881085, -1.0758003219073373, -0.29349003798309414], [-1.2681045673790037, -0.32950210384342959, 0.22127637236544712, 0.49411171854682318, -0.24754023552615834], [-0.43911282858850598, 0.56264100268783368, 0.79260561971740373, -1.0070692406112132, 0.70603090240365352], [0.38549338918510673, -0.27527586047033148, -0.43340035055581505, 0.20501763734232004, 0.085219478368916635]], [[0.039152552637037083, -0.42198421764135752, 0.74697771994700257, 0.50387994409293457, -0.30882129843912381], [-0.0065116027216287169, -0.71761884425890199, 0.079713447933037654, 0.29130398259414814, 0.98425851640790352], [-0.003961516546657412, 1.1887466710504202, -0.048673728532701008, 0.71169551617278803, 0.78822204063275148], [-0.1013039923539952, -1.625491345167609, -1.1168525597288173, 0.50784082153375587, 0.72485304396143102]], [[0.34087071938517643, -1.4064816885962415, -0.87733493405066365, -0.10975623645812579, 0.029175295022689146], [1.2508340249016083, 1.3688493984306447, -0.44108365438764746, -1.2390280359331323, -0.60889956658396693], [-0.9326056133467433, 0.42274057866810044, 1.3488562718915944, -0.22434772660980618, 1.0650414587764354], [0.44546607460521531, -0.86388715600651822, -0.52983117556549297, 1.3610692107140139, 0.91504042802155805]], [[0.67345711885765369, -0.70995249712729813, -0.91108595328138997, -0.71923156337133309, -0.58284848554719115], [-0.095083794593158147, 1.2349068819996996, 0.40642220740038271, -0.5981564506880086, -1.6959974162966949], [-0.60582663013460747, 0.80334845628878448, 0.67127646387028472, -0.10693988270474913, 0.75944532973151702], [0.54338216828758357, -0.25884779888684717, -0.41790055237283863, 0.05931490173009623, -0.26548629899284459]]], [[[0.38827688541745453, -0.41582327595824242, -0.24173403881106487, 1.3377032875968116, 0.52285959907562962], [0.94034988615428261, 0.41813070661744878, 0.51313517070760351, 0.35556723943353563, -0.051692337100400221], [0.7459874756130187, 0.35626117745115837, 0.75939702725480929, 0.63579118083845731, -0.96402165615068225], [-1.1457481717968412, -1.2161780163651934, -0.82387935268020263, -0.69009520689414605, -0.59098955211581117]], [[0.59693150081737034, -1.5605341309392513, -0.011698293109262903, -0.89024324001462019, 0.14156891441701205], [0.41186626033537621, 0.26924338643119428, -0.54311486518927032, -1.3018459807880511, 0.23166429436718228], [-1.7903278740065869, -0.20904187539067298, 0.026389748186532613, -0.86523839647932166, 1.2145166035017161], [0.70871157426663345, 1.2387770872618946, 1.351521074383935, 1.9745226362120809, 1.1891296429068037]], [[0.37496450493580724, -0.050374417002711946, -2.0583111107736376, -0.6333302786818733, 0.68353706279013704], [0.10014075870341937, 0.60229146928728383, -0.96327911303941394, 0.18707730377854731, -0.10065650506275969], [0.24626570205534426, -1.0798461932889358, 2.4801109994481028, -1.8620113053170591, -0.10551141602969816], [0.26644883993414364, -0.64800350842199594, -0.81015235233027527, 0.39367821519381568, 0.4467327038536712]], [[-1.2354961426861473, 1.3529205071825836, 0.70000088765744983, 1.1305131431703197, 0.034293272792764118], [0.17210441840521321, -0.85505015360526437, -0.29059133957381572, 0.90847893992193074, 1.2126493816691997], [1.413820891527747, 0.046051523766374891, -0.19825472462997118, 0.92289728746343136, -0.51627373313302805], [-0.44467901571639989, -1.6036145470091436, -1.3387810218001401, -0.68750156022237918, 0.13635519839569116]], [[-0.8451529758994003, -0.046657989648622833, 1.4131864606512641, 0.019304479120270487, -0.76233592064038735], [0.26834996306837428, -0.14578367207208709, -0.040508747919866916, -0.85220976902529733, 0.20472219905471606], [-0.70538333438761835, 0.7648372246498707, -1.5829620484846467, 1.1945170687287172, 1.1117461191595841], [0.62823995830537849, 0.18644029273085494, 0.36761979758689978, 0.75892889121963303, 0.67906853953640289]]], [[[-0.3509433535334654, 0.38750317154755176, 0.4576132352959833, -0.17871592789187196, -0.038176377477190181], [-0.3183268013370692, -0.56786267658739331, -0.22889938784166608, 0.10304278667928291, 0.5438589294028866], [-0.031489629825946816, -0.28697686013094653, -0.56850332314593466, -0.072584601548984856, 0.076120322577258509], [0.18476814624232238, 0.46176271065003605, 0.38806418668974396, 0.14592773139448062, 0.231665865392189]], [[-0.9841444554671559, 1.5536999127450888, 0.94050100346642784, 0.24648275482317403, -0.33527311810674321], [-0.52360516863133111, -0.41663671985974704, 0.42629214895709128, 0.42317513139575641, -0.27371991363296488], [0.79275902193149439, -0.35388608731552168, -1.7150820567149661, 0.89638576524213287, -0.90070394113847374], [-0.14569894169479844, 1.0393570524462801, 0.65538944979499236, -1.3806382141715794, -1.0244173565238521]], [[-1.661777902150297, 2.6167058309247295, 0.71265770304830345, 0.84297017478507541, -0.072066804922863881], [-0.51164589018370443, -0.84487866996830063, 0.042658273922849155, 1.283259808029529, 0.42358232040888855], [2.0113746087086688, -0.72033580445925993, -1.0843837172703874, 0.92678133595728385, -1.5184359112324324], [-0.47625914822214144, -0.19257047814909073, -0.51174436364749643, -2.0181742597599532, -1.0354747177124555]], [[-0.53544590531303804, 0.21632793901012193, 1.0114113995088183, 1.5307081199236541, 0.33760698875971995], [0.49029787012857606, -1.3184261757591078, -0.2468151813615781, 0.92834295275782286, 2.1593203003610659], [0.97000931827805537, 0.58126180643380698, 0.13605492933840835, 0.90678892281788404, -0.15457573349478615], [-0.83700339602341101, -2.2556260555875673, -1.5129533336455099, 0.13542366956281729, 0.76675535561140595]], [[1.6930061072448064, -1.0979691873094493, -0.8136469470588692, -0.88113578368520118, 0.20340896960936072], [-0.74330706240425892, 0.28011569291731164, 0.67453123779916224, 0.037332784193084334, -0.93120459220687613], [-0.77101855208291703, -0.041612662372082609, 0.42238489142680324, -1.0900510786292736, -0.20327718711273554], [-0.14960617655698757, 1.3177301570207338, 1.022004718723033, -0.10420106636882398, -0.71054964841498913]]], [[[-0.61018011974371422, 0.017262765311032269, 0.36505781002397036, -0.29990588235719157, -0.38212875193141682], [-0.060111952597758866, -0.54970742718116039, -0.81174502801621173, -0.19245236521196932, 1.0347437642762918], [-0.33292725980013455, 0.41540411755973999, 0.15643348086601672, -0.022095822449908833, 1.3569000426110565], [0.77947395918387141, -1.1070087681111505, -0.84194104234077283, 1.2111405485941942, 1.4268276165418021]], [[-1.1866537413759464, 0.94043520390217472, 1.8890090096473438, 1.3017227742352757, -0.16690201614930855], [0.30372424357968625, -0.99908555084207384, 0.278546066568652, 0.37672254466041255, 1.1134409676747647], [0.76157041510952728, 0.33995488152914971, -1.8407367218750124, 1.7359759256881313, -0.5153447522756045], [-0.58790301716493587, -0.27412182729242807, 0.022299927633193717, -0.60259159929928929, -0.14222924613622984]], [[1.1206014907249129, -0.27436400700968333, 0.067118471977563154, 0.24936560684151765, -0.23768888911241379], [-0.60806498608682835, 0.31199188813779849, 1.6094472605032095, 0.51540096279921555, -1.4282963578461518], [0.25494903094857746, 0.8062297267946783, -0.63980393258927126, 0.66735880027610506, -0.95954613930261445], [-0.82740109656402105, 0.5855070059710199, 0.37532918368928014, -1.6143202579713911, -1.8055025641248557]], [[0.44055037321974028, -1.1140533469576481, -0.94688767324657008, -0.97557695119870269, 0.59076952231955204], [0.46341438706833987, 0.33892082298267523, -1.1540972392501581, -0.93491427895474677, 0.48714004725295434], [-1.2490897129521672, -0.99267836047329516, 1.2216590022880705, -1.720581274715381, 0.85482155828430151], [0.71028854689865417, 0.75687298726292163, 0.78158331766981637, 1.9118376830188133, 1.3631095240643185]], [[-0.15429811267662663, -0.3743472228669702, 0.42167090235488297, 0.16276993539245876, -0.49288634284596061], [0.73297108663225419, 1.266234913739021, 0.70750185290178702, -1.1349053194199774, -1.6060588954647572], [-0.57338710377436608, 0.49795979541700192, -1.109645899918043, 1.144467612960284, 0.047713947951048344], [0.097574099047721533, 0.97562343793716044, 0.87746422759090592, -0.28275307742453226, -0.71148204759228917]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[0.41875268640782021, -1.1155274711319847, 0.35882486697132698, 0.65596352408217351, -0.00119084590838546], [1.1595548705918497, 1.1372978651425747, 0.78769078386822733, -1.0217774683985725, -1.0810078965831256], [-0.63625721960938231, 0.56116815188722624, -0.60787683107510426, 1.015913175063365, -0.20418493387418701], [-0.46986232313833942, 0.61961858849096152, 0.82315414920877883, -0.011093804821997538, -0.57576283174379339]], [[-1.535380476669113, 1.6668476456303427, 0.099240771121590854, 0.52849976981224089, 0.09818614205856141], [0.30597880243024078, -0.1315590915223647, -0.63962503039196084, 0.34926769865184781, 0.4217863944109882], [1.1828411704876747, -0.82874519363952714, -0.11296667867405341, 0.35911960646005842, -0.64504044441691222], [0.023750630205751071, -0.47074732522203566, -0.58644951168670945, -0.66180422236433467, -0.021922186865311333]], [[-1.0580207651826543, 1.1032157697135609, 1.3037118510928778, 0.48615058424377083, 0.16757951115097497], [-0.23974507301078576, -1.4127336777474766, -0.39867413542400654, 0.55651692383933027, 1.6278060303052664], [0.56464963789988154, -0.59183787080691208, -1.269501515347131, 0.40892184829569855, -0.41697895005036101], [-0.18809227166481948, 0.36505301995368239, 0.42554617431495478, -0.10434547827069598, 0.32414523112063864]], [[0.45693423046353471, -0.51655546900540439, -0.71724604022363103, -0.78761797055164551, 0.20000021941115509], [-0.31264788772600077, -0.21597156615817426, -0.67565561748583902, -0.036530431635217721, 0.52452935219711405], [-0.52851674923987479, -0.29164541001171362, 1.0675155595399695, -1.2453531796029405, 0.72278081544811079], [0.50121415528073476, -0.19128814384998452, -0.17963366527546748, 1.0323517633732957, 0.90407819159035407]], [[0.88888890349913574, -1.2907645842936117, -0.46257413472412573, 0.41744540951766174, 0.68917668886082462], [0.6553583148451243, -0.045378138728038142, -0.21233656620149938, -0.0033653589780580084, 0.80557094643232507], [-0.31515130753076043, 0.10303916672683477, 1.2787511784811416, -0.56536829441580161, 0.095945833937933517], [-0.50588909519289327, -0.85712693832940756, -0.38506756494039945, 0.88069548992985014, 0.64954571177926612]]], [[[0.59311477318742623, 0.33624537520052322, -0.44604212602485255, 0.3256130921841458, 1.0012831432113993], [-0.68197495138115316, -1.4133422087856171, -0.27891020286288848, 1.5792637682644828, 1.6587038306688839], [0.96438118711576071, -0.85711188859684706, 1.068768995987244, -1.1892634383783529, -1.1059098567559336], [-0.89026227429703275, -0.50221716256475157, -0.42269436881422606, -0.41045300162268522, -0.025500822172076276]], [[-0.2387102618556817, 1.2452525922076347, -0.43492596723933202, 0.71565417478238857, 0.47616657324964379], [-0.21559344836595087, -0.19288393685131591, 0.27981883831041354, 1.1718979706478319, -0.063323359063992557], [1.5517371600448118, -0.68795676612753964, 0.36054584040374948, 0.021303479122148916, -1.6772357263962903], [-0.88334606635187285, -0.29808647095939944, -0.50670144231915248, -1.707868791098166, -1.1839247118816851]], [[0.36975074201149549, -0.18406327144588774, -1.4751048622435343, -0.47628817442545823, 0.26987500159190664], [-0.067075441078477002, 0.33122640008412313, -0.66160960737182362, 0.24672552616572499, 0.021027521847337027], [0.16265255263787426, -0.25830312733956773, 2.0073293512847035, -1.216151979389021, 0.34771395858819654], [0.30129233958127044, -1.1996733657893817, -1.1942382926055752, 0.43350819792414602, 0.55738773122716057]], [[-0.27739122724365461, 0.18681169706206641, -0.37008433798879176, -0.027515591829227595, 0.64604800971330056], [0.62214075522418399, 0.51024296605239039, -0.38955312025237793, -0.49064821100949185, -0.21230064719820513], [-0.078698106841989024, -1.3984359198821954, -0.021853032417508467, -0.5691333692228816, -0.82333327047164262], [-0.11127694335613704, 1.5284530025750183, 1.2843250145267917, 0.0038663347407650213, -0.24296277212715667]], [[0.7806205884769013, -1.8390483857374753, 0.31837689352269566, -0.89168719620534675, -0.39046528842468475], [0.25824684165606104, 0.43558022016387837, -0.036844359266529181, -1.4340784320794597, -0.2761152802454338], [-2.0056726122812432, 0.7251159207787673, -0.37738858409037945, -0.20919319439766348, 1.6780293658798053], [0.81252341288028296, 0.86963995639039859, 1.0523762669595591, 1.8623586123273674, 1.0241610940803896]]], [[[-0.52512284661293285, 1.2911798117889908, -1.1312238222211515, -0.13872732186727985, -0.47847923972621315], [-0.11425616036742894, 1.455585903483972, 0.44605002978591746, 0.10606777314571074, -2.248358681919977], [1.0232457490180293, -0.12204730802432852, 0.411973945601668, 0.35326146943619641, -0.77055773944264461], [0.15932818481531205, -0.17903037517541859, -0.74882475593054754, -1.7826353843715645, -1.470455257712622]], [[-0.57022604794523546, -0.12803907951133814, 1.3356045767009259, 1.1892602491989317, 0.049207147307165272], [0.53519381773729857, -1.1680859205095073, -0.26223789097791217, 0.35430824212808804, 1.9659502109548364], [0.31608564900520719, 0.79707239983019651, -0.37748621370409374, 1.0459147112584162, 0.44119025232910025], [-0.42843855083360666, -1.7486838675496983, -1.0168755484682024, 0.6660676983778655, 1.0571736559373388]], [[-0.080616592556229272, 0.4030451940473449, 0.49780260221088979, 0.62445372191456661, 0.34904656866901257], [-0.082117108154768359, -0.66935044656572884, 0.2226261622789793, 0.62898402680833521, 0.66268448401400615], [0.59495636442097988, -0.26575666464391889, -0.44561243004769646, 0.26110592855740272, -0.85725011063759204], [-0.67335431476479546, 0.13495710615936327, 0.19571711515236445, -0.60789401925236064, -0.40832316066718471]], [[0.070610504546039898, -1.2134993827449483, 0.24492155711834296, -0.71009180115172221, 0.12268299026130963], [0.90534618314690696, 0.85286170888530322, -0.41706983053679514, -1.8441885762021752, -0.43350385604959618], [-1.801577167150112, -0.63682784644036516, -0.75480940935112883, -0.38291713138486355, 0.75542709914719897], [0.6935588787688306, 2.2658638131797479, 2.197420439201931, 1.6070288380762154, 0.69445056451635667]], [[0.19161873629960746, -0.043687840856183047, -0.19619931077994551, 1.1557679249088055, 0.51185915723118436], [0.59393679950140899, 0.010039008723477211, 0.2831667806917505, 0.62445217467437475, 0.33165755317843709], [0.90039560462927248, 0.15451690331643442, 0.73758115723049533, 0.40245968908454638, -0.91502852943774349], [-1.0008287997711218, -1.2399809282395617, -0.91450272775191965, -0.67296586766902466, -0.41632364038823255]]], [[[0.86699537594440246, -1.3735379185289385, 0.9791849911505196, 1.2022768481635473, 0.31773901423441864], [1.0087331002182311, 0.36244448491598125, 1.2157888809389679, -0.48264768289578219, -0.32889889015446561], [-0.47067762418283488, 0.70195905982966078, -1.055552010820235, 1.2438896752926194, -0.74926192757665222], [-1.1943858173347279, 0.740176287011856, 1.1345683483978897, -0.26789560801197509, -0.83513008421498403]], [[0.763015770872152, -0.09829449720665584, -1.0465559145384322, -0.67298402461808449, -0.062761360490985185], [-0.60459610701432109, 0.54359941926199351, 0.34794835957588355, 0.20836667536231318, -1.1269316717698281], [-0.0016720489454453147, -0.05921033944405768, 0.72672433031461692, -0.71962618339233075, -0.2089783104714599], [0.094055618133699712, 0.3078319695826357, -0.044266636346875443, -0.55756406454787466, -0.69332639055282397]], [[0.78156606571736598, -0.58478277479911034, -0.36606920816321398, 1.0104394560619858, 0.36303602549618869], [0.42812175960096538, 0.17572916309251266, 0.63209116863271708, 0.60880261752803011, -0.035964656912195692], [0.63203298448868339, 0.6792390491995981, 0.94774560250919437, 0.38973182490623381, -0.66999961649517226], [-1.0288469813414676, -1.4422373091843321, -1.0727096725738767, -0.63999982553531476, -0.5384541765762979]], [[-0.0034609329022435853, -0.66121549679979008, 0.70647197051571498, 0.86465566416886364, 0.9135423777414462], [0.88607114591873493, -0.82741385561642677, -0.5109714532006584, -0.046490074451996377, 1.8704984482568854], [-0.18738849764067378, -0.56201321452181863, -0.042459907604569302, -0.11676839257332516, -0.30651778712737798], [-0.66383267641886945, 0.067904250154008361, 0.58218905364976004, 0.98176142754641393, 0.86497370613208457]], [[-0.90952358918605802, 1.2564062120779282, -0.34623514039528513, -0.38198673547028894, -1.1676541341349307], [-0.13477693833344015, 1.6702473557802564, 0.69671278458452901, -0.56353579917186958, -2.7687004189519566], [0.44381189844782565, 0.47261701501519432, -0.78880429746602743, 1.1589288460302614, -0.0712973882787723], [0.67233274795136388, 0.34316278987928245, -0.27843785522766828, -1.5638848716730525, -1.411654155248943]]]]))
      self.failUnless(isinstance(res,Symbol),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5, 4, 5),"wrong shape of result.")
      self.failUnless(Lsup(sub-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_tensormult_taggedData_rank4_constData_rank2(self):
      arg0=Data(numarray.array([[[[0.82407707530141661, 0.1479860997906679, 0.6238567589061299], [0.92195448426349191, 0.98053353234413865, 0.59260077258105648]], [[-0.59876001788231581, 0.13358736062375054, -0.58348537342908169], [0.78708227171007072, -0.91407897723130471, 0.98467151642749506]], [[0.36834246570470408, -0.40910176849132629, 0.35814303546622872], [-0.0474411295194066, 0.32929513496147456, -0.43251480774841067]], [[-0.87887633803628495, 0.027437783523950987, -0.92067078544581404], [0.31734719528762878, -0.19799757898036385, 0.63927964552066507]], [[0.19502896250955404, 0.55923722308282087, 0.68951305296597298], [0.41972083494619206, 0.31665097086964922, -0.94407920192627048]]], [[[0.91074543670890185, -0.31276800774855618, -0.82080169331479413], [-0.3280051274329896, 0.044239129065812399, -0.86298873335533388]], [[0.44665670935138935, 0.1166722070059647, -0.86877080957392261], [0.46960532894787188, -0.5062928110154381, -0.27326011328765731]], [[-0.41505116750751747, 0.9950259783002342, 0.76117200674104502], [-0.40344950963528148, -0.83166693964358851, -0.17734147408656531]], [[0.36290366129098972, -0.59652834940510657, 0.19690184168311986], [-0.59302515791868937, 0.58405018410931109, 0.28081145603117896]], [[0.39732706263414519, -0.44509863753203671, 0.75867015642727842], [-0.49614110309134185, -0.78075753097333767, -0.65757624105258228]]], [[[-0.28951365287492425, 0.93933232900181496, -0.91263996448958506], [-0.9827710561895433, -0.92821702964321107, 0.64283934980080981]], [[0.20107642864866104, -0.26665956759598508, -0.24569568685438559], [-0.79877025665112433, -0.32739928955283215, -0.026224633943902065]], [[0.86570244025385668, -0.85331978212218851, 0.092940869329810827], [-0.87344740547542243, -0.96239951383628952, 0.73580615962253315]], [[0.42193865465798219, -0.04448694641916684, 0.80749248105642191], [-0.11741619046658247, -0.23915722779962589, 0.51866307089841723]], [[0.26460012401625943, -0.22095723890759422, -0.27524071396939553], [0.78307737279627543, -0.2306451513741159, -0.22038380281056735]]], [[[-0.18185573286043621, -0.26589333746352706, 0.44100198266822566], [0.69628142554949868, -0.65397543438779482, 0.32438977746368747]], [[0.78965823441406857, 0.10007989749708046, 0.67899213541541914], [0.754404745949389, 0.045848807284645687, 0.75361906528112343]], [[0.18051747727266099, 0.25143439106138121, 0.75659657775423317], [0.74561276948879152, 0.45701983250801081, -0.11190718441761582]], [[-0.3136519333369665, 0.65633451348490301, 0.23213977627997084], [-0.82871711915997293, 0.43863822672355113, -0.17767963993870617]], [[0.11910077862777335, -0.94798028655943467, -0.074764876941115999], [-0.88624933238176618, -0.020502529527590685, 0.27597691211720843]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[0.19010792374561292, -0.37087372612606151, -0.42107678272125804], [-0.89342956455879263, 0.02179721879913421, 0.99656532227944106]], [[-0.65380075478712252, 0.41572839469140477, -0.25323432981066185], [-0.96637844053199018, 0.92572949627180723, 0.94876186511108784]], [[0.33123929046264777, -0.087940658670451421, 0.017704138023002747], [0.22748107705560794, -0.25056671109775253, -0.063444687426032376]], [[0.2857239504858784, -0.416056850444112, -0.44560586888792342], [-0.18350412463207033, 0.61836109253156701, -0.9866514623379663]], [[0.76560999132842467, -0.3401704682259119, -0.9943351741100166], [0.8178122575912643, 0.40721655238245136, 0.90434452538145904]]], [[[0.15539179354044319, -0.44744477686808426, -0.035626444098136201], [-0.72514721023147666, 0.26073612470155649, -0.14445961605250424]], [[-0.16017937026178797, 0.6321272063055825, -0.81571905644913412], [-0.34881676883169499, 0.989661042717078, -0.92531179095835836]], [[-0.02145619132708565, 0.87137984202403196, -0.62218440596897739], [0.45316936755520332, 0.69122362615377031, 0.93493077905514754]], [[0.66923565337957558, 0.37912361471199629, -0.5439958365569082], [-0.74915898464711472, 0.25401610550243969, -0.71491475915337266]], [[-0.18809920723367424, 0.47165790055493462, 0.53792524580892898], [-0.22893430674125659, -0.81028706251482308, 0.86713093214775494]]], [[[-0.22521599736116249, 0.57193792473711791, -0.20638099083902195], [0.45826369112724796, 0.7355146478654051, 0.063708126674743015]], [[0.74373127529733196, 0.042805155725459398, 0.24423888780632885], [-0.89535972562239285, -0.90904417214756772, 0.15101756339712136]], [[0.1037382053172442, -0.6868595370928241, 0.40956381671418352], [-0.2076655485339578, 0.53167070032784269, 0.48674043277062062]], [[-0.82783215457651194, 0.42623299762112965, -0.67479593793054304], [-0.67019932535023807, -0.72038420193504216, 0.6471512142695337]], [[0.065786391448529935, 0.68923678151478041, 0.98830764114560665], [0.57238060524079359, -0.039227944315848973, -0.86460794943283936]]], [[[-0.16616876662131563, 0.05086634648344357, -0.76946680706161175], [0.056407200544621672, 0.26825613256965508, -0.14681253068671474]], [[0.7471309166596829, 0.54126087430240499, -0.92731048218263035], [0.91099174978709874, -0.18144122782502636, 0.57811383722534315]], [[-0.60563363310110563, 0.045010188747716784, 0.11774299951594558], [0.96107380625436956, 0.70478725973014544, 0.39529654375772494]], [[0.69557647292047009, 0.063131645760165389, -0.023317554263431628], [-0.31033658635483286, 0.79068568847499998, -0.30445765188233609]], [[0.18786939819363369, -0.20996218732102956, 0.51848922734179315], [0.53889836425631876, 0.13244521302713408, 0.22490566649784594]]]]))
      arg1=Data(numarray.array([[-0.27675285190148857, 0.28884591757439448, -0.83251735240039926], [0.7233488021851191, -0.78378949092931682, 0.54168032555653811]]),self.functionspace)
      res=tensormult(arg0,arg1)
      ref=Data(numarray.array([[-0.48532910407281732, 2.5092141068413962, -1.044966807506684, 1.7486575712398791, -0.92244528353585098], [-0.39846180511172685, 1.2218493564572501, 0.032541582523134466, -1.1712899947949851, -0.97326202929144023], [1.4760885596067592, -0.26350883397751657, -0.042355230565184143, -0.41840845907852137, 0.71992899047211401], [0.79833405287072123, 0.16307734319597347, -0.48669986725440278, -0.95637391322393694, -0.72004512069184268]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[0.06728964833965434, -0.39883545518855634, 0.19476125994676144, -0.98012872270702922, 1.2799167865528382], [-0.94973561847534405, -0.62320757930551862, 1.0680712004461701, -0.75107226142783656, 0.67966424297982386], [0.18885213974701792, -0.25015364246241834, -0.87135021899331178, 1.3443906667502925, -0.66547044145776024], [0.45229496950296294, 1.835901859592032, 0.43949985377881656, -1.163986637167604, -0.13646209634466333]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_tensormult_taggedData_rank4_constData_rank3(self):
      arg0=Data(numarray.array([[[[-0.1365408643524999, -0.21619810902741343, 0.79362284172038122], [-0.96917613941560221, -0.84966062916992868, -0.4779105616799102]], [[-0.10433920174175104, 0.031619527983271833, -0.41272622845683848], [-0.74583440818487379, 0.70522810405562542, 0.88034304090712956]], [[-0.11324309407250044, 0.72475825486442513, -0.98193644165941518], [-0.89849926960761062, 0.11650239542915153, 0.49941507600712853]], [[-0.4906402155996461, -0.47765246205583067, -0.12577393266508863], [-0.212447752082912, -0.13280264075341242, 0.92751655966349333]], [[-0.48733683602580391, 0.1958030267477946, 0.5835727611956989], [-0.27312711839606485, -0.59471523977673169, 0.095667701478681311]]], [[[-0.84931842690808312, -0.85963354436091666, 0.56825699522066375], [-0.39575541306849948, -0.349021145958194, -0.71793101363522682]], [[0.88355846241785629, -0.59375831760406572, -0.4253019942974603], [0.29174346015086883, -0.44803356347792067, 0.061289155308760224]], [[0.6579215095852291, 0.97211221968785888, -0.12734044746099382], [-0.77126313220218101, -0.040094401621784348, 0.20265435173439306]], [[-0.34797789826052528, 0.94182977979372251, 0.16357878538619541], [-0.77724520485443738, -0.62262508061515476, 0.73424467110328839]], [[0.3639824418374018, 0.13871172009736044, -0.92019196928319547], [-0.75445947255146151, -0.29299635497100351, -0.32619001425829586]]], [[[-0.70722407452668223, -0.83692272770222198, 0.91997699064208205], [0.20756708522183476, -0.93083815566575567, -0.86028654607806532]], [[-0.55294486989127511, 0.39937946304577765, 0.92351578608577833], [-0.38573353239840569, -0.90738960119791301, -0.93842915208673316]], [[0.87570192958416992, -0.57429860110232545, 0.731757882835121], [-0.57402532373057125, 0.68757789141170167, 0.91166371928294065]], [[-0.51016095201115852, -0.08461884368810213, -0.94559227148532665], [0.77568894662802701, 0.13557894883189436, 0.80092087576118876]], [[-0.7296767337798562, -0.91528000255929931, -0.6374478883528083], [0.21066381277690027, 0.50123548648286942, -0.6482246950861934]]], [[[0.19093426549817627, -0.016560767763859507, -0.60119958469949375], [-0.07795591842992966, 0.73990386129409957, 0.99248073490585642]], [[0.32941750048261209, 0.87033040850095467, -0.6622879032708795], [-0.87425531981460836, -0.95449942204733773, 0.52790712542579099]], [[-0.57357800233589185, 0.99272733744673336, -0.52814615625960926], [0.66214006928035829, -0.15918480522259082, -0.50965272696645902]], [[-0.67695165280774594, -0.96269905970653857, -0.72306954653391342], [-0.063157381762115161, -0.043692294044653135, -0.079695337403643318]], [[-0.80323131818082216, -0.81815797631693399, -0.12565877065327435], [0.58497594362225547, -0.53117785235338721, 0.97121260269817089]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[-0.83862832370933371, 0.53282716615970394, -0.46627614037021892], [0.77143744230993105, -0.39972394335533767, 0.64720413502399121]], [[0.25043121761543374, 0.79153465866877259, 0.73617202058665887], [0.93874691293671675, -0.71655499881217, 0.074784669475485899]], [[0.37766265166159463, 0.64125844428357426, -0.19009974557910603], [-0.10672399262155974, -0.2526443920843171, -0.93948366495603008]], [[0.64338650056285562, -0.294380687202213, -0.24357422389529648], [0.35673711402009634, -0.57900703052343183, 0.35421285123963675]], [[-0.24968535538035308, -0.57156661195190028, -0.69792560233982415], [0.76340402028443588, -0.22227930039630639, -0.22997184497434087]]], [[[-0.61624315937417129, 0.3126723210698874, 0.14303762469469294], [-0.77176139492526907, 0.68512425253850617, -0.42029159576236408]], [[0.1227890772732585, -0.56429333016578731, -0.068081598651697384], [-0.90471142425348328, -0.044816439855678736, 0.27568424023106575]], [[-0.8450643383438341, -0.53854080323842979, -0.11616538119265796], [-0.3127648436880317, -0.76210376516855804, 0.52763355782025245]], [[-0.20216866399869748, -0.55411646625472666, -0.23747089506833197], [-0.2123893276290838, 0.70381649683896685, -0.59906655422784905]], [[-0.82499006566459476, -0.70801762113106981, 0.38667795727854881], [0.66715861404990751, 0.9771819419935841, -0.082333181690180446]]], [[[-0.89865890354056788, -0.31726921289706089, 0.068316420713272041], [-0.25944595465419762, 0.13787853202137734, 0.83786646799749276]], [[-0.71946521645473016, -0.256895223914543, -0.20679076629090942], [0.27945889447016659, -0.36871061685161477, -0.47296382180474317]], [[0.58309477392522324, 0.96712663963703149, 0.16134265973923601], [-0.61793224022166759, -0.9855261425565236, 0.1933582511838039]], [[-0.86849487524176339, -0.44948864792477328, 0.014295243106549504], [-0.25915797967666809, -0.64431278660608138, 0.6414264235974354]], [[-0.837425902908566, 0.71650645578232197, -0.049461526514114729], [0.15079069940642542, -0.72122037194509914, 0.050680096535054675]]], [[[0.76856258091121221, 0.95330353993657591, -0.097255220907854101], [0.2502440438110296, -0.51453554689734871, -0.55043262624324818]], [[-0.33307075918712936, -0.7102184743863269, 0.033214102743607921], [-0.52044958478168191, -0.93094947455455523, -0.37941466851903383]], [[-0.82396795028352421, -0.49998559803781539, -0.83520127198642991], [0.9878286065464712, 0.042287507798826285, -0.90548009126075835]], [[-0.54866879421342762, 0.93692753718423849, -0.90452975511992406], [0.76637967749758951, -0.36812026244651275, 0.5583707516766061]], [[0.24698206073379092, 0.55514978302087048, -0.98175202932969419], [0.36928833052473586, -0.092892036374849773, -0.36523143246725098]]]]))
      arg1=Data(numarray.array([[[0.89283467907656222, 0.52204420852329525], [-0.21358943406298692, 0.91144464034373573], [-0.82826896694032337, -0.071359776781654283]], [[0.93361908931409854, 0.40370601341875312], [0.076132310985010276, -0.96063261701384328], [0.76920296821840561, 0.33404773911986996]]]),self.functionspace)
      res=tensormult(arg0,arg1)
      ref=Data(numarray.array([[[-2.0702021528092764, -0.059661188423056982], [0.27646495658446657, -0.68068452747063801], [0.11156450068804707, 0.36371280863596167], [0.27312820688180445, -0.33087153671829944], [-1.1869737505023319, 0.37540600089650011]], [[-1.9936531986975492, -1.3317518201731564], [1.5533678158959598, 0.51907594493090026], [-0.081981751797207625, 1.0334262256741287], [-0.85560852253737196, 1.1947010826687507], [0.07992465816617278, 0.25002666564038667]], [[-1.7534779511279404, -0.50704752120465679], [-2.4949634008255539, 0.41191368781226595], [0.51610915155361148, -0.70621236038514257], [1.6963796964989877, 0.17447983108564472], [-0.19178463727681971, -1.7826573296153478]], [[1.4189334821041424, -0.28322773739101043], [0.1739525318588368, 1.752816530992934], [-0.072658219544993352, 0.89305103114587792], [0.076519279338274987, -1.1893943259095416], [0.81444091017751652, -0.085204527717212541]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[0.71126751044857972, 0.99273363690440453], [0.32418543672518668, 1.8919486453508141], [-0.48384957782370397, 0.68097457932952166], [1.4004963676901698, 0.90349985840118519], [0.99613386629862766, -0.15659633876952517]], [[-1.7271210141948485, -1.1570446712269857], [-0.34946338444326697, -0.67545612833398294], [-0.48742659224524071, -0.1416300534476132], [-0.47097132477145198, -1.5556103534431802], [-0.27169180029352052, -1.8004735196741213]], [[-0.37841016380101555, -0.72049115198284874], [-0.54718282416393738, -0.28595969589938774], [-0.3228078917866285, 1.9362267486392768], [-0.48887737301901346, -0.13550555398921102], [-0.73489746570208203, 0.99004468683422553]], [[0.33420266915306329, 1.6884810371401708], [-1.0218160644470091, -0.26612344298875878], [0.29187289107562686, -0.770561101595855], [1.1761868664435418, 1.4816181598039235], [0.97186020757881364, 0.82129575985501613]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_tensormult_taggedData_rank4_constData_rank4(self):
      arg0=Data(numarray.array([[[[0.58969825756393446, 0.30137103876412619, -0.28677823747409437], [0.035546788111773919, 0.55103873433769768, -0.36972867100853946]], [[0.24118255212747042, -0.39848072030884607, 0.63934898757943071], [0.33955225125138511, 0.26268925490561301, 0.89512610593563635]], [[0.079572654313762703, 0.51348403527223496, -0.14294556661492663], [0.83094627036926405, 0.94479158905944383, -0.87216560688159128]], [[-0.17596385360340872, 0.39892859811161419, 0.15481186251319579], [0.57292015835807408, -0.09059475096027092, 0.52886388431014963]], [[-0.86882921792895718, 0.32771939796344141, 0.75398642870540256], [-0.35804211323170843, 0.061866953102932332, 0.63933442035565591]]], [[[-0.75690363710019337, -0.12125714331677617, 0.10826455102990051], [0.60590978091545544, -0.78425543382079876, 0.64006500801130772]], [[-0.42273310471511105, -0.19802632257174513, -0.49250750174972846], [0.049658176702057855, -0.37432802860484449, -0.49954478248469258]], [[0.85625405984455316, 0.94260507420694739, -0.36637302137180661], [0.12937371401586861, -0.79675658492302404, -0.72188666167092985]], [[0.58930842813238504, 0.49439385528009328, 0.81949470710742611], [0.74812354532850711, -0.89920833217159024, 0.24803546497722118]], [[0.75104242834200008, 0.20865149687223927, -0.20598370516882603], [0.035945078431336652, -0.87704011631559742, -0.047715097702531351]]], [[[-0.42502513746064485, -0.53328106062518299, 0.66131722212853328], [-0.10365938644736472, -0.82905965929536518, -0.067246838187247526]], [[0.18554738101572132, 0.99879407135920917, -0.32918401903831906], [0.59510538893625919, -0.87583498877416499, 0.5865301268012908]], [[-0.82961769264215102, 0.055259694445830565, 0.48200548131281584], [0.98483588966884139, -0.69882386584456313, -0.67016017077389267]], [[0.54126171054202699, -0.10196250539891794, 0.18652207253837938], [-0.57942436263988228, -0.02865913858036806, 0.87925376850526482]], [[0.68012673919299216, -0.05145759215430834, -0.64137371265566756], [0.76322524050845386, 0.23411082569913577, 0.72112095234088924]]], [[[-0.792111523337649, -0.44460964125407143, -0.27779353803200268], [0.79620787407788352, 0.52318412969846539, -0.9687806623270554]], [[0.47387035394286392, -0.7805941304252364, -0.19197491453794657], [-0.7681123607260707, 0.36628984956141952, 0.90787966812828791]], [[0.28527278083424901, 0.88663595323628708, -0.69311750236821656], [-0.53242908650983733, 0.35522953657876455, 0.53692075932899708]], [[0.11881748254479629, -0.64650134772208911, 0.36191092492594068], [0.16420005354371825, -0.90433002019164976, 0.19060665744013527]], [[-0.0010828662829758251, -0.55235962259969029, -0.14292268720483747], [-0.0022993852703590001, -0.13022875683101076, 0.13058517076378418]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[0.88218498726938654, 0.88941961940861813, -0.53244666571520249], [-0.75544050584500377, 0.18529998895201416, 0.69911314347584952]], [[0.86176784489387925, -0.33279364560399327, -0.28798355128379072], [0.047163001468238708, 0.85443456555508224, 0.2240950338394514]], [[-0.86699711436156668, 0.51720235388104974, 0.74319635185116439], [-0.096102483694890051, -0.46694875501051047, -0.3002696293918361]], [[-0.77270612514555248, -0.79978114055169813, -0.30592139260475859], [-0.035119771924174703, -0.90063414048908408, -0.16587098648925025]], [[-0.85538774494088199, -0.56279406008335209, -0.47419589816943075], [-0.60274315897541286, 0.57549576569521488, -0.43833801816127949]]], [[[-0.73358483190188184, -0.42742304383357932, -0.27883018584651009], [0.87041514883399262, -0.66991110830576917, 0.90208498740606236]], [[0.27081602599257226, -0.80418245634170038, 0.48970755774589647], [0.85107877711831703, 0.14752455493993311, 0.89351298877255902]], [[-0.67221745175724723, 0.76999015096876033, 0.40771630620249111], [0.12049455700231748, 0.63260648328712787, -0.20343685337644746]], [[-0.51401022989296097, -0.44924698435923527, -0.93091672067570674], [-0.13626330983611745, 0.30520761910843586, 0.58746926391255583]], [[0.0042006530183655855, 0.99639635254261361, -0.58322884178321543], [-0.08323792185175094, -0.18401920425599982, -0.14834233905725935]]], [[[-0.15565878570764613, 0.83648041219187497, 0.0012392619158492213], [-0.80787572115876616, -0.76887513226895599, 0.15376448378552809]], [[0.86298470199744326, 0.97746963282917543, -0.14369276768211137], [-0.37036998537636201, -0.60880853590442729, -0.25753696947594373]], [[0.064636053780481539, 0.98164435043662035, 0.77035193270380842], [0.91158975460970337, 0.51969292270658896, 0.84375881322803559]], [[-0.44713790114125751, 0.91975376984632673, 0.6749131293276216], [-0.93271270190698696, -0.059722340844633237, -0.87837452938774407]], [[-0.89941125224793339, 0.086167646715401558, 0.92700437104102384], [-0.19146332484922435, 0.15384806729281131, 0.24917212174747849]]], [[[0.86057427508373707, 0.6295817985833756, -0.4890183563349273], [-0.36203529521454603, 0.84183884475089732, 0.81369319598911583]], [[-0.65693055114291776, 0.79870124088987593, -0.17974249780445817], [-0.42692079060965216, -0.11204233337624436, 0.19647634801641001]], [[0.89754359955920604, -0.37357004025731655, -0.90293369904484799], [0.90683438948486117, -0.48915574076682278, -0.33950800275496862]], [[0.020792094740030853, -0.047063311941568209, 0.13499592277040584], [0.23856385465041363, 0.94964745447065591, 0.20858133000386325]], [[0.87989400895510106, 0.01825927227034585, -0.70594393612156781], [0.37378883100734606, 0.70989467925905947, -0.78221330777218823]]]]))
      arg1=Data(numarray.array([[[[-0.59186549086243256, 0.42377652758811801, 0.3018024769258798, 0.46838899334553141, -0.96252635692877031], [-0.075146582416090402, -0.83230183610249231, -0.14707866634053457, 0.32279630254169045, -0.79121659102210895], [-0.5727857374976526, -0.021408473763772529, 0.11233643790472692, 0.30215398836242535, 0.046070138352642065], [0.63550804495670921, 0.86993043719993657, -0.059348745210207499, 0.37274216859489084, 0.19204748151106421]], [[0.2938428043932142, -0.39182787648752249, -0.47703333582066443, 0.31610492395525913, -0.99300636836649403], [0.9417007409180953, 0.75810484757938146, 0.90228998259165771, 0.088671975114543056, 0.046547251776925203], [0.058497527463049703, 0.10106298089500054, 0.20927431120223039, 0.33943567665317831, 0.30492064808136088], [-0.055648924883589412, 0.6255344424303384, 0.73135755419514448, 0.98786291071014731, 0.091481135156259441]], [[-0.81374776218506306, -0.054602991108591459, -0.85417896330910836, 0.31333325319480365, 0.41263231144220391], [-0.62349866378489294, 0.42087151963965019, 0.25448007339513912, 0.66108800939023538, -0.29179442385696452], [0.63207780223392418, 0.68073925568682081, 0.13476264042531527, 0.58356942779233489, -0.67735123197090252], [0.22514066094370522, 0.29212541708878548, 0.011203879319664933, -0.82561860542538934, -0.27534320563622927]]], [[[0.30473966563534494, 0.93264507157070686, 0.99691342883686507, -0.64989343474908967, -0.79947759086947112], [0.71018221250482361, 0.82253464779539076, -0.24103165913390945, -0.94806851768776101, 0.15044457884802909], [-0.59133296480995745, 0.33569570029702045, -0.87857988888617999, 0.20816377379979967, 0.86333189857782577], [0.34177758564240834, 0.95920697160060109, 0.66140717173890495, -0.15282620922949985, -0.30462868477614458]], [[-0.1243805552178332, -0.30453502321140435, 0.013975118902338934, -0.5535108273478786, -0.15909428010170212], [-0.099021208053270859, 0.49478569029138098, -0.44385679665193067, -0.53869089499942313, -0.28455148303412114], [-0.53708358665464018, -0.87321940804721332, -0.19237866909705525, 0.62025830334699195, -0.1431716200114741], [-0.16959541417151813, -0.8142066808745656, 0.71756245691998544, -0.60598959218932746, 0.0037691179659822271]], [[-0.79398497414111491, -0.87742638767443681, 0.74430542738512728, 0.37643216516336375, 0.92931746272150728], [-0.88238964197006853, -0.82632219269091767, 0.6886304936992691, -0.0468437319608217, 0.46562751608329567], [0.44722024096166035, 0.083282363714079599, 0.18706698022650281, 0.17262350935021309, 0.066164704343053105], [0.28366097027990245, 0.92396104707679916, 0.54852459711142032, -0.756623151786183, 0.4912065011097797]]]]),self.functionspace)
      res=tensormult(arg0,arg1)
      ref=Data(numarray.array([[[[0.20875183339755005, 0.33722529052575045, 0.04711514617677981, -0.18566940967935644, -1.4448787249819255], [0.71521829475815502, 0.22436666179972931, -0.39554393688737577, -0.28573094067219645, -0.69247767108796254], [-0.98373144158051473, -0.67742497920338252, -0.11573599172254789, 0.39848279427553485, 0.24064390480096562], [0.10723943003642353, -0.13843836646046165, 0.39830944376589816, 0.69467718097295927, 0.029417500995769619]], [[-1.4200222037897929, -0.32529061848274871, 0.72518215496717586, 0.15821496570854446, 0.94596492812651289], [-1.3667247159784586, -0.56413725760183697, 0.18565548555672479, -0.04017344367684924, -0.0028037649350314275], [0.3011062262049185, 0.34894404719256444, -0.15154888262081997, 0.69885769925434893, -0.22869511263225226], [0.64480472487013696, 1.0861979118725111, 0.6054943500022002, -1.7199564095903699, 0.17106914695566905]], [[1.0483038887856322, 1.0928458526837739, 0.09359479341911292, -1.2364938996966979, -2.2706202426548767], [1.8328538070694966, 2.1345258052359801, -0.80500509578668455, -1.2791713315026478, -0.54728200563769758], [-1.4947413444320996, -0.66581923573365009, -0.97782961236446519, 0.72335078503079475, 0.78147066297706802], [-0.13382148493921295, -0.42938662525241678, 1.118352854436349, 0.61530688880363704, -0.57636753382172223]], [[-0.13865883066113333, -0.1414525779806487, 0.58787638353408422, -0.030919030517795099, -0.11502969300832416], [0.24155394303454703, 0.50345037610350807, 0.69153733827897756, -0.43822138443241371, 0.47084649153633507], [0.16836807581372948, 0.46495150583975242, -0.30241345122889218, 0.32694930388995674, 0.5512558496481883], [0.26202181824114384, 1.2536532358595394, 0.90795812970869194, -0.23212633513859218, 0.044986633134618204]], [[-0.62745335363994148, -1.4515046963795453, -0.94279954740013383, 0.37200392364138768, 1.6925113446900113], [-0.92074973536014448, 0.49671785112379607, 1.1144632887475707, 0.52322853547622417, 0.70889936366479089], [1.4578195164065544, 0.44401742667503052, 0.49485635109536336, 0.3629291161453323, -0.72647770382080357], [-0.35214108548837908, -0.13365148777767677, 0.45796399093851597, -1.089120407184534, 0.078866944640618497]]], [[[0.098243439036506897, -0.036835544518240559, 0.80641439879848476, -0.077674286558230582, 1.1288051187773132], [-0.18163448704758411, 0.16505562604278101, 0.67228838995227669, -0.36546116926778899, 1.1739883048001745], [0.84404830560236932, 1.0191839738814095, -0.35754495001752956, -0.45650278145148998, 0.53255648547859225], [0.071758199969720798, 1.1084568303929117, 0.14654415552987804, -0.5929368334383267, -0.059393444736193179]], [[1.051112399365201, 0.52396347160953427, 0.060032538093977683, -0.42804223702959515, -0.044074195215447365], [0.66548909181593485, 0.26285280231558728, -0.43165841431319651, -0.30163858358394291, 0.35035141056830366], [-0.13247723104559747, -0.04429498434377753, -0.22036604615705965, -0.79043622126474777, 0.31715528123282111], [-0.42975879033986919, -0.74464170851619538, -0.6350294284773228, 0.65064700943341292, -0.22560974286677821]], [[0.7800192064306819, 1.0102289381610268, -0.2977508545999083, 0.66941814186365911, -2.5588911397335812], [1.8595004427267852, 0.1564372542435839, 0.45668127379402845, 0.45813972468356801, -0.61664958926713509], [-0.63830668542048552, 0.50657997361159068, 0.14865083317649899, -0.22700829992239391, 0.7530326781280795], [0.38378814815917761, 1.3333120835952916, -0.24766756211952878, 2.5620616352318879, -0.045459095098787761]], [[-0.72748871078351485, 0.76521222842003866, 0.15987926210932768, 0.79397035053098941, -0.94455656444978175], [0.31181349545361808, 0.19470678648284495, 0.95756005378770215, 0.53932763966082276, -0.19846758258584424], [0.36084417141957736, 1.6522159444798987, -0.15779654000698654, 0.46491640044501004, 0.41384589373390251], [1.0100507897865696, 2.7402348160326215, 0.32141517646385198, 0.27437200692419594, -0.17669187014635085]], [[-0.057660876986116549, 0.59024592407095322, 0.29114247860573739, 0.79732346045308922, -0.94863362231032111], [0.42295599752918017, -0.9185597386607236, 0.37314133172858382, 0.56537218287125457, -0.29166683399213722], [-0.11972933818090242, 0.63872830933672142, 0.22849318948025527, -0.36719726473321673, 0.39118882643630754], [0.56679925929579833, 1.4281840903061844, -0.52601202662563662, 1.2182144178271761, 0.18234616052839522]]], [[[-0.31836574732830658, 0.20753324727334083, -0.60374188350499303, 0.34050999094621609, 1.3638085856213122], [-0.81476703765306102, -0.21210690859985459, 0.096290761823489668, 0.80073844174661812, 0.30749867935480213], [1.1067540501737574, 1.0889412583906786, 0.16775980154571718, -0.47093079711211316, -0.60537741620004804], [-0.0054400219035349584, 0.003321243038990486, -1.0577347977528437, -0.66210526432204408, -0.31707865309006494]], [[0.27613506989976977, 0.012357223136330919, 0.87830886803922792, 0.61830564496928497, -1.0975954772833385], [1.1236790533129004, 0.035696344523955925, 1.4393496546380136, -0.18903216631989317, 0.60759210461879931], [0.12487748657288822, 0.88629838189269483, -0.059131271794586077, -0.11512715872683596, 1.2140501018116396], [0.50652931505383414, 2.5159013151679694, 0.80264231418931353, 1.323630316267874, 0.32116341976181823]], [[1.0341646307093462, 1.3197911640626425, -0.2152342085859012, -0.7255892358278957, -0.3564201914146895], [1.1738049636243262, 1.9533091650381107, -0.094151512394213932, -0.47009853823577585, 0.55330253018482078], [0.27634241146961269, 1.2364848236697821, -0.87285857124725719, -0.29476107045541433, 0.55809324720869891], [-0.1567709565553671, 0.34810983083329683, -0.12261989210876179, 0.12743276580778046, -0.91881794731850852]], [[-1.373220223263889, -1.0440089255666614, 0.1290673173977569, 1.0031403780294514, 0.94213796852000531], [-1.4374918289210044, -1.6666132046315296, 0.63371947856777922, 0.81256845352528284, -0.15703892615954818], [0.55315008056585535, 0.0088224559507013856, 0.74366483285427787, 0.25117189221554115, -0.57045222110600124], [0.44788015382060553, 0.74150962229961914, -0.026112312823140915, -0.61231539598009455, 0.65155914629525669]], [[-0.26484059671215404, 0.35119795107887442, 2.0785343110646175, -0.25281065986761858, -0.84547058947295495], [0.18286619432138884, -0.72728126861726816, -0.10096588288408148, -1.0925081098929321, 0.030606778477816954], [-1.052532564677201, -0.34453122447805801, -0.60149330910417342, 0.24231783305760024, 1.1231897494049503], [0.71639329903461912, 1.5798769354830178, 0.98315992588291035, -0.071917412745170162, 0.42510851247253095]]], [[[1.5109914795705113, 1.2869857144805281, 0.29031097420923058, -1.7703201216915667, -0.53078890818147473], [1.1825275119016199, 1.9195973076285933, -1.4466190815249771, -1.4700739074083007, 0.20691643252851938], [-0.93296140350595569, -0.48733396287245356, -1.2008731191657318, -0.22935122776316308, 0.56448789787514675], [-0.63260270477019986, -1.6057185862321128, 0.089364705047375148, -0.2108389182812529, -0.83275502881994679]], [[-1.3540967745768857, -1.1073657949352778, 0.59448278333928628, 0.5532547772045826, 1.6393296138471121], [-2.0338735203958334, -2.2677373060452459, -0.17511949285308137, 0.44521212925978826, -0.15230429373236098], [0.22507196855353895, -0.72181192888161694, 0.63821958894101483, -0.0097878431780398789, -0.74166217454204397], [0.23425164784652031, -0.32830394718526279, -0.34837273922425932, -1.2274933773347072, 0.75378100233151479]], [[0.022968373001442, -1.2645261264648409, 0.1289992190593765, 0.54822487641175377, -0.57290042181591705], [0.35859605502538805, -0.56283188043275323, 0.92206183527296237, 0.00076205583314959205, 0.086628650417897385], [-0.18546160867079109, -0.83254492584945716, 0.62407335894980476, 0.1848567664289984, 0.27798356103817545], [-0.11401028746870082, 0.29646547552518859, 0.82101292175405316, 1.0143157139616115, 0.75401261951154963]], [[-0.54361742450979622, 0.54520511485266199, 0.3280500948498225, 0.43028366679916319, 0.86668470389971419], [-0.80542003581785027, -0.9065816448096532, -0.015634916756329331, 0.54283498497527793, 0.14107634642703878], [0.59672723387063586, 1.0391598691933444, -0.00780936691434507, -0.46617880588552413, -0.15295351181198541], [0.45652522739176538, 0.87460397139236434, -0.91157824478701066, -0.51446371165525884, -0.095775136699414176]], [[-0.1335484247263293, 0.14671084336327095, 0.47833169532516245, -0.09715938878525425, 0.63447642830578754], [-0.53492856342910433, -0.65222939849561978, -0.38631818956225505, -0.077596915103174152, 0.1143649070548178], [0.0076740818007353176, -0.029271185290806252, -0.083475361471040344, -0.32993511143790133, -0.046366824990030871], [0.056214578499840857, -0.16373018791038801, -0.42884832284479368, -0.4475946706750531, 0.052968239812107895]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[-0.63585374637434455, -1.319985450763518, 0.066602058671250686, 1.1790813625604513, -0.7278547065870381], [-0.06848552264101837, -1.3914474101240928, 1.1185358030777801, 0.59527941504535342, -0.34208739021253837], [-0.12996900833178771, -0.64863806427667303, 0.97232833372074279, 0.33609874111744709, 0.040029224823762984], [0.29995746878018603, 0.93871799634463793, 0.60895301959140191, 1.1212461269366871, 0.97162827954032593]], [[-0.64332439424423127, 0.0984737702403084, 0.89058022840470485, -0.21102308918114107, -0.58322535988778879], [-0.44744552643001512, -0.81436701104001974, -0.73660580520925345, -0.45720379396347788, -0.74499404259190793], [-1.0816759296731122, -0.95973722512486326, -0.1755373226075152, 0.55783799235031617, 0.066505847311237973], [0.43612128730356536, 0.013984705768488148, 0.46946323178813509, -0.46431439355144033, 0.31328051702020765]], [[0.32755017517472806, -0.29461083197315052, -1.4690311658752742, 0.19815285400834109, 0.49966401938092925], [0.33176214375025659, 1.364519353730365, 0.80695924090761628, 0.61403462030707723, 0.47179535950035312], [1.1699489798881699, 0.92723438836064742, 0.22909105823722731, -0.014170530646873764, -0.42162374583909756], [-0.45126975997251939, -0.20301956599651144, -0.12529132369214255, 0.0990059198647186, -0.44380322556092378]], [[0.70428906325506102, 0.38968598765152995, 0.23857274394890454, -0.25170146302919694, 1.4289211326926772], [-0.29374340494195994, -0.42939207119694489, -0.39184308133749896, 0.0036435593406143546, 0.83717555420617951], [0.63274613777923649, 0.48830901834730805, -0.12231413752173852, -1.2780465621562302, 0.015398195153818042], [-0.42174019858343176, -0.71550176772431917, -1.3029683779580508, -0.14887592297133478, -0.21150078828192714]], [[0.81955092202112878, -0.46887704156856264, -0.50373594510522812, -0.818966366560123, 1.1694891753568486], [-0.26830243806575149, 0.23688670730350952, -0.91467801017751615, -0.35754441176204937, 0.33042832072731282], [0.008602073370336305, -1.1027470469799652, 0.059072895905354361, -0.57039814065467764, -0.52158274772225244], [-1.0469926189397869, -2.6864347696954893, -0.59229400887878425, -0.40827030460419955, -0.11472599990349808]]], [[[0.16781781214132752, 0.096111814853976241, 1.7504614154210207, -0.42138059289088409, 1.2644991470936653], [-0.28502964137007425, -0.19174782006905278, 0.36002864313643312, -0.96562542214462288, 1.3834992471599941], [0.467465122295455, 0.73499940593620716, -0.67653518489849063, -0.60806293388688726, 0.93179511178164665], [0.16179910094422381, 1.2268567751556314, 0.31762585289322498, -0.87506745876544934, 0.072221346890744331]], [[-1.2635159289822608, 0.36796324102186673, 1.5626169952790234, -0.27233704542610992, 0.8664283994614117], [-1.2815957786436034, -0.59424612130932442, -0.29613263472284079, -0.58835685250589209, 0.10750554002749618], [-0.07553582516786056, 0.47758837962532419, -0.68085243679587504, 0.51754673337135959, 0.20832182817301667], [0.84642565853958818, 1.39741971886163, 0.56015065983657586, -1.9933072420130855, 0.023796780838892417]], [[0.41190147574133434, -0.51060742505689116, -0.94090631529364277, -0.44875383547581571, -0.33537537834178066], [0.7238467727899951, 1.8950372370461541, 0.44745641075425369, -0.3246631064432387, 0.1921340245302525], [0.18579147441757574, -0.15914031177183494, -0.1250508352303546, 0.67852375748418914, -0.072355237089749128], [-0.50206711895325606, -0.57148369993431847, 1.029641888660338, -0.074379885129066126, -0.30517124521253303]], [[0.38381982458955632, -0.72645988887561852, 1.1600248572888305, -0.5336898468440141, 1.1630553142226978], [-0.44937537395267318, -0.75106881473199494, -0.26472632524222289, -0.88391896493557787, 0.8236130147433216], [-0.14089077404251199, -0.93144001521724129, -0.10631185754983151, -0.58870175198585351, 0.34742458248923724], [-0.44293618658408745, -0.83652512428300718, 0.14263714783437112, -0.47542643825198205, 0.44773839784982117]], [[0.88020294436374358, -0.24822135178998714, -0.17182940133453622, 0.23429991558799979, -1.2761640979130686], [1.3916373781070546, 0.4694747079544479, 0.7495885934319978, -0.11086357440158431, 0.18400677791046516], [-0.23105203092356727, -0.17602568417277742, 0.21117716839634132, -0.15794674177241719, 0.64373546820707761], [-0.22340633854383404, 0.38948327173157149, 0.4534694177940029, 1.7038672512799045, 0.20434264037872379]]], [[[0.064269016159262699, -1.0480174698244078, -1.1487453367452354, 1.2003907525309188, 0.23080485797822103], [0.16535456110762251, -0.40777667164941711, 1.4198383416860088, 1.1976502193183278, 0.33057507959705779], [1.0983148268114793, 0.50171538674021088, 1.0441975084136796, -0.38090671193862013, -0.33016048826719352], [-0.24729177227148144, 0.38137265161477774, -0.38068881675879618, 1.2403373671864943, 0.36502132892431483]], [[0.060719224270666727, 0.056508377641640517, -0.65251648753730318, 1.1489097167365001, -1.7069445141011155], [0.96972851040141661, -0.4307788623389468, 0.90061436103467341, 0.96140859905111009, -0.59777962464599899], [-0.097133473052327016, 0.36833703192223122, 0.67648422803163599, 0.0095145307577223989, 0.18551099602239735], [0.36530129168889014, 1.2226816484623497, -0.16103605142668787, 2.0263045191854805, 0.2787457141260507]], [[-0.83345283893666244, -0.44771915050868405, 0.43726492922897153, 0.019480406708492271, -0.74647685104121575], [0.29065480358575801, 1.3243459695932214, 1.2029073168517168, -0.56654915643073045, 0.15190899544814618], [0.066497922780443475, 0.54471398935333959, -0.42653425506114695, 1.4600454136924974, 0.54892888112565386], [0.62265167534101207, 2.1261866763264758, 2.1613944675542336, -0.73484502168168941, 0.028826170578183152]], [[0.40630939076770545, -0.6677173590523765, -2.7346445062804459, 0.60134934835547882, -0.26555277343227213], [0.59751265192794145, 1.282557295705216, 0.71384697294667265, 1.3409926703376147, -0.33266379084671804], [0.92730792903483916, 0.22785541545050195, 0.89984108869052226, 0.18812304424459572, -1.0521085035296902], [-0.74120488531371742, -1.2741039759860611, -0.43479982849060939, 1.0280352170456473, -0.33512166956399858]], [[-0.47201860548008234, -0.90957912056059276, -1.1076391683636508, 0.029495569761788729, 1.5228082645537127], [-0.8003291365513896, 0.91679563539433651, 0.59538628605432031, 0.41711714851699017, 0.48858434686101493], [1.2481735373043235, 0.48114675709494309, 0.22715219196741337, 0.39704186582877121, -0.81390593192802529], [-0.38852124041018732, -0.5364146002319532, 0.2472217523750308, -1.2679778438788825, -0.23879124841906074]]], [[[-0.78750361022253967, -1.1632703837995431, 0.633584347342807, 0.52448945010855741, -0.74360227498512876], [-0.22535465198814741, -0.99841194057535998, 0.59098782842187014, -0.13804079711935582, -0.42403730978200038], [-0.63934769465653485, -1.0765675773602437, 0.47086796284283128, 0.77560978618523635, 0.1836101718571953], [0.36607385374967416, 0.71873339001353198, 1.2148464399366938, 0.27597927601398442, 0.87066457515599738]], [[0.49760911151901033, -1.1179689700075419, -0.70666858628983475, 0.30188473459966164, 0.30675778994898617], [0.44810716451051114, 0.50766843609268042, 1.059471496241372, 0.19584471412868587, 0.66853824503335701], [0.70988788983483586, -0.056689684524381771, 0.5025206532404809, -0.15672691034446345, -0.0045088339014528033], [-0.57357627996928862, -0.26111938837623083, 0.36611664166386382, 0.67702298503015435, 0.22253559146248789]], [[0.70051844966010834, 1.8686489057102742, 1.8648549368278853, -0.42700138935162479, -1.8282141696598755], [1.1357722275430582, -0.62583308079454514, -0.93411291557863185, -0.92065364947828954, -0.34653498609567568], [-1.5320358435968051, 0.031654108190749861, -0.86516755503422593, -0.55577102714404281, 1.3695128208549965], [0.68448692872311789, 1.2377732565776232, -0.27403923436989208, 1.1257100626039913, -0.058046955530677902]], [[-0.3470162192416878, -0.22983953109885349, 0.31976235942098996, -0.56500395412044957, -0.065546752614220521], [-0.23871322520101335, 0.49757534109907425, -0.34654251067136072, -0.655729444810777, -0.19524452195555617], [-0.48716351623437343, -0.64509904322749412, -0.34259166410864289, 0.74378005295732541, -0.02103439239411091], [0.025871944824289873, -0.32357247156410907, 0.91948957960691391, -0.91994990187002634, -0.0041201005811560137]], [[0.70572355647132856, 1.2230297017986846, 0.66019672666831042, -0.73359874266540714, -2.2950484902179107], [1.2766093143159782, 0.28945355542080792, -1.2364296002851671, -0.88119488555735592, -0.99933343523415263], [-1.9012621703233288, -1.0571146823631452, -0.60376773808302131, 0.2431929904552475, 0.69358860032848668], [0.18470130436774629, -0.37155054803002696, 0.28078128493958876, 1.0333788879521475, -0.13039071147442438]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5, 4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_tensormult_taggedData_rank4_taggedData_rank2(self):
      arg0=Data(numarray.array([[[[-0.76484039442263518, -0.11940712431913592, -0.34479186004222151], [0.51725206236582122, -0.078066166413693683, 0.71855202223130643]], [[0.25013127512507882, -0.29688254889547028, 0.27905744746377814], [-0.14493644334247402, 0.39111998797951819, 0.42087238995773379]], [[0.35901168715878851, -0.91498963895921048, -0.3855707452897208], [0.28007694966663421, 0.15451365791172278, 0.81808536380329255]], [[-0.26266606183268948, -0.31045050799758966, 0.63202739275653586], [0.92276943629689545, -0.10318114952958002, -0.13932080173664119]], [[0.75101598786337465, -0.36755541579517592, 0.063281460235070419], [-0.32421587082140224, -0.023491254570618514, 0.64946102265961692]]], [[[0.81817960997235284, -0.44222946634018201, -0.50414886779201473], [-0.99306210964679997, 0.86321608290295959, -0.10417001690163508]], [[-0.38537251343441814, -0.74510883030905295, -0.83028737473321845], [-0.65040837370870741, -0.79898188476028764, 0.72833487528911101]], [[-0.039657887415744497, -0.37845802639134751, 0.0066134582858592417], [-0.53441461762307396, -0.70103040663841809, 0.40987185199790588]], [[0.21215718379196158, 0.82801044558278347, -0.31051185605958964], [0.57998542222989524, -0.30887176063212007, 0.49271937817761713]], [[-0.79000024710836225, -0.83532988295528821, -0.43117702313869977], [0.80502199211343561, -0.12577834334559124, -0.72959753249768733]]], [[[0.16114784691954931, 0.67652890609104177, -0.043264504970181639], [-0.8545810659644677, -0.32231673567020613, -0.59786610806613405]], [[0.82446212311159495, 0.24578239844523853, 0.25105531814596627], [0.68590966479525028, -0.27054600921856542, 0.38002863037863199]], [[-0.4678700062989658, -0.56564796387838312, 0.27594408432291151], [0.32552381952368714, -0.32435902937145467, 0.26980150505875744]], [[-0.28658586063153835, -0.16468188931766559, 0.51580715375252373], [-0.66651990883980505, 0.71403930854475917, 0.16122533628874192]], [[-0.72545905554871659, -0.70861253318822026, 0.70341678423608411], [0.69599263275967815, -0.51467833865503465, 0.33125689683651216]]], [[[-0.24265961737155228, -0.87055022416614847, 0.082772680677375421], [0.42872695827129781, 0.98758961806248857, -0.9476390178797971]], [[0.78125657199374632, -0.6510642532914479, -0.88960398744411684], [-0.14130738265266718, -0.53793970237371025, 0.75903905439258113]], [[-0.8355865850291504, -0.13630310923727751, 0.99127658293814536], [-0.56923845975033727, -0.3641186617096126, -0.35237814752059715]], [[-0.24270430864554671, 0.695325598876122, 0.37711084970298137], [-0.92907662412937198, 0.73530377117265822, 0.34163515174205705]], [[0.79823527742647671, 0.76640697835060401, 0.92297735038269835], [0.60164447794504472, -0.8193106799954688, -0.046965217514117086]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[-0.060789789832910834, 0.73943174739953554, -0.31084697179554999], [0.41005615221803948, -0.32391406443418225, 0.84548906837778159]], [[0.82413121933927247, -0.80587441504212221, 0.64496261951019784], [0.3570705676642516, -0.46820413295241514, 0.4279476805796647]], [[-0.65819674889826651, -0.58860994372579678, 0.86783565346282843], [0.1397239385363942, 0.63527437961701438, -0.99463012245742455]], [[-0.42234570990234865, -0.83206143647019259, 0.95047258812185964], [0.56472166929254741, 0.57757505875082571, 0.87278972567861191]], [[-0.13885349878424336, 0.47474596272437308, -0.7385104310085322], [-0.7002536653252518, -0.20736180987579012, 0.11476830641485458]]], [[[0.91797493987599865, -0.42721755622914981, -0.57097320056476586], [-0.27166337320764655, 0.90058625424488103, 0.94784692272726034]], [[-0.95304858019569427, -0.67824186693183264, -0.5648801097703704], [0.82970883618429592, 0.14429193888554548, 0.6227962707204926]], [[-0.24354171563188909, 0.40333165805573978, -0.71637114163740856], [-0.75447330196436546, -0.02629175275606066, 0.41160861139727567]], [[0.75344620644318661, -0.14810454919233029, -0.33397406801616825], [-0.69621367019368052, 0.34659552174253694, -0.27009362691946626]], [[-0.2546280172872768, 0.24157233375517739, 0.2058672487912776], [-0.74185387033067385, 0.39988302356433314, -0.06330266300586751]]], [[[0.30904853141459432, -0.68369615450340238, -0.84886235229489548], [-0.54445305272732725, 0.43233671289548981, 0.6328707059697869]], [[0.81164276329187501, 0.036133452623486662, -0.91072983760205695], [0.063833283078186476, 0.8317179507757011, -0.50463234598839901]], [[0.1095372360579292, 0.23227052210568955, 0.10041358386209498], [0.97875502684397864, -0.76356485744061775, 0.64689253428146065]], [[0.12313622136120639, 0.28575522128645581, -0.060725523062710618], [-0.58142825449474644, -0.33528130333250683, -0.19226931391257951]], [[-0.28791446916267471, 0.52678343997554444, -0.094686606483970648], [0.44224680425220697, 0.79798705388186364, 0.17762583898885831]]], [[[0.88010404919213125, 0.69752091837843011, -0.21619663746313944], [0.40743739256972744, 0.6166328701431234, -0.070418151714243482]], [[-0.38524314237579294, 0.49735401955626135, 0.14029613319236778], [-0.14493585563886091, -0.49030966081892591, -0.1144352226008778]], [[-0.4602939507079673, 0.43605892268301383, 0.091565188795003527], [0.11478133577810379, -0.99251699079982147, -0.55699901428192788]], [[-0.02580529715279023, 0.36747438686515133, -0.0098169598140562808], [0.47416619453783837, 0.56700417743960974, 0.37366674116887166]], [[-0.20463414592897067, -0.85864236751559808, -0.84997685774601228], [0.6344404034600255, -0.46517757200357224, -0.60267138967082268]]]]))
      arg1=Data(numarray.array([[0.59148978255893958, 0.79056349174883889, -0.8160753951981794], [0.37810849819610715, 0.58878952184261713, -0.08898171559411483]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[0.6086664341401713, -0.10423047202969493, 0.14178938894036763], [-0.5686445003065046, 0.76028670511819274, 0.69862589358182903]]))
      res=tensormult(arg0,arg1)
      ref=Data(numarray.array([[-0.17974317027227793, -0.17645062520636495, -0.07227000237262543, -0.61602514373540251, -0.092210388794191078], [0.68779448367732465, -0.92058822735040913, -0.97934658158265053, 1.0270786663664093, -0.48053589790550666], [0.20576152906975032, 0.54332546342378463, -1.041015411454155, -0.56658571039535721, -1.6326982385147175], [-0.071394386471104188, 0.23567819643733423, -1.809221558384235, 0.14963913576799825, 0.074086673725219696]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[-0.04691000351642427, 0.4170262755875801, -0.50755823120357357, 0.69217569547495639, 0.082009676532184772], [2.0236857220130315, -0.51649373912833718, 0.40474931450984258, 0.89739608420916217, 0.53067905602238041], [1.2194497178121078, 0.60461810391973003, -0.62845644453953509, -0.022054011036060639, 0.23573542943060211], [0.62026726604301752, -0.63673785992715914, -1.5216343149242508, 0.36710621231453805, -1.2910561437665626]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_tensormult_taggedData_rank4_taggedData_rank3(self):
      arg0=Data(numarray.array([[[[-0.64799088103298175, -0.92569038799604031, -0.14520249642154215], [-0.4366774336702266, -0.079336317523255762, 0.98563259920058233]], [[-0.57270862402100975, -0.24975861963803925, 0.97621307422190795], [-0.34009805742391475, -0.14058561068574482, 0.76745467705303883]], [[0.98754656822468023, 0.15803439670799335, -0.19013703920960912], [0.049242272973830659, -0.30979123787717966, -0.19465081524070782]], [[-0.097831431861568285, 0.58324886221932659, 0.23470880529753924], [0.061248427521319204, -0.67296336139300084, 0.8187068876780268]], [[0.78545497493550709, 0.90082943390015302, 0.49611317939605137], [-0.091086314377462729, -0.60341254182417181, -0.37301299976400148]]], [[[-0.87088286351375355, 0.11961887964432716, -0.32587214722552904], [-0.86874546670094732, -0.7966327659014194, -0.39194412295487902]], [[0.13207292649750624, 0.83503219519110061, -0.8794359410152619], [-0.87026733387997246, 0.41880408553508142, 0.21679707655945513]], [[-0.1518748342513252, 0.090359310199478182, 0.2999184684321532], [-0.019834539598209355, 0.6023681409294408, 0.97773946059612848]], [[-0.40827869760639612, -0.75261731790584441, 0.6813539254502945], [0.18257481415583765, -0.62165671351072338, -0.13831963896402866]], [[0.7521233277911985, -0.035303013917045156, -0.37786412023429183], [-0.92148962010388913, -0.28897211060306649, 0.53720120622205636]]], [[[-0.71026691434851008, 0.039352641298088908, -0.66247988507654854], [-0.4819495426260676, 0.42656763777014794, 0.12494446252635671]], [[-0.40814645152893969, -0.9396445197842378, -0.36227397773754033], [0.56776778212282886, 0.6758034511799702, 0.93825113242284797]], [[-0.4488863878756888, -0.31350832868358447, -0.62601493767744154], [0.32828922695089213, -0.70323923763036755, -0.14012190255473023]], [[0.16254419090180372, 0.21420729582608389, -0.85615610105406326], [-0.51274135882579808, -0.752036583565725, -0.18002919861816125]], [[0.62788740022379907, -0.6530891630364053, -0.089240302679687078], [0.9464059040678825, 0.032199867524735915, -0.080751083650674405]]], [[[0.58393094191039285, 0.85335413122703185, -0.36209777139939825], [-0.99637640391836779, -0.53275774892791139, -0.26680476710856738]], [[0.72425369675653029, 0.16861849029415077, 0.17016580478046017], [-0.98199630333086074, -0.034404683630890442, -0.19724082719551683]], [[-0.4222328819724579, 0.57291845160941524, 0.95540561611886043], [0.73571753358291736, -0.9715203333548541, 0.93935314786618784]], [[0.30085772999426208, -0.96816701583497355, -0.29026648571218527], [0.17722581309000995, 0.51735885231418721, -0.68418262874288471]], [[-0.075962466397014428, 0.48125163545628546, 0.98587043350367498], [0.57476444815393446, 0.87007574042434621, 0.44793680774072153]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[0.22616356474807997, 0.61383913525151734, -0.041795443432371959], [0.22559151364420993, 0.27678742676608237, 0.31225004192486638]], [[0.18310674168490548, 0.94360635290806916, 0.93358330388884836], [-0.33014743092697318, -0.9320851971038524, 0.97388078792873833]], [[0.64106906383612472, -0.52681737980109733, 0.11181734548953592], [-0.71029005448377425, -0.77564187623776215, 0.056910131241235673]], [[-0.34456237840744008, -0.65375722372786416, -0.29378686949633126], [0.8686553548775946, 0.050143296978564011, 0.16579868114763974]], [[0.49918012786604438, 0.32113460570493224, 0.15222908172437766], [-0.82213443012954257, -0.91198740272842982, 0.86353397781793939]]], [[[-0.46308686422506473, 0.32210169663739174, 0.73373690135057701], [0.69138469240520517, 0.5310406053399519, -0.3581952431053268]], [[-0.17869806284211531, -0.93253161118315919, -0.47325072443204941], [0.53682562404358469, -0.61977587096425402, -0.38660636529060355]], [[-0.7234117979076593, 0.18703690319691213, 0.30294129306755946], [0.46236192541035681, -0.75217351569165158, -0.83274972695992266]], [[-0.21664282242556121, 0.40110600153710263, -0.17409127858725615], [-0.31939356832664489, -0.43876523678567403, -0.51477226185802172]], [[-0.4402690767940749, -0.7985496476146936, -0.95911044271879398], [-0.7721476494206021, -0.97179886989175168, 0.69977673894621817]]], [[[0.38001707531827411, 0.93558805613701868, -0.31664789206485455], [-0.78387321413135358, 0.29275348341383034, -0.85207610034033476]], [[-0.28263620840398285, -0.7855188627394567, -0.16950621982517888], [-0.33651004955629027, 0.30288546415776207, -0.15202073851549014]], [[0.99072702985882022, -0.26821929565444957, -0.77845717332184439], [0.9767268433101024, -0.033850363909023073, -0.56504053966828049]], [[-0.82095164042300484, -0.34225244906154106, 0.39364777175539434], [0.37458488646163723, -0.047253447218366995, -0.080670870912923798]], [[-0.52772749323128032, -0.60761346048940812, 0.7385489439975248], [-0.48601797437435512, -0.77694707578835409, 0.45467762704373516]]], [[[-0.63397783193509727, 0.71027956963981165, 0.4473794658887269], [0.43819310863177763, -0.0083806366620293726, -0.79800077724280483]], [[-0.39332929444417242, 0.54953497106502813, 0.57923990358476662], [-0.49203230646843821, 0.60777706981833335, 0.66411929523828084]], [[-0.19021270753351693, -0.60311166112448555, -0.25577995602065373], [-0.11573252634131204, -0.82026858694703164, -0.5778101887125866]], [[0.4530252016133014, 0.26189340350349366, 0.85927307879446357], [0.53368676138206661, -0.5744996907552864, 0.51480711034469295]], [[-0.87384710018259826, -0.55299342939039153, -0.29035316343824991], [0.18045019365177728, 0.35757345123523798, -0.58208220531441723]]]]))
      arg1=Data(numarray.array([[[-0.0013734744895188555, -0.69783979823532327], [-0.96640954564900361, 0.095067917839041227], [-0.25636253854855418, -0.059727736015507071]], [[-0.33543019338413083, -0.85342477258573401], [0.42505362736917562, -0.69405738751844703], [0.33791108213058463, 0.8885252870940632]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[-0.13274285522597395, -0.81516693840498733], [0.33448529914010239, -0.68211910710943857], [-0.78678193497697824, -0.63218902180430692]], [[-0.47542073881473357, 0.83124432425925221], [0.8997762839519825, 0.69014474171973839], [-0.019214980614200572, 0.48392681042599217]]]))
      res=tensormult(arg0,arg1)
      ref=Data(numarray.array([[[1.3785192914618238, 1.6763577692758713], [0.30554542674207874, 1.3873333181604175], [-0.31930820764303003, -0.66273269186323547], [-0.65363340347907162, 1.2519463356166531], [-1.3508086164259694, -0.32700671283321464]], [[-0.21051373047957497, 1.5846377394613187], [-0.038523782266792414, 0.68440906218144304], [0.42907750230915781, 0.56425658821779623], [0.18100541348453092, 0.32541870356655822], [0.49774739109450516, 0.95865334669652136]], [[0.51797445894167371, 0.76522369054313211], [1.4153671955834677, 0.097194982548999276], [0.0076995026073735165, 0.40425303277364771], [-0.19624968020567735, 0.75765293048031812], [0.32211395353881489, -1.3967067015088537]], [[-0.71505546002282383, 0.67829760488266855], [0.040544112737702087, 0.18713887097772855], [-1.1403364211365075, 1.1731031801172724], [0.93891155421785111, -1.4028943591877687], [-0.38932377787887823, -0.65652011893480222]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[0.34397846901348655, -0.046998623683021934], [-1.1436324566835521, -1.8295354528927104], [-0.71059694392574646, -1.3321052040376309], [-0.31283262459212846, 1.7494503796196326], [-0.52493654897469166, -1.6171153870671249]], [[-0.25207934819616767, 0.4617851670415013], [-0.7213011341836989, 0.91235930477131111], [-0.96036296382415809, -0.26715901434260542], [0.066840831730040615, -0.8043611168961351], [0.025197460128189783, 0.53605335475536853]], [[1.1640835902110591, -1.6096688766276466], [0.34357194645998346, 0.72911891983110499], [-0.092708014011456022, 0.38258039372815161], [-0.534270769006436, 0.89353081594402928], [-1.1910148331094275, -0.34242670616339382]], [[-0.2307892000531061, -0.27823817317460064], [0.54831224724565641, -0.088568156032619139], [-0.64717352401445083, -0.21377352097490632], [-1.4291358608619051, -0.79489155479042195], [0.40660445531177847, 1.3881871833644666]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_tensormult_taggedData_rank4_taggedData_rank4(self):
      arg0=Data(numarray.array([[[[0.86385765678797366, 0.92447597342741816, -0.84782999997784181], [-0.80005359281866006, -0.71147973041531198, -0.63807576251140063]], [[-0.67123804488966643, -0.97684770928813758, 0.17420207327556447], [-0.45572078957916839, -0.3089455604900182, -0.50826026596284524]], [[-0.53739856815164377, -0.28250647172102572, -0.95473574516628568], [0.014780547636264796, 0.92931024695275788, -0.16924788582947103]], [[0.94093140665311203, 0.39223939668104379, 0.0023943808492816743], [0.69132627386418144, 0.62980114302868695, -0.92761852723915461]], [[-0.56444738484879609, -0.66368036658876206, 0.29415759466820646], [-0.53215247889913786, 0.84781977174596146, -0.89028623260934192]]], [[[0.42886518180939759, 0.5064146897044377, -0.02485136492623341], [0.41850183880423542, 0.59183243300899946, -0.75919971899245176]], [[0.87037144448111015, 0.79221226447273274, 0.11951076648652603], [-0.28695875276495553, 0.60604377353103467, 0.28002374598034763]], [[0.24155991379807462, 0.28303873248092093, -0.041063581618451028], [-0.77932617425907202, 0.74095503345748104, 0.18503568019918615]], [[-0.8514359741176829, -0.1458167195630522, 0.86684667062994469], [0.73448500060230382, -0.60800974889440096, 0.54679161625877026]], [[-0.22207883705085041, -0.21839445079173125, 0.68955085452729237], [-0.85220744127700043, -0.52026071810270991, -0.21764881170179518]]], [[[-0.091143254867996237, 0.76422994459430238, 0.90328437339822876], [-0.54098854621252745, -0.89955244283385727, -0.7170242426694764]], [[-0.74372963782803314, -0.034283635922845779, 0.64625646748745647], [-0.14975660541683045, 0.62664116189697028, -0.3724116818630312]], [[-0.27390771291079807, 0.64404858094019524, 0.99893642210562961], [-0.87508717516926393, -0.033924274865461346, -0.31671335098104914]], [[-0.4221037745734717, 0.21627222393724232, 0.73014069514023006], [-0.41488672137072036, -0.25286243102751604, -0.93201172248811792]], [[-0.082620779803841193, 0.83387563141091237, 0.99121454093903072], [-0.27452827860006157, 0.14149832427552456, -0.41173847327252378]]], [[[0.55315847001261775, -0.74267899987808961, -0.61053431325765328], [-0.94017217309919099, -0.036809388857263592, -0.542618206278906]], [[-0.12576986996903039, 0.51630095443554769, 0.7626005618173588], [-0.56797242294557715, 3.4931604145471695e-05, 0.2677635851805773]], [[-0.8894687004587436, -0.93908237311548559, 0.7991057325766977], [-0.7107526837598761, -0.71447882809283847, 0.13449988428906479]], [[-0.27399950048673238, 0.0074628453010696649, -0.96482743542267713], [-0.19599624550461558, 0.82839174292918516, -0.2304585871228173]], [[0.95210571523613519, 0.43184943842275136, -0.20641163892466952], [-0.54395776283125574, 0.0028922369583743723, 0.68556235192268322]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[-0.77887315557858505, -0.17325031907364608, -0.90264440517744582], [-0.81510946418042773, -0.10406706736742888, 0.28527814977709798]], [[-0.57542754684396358, 0.32880407679693335, 0.8492427195189074], [0.035769120845271063, 0.27985985473156116, -0.91292985719526842]], [[-0.32841672428818036, 0.097349710249373, -0.88170394622798898], [-0.97827788361940859, 0.38390963352111318, -0.63649528112422926]], [[-0.77490548593662445, -0.63600156298202815, -0.12563303086112398], [0.62066086039634705, 0.28808329779266462, 0.46266160030642012]], [[0.86270328153270026, -0.4433947593616081, -0.76770720492118194], [-0.00061177915211785283, 0.087410679444311246, 0.90202105020468348]]], [[[0.81436407983837511, -0.56209002308670364, -0.1294720870069419], [0.77903102698307669, -0.8770850033510722, 0.8660280403480507]], [[0.64562339054312523, -0.45590687296796828, 0.41396644007125749], [-0.33335386791621957, -0.49161206763837573, 0.69604296155870826]], [[-0.4786465138952003, 0.61902779010161324, 0.72498401145844449], [-0.12757031030181376, -0.85391406574064099, -0.9772983879464352]], [[-0.37342355539624528, 0.17223668646803958, 0.75808921917505323], [0.60554013221151748, 0.84894384984185667, 0.89139116256755435]], [[-0.70939236165733099, 0.84448272456839435, -0.57576855110470149], [0.51541751955713, 0.2565091740091372, -0.30553403932721368]]], [[[0.048050239709232612, -0.90244359508307936, 0.82153417513597082], [-0.24060794129892726, 0.5340700148130717, -0.66521909514706956]], [[-0.6821354087283884, -0.59876491488167494, -0.9866218179359123], [-0.070846217132676692, -0.096243402026160885, 0.20142007314523513]], [[0.2484180235646134, 0.26489271752631605, -0.46457695407311927], [-0.90165507296696967, -0.54651776207729919, -0.74070800750805388]], [[0.16837482403189918, -0.45860302805961317, 0.41443740772922188], [0.52261147034558553, 0.39238796254456121, 0.51745730079820484]], [[-0.072636994971214675, -0.67974372540084294, 0.67425682471227666], [0.96470051179402283, -0.65794188123571029, -0.028082441339719377]]], [[[0.72203574810793247, 0.25736732830574804, 0.86330770948251478], [-0.06349531168228828, -0.85782417523400101, 0.027387622545774759]], [[0.026562137198904656, 0.7831483917396822, -0.64264477228711736], [0.54782422084348936, -0.29479715319953148, 0.96007401912672408]], [[-0.83588480802244969, 0.44865653586636833, 0.35595783350544719], [-0.4018585911415733, 0.1825879624458373, 0.077230460520611111]], [[0.64317391188849404, -0.3804836756337473, -0.73453078871041], [0.66060328485471698, 0.32552504000983862, 0.77048239548861397]], [[-0.90987772260023325, 0.3969447106890156, -0.55616066068861758], [-0.038252286622862952, -0.43725061408764754, 0.5928690023272738]]]]))
      arg1=Data(numarray.array([[[[-0.58599800787218537, 0.38145591180409921, 0.31895672653577245, -0.7091776465708528, 0.40533804827922082], [-0.66444573413116692, -0.46687783234551117, 0.82752827967050324, -0.24865283322996468, -0.8005059991308614], [-0.29206934517102123, 0.84781834041451165, -0.16219825001225585, 0.93231154805605154, -0.4368068755594301], [0.21287679141545102, 0.60877261188012821, -0.40133675574510019, -0.70030305333421561, -0.84610175381912867]], [[-0.16954017623506612, 0.7688206739516299, -0.13076004513279349, 0.094824948381999619, 0.30364809688893635], [0.32197383931842549, 0.95687723067033881, 0.029541758429470599, -0.39151444992163786, 0.34835293720968497], [0.00028442570000275502, -0.41587482080651816, 0.70679407139886119, -0.57650945889094518, 0.25348781007545229], [0.55653868040050991, 0.95822054827748637, -0.48333860510277016, -0.8280344382515572, -0.21306967096227281]], [[-0.96704854286323161, 0.3604057791146853, 0.83088615309910763, 0.12017343367558775, 0.94674800816032856], [-0.73487047673176153, -0.7566703605936016, -0.34947900642452967, -0.69903499363077071, 0.63166890395873598], [-0.018852639391628623, -0.096037792870556249, 0.7446006656662969, 0.45736455486553096, 0.90653210338612489], [-0.16794600495276057, 0.45955829060153763, 0.78323968369215602, 0.53752678764197404, -0.59078130185218036]]], [[[-0.65582875183770883, 0.93090447084757377, -0.77992717873749395, 0.20745303299465334, -0.33595341546007051], [0.35991031340763135, 0.65447722285783771, -0.84287277496182322, 0.15930598566689924, 0.046734569309294871], [0.58151549610819697, 0.23613506801830364, -0.65356552138322899, -0.53036711978968043, 0.039909848175097018], [-0.99972086341015576, -0.22490894252075821, 0.64802936430601665, 0.2776676445262154, -0.68574554145007727]], [[0.01611721573697511, 0.32643448823512, 0.82615427798090746, -0.32440640579984703, -0.77095680553121038], [-0.88567022388956262, 0.29650670232542753, 0.054865980608420628, 0.17432780995297548, 0.10457643023265795], [0.32632229590708417, 0.48705348899023027, 0.62994908847900244, 0.013004166071458156, -0.61032294046319446], [-0.58968162289056658, 0.20476880317840518, 0.76444183505528662, 0.38866297061638799, 0.98068615674165582]], [[0.065540376874840156, -0.47102761843775265, 0.24290661561794558, -0.85956186669904744, 0.66531173080966077], [0.57069748959806965, 0.54565297579272487, -0.68947437670831846, -0.43636437091023361, 0.49952507692482628], [0.48831776583402231, -0.27649291123939346, -0.17145163369001981, -0.95046908637155947, 0.11060937742888299], [-0.69402290747639372, -0.52856852181241232, -0.25802510439486204, -0.93431965860141331, 0.8260720006696316]]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[[-0.62462020155404407, 0.78072283367055784, 0.77565869418289823, -0.37240382581191445, 0.4122291098359121], [0.22927999982556924, 0.3705863165965444, 0.79989794205486553, 0.026656411162894855, 0.30398271674581556], [-0.48058352685397843, 0.25903130432206711, -0.55644623487870781, 0.387544490390207, 0.76038942505569995], [0.084775255883914546, -0.84744375456876853, -0.42570811803850317, -0.44435799196280956, 0.73475572040443504]], [[0.95635092275643196, -0.70836194803896713, 0.98367514037052972, 0.26747640853344246, 0.86437194828406239], [0.84363360015822719, -0.73795437029292699, 0.6119066025852562, 0.25439181333051675, -0.59390030594446763], [0.38087278842392447, 0.59487637337471799, 0.58030145395537014, -0.68733184925522162, -0.41049135637703338], [0.52885099577422645, -0.7916737344106628, -0.33356914902523505, 0.29359776635327606, -0.65572892571222252]], [[-0.73368982776518288, 0.77858766152488612, 0.17203152814683698, 0.73950032675086019, -0.73044550661386398], [-0.70817112832737017, 0.89871539886063023, -0.26488383073401689, -0.69031543183254884, 0.042715821979094182], [0.91573423354554562, -0.35215203306605125, -0.44641280668750771, -0.58554862869571256, 0.69521485378134384], [0.034815817013033712, -0.28548533571218693, -0.055681722088713581, -0.75095830370905192, 0.46163401776764013]]], [[[0.04809335123945857, 0.39719802256008596, 0.4793849195611799, 0.99411520946904375, 0.74541681657590142], [0.56520518963972211, 0.74102582566033171, -0.42524214424017637, -0.76113895048876468, 0.50175249107062858], [0.97925217610761206, 0.015457325602505678, -0.17623740086245854, -0.40987322837049045, 0.79351077979367157], [-0.1602904705376802, 0.95287824275975441, 0.6855128036200433, 0.3971773420293403, -0.37759671227361702]], [[-0.39105247995577375, 0.44183032516609644, 0.8673438799749118, -0.22132901088814694, -0.85119067457518671], [0.69454464879862887, -0.92693995154241748, 0.90227337781779826, -0.73520038921365094, -0.53616623494004645], [-0.62622508064593041, -0.25401278207754174, 0.21793041706371818, -0.48238126173840068, 0.45918672207072753], [-0.060390118000267501, -0.068830951861529988, -0.48257355404919156, 0.44021622109792879, -0.63984418649819985]], [[-0.12543833086766099, -0.75739458842645835, 0.91146157905436076, -0.27173371508237376, -0.22440448638525856], [0.97558865197860545, -0.90474712736638185, 0.23195992254933229, 0.22661838342383622, 0.51758995971117816], [-0.63148838875360691, 0.91838606329402106, 0.43850649386699825, -0.91047766741652825, -0.53326574262823012], [-0.89406089915371378, 0.16868721853341984, 0.7023518789585812, 0.98220798919009833, 0.7196919289728394]]]]))
      res=tensormult(arg0,arg1)
      ref=Data(numarray.array([[[[0.62834943157569989, 0.058243338021007673, -0.6686028222441468, -0.013551164548270989, 0.2209699700822586], [0.32475641680087486, 0.040078550025780812, 2.1137203199471739, 0.042865981846352097, -1.3355561775868521], [-1.2450585540021455, 0.070325837635549726, 0.066093722402361207, 0.90618914172010823, -0.57985546633007345], [2.5030075324658347, 1.3936345678648463, -2.3552903845101563, -1.7286995279611439, -1.1032088187335143]], [[0.65108111376109945, -1.2299633844972149, 0.035111403744280054, 0.84689634650172985, -0.35063768012676055], [-0.1769916988334764, -1.420347745767105, 0.072390244397273762, 0.52291170869788239, -0.00041474139618252748], [-0.42153099642298281, -0.29712585400279873, -0.26148007947500945, 0.73780023110609438, 0.31765264224991385], [0.27471628965220007, -0.95672723266859883, 0.47763522866436381, 1.6008348180886309, 0.26282726985032046]], [[1.2802783139622722, -0.36944433554632211, -0.21262858555149897, 0.086659618512348296, -2.0415310429711537], [0.053387518495368685, 0.89586534484494496, 0.035823326454788279, 1.1498377350170652, -0.25796691564989804], [0.40407960591951597, 0.25647152428085107, -0.21862975023326053, -0.60970685523449808, -1.2876810370012155], [-0.55659309431826332, -0.76018518865962659, 0.36808922161938235, 0.62049509556086035, 1.8403425186481792]], [[-1.1242372230728062, 1.9474300323453784, 0.0066206992330710146, 0.10664602093874986, -0.83219346657555515], [-1.3390368228343252, 0.067252925170317446, 0.88082177223461799, 0.23549753475856733, -0.98026855916693734], [-0.1201883079166528, 1.3608596316723593, 0.23035526146302632, 1.1754126469843242, -0.76880148573867846], [-0.00053022389929735514, 1.413553596197517, 0.60345550772253875, 0.32099372519066682, -1.5038289281932549]], [[0.46313655106859819, -0.41882298609369695, 1.0503737539709033, 0.75253122500599057, -1.218996019143884], [-1.505310801030016, -1.1767977569200814, 0.51937848273944132, 0.64607812347516647, 0.025530467583135097], [-0.30841163913440961, 0.30264041065936509, 0.87601780420399422, 1.1303653599503034, -0.29217306773771318], [0.11101509990124392, -0.080519542903139507, 1.3106863938537925, 2.1165185681040111, 0.90613304686418294]]], [[[-0.62782438497435067, 1.484362452214061, 0.028051275455253488, 0.28829704362472358, -0.79789959086715001], [-0.91046143346351327, 0.3382759490364981, 0.5817198905072114, 0.21359517013355089, -0.48038501239628795], [-0.058883109497768482, 0.75237167068871158, 0.49933733685158788, 0.60384950502317747, -0.50997104372756796], [0.1368327615801892, 1.1632707739234998, 0.48316183279656688, 0.32254031983145859, -0.78982099872467393]], [[-0.54360405135206469, 0.78295335594343796, 1.0658331633977187, -1.0245971461324461, 0.52196927368796397], [-0.89129339336413038, 0.40594635308178828, 0.78394553198461714, -0.67238143140292361, -0.15543097474668413], [-0.088601381561533105, 0.54696831887242636, 1.0290585438037054, 0.30332014046144495, -0.42138937864156129], [0.34127017473833743, 1.3845212418587933, -0.4335388878001154, -1.3070266574525098, 0.046615262063695012]], [[0.38534436439521769, -0.27581092437748522, 1.270825066504633, -0.71049826206102518, -0.041339894622122758], [-0.87032591291024719, -0.00026188247540828713, 0.79255866078944126, -0.21789866437549593, 0.012783547707176351], [-0.19074147467474351, 0.21673133998293931, 1.0746735282714652, 0.29034735076550533, -0.53385158043593539], [0.42960303497452224, 0.62859534487149493, -0.25226611546989997, -0.52689809044583136, 1.1734849478417393]], [[-0.77028010960215676, 0.10323042206436434, -0.47458870333599201, 0.57377641433194282, 1.0170723792140843], [0.9966612656770788, 0.20085391067985711, -2.0412750129170805, -0.56474036747933987, 1.4222224841948274], [0.72800985844827237, -1.018351183215402, -0.27630393528171049, -1.2304358133453448, 1.5816504252124024], [-1.1632207489929502, -0.83839941434177367, 0.96123390951399468, 0.63971147276518314, -0.40889352709465238]], [[0.036587443818717418, -0.86473749816483669, 0.71263777743259871, 0.39871530844839875, 1.0390950705479893], [-0.39963898013283594, -1.4578275560807241, 0.40860929358798947, -0.47277853312089857, 0.33430932961102611], [-0.71982583655283883, -0.55813320659520727, 0.66165280086178591, 0.88632163845019485, 0.92618680054696712], [1.0251833037283771, 0.1726014684509789, -0.15903518474132849, 0.47152972418035677, -0.27854784446528857]]], [[[-0.65637422765265652, 0.41882217974629588, 0.12611762146050221, 1.0415731653514859, 1.4485142081736599], [-0.16437970087315346, -0.92169593573802455, 0.53247368325249966, -0.83808731233007194, 0.43223267834910561], [-0.94846469465995575, -0.84947075458494981, 1.1373568138495564, 0.8443045390627677, 1.5005083745933283], [1.8231365698916828, 1.4083964705446219, -0.47853625903559255, 0.086650839988010153, -1.7228730681806708]], [[-0.099418438936578507, 0.16342091151933816, 0.84827117141961883, 0.68760536034694741, -0.38060194323954644], [-0.81321602391797732, -0.28999398891949524, -0.424947815130224, -0.0055118181516425058, 0.86414145729717673], [0.14057319252932809, -0.3055408029418713, 1.1340815449049184, 0.063492628232819759, 0.47240550615964572], [-0.24728087659063447, 0.17022225161633756, 1.2993059609444422, 1.4465255374725925, 0.66437389084122356]], [[-0.36209969462112379, 0.074180725561630953, 1.2359677306233541, 0.47706720316354279, 1.1397095442458609], [-0.81037997272124318, -0.76730770237954804, 0.39734424818703301, -0.88945605986157905, 0.87196729433026565], [-0.61325311385393055, -0.73159592959709019, 1.848303056562141, 0.59491324639347432, 1.1392198728259151], [1.2470157194493181, 1.2667355908897211, 0.069747012103487327, 0.23522209462425986, -0.19043635233464629]], [[-0.28846155253187966, 0.23864784276792045, 0.332037427181262, 1.2046804980144454, 0.30008546876627962], [-0.6437258243796885, -1.0035232456847232, 0.38033878503816387, -0.19358848044427218, 0.36304661089922036], [-0.66931558152271708, -0.48136279384043879, 1.0366477977480448, 0.91832760848084671, 0.93577662348934409], [1.1186002735853222, 0.81997893629053653, 0.41507323443932354, 1.1663078871847814, -0.85367253256772346]], [[-0.89617378400852277, 0.95139461256895053, 0.91919388082546793, 0.50784268261313681, 0.86735097565128583], [-0.86413566339149805, -0.27591587567659753, 0.13289343129769582, -0.83822302362879708, 0.77903459425700927], [-0.30884643904265585, -0.39409508004909177, 1.6799904972973325, 0.43436643177025575, 1.0031762436150637], [0.75679409337085102, 1.5126106603989613, 0.44297675007514503, 0.26364910074995984, -0.70646267012280617]]], [[[0.9726157612603723, -1.2116596674049116, 0.33731189187491117, -0.25276857358679833, -0.59609679174665398], [-0.77345088276596563, -1.4292535754742326, 1.8137304534865237, 0.66059728644124582, -1.4060159625156892], [-0.9739682080034614, 0.74656808617172876, -0.38493785246559642, 1.6785403063517674, -1.0584276276513422], [1.1451668304606424, -0.16475203929993637, -0.83862078944204077, 0.13102369285521298, 0.21128498547599478]], [[-0.361262089140368, -0.031027871830236128, 1.034055099618181, -0.11820258116076666, 1.1967166504552935], [-0.36224804905466146, -0.24989010987276244, -0.061224294910651927, -0.9112685340588107, 0.8694598823649321], [-0.17701631122393952, -0.60272097049376994, 1.2784716861765675, -0.019389277376514136, 0.88406318429634378], [0.51445146839534228, 0.75484216951343386, -0.038898920749521199, -0.33739048627629042, 0.15658669453438562]], [[0.37109685243837376, -1.7315032547642506, 0.49979482326066044, 0.60649689896252679, 0.9899621355513597], [0.15514866468603716, -1.6916018862688995, -0.57593404411494709, -0.26624128310845824, 0.84891486920977033], [-0.3363311985464249, -0.99332281858304017, 0.066925010145192462, 0.31744123767331611, 1.2974688463213404], [0.19233379774040332, -1.1316372909847665, 0.3952921051211909, 1.2293205562090765, 0.37839685113321475]], [[1.2191198737112241, -0.24999631022011043, -0.10876931633243216, -0.032226831141238671, -1.7483802419297054], [-0.042261270062701195, 0.85671985468805423, 0.48021077915524879, 0.95340934014376466, -0.42516293293436813], [0.1420293401666019, 0.27816415372409548, 0.020759296633164261, -0.36726689913156696, -1.2919699840593499], [-0.024738172079829562, -0.2675235379859196, -0.083622063244996353, 0.14994797015273387, 1.5566638402858048]], [[-0.029816037283901961, -0.20753820690910249, 0.6688718055220404, -1.3621343879847401, 0.95826247793442498], [-0.14898140358487089, 0.14382415055831016, 0.85875673001735087, -0.6468366349105934, -0.42477771564118921], [-0.25467045038825997, 0.33084873805342574, 0.23689771390892103, 0.18121760066859582, -0.44118137680259695], [0.54399258506761705, 0.65913123491338632, -1.2796962645956682, -1.9257502797510682, 0.16652865451120602]]]]),self.functionspace)
      ref.setTaggedValue(1,numarray.array([[[[0.94878234715171628, -1.7739559005854879, -1.1508381091623021, -1.288590208840205, -0.39452743496014814], [0.05981768105358426, -1.7376671581614707, -0.17104109110356946, 1.3198449201044593, -0.37795660845885548], [-1.4314332546396031, 0.28888344136414745, 0.98188536039636032, 0.47032682213427457, -1.9953743771298782], [-0.30719621433124544, 0.3334863984395296, 0.13144206670103184, 0.88372837234020296, -0.29568588051741584]], [[0.057591772070912262, 0.80835430988818646, -0.54902104021161779, 1.1519453660019501, -0.58001013207656471], [-1.1320049871748092, 0.9004027568147932, -0.45850016991188802, -0.9578041562525732, -0.93854825710108258], [1.6157304902304466, -1.161475664449078, -0.21375240311390054, -0.26473190736784591, 0.66161123067520289], [0.94825409515124348, -0.15428841496980172, -0.66373279013115982, -1.0447953676124548, -1.0959669505563889]], [[0.82779685172887651, -0.7487141208476551, -1.026790662300872, -1.3882119961569255, -0.32037257852907208], [-0.27601754995435168, -1.4908703783468513, 0.64517321801136185, 0.94277775644255923, -1.2214480543209438], [-1.4089521722403366, -0.41385324203557977, 0.60980978539396113, 1.1173867280800636, -1.1632262101483966], [0.6956344536752882, -0.61301415443586449, -1.1464987079255584, -0.0080781582233037108, -1.0464939742051182]], [[-0.1728849102222422, -0.22889161718225379, -0.2791929316813066, 0.45308314075593437, -0.66379853854533666], [0.37700192641257202, -0.15643952165423813, -0.87242301660474741, -0.67508385480314415, 0.53322372456878764], [0.15033773871068656, -0.17350627194968044, 0.27448337482030405, -0.60420328219364838, -0.037435215213388162], [-0.93694793944510135, 1.8456912157666587, 1.1604303496547073, 1.0797132668103668, -0.29603220177621303]], [[-0.54700351832654959, -0.25491940196800633, 0.99861642595511912, -1.2726555985051169, 0.2558649358710039], [1.3077723079716177, -0.94061790414049895, 0.91047284023990627, 0.58077654281953439, 0.91248934863670073], [-1.9114474183899182, 1.0362424178157323, 0.020063064017253052, 0.22544060088845741, -0.13708583898477988], [-0.9997246522112998, -0.015339463188178915, 0.41432499617388968, 0.98719618764962769, 1.1637022391756078]]], [[[-0.67941184808791322, 0.19913232633895239, 0.45855401690864572, 0.18387916182933084, 1.0773508617539902], [0.48023257241725181, 1.2069812742012989, -0.58000685823453912, 0.21623375523737332, 1.8852390763608404], [0.041217025139486663, 0.95234619475015347, -0.67021247035290077, 0.093043108775020977, 0.51355665636543857], [-1.0789174131385637, 0.74060670946173701, 1.4135739116712367, 0.34425666331621751, 1.7974802102452117]], [[-1.0540957908400772, 0.27251337688741817, 0.17174929955451596, -0.46797111334357466, -0.4165354173131855], [-0.38055715907219134, 0.52666384881767059, -0.012550916543018986, 0.38836173196751678, 0.94129400650139683], [-0.56295598946884007, 0.50920846334911329, -0.55178649148662706, 0.061215324091671075, 0.10442915916488271], [-0.71114417272634101, -0.47077533172047503, 0.3517667048183713, -0.39676994079642192, 1.9057927441074214]], [[0.80944729363803591, 0.064522318172114734, -1.3301863280204724, 1.2076923279343839, 0.65925769493081288], [-1.7195502380729197, 1.598562260723204, -1.1390274262090483, 0.14767185759326226, -0.59418143824618019], [2.1566646334068369, -0.6936480450844853, -0.29024124835806819, 0.31852042725188279, -0.086218317745698214], [1.257817544920006, -0.51905534924001606, -0.4048753193699311, -1.5364823275959476, -0.53173709141495429]], [[-0.57290950131281759, 0.11716633892490103, 1.8492728229918287, 0.91760055687249087, -1.0300678299088322], [1.3243441414263926, -0.72886470873060305, 0.32113173152736585, -1.3724976208155522, 0.12660803453148078], [0.43771311874561425, 0.35112714751988816, 0.4384912765480159, -2.1763011451917751, 0.56736388788552217], [-0.85946415507197582, 0.63261554349416715, 0.69080280168913388, 1.1369658486396539, -0.1676706235728892]], [[1.63596344899658, -1.0508583531340954, 0.37248247646594618, 0.60291397728611484, 1.0925084261056217], [1.1289253746331522, -0.98293274656055707, 0.043207339746760318, -0.056748071388376772, -0.77883687753405395], [0.67234424797939496, 0.18357822162216941, 0.97291036342857673, -0.57502963074400559, -0.59664435709527375], [0.54147966020662719, 0.51892349477912514, 0.067308846392684862, 1.0130742667792203, -1.9194124417898781]]], [[[-1.6327942558019746, 1.9606396671870423, -0.96755407094730295, 0.17161358011447553, -1.8449956401583942], [-1.7461391503964729, 1.3506019035558254, -0.30149740247526924, -1.1556744173129934, -0.16572619041167341], [0.23551285243928388, -1.5640084983589642, -1.0500787560182892, 0.6045121371807245, 1.3871763701069413], [0.15647865224071228, 0.060940477024630166, -0.65505824365727572, -1.4170860910946568, 0.27669003925859476]], [[0.58628376055516251, -1.0998056861265699, -1.2216765570424015, -0.73959327957718979, -0.094166238138848751], [0.12677402704777019, -0.8431423381639247, -0.66067642542383043, 0.68090358527319661, 0.2264131335848279], [-0.94001431402339675, 0.022888702641034792, 0.55238354255952204, 0.61698293246489488, -1.1666362262718917], [-0.57174935778531222, 1.3068576069899065, 0.68440318456398863, 0.99555811175615017, -0.33074113217772372]], [[0.70228555250803371, -0.39400367843688333, -1.2080514734885781, -0.93932752633007111, 0.6300192920504244], [-1.0023977730818061, -0.012347985808576101, 0.20235632922876456, 1.3149399284782033, -0.64441620264596189], [-0.5168802593743369, -0.16984240722067168, -0.06212331141536781, 1.4938285355152066, -0.81425504607831767], [0.9847429079821759, -1.2340971390598221, -1.0428439018253686, -1.0099689744808453, -0.048569149786662824]], [[-1.041043384843594, 0.76801664050666196, 0.81329110275479755, 0.41318625584243518, -0.6902718670862722], [0.43095859475169551, 0.32866730571544384, -0.0038831682154995273, -0.96726751729222737, 0.66091768370958359], [0.063203900052037798, 0.0084894594666122813, -0.32451173540053457, -0.73682642026741252, 0.92334098235760309], [-0.7839340057871621, 0.66032507163578302, 0.5905586118720122, 0.36786693960335753, 0.53975835497823077]], [[-0.7921902787315096, 1.0635112227899202, -0.74279014239888508, 1.4561240498847474, 0.17543744404467193], [-1.0067112609877045, 2.4308146844885314, -1.6630303457549258, -0.89722337700307242, 1.2326929664240562], [1.7678908304444845, -0.50437283450314296, -0.9807507636322812, -0.0082083571715118771, 1.1709073643472472], [-0.43195786201951109, 1.3669923308136016, 1.1792160623749659, -0.60769547336369045, 0.74011890205002062]]], [[[-0.50929960617252124, 0.6285851203093642, 0.21223081517699219, 0.55766472765506792, 0.56620157539986182], [-0.83366352921518827, 1.5768401169502499, -0.23427477957698944, 0.17397234999068853, 0.54576573762591063], [0.99930427484280204, 0.27818528786180974, -0.80156113753145564, 0.012303086604940935, 0.58467506040561112], [0.26487209051011151, -1.0589358351277212, -0.051624580110678851, -1.2695346497675364, 1.3528489844506961]], [[1.2250731499425296, -1.6741806352023054, 1.5624103394611595, 0.073308930980567399, 1.6011392308875354], [2.1634035630128552, -1.3350520229335265, 0.39444000526778022, 0.66089724567634267, 0.44536838154400482], [-0.18818539585714267, 1.6641343045206671, 0.98677291427755986, -1.1081488700011761, -0.96069136730550131], [-0.53432639206559229, 0.24521089482865738, 0.95535332631858205, 1.7315281996363108, -0.11795791680532552]], [[0.5896051258264442, -0.83069966828905151, -0.10967886683540552, 0.23363080291836866, -0.68907791081975966], [-0.090200908732372118, -0.8578604458530682, -0.13482827741706443, 0.03526300240842118, -0.76490409588019503], [0.34192410833537012, -0.056640390693004722, 0.71105690167496849, -0.83443164286162375, -0.84852194030888084], [0.16314192915069201, -0.1309071965644458, -0.12298374789075354, 0.23247259183082508, -0.65355119210811008]], [[-0.41887233893512327, 0.022422063498755862, 1.2995391541661512, -0.50917499673082811, 0.51523152024309971], [1.6977935598312257, -0.65031289277836324, 0.66773560116586905, -0.14012083745527046, 0.94582479877657377], [-1.1701550809443211, 0.83405187185651497, 0.041597354809481679, -0.18841724442888474, 0.39739192325190487], [-0.98667231754571383, 0.70290181754471026, 0.73092519210795714, 1.3165453940220253, 0.47976849224353657]], [[1.4507756244510046, -2.0819827582621837, -0.26817398698159167, -0.068619130348478052, 0.58490212832921873], [0.77320185954147069, -1.2893828637946361, -0.5783295184692665, 0.94558883855866172, -0.013980668510501393], [-0.05886889746915569, 0.8512579200356285, 1.1563510496157565, -0.61298562336409246, -1.788744930256607], [-0.38409759913241726, 0.7092512321679173, 0.88708761528745206, 1.3131499006059912, -0.46466943352872125]]]]))
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5, 4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_tensormult_taggedData_rank4_expandedData_rank2(self):
      arg0=Data(numarray.array([[[[0.64709302016996784, 0.09217146217876504, -0.057802961406754116], [-0.2421785039489015, 0.052945932563050579, 0.77492809294495668]], [[0.64400832769177763, 0.58943942234923363, -0.57320702033298576], [0.15428899722073375, 0.4277928913834903, 0.75764018049166126]], [[-0.28081217299865191, 0.32794886405175139, 0.1482574378415773], [-0.9759312944720886, 0.48986751274899087, -0.37632167730591592]], [[-0.94921429506611443, -0.056113839469226212, -0.55202580311715277], [0.63254853953676871, -0.53781413486086005, -0.90646229700260128]], [[0.73953692720383835, -0.3798999633587874, -0.92353203281985818], [-0.79838663857361869, -0.55301680636501716, 0.84258449336145969]]], [[[0.74197794049432053, -0.64920402452750481, 0.14295942293290542], [0.82239777332492126, -0.89169581509351792, 0.69167035639026908]], [[0.83809576011890785, -0.64753484168443842, 0.59685125581791909], [-0.32595415423843299, -0.27113667999047442, -0.52108438907453203]], [[-0.43030442068030483, 0.46513143452770911, -0.4953938394704267], [0.59757586023621134, -0.99012492966931798, -0.071050538250279738]], [[0.3954364127781449, 0.72941370058888566, -0.021990577777519782], [-0.89152912506057613, -0.76164212549274235, 0.48586261160934585]], [[-0.84123571961232368, 0.84727057977174858, 0.89714538846709946], [0.3675176750423641, -0.094487844612126892, -0.8815389576014403]]], [[[0.4206721060558174, -0.37653576836618585, 0.43665424795914931], [-0.74860181702507123, 0.95934683858556502, 0.36221278884369257]], [[0.5701069023715073, 0.24075443818691777, 0.28687410642128364], [-0.74725620581509067, 0.53353464540075257, -0.57360625385626318]], [[0.27520834372036895, -0.11263366579965517, 0.28595825883247605], [-0.59659319655263721, 0.30791997974406948, -0.044461431145065289]], [[-0.19308006115538268, -0.6364201209384972, -0.62890034802717532], [-0.090054237857061903, 0.2397174206062993, -0.29771036576168042]], [[-0.78354926207567321, 0.43857648946925121, 0.90504528727138633], [-0.44257576212948502, -0.82087039125523931, -0.47965144884319155]]], [[[0.20340170766356214, 0.66584872379397675, 0.62278635134233751], [-0.50600159139820566, -0.99652605743742217, -0.14142799444618936]], [[-0.64986182906977441, 0.62135600961065807, -0.88209108613957166], [0.72364188872486279, -0.31674378422826854, 0.96091330818120801]], [[-0.67736019590608088, -0.35990313362337623, -0.55845060245646394], [0.61845581444218278, -0.1327787979181454, -0.77821733168903839]], [[-0.79061486751534815, 0.068755433321681991, 0.44773242963997228], [0.62031876201072023, -0.2578378504889185, 0.38655809256847973]], [[0.31454976677573665, -0.76775444261739878, 0.61130113599433988], [-0.35050918106005824, -0.49230734473614302, 0.086696440373094319]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[0.24688286535336901, 0.70046330627534115, -0.10422503730659893], [-0.30515285010422488, 0.22231689510573593, -0.35284561221314426]], [[-0.50940229522154512, 0.48235798089184145, 0.55126232919286422], [0.99295639811881986, -0.93176237969852149, -0.40376245854172477]], [[0.90080499690776095, -0.018381091539183547, 0.59980566186589179], [0.25983619760062626, -0.061621085297332456, 0.63294082965740617]], [[0.203793394978526, 0.7658838239832233, -0.94842119086663867], [0.49454488391563989, -0.80791104257865642, 0.664367541912255]], [[0.56467924730210939, 0.80053009989004908, 0.34452876204921545], [-0.10921658855305139, 0.30132815276262392, 0.17252499921604847]]], [[[0.42667545674214735, -0.78754163151866652, 0.10874732273699994], [0.05218590790397748, 0.3647300618485767, 0.82048445349057464]], [[0.31267055376210795, 0.025195583222341833, -0.90937329913267861], [-0.55007068098659651, -0.37976955239288501, 0.011491061607457276]], [[-0.48813385687801669, -0.87068466335610473, -0.16237779581563339], [-0.88430649757975166, 0.27579340830385712, -0.41846238150565251]], [[-0.5571247396483392, -0.8934481547357449, 0.63079784064929489], [-0.51587833757891777, -0.41505133174715714, 0.41499825155865877]], [[-0.30395098703745393, 0.047476735800527914, 0.17614617896873797], [0.99021144116258863, -0.45918934977829151, 0.58019251637662106]]], [[[0.6151043736967079, 0.23437561422484388, -0.83087513762372134], [-0.0099716948110186721, -0.67489206808304281, -0.98681413487233161]], [[0.60544563534811724, 0.86133643016985806, 0.81773875156732401], [0.78987509269199663, -0.81620063964753542, -0.337532861542855]], [[0.74696020514356509, -0.18132260613431006, -0.98637718372596805], [0.68893865742656812, -0.35528037525144884, -0.039650400218779858]], [[-0.088044879032497914, 0.44951497282409436, 0.78725803862382882], [-0.78233321562805824, -0.53466363171855269, -0.80383854593351778]], [[0.33190031987709312, 0.7973773094942036, -0.16752864599275652], [-0.14779852868800591, -0.94878840369478445, -0.81014632436480749]]], [[[-0.43451184703588552, -0.22067020702976436, 0.61709538853697432], [0.49783852693562158, -0.31999116125998106, 0.84496792388800812]], [[0.53448927914832201, -0.89757597694094771, 0.55193291288049906], [0.59932657262772904, 0.24197789923180646, -0.40865852185488905]], [[-0.13276448411538544, -0.94561024861248022, -0.60679048605595698], [-0.78044117516685718, 0.3986354331993005, -0.12108680566660301]], [[0.5633341918725796, -0.76835773275588259, -0.99874799656547397], [-0.03945414843101247, -0.53999668460538808, -0.16516522734479921]], [[-0.45837250182301847, -0.85566316181131552, 0.29670661352794991], [-0.55854379523500453, 0.7185987464145327, -0.87735800200208991]]]]))
      arg1=Data(numarray.array([[-0.56528169734849087, -0.55003738783862688, 0.92421657542939628], [-0.58550743495611801, 0.24840772076064255, -0.13480949313616808]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[0.22521794340935708, -0.30138429578603332, 0.17598339790254158], [-0.18279084188260897, -0.78714465238306697, 0.90315283136795221]]))
      arg1.expand()
      res=tensormult(arg0,arg1)
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[-0.41942821646186462, -1.3042346566966545, 0.85920946255518627, -0.32451255325701123, -0.8461318386793738], [-0.72648246145848872, 0.62777126116949089, -1.056709162872185, -0.37776157525042253, 0.71884527627306116], [1.0006649708274047, 0.45782462235727472, 0.60246312591778628, 0.03036862704675055, 1.1580328712248193], [0.1621572770820352, -1.4215767851372809, -0.22545247466670576, 0.34354192765192804, 0.88070434744801118]])+(1.-msk_ref)*numarray.array([[-0.61173798774910781, 0.024180591015872277, 0.88662439245040492, 0.79373619617525082, -0.11486856979366394], [0.79697380573198373, 0.31265050283601875, -0.30948327750064847, 1.0506168200295882, 0.6526842163605675], [-0.43650838049530877, 0.21391466750784183, 0.16720561782219423, -0.1788897885243852, -0.1528853627789708], [1.0012593944849628, -0.18108120985243056, -0.13218005817893297, 0.46577877313934751, -1.0490676682162012]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_tensormult_taggedData_rank4_expandedData_rank3(self):
      arg0=Data(numarray.array([[[[-0.18102150036743847, 0.88455835668365146, 0.90961223273667025], [-0.30128341036258011, 0.76431413394841896, -0.89934788581848202]], [[-0.02092517968781693, -0.16982721122708133, 0.92424420866642887], [0.90851220799131926, 0.0047310096609787244, 0.99242627139681039]], [[-0.87864147548583094, -0.81651449072960247, -0.79635088144092303], [0.65247914383951167, -0.065416875134951979, -0.90822569527206842]], [[-0.8484568469056768, 0.14275796771699589, -0.5051750557358663], [0.32059170251251579, -0.10608643299416909, -0.29154896768326943]], [[-0.94487087312202966, 0.40127813374240029, -0.06841566503192209], [0.35347262338052032, 0.38166537428236325, 0.60190510420038046]]], [[[-0.80131963270502138, 0.62002245252769073, -0.65601004821269648], [0.22204116375303107, 0.22035558610924033, 0.45209762608490944]], [[-0.54583591945823007, -0.078023746177704245, 0.37146877656121635], [0.13721240262623402, -0.76625730515580015, -0.54392608316882751]], [[-0.79192371674428808, 0.031259481454821048, 0.23595741961240435], [-0.28826071504779915, -0.18077774133825075, -0.81107785416647982]], [[-0.072437719264344391, -0.92625835614576291, 0.20173785309294834], [-0.83851136298411344, -0.2733765206813652, 0.94001511981438712]], [[-0.85300891001496604, 0.77394980481309528, -0.75518906466811542], [0.82465233396321591, 0.38628804302770847, 0.049216210738299848]]], [[[-0.62682131494481697, -0.29049253157691934, 0.56148567976490082], [0.19578079720753649, -0.74386306616768438, -0.14781107800998039]], [[0.33547531977301248, 0.54843564585775728, 0.32503357561501534], [-0.70382463631937142, 0.36937087289425841, -0.14986589234960412]], [[0.54977835551201504, -0.13353039680706469, 0.84719015713257284], [0.73660407961159646, -0.70722003592569949, 0.32692321508016731]], [[-0.65206031764404049, 0.37673564953098948, -0.12606486468927991], [0.17386462938096159, 0.53091285198269156, 0.10300536996419996]], [[-0.92983127144130395, 0.48282265835588167, 0.66685280183398277], [-0.20315338609634814, -0.59439070459158394, -0.93642874103595797]]], [[[0.19137889737816716, -0.0085007952092754913, -0.1160449401418493], [-0.78366415636350339, -0.66144781676308129, -0.59093156241227529]], [[-0.64094871921320373, 0.32375957638587161, -0.48749241555548939], [0.52421727371919102, -0.16623389007600631, 0.077353068221568622]], [[-0.68540831690749182, -0.97394479639969056, 0.93609279442344673], [-0.4722473362888151, 0.3762417845125785, -0.94876452469462902]], [[0.54416881229356995, -0.30200507237868757, 0.55183729966655637], [-0.88381751627665528, 0.017092704927261115, 0.50045129873464322]], [[0.93423537613990737, 0.98333019290272849, 0.49643967530733302], [0.26776809355167486, -0.24496836073264716, -0.67452390521857941]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[-0.80325544314652642, 0.75566486594463167, 0.31307849390514186], [0.089549060505740963, -0.4419113579971532, -0.92647725287214944]], [[-0.26045023505287479, -0.9095769192160168, 0.16486847250195669], [-0.95027725943635755, 0.85182703092491696, 0.16895569198160532]], [[-0.74873051646760547, 0.28095174027782144, -0.51226124118258953], [-0.13870415686086868, -0.93270246047744321, -0.91515101547570166]], [[0.57548019128464878, -0.0026169622487481892, -0.58231737194924293], [-0.80500697245833863, -0.67231465510633526, 0.89905613238123538]], [[-0.819929047805249, -0.10966580104030643, -0.9491546234630257], [-0.22351793950563503, 0.017139355178164895, -0.52928400701694822]]], [[[-0.318636689330978, 0.033129610601533965, -0.23068586398283175], [-0.29620828980869884, 0.35464107613382612, 0.062212699483478628]], [[-0.39296222595086472, -0.96611511143604623, -0.13504288648161977], [-0.087873013774334208, -0.052819996664915658, 0.16992720153358976]], [[0.31571760065488963, 0.22950621183558462, -0.94332149887427397], [0.57273241880652503, 0.98120803143661717, -0.0018251736220533665]], [[-0.71919074889995471, 0.65778894317168857, 0.1881319551234435], [-0.26588363049690211, -0.38402501932818556, -0.077134277564692821]], [[-0.68783792593097259, -0.030266715760787877, 0.30057142782299939], [-0.3910682384280284, -0.63426881441618277, -0.98875989070119341]]], [[[-0.66288041366958717, -0.99102146635378041, -0.56247817739616601], [-0.82970247911862538, -0.56175850806239191, 0.032321417777472883]], [[0.55754393393359614, -0.80144583158615101, -0.92726734109683284], [-0.51593915684197045, 0.18110387189093946, -0.34695620326134002]], [[-0.66471743856718968, 0.052190478734083667, -0.19427701476143566], [-0.74481795302259202, -0.18986659505562087, -0.39738061881401143]], [[0.43648250881040362, 0.25194106442863773, 0.66832624827710596], [-0.97316477019903092, 0.36677189950585043, -0.81129877060299438]], [[0.33070239525332457, -0.98420278875321343, -0.48313368259542466], [-0.55997680326172139, 0.22333119466764262, -0.16217344603313766]]], [[[-0.62106409057319478, 0.79053193745877515, -0.57111969794469464], [0.17362389983970417, -0.0070492324972455389, -0.60727566287880586]], [[-0.16821704668460402, 0.79461080406023488, -0.097466508742665159], [-0.09185227684706665, 0.31308303673527216, 0.77815594232376628]], [[-0.30480099113534442, 0.15963225184667129, 0.093313037917438058], [-0.26336809658953153, 0.74007787797010116, -0.75116754291575782]], [[-0.96545804260571599, -0.32943092262915719, -0.53637686235139648], [-0.85855708806741737, -0.0092880976516165337, 0.16713331279884258]], [[-0.96434097911145167, 0.56717063344309748, -0.16609412113644817], [0.052275229936108225, 0.49272975176528955, -0.77013759103022239]]]]))
      arg1=Data(numarray.array([[[0.262008900243069, 0.55346910934551885], [-0.55092162364281561, 0.78196395379018968], [0.90051786969460457, 0.2145534489018901]], [[-0.46313325861323285, -0.22984034489821736], [0.6165824479180626, 0.61325693632145506], [0.52546699341354319, 0.85849859224233338]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[-0.92398551168042697, 0.35048324754335591], [0.93465716436475277, -0.49302967491951], [-0.88564118081081489, 0.15176377686664622]], [[-0.27332742502711072, 0.35085802193762849], [-0.97165659494244827, 0.96481573535226151], [0.21627035210941115, -0.98988097623067373]]]))
      arg1.expand()
      res=tensormult(arg0,arg1)
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[[0.42258991747133379, 0.55254251627770135], [1.0240194126528919, 0.70000470663988223], [-1.3172669115289142, -2.2654395072356248], [-1.1229579336349456, -0.85538764769734366], [-0.14234239995218545, 0.44570073162789658]], [[-0.87169030377585432, 0.37280607617465622], [-0.58733826437696035, -1.251824500093436], [-0.41638461297623641, -1.1041545059342499], [1.3867152263941613, 0.11096621616918467], [-1.4478268584238514, 0.060665841899371624]], [[-0.12556160961247076, -1.0816853476818185], [0.55341362064637412, 0.94389609656344042], [0.37510353108620215, 0.059291141482135545], [-0.19096611023073462, 0.28070565107626644], [-0.67357482826139803, -1.115751536258196]], [[-0.40508550700340751, -0.6584565857920166], [-1.0899289209531957, -0.36219304236208288], [1.1521055442932435, -1.4153387510107442], [1.4887325338668473, 0.82667802136275526], [-0.47940263384376591, 0.60166175114644171]]])+(1.-msk_ref)*numarray.array([[[1.3757490749873469, -0.084420622897409925], [-1.2869110580176906, 0.70338372904185786], [2.1543474713121222, -0.52133864461145019], [1.0492715611166685, -1.7064497516819481], [1.4256846324427752, 0.084691235335969173]], [[0.27951268439224297, 0.013632607517666817], [-0.30820424724752993, 0.068101903861248869], [-0.352099960441766, 1.0037777400950141], [1.5418434469748077, -0.93526919413828213], [0.85040654236139046, 0.049055218768851994]], [[0.9639873875334255, -0.69418487657748695], [-0.55300025305395506, 0.78697661109319361], [1.1371518683218911, -0.33934011219225751], [-1.0255658260808964, 0.94570695440336616], [-0.89659084316589155, 0.70735814441542177]], [[1.6465952225322651, -0.038856792303511134], [0.87362775729058262, -0.9659572804104315], [-0.46137983770428709, 1.1938308939380979], [1.3390397291030065, -0.73299525914096175], [0.90863668774956763, 0.61325476972454096]]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_tensormult_taggedData_rank4_expandedData_rank4(self):
      arg0=Data(numarray.array([[[[0.50581890946947206, 0.33677095338621887, 0.6211125607200898], [0.68847870303385483, -0.67342726411696363, -0.023973335702816012]], [[0.68482411650276354, 0.042701407164775995, 0.23088602846595641], [-0.5814954057787578, -0.22350638745107876, 0.00037714665965160599]], [[0.71973974092389459, 0.87594280452336326, 0.89872605749629897], [0.79320444362876352, -0.42644995416979126, 0.16725099543981914]], [[0.7218151919161726, -0.024636629824981604, -0.50224655727277034], [-0.072377065741560997, -0.41747699749824818, 0.51035122813779421]], [[0.6033619863830213, 0.36417008636782788, 0.36322116214933708], [0.49545708650028164, -0.12756579849834049, 0.024689708858454784]]], [[[-0.14254855559274282, 0.51169154926887983, -0.18992763586151695], [-0.082611951421016405, -0.86600103594508271, 0.65237647071352001]], [[0.0048060916061998249, 0.91959663815639514, -0.72775238005616094], [-0.041526842226615068, -0.71533011149881753, 0.194636588996979]], [[-0.9639554573033593, -0.14000495732252349, 0.32955554396829667], [0.20437808903310661, 0.37475258092749075, -0.74001584623561434]], [[0.33981870901778399, -0.95989843724762758, -0.42919107118451172], [0.87803863338960553, -0.68728087803963112, -0.81430781060702961]], [[0.15721633735569407, -0.8602125990119045, 0.53631206100224982], [-0.22470917210796792, 0.38362951833401526, 0.21805862564899647]]], [[[0.48409083679886655, -0.94017931363649665, -0.15759671795303354], [0.2171492247707838, 0.51635103533122262, -0.4349630771287365]], [[0.2724186940008142, -0.74652953176529602, -0.93893333625564557], [0.37981983597253643, -0.25946928711038697, 0.4480294002277998]], [[-0.36504906690621985, -0.41609247779850445, 0.97781625388127913], [-0.52472329361866699, -0.50841230626014711, 0.45692358855366932]], [[0.92403144550570127, 0.53497509623604822, 0.96154453233419268], [-0.46401140409426778, -0.93687016087869046, -0.62482170729222353]], [[-0.30718627202471271, -0.19368704986556962, 0.14810751523358867], [0.99154504209866023, -0.7876813021389466, 0.59265261842726891]]], [[[-0.4967625769215771, -0.61385504408600666, 0.3032118940475228], [-0.57275300911196281, -0.17226923356372548, -0.34145457949093805]], [[0.22282296186922168, 0.95189887752642188, 0.33240978359949125], [-0.69372450447948641, 0.6535765104657838, 0.50702426841400405]], [[0.96300629767246293, 0.38927487378016723, 0.093484884009075175], [-0.22483881600730937, 0.073613976949615578, -0.69590045155557356]], [[-0.72863200763920788, 0.060242462817682529, -0.41383012142646169], [0.76464772115670843, 0.7797160408293573, 0.55953119568155762]], [[-0.51057230216819693, -0.14300541566774538, 0.64598951385991321], [0.19393496666184595, 0.70378272328000357, -0.97342068770585266]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[0.86673698877308181, -0.98807091824565885, -0.19987804547432231], [-0.74816011758855572, 0.76889278126965688, 0.84209091654992307]], [[-0.91120782518734078, -0.25180377422229094, 0.2876822234431089], [0.34214264475939316, -0.76221735292008841, 0.14244676588955563]], [[-0.63084325395350893, 0.11681723493566953, 0.1091607030616486], [0.71412933162509185, -0.24616971909801122, 0.60098629873741771]], [[-0.65452271806867413, 0.58723654914534018, 0.56681972956253546], [-0.76592569140697986, 0.53116669326287091, -0.35020160947803047]], [[-0.31767170697446678, -0.34705755514282077, 0.86088391584040247], [-0.254201777693849, -0.47882199837919481, 0.10964715796599833]]], [[[-0.00016287644633572462, 0.83108725273747863, 0.82123863872255942], [0.13816093470074819, -0.56701372597332966, -0.46940655914752472]], [[0.81806754716514907, 0.15717495710285601, 0.89163866873273157], [-0.42044663729798359, -0.75685806731005867, -0.97172423559461274]], [[0.60010561814602958, 0.44844119550935613, 0.4770238163389835], [-0.74438799462416649, -0.93871432670697508, 0.4372035176930289]], [[0.61511131654227547, 0.045450268422539075, -0.82331477911609552], [0.62141388987315982, -0.81583120658449881, -0.35798915471640669]], [[-0.098082676614894337, -0.18771118318742741, 0.93501664655294725], [-0.83063644566583816, -0.098112979084822749, 0.5035168031119921]]], [[[0.41836142908108331, -0.95349269212647014, 0.097607397084338743], [-0.7652490845107065, -0.059067267127377532, 0.70548994565043177]], [[0.071593164396588138, -0.16406074323379438, 0.72351337027953], [0.49888632144570555, -0.95596805121136974, -0.5985424494466598]], [[0.95851979142089583, 0.53967392504525424, -0.65869998398898466], [-0.61755200124136067, -0.61213525423663562, -0.78278535042356312]], [[0.80120575973898345, 0.23816230414066242, -0.94417239440056422], [-0.27852499473201542, -0.44879117864946538, 0.22873256980293477]], [[-0.13345251906030731, 0.18459825183084355, 0.67267482659954769], [0.39658545469049278, -0.80816547284359919, 0.081761849534440545]]], [[[0.47095070881369971, 0.14403825209224785, -0.99682779270166288], [0.068361540021822487, 0.3412728862254335, -0.9393886546445589]], [[0.29912744614850362, -0.60595227925903372, -0.75801082728257185], [-0.15904711879275535, 0.45510472853426909, -0.84726522004037719]], [[-0.25049434746923827, -0.85244481577453279, 0.11590365528982782], [0.47507337434188068, 0.76978362594771399, -0.70346307790920926]], [[0.73428875547785943, 0.13106276668824268, 0.23737244125641799], [-0.1580631943475661, 0.91673717492237339, -0.12250194110809853]], [[0.471275668967436, 0.437365173302245, 0.56311558786595373], [0.7186987984676072, -0.82095176279293303, -0.17134900945130482]]]]))
      arg1=Data(numarray.array([[[[0.20362262757549687, -0.29239309996334062, -0.2051888791221439, -0.10515946561792267, -0.43372937390021682], [0.85589013307426542, -0.9737410216669542, 0.58591488857575147, -0.26786623924431918, -0.43115161041562367], [0.77988022206809893, 0.041096680494659532, 0.25931131429721743, -0.083081332100204408, -0.4706011578879028], [-0.21046382737232849, 0.38804203932985093, 0.95505097064691125, -0.53892170057514677, 0.71221941707975178]], [[0.34658127466825195, -0.87346251839316569, -0.44857423646256245, -0.9298356734643185, 0.070378772663292066], [0.85742455789498817, 0.41901535444423366, -0.56769878712327726, -0.18884032936183948, 0.63135604194640194], [0.53065894567489713, -0.53332277315596355, -0.93318333342847803, -0.1233107409773444, 0.34550339605623748], [0.48573975184717555, -0.29596352983961993, -0.80768044358841307, 0.89133936118540968, -0.18449045615420645]], [[0.24514190548802151, 0.29290588918007243, -0.69893968602652223, 0.15572872211412303, 0.087723230478693681], [0.46681432826147407, 0.75094583468344878, -0.031487794569465377, -0.6554508247409212, 0.23607960506520231], [-0.7864416159609553, -0.064249261100141064, 0.38874205520937499, -0.36051291440495503, -0.93696171360284919], [0.79332897453674489, -0.049112347478443619, -0.16097080387864082, 0.25226334410909335, 0.31718358597797502]]], [[[0.37011826186338093, -0.10956148918404462, 0.41836412970632164, 0.65482116436001703, 0.54279583313807955], [-0.55151456709294289, -0.057965602345621203, 0.5842601221116932, -0.088266014019244388, -0.94086770296311029], [-0.52777187251314994, 0.048083654170878676, 0.48003077149908258, 0.14063239748776235, 0.48133240265719546], [0.10788519407006691, 0.9684404854862716, -0.8900231157135694, -0.19748853914855546, -0.095368127954940318]], [[0.35636006113808549, 0.85209019121106633, -0.70163667784856054, 0.7927462986964795, -0.70388293437199545], [-0.87954934889273351, -0.75640119564625685, -0.63306869575784952, 0.86716229104358722, 0.21472151594056399], [0.65202509725849733, -0.38758561452121354, 0.15973410658092302, 0.93269158052669376, 0.12428330038950675], [-0.90702079018168202, 0.48652938055330419, -0.71996710142886466, -0.46361455089468917, -0.18153006796291682]], [[-0.98417131996427742, 0.97379267518111168, -0.62460157504610692, -0.25275579479120558, 0.69558452653191449], [-0.87487837734151097, 0.51576758143886359, -0.64049579003346979, 0.29258750082477913, 0.60679292253673744], [-0.0033846093057539051, 0.47022677290773807, -0.16538605196821332, -0.4488471229762736, -0.57829420433179402], [0.53574861253828732, 0.57086326816424227, 0.98167233443091195, -0.58184244431612808, -0.066405663270308057]]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[[0.53191637148507498, 0.43025682224115069, -0.068410983823299576, -0.96678125159232309, 0.90092022242622138], [0.95330547986865732, -0.84259080037628986, -0.88327546673250823, 0.63737723754931497, -0.062294892214283859], [0.10841669649891172, 0.80437792560329169, 0.76446390683611543, -0.57867403103868531, -0.59253555261309154], [-0.97609042592417317, -0.46786918668359778, 0.87107519980503434, 0.67938899154565324, -0.62030239888294081]], [[0.49224191477806389, 0.46798961787425908, -0.23698220019640637, -0.31071395426319737, -0.85046723121153156], [-0.10593239901727802, 0.60043501023517676, -0.68755083454672361, -0.94339388510764177, -0.24896479092364387], [0.30327542924912065, 0.70865358814298474, -0.83307328461082708, -0.087941754826986518, 0.7540526971996695], [-0.67654265599165386, -0.58063741612623176, 0.64070811538879435, -0.67438129149133719, 0.75470664075681304]], [[0.27726559097846093, 0.070639536436296835, -0.67060498883541131, 0.001078469554175232, -0.59255372094034331], [-0.17979147264355522, 0.86554150174997702, 0.061500772443287222, -0.41752984465030041, 0.050980005315996335], [-0.54765620985756702, -0.1818681598146239, -0.62165489971784105, 0.44079061277668985, 0.63027549675776462], [0.83677527499601601, 0.9904027141886691, -0.50670014294828336, 0.47423220436923996, -0.92864353183177051]]], [[[0.49946099567400815, -0.80855447603195651, -0.42744913652242578, -0.99149733394390682, 0.62176433021017741], [-0.98170592355080033, -0.073960928286841421, -0.011544089332868879, -0.43430098133893469, -0.019386706544241461], [-0.65729002602748565, -0.9738601757641312, -0.83342549104431951, -0.76661926939734815, 0.19775512951779106], [0.742098408002827, -0.050692249875846418, 0.12380999336347753, 0.085393681550661737, 0.81559125013639022]], [[0.021037556219464904, -0.48779215893586203, 0.59540440488056623, -0.94999072631804293, 0.41037824468556683], [0.30792017570391828, 0.25520811577991398, 0.42318324781526107, -0.38909648160335686, -0.71018100696073905], [-0.32530084949149063, -0.5989989193220473, 0.77119613261350151, 0.70044477542037398, 0.98707698588874004], [0.94943956080714464, -0.75540434324932515, 0.2014933673261623, -0.58739680961494578, -0.36613776279116483]], [[0.40119427677006625, -0.912679086717886, 0.18121730061726815, 0.20649172750053069, 0.85695162250282109], [-0.52636091948872732, 0.57285226862659555, -0.48128859212103992, 0.86908241862408686, -0.79464263523047229], [0.22051464995171033, 0.5199044998851523, 0.13660986538713771, 0.6572664293685897, -0.31391861190725234], [-0.52302479452447215, -0.95062680434119362, -0.20779899894561793, -0.41848465344933805, -0.49147560239084265]]]]))
      arg1.expand()
      res=tensormult(arg0,arg1)
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[[[0.41040522770350923, -0.9327238140787375, 0.086534438495207935, -0.34657537268732985, 0.68984085637374926], [1.2452055732270775, 0.5721059047176088, 0.92955609496801483, -1.2579507853926717, -0.66574380251161414], [-0.71765011473807783, 0.084116223821464595, 0.28523461464022914, -0.82798784999437058, -0.44208715917414149], [1.2221185529293506, 0.39152578813160899, -0.040351906187173874, 0.37445708077864653, 0.55331006858191023]], [[-0.084396960567680604, -0.29627888268254526, -0.40774055881512516, -0.63382012972824553, -0.43181760838084121], [1.2474864727320181, -0.27260413806379502, 0.17124577658729323, -0.4852191271715533, 0.28555171945338942], [0.53632615508695558, 0.049380889289790633, -0.08741014671319354, -0.43580793703477527, -0.83174570387799485], [0.19997189373432622, -0.42990768544353897, 1.2612187692912997, -0.054520999112930492, 0.64910450272611753]], [[0.64746217448256282, -0.99971867580845541, -0.64216729320353927, -0.6111460773120525, 0.67537078178966192], [1.5779069100512664, 0.70393928671740924, 0.52242194384525198, -1.3381568039949745, -0.28149597679776867], [-0.37791104547947024, -0.21325188503296938, 0.0035770033917256402, -0.85307861024340792, -0.64606693707069163], [1.5489649599923621, 0.63207192036579796, -0.39951706845377011, 0.56334046453267916, 0.62673133789097091]], [[-0.66251561060605635, -0.18746761106778442, 0.15785398285988506, -0.63855350643204856, 0.25069634418992753], [0.32282793303327723, -0.50714604988251133, 0.34784986101912285, -0.065809095535229317, -0.15720297333635347], [0.70910909836872082, 0.47338119013425684, -0.17091252911511801, -0.50449055784899732, -0.25946931285746172], [0.081942140102296834, 0.33018575479087614, 1.65610050270753, -0.62676181907756723, 0.40812853540963845]], [[0.45173287015337577, -0.52705610911198397, -0.25966508833106849, -0.12843558946223863, 0.17169417092224271], [0.81556491095167083, -0.081660434976603483, 0.48976289830523512, -0.61559228755957762, -0.42303955118984304], [0.033399974810926492, -0.10788489914195798, 0.17119518077542459, -0.2863642535831093, -0.29009783447444409], [0.5204446790847963, 0.54036074785347565, -0.10124748612109835, 0.037990393001915333, 0.4520146843486037]]], [[[-0.8794772109041179, -0.55447456950573404, 0.098046536085370672, -1.3958830179071822, 1.0996835590656944], [0.46457233025863909, 1.2068941300339218, -0.28590069607018925, -0.48675024318375754, 0.62731683626992374], [-0.21353228915105002, 0.37188982350070954, -0.87417948788048638, -1.0949296683941394, -0.10282920152950975], [1.2539532707132965, -0.32635101905130798, 0.81858714536212962, 0.52322682270478693, -0.13440770329844712]], [[-0.32054967477602758, -1.4332417655997893, 0.4581196853976951, -1.6123745927055861, 0.61514901047408366], [0.93466043793329256, 0.47801352705697647, -0.19239591108185092, -0.25763208035647545, 0.41029184843706829], [0.61891986097936491, -0.076708528488641042, -1.3062008935853449, -0.6118157725167922, 0.77588911306948083], [0.61694151904080097, -0.51169498568790084, 0.12204007859838514, 0.86008801896012244, -0.27617563192904887]], [[0.77347492227302062, 0.07698078660432095, 0.31503547678025423, 0.90083002133856538, -0.23043784640493142], [-0.5861494224674062, 0.45047072549789025, -0.13954931347459526, 0.15905453266694655, -0.15584236420165232], [-0.94625312789781535, -0.46951796483144836, 0.28915467534355688, 0.68896653009776587, 0.66938159815951837], [-0.31800373167098905, -0.39099583414974159, -2.0387599862765322, 0.69430891776305681, -0.59456738036770218]], [[0.51277630743171254, -0.86142942802040134, 2.0190166429015939, 1.0259152048629983, 0.1413452227644183], [0.10012109331223151, -1.006436378400372, 2.2272119926256533, -0.54018609930947692, -2.3216827205988348], [-0.81559944407184914, 0.47916648013091218, 1.2634139598433087, 0.092821428155518249, 0.71868875028026369], [-0.59642895347418268, 0.48812485812968165, 0.082884107272958363, -0.52797041575300452, 0.37808511440215165]], [[-0.2957139898028196, 1.426333765525972, -0.52061817680086442, 0.96870374498716472, -0.32200629146684256], [-0.75691482887026584, -0.27547382960806055, 0.049751679039291535, 0.18510816205888142, -0.058160614151927997], [-0.38765451138849105, 0.37381726786608066, 0.9693386344249374, 0.12799593152223077, -1.0602795348518241], [-0.28083404443366511, 0.38276979295966884, 0.89645377078914623, -0.97653127484968505, 0.37809239851457305]]], [[[0.42654570940968584, 0.6261281652948949, 0.43279600658690881, 1.4602319146236087, -0.83809454854810705], [-0.65875005413426369, -1.6111708536716218, 0.90091503362475611, 0.4524975686736471, -1.1968793369976518], [0.22609968465908681, 0.13721884874066265, 1.2002794323042256, 0.83989735343917615, 0.015244632354200094], [-1.3615369223480382, 0.68705793493920309, 0.25504953188543117, -1.1678541174508998, 0.38268756994455372]], [[-0.82625837331123331, 0.47097600159649045, 0.99635069416125055, 0.44906222015107544, 0.44738085847886799], [-1.2184711806623123, -0.87783523808205211, 0.71219754075156883, 0.55598837929640699, -0.95165548633605279], [0.18356250988574246, 0.79916758499984153, 0.46906859215683022, 0.018233242574425212, 0.38509463574039887], [-0.64848426721679764, 0.87012564365555023, 1.3028508793653024, -1.2644808139737029, 0.015062295822882717]], [[-0.80391697704435883, 0.82581232100577329, -0.57008208670611471, -0.28457190708066449, 0.60569973261513843], [0.12406251978687982, 1.5660471095259543, -0.28583438052135868, -0.72542172466501798, 0.78731760676310103], [-1.3306030337938008, 0.53076570475497309, 0.2650846109384799, -1.0239517633529125, -1.4681349895175884], [1.2997737688661339, -0.5612089501248394, 1.1116346639015773, 0.14599710082415157, 0.23890900798113385]], [[0.71861032276429393, -1.8117259533688421, -0.24815729292329558, -1.3334870137142427, -0.30581174715908616], [3.325008537245477, 0.45974694677497085, 0.92961763572284695, -1.9330639181850402, 0.02263293984435466], [-0.1155313791717691, -0.26212016444615682, -0.15487831241473157, -1.1480036822247794, -1.1293952359017387], [1.2931580041354833, -1.1088638308555665, 0.7697539953078244, 1.1109575644266765, 1.1202151836223537]], [[-0.59035196119708089, 0.099689204135994969, 0.64371721886261324, 0.11052212530087452, 1.6374786567861921], [-0.73239694146029766, 1.1731813289103847, 0.623692408869717, -0.57538093796440637, -0.6973038846274473], [-1.497731636084509, 0.71280975872171215, 0.41080035648328583, -0.86522031850408365, -0.024488838316599593], [1.2269972465833157, 0.84619508434944857, 0.10561500494831644, -0.14519816296449345, -0.12700278697650175]]], [[[-0.17689924197044621, 0.35369865201408068, 0.25988705471896939, 0.24493044026506705, -0.22828421141305649], [-0.043832772686443422, 0.44159254393775599, 0.040998436880127415, -0.14849007422180954, 0.19290371313358953], [-0.76050667654517012, 0.16615437550278067, 0.31590983829417374, -0.080305973575056006, -0.36204346090053763], [-0.041550072976562907, -0.85939262853401777, 0.27115195501336714, 0.1887036618147088, -0.035810774236876744]], [[-0.066080595018120525, 0.32741303814225958, -1.7705433524793435, -0.92107417675713188, -0.48440521569774758], [0.52622890486381091, 0.23886291487461758, -1.5641247004604644, 0.31901625140174605, 1.6840904569899657], [1.2080484778291143, -0.56812642512089528, -1.0137593811874979, 0.028718979843650821, -0.63332432205682554], [0.28317672648307074, -0.27599329033254061, 0.035077864589374508, 0.35122243041984114, 0.0023636451698862901]], [[0.98182371277270486, -1.1845144743614058, -0.14861140126084443, -0.36165174635393982, -1.040001415351119], [1.8697245227768122, -1.10597617830304, 0.60805947210372702, -0.51267329798086159, -0.34227818176167352], [1.0530984706938593, -0.54061294176266927, -0.058283548892825068, 0.18768030317705389, -0.10292586654753449], [-0.40328133166223257, -0.32530715580987674, 0.054227940806166552, 0.26675283336620409, 0.69799719347526357]], [[-0.21873897283591714, 1.1646939856528236, -0.16493399695215777, 0.93356149000799893, 0.53938640384591396], [-2.3621922465754572, 0.078464026745569571, -0.85332333811373695, 1.2274047795824896, 0.041997489532697774], [-0.10788318743573477, -0.037817870388867969, -0.006969932443221874, 0.7859231395670031, 0.89283378179784811], [-0.47064701577008328, 1.159041126275244, -1.370570547925507, -0.49607795342503846, -0.91294111285619739]], [[1.2854236775429599, 0.093940437598183046, -0.08725964807654496, 1.2182137581679879, -0.79915597847060971], [-0.13239787345062637, -0.12329561944627687, 0.052928811372326856, 0.048721158569059453, -0.33966295091379956], [-0.62228015386200308, -0.70739855694016307, 0.61867944767517746, 0.94776840341481694, 0.32933878308845699], [-0.58845584878749346, -0.21298986063774256, -2.1109925160256453, 0.51244524037530725, -0.21397139644352298]]]])+(1.-msk_ref)*numarray.array([[[[-0.10041674693751607, -0.64229714798129844, 1.2391040923557473, -0.34591065280936623, 2.3116100711303655], [1.4948572822950021, -0.76262374195853311, -0.1697805680849418, 2.3256331469892459, -1.0188982355658291], [0.33110567395300816, 0.73917980722234733, 2.9415205756875582, 1.1628291213163857, -1.0379523995124227], [-0.61042019590184071, -1.3731815676315255, 0.11051772092540907, 0.29246406568984434, -2.4033079316361121]], [[-0.31686980749717725, -0.52441869933932428, -0.64517382709746174, 1.3737678199723156, -0.75523720967818075], [-1.5392720187387146, 0.7273561436189877, 0.60060274753842657, -0.1915677159799444, 0.5556049032813235], [-0.27823239283889967, -0.76629035581130622, -1.5191634034643855, -0.026314835102646747, -0.19805466188886531], [0.75622361275642414, 1.2804786164354671, -1.2416532416131962, 0.1045044399327803, 0.59614817689684996]], [[0.34482619281014237, -1.2148847342476503, -0.40064609627507897, 0.2236087329940018, 0.12564137634708511], [-1.7265885434325396, 0.92480118496327968, 0.081937326115587905, -0.2499243189189686, -0.30080894570120698], [-0.34953326637490989, -0.68005753111404921, -1.3503525688841378, 0.078011027874276884, 0.24025821297354319], [0.60997143009057098, -0.08612011286589516, -0.61604747597161447, -0.50152190164996435, 0.75530450723490539]], [[-0.41380373928452518, 0.71306300955371116, 0.10569046919597738, 0.63342511310408944, -1.9833211913550477], [0.31172634676637645, 1.3862910438472649, 0.61139953162653171, -1.3862242790142121, -0.16062192033434836], [0.050132636645064149, 0.032242060834969472, -0.3418016367945021, 1.3060120706802127, 1.6706593582682847], [0.83496607964508129, 0.49713120418073664, -0.39613006797781608, -0.80274953836552432, -0.32422707002658629]], [[-0.19416487494871273, 0.10074162248140475, -0.62989878637528995, 1.1454411868209848, -0.76174517387747609], [-0.37645466846767206, 0.76382587115040179, 0.31968951607120522, 0.15749098625491917, 0.40793042068553709], [-0.26413906796626652, -0.06666216570358377, -0.63132542963528437, 0.52537377642080652, -0.088198031427348042], [0.56463846267066553, 1.4731219219598481, -1.0860252878054915, 0.64015097439437507, -0.95022723320705527]]], [[[0.50546475034975757, 1.0401738009453962, -1.2293923031747129, 0.047555751787679498, -1.7426324935972106], [-0.2989971477720611, 0.78614161802775362, -0.53638968909115958, -1.3743714586776767, 0.60797979095219035], [-0.20759853618863289, 0.40050938407211878, -1.8195593285126859, -0.52260254607418921, 0.75937797501012572], [-0.065219791557079826, 1.1984242265694816, 0.11661914668790474, 0.37017702438377498, 0.41568000937525684]], [[0.14396300342952378, 2.0845361626290093, -1.1381601303740809, 0.096459634557712282, -1.3297398322088636], [1.2940900734669727, -0.54188670051891152, -0.62356449283911708, -0.36656326558577979, 1.2731940912973856], [-0.043669446569949644, 0.96486698777150293, -0.42586887812297047, -0.94068723529270892, -0.32941823678040832], [-0.68111017380786143, 1.9258654607229844, 0.35887412921141154, 1.6879582144935412, -0.80506228548588532]], [[0.45607237070026668, 1.1625113270216512, -0.62871874614536571, 1.0011141847134739, -0.59679906897372503], [0.65040888594510049, 0.24244137055157841, -1.4081233165347919, 0.82877006842950562, 0.20895685537613534], [0.83087076239333146, 2.2282684976159244, -0.25518410178413831, 0.024069207356071265, -0.92781537215681997], [-2.162315154610746, 0.26251921672504602, 0.19619116190759106, 0.63637366080250546, -0.95508292171929499]], [[0.27086915318675236, 0.45000581803669076, -0.31697842963534084, -0.52470797459467566, 0.74816472157322755], [0.056774224907538806, -1.6628523070647367, -0.8053202609360216, 0.42937324769191793, 0.76020770280935723], [0.30936531759062186, 0.37411680307313422, -0.25178823569909581, -2.0059821694362263, -1.4191395233558401], [-1.4462777229708972, -0.20449929491048519, 0.96904474563402943, 0.6789010988317058, 1.3987818180105847]], [[-0.10024965444941544, 0.19592581879932169, -0.18794879880983545, 1.174909659947295, -0.6080040536963367], [0.27847210883490858, 1.1040670642311095, -0.0010684724590990236, 0.56069180124892304, -0.21382396115236824], [0.10928845577325103, 0.74750647476314491, 0.18553342640303092, 1.384415982111205, 0.086720452924343633], [0.032212895354179594, 0.71849025439216885, -0.906719029013074, 0.27935371672299147, -1.8381262924691517]]], [[[-0.32016877466413041, -0.25565467729657437, 0.55166740459234576, 0.85243838601968547, 1.2345131829695903], [0.84400225306954324, -0.39486903010551294, -0.063657196858543597, 2.0938794283402382, -0.28752792462515409], [0.38050725271049313, 0.79048723773004315, 1.742075917345054, 0.893757543285153, -1.3364605024208063], [-0.67456431192864286, -0.13268004210251938, -0.54919117353654368, 0.64764812584698539, -2.0189951391621741]], [[0.14686058612513159, 0.61434749941624667, -1.3421123214472943, 0.27246358161462159, -0.819733218585325], [-0.51352418345841611, -0.15634600725925535, -0.028176953787372505, -0.46656840313490738, 1.2181361154860366], [-0.58715345088292947, -0.41466492250236631, -1.4931608641166432, -1.1535439663125207, -0.36718231089090159], [0.42217218788865241, 2.0441764199236436, -0.41583393549682018, 1.3570075967145694, 0.21095917752373861]], [[-0.042502314443695677, 2.1307922426828112, 0.005910894084393381, -0.062888292458920636, -0.51109797228991549], [1.8048151358000935, -1.6127005422629384, -1.1333714817930385, 0.20291864618472333, 0.84108252266114436], [1.0607537788921322, 1.8343546089510538, 0.62832096549182603, -1.3623173620223246, -1.0567947422057435], [-2.4819519191817068, -0.17634353437703376, 1.4773413677133254, 0.60929996304237366, 0.52959657406613081]], [[0.22483376930769591, 0.62484584580880265, 0.41520853961957505, -0.099873688682551809, 0.91740780529394017], [0.92316077508984062, -1.3122132214004747, -1.2262933815707489, 1.1745838077278596, -0.01497696691119621], [1.0556774669338969, 1.6439506179548944, 0.91830656219371032, -0.85125627486873268, -1.4601192958334166], [-2.4856622040980478, -1.3125577818336287, 1.1564722529097848, 0.080074376588965407, 0.38429277667528705]], [[0.42027052616657146, 0.075422152582142729, -1.1216047072324851, 0.46380702902848991, -0.69082569769761437], [-0.94893413783751768, 0.61676834273522696, -0.35360667754233149, -0.32679559994721197, 0.4979317432444369], [-0.30662397655587431, 0.041511637957519408, -1.61658414718306, -0.45886565378563726, -0.10271866507756615], [0.052488486009983244, 1.1341355371636794, -0.46954678291795338, 0.57821191916861447, 0.17659088820760679]]], [[[-0.29053187138637515, 0.83523882104194502, 0.60586580982611726, -1.0870984068289717, 0.27000832498628025], [1.1453540650106269, -1.6292203446229496, 0.019430332895388369, -0.39838991823080239, 0.38677088579706143], [0.27756243506132683, -0.097202245412171095, 0.93759760281924742, -1.1553793458635178, -0.1534456986279098], [-0.5251868226455767, -0.65949466104681698, 1.2800448317720003, -0.051411042255707806, 1.1347612407311454]], [[-0.75911614261982208, 0.47145970431205808, 0.81687894140322093, -0.55133420588247739, 0.59580460807714808], [1.227874422029039, -1.6294149376821314, 0.70800064546351171, 0.23445220766819186, 0.44673300712252001], [0.0334490452850148, -0.60915529404221369, 1.5724800785455826, -0.57010750585140013, -0.42817590594680049], [0.24089894719470933, -0.069142533668327677, 0.50447797768384994, 0.32605243648614979, 0.18111788907440785]], [[-0.54946539116387583, -0.61610592564006994, 0.26920842126354594, -0.84041585937280072, 0.43907412239867605], [-0.028409562465249671, -0.44211631421247333, 1.4733268203414278, -0.52107373010470837, 0.23684796797628105], [-1.0669548660348127, -2.1161476050885017, 0.54821893852304793, -0.016362839525831507, 0.65330377887498581], [2.3695485813904407, 0.79010166174446539, -0.46299207424931377, 0.34244330045413673, -0.14424292587914461]], [[0.41210243963562676, 0.18646709713758614, 0.35071775461357646, -1.4898318498931042, 0.58236777662065364], [1.1453738408509559, -0.15908082446402166, -0.27536167185118887, -0.14925144481398356, -0.61691094480340847], [-0.23197670682980243, 0.18147083945020986, 1.1265717056621141, 0.35097346181842975, 0.72543407186149444], [0.21038526186784445, -0.75259775473185786, 0.79391949073447943, 0.022330167778986589, -0.9813618595999003]], [[0.89504824711576958, 0.42296351593285697, -1.3405731972806585, -0.55898217467479161, -0.31793648236394445], [-0.56645190168991422, -0.0079101208375663562, -0.95558641563506552, -0.48896337251911914, 0.59571341501431363], [-0.36777969968211066, 0.28936330811939875, -1.6096522553753343, -1.3015832594290571, -0.20895981788452805], [-0.44118173001657546, 0.82987228796731249, 0.36458112556957117, 0.90757987108187799, 0.4857750753272716]]]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5, 4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_tensormult_expandedData_rank2_taggedData_rank1(self):
      arg0=Data(numarray.array([[-0.13842907140627414, -0.5093517962652867, 0.74810314141842515], [-0.42380715419856663, -0.6528305128127585, -0.3379297706907014]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[-0.59920932563516982, -0.7056750684892783, -0.71211706513808704], [-0.055220987230070628, -0.10601629369868504, 0.91602369763287639]]))
      arg0.expand()
      arg1=Data(numarray.array([-0.98725659961917556, 0.37410864702384883, -0.63282890624919719]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([-0.59262847857917778, -0.89962344180656073, -0.55551690721715974]))
      res=tensormult(arg0,arg1)
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([-0.52730918978038577, 0.38802859723932859])+(1.-msk_ref)*numarray.array([1.3855434145151015, -0.380766378774059])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2,),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_tensormult_expandedData_rank2_taggedData_rank2(self):
      arg0=Data(numarray.array([[-0.78250779477028587, 0.012354223511292339, 0.63485843997130886], [-0.40237889766196711, 0.13834788846554535, -0.44839634317514543]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[0.42819690996706505, 0.27947902967487082, -0.89417654205642805], [0.81517598572227268, -0.40403908759698415, -0.013664695649373337]]))
      arg0.expand()
      arg1=Data(numarray.array([[0.10242843591448159, -0.16271024376600773], [-0.34035288999154201, 0.89010922077955978], [-0.25247610866746739, -0.53594800214258353]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[-0.7693003649990231, -0.2001254925972944], [-0.29455850454205401, 0.31877494869959166], [0.26062090072539501, -0.042326054170925165]]))
      res=tensormult(arg0,arg1)
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[-0.24464243366353533, -0.20193247024713298], [0.024907219069598596, 0.42893302401619965]])+(1.-msk_ref)*numarray.array([[-0.64477605995927656, 0.041244760568871303], [-0.51166333922375729, -0.2913566624692287]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(2, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_tensormult_expandedData_rank4_taggedData_rank2(self):
      arg0=Data(numarray.array([[[[-0.93119711658569204, 0.41674683728336537, -0.77363533623709912], [0.32655073890329156, 0.015768799452969162, 0.94510011341315536]], [[0.57427785672055709, 0.84624156444056475, 0.68166383170932221], [-0.36252514840016659, -0.53016458854661841, 0.97580775634657924]], [[0.48666216287143804, 0.037594444593278098, -0.2162804275680148], [0.59198768801267221, 0.86893536298133456, 0.14202325362233248]], [[0.71870982500331437, -0.30323459968538913, -0.98238990847706686], [-0.47572905645727226, -0.081500449924960305, -0.61133268101943816]], [[0.22317361600519336, -0.41252046727298564, -0.74458467326957445], [0.20635378676542526, 0.25742310930071977, 0.08868526215118]]], [[[-0.57676978116660327, 0.76661431896678667, 0.44602142250014665], [-0.719737470232378, 0.40864440104564181, 0.16339572727311191]], [[0.12273171393458093, -0.61151958858076316, -0.92132702195865845], [0.45608101402471868, 0.85660568059187847, 0.57300454936498513]], [[-0.80131496631067645, -0.3052472622376976, -0.80051307489547985], [-0.36287287630163623, -0.46947962021314948, 0.27467915596304526]], [[-0.039476875381238896, -0.46660285339704677, -0.70266783550640644], [-0.9377149041442745, -0.77074842751153994, 0.0681863324737082]], [[-0.61856994086307826, 0.60871697688429038, -0.64501500979263837], [-0.32990826821753738, 0.17794225139211117, -0.48612562863921904]]], [[[-0.68130206491145207, -0.7138330739960026, -0.71076394349703609], [-0.12835728258383128, 0.33920124548766339, 0.45641559836752665]], [[-0.92831897969410693, 0.98184505966284363, 0.56929421179791428], [-0.5736106909340255, -0.43108017615258132, -0.084895440278315304]], [[-0.67064862268392944, 0.78509826638382152, 0.0046384252021189898], [-0.33437952344557531, 0.49751506577912163, -0.96810885328035412]], [[0.72343706767956784, -0.40035122309815496, 0.00083374387874646239], [0.85846691303862332, 0.45665590609177098, 0.51622306194818268]], [[0.6406024538963353, 0.55821264056974429, -0.89394989837711436], [0.99680210829773652, -0.35810669778421178, 0.17781812951916964]]], [[[0.12099973637698058, -0.81431002737062386, -0.58245584037036524], [0.74237537956854038, 0.77054081386004203, -0.049429878036341135]], [[0.18097943133127248, -0.57078690122309195, -0.76368792432558341], [0.92660739243518564, -0.030599942016473092, 0.34257317846393609]], [[-0.0076209343309066035, -0.68215614724447438, 0.968602568518933], [-0.72218415191868401, -0.95887889851142871, -0.4592688457098022]], [[0.57406896300852917, -0.85521921818710234, -0.63250079131871328], [-0.83174265064284403, 0.61659467591858452, 0.25860399942483325]], [[-0.6748865251138112, 0.77974886570884894, 0.4281085593621774], [0.44302170039772948, -0.60506750435537904, -0.020225279418156994]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[-0.26916766080019827, -0.649390927542427, -0.71627793129799855], [-0.45887486723313131, -0.40145481260169613, -0.63966268460103493]], [[0.42167430384198745, 0.38905828242031237, 0.91323625262443864], [-0.23175539072233819, 0.25457732972968161, 0.56888159024360574]], [[0.12035612411978502, -0.30916142974047034, 0.83074293387054476], [-0.88073188285879933, -0.8937110236423611, -0.12181684478402888]], [[0.35761696430466183, -0.80752098233723779, 0.78206875500514239], [-0.33848244976916519, 0.40958331186769459, 0.7204114856798407]], [[0.68474150564549152, -0.75589361006915023, 0.28299143748720712], [0.48677146573410601, -0.77748210313675425, -0.54464615010792072]]], [[[-0.76533520334504979, -0.63491576741394717, -0.32785566648780851], [-0.14627051787423717, -0.89047309128474272, 0.23966951150098059]], [[-0.57719851282136148, -0.2967033552139966, -0.58575080922528056], [0.56455170308290503, -0.90757595036398753, -0.32690681699496649]], [[-0.10301077987855778, 0.66137019345318393, -0.37979966619818128], [0.47219296581864523, 0.41606971464059073, -0.27118863453531272]], [[-0.0011225731701225428, 0.63813037503285774, -0.77025699708102691], [0.78596349230884077, 0.74701063782812294, -0.10745700360930921]], [[-0.55601648729956588, 0.5987368458284017, -0.40365219420859488], [-0.9498963553153299, -0.83991362049222329, 0.85437365367015183]]], [[[0.67739974597091934, 0.25078325438986848, -0.81622209163286441], [0.7005158574207917, 0.94880996604690182, -0.65363914677749513]], [[-0.23284520127451125, -0.46381171781974273, -0.54187093309644241], [-0.51457042834484423, 0.5463345151203558, -0.04258203371350322]], [[0.80390243015473684, -0.69650146984290107, 0.66660110769266234], [-0.9527839203577384, 0.54270594947096473, -0.069532831709015586]], [[0.41485276915850733, -0.85204165458246739, -0.5172410499705038], [-0.51976350600856169, -0.23428397575352466, -0.75978308563134855]], [[0.53499238343230382, -0.91764664620781389, 0.020863181572555956], [-0.85213454002399791, -0.99152262874393626, -0.19717588029430511]]], [[[0.26887618160234883, -0.050909560607746984, 0.8077051194637197], [0.13355410066648243, 0.70659937816398366, -0.51701017613183997]], [[0.46469528020238404, 0.36028043331756598, 0.99562771798686178], [0.082846151009686064, 0.92298939772334454, 0.30975659448525739]], [[-0.081172991144648154, -0.90686272538046508, -0.40800217429619967], [0.1725869585079054, -0.25874518232579358, -0.31570134277976258]], [[-0.51499181286456697, 0.87830539828250509, -0.37178850251301898], [0.5626970815746779, 0.076495898317514799, -0.33275666661222814]], [[-0.95405819180045848, -0.48167114036248404, -0.20057370527694185], [-0.75712259366981294, 0.5429681864304603, -0.04715791233187594]]]]))
      arg0.expand()
      arg1=Data(numarray.array([[-0.60434268191777574, 0.81895391372407222, -0.37396406312238351], [-0.97039498366146093, -0.1592380356627936, 0.35873954206957137]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[-0.15768150328245167, 0.6623532951765787, -0.84578760281934495], [-0.77186501796716489, 0.52180474025224166, -0.84260604101961079]]))
      res=tensormult(arg0,arg1)
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[1.2130210202745013, 0.87733022564499052, -0.84432157788472229, -0.05998980812880475, -0.40368200250335506], [1.5015668171740013, -0.60385872137151964, 1.0590758238110414, 0.96165128494902519, 1.2309654699888941], [0.32722154550274751, 1.7470310057404719, 0.94448424453930091, -1.4859642396119974, -0.44216500624810068], [-1.3830193381745526, -1.0626378680406496, -0.2275353675962489, -0.0090818854683158146, 0.54553201919618022]])+(1.-msk_ref)*numarray.array([[0.90182761082802354, -0.74881963199001211, -0.61027700956027175, -1.384755615662197, -1.1704839196567893], [-0.57626204952963023, -0.24396962766961916, 0.85667656986077789, 0.9479984719124136, 0.4006733169744332], [1.2547943776318222, 0.90595461078965067, -0.074697641387076824, 0.72684345852024967, -0.40331728133772948], [-0.058006828160537705, -0.5200590797135779, -0.24499729411628079, 0.86337977109994957, 0.90849897593084639]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_tensormult_expandedData_rank4_taggedData_rank3(self):
      arg0=Data(numarray.array([[[[-0.77714927203673656, 0.072779531419284282, -0.12619171975824051], [-0.56791841089112216, 0.048929191873906985, -0.0097386127819751866]], [[-0.16402905488961084, 0.43747701366272396, 0.5478572315050525], [-0.090014107560068668, -0.80679372054037435, 0.67868148605937173]], [[0.88688723977876172, -0.52536609568329595, 0.78509277222131635], [-0.03359813070507478, -0.039804663762037062, 0.79770512877287292]], [[0.065770566189677471, -0.49559743410814883, -0.6557978752358995], [0.87738673180960514, 0.77160423413612178, -0.89499948276686747]], [[0.86416799636594432, -0.26512556960883549, -0.23125636475496769], [0.96562583547089065, -0.91313864660272959, 0.59834713703512343]]], [[[0.80130054036713716, -0.89063133616147128, 0.13282955362632998], [0.86870933086933189, 0.77158507146902, -0.086427938968521856]], [[-0.072284054681898358, 0.34644606618721041, -0.55965268163145399], [0.50988754864940322, -0.67004294490716676, -0.63633421645297972]], [[0.67270818566202539, -0.38418762797096595, 0.6350514930317821], [-0.37320965285114416, 0.72702693007098218, -0.46010674232412385]], [[0.15091498068550169, -0.56185501880976019, -0.5293271726029618], [0.68662651860863533, -0.5852551803289443, -0.64342581284481803]], [[-0.17027624832096877, -0.33024515538293597, 0.24832941998352198], [-0.96841952250438434, -0.055910572783410606, 0.36786455926305783]]], [[[-0.69894861262457031, 0.61227635745638698, -0.67486706199348534], [-0.6806901544883861, 0.19635272842813412, -0.91815878031865972]], [[0.27403044598278115, -0.068552251429859323, 0.45538440055474361], [0.95183916223730147, 0.6466958684325097, -0.87922549672240669]], [[0.49688804915054052, 0.32057793004241364, 0.21209054498233781], [0.76468549009929165, -0.35082305114404333, -0.26385562496292936]], [[-0.16854899285705316, 0.33721974458380655, -0.029983383182369705], [0.23740519110432845, 0.79123747876576789, 0.6273409990423553]], [[0.13945058393162357, -0.95398100262594143, 0.067145435124535968], [-0.90835524109259813, -0.28986331583374247, 0.69381819307453396]]], [[[0.51587135932667283, 0.25109467118462891, -0.36237764602023059], [0.78954402755304209, -0.033125408114684785, 0.31397591514653467]], [[-0.8094999102589211, -0.21103774292608346, -0.51860157047939492], [-0.72830005847884993, -0.39713043458225727, -0.76116616614730703]], [[-0.7750947634894374, 0.12435656095776038, 0.64848221525352301], [0.46673374561906544, 0.67392723457873438, -0.16357128756489714]], [[-0.40212641469522969, -0.79789135898750518, -0.66509215916447917], [0.58995084812424015, -0.95751238598916988, 0.094091181166652049]], [[0.32657187456255454, -0.22563897004669897, 0.31623136650752448], [-0.66912203203034082, -0.52663383049699308, -0.4400494533930801]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[-0.046204246978686747, 0.7421910791963966, -0.19604737345515288], [-0.15724359225272955, 0.10264084671947193, -0.64136591832933254]], [[0.98776371097994398, 0.60014238818344334, -0.35381313142502613], [-0.58179208213684208, 0.33176212863079946, -0.91304691824517459]], [[-0.45284220536618935, 0.62539901182884261, 0.059600959052312552], [-0.95003477603949338, 0.28607355659059719, -0.011252415534263038]], [[0.27311439156063266, -0.84236187849572963, -0.034540325144223782], [0.42446438980871903, -0.78695833447990249, -0.49704814943567155]], [[0.33961718995803847, -0.88200520850971786, -0.68387313083715262], [-0.45895270211392059, -0.72643462858720764, 0.94427475164846797]]], [[[-0.67573317209243045, -0.48913768932491086, 0.18338671592762035], [-0.84453998346119064, -0.47693432075571751, 0.81177987973716248]], [[-0.084966766003552463, -0.92162566037059701, -0.99746731778972419], [0.87216424993638419, -0.61365698222457321, 0.86253862613133747]], [[0.21189248516753412, -0.90669425371862267, -0.74682206683358099], [-0.36370269258227439, 0.98102012421471452, 0.044450522274804838]], [[-0.63012333372879481, 0.23974099930294557, 0.71059651850301897], [-0.13966599347219266, -0.44324195111305897, 0.83993249011265991]], [[0.85492436392020466, 0.34404916195113988, -0.53463468773680511], [-0.49445524624142223, -0.26107223143554781, 0.31554756690139318]]], [[[-0.45133040844129746, 0.33088032145353941, 0.38733307200284384], [0.19475764809617369, 0.36403516083212195, -0.81935180370576921]], [[-0.64697043594179737, 0.19512002707663023, 0.6194176801331599], [-0.53355703884526129, 0.75123291011424653, 0.89933245740379553]], [[0.97872573212751268, 0.87952230203687565, -0.39563796192504364], [-0.50395845980659204, -0.48834223029719648, -0.12544709464398762]], [[0.086032113188411863, -0.70004853606456141, -0.84401009858435727], [-0.60226192771083542, 0.62835605012610141, 0.7350492754216531]], [[-0.30638713147911467, 0.59782405297154551, 0.8955194545217835], [-0.56231364286256902, 0.53456147863791981, 0.35752924716015766]]], [[[-0.080645288195604126, -0.44755482817577663, -0.59552168223093593], [-0.86605838789913991, 0.052820913873511177, -0.89922919356659547]], [[-0.18989295599281286, 0.15955645802369278, 0.85219085831811614], [-0.10524041169861609, -0.024115205702921916, 0.83688544611974058]], [[-0.37977280268444447, 0.66510003410139928, -0.56245184993035324], [0.40746574549183823, 0.0086284831323619748, 0.56949114683095381]], [[-0.35482424381375788, -0.1924232197639566, 0.60204664096608185], [-0.67252018985813211, -0.63830657025831528, -0.32786810223465279]], [[0.78063277354345662, -0.74309600213734561, -0.74129947111230154], [-0.033224728261659786, -0.99594637226424299, 0.075969468303802135]]]]))
      arg0.expand()
      arg1=Data(numarray.array([[[0.41620701293724705, 0.12092739350210002], [0.47495448221791126, -0.23315589734685815], [0.44997298737752045, 0.45721609462711132]], [[-0.63064807045776305, -0.1753113051298647], [0.24828557083482106, 0.32694372326307497], [-0.46785676707594415, -0.87629429401016967]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[0.44815441414395729, 0.60905773984147626], [-0.13147838318360661, 0.49773851421118365], [-0.90805457962074221, -0.78391066339866788]], [[-0.34462086465161823, 0.22095910104179239], [0.66810338663484359, 0.55343010766837053], [0.32126881048597822, 0.00059237194705219487]]]))
      res=tensormult(arg0,arg1)
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[[0.029190460651423934, -0.044550997267616424], [-0.075041161493017428, -0.71406717386006147], [0.1109681770238195, -0.11744998852970656], [-0.44611586803606196, 0.7064018722581531], [-0.98593889166109316, -0.93157521499113738]], [[-0.34557325695838492, 0.54099358317474233], [-0.30757593202412281, -0.096238623027857129], [1.0144085428387708, 1.1675938978524398], [-0.71952560034486779, 0.15934413329157271], [0.30876213685916098, -0.00091458443400727063]], [[0.60381841849769413, 0.45226831172540233], [0.25804619364283787, 1.0723555016106763], [0.0085981409116550611, 0.064771725148420667], [-0.17025096444190041, -0.44538087236106616], [-0.18856754562657735, -0.27352330657424617]], [[-0.48213706985398946, -0.58622755769780932], [0.046306452180079671, 0.37904649447927541], [-0.022227084743439735, 0.45562101401231975], [-1.4994124861003206, -0.66561514584365433], [0.66815388871701231, 0.56742446899082277]]])+(1.-msk_ref)*numarray.array([[[-0.023553750697667408, 0.51663986225145953], [0.81386214539539092, 1.2321910322165357], [0.17562285981623821, -0.06284747898064369], [-0.56722058274663134, -0.56788858975609935], [0.86535695765229437, -0.19894725352757792]], [[-0.17184269777621636, -1.2488597197991984], [0.55540483885476077, 0.12505433605961613], [1.6873694151779337, 0.72578887348003984], [-0.93732925654349697, -1.0971637135489718], [0.92073252050755305, 0.85749795390860661]], [[-0.68462549896751068, -0.16981279225952056], [0.096641824770531626, -0.48409835765342646], [0.48935221343482166, 0.96232561069070266], [1.7605113939605133, 0.58069724739940776], [-0.36329988313989942, -0.41924875766623526]], [[0.6083257626722689, 0.032289407888433791], [-0.59089362031291026, -0.74038404151535187], [0.30139710771116152, 0.63580021848553392], [-0.98043185394090815, -1.2858874315529663], [0.49114687489425557, 0.12821248091585211]]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5, 2),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")
   #+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
   def test_tensormult_expandedData_rank4_taggedData_rank4(self):
      arg0=Data(numarray.array([[[[0.74339779731014688, -0.27352893143402901, 0.60446893570658866], [-0.28147554305321232, -0.00202233637069682, 0.59961471788606646]], [[0.6650776298891421, 0.56330111655540471, -0.12269295121764667], [-0.063288440688624048, -0.3940092620762945, -0.19620431039087505]], [[0.92836584124539212, 0.13626746643599774, -0.67642275243339856], [0.15331388284216585, 0.39742511427263061, 0.64397673625739094]], [[-0.95373764584380605, -0.24618265426214569, 0.86712097405182487], [0.92640826944766452, -0.32122551486866602, 0.88867679228165786]], [[-0.10965492816005162, 0.34249271403312376, -0.025093183858870383], [-0.81862765830754114, 0.1392512684655558, 0.27206216932799965]]], [[[-0.093885880294594992, -0.011665055629028087, -0.57799070316884338], [-0.77832603155740676, -0.15147474617793355, -0.11347112420968419]], [[-0.48837105927934932, 0.2913778239676692, 0.3822942499729487], [-0.7638363854506045, 0.11374938810917001, 0.0078236726928451183]], [[0.22361943514609695, -0.84922125921237734, 0.82243325175118498], [0.64684180709567274, 0.96022551723088023, -0.21581065817419587]], [[0.68920119498385635, 0.74922724005708385, -0.96954339015129309], [0.6733417758572855, -0.98443602457546908, 0.44249092198497908]], [[0.84187217957579041, -0.28406904527867805, 0.18214259212875095], [0.17022869555392073, -0.19412560106628107, -0.83072478896901458]]], [[[0.7428907756017904, 0.18874477734563944, 0.82245015014350153], [-0.73183790211992039, -0.20200867922100096, -0.18792086632909855]], [[0.61991809024498656, -0.37197658274961132, 0.89311890585741938], [-0.45981923570768224, -0.71572609390933795, -0.53039246323685485]], [[-0.75527056403283765, -0.79305712725403477, -0.69280225378378746], [0.59905845206457453, -0.93494603026907175, -0.18625448816597046]], [[0.27135744052048305, -0.51078467662157423, 0.71591409689647123], [0.48623448110554701, 0.990150034789681, -0.93897018351147299]], [[-0.36865018086959545, -0.47112399563800711, 0.15795781146349452], [-0.47960486542618685, -0.58366588329361324, 0.93433243980035408]]], [[[-0.80595701227221839, 0.068501265046681636, 0.44741388668792204], [0.46827563988107057, -0.32751957535328224, 0.8739485330837593]], [[0.62855129240025942, 0.72282891578871977, 0.41447359423234631], [0.20341704887014167, -0.05115812492942351, -0.91047340013633349]], [[-0.67694407586971961, 0.17582653596387465, -0.01880776823920316], [0.25083791808154676, 0.5538924113306829, 0.78334428579507653]], [[-0.15901799327761323, -0.86705889477032594, -0.67954836895134707], [-0.49367194395577796, 0.47213678914727297, 0.19070805221948728]], [[-0.77903664361345348, -0.868301507215965, -0.67990151923347386], [0.018952597049261666, -0.73084973368578621, 0.7156000343870117]]]]),self.functionspace)
      arg0.setTaggedValue(1,numarray.array([[[[-0.44368550904615289, -0.85809251246297702, 0.45435551573987398], [0.36105702714349586, -0.95125816094052151, 0.44581329381799395]], [[-0.86908541011033713, -0.20884857799412426, 0.4592216536172371], [0.38255406931564617, -0.15337104553353709, -0.80991613604466406]], [[-0.59084142256160099, -0.42153975760085771, 0.10897700212291483], [-0.074492646433522047, -0.57275116613724264, -0.945003764399172]], [[0.68293962644062156, 0.21141467417233528, 0.3357735013184715], [-0.81950640500782401, -0.81280057439535902, 0.48440751668880089]], [[-0.19068599388500607, -0.26335422623921079, 0.86605553705119842], [0.23842439049450714, -0.30539241636685488, -0.29596071372926858]]], [[[-0.48430816940206256, -0.36153882431430495, -0.020782638561595457], [0.78054632886913833, 0.00031673120985176162, 0.10245929986081626]], [[-0.79452315398884354, -0.46023271607068983, 0.69884734097543477], [-0.23581456300136328, 0.03358951606508831, 0.23430383517017761]], [[0.5168514886051685, -0.54050800936964705, 0.34920855274449591], [-0.5578238696765061, -0.87077955846768385, -0.37202400628380849]], [[-0.99987560125992347, -0.18776837079175235, 0.8937262008318605], [0.71714502669094893, 0.37105972465626724, 0.75022663759459318]], [[0.6827542002755902, -0.068061019533823819, -0.088369003832091009], [-0.4596337932523904, -0.37389126010501239, 0.51670001417630296]]], [[[-0.38826013249445412, -0.42316368046795527, 0.25204696311666774], [-0.22026890155151402, -0.52675679140849052, 0.10585933453095775]], [[-0.94316486802430632, 0.93766544892090709, 0.70153819764082659], [0.82616713939608033, -0.91186366500456839, 0.16667006761648606]], [[-0.5116469505373773, 0.74125088420652729, 0.52091788254421223], [0.18156171847113822, 0.87358518046219147, -0.10822103028989205]], [[-0.57981751985192087, 0.17893069828021746, 0.87603641131343424], [-0.42576430508840724, -0.77499478507635522, -0.66515602206763114]], [[0.037652252641187545, 0.58793654276727869, -0.5801709477608612], [-0.0095863581793977914, -0.94494754384668944, 0.79033033946914122]]], [[[0.029503015865990578, 0.95284604343704715, 0.77141701120478423], [-0.92080621846813004, -0.032533315137079688, 0.12828151330230519]], [[0.53813380893612139, 0.38807158908676653, 0.89394982402442258], [-0.77801658934256479, -0.55976256457005524, -0.49045080753931547]], [[-0.72648165675631748, -0.33434184691814495, 0.49562749561063324], [-0.79574871460098762, 0.73209828671540311, -0.049464619203803295]], [[-0.66466750893734439, -0.88532840212377306, 0.11477002065534836], [0.76603910633531513, 0.18112462149815411, 0.93119819574935048]], [[-0.1888239889730281, -0.47992808762101413, 0.87353262947126442], [0.81565304197302146, -0.55670753393715966, -0.91205121691854263]]]]))
      arg0.expand()
      arg1=Data(numarray.array([[[[0.82044901520888214, 0.34664587558753501, 0.37317965077229442, 0.61960480949883845, -0.98059978335846387], [0.38280559837621397, 0.22088494601429742, 0.66568715975142267, -0.19664481568741299, 0.73550137952179262], [0.17587913806997046, 0.18970535260830057, -0.67097312941567888, -0.93802756956441846, -0.18664258939157574], [-0.73074033701594088, 0.95570242328641108, 0.71696363209714709, 0.068220051994142938, -0.28953267429386909]], [[-0.70221665434124159, 0.018943598445879672, -0.44949754263338204, -0.87176964833486403, 0.84747707306572773], [0.8915338185985755, 0.84744986100649577, 0.71397333194821422, -0.57993156220679842, 0.63143038466560975], [0.69235002609932894, 0.13851226094386782, -0.36833964595973989, 0.52782812454548877, 0.56906469717693753], [0.91870571055812267, -0.31028369503357967, -0.040332867438758857, -0.1271781342131848, -0.85886769436572519]], [[-0.62708989852367036, 0.26961430667896114, -0.76042436732931451, -0.27312316756239885, 0.57310339345845418], [-0.36016473971434371, -0.18227082430641262, -0.15046976922470012, -0.72229712070135932, -0.84603956909593836], [0.19281394535863394, 0.16961180222837724, -0.57810195282790788, 0.17065826063062817, -0.20990955191694871], [-0.25195401664533579, 0.29845105712928377, -0.80003748377700368, 0.8768486091179597, 0.05519694109313833]]], [[[0.08791867614418325, 0.80639287515260683, 0.015424986117474226, 0.074868208568338535, 0.21743219363021238], [0.23317465685244554, -0.75047033100866023, 0.28132875970397753, -0.6784738331604605, -0.47087266945984485], [-0.070271532829091266, 0.76140868238351533, 0.85885299497805168, -0.93547994321030292, -0.77889185129903793], [0.18110424986530238, -0.34642826948415117, 0.57731248685497616, 0.13589663015420705, -0.51589688322474414]], [[0.63194920669985866, 0.48256704487627955, -0.0096040888799138191, 0.38282086315567643, -0.31993400133237149], [0.24618873941690445, -0.38950819496610012, 0.14212019876362736, 0.55463841424268945, 0.12145500276665122], [-0.87813741244604948, -0.85223890131265834, 0.00066279458580198458, -0.88602270076340073, 0.62928681430991418], [0.32416612919284216, 0.061279664943749701, 0.85561238783190907, 0.51785876145494303, 0.85572317339715398]], [[-0.72950206480632462, 0.074423792248843545, -0.6098172310516945, -0.86062532545786419, 0.040061279214780754], [0.10465295373336936, -0.060240814188076586, 0.55985492153835037, 0.05721872629443947, -0.49233699212401616], [-0.89465361590371417, 0.64007060680923211, -0.086980880592906207, 0.0044537367997767863, -0.60893706022507565], [-0.62021782865419683, -0.31241505841964656, -0.30412149924897358, -0.10050556814700329, 0.79942220996755364]]]]),self.functionspace)
      arg1.setTaggedValue(1,numarray.array([[[[0.75566567702602039, 0.38341551237486016, -0.73724838670351089, -0.74423903892578558, -0.29563220843176574], [-0.82446496239963452, 0.0043373706404392642, 0.24393207236342818, -0.19975282106407133, 0.8390626699280257], [0.0078070347929031225, -0.087601089461033066, -0.83288445370827247, 0.23974115740897561, 0.044311157604378426], [0.80503830019637612, -0.78317513764526425, 0.30201809412534764, 0.48173941272911769, -0.51058655384848217]], [[0.27986567417784847, 0.31388455821204486, -0.25910373614404403, -0.058728911374695159, -0.89057766595163756], [0.82955508917868026, -0.55783380536006932, 0.093618055631583985, 0.74769784033845132, -0.88375814399770025], [-0.11814633228919535, 0.18686557966726647, -0.84600768450371766, -0.65694918945239489, -0.90420668205993349], [0.69047416886809043, -0.17193933928726612, -0.47078307432871358, -0.012636014572757315, 0.61036602976184051]], [[0.33510888352932033, 0.423163381218294, -0.28132071048267515, -0.64829671464366556, 0.66059077453092963], [-0.41217663043273522, 0.18400315860704208, -0.99241103917285733, 0.0093533717037317388, 0.51428416119694309], [-0.044168434499840092, 0.03195466562816307, -0.67588823253394259, 0.72996927172010295, 0.42277892250883609], [0.95453852012305518, 0.89476007838608784, 0.50791446536626816, -0.27863268697677701, -0.61504444606020559]]], [[[0.4994924337448543, 0.77885748312271219, -0.43490596353155397, 0.39868709796261026, 0.28943950926120743], [0.63355901030196438, 0.23934303359378539, -0.13842469942942914, -0.70471333196535935, 0.18554635302942812], [-0.35236105116608463, 0.12191934304768437, 0.46968756517235311, 0.4140434517392606, 0.60614476599273281], [0.12504101961817859, -0.9202539297001997, 0.49533774731776536, -0.95444824796937544, 0.17916104921358023]], [[0.64814463007476175, 0.61437231520740787, 0.74669308232846521, -0.62493038069235252, 0.049184043405473554], [-0.15727025306793618, 0.27202706979113733, 0.58571279212009664, 0.73272088290461834, 0.64595139530616041], [0.25331333872948414, 0.37599982911744978, -0.39750364046466768, 0.7944368890135125, -0.70080181654668938], [-0.64149510510544427, 0.72731988777732215, 0.84315676930766803, -0.21192524769854693, 0.95962245437827853]], [[0.66371189550222276, -0.73446722051567304, -0.61540984293529122, -0.050657894325482733, 0.14497978788924426], [0.90263124186527555, 0.32123881727620618, -0.11250169068851146, 0.035487595570043107, 0.96078844339791036], [-0.83138472017779486, 0.95331714416835123, -0.77996908199505444, -0.76195218746453186, 0.32671752406111376], [-0.16524324978476046, 0.13219370374184036, -0.61630693403909165, -0.96919531529533209, 0.025325440358443085]]]]))
      res=tensormult(arg0,arg1)
      msk_ref=whereNegative(self.functionspace.getX()[0]-0.5)
      ref=msk_ref*numarray.array([[[[-0.040504947507747691, 0.23215744698683266, -0.42925911570596142, -0.0039187734126281404, -0.65089551688600267], [-0.18037123927865706, -0.0018682420271430786, 0.46484637501160642, -0.20000211851010707, -0.30026799999625892], [-0.45697142705687194, 0.37686584381312899, -1.0413955385896607, -0.47076918764693892, -0.56845039818077125], [-1.3703454529329249, 0.88580152683165014, -0.2861618241346639, 0.51596580079689547, 0.675879164770401]], [[0.11561574438638553, -0.047635909213919803, 0.21074632574608804, -0.032188090133034364, -0.14067012534308015], [0.66869584577284891, 0.85942387556712108, 0.67972971162464735, -0.55565908116953666, 1.0271990875780328], [1.0092944564155664, 0.34539976533316907, -0.62035690811933686, 0.059958828577234127, 0.14300348410268296], [0.044925031443382515, 0.48329264021835816, 0.23828942025816205, -0.3267733067254911, -1.1444977418195299]], [[0.8850147115238578, 0.50536501122263655, 0.40540354091502834, 0.2505710964854041, -1.2505478653653059], [0.9214788881421998, 0.1351824746719108, 1.2772210184627015, 0.38024937803280284, 1.0001625714289961], [-0.80870235040202432, 0.27048536115507998, -0.2061360949032337, -1.4070257154909396, -0.21520185369985073], [-0.62558553508334513, 0.41313461068908025, 1.4339767440886919, -0.38519575609148954, 0.35263659505239608]], [[-1.923223531682358, 0.55669029103592305, -1.429192409244386, -1.4315877484429556, 1.5633542220221626], [-0.66694719497221155, -1.2010011629295774, -0.22863151617870936, -1.0518611536847959, -2.5033044570635505], [-0.74907199835504779, 1.4799975720589402, 0.94746455644865746, 0.33460610990464279, -1.608965835256233], [-0.2352366014219972, -1.1945643618499835, -1.3778784228305014, 0.59680818767081634, 0.49305567463167399]], [[-0.49717752910173041, -0.61097840508225376, -0.35566205326107236, -0.60178843237852164, 0.17175326831712986], [0.14427597737730705, 0.81432504820875562, 0.11711281075502299, 0.48928407168202431, 0.42527466553322202], [-0.095156422276205826, -0.54546534367878008, -0.76472444432252873, 0.92299593718899686, 0.7802167531439036], [0.12924740861691195, -0.011423757080031724, -0.50855563486073196, -0.13952118621386583, 0.49518822541580776]]], [[[0.21223862912614505, -0.89777893241605444, 0.4683710840621228, 0.09125630460015241, -0.37438683984313381], [-0.068820331464999801, 0.72467415694768555, -0.28787752138817463, 0.88027558611426637, 0.81654526287288265], [0.15319361938183149, -0.65362151031299187, -0.25726906202049632, 0.84508459659513957, 0.71221821793068651], [0.083832205871666649, 0.037192483294372733, -0.14886004650638651, -0.68454163327191375, 0.18650263707871897]], [[-0.84600581136497799, -0.62117831535065959, -0.62157525566304606, -0.68139949051207815, 0.7427652208856661], [-0.21415159870048137, 0.59783211505945555, -0.36893301071848317, 0.23270684544939793, -0.12901561224828431], [0.13634170892005265, -0.66097119251984615, -0.65727548380347611, 1.2909485228894881, 0.83847925971215775], [0.42192963337951123, -0.17391026123870779, -1.0137723661607905, 0.21915759810437052, 0.40989906780302954]], [[1.0851836223704774, 1.2520895865976522, -0.027864700570139567, 1.2560097877723071, -0.64284763922504762], [-0.60307955520514323, -1.6666345412564303, -0.38359210136480637, -0.064160253900937006, -1.1492671425142866], [-1.0856404980685708, -0.39967599751797589, 0.26225881351809144, -1.9744993385598819, -0.46578279259576832], [-0.58853951582739916, 0.62484972916123038, 0.79724446242734692, 1.4512621493735081, 1.0254790928435524]], [[-0.23838682650202914, 0.092552522535291254, 0.40768678684152376, -0.66858608053815094, -0.11743875286647233], [1.2419439965182086, 0.81535302229057482, 1.4368605087108048, -0.84726201096607112, 1.1457877769758826], [0.87427936636054271, 1.7049646962399168, 0.36125022017958208, -0.17218142437716213, -0.91216125793435365], [-0.04264393522532639, -0.29499435717839073, 0.65144671818647049, -1.36117749792082, -1.7325917384496266]], [[1.2742756464269365, 0.31732537808029748, 0.81443270374406374, 1.3728956406382253, -0.896054461024823], [-0.091621438757070087, -0.090071197787515864, -0.11458547923966839, -0.40306850968537206, 0.5909914609436161], [0.88822983211615236, -0.085413377746572428, -0.34720677424944441, -0.89950047861140303, -0.1059076527046684], [-0.4389268516443755, 1.135744873569587, 0.65414830446280414, 0.25936774323415474, -0.9077561392049226]]], [[[-0.093698686095498529, -0.21877752926794697, -0.32777082629252885, 0.10073146626053067, -0.19919671584405413], [-0.083607231801140131, 0.81336363202306816, 0.16573271886954383, -0.47585954801605862, 0.38233890299704854], [0.81685913171656321, -0.19877962628457851, -1.6557715127833152, 0.40589768981093366, 0.35344594920028349], [-0.6581504239824465, 1.1967388265215226, -0.6711674100407985, 0.56266093322973332, -0.27733994178832644]], [[0.10394665539924358, -0.30701149135048866, 0.042617652345713852, 0.61249912316342581, -0.30352628745710275], [-0.75492056127290685, 0.31472269815301246, -0.51531958395970656, -0.66662217953302039, -0.14382101416351056], [1.1590340402500674, 0.13793260535833662, -1.1445059453853024, 0.43651716824824538, -0.28412795879284447], [-1.0060915739245944, 1.255565290505984, -0.97160674197228736, 0.49290268520462449, -0.6099620498176106]], [[-0.03061071525364889, -0.44558362179114641, 0.73325030938567071, 0.25984312135390131, 0.093387120632805409], [-0.85661612377332175, -0.78681274430602099, -1.0333675971444367, 0.17318826023963707, -0.77405893912813895], [0.13005618896265775, 0.7630752177487311, 1.7294750191699941, 0.43878103943755442, -1.1064430447708227], [-0.081192584348277294, -0.88914403303197087, -0.35271097348463343, -0.94218811921176704, -0.39643725939894348]], [[1.4858282617129577, 1.0774375962607479, 0.35705387618083345, 1.6414433426022037, -0.53735453114128606], [-0.35047633619628715, -1.1974276586077521, -0.53994591773463563, -0.10869237425130786, -0.37503894408477689], [-0.23148061176290402, -0.97247293859400674, 0.092130018272914144, -1.7383105626021256, 0.32454443915014375], [0.1434682243440828, 0.81706955660248415, 1.0558516071420616, 1.3844281708550255, 0.24545973771241547]], [[-1.1632921706315407, -0.69299946617562036, -0.61748297697857812, -0.92430455731920946, 0.17264123666270367], [-0.77577818037066359, 0.021512579457955094, -0.30033027471791973, 0.28675749287285696, -1.0073260223836313], [-0.65022659609743239, 0.62188634087418193, -0.16399369204234232, 1.0940515687938854, -0.79513363495978284], [-1.05878767939082, -0.32051279116854886, -1.4321033810692678, -0.28806636562041654, 1.0149845779213313]]], [[[-1.7932709158931961, 0.12715172116362869, -1.1943625305729093, -1.5237558717186985, 1.346403284038322], [-0.288576692336805, -0.4780256685801168, 0.019547223026258886, -0.65376602400112038, -1.6186128496980967], [-0.53523700510837857, 1.1275434104646118, 0.58283896995242879, 0.72454131378543352, -1.0075283739047236], [-0.024252429737950165, -1.1133076392949404, -1.214227569272307, 0.13481145782984982, 0.37601907774506305]], [[0.39794662833100664, 0.41491165512223166, 0.15332830988117457, 0.42533229194811539, 0.25788180574245911], [0.67531401855984186, 0.59796804665323244, 0.41235679713818318, -1.0606492735508672, 0.91431821815059533], [1.5361037224422662, -0.094624985118786642, -0.67373035638870182, -0.28635598569625681, 0.57080799129730786], [0.68527877858125974, 0.71096728030415601, 0.44045845569540742, 0.40704101820843069, -1.6564949385485417]], [[-0.86643832707093615, 0.29146365845543298, -0.7965007682746712, -1.0109257796986966, 0.71075437387231], [0.1812216292317203, -0.44827582108990804, 0.26557885273126808, 0.22657998937909687, -0.80746805349053741], [-1.2057954454583422, 0.11308135792418805, 0.54798424686973302, 0.0026624136192601533, -0.093474586088762746], [0.40007875748944477, -1.0048099546252622, -0.096891719830207834, 0.1571615871314653, 1.0147424577341488]], [[1.0203765256689603, -0.4108267760889216, 0.71869731893702105, 0.822603016963392, -1.2190837781302395], [-0.56805480825855137, -0.47095518901873301, -0.58767677790014672, 1.6326614816392002, 0.10638689668684413], [-1.3098301407247086, -0.92171710005281693, 0.37865055382695934, -0.38011969868908452, 0.24440792591393593], [-0.56379202071104251, 0.054622661284292766, 0.52558970976595987, -0.33819372728160796, 1.5643792486670938]], [[-0.58529001784370216, -0.75395285995563532, 0.18751871160147288, -0.43426818639077441, -0.094983886602663908], [-0.92808124526804048, -0.55665297813786674, -0.73413858386952491, 0.77056942044054599, -0.9960368773094056], [-0.86903885129063752, 0.71194664611891956, 1.1891444907971283, 0.78941985733225206, -1.1164319999068348], [-0.73444836780084577, -0.95294090397774911, -0.8115850214614817, -0.98671078803410173, 0.87066811401864552]]]])+(1.-msk_ref)*numarray.array([[[[-0.56348600982220853, -0.87784124169972588, -0.72005984650473676, 0.80188066809613345, 1.3178601787134965], [0.24745397185967064, 0.53121248237777241, -1.2967675410140445, -1.4843443085691912, 0.50059268254115596], [-0.66098273181961675, 0.0043865434894854172, 0.9883900683460578, -0.15689062265842857, 1.9794759904265993], [0.065732054506551396, -0.063636920312820394, -0.3972242894386423, -0.90459100672171533, -1.4135304187931921]], [[-1.0071730375717984, 0.59413564476829039, 0.78319091871941393, 0.65075509427335498, 0.7320444903945591], [-0.11056569158152518, -0.013104440048564481, -0.73895582216864442, -0.38896919450939255, -1.1147218621010833], [0.49731042646290025, -0.73135319136960886, 1.4625087005304453, 0.91773282055348537, 0.4192333945657698], [-0.12545193170409541, 0.55678606400690389, 0.62842274340433124, -0.091645784229062666, -0.065323473895992551]], [[-1.5635782762271744, -0.028564837528475162, 0.7004545047903934, 0.76993663920595656, 0.43533707169303187], [-0.71758886143504752, -0.22456646755893575, -0.51058042635846157, -0.5968495134735643, -1.3589085911985737], [0.70720180042933345, -1.1488553201926248, 1.7048283588545177, 0.44902089684436874, 0.4485338175027252], [-0.14843161580053094, 0.1597751398772301, 0.13795430859188479, 0.79870345769947249, -0.6095472592850949]], [[0.073119883420204868, -1.0231258105434635, -1.2013480070006819, -0.58168926543982313, -0.37531631117103736], [-0.4802126214161927, -0.31482511495907051, -0.56396665094734533, 0.023947385449660019, 0.34719975383811597], [-0.35433682145004353, 0.046676831110806727, -1.4142572618088622, -1.0841810114603867, 0.21219426886638382], [1.3551682696451248, -0.043751520154338516, -1.1125205818820791, 0.71771394242827102, -1.3407125579697567]], [[-0.2028556866118435, 0.42615561397701185, -0.18440981131711442, -0.1031800176196612, 0.87409929483762183], [-0.48627909398047842, 0.18435391180017646, -1.1092322045697709, -0.55300996334634711, 0.080757073680978508], [0.076059100169370564, -0.37273639794331881, 0.26048212769707868, 0.8410999639034179, 0.85767086569729001], [0.76596063108254731, 0.48888029818574669, 0.54928378430839131, -0.20584423326794116, -0.8538838086361018]]], [[[-0.016036085121048677, 0.22490877219624678, 0.05429584947671473, 0.70095258775411706, 0.6922177287526049], [0.6949001752537689, 0.41557227295943899, -0.25074815916503451, -0.71996755718244454, 0.14593362171659363], [-0.32028557707439265, 0.16716165268226751, 1.0098560264075229, 0.35159598052791263, 0.80303645842687266], [-0.57889125413486231, -0.28166059871044691, 0.33713546347563361, -1.0673124736518476, 0.18213473734473826]], [[-0.43551374719933655, -0.48848379602124337, 0.49185403184458637, 0.038407007966687397, 1.0737790561395166], [0.042024457137486426, 0.4098415157291615, -0.90448279573688173, 0.020238098524373957, 0.30254489030349074], [-0.085891144188328175, 0.21317603243758365, 0.27190283335024501, 0.37252564906346969, 0.58647099421408766], [-0.38007479551970547, 1.5990966843077874, 0.098774372975315217, -0.58079117211022313, -0.30914143511351938]], [[-0.73361647560128329, -0.51992467814881238, -0.51789678940373884, -0.2386829916434185, 0.30102967452094342], [-1.5707098256861123, -0.12188452779635958, -0.66203987222115634, -0.76224762333896712, 0.067521751441143474], [0.33774052354118089, -0.88519960158222699, 0.16507274027813879, 0.094630167128230802, 0.80984637242008561], [0.92653585520313686, -0.16856768755792195, -0.19330532434742914, 1.2360347950804427, -1.7535655277038873]], [[0.58801722088990294, 0.1713925123158877, 0.037864694038594104, 0.19179920153723051, 1.3877930537682608], [1.373400176557362, 0.77843903119161184, -1.1147619075313693, -0.13918139260276444, 0.88017203932738397], [-0.80752296733002016, 1.0232176276733076, -0.0082417654529945983, 0.55611151695733607, 0.92309093522242902], [-0.35382161845947602, 1.324131832957675, 0.44607475471964136, -2.2185590547331393, 0.34979578549089257]], [[0.33829346498679136, -0.76417615970927388, -0.85813135158484122, -0.4226148357491889, -0.27612086187790424], [-0.34895722554312691, -0.021066669167445512, 0.034374432198226057, -0.11980913420856799, 0.75721671057747153], [-0.34505652739502518, 0.22060560626694098, -0.92161881967983961, -0.73715182141996993, 0.20666831093367274], [0.51529243233773048, -0.38273706112410744, -0.66800651323316274, 0.37154255393159819, -0.76385364946133938]]], [[[-0.70853780404134581, -0.74796554035197549, -0.037694853612333476, 0.38641441409778415, 0.58382713406846598], [-0.095976807904188638, 0.11874260925608478, -0.6744059369848262, -0.46346760077522375, -0.10159742405397193], [-0.10799861639655037, -0.16100662426342158, 0.53438314760836314, -0.22143403299723768, 0.74220668923749888], [-0.071282617717263352, 0.43593229615144102, -0.40851288614501358, -0.032651668802054862, -0.75733473563066989]], [[-0.28293965955743927, 0.19038890632612418, -0.88772077452992071, 1.0828574670267854, 0.12563572761399294], [2.0835701567811644, -0.39484045292964337, -1.5057028120229297, -0.34838580556025911, -1.534846557859296], [-0.80979419722828894, 0.19701169169899052, 0.13862582706227655, -0.83935632824485706, 0.60122610381743313], [1.2185149178408983, -0.1963173312875339, -0.8323006504994177, -1.4185022113181258, -0.10039761907299348]], [[0.58045151231370895, 1.0145292533822754, 0.67854305072364163, -0.46851592983913265, -0.084940892807045781], [0.70199066691828471, -0.073533914599209688, -0.073664853816173367, 1.1696115825958091, -0.3224863800494327], [0.13271016554577844, 0.44741566367606078, -0.73061037058692357, 0.62226903211306583, -1.0101976732357121], [0.077340221525621825, 1.1933423607490201, 0.65428772330690954, -0.65453041203388895, 1.2613867597140893]], [[-1.2509507759035707, -0.11465067910435373, 0.15048848657137437, 0.2013493555791393, 0.33297805404003999], [-0.48286342709104269, -0.46753222376505077, -1.3142300368808231, -0.033617692850787556, -1.4127852430174643], [0.44234697672624734, -0.86518936482541098, 0.36632973138594083, 0.097772878123829787, 0.25061183101461426], [1.0468121151871961, 0.94738856458515708, -0.26880032338859561, 0.68960275577208874, -0.97036922665946668]], [[-0.094124008603639786, -1.2150141850030667, -1.2046752140291175, 0.86023977010066588, -0.85265903516862185], [1.5517311659866646, -0.44002181010515307, -0.0010602538067671502, -0.23092905568552252, -0.63920247902376637], [-0.93660187733411382, 0.48499414054643741, -0.38194382645750896, -2.1575888916261396, 0.13939322227374329], [0.35685476554571122, -1.2236720945529549, -1.8486695999818117, -0.38421254805518268, -0.19203224077287701]]], [[[0.15159194393034447, -0.19455194429673628, -0.18842659398746409, -0.93130499435452352, -0.5972340795864054], [-0.014323634753935791, -0.57748809660894929, -0.57518717397362507, 1.3433819496313975, -0.48921880156738651], [0.063146618413106481, 0.19791636031012896, -1.8716940921106351, -0.56063146529273677, -1.0275542389248846], [1.3025476497579276, 1.3439668200392973, -0.61046103526320572, 0.54865726550847516, -0.10087825715988785]], [[-0.26211084174066313, 0.11677873559695823, -0.52655420656700413, -0.93836328312740991, -0.23798814989065906], [-1.337792576737765, -0.54569103249658391, -0.88455390802975498, 0.31175201016677101, -0.40884621971655999], [0.45896835671022052, -0.71893908105244175, -1.1411055906959819, 0.13349676939587912, -0.18865538348485289], [1.8973259197277439, 0.55570469142607104, -0.12120168824846927, 1.3417999611291749, -1.2766889234515812]], [[-0.4322540277487657, -0.30742145300356732, 1.4059659731616652, -0.53326156767394406, 0.63845077589595955], [-0.54662174145964892, 0.26735687386678408, -0.15586334610481858, 0.99520892239329617, 0.21853366576261088], [0.51890374821960772, 0.14809741314252062, -0.073241879208673838, 0.69709190976536739, -0.53189193809015634], [-0.90356943434608528, 2.3281381987894774, 0.4433228899582784, 0.16844361385225909, 0.420745988242824]], [[0.40649400817151032, -0.46018958506477275, -0.083849247509180991, 0.61730794376085241, 1.4264021835024576], [1.0636349176541593, 1.0438551791923116, -0.46362857860860146, -0.90219363110986639, 1.4375608240577029], [-0.90388500447343889, 0.94568064643968541, 0.78650970454046665, 0.25758326104953588, 1.4612269159527802], [-1.2111052517924616, 0.32534906087817506, 0.23260999733618593, -2.0130306841890753, 0.063045875453808992]], [[-0.54302837866960063, 1.1097304599665467, -0.19131821857325293, 0.32170389391561433, 1.1367553819533951], [-0.82142581414810201, 0.17842897477986563, -1.2942635332857515, -1.3280319082190273, -0.3696036387911098], [0.34648465752680052, -1.0245795260960711, 1.2886481031615966, 1.4980576832334633, 1.3814607159823016], [0.96025760595173604, -0.26407691075812284, 1.1093291215758234, -0.10485679104935275, -1.1449760977988743]]]])
      self.failUnless(isinstance(res,Data),"wrong type of result.")
      self.failUnlessEqual(res.getShape(),(4, 5, 4, 5),"wrong shape of result.")
      self.failUnless(Lsup(res-ref)<=self.RES_TOL*Lsup(ref),"wrong result")

