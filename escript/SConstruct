# Scons configuration file for escript

import os
import sys

#
# ensure correct versions of python and scons

EnsurePythonVersion(2,3)
EnsureSConsVersion(0,96)

#
# set appropriate defaults for configuration variables

esysroot = Dir('#..')
libinstall = None
pyinstall = None
dodebug = 0
usegcc = 0
options = None

#
# import configuration variables passed in from
# calling SConscript (if any)

Import('*')

#
# retreive command-line arguments if any

if ARGUMENTS.get('libinstall',0):
  libinstall = ARGUMENTS.get('libinstall',0)
Export(["libinstall"])

if ARGUMENTS.get('pyinstall',0):
  pyinstall = ARGUMENTS.get('pyinstall',0)
  pyinstall = Dir(str(pyinstall) + '/escript')
Export(["pyinstall"])

if ARGUMENTS.get('debug',0):
  dodebug = 1

if ARGUMENTS.get('usegcc',0):
  usegcc = 1

if ARGUMENTS.get('options',0):
  options = ARGUMENTS.get('options',0)

#
# determine platform

env = Environment(ENV = os.environ)
platform = env['PLATFORM']

#
# determine hostname

import socket
hostname = socket.gethostname()

#
# export esysroot

Export(["esysroot"])

#
# set and export library directories

libdir = Dir(str(esysroot) + '/escript/lib')
Export(["libdir"])
libdir2 = Dir(str(esysroot) + '/lib')
Export(["libdir2"])

#
# set and export python directories

pydir = Dir(str(esysroot) + '/escript/lib/py_src')
Export(["pydir"])
pydir2 = Dir(str(esysroot) + '/esys/escript')
Export(["pydir2"])

#
# load and export configuration settings

options_dir = str(esysroot) + '/scons'
sys.path.append(options_dir)

from default_options import *

if hostname=='ess':
  from ess_options import *

if usegcc==1:
  from gcc_options import *

if options!=None:
  exec "from " + options + " import *"

if dodebug==1:
  cxx_flags=cxx_flags_debug

Export(["python_path"])
Export(["boost_path"])
Export(["cxx"])
Export(["cxx_flags"])
Export(["boost_lib_path"])
Export(["boost_lib"])
Export(["sys_libs"])

#
# print out build configuration for this module

print "Build configuration for module: escript"
print "         dodebug: ", dodebug
print "          usegcc: ", usegcc
print "             cxx: ", cxx
print "        platform: ", platform
print "        hostname: ", hostname
print "      libinstall: ", libinstall
print "       pyinstall: ", pyinstall

#
# call the SConscript to do the actual build

SConscript(dirs=['src/Data'], build_dir='obj/Data', duplicate=0)
SConscript(dirs=['py_src'], build_dir='obj/py_src', duplicate=0)
SConscript(dirs=['test/Data'], build_dir='obj/test/Data', duplicate=0)
SConscript(dirs=['test/DataAlgorithmAdapter'], build_dir='obj/test/DataAlgorithmAdapter', duplicate=0)
SConscript(dirs=['test/DataArray'], build_dir='obj/test/DataArray', duplicate=0)
SConscript(dirs=['test/DataArrayView'], build_dir='obj/test/DataArrayView', duplicate=0)
SConscript(dirs=['test/DataBlocks2D'], build_dir='obj/test/DataBlocks2D', duplicate=0)
SConscript(dirs=['test/DataC'], build_dir='obj/test/DataC', duplicate=0)
SConscript(dirs=['test/DataCached'], build_dir='obj/test/DataCached', duplicate=0)
SConscript(dirs=['test/DataConstant'], build_dir='obj/test/DataConstant', duplicate=0)
SConscript(dirs=['test/DataEmpty'], build_dir='obj/test/DataEmpty', duplicate=0)
SConscript(dirs=['test/DataExpanded'], build_dir='obj/test/DataExpanded', duplicate=0)
SConscript(dirs=['test/DataFactory'], build_dir='obj/test/DataFactory', duplicate=0)
SConscript(dirs=['test/DataProf'], build_dir='obj/test/DataProf', duplicate=0)
SConscript(dirs=['test/DataTagged'], build_dir='obj/test/DataTagged', duplicate=0)
SConscript(dirs=['test/DataVariable'], build_dir='obj/test/DataVariable', duplicate=0)
SConscript(dirs=['test/DataVector'], build_dir='obj/test/DataVector', duplicate=0)
SConscript(dirs=['test/FunctionSpace'], build_dir='obj/test/FunctionSpace', duplicate=0)
SConscript(dirs=['test/Taipan'], build_dir='obj/test/Taipan', duplicate=0)
