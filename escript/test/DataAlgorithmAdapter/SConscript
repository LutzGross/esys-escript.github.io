# Scons configuration file for DataAlgorithmAdapter unit tests

import os
import sys

#
# ensure correct versions of python and scons

EnsurePythonVersion(2,3)
EnsureSConsVersion(0,96)

#
# set appropriate defaults for configuration variables

esysroot = Dir('#../../..')
usegcc = 0
options = None
sys_libs = []

#
# import configuration variables passed in from
# calling SConscript (if any)

Import('*')

#
# retreive command-line arguments if any

if ARGUMENTS.get('usegcc',0):
  usegcc = 1

if ARGUMENTS.get('options',0):
  options = ARGUMENTS.get('options',0)

#
# determine platform

env = Environment(ENV = os.environ)
platform = env['PLATFORM']

#
# determine hostname

import socket
hostname = socket.gethostname()

#
# load configuration settings

options_dir = str(esysroot) + '/scons'
sys.path.append(options_dir)

from default_options import *

if hostname=='ess':
  from ess_options import *

if usegcc==1:
  from gcc_options import *

if options!=None:
  exec "from " + options + " import *"

cxx_flags=cxx_flags_debug

#
# print out build configuration for this module

print "Build configuration for module: DataAlgorithmAdapter unit tests"
print "         dodebug:  1"
print "          usegcc: ", usegcc
print "             cxx: ", cxx
print "        platform: ", platform
print "        hostname: ", hostname

#
# do the actual build

dataalgorithmadapter_test_path = str(esysroot) + '/escript/test/DataAlgorithmAdapter'
escript_path = str(esysroot) + '/escript/inc'
esysUtils_path = str(esysroot) + '/esysUtils/inc'
CppUnitTest_path = str(esysroot) + '/tools/CppUnitTest/inc'

esys_lib_path = str(esysroot) + '/lib'
esysUtils_lib_path = str(esysroot) + '/esysUtils/lib'
CppUnitTest_lib_path = str(esysroot) + '/tools/CppUnitTest/lib'

escript_lib = str(esys_lib_path) + '/libescriptcpp.so'

install_dir = str(esysroot) + '/escript/test'

cpp_path = [dataalgorithmadapter_test_path,
            escript_path,
            esysUtils_path,
            CppUnitTest_path,
            python_path,
            boost_path]

lib_path = [esys_lib_path,
            esysUtils_lib_path,
            CppUnitTest_lib_path,
            python_lib_path,
            boost_lib_path]

libs = ['escriptcpp',
        'esysUtils',
        'CppUnitTest',
        str(python_lib),
        str(boost_lib),
        'dl',
        'util']

libs.extend(sys_libs)

sources = ['DataAlgorithmAdapterTestCase.cpp',
           'DataAlgorithmAdapterTest.cpp']

target = 'DataAlgorithmAdapterTest.exe'

dataalgorithmadapter_env = Environment(ENV = os.environ)

dataalgorithmadapter_env.Replace(CXX = cxx)
dataalgorithmadapter_env.Replace(CXXFLAGS = cxx_flags)
dataalgorithmadapter_env.Replace(CPPPATH = cpp_path)
dataalgorithmadapter_env.Replace(LIBPATH = lib_path)
dataalgorithmadapter_env.Replace(LIBS = libs)

dataalgorithmadapter_test_exe = dataalgorithmadapter_env.Program(target, sources)

Depends(dataalgorithmadapter_test_exe, escript_lib)

Alias("build_tests", dataalgorithmadapter_env.Install(install_dir, dataalgorithmadapter_test_exe))

import scons_extensions
runUnitTest_builder = Builder(action = scons_extensions.runUnitTest, suffix = '.passed', single_source=True)
dataalgorithmadapter_env.Append(BUILDERS = {'RunUnitTest' : runUnitTest_builder});

Alias("run_tests", dataalgorithmadapter_env.RunUnitTest(target))
