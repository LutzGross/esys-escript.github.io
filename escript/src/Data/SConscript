Import('*')

lib_name = 'escriptcpp'

local_env=env.Copy()

src_dir = local_env.Dir('.').srcnode().abspath

import os
filenames = os.listdir(src_dir)
sources = [x for x in filenames if os.path.splitext(x)[1] in ['.cpp', '.c']]
headers = [x for x in filenames if os.path.splitext(x)[1] in ['.h']]

include = Dir('escript/Data', esys_inc)
local_env.Install( include, headers )

local_env.Append(LIBS= [boost_lib_name, 'esysUtils'])

if env['PLATFORM'] == "win32":
   local_env.Append(CPPDEFINES=['_WINDOWS', '_USRDLL', 'ESCRIPT_EXPORTS'])
   local_env.Append(LIBS= ['ext_math'])
   local_env['PDB'] = lib_name + '.pdb'
elif env['PLATFORM'] == "posix" :
    pass
else:
   import os
   
   cxx_flags = '-O0 -openmp -openmp_report0 -tpp2 -ansi -ansi_alias -no-gcc -w1'
   
   cpp_path = ['#../escript/inc',
               '#../esysUtils/inc',
               '/raid2/tools/python-2.3.4/include/python2.3',
               '/raid2/tools/boost/include/boost-1_31']
   
   local_env = Environment(ENV = os.environ)
   
   local_env.Replace(CXX = 'icc')
   local_env.Replace(SHOBJSUFFIX = '.lo')
   local_env.Replace(CXXFLAGS = cxx_flags)
   local_env.Replace(CPPPATH = cpp_path)
   
escript_lib = local_env.SharedLibrary(lib_name, sources)
local_env.Install(esys_lib, escript_lib)

# Python
local_env.Export('lib_name')
env.SConscript(dirs = ['#/escript/py_src'], build_dir='#/build/$PLATFORM/escript/py', duplicate=0)
