Import('*')

local_env=env.Copy()

src_dir = local_env.Dir('.').srcnode().abspath

import os
filenames = os.listdir(src_dir)
sources = [x for x in filenames if os.path.splitext(x)[1] in ['.cpp', '.c']]
headers = [x for x in filenames if os.path.splitext(x)[1] in ['.h']]
# Filter out sources that should not be in the list automatically

lib_name = 'escriptcpp'

local_env.Append(LIBS = [boost_lib, 'esysUtils', sys_libs ])

lib = local_env.SharedLibrary(lib_name, sources)

include_path = Dir(lib_name, incinstall)

local_env.Install(include_path, headers )
local_env.Install(libinstall, lib)

# export the lib target since tests will depend on it
# the lib target is a list of file nodes (why? win32 produces more than one output file: .lib, .dll, .pdb)
# FIXME: This list handling produces the desired result but can this be done directly with scons File nodes?
dep_lib = [libinstall+'/'+str(x) for x in lib]
Export('dep_lib')

# Call the python sconscript
env.SConscript(dirs = ['#/escript/py_src'], build_dir='py', duplicate=0)

# Call the unit tests SConscript
local_env.SConscript(dirs = ['#/escript/test'], build_dir='#/build/$PLATFORM/escript/test', duplicate=0)
