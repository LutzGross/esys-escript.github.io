#!/bin/sh

#
# Submit a PBS job to run the tests
#
#	Usage: autotest-scons		# Short testing, only C++ tests
#	Usage: autotest-scons run_tests	# Short testing, only C++ tests
#	Usage: autotest-scons all_tests	# Long testing, C++ and python tests
#
# Copy this somewhere and run it every day via cron
#
# This file should be maintained in SVN as esys13/trunk/autotest-scons,
# be sure to copy it there and commit after modification
#

# TODO: should try using the entire node: scons -j $NCPUS all_tests
# I've been told this produces poor results...why?

# Which tests should we run?
target='run_tests'	# Default scons target that runs the tests
test "x$1" != "x" && target="$1"

MAIL_RECIPIENTS="gross@esscc.uq.edu.au elspeth@esscc.uq.edu.au matt@esscc.uq.edu.au robert.woodcock@csiro.au Peter.Hornby@csiro.au k.steube@uq.edu.au"
# MAIL_RECIPIENTS="k.steube@uq.edu.au"

RunDate=`date '+%Y_%m_%d'`	# Time stamp for log file names

WorkDir=/raid3/ksteube/AutoTests
cd $WorkDir

# Where to put the output of scons run_tests
out_file="$WorkDir/Logs/$RunDate.test.output"

# Save the name of this script
SCRIPT_NAME=$0

# Below here \$variable means I want the variable interpreted when PBS runs the job, not when the job is submitted
# Similarly for \`...\`

# Write the PBS script to run the tests
cat << EOF > Logs/$RunDate.pbs.script.sh
#!/bin/bash

#PBS -q q1
#PBS -l ncpus=2
#PBS -o $RunDate.pbs.stdout
#PBS -e $RunDate.pbs.stderr

echo "PBS_JOBNAME       \$PBS_JOBNAME"
echo "PBS_JOBID         \$PBS_JOBID"
echo "PBS_QUEUE         \$PBS_QUEUE"
echo "NCPUS             \$NCPUS"
echo "USER              \$USER"
echo "PBS_O_HOST        \$PBS_O_HOST"
echo "PBS_O_WORKDIR     \$PBS_O_WORKDIR"
echo "PBS_O_SHELL       \$PBS_O_SHELL"
echo ""
echo ""



START=\`date '+%Y/%m/%d %H:%M'\`

finish () {
  END=\`date '+%Y/%m/%d %H:%M'\`
  cat << END_MSG | mail -s "ESYS_TESTS $target $RunDate \$1" $MAIL_RECIPIENTS
\$2.
The tests ran from \$START to \$END.
See the log files in $WorkDir/Logs for more information.
This mail was sent by $SCRIPT_NAME
running as \$USER on \`hostname\`.
END_MSG
  test "x$1" = "FAIL" && exit 1
  exit 0
}


cd $WorkDir				|| finish FAILURE "Could not cd to WorkDir $WorkDir"

# Create an empty out_file
cat /dev/null > $out_file		|| finish FAILURE "Could not create out_file $out_file"

umask 022

test -d sandbox.$RunDate		&& finish FAILURE "Today's sandbox already exists"
mkdir sandbox.$RunDate			|| finish FAILURE "Could not mkdir sandbox"
cd sandbox.$RunDate			|| finish FAILURE "Could not cd to sandbox"

echo "Checking out esys13/trunk"
svn checkout svn+ssh://shake200.esscc.uq.edu.au/home/www_svn/repos/esys13/trunk >> $out_file 2>&1 || finish FAILURE "Could not check out esys13/trunk"

# Load modules
. /opt/modules/default/init/bash
module use /raid2/matt/modules/modulefiles
module use /raid2/toolspp4/modulefiles/gcc-3.3.6
module use /usr/share/modules/modulefiles
module load esys/env	# Matt's recommended modules
module load doxygen/1.4.6
# The next line is to avoid /raid3/ksteube/AutoTests/sandbox.2006_06_17/trunk/build/posix/bruce/test/bruce_UnitTest: error while loading shared libraries: libboost_python-mt-d.so.1.33.0: cannot open shared object file: No such file or directory
module load boost/1.33.0/python-2.4.1


# Had to request 2 CPUs, but only use one for the tests
export OMP_NUM_THREADS=1

# Run the tests
echo "Running the tests"
cd trunk				|| finish FAILURE "Could not cd to trunk"
scons $target >> $out_file 2>&1		|| finish FAILURE "Could not run scons $target"

# Delete files older than 21 days
find $WorkDir -atime +21 -exec rm -f {} \;

# Clean up the sandbox
cd $WorkDir				|| finish FAILURE "Could not cd to clean up WorkDir $WorkDir"
/bin/rm -rf sandbox.$RunDate		|| finish FAILURE "Could not delete sandbox"

finish SUCCESS "Successfully ran 'scons $target', see Logs in $WorkDir on ess"

EOF

# cd to the logs area so the PBS logs are deposited there
cd $WorkDir/Logs

# Submit the job
. /opt/modules/default/init/sh
module load pbspro
qsub -S /bin/bash $RunDate.pbs.script.sh > /dev/null

