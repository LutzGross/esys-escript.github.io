import os
Import('*')

local_env=env.Copy()

# get the relevant file names:
src_dir = local_env.Dir('.').srcnode().abspath
filenames = [ x for x in os.listdir(src_dir) if os.path.splitext(x)[1] in [".h", ".c", ".cpp"] ]

sources = [x for x in filenames if os.path.splitext(x)[1] in ['.cpp', '.c']]
headers = [x for x in filenames if os.path.splitext(x)[1] in ['.h']]
# Filter out sources that should not be in the list automatically

lib_name = 'esysUtils'

local_env.Append(LIBS = boost_lib )

lib = local_env.StaticLibrary(lib_name, sources)

include_path = Dir(lib_name, incinstall)

local_env.Install(include_path, headers )
local_env.Install(libinstall, lib)

# Call the unit tests SConscript 
# export the lib target since tests will depend on it
# the lib target is a list of file nodes (why? win32 produces more than one output file: .lib, .dll, .pdb)
# FIXME: This list handling produces the desired result but can this be done directly with scons File nodes?

dep_lib = [libinstall+'/'+str(x) for x in lib]
Export('dep_lib')

local_env.SConscript(dirs = ['#/esysUtils/test'], build_dir='#/build/$PLATFORM/esysUtils/test', duplicate=0)


# add source files to release
release_srcfiles = [ env.File(x) for x in filenames ] + [env.File("SConscript"), ]
env.Zip(src_zipfile, release_srcfiles)
try:
   env.Tar(src_tarfile, release_srcfiles)
except AttributeError:
    pass
