Import('*')

program_name = 'EsysExceptionTest'

local_env=env.Copy()

src_dir = local_env.Dir('.').srcnode().abspath

import os
# get the relevant file names:
src_dir = local_env.Dir('.').srcnode().abspath
filenames = [ x for x in os.listdir(src_dir) if os.path.splitext(x)[1] in [".h", ".c", ".cpp"] ]

sources = [x for x in filenames if os.path.splitext(x)[1] in ['.cpp', '.c']]

local_env.Append(LIBS=[ 'esysUtils', 'CppUnitTest', sys_libs])

program = local_env.Program(program_name, sources)

#Add Unit Test to target alias

env.Alias('build_tests', program)

# run the tests - but only if test_targets are stale
local_env.RunUnitTest(program_name)
test_targets = os.path.splitext(program_name)[0]+'.passed'
Alias("run_tests", test_targets)

release_srcfiles = [ env.File("SConscript"), ]
release_testfiles = [ env.File(x) for x in  filenames ]
env.Zip(src_zipfile, release_srcfiles)
env.Tar(src_tarfile, release_srcfiles)
env.Zip(test_zipfile, release_testfiles)
env.Tar(test_tarfile, release_testfiles)

