Import('*')

program_name = 'finley_UnitTest'

local_env=env.Copy()

import os

# get the relevant file names:
src_dir = local_env.Dir('.').srcnode().abspath
filenames = [ x for x in os.listdir(src_dir) if os.path.splitext(x)[1] in [".h", ".c", ".cpp"] ]

sources = [x for x in filenames if os.path.splitext(x)[1] in ['.cpp', '.c']]

local_env.Append(LIBS=['finley', 'escript', 'paso', 'esysUtils', 'CppUnitTest'] + \
		  local_env['scsl_libs'] + local_env['mkl_libs'] + local_env['umf_libs'] + sys_libs)

# compile test
program = local_env.Program(program_name, sources)
env.Alias('build_tests', program)

# run the tests - but only if test_targets are stale
local_env.RunUnitTest(program_name)
test_targets = os.path.splitext(program_name)[0]+'.passed'
Alias("run_tests", test_targets)

local_env.SConscript(dirs = ['#/finley/test/python'], build_dir='python', duplicate=0)
