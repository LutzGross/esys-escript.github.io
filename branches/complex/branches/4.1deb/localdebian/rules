#!/usr/bin/make -f

PROJROOT=$(CURDIR)
BDEST=$(CURDIR)/debian/python-escript
BMDEST=$(CURDIR)/debian/python-escript-mpi
B3DEST=$(CURDIR)/debian/python3-escript
B3MDEST=$(CURDIR)/debian/python3-escript-mpi
DDEST=$(CURDIR)/debian/python-escript-doc
BUILD=$(CURDIR)/debian/tmp2
BUILDM=$(CURDIR)/debian/tmp2M
BUILD3=$(CURDIR)/debian/tmp3
BUILD3M=$(CURDIR)/debian/tmp3M
WORK=$(CURDIR)/debian/stage2
WORKM=$(CURDIR)/debian/stage2M
WORK3=$(CURDIR)/debian/stage3
WORK3M=$(CURDIR)/debian/stage3M




#thanks to the debian manual
ifneq (,$(filter parallel=%,$(DEB_BUILD_OPTIONS)))
    parbuild=$(patsubst parallel=%,%,$(filter parallel=%,$(DEB_BUILD_OPTIONS)))
    sflags=-j$(parbuild)
else
    sflags=-j10
endif

%:
	dh $@  --with python2,python3,sphinxdoc -v

override_dh_clean:
	rm -rf build condif.log esys include lib release .sconf_tmp .sconsign.dblite config.log .sconf_temp
	rm -rf $(BDEST)
	rm -rf $(B3DEST)
	rm -rf $(BMDEST)
	rm -rf $(B3MDEST)
	rm -rf $(DDEST)
	rm -rf $(BUILD)
	rm -rf $(BUILDM)
	rm -rf $(BUILD3)
	rm -rf $(BUILD3M)
	rm -rf $(WORK)
	rm -rf $(WORKM)
	rm -rf $(WORK3)
	rm -rf $(WORK3M)
	rm -rf $(CURDIR)/debian/tmp/*
	rm -f debian/files
	rm -f debian/substvars
	dh_clean

override_dh_auto_build:
	#Build steps for py2
	mkdir -p $(WORK)
	if [ ! -f svn_version ];then echo "No svn_version file found"; exit 3;fi
	scons $(sflags) SVN_VERSION=`cat svn_version` build_dir=$(BUILD) verbose=on prefix=$(WORK) options_file=`debian/utils/getsubst`_options.py
	sed -i -e "s%STDLOCATION=0%STDLOCATION=1%" $(WORK)/bin/run-escript
	# extract the relevant .py files
	cd $(WORK); $(PROJROOT)/debian/utils/cppy.py $(PROJROOT); cd $(PROJROOT)
	cp $(PROJROOT)/doc/manpage/man1/run-escript.1 $(WORK)/run-escript2.man
	mv $(WORK)/bin/run-escript $(WORK)/bin/run-escript2
	find $(WORK) -name '*.pyc' -print0 | xargs -0 rm -f
	
	# build_steps for documentation 
	# depends on the py2 build so don't do anything here
        # which will overwrite changes made in the py2 build
	mkdir -p $(BUILD)
	scons $(sflags) SVN_VERSION=`cat svn_version` build_dir=$(BUILD) verbose=on prefix=$(WORK) options_file=`debian/utils/getsubst`_options.py docs
	find $(WORK) -name '*.pyc' -print0 | xargs -0 rm -f
	# remove MathJax includes
	sed -i -e 's%<script type="text/javascript" src="http://cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML"></script>%%' $(WORK)/release/doc/sphinx_api/*.html
	
	# Build steps for py2 with MPI	
	mkdir -p $(WORKM)
	if [ ! -f svn_version ];then echo "No svn_version file found"; exit 3;fi
	scons $(sflags) SVN_VERSION=`cat svn_version` build_dir=$(BUILDM)  cpp_extra='-DOVERLORDPATH=\"/usr/lib/python-escript-mpi/\"' verbose=on prefix=$(WORKM) options_file=`debian/utils/getsubst`_mpi_options.py
	sed -i -e "s%ESCRIPT_ROOT=/usr/lib/python-escript%ESCRIPT_ROOT=/usr/lib/python-escript-mpi%" $(WORKM)/bin/run-escript
	sed -i -e "s%STDLOCATION=0%STDLOCATION=1%" $(WORKM)/bin/run-escript
	# extract the relevant .py files
	cd $(WORKM); $(PROJROOT)/debian/utils/cppy.py $(PROJROOT); cd $(PROJROOT)
	cp $(PROJROOT)/doc/manpage/man1/run-escript.1 $(WORKM)/run-escript2-mpi.man
	ln $(WORKM)/bin/run-escript $(WORKM)/bin/run-escript2-mpi
	find $(WORKM) -name '*.pyc' -print0| xargs -0 rm -f
	rm -rf $(BUILDM)

	# Build steps for py3
	mkdir -p $(WORK3)
	if [ ! -f svn_version ];then echo "No svn_version file found"; exit 3;fi
	scons $(sflags) SVN_VERSION=`cat svn_version` build_dir=$(BUILD3) verbose=on prefix=$(WORK3) options_file=`debian/utils/getsubst`_py3_options.py
	sed -i -e "s%STDLOCATION=0%STDLOCATION=1%" $(WORK3)/bin/run-escript
	sed -i -e "s%ESCRIPT_ROOT=/usr/lib/python-escript%ESCRIPT_ROOT=/usr/lib/python3-escript%" $(WORK3)/bin/run-escript
	sed -i -e "s%PYTHON_CMD=python%PYTHON_CMD=python3%" $(WORK3)/bin/run-escript
	# extract the relevant .py files
	cd $(WORK3); $(PROJROOT)/debian/utils/cppy.py $(PROJROOT); cd $(PROJROOT)
	cp $(PROJROOT)/doc/manpage/man1/run-escript.1 $(WORK3)/run-escript3.man
	ln $(WORK3)/bin/run-escript $(WORK3)/bin/run-escript3
	find $(WORK3) -name '*.pyc' -print0| xargs -0 rm -f
	rm -rf $(BUILD3)

	# Build steps for py3 with MPI
	mkdir -p $(WORK3M)
	if [ ! -f svn_version ];then echo "No svn_version file found"; exit 3;fi
	scons $(sflags) SVN_VERSION=`cat svn_version` build_dir=$(BUILD3M)  cpp_extra='-DOVERLORDPATH=\"/usr/lib/python-escript3-mpi/\"' verbose=on prefix=$(WORK3M) options_file=`debian/utils/getsubst`_py3_mpi_options.py
	sed -i -e "s%ESCRIPT_ROOT=/usr/lib/python-escript%ESCRIPT_ROOT=/usr/lib/python3-escript-mpi%" $(WORK3M)/bin/run-escript
	sed -i -e "s%STDLOCATION=0%STDLOCATION=1%" $(WORK3M)/bin/run-escript
	sed -i -e "s%PYTHON_CMD=python%PYTHON_CMD=python3%" $(WORK3M)/bin/run-escript
	# extract the relevant .py files
	cd $(WORK3M); $(PROJROOT)/debian/utils/cppy.py $(PROJROOT); cd $(PROJROOT)
	cp $(PROJROOT)/doc/manpage/man1/run-escript.1 $(WORK3M)/run-escript3-mpi.man
	ln $(WORK3M)/bin/run-escript $(WORK3M)/bin/run-escript3-mpi
	find $(WORK3M) -name '*.pyc' -print0| xargs -0 rm -f	
	rm -rf $(BUILD3M)


override_dh_gencontrol:
	dh_gencontrol
	# This is not strictly part of gencontrol
	# it just needs to be somewhere around it
	sed -i -e 's/#PACKAGE#/python-escript/' debian/python-escript/DEBIAN/prerm
	sed -i -e 's/pyclean [^>]/pyclean -p python-escript /' debian/python-escript/DEBIAN/prerm
	sed -i -e 's/#PACKAGE#/python-escript-mpi/' debian/python-escript-mpi/DEBIAN/prerm
	sed -i -e 's/pyclean [^>]/pyclean -p python-escript-mpi /' debian/python-escript-mpi/DEBIAN/prerm
	sed -i -e 's/#PACKAGE#/python-escript-mpi/' debian/python-escript-mpi/DEBIAN/prerm
	sed -i -e 's/pyclean [^>]/pyclean -p python-escript-mpi /' debian/python-escript-mpi/DEBIAN/prerm
	sed -i -e 's/#PACKAGE#/python3-escript-mpi/' debian/python3-escript-mpi/DEBIAN/prerm
	sed -i -e 's/py3clean [^>]/py3clean -p python3-escript-mpi /' debian/python3-escript-mpi/DEBIAN/prerm
