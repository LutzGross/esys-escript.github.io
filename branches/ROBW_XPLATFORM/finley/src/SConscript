Import('*')

local_env=env.Copy()

src_dir = local_env.Dir('.').srcnode().abspath

import os
filenames = os.listdir(src_dir)
sources = [x for x in filenames if os.path.splitext(x)[1] in ['.cpp', '.c']]
headers = [x for x in filenames if os.path.splitext(x)[1] in ['.h']]

# Filter unused sources
sources.remove('ElementFile_borrowLocalVolume.c') # FIXME: Should this file be removed?

# finleycpp has additional source in the CPPAdapter sub-directory. Append these to the list
cppadapter_filenames = os.listdir(src_dir+'/CPPAdapter');
sources += ['CPPAdapter/'+x for x in cppadapter_filenames if os.path.splitext(x)[1] in ['.cpp', '.c']]
cppadapter_headers = ['CPPAdapter/'+x for x in cppadapter_filenames if os.path.splitext(x)[1] in ['.h']]

if mkl_libs:
   local_env.Append(CPPDEFINES=['MKL',])
   local_env.Append(LIBS = mkl_libs)
if scsl_libs:
   local_env.Append(CPPDEFINES=['SCSL',])
   local_env.Append(LIBS = scsl_libs)
if umf_libs:
   local_env.Append(CPPDEFINES=['UMFPACK',])
   local_env.Append(LIBS = umf_libs)
if papi_libs:
   local_env.Append(CPPDEFINES=['PAPI',])
   local_env.Append(LIBS = papi_libs)

lib_name = 'finleycpp'

local_env.Append(LIBS = [boost_lib, python_lib, sys_libs, 'esysUtils', 'escriptcpp', 'paso'])

lib = local_env.SharedLibrary(lib_name, sources)

include_path = Dir(lib_name, incinstall)
cppadapter_include_path = Dir('CppAdapter', include_path)

local_env.Install(include_path, headers )
local_env.Install(cppadapter_include_path, cppadapter_headers )
local_env.Install(libinstall, lib)

# export the lib target since tests will depend on it
# the lib target is a list of file nodes (why? win32 produces more than one output file: .lib, .dll, .pdb)
# FIXME: This list handling produces the desired result but can this be done directly with scons File nodes?
dep_lib = [libinstall+'/'+str(x) for x in lib]
Export('dep_lib')

# Call the python sconscript
env.SConscript(dirs = ['#/finley/py_src'], build_dir='py', duplicate=0)

# Call the unit tests SConscript
local_env.SConscript(dirs = ['#/finley/test'], build_dir='#/build/$PLATFORM/finley/test', duplicate=0)

