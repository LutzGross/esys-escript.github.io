# $Id$

# Locate all source code files and define related Makefile variables

# C Source
# Find all .c files in source directory, and define matching .o and .lo files
CC_SRC := ${patsubst ${L_SRC_DIR}/%, %, ${shell find ${L_SRC_DIR} -name \*.c | grep -v '-'}}
CC_OBJ := ${patsubst %.c, %.o, ${CC_SRC}}
CC_SHOBJ := ${patsubst %.c, %.lo, ${CC_SRC}}

# C++ Source
# Find all .cpp files in source directory, and define matching .o and .lo files
CPP_SRC := ${patsubst ${L_SRC_DIR}/%, %, ${shell find ${L_SRC_DIR} -name \*.cpp | grep -v '-'}}
CPP_OBJ := ${patsubst %.cpp, %.o, ${CPP_SRC}}
CPP_SHOBJ := ${patsubst %.cpp, %.lo, ${CPP_SRC}}

# Swig Source
# Find all .i files in source directory, and define matching .cpp, .py, .o and .lo files
SWIG_SRC := ${patsubst ${L_SRC_DIR}/%, %, ${shell find ${L_SRC_DIR} -name \*.i | grep -v '-'}}
SWIG_CPP_SRC := ${patsubst %.i, %.cpp, ${SWIG_SRC}}
SWIG_PY_SRC := ${patsubst %.i, %.py, ${SWIG_SRC}}
SWIG_OBJ := ${patsubst %.i, %.o, ${SWIG_SRC}}
SWIG_SHOBJ := ${patsubst %.i, %.lo, ${SWIG_SRC}}

# Python Source
# Find all .py files in source directory, and define matching .pyc files
PYTHON_SRC_SRC := ${shell find ${L_SRC_DIR} -name \*.py | grep -v '-'}
PYTHON_SRC := ${patsubst ${L_SRC_DIR}/%, %, ${PYTHON_SRC_SRC}}
PYTHON_BYTE := ${patsubst %.py, %.pyc, ${PYTHON_SRC_SRC}}

# Search Paths
# define locations to search for each file type
vpath %.c   ${L_SRC_DIR}
vpath %.cpp ${L_SRC_DIR}
vpath %.i   ${L_SRC_DIR}
vpath %.py  ${L_SRC_DIR}
vpath %.o   ${L_OBJ_DIR}
vpath %.lo  ${L_OBJ_DIR}
vpath %.a   ${L_LIB_DIR}
vpath %.so  ${L_LIB_DIR}
vpath %.pyc ${L_LIB_DIR}

# $Log$
# Revision 1.3  2005/08/12 01:45:45  jgs
# erge of development branch dev-02 back to main trunk on 2005-08-12
#
# Revision 1.2.2.1  2005/08/01 10:23:56  gross
# Bug in installation of python only components such as modellib fixed:
#
# C/C++ in ./src is directly compiled into ./lib but python code in ./py_src into ./lib/py_src.
# therefore for C/C++ code the leading directory ./src in names is removed for the output. The same is
# tried for python code however the substitution is not done correctly when leads to the effect that components that
# are compiled from one directory only the leading subdirectory is removed but for components build from more than one
# directory only the first subdirectory (typically ./src) is removed but subsequent directories are not removed.
# Therefore escript is run but not modellib (at least the compiled code apeared in ./lib rather than ./lib/py_src).
# The fix works around this problem for python compilations.
#
# Revision 1.2  2005/06/09 05:38:03  jgs
# Merge of development branch back to main trunk on 2005-06-09
#
# Revision 1.1.1.1.2.1  2005/05/17 01:31:15  jgs
# set L_INSTLIB_DIR and L_PYTH_DIR defaults relative to ESYS_ROOT
#
# Revision 1.1.1.1  2004/10/26 06:53:58  jgs
# initial import of project esys2
#
# Revision 1.2  2004/09/23 01:48:46  jgs
# make: augmented Makefiles with comments throughout
#
#         Makefile.default - changed order of includes for clarity
#         Makfile.phony    - reordered phony targets
#                          - added target "all" - now first target to be encountered
#
# Revision 1.1.1.1  2004/06/24 04:00:39  johng
# Initial version of eys using boost-python.
#
# Revision 1.1.1.1  2003/08/21 00:58:20  davies
# Imported sources from Lutz Gross.
#
