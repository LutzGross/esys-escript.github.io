Import('*')

lib_name = 'brucecpp'

bruce_env=env.Copy()

src_dir = bruce_env.Dir('.').srcnode().abspath

import os
filenames = os.listdir(src_dir)
sources = [x for x in filenames if os.path.splitext(x)[1] in ['.cpp', '.c']]
headers = [x for x in filenames if os.path.splitext(x)[1] in ['.h']]

include = Dir('Bruce', esys_inc)
bruce_env.Install( include, headers )
bruce_env.Append(LIBS=[boost_lib_name, 'esysUtils', 'escriptcpp'])

if env['PLATFORM'] == "win32":
   bruce_env.Append(CPPDEFINES=['_WINDOWS', '_USRDLL', 'BRUCE_EXPORTS'])
   bruce_env['PDB'] = 'brucecpp.pdb'
else:
    import os
    
    cxx_flags = '-O0 -openmp -openmp_report0 -tpp2 -ansi -ansi_alias -no-gcc -w1'
    
    cpp_path = ['#../bruce/inc', '#../escript/inc',
                '#../esysUtils/inc',
                '/raid2/tools/python-2.3.4/include/python2.3',
                '/raid2/tools/boost/include/boost-1_31']
    
    bruce_env = Environment(ENV = os.environ)
    
    bruce_env.Replace(CXX = 'icc')
    bruce_env.Replace(SHOBJSUFFIX = '.lo')
    bruce_env.Replace(CXXFLAGS = cxx_flags)
    bruce_env.Replace(CPPPATH = cpp_path)

bruce_lib = bruce_env.SharedLibrary(lib_name, sources)
bruce_env.Install(esys_lib, bruce_lib)
