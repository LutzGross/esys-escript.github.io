#include <iostream>
#include <sstream>
namespace {
  char tmp = 'a';
};
class ErrStream
{
public:
  template <typename Tmpl>
  ErrStream operator<<(Tmpl t)
  {
    std::stringstream str;
    str << t;
    m_msg += str.str();

    return *this;
  }

  const std::string &getMsg() const
  {
    return m_msg;
  }

  std::string m_msg;
};

std::ostream &operator<<(std::ostream &oStream, const ErrStream &errStream)
{
  oStream << errStream.getMsg();
  return oStream;
}

int main(int argc, char *argv[])
{
  int tmp = 0;
  {
    char tmp = 'A';
    std::stringstream tmpStr;
    tmpStr << tmp;
    std::cout << tmp << " " << (ErrStream() << "give out garbage" << tmp << "hi jimmy here is a float: " << 2.333).getMsg() << std::endl;
    std::cout << tmpStr.str() << std::endl;
  }

  std::cout << tmp << std::endl;
}

