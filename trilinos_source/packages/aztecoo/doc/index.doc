/*! \mainpage Trilinos/AztecOO: Object-Oriented Aztec Linear Solver Package.
\htmlonly
\endhtmlonly

\section aztecoo_intro Introduction
AztecOO provides an object-oriented interface the the well-known Aztec
solver library.  Furthermore, it allows flexible construction of matrix and vector arguments via Epetra 
matrix and vector classes.  Finally, AztecOO provide additional functionality not found in Aztec and
any future enhancements to the Aztec package will be available only through the AztecOO interfaces.

\section aztecoo_startup Overview of AztecOO.

AztecOO contains a number of classes.  They are:

<ul> 

<li> AztecOO - Primary solver class.  An AztecOO object is instantiated using and Epetra_LinearProblem
     object.  The solver options and parameters can be set using SetAztecOption() and SetAztecParam()
     methods on an AztecOO object.

<li> Aztec2Petra() - Utility function to convert from Aztec data structures to Epetra objects.  This function
     can be useful when migrating from Aztec to AztecOO.  It is used internally by the AZOO_iterate
     function.

<li> AZOO_iterate() - Utility function that mimics the behavior and calling sequence of AZ_iterate, the
     primary solver call in Aztec.  AZOO_iterate converts Aztec matrix, vectors, options and params into
     Epetra and AztecOO objects.  It then calls AztecOO to solve the problem.  For current Aztec users,
     this function should provide identical functionality to AZ_iterate, except for the extra memory
     used by having Epetra versions of the matrix and vectors.
     \warning Please note that AZOO_iterate is meant to provide a smooth transition for current Aztec
     users to AztecOO.  We do not advocate this function as a permanent solution to switching from
     Aztec to AztecOO.

</ul>

\section aztecoo_matrixfree AztecOO and Matrix Free usage.

AztecOO supports a ``matrix-free'' mechanism via the pure virtual class Epetra_RowMatrix.  This class is
part of Epetra and is implemented by the Epetra_CrsMatrix and Epetra_VbrMatrix classes.  It is possible
to implement Epetra_RowMatrix using other matrix classes.  AztecOO can then use this alternate
implementation to provide the matrix multiply capabilities, and to obtain row value information from the
matrix for constructing preconditioners.
\htmlonly
For details of Epetra, see the <a href="../../../epetra/doc/html/index.html">Epetra home page</a>.
\endhtmlonly

\section aztecoo_thyra Thyra support

The <a href="../../thyra/doc/html/index.html">AztecOO to Thyra Linear Solver
Adapters</a> take <tt>Thyra::LinearOpBase</tt> objects that wrap
<tt>Epetra_Operator</tt> objects and turn them into
<tt>Thyra::LinearOpWithSolveBase</tt> objects which can then be used to solve
linear systems using the <tt>AztecOO</tt> class.

\section AztecOO_browser Browse all of AztecOO as a single doxygen collection

You can browse all of AztecOO as a <A HREF="../../browser/doc/html/index.html">single
doxygen collection</A>. Warning, this is not the recommended way to learn
about AztecOO software.  However, this is a good way to browse the <a
href="../../browser/doc/html/dirs.html">directory structure of aztecoo</a>, to <a
href="../../browser/doc/html/files.html">locate files</a>, etc.

*/
