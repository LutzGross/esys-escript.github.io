/*! \mainpage Thyra Operator/Vector Support Software and Examples

<b>Warning!</b> Clicking on the above links (i.e. "Class List", "File List"
etc.)  can be a bit overwhelming and not recommended as a way to "browse" the
code that is part of this doxygen collection.  Instead, it is recommended that
one use the outline below to browse the classes and various functions
documented here.  The one exception is the above <a
href="./modules.html">"Modules"</a> link which is essentially an outline of
what is presented below.  The following presentation is designed to expose
developers to the %Thyra ANA Operator/Vector interfaces and related code in
manageable chunks as to not overwhelm.  However, the above links are very
useful as a developer's reference and should only be used as such.

\section Thyra_Op_Vec_outline_sec Outline

<ul>
<li> \ref Thyra_Op_Vec_intro_sec
<li> \ref Thyra_Op_Vec_fundamental_interfaces_sec
<li> \ref thyra_operator_vector_use_cases_sec
  <ol>
  <li> \ref Thyra_Op_Vec_ANA_Interoperability_grp
  <li> \ref Thyra_Op_Vec_ANA_Development_grp
  <li> \ref Thyra_Op_Vec_Adapters_grp
  </ol>
<li> \ref thyra_operator_vector_examples_sec
<li> \ref Thyra_Op_Vec_links_to_other_documentation_sec
</ul>

\section Thyra_Op_Vec_intro_sec Introduction

The C++ namespace <tt>Thyra</tt> contains abstract interfaces to linear
algebra objects such as vectors and linear operators and its most fundamental
interfaces are shown in the UML class diagram below.  <!-- A detailed
discussion of the motivation, requirements and basic design issues associated
with %Thyra are described in <a href="???">this report</a>.  The purpose of
this outline documentation is not to restate what is in <a href="???">this
report</A>.  --> This documentation page is meant to provide a road-map to the
Doxygen-generated C++ code documentation and provide convenient access to
helpful examples.

This main page provides the starting point for all of the documentation for
the %Thyra Operator/Vector Interfaces.

\section Thyra_Op_Vec_fundamental_interfaces_sec Fundamental Thyra Operator/Vector Interfaces

\image html ThyraOperatorVectorSimple.gif "Fundamental Thyra ANA operator/vector interfaces (Note: above graphic is not hyper-linked!)"

The most fundamental abstract interfaces contained in the %Thyra package
(and shown in the above UML class diagram) are:

<ul>
<li><tt>Thyra::VectorSpaceBase</tt> is the fundamental abstract interface for a vector space that defines
    the scalar product and factory functions for creating <tt>Thyra::VectorBase</tt> and <tt>Thyra::MultiVectorBase</tt> objects.
<li><tt>Thyra::VectorBase</tt> is the fundamental abstract interface for finite-dimensional vectors.
<li><tt>Thyra::LinearOpBase</tt> is the fundamental abstract interface for linear operators.
<li><tt>Thyra::MultiVectorBase</tt> is the fundamental abstract interface for collections of column vectors.
<li><tt>RTOpPack::RTOpT</tt> is the fundamental abstract interface to all diagonal vector reduction/transformation operations.
</ul>

From here on out, the abstract C++ classes <tt>Thyra::VectorSpaceBase</tt>,
<tt>Thyra::VectorBase</tt>, <tt>Thyra::MultiVectorBase</tt> and
<tt>Thyra::LinearOpBase</tt> will be referred to as the <b><em>fundamental
%Thyra operator/vector interfaces</em></b>.

The rest of the C++ classes and non-member functions described in this doxygen
collection are designed to support one of a number of different use cases
associated with the above fundamental %Thyra operator/vector interfaces.

\section thyra_operator_vector_use_cases_sec Use Cases for Fundamental Thyra Operator/Vector Interfaces

Here we outline three common use cases related to the \ref
Thyra_Op_Vec_fundamental_interfaces_sec .

There are primarily three different use cases related to the fundamental
%Thyra operator/vector interfaces shown above.  The first, and by far the most
important, is the use of the \ref Thyra_Op_Vec_ANA_Interoperability_grp.  This
first use case is really the main reason for the creation of %Thyra in the
first place and is the most basic and important dependence that another
package can have on %Thyra.  The second most important use case is the \ref
Thyra_Op_Vec_Adapters_grp of vector spaces, vectors, multi-vectors and linear
operators.  These types of subclass implementations are also known as
"adapter" subclasses if they "adapt" some pre-existing set of classes or
interfaces (which is often the case).  The third use case is the use of the
\ref Thyra_Op_Vec_ANA_Development_grp.  While the fundamental %Thyra
operator/vector interface classes were not directly designed for this use
case, with some minimal helper functions and classes, directly writing ANA
implementations in terms of %Thyra objects is quite straightforward.

Click on the links below for a discussion of each of these three use cases and
a description of additional supporting code.  These use cases provide the
primary documentation organization for the software in this doxygen
collection.

<ol>

<li> \ref Thyra_Op_Vec_ANA_Interoperability_grp

<li> \ref Thyra_Op_Vec_ANA_Development_grp

<li> \ref Thyra_Op_Vec_Adapters_grp

</ol>

\section thyra_operator_vector_examples_sec Assorted Thyra Operator/Vector Examples


Below are links to example code that demonstrate various use cases for
the code in the %Thyra package:

<ol>

<li>\ref Thyra_Op_Vec_examples_power_method_grp : These are examples that use a
simple power method ANA and show both templated serial and MPI
implementations.

<li>\ref Thyra_Op_Vec_examples_cg_grp : These are examples that use a simple CG ANA
and show both templated serial and MPI implementations.

<li>\ref Thyra_Op_Vec_product_vec_spc_prg_grp : This is a simple testing
program that demonstrates how product vectors and product spaces are
created and used.

</ol>

\section Thyra_Op_Vec_links_to_other_documentation_sec Links to Other Documentation Collections

Below are links to other related documentation:

<ul>

<li><b><a href="../../../../../doc/html/index.html">Main Thyra Package
Documentation</a></b>: This is the main documentation page for the %Thyra
package which provides an outline for all %Thyra software.

<li><b><a href="../../../../../../epetra/thyra/doc/html/index.html">ANA Operator/Vector
Adapters for Epetra</a></b>: This software allows the creation of
<tt>Thyra::VectorSpaceBase</tt>, <tt>Thyra::VectorBase</tt>,
<tt>Thyra::MultiVectorBase</tt>, and <tt>Thyra::LinearOpBase</tt> objects out
of Epetra objects.

</ul>

*/
