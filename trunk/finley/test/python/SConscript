
##############################################################################
#
# Copyright (c) 2003-2012 by University of Queensland
# http://www.uq.edu.au
#
# Primary Business: Queensland, Australia
# Licensed under the Open Software License version 3.0
# http://www.opensource.org/licenses/osl-3.0.php
#
# Development until 2012 by Earth Systems Science Computational Center (ESSCC)
# Development since 2012 by School of Earth Sciences
#
##############################################################################

from os.path import splitext
Import('*')

local_env = env.Clone()

# files defining test runs (passing in a release)
testruns = []
testruns += ['run_escriptOnFinley.py']
testruns += ['run_generators.py']
testruns += ['run_inputOutput.py']
#testruns += ['run_linearPDEsOnFinley1.py']
testruns += ['run_linearPDEsOnFinley1_2D1.py']
testruns += ['run_linearPDEsOnFinley1_2D2.py']
testruns += ['run_linearPDEsOnFinley1_3D1.py']
#testruns += ['run_linearPDEsOnFinley1_3D2.py']
testruns += ['run_linearPDEsOnFinley1_3D2_part1.py']
testruns += ['run_linearPDEsOnFinley1_3D2_part2.py']
#testruns += ['run_linearPDEsOnFinley1_3D2_part3.py']
testruns += ['run_linearPDEsOnFinley1_3D2_part3-1.py']
testruns += ['run_linearPDEsOnFinley1_3D2_part3-2.py']
testruns += ['run_linearPDEsOnFinley1_3D2_part3-3.py']
testruns += ['run_linearPDEsOnFinley1_3D2_part3-4.py']
testruns += ['run_linearPDEsOnFinley1_3D2_part4.py']
testruns += ['run_linearPDEsOnFinley2.py']
testruns += ['run_linearPDEsOnFinley3.py']
testruns += ['run_linearPDEsOnFinleyMacro.py']
testruns += ['run_models.py']
testruns += ['run_darcy.py']
testruns += ['run_simplesolve.py']
testruns += ['run_utilOnFinley.py']
testruns += ['run_utilOnFinley2.py']
testruns += ['run_utilOnFinley3.py']
# testruns += ['run_visualization_interface.py']
testruns += ['run_amg.py'] 

#  files defining a few tests for a quick test
scalable_tests = []
scalable_tests += ['run_inputOutput.py']
scalable_tests += ['run_simplesolve.py']

# files defining tests run locally (not as part of a release)
localtestruns = [x for x in Glob('*.py', strings=True) if not x.startswith('run_')]

# all tests
alltestruns = testruns + localtestruns

# test files are just compiled - none of those in finley yet
#sources = Glob('test_*.py')
#test_pyc = env.PyCompile(sources)
#env.Alias('build_py_tests', test_pyc)

# add unit test to target alias
local_env.PrependENVPath('PYTHONPATH', Dir('.').abspath)
local_env.PrependENVPath('PYTHONPATH', env.Dir('$BUILD_DIR/$PLATFORM/escript/test/python').abspath)
local_env['ENV']['FINLEY_TEST_DATA']=Dir('.').srcnode().abspath
local_env['ENV']['FINLEY_WORKDIR']=Dir('.').abspath
# needed for a test from the util base class in escript
local_env['ENV']['ESCRIPT_WORKDIR']=Dir('.').abspath
env.Alias('local_py_tests',[splitext(x)[0]+'.passed' for x in alltestruns])
env.Alias('py_tests', [splitext(x)[0]+'.passed' for x in testruns ])
env.Alias('scalable_tests', [splitext(x)[0]+'.passed' for x in scalable_tests])

# run all tests
program = local_env.RunPyUnitTest(alltestruns)
Depends(program, [py_wrapper_lib, 'install_finley_py'])
Depends(program, 'build_py_tests')

# add a group of tests
from grouptest import *
tgroup=GroupTest("$PYTHONRUNNER ",(("FINLEY_TEST_DATA","$BATCH_ROOT/finley/test/python"),('FINLEY_WORKDIR','$BUILD_DIR/finley/test/python')),"$BATCH_ROOT/escript/test/python:$BATCH_ROOT/finley/test/python","$BATCH_ROOT/finley/test/python",testruns)
tgroup.makeDir("$BUILD_DIR/finley/test/python")
TestGroups.append(tgroup)

