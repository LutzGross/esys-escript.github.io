# main html files
# $Id: main.aap,v 1.12 2005/02/08 06:03:36 paultcochrane Exp $

Files = 
    index.html
    docs.html
    devel.html
    examples.html
    news.html
    contacts.html
    links.html
    renderers.html
    support.html
    todo.html

# helper part files for building the html
partsDir = htmlbuild/

# where the css files are kept
cssDir = css/

# the directory of the html version of the latex manual
htmlDir = docs/manual/pyvisi_doc/

# the manual directory
manDir = docs/manual/

# publish stuff
publishFiles = 
    $Files
    $(cssDir)pyvisi_banner-o.css
    $(cssDir)pyvisi_banner.css 
    $(cssDir)pyvisi.css
    images/*.gif
    images/*.jpg
    docs/api_epydoc/*.css
    docs/api_epydoc/*.html
    docs/api_epydoc/public/*.css
    docs/api_epydoc/public/*.html
    docs/api_epydoc/private/*.css
    docs/api_epydoc/private/*.html
    $(manDir)pyvisi_doc.pdf
    $(manDir)pyvisi_doc.ps.gz
    $(manDir)pyvisi_doc.tar.gz
    $(htmlDir)*.css
    $(htmlDir)*.html
    $(htmlDir)*.png
    examples/*.png
    examples/*.html
:attr {publish = scp://paultcochrane@shell.sourceforge.net//home/groups/p/py/pyvisi/htdocs/%file%} $publishFiles

# generating the source
:print Executing the main aap file

all: $Files extras

extras:
    :execute todo/main.aap
    :execute examples/main.aap

# publish, or just generate the html files
@if TARGETARG == 'publish':
    :print Publishing files to web site
    publish: $publishFiles
	:publishall
@else:
    updatedStart = $(<)td class="updated"$(>)$BR $(<)i$(>)Last updated: 
    updatedEnd = $(<)/i$(>)$(<)br /$(>)$BR
    comments = comments to: $(<)a href="mailto:paultcochrane@users.sourceforge.net"$(>)webmaster$(<)/a$(>)$BR $(<)/td$(>)$BR

    :rule %.html : $(partsDir)doctype.part %/%_header.part \
            $(partsDir)banner.part $(partsDir)spacer_start.part \
            %/%_body.part $(partsDir)spacer_end.part \
            $(partsDir)general_footer.part
        @import time
        :eval time.strftime("%A %d %B %Y", time.localtime(time.time()))
	    | :print $updatedStart $stdin$updatedEnd $comments
	    | :cat $(partsDir)doctype.part $(match)/$(match)_header.part \
                    $(partsDir)banner.part $(partsDir)spacer_start.part \
                    $(match)/$(match)_body.part $(partsDir)spacer_end.part - \
		    $(partsDir)general_footer.part >! $target


