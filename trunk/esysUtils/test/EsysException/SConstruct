# Scons configuration file for esysUtils unit tests

import os
import sys

# ensure correct versions of python and scons

EnsurePythonVersion(2,3)
EnsureSConsVersion(0,96)

#
# set appropriate defaults for configuration variables

esysroot = Dir('#../../..')
usegcc = 0

#
# retreive command-line arguments if any

if ARGUMENTS.get('usegcc',0):
  usegcc = 1

#
# determine platform

env = Environment(ENV = os.environ)
platform = env['PLATFORM']

#
# determine hostname

hostname = os.environ['HOSTNAME']

#
# load configuration settings

options_dir = str(esysroot) + '/scons'
sys.path.append(options_dir)

if hostname=='ess':
  from ess_options import *

cxx_flags=cxx_flags_debug

#
# print out build configuration for this module

print "####################################################"
print "Build configuration for module: Bruce unit tests"
print "Build configuration for module: Bruce unit tests"
print "         dodebug:  1"
print "          usegcc: ", usegcc
print "             cxx: ", cxx
print "        platform: ", platform
print "        hostname: ", hostname
print "####################################################"

#
# do the actual build

esysexception_test_path = str(esysroot) + '/esysUtils/test/EsysException'
esysUtils_path = str(esysroot) + '/esysUtils/inc'
CppUnitTest_path = str(esysroot) + '/tools/CppUnitTest/inc'

esysUtils_lib_path = str(esysroot) + '/esysUtils/lib'
CppUnitTest_lib_path = str(esysroot) + '/tools/CppUnitTest/lib'

cpp_path = [esysexception_test_path,
            esysUtils_path,
            CppUnitTest_path]

lib_path = [esysUtils_lib_path,
            CppUnitTest_lib_path]

libs = ['esysUtils',
        'CppUnitTest',
        'guide',
        'irc']

sources = ['EsysExceptionTestCase.cpp',
           'EsysExceptionTest.cpp']

target = 'EsysExceptionTest.exe'

esysexception_env = Environment(ENV = os.environ)

esysexception_env.Replace(CXX = cxx)
esysexception_env.Replace(CXXFLAGS = cxx_flags)
esysexception_env.Replace(CPPPATH = cpp_path)
esysexception_env.Replace(LIBPATH = lib_path)
esysexception_env.Replace(LIBS = libs)

esysexception_test_exe = esysexception_env.Program(target, sources)
