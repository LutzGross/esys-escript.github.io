Import('*')

local_env=env.Copy()

src_dir = local_env.Dir('.').srcnode().abspath

import os
filenames = os.listdir(src_dir)
sources = [x for x in filenames if os.path.splitext(x)[1] in ['.cpp', '.c']]
headers = [x for x in filenames if os.path.splitext(x)[1] in ['.h']]
# Filter unused sources
sources.remove('SystemMatrixPattern_reduceBandwidth.c') # FIXME: Should this file be removed?

# Paso has additional source in the Solvers sub-directory. Append these to the list
solver_filenames = os.listdir(src_dir+'/Solvers');
sources += ['Solvers/'+x for x in solver_filenames if os.path.splitext(x)[1] in ['.cpp', '.c']]
solver_headers = ['Solvers/'+x for x in solver_filenames if os.path.splitext(x)[1] in ['.h']]

if mkl_libs:
   local_env.Append(CPPDEFINES=['MKL',])
   local_env.Append(LIBS = mkl_libs)
if scsl_libs:
   local_env.Append(CPPDEFINES=['SCSL',])
   local_env.Append(LIBS = scsl_libs)
if umf_libs:
   local_env.Append(CPPDEFINES=['UMFPACK',])
   local_env.Append(LIBS = umf_libs)
if papi_libs:
   local_env.Append(CPPDEFINES=['PAPI',])
   local_env.Append(LIBS = papi_libs)

lib_name = 'paso'

lib = local_env.StaticLibrary(lib_name, sources)

include_path = Dir(lib_name, incinstall)
solvers_include_path = Dir('Solvers', include_path)

local_env.Install(include_path, headers )
local_env.Install(solvers_include_path, solver_headers )
local_env.Install(libinstall, lib)
 
