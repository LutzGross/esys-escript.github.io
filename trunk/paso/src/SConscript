libinstall = None

Import('*')

import os
import string

paso_path = str(esysroot) + '/paso/src'
scsl_path = str(esysroot) + '/paso/src/SCSL'
solvers_path = str(esysroot) + '/paso/src/Solvers'
mmio_path = str(esysroot) + '/tools/mmio/inc'

cpp_path = [paso_path,
            scsl_path,
            solvers_path,
            mmio_path,
            python_path,
            boost_path]

lib = 'paso'
sources = ['Options_getPackage.c',
           'Options_getSolver.c',
           'Options_setDefaults.c',
           'Paso.c',
           'solve.c',
           'SystemMatrix_borrowNormalization.c',
           'SystemMatrix.c',
           'SystemMatrix_copy.c',
           'SystemMatrix_getSubmatrix.c',
           'SystemMatrix_getSystemMatrixTypeId.c',
           'SystemMatrix_loadMM.c',
           'SystemMatrix_MatrixVector.c',
           'SystemMatrix_nullifyRowsAndCols.c',
           'SystemMatrixPattern.c',
           'SystemMatrixPattern_getSubpattern.c',
           'SystemMatrixPattern_mis.c',
           'SystemMatrixPattern_unrollBlocks.c',
           'SystemMatrix_saveHB.c',
           'SystemMatrix_saveMM.c',
           'SystemMatrix_setValues.c',
           'Util.c',
           'SCSL/SCSL.c',
           'SCSL/SCSL_direct.c',
           'SCSL/SCSL_iterative.c',
           'Solvers/BiCGStab.c',
           'Solvers/GMRES.c',
           'Solvers/PCG.c',
           'Solvers/Solver_applyBlockDiagonalMatrix.c',
           'Solvers/Solver.c',
           'Solvers/Solver_ILU.c',
           'Solvers/Solver_jacobi.c',
           'Solvers/Solver_preconditioner.c',
           'Solvers/Solver_SchurComplement.c']

paso_env = Environment(ENV = os.environ)

paso_env.Replace(CC = 'icc')
paso_env.Replace(CCFLAGS = cc_flags)
paso_env.Replace(CPPPATH = cpp_path)

paso_lib = paso_env.StaticLibrary(lib, sources)
paso_env.Install(libdir, paso_lib)

if libinstall != None:
  paso_env.Install(libinstall, paso_lib)
