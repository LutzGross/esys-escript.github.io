#
# $Id$
#
#######################################################
#
#           Copyright 2003-2007 by ACceSS MNRF
#       Copyright 2007 by University of Queensland
#
#                http://esscc.uq.edu.au
#        Primary Business: Queensland, Australia
#  Licensed under the Open Software License version 3.0
#     http://www.opensource.org/licenses/osl-3.0.php
#
#######################################################
#

import os
Import('*')

local_env = clone_env(env_mpi)

sources = """
	BiCGStab.c
	Coupler.c
	Distribution.c
	Functions.c
	GMRES.c
	GMRES2.c
	MKL.c
	NewtonGMRES.c
	Options_getPackage.c
	Options_getSolver.c
	Options_setDefaults.c
	PCG.c
	Paso.c
	PasoUtil.c
	Paso_MPI.c
	Pattern.c
	Pattern_getSubpattern.c
	Pattern_mis.c
	Pattern_reduceBandwidth.c
	Pattern_unrollBlocks.c
	SCSL.c
	SCSL_direct.c
	SCSL_iterative.c
	SharedComponents.c
	Solver.c
	SolverFCT.c
	SolverFCT_FluxControl.c
	SolverFCT_reset.c
	SolverFCT_solve.c
	Solver_Function.c
	Solver_ILU.c
	Solver_RILU.c
	Solver_SchurComplement.c
	Solver_applyBlockDiagonalMatrix.c
	Solver_jacobi.c
	Solver_preconditioner.c
	SparseMatrix.c
	SparseMatrix_MatrixVector.c
	SparseMatrix_addAbsRow.c
	SparseMatrix_addRow.c
	SparseMatrix_getSubmatrix.c
	SparseMatrix_nullifyRowsAndCols.c
	SparseMatrix_saveHB.c
	SparseMatrix_setValues.c
	SystemMatrix.c
	SystemMatrixPattern.c
	SystemMatrixPattern_unrollBlocks.c
	SystemMatrix_MatrixVector.c
	SystemMatrix_borrowNormalization.c
	SystemMatrix_getSystemMatrixTypeId.c
	SystemMatrix_loadMM.c
	SystemMatrix_nullifyRows.c
	SystemMatrix_nullifyRowsAndCols.c
	SystemMatrix_rowSum.c
	SystemMatrix_saveHB.c
	SystemMatrix_saveMM.c
	SystemMatrix_setValues.c
	TFQMR.c
	MINRES.c
	UMFPACK.c
	mmio.c
	performance.c
	solve.c
""".split()
headers = """
	Common.h
	Coupler.h
	Distribution.h
	Functions.h
	MKL.h
	Options.h
	Paso.h
	PasoUtil.h
	Paso_MPI.h
	Pattern.h
	SCSL.h
	SharedComponents.h
	Solver.h
	SolverFCT.h
	SparseMatrix.h
	SystemMatrix.h
	SystemMatrixPattern.h
	UMFPACK.h
	mmio.h
	mpi_C.h
	performance.h
""".split()

lib = local_env.StaticLibrary('paso', sources)
env.Alias('target_paso_a', lib)

include_path = Dir('paso', local_env['incinstall'])
solvers_include_path = Dir('Solvers', include_path)

tmp1 = local_env.Install(include_path, headers )
env.Alias('target_install_paso_headers', [tmp1])

tmp2 = local_env.Install(local_env['libinstall'], lib)
env.Alias('target_install_paso_a', [tmp2])
 
