
##############################################################################
#
# Copyright (c) 2003-2013 by University of Queensland
# http://www.uq.edu.au
#
# Primary Business: Queensland, Australia
# Licensed under the Open Software License version 3.0
# http://www.opensource.org/licenses/osl-3.0.php
#
# Development until 2012 by Earth Systems Science Computational Center (ESSCC)
# Development since 2012 by School of Earth Sciences
#
##############################################################################

Import('*')
local_env = env.Clone()

lib_name = 'paso'

sources = """
	AMG.c
	AMG_Root.c
	BiCGStab.c
	BlockOps.c
	Coupler.c
	Distribution.c
        FluxLimiter.c
	Functions.c
	GMRES.c
	GMRES2.c
	IndexList.c
        MergedSolver.c
	MKL.c
	NewtonGMRES.c
	Options_getPackage.c
	Options_getSolver.c
	Options_setDefaults.c
	PCG.c
	PasoUtil.c
	Pattern.c
	Pattern_getSubpattern.c
	Pattern_mis.c
        Pattern_multiply.c
	Pattern_reduceBandwidth.c
	Pattern_unrollBlocks.c
	SharedComponents.c
	Solver.c
	Transport.c
	Transport_solve.c
        FCT_Solver.c
	ReactiveSolver.c
	Solver_Function.c
	Smoother.c
	ILU.c
	RILU.c
	LocalAMG.c
	LocalAMG_Prolongation.c
	AMG_Prolongation.c
	AMG_Restriction.c
	AMG_Interpolation.c
	SchurComplement.c
	Preconditioner.c
	SparseMatrix.c
	SparseMatrix_MatrixVector.c
	SparseMatrix_addAbsRow.c
	SparseMatrix_addRow.c
	SparseMatrix_applyDiagonal.c
	SparseMatrix_getSubmatrix.c
	SparseMatrix_getTranspose.c
	SparseMatrix_nullifyRowsAndCols.c
	SparseMatrix_saveHB.c
	SparseMatrix_setValues.c
        SparseMatrix_invMain.c
        SparseMatrix_unroll.c
	SystemMatrix.c
	SystemMatrixPattern.c
	SystemMatrixPattern_unrollBlocks.c
	SystemMatrix_copyColCoupleBlock.c
	SystemMatrix_MatrixVector.c
        SparseMatrix_MatrixMatrix.c
        SparseMatrix_MatrixMatrixTranspose.c
	SystemMatrix_balancing.c
	SystemMatrix_getSystemMatrixTypeId.c
	SystemMatrix_loadMM.c
        SystemMatrix_MIS.c
	SystemMatrix_nullifyRows.c
	SystemMatrix_nullifyRowsAndCols.c
	SystemMatrix_rowSum.c
	SystemMatrix_saveHB.c
	SystemMatrix_saveMM.c
	SystemMatrix_setValues.c
	SystemMatrix_debug.c
	SystemMatrix_mergeMainAndCouple.c
	SystemMatrix_extendedRows.c
	SystemMatrix_copyRemoteCoupleBlock.c
	TFQMR.c
	MINRES.c
	UMFPACK.c
	BOOMERAMG.c
	mmio.c
	performance.c
	solve.c
""".split()

headers = """
	Common.h
	Coupler.h
	Distribution.h
        FluxLimiter.h
	Functions.h
	IndexList.h
        MergedSolver.h
	MKL.h
	Options.h
	Paso.h
	PasoUtil.h
	Pattern.h
	Preconditioner.h
	SharedComponents.h
	Solver.h
	Transport.h
        FCT_Solver.h
	ReactiveSolver.h
	SparseMatrix.h
	SystemMatrix.h
        SystemMatrix_MIS.h
	SystemMatrixPattern.h
	UMFPACK.h
	BOOMERAMG.h
	mmio.h
	BlockOps.h
	performance.h
""".split()

# And just for blocktimer cancer.....
local_env.Prepend(LIBS = ['esysUtils'])
if IS_WINDOWS:
    local_env.Append(CPPDEFINES = ['PASO_EXPORTS'])

if local_env['build_shared']:
    lib = local_env.SharedLibrary(lib_name, sources)
else:
    lib = local_env.StaticLibrary(lib_name, sources)

env.Alias('build_paso_lib', lib)

include_path = Dir('paso', local_env['incinstall'])
solvers_include_path = Dir('Solvers', include_path)

hdr_inst = local_env.Install(include_path, headers)
env.Alias('install_paso_headers', hdr_inst)

lib_inst = local_env.Install(local_env['libinstall'], lib)
env.Alias('install_paso_lib', lib_inst)

