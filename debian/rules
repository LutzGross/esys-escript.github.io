#!/usr/bin/make -f

DEST=$(CURDIR)/debian/escript
WORK=$(CURDIR)/debian/tmp

clean:
	rm -rf build condif.log esys include lib release .sconf_tmp .sconsign.dblite config.log .sconf_temp
	rm -rf debian/tmp
	rm -rf debian/escript

build:
	mkdir -p debian/tmp
	if [ ! -f svn_version ];then echo "No svn_version file found"; exit 3;fi
	scons SVN_VERSION=`cat svn_version` build_dir=$(WORK) verbose=on prefix=$(WORK) options_file=`packaging/debuntu/getsubst` release_prep
	sed -e "s%STDLOCATION=0%STDLOCATION=1%" < bin/run-escript > $(WORK)/bin/run-escript

install: build
	mkdir -p $(DEST)/usr/share/doc/escript/
	mkdir -p $(DEST)/usr/share/man/man1
	mkdir -p $(DEST)/usr/lib/escript
	mkdir -p $(DEST)/usr/bin
	cp doc/manpage/man1/run-escript.1 $(DEST)/usr/share/man/man1
	cp $(WORK)/release/doc/escript_examples.tar.gz $(DEST)/usr/share/doc/escript/
	cp $(WORK)/release/doc/install/install.pdf $(DEST)/usr/share/doc/escript
	cp $(WORK)/release/doc/user/user.pdf $(DEST)/usr/share/doc/escript
	cp $(WORK)/release/doc/cookbook/cookbook.pdf $(DEST)/usr/share/doc/escript
	cp $(WORK)/release/doc/inversion/inversion.pdf $(DEST)/usr/share/doc/escript
	cp -r $(WORK)/release/doc/sphinx_api $(DEST)/usr/share/doc/escript/python_html
	cp -r $(WORK)/release/doc/doxygen $(DEST)/usr/share/doc/escript/doxygen
	cp $(WORK)/lib/* $(DEST)/usr/lib/escript
	cp -r $(WORK)/esys $(DEST)/usr/lib/escript
	cp $(WORK)/bin/* $(DEST)/usr/bin
	touch $(WORK)/installed


binary:	binary-arch binary-indep

binary-arch: install
	install --mode=644 debian/changelog $(DEST)/usr/share/doc/escript/changelog.Debian
	gzip -f9 $(DEST)/usr/share/doc/escript/changelog.Debian
	install --mode=644 debian/copyright $(DEST)/usr/share/doc/escript
	gzip -f9 $(DEST)/usr/share/doc/escript/copyright
	mkdir -p debian/escript/DEBIAN
	#Thanks to Krafft's book for this
	cd debian/escript && find * -path DEBIAN -prune -o -type f -print | xargs md5sum > DEBIAN/md5sums
	dpkg-gencontrol -Pdebian/escript
	dpkg-deb --build debian/escript ..

#This rule intentionally blank 
binary-indep: 

