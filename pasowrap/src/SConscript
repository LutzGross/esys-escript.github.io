##############################################################################
#
# Copyright (c) 2003-2012 by University of Queensland
# http://www.uq.edu.au
#
# Primary Business: Queensland, Australia
# Licensed under the Open Software License version 3.0
# http://www.opensource.org/licenses/osl-3.0.php
#
# Development until 2012 by Earth Systems Science Computational Center (ESSCC)
# Development since 2012 by School of Earth Sciences
#
##############################################################################

import os
Import('*')

local_env = env.Clone()
local_dodgy = dodgy_env.Clone()
py_wrapper_local_env = env.Clone()

# Remove the sharedlibrary prefix on all platform - we don't want 'lib'
# mucking with our python modules
del py_wrapper_local_env['SHLIBPREFIX']

sources = """
  PasoException.cpp
  SystemMatrixAdapter.cpp
  TransportProblemAdapter.cpp
""".split()

headers = """
  PasoException.h
  SystemMatrixAdapter.h      
  TransportProblemAdapter.h
  system_dep.h
""".split()

local_env.Prepend(LIBS = ['escript', 'paso', 'esysUtils'])
if IS_WINDOWS:
    local_env.Append(CPPDEFINES = ['PASOWRAP_EXPORTS'])

module_name = 'pasowrap'

# specify to build shared object

lib = local_env.SharedLibrary(module_name, sources)
env.Alias('build_pasowrap_lib', lib)

include_path = Dir('pasowrap', local_env['incinstall'])
hdr_inst = local_env.Install(include_path, headers)
env.Alias('install_pasowrap_headers', hdr_inst)

lib_inst = local_env.Install(local_env['libinstall'], lib)
env.Alias('install_pasowrap_lib', lib_inst)

### Python wrapper ###
if not env['build_shared']:
    py_wrapper_local_env.Prepend(LIBS = ['pasowrap', 'escript', 'esysUtils'])
else:
    py_wrapper_local_env.Prepend(LIBS = ['pasowrap', 'escript', 'paso', 'esysUtils'])
py_wrapper_name = module_name + 'cpp'
py_wrapper_lib = py_wrapper_local_env.SharedLibrary(py_wrapper_name, 'pasowrapcpp.cpp')
env.Alias('build_pasowrapcpp_lib', py_wrapper_lib)

tmp_inst = os.path.join(local_env['pyinstall'], module_name)
if IS_WINDOWS:
    wrapper_ext = '.pyd'
else:
    wrapper_ext = '.so'

share_name = os.path.join(tmp_inst, py_wrapper_name+wrapper_ext)
mod_inst = py_wrapper_local_env.InstallAs(target=share_name,
                                          source=py_wrapper_lib[0])
env.Alias('install_pasowrapcpp_lib', mod_inst)

# configure python module
local_env.SConscript(dirs = ['#/pasowrap/py_src'], variant_dir='py', duplicate=0)

# configure unit tests
#local_env.SConscript(dirs = ['#/pasowrap/test'], variant_dir='test', duplicate=0, exports=['py_wrapper_lib'])

