########################################################
#
# Copyright (c) 2003-2009 by University of Queensland
# Earth Systems Science Computational Center (ESSCC)
# http://www.uq.edu.au/esscc
#
# Primary Business: Queensland, Australia
# Licensed under the Open Software License version 3.0
# http://www.opensource.org/licenses/osl-3.0.php
#
########################################################


import os
Import('*')

local_env = clone_env(env_mpi)

sources = """
    DataVar.cpp
    ElementData.cpp
    EscriptDataset.cpp
    FinleyMesh.cpp
    NodeData.cpp
""".split()
headers = """
    DataVar.h
    ElementData.h
    EscriptDataset.h
    escriptexport.h
    FinleyMesh.h
    NodeData.h
""".split()

local_env.AppendUnique(LIBS = [ 'finley' ] + env['sys_libs'] + env['silo_libs'])

if IS_WINDOWS_PLATFORM :
  local_env.Append(CPPDEFINES = ['ESCRIPTEXPORT_EXPORTS'])

module_name = 'escriptexport'

lib = local_env.SharedLibrary(module_name, sources)
env.Alias('target_escriptexport_so', lib)

include_path = Dir('escriptexport', local_env['incinstall'])

tmp1 = local_env.Install(include_path, headers)
env.Alias('target_install_escriptexport_headers', [tmp1])

tmp3 = local_env.Install(local_env['libinstall'], lib)
env.Alias('target_install_escriptexport_so', tmp3)

# export the lib target since tests will depend on it
# the lib target is a list of file nodes (why? win32 produces more than one
# output file: .lib, .dll, .pdb)
# FIXME: This list handling produces the desired result but can this be done
# directly with scons File nodes?
dep_lib = [local_env['libinstall']+'/'+str(x) for x in lib]
Export('dep_lib')

# Call the unit tests SConscript
#local_env.SConscript(dirs = ['#/dataexporter/test'], build_dir='#/build/$PLATFORM/dataexporter/test', duplicate=0)

