##############################################################################
#
# Copyright (c) 2003-2016 by The University of Queensland
# http://www.uq.edu.au
#
# Primary Business: Queensland, Australia
# Licensed under the Apache License, version 2.0
# http://www.apache.org/licenses/LICENSE-2.0
#
# Development until 2012 by Earth Systems Science Computational Center (ESSCC)
# Development 2012-2013 by School of Earth Sciences
# Development from 2014 by Centre for Geoscience Computing (GeoComp)
#
##############################################################################

Import('*')

module_name = 'weipa'

sources = """
    DataVar.cpp
    EscriptDataset.cpp
    VisItControl.cpp
""".split()

headers = """
    DataVar.h
    DomainChunk.h
    ElementData.h
    EscriptDataset.h
    NodeData.h
    VisItControl.h
    vtkCellType.h
    weipa.h
""".split()

local_env = env.Clone()

if 'dudley' in env['domains'] or 'finley' in env['domains']:
    sources += ['FinleyDomain.cpp','FinleyElements.cpp','FinleyNodes.cpp']
    headers += ['FinleyDomain.h','FinleyElements.h','FinleyNodes.h']
    if 'dudley' in env['domains']:
        local_env.Append(CPPDEFINES = ['USE_DUDLEY'])
        local_env.Prepend(LIBS = ['dudley'])
    if 'finley' in env['domains']:
        local_env.Append(CPPDEFINES = ['USE_FINLEY'])
        local_env.Prepend(LIBS = ['finley'])

if 'ripley' in env['domains']:
    sources += ['RipleyDomain.cpp','RipleyElements.cpp','RipleyNodes.cpp']
    headers += ['RipleyDomain.h','RipleyElements.h','RipleyNodes.h']
    local_env.Append(CPPDEFINES = ['USE_RIPLEY'])
    local_env.Prepend(LIBS = ['ripley'])

if 'speckley' in env['domains']:
    sources += ['SpeckleyDomain.cpp','SpeckleyElements.cpp','SpeckleyNodes.cpp']
    headers += ['SpeckleyDomain.h','SpeckleyElements.h','SpeckleyNodes.h']
    local_env.Append(CPPDEFINES = ['USE_SPECKLEY'])
    local_env.Prepend(LIBS = ['speckley'])

if local_env['visit']:
    sources.append(['VisItData.cpp'])
    headers.append(['VisItData.h'])
    local_env.Append(CPPDEFINES = ['USE_VISIT'])
    local_env.AppendUnique(LIBS = ['simV2'])

if local_env['silo']:
    local_env.Append(CPPDEFINES = ['USE_SILO'])
    local_env.AppendUnique(LIBS = env['silo_libs'])

local_env.Prepend(LIBS = ['escript'])

if IS_WINDOWS:
    local_env.Append(CPPDEFINES = ['WEIPA_EXPORTS'])

include_path = Dir(module_name, local_env['incinstall'])
hdr_inst = local_env.Install(include_path, headers)

lib = local_env.SharedLibrary(module_name, sources)
lib_inst = local_env.Install(local_env['libinstall'], lib)

### Python wrapper ###
py_env = local_env.Clone()
py_env.Prepend(LIBS = [module_name])
py_lib_name = module_name + 'cpp'
py_lib = py_env.PythonModule(py_lib_name, 'weipacpp.cpp')

mod_path = Dir(module_name, local_env['pyinstall'])
mod_inst = py_env.Install(mod_path, py_lib)

build = env.Alias('build_weipa', [hdr_inst, lib, py_lib])
env.Alias('install_weipa', [build, lib_inst, mod_inst])

######################
### Plugin library ###
######################
visitplugin_env = env.Clone()
plugin_sources = """
    DataVar.cpp
    EscriptDataset.cpp
    FinleyDomain.cpp
    FinleyElements.cpp
    FinleyNodes.cpp
""".split()

visitplugin_env.Prepend(LIBS = ['escript'])
visitplugin_env.Append(CPPDEFINES = ['VISIT_PLUGIN', 'USE_FINLEY'])
visitplugin_env['OBJPREFIX']='reader_'

plugin_lib = visitplugin_env.SharedLibrary('escriptreader', plugin_sources)
plugin_inst = local_env.Install(local_env['libinstall'], plugin_lib)

build = env.Alias('build_escriptreader', plugin_lib)
env.Alias('install_escriptreader', [build, plugin_inst])

