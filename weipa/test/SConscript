
##############################################################################
#
# Copyright (c) 2003-2016 by The University of Queensland
# http://www.uq.edu.au
#
# Primary Business: Queensland, Australia
# Licensed under the Apache License, version 2.0
# http://www.apache.org/licenses/LICENSE-2.0
#
# Development until 2012 by Earth Systems Science Computational Center (ESSCC)
# Development 2012-2013 by School of Earth Sciences
# Development from 2014 by Centre for Geoscience Computing (GeoComp)
#
##############################################################################


Import('*')
local_env = env.Clone()

if local_env['cppunit']:
    # get the test source file names
    sources = Glob('*.cpp')
    testname='weipa_UnitTest'

    # build the executable
    local_env.Append(LIBS=['weipa', 'escript']+env['cppunit_libs'])
    if 'dudley' in env['domains']:
        local_env.Append(CPPDEFINES = ['USE_DUDLEY'])
        local_env.PrependUnique(LIBS = env['dudley_libs'])
    if 'finley' in env['domains']:
        local_env.Append(CPPDEFINES = ['USE_FINLEY'])
        local_env.PrependUnique(LIBS = env['finley_libs'])
    if 'ripley' in env['domains']:
        local_env.Append(CPPDEFINES = ['USE_RIPLEY'])
        local_env.PrependUnique(LIBS = env['ripley_libs'])
    if 'speckley' in env['domains']:
        local_env.Append(CPPDEFINES = ['USE_SPECKLEY'])
        local_env.PrependUnique(LIBS = env['speckley_libs'])
    if local_env['silo']:
        local_env.Append(CPPDEFINES = ['USE_SILO'])
        local_env.AppendUnique(LIBS = env['silo_libs'])
    program = local_env.Program(testname, sources)

    # run the tests - but only if test_targets are stale
    local_env.RunUnitTest(testname)

    # add unit test to target alias
    Alias('build_tests', program)
    Alias("run_tests", testname+'.passed')

    # add a group of tests
    from grouptest import GroupTest
    tgroup=GroupTest("weipacpp", "$BINRUNNER ", (), "", "$BUILD_DIR/weipa/test", ('./'+testname,))
    TestGroups.append(tgroup)

# configure python unit tests
local_env.SConscript('python/SConscript', duplicate=0)

