
########################################################
#
# Copyright (c) 2003-2008 by University of Queensland
# Earth Systems Science Computational Center (ESSCC)
# http://www.uq.edu.au/esscc
#
# Primary Business: Queensland, Australia
# Licensed under the Open Software License version 3.0
# http://www.opensource.org/licenses/osl-3.0.php
#
########################################################


import os
Import('*')

local_env = clone_env(env)

src_dir = local_env.Dir('.').srcnode().abspath
filenames = os.listdir(src_dir)
#
# files defining tests but are not running by itself:
#
testfiles = [x for x in filenames if x.startswith('test_') and os.path.splitext(x)[1] in ['.py'] ]
# 
# directories defining test data
# 
testdata_dir = [x for x in filenames if x.startswith('data_') ]
# 
#  files defining test runs (passing in a release)
# 
testruns = []
testruns += ['run_camera.py']
testruns += ['run_carpet.py']
testruns += ['run_carpet_with_lazy_evaluation.py']
testruns += ['run_contour.py']
testruns += ['run_contour_with_lazy_evaluation.py']
testruns += ['run_datacollector.py']
testruns += ['run_ellipsoid.py']
testruns += ['run_ellipsoid_with_lazy_evaluation.py']
testruns += ['run_escript_with_lazy_evaluation.py']
testruns += ['run_exporter.py']
testruns += ['run_image.py']
testruns += ['run_image_with_lazy_evaluation.py']
testruns += ['run_legend.py']
testruns += ['run_legend_with_lazy_evaluation.py']
testruns += ['run_light.py']
testruns += ['run_logo.py']
testruns += ['run_logo_with_lazy_evaluation.py']
testruns += ['run_map.py']
testruns += ['run_map_with_lazy_evaluation.py']
testruns += ['run_movie_with_lazy_evaluation.py']
testruns += ['run_rectangle.py']
testruns += ['run_scene.py']
testruns += ['run_streamline.py']
testruns += ['run_streamline_with_lazy_evaluation.py']
testruns += ['run_text.py']
testruns += ['run_velocity.py']
testruns += ['run_velocity_with_lazy_evaluation.py']
#
# files defining tests run locally (not as part of a release)
#
localtestruns = [x for x in filenames if not x.startswith('run_') and os.path.splitext(x)[1] in ['.py']]
#
# all test 
#
alltestruns = testruns + localtestruns
#
# test files are just compiled:
#
test_pyc = env.PyCompile(testfiles)
env.Alias('build_py_tests', test_pyc)

#
# run all tests:
#
try:
   import vtk
   VTK_AVAILABLE = True
except ImportError:
      VTK_AVAILABLE =False
      print "Warning: cannot import vtk. pyvisi tests are skipped."
       

#Add Unit Test to target alias
local_env.PrependENVPath('PYTHONPATH',str(env.Dir('#/build/$PLATFORM/pyvisi/test/python')))
local_env['ENV']['PYVISI_TEST_DATA_ROOT']=env.Dir('#/pyvisi/test/python').srcnode().abspath
local_env['ENV']['PYVISI_WORKDIR']=env.Dir('#/build/$PLATFORM/pyvisi/test/python').srcnode().abspath

if VTK_AVAILABLE: 
   env.Alias('local_py_tests',[os.path.splitext(x)[0]+'.passed' for x in alltestruns])
   env.Alias('py_tests', [os.path.splitext(x)[0]+'.passed' for x in testruns ])
   program = local_env.RunPyUnitTest(alltestruns)
 
   Depends(program, local_env['pyinstall'])
   # Depends(program, dep_lib) 
   Depends(program, 'build_py_tests') 

   from grouptest import *
   tgroup=GroupTest("$PYTHONRUNNER ",(("PYVISI_TEST_DATA_ROOT","$BATCH_ROOT/pyvisi/test/python"),("PYVISI_WORKDIR","$BUILD_DIR/pyvisi/test/python")),"$BUILD_DIR/pyvisi/test/python","$BATCH_ROOT/pyvisi/test/python",testruns)
   TestGroups.append(tgroup)