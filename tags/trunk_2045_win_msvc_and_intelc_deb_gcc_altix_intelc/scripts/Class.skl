# *****************************************************************************
# *                                                                           *
# *       COPYRIGHT  ACcESS 2004  -  All Rights Reserved                      *
# *                                                                           *
# * This software is the property of ACcESS. No part of this code             *
# * may be copied in any form or by any means without the expressed written   *
# * consent of ACcESS.  Copying, use or modification of this software         *
# * by any unauthorised person is illegal unless that person has a software   *
# * license agreement with ACcESS.                                            *
# *                                                                           *
# *****************************************************************************
#
# Skeleton for Class files
#
BeginMessage
Processing Class file generation skeleton
EndMessage

BeginUsage 2
Class skeleton expects two arguments <Classname> and <Namespace>

   <Classname> is the name of the class being generated
   <Namespace> is the namespace containing the generated class

EndUsage

BeginReplacements
<Classname> arg:0
<Namespace> arg:1
<YYYYMMDD> date:yyyymmdd
EndReplacements

BeginMessage
   Classname       : <Classname>
   Class Namespace : <Namespace>
EndMessage

BeginFileCheck
<Classname>.h
<Classname>.cpp
EndFileCheck

BeginFile <Classname>.h
/* 
 ******************************************************************************
 *                                                                            *
 *       COPYRIGHT  ACcESS 2004 -  All Rights Reserved                        *
 *                                                                            *
 * This software is the property of ACcESS. No part of this code              *
 * may be copied in any form or by any means without the expressed written    *
 * consent of ACcESS.  Copying, use or modification of this software          *
 * by any unauthorised person is illegal unless that person has a software    *
 * license agreement with ACcESS.                                             *
 *                                                                            *
 ******************************************************************************
*/
                                                                           
#if !defined  <Namespace>_<Classname>_<YYYYMMDD>_H
#define <Namespace>_<Classname>_<YYYYMMDD>_H

namespace <Namespace> {

/**
   \brief
   Give a short description of what <Classname> does.

   Description:
   Give a detailed description of <Classname>

   Template Parameters:
   For templates describe any conditions that the parameters used in the
   template must satisfy
*/
class <Classname> {

 public:

  /**
     \brief
     Default constructor for <Classname>

     Description:
     Default constructor for <Classname>

     Preconditions:
     Describe any preconditions

     Throws:
     Describe any exceptions thrown
  */
  <Classname>();

 protected:

 private:
};

} // end of namespace
#endif
EndFile

BeginFile <Classname>.cpp
/*
 ******************************************************************************
 *                                                                            *
 *       COPYRIGHT  ACcESS 2004 -  All Rights Reserved                        *
 *                                                                            *
 * This software is the property of ACcESS. No part of this code              *
 * may be copied in any form or by any means without the expressed written    *
 * consent of ACcESS.  Copying, use or modification of this software          *
 * by any unauthorised person is illegal unless that person has a software    *
 * license agreement with ACcESS.                                             *
 *                                                                            *
 ******************************************************************************
*/

#include "<Namespace>/<Classname>.h" 

namespace <Namespace> {

<Classname>::<Classname>() {
}

}  // end of namespace
EndFile

BeginMessage
Completed generating Class files
EndMessage


