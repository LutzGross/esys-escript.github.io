#!/bin/bash

# The test suite no longer runs as a PBS job (can't compile jobs on a
# compute node because the compilers are on local disk of the login node)

MAIL_RECIPIENTS="l.gross@uq.edu.au Peter.Hornby@csiro.au k.steube@uq.edu.au artak@uq.edu.au c.altinay@uq.edu.au j.fenwick1@uq.edu.au"
# MAIL_RECIPIENTS="k.steube@uq.edu.au"

NCPUS=4
TEST_DIR=/data1/ksteube/EscriptDev/AutoTests
TEST_NAME='all_tests'

RunDate=`date '+%Y_%m_%d'`	# Time stamp for log file names

START=`date '+%Y/%m/%d %H:%M'`

SCRIPT_NAME=$0

finish () {
  # state will be 'FAILURE' or 'SUCCESS'
  state="$1"
  message="$2"
  date
  # Clean up the sandbox
  cd $TEST_DIR
  /bin/rm -rf sandbox.$RunDate
  END=`date '+%Y/%m/%d %H:%M'`
  cat << END_MSG | mail -s "ESYS_TESTS $TEST_NAME $RunDate $state" $MAIL_RECIPIENTS
$message.
The tests ran from $START to $END on $NCPUS cores
See the log files in $TEST_DIR/Logs/$RunDate*
This mail was sent by $SCRIPT_NAME
running as $USER on `hostname`.
END_MSG
  # There are three ways to see errors:
  # egrep 'FAIL|Error:|error set =' $TEST_DIR/Logs/$RunDate.test.output
  if [ "x$state" = "xFAILURE" ]; then
    touch Logs/$RunDate.FAILURE
    exit 1
  fi
  exit 0
}


cat /dev/null > $TEST_DIR/Logs/$RunDate.test.output \
					|| finish FAILURE "Could not create out_file $TEST_DIR/Logs/$RunDate.test.output"

# Save output in Logs/date.test.output
exec 1> $TEST_DIR/Logs/$RunDate.test.output 2>&1


cd $TEST_DIR				|| finish FAILURE "Could not cd to WorkDir $TEST_DIR"

test -d Logs || mkdir Logs

umask 022

test -d sandbox.$RunDate		&& finish FAILURE "Today's sandbox already exists"
mkdir sandbox.$RunDate			|| finish FAILURE "Could not mkdir sandbox"
cd sandbox.$RunDate			|| finish FAILURE "Could not cd to sandbox"

# Load modules
. /usr/share/modules/init/sh
module load escript/current
module load subversion-1.3.1
module load pbs

echo "Checking out esys13/trunk"
svn checkout svn+ssh://shake200.esscc.uq.edu.au/home/www_svn/repos/esys13/trunk >> $TEST_DIR/Logs/$RunDate.test.output 2>&1 \
					|| finish FAILURE "Could not check out esys13/trunk"

export LD_LIBRARY_PATH="$TEST_DIR/lib:$LD_LIBRARY_PATH"
export PYTHONPATH="$TEST_DIR:$PYTHONPATH"

# How many threads? One per CPU.
export OMP_NUM_THREADS=1

# Run the tests
echo "Running the tests $TEST_NAME"
cd trunk				|| finish FAILURE "Could not cd to trunk"
scons dodebug=no useMPI=no -j $NCPUS $TEST_NAME >> $TEST_DIR/Logs/$RunDate.test.output 2>&1 \
					|| finish FAILURE "Could not run scons $TEST_NAME"

echo "Cleaning up after the tests"

# Delete files older than 60 days
find $TEST_DIR -ctime +60 -exec rm -f {} \;

finish SUCCESS "Successfully ran 'scons $TEST_NAME' on `hostname`"

